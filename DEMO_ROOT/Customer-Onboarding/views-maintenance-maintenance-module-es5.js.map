{"version":3,"sources":["webpack:///src/app/views/maintenance/TransactionDenominationHistory/transaction-denomination-history/transaction-denomination-history.component.ts","webpack:///src/app/views/maintenance/TransactionDenominationHistory/transaction-denomination-history/transaction-denomination-history.component.html","webpack:///src/app/views/maintenance/city-maintenance/city-maintenance.component.ts","webpack:///src/app/views/maintenance/city-maintenance/city-maintenance.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/currency-holiday/currency-holiday.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/currency-holiday/currency-holiday.component.html","webpack:///src/app/views/maintenance/kiosk-login/kiosk-login.component.ts","webpack:///src/app/views/maintenance/kiosk-login/kiosk-login.component.html","webpack:///src/app/views/maintenance/biller-info-maintenance/add-or-edit-biller-info/add-or-edit-biller-info.component.ts","webpack:///src/app/views/maintenance/biller-info-maintenance/add-or-edit-biller-info/add-or-edit-biller-info.component.html","webpack:///src/app/views/maintenance/till-vault-ccy-bal/till-vault-ccy-popup/till-vault-ccy-popup.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-bal/till-vault-ccy-popup/till-vault-ccy-popup.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/holiday-maintenance.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/holiday-maintenance.component.html","webpack:///src/app/views/maintenance/txncharges-maintenance/txncharges-maintenance.component.ts","webpack:///src/app/views/maintenance/txncharges-maintenance/txncharges-maintenance.component.html","webpack:///src/app/views/maintenance/entity-maintenance/add-entity-details/add-entity-details.component.ts","webpack:///src/app/views/maintenance/entity-maintenance/add-entity-details/add-entity-details.component.html","webpack:///src/app/shared/animations/rumango-animations.ts","webpack:///src/app/views/maintenance/kiosk-login/add-kiosk-login-maintenance/add-kiosk-login-maintenance.component.ts","webpack:///src/app/views/maintenance/kiosk-login/add-kiosk-login-maintenance/add-kiosk-login-maintenance.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/holiday-list-dialog/holiday-list-dialog.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/holiday-list-dialog/holiday-list-dialog.component.html","webpack:///src/app/views/maintenance/till-vault-status/till-vault-status-summary/till-vault-status-summary.component.ts","webpack:///src/app/views/maintenance/till-vault-status/till-vault-status-summary/till-vault-status-summary.component.html","webpack:///src/app/views/maintenance/country-state-maintenance/country-state-maintenance.component.ts","webpack:///src/app/views/maintenance/country-state-maintenance/country-state-maintenance.component.html","webpack:///src/app/views/maintenance/bank/bank-list/bank-list.component.ts","webpack:///src/app/views/maintenance/bank/bank-list/bank-list.component.html","webpack:///src/app/views/maintenance/maintenance-home.component.ts","webpack:///src/app/views/maintenance/maintenance-home.component.html","webpack:///src/app/views/maintenance/customer-category/cutomer-category-create/cutomer-category-create.component.ts","webpack:///src/app/views/maintenance/customer-category/cutomer-category-create/cutomer-category-create.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/common-holiday/common-holiday.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/common-holiday/common-holiday.component.html","webpack:///src/app/views/maintenance/base-denomination/base-denomination-summary/base-denomination-summary.component.ts","webpack:///src/app/views/maintenance/base-denomination/base-denomination-summary/base-denomination-summary.component.html","webpack:///src/app/views/maintenance/till-vault-master/till-vault-master-summary/till-vault-master-summary/till-vault-master-summary.component.ts","webpack:///src/app/views/maintenance/till-vault-master/till-vault-master-summary/till-vault-master-summary/till-vault-master-summary.component.html","webpack:///src/app/views/maintenance/transaction-cash-master/txn-cash-master-table-popup/txn-cash-master-table-popup.component.ts","webpack:///src/app/views/maintenance/transaction-cash-master/txn-cash-master-table-popup/txn-cash-master-table-popup.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/clearing-holiday/clearing-holiday.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/clearing-holiday/clearing-holiday.component.html","webpack:///src/app/views/maintenance/currency-pair-maintenance/add-currency-pair-maintanence/add-currency-pair-maintanence.component.ts","webpack:///src/app/views/maintenance/currency-pair-maintenance/add-currency-pair-maintanence/add-currency-pair-maintanence.component.html","webpack:///src/app/views/maintenance/role-maintenance/role-maintenance.component.ts","webpack:///src/app/views/maintenance/role-maintenance/role-maintenance.component.html","webpack:///src/app/views/maintenance/menus/add-edit-menu-details/add-edit-menu-details.component.ts","webpack:///src/app/views/maintenance/menus/add-edit-menu-details/add-edit-menu-details.component.html","webpack:///src/app/views/maintenance/branch/ngx-table-popup/ngx-table-popup.component.ts","webpack:///src/app/views/maintenance/branch/ngx-table-popup/ngx-table-popup.component.html","webpack:///src/app/views/maintenance/main-home/main-home.component.ts","webpack:///src/app/views/maintenance/main-home/main-home.component.html","webpack:///src/app/views/maintenance/account-type/account-type-crud-table/account-type-crud-table.component.ts","webpack:///src/app/views/maintenance/account-type/account-type-crud-table/account-type-crud-table.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/add-holiday/add-holiday.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/add-holiday/add-holiday.component.html","webpack:///src/app/views/maintenance/customer-category/customer-category.component.ts","webpack:///src/app/views/maintenance/customer-category/customer-category.component.html","webpack:///src/app/views/maintenance/bank/bank-details/bank-details.component.ts","webpack:///src/app/views/maintenance/bank/bank-details/bank-details.component.html","webpack:///src/app/views/maintenance/tillVaultBranchMap/till-vault-branch-map/till-vault-branch-map.component.ts","webpack:///src/app/views/maintenance/tillVaultBranchMap/till-vault-branch-map/till-vault-branch-map.component.html","webpack:///src/app/views/maintenance/charge-maint-summary/add-charge-mant/add-charge-mant.component.ts","webpack:///src/app/views/maintenance/charge-maint-summary/add-charge-mant/add-charge-mant.component.html","webpack:///src/app/views/maintenance/currency-maint-summary/currency-maint-summary.component.ts","webpack:///src/app/views/maintenance/currency-maint-summary/currency-maint-summary.component.html","webpack:///src/app/views/maintenance/till-vault-status/till-vault-status/till-vault-status.component.ts","webpack:///src/app/views/maintenance/till-vault-status/till-vault-status/till-vault-status.component.html","webpack:///src/app/views/maintenance/currency-paira-rates-maintenance/add-currency-pair-rates-maintenance/add-currency-pair-rates-maintenance.component.ts","webpack:///src/app/views/maintenance/currency-paira-rates-maintenance/add-currency-pair-rates-maintenance/add-currency-pair-rates-maintenance.component.html","webpack:///src/app/views/maintenance/TransactionDenominationHistory/transaction-denomination-summary/transaction-denomination-summary.component.ts","webpack:///src/app/views/maintenance/TransactionDenominationHistory/transaction-denomination-summary/transaction-denomination-summary.component.html","webpack:///src/app/views/maintenance/user-maintenance/user-maintenance.component.ts","webpack:///src/app/views/maintenance/user-maintenance/user-maintenance.component.html","webpack:///src/app/views/maintenance/main-home/sub-menu/sub-menu.component.ts","webpack:///src/app/views/maintenance/main-home/sub-menu/sub-menu.component.html","webpack:///src/app/views/maintenance/till-vault-master/till-vault-master-popup/till-vault-master-popup/till-vault-master-popup.component.ts","webpack:///src/app/views/maintenance/till-vault-master/till-vault-master-popup/till-vault-master-popup/till-vault-master-popup.component.html","webpack:///src/app/views/maintenance/tillVaultBranchMap/till-vault-branch-map-summary/till-vault-branch-map-summary.component.ts","webpack:///src/app/views/maintenance/tillVaultBranchMap/till-vault-branch-map-summary/till-vault-branch-map-summary.component.html","webpack:///src/app/views/maintenance/role-maintenance-summary/role-maintenance-summary.component.ts","webpack:///src/app/views/maintenance/role-maintenance-summary/role-maintenance-summary.component.html","webpack:///src/app/views/maintenance/transaction-type/transaction-type-crud-table/transaction-type-crud-table.component.ts","webpack:///src/app/views/maintenance/transaction-type/transaction-type-crud-table/transaction-type-crud-table.component.html","webpack:///src/app/views/maintenance/state-maintenance/state-popup/state-popup.component.ts","webpack:///src/app/views/maintenance/state-maintenance/state-popup/state-popup.component.html","webpack:///src/app/views/maintenance/till-vault-config/till-vault-summary/till-vault-summary.component.ts","webpack:///src/app/views/maintenance/till-vault-config/till-vault-summary/till-vault-summary.component.html","webpack:///src/app/shared/pipes/filter.pipe.ts","webpack:///src/app/views/maintenance/txncharges-maintenance/add-txncharges/add-txncharges.component.ts","webpack:///src/app/views/maintenance/txncharges-maintenance/add-txncharges/add-txncharges.component.html","webpack:///src/app/views/maintenance/product-maintenance/product-maintenance.component.ts","webpack:///src/app/views/maintenance/product-maintenance/product-maintenance.component.html","webpack:///src/app/views/maintenance/entity-maintenance/entity-maintenance.component.ts","webpack:///src/app/views/maintenance/entity-maintenance/entity-maintenance.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/add-branch/add-branch.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/add-branch/add-branch.component.html","webpack:///src/app/views/maintenance/transaction-type/transaction-type-table-popup/transaction-type-popup-table/transaction-type-popup-table.component.ts","webpack:///src/app/views/maintenance/transaction-type/transaction-type-table-popup/transaction-type-popup-table/transaction-type-popup-table.component.html","webpack:///src/app/views/maintenance/customer-charge-category/cutomer-charge-category-create/cutomer-charge-category-create.component.ts","webpack:///src/app/views/maintenance/customer-charge-category/cutomer-charge-category-create/cutomer-charge-category-create.component.html","webpack:///src/app/views/maintenance/customer-charge-category/customer-charge-category.component.ts","webpack:///src/app/views/maintenance/customer-charge-category/customer-charge-category.component.html","webpack:///src/app/views/maintenance/account-type/account-type-table-popup/account-type-table-popup.component.ts","webpack:///src/app/views/maintenance/account-type/account-type-table-popup/account-type-table-popup.component.html","webpack:///src/app/views/maintenance/product-maintenance/add-product-maintenance/add-product-maintenance.component.ts","webpack:///src/app/views/maintenance/product-maintenance/add-product-maintenance/add-product-maintenance.component.html","webpack:///src/app/views/maintenance/denominationMaster/demon-master-crud-ngx-table/denom-master-table-popup/denom-master-table-popup.component.ts","webpack:///src/app/views/maintenance/denominationMaster/demon-master-crud-ngx-table/denom-master-table-popup/denom-master-table-popup.component.html","webpack:///src/app/views/maintenance/add-edit-security-policy/add-edit-security-policy.component.ts","webpack:///src/app/views/maintenance/add-edit-security-policy/add-edit-security-policy.component.html","webpack:///src/app/shared/services/send-holiday-screen.service.ts","webpack:///src/app/views/maintenance/state-maintenance/state-maintenance.component.ts","webpack:///src/app/views/maintenance/state-maintenance/state-maintenance.component.html","webpack:///src/app/views/maintenance/user-maintenance/add-user-maintenance/add-user-maintenance.component.ts","webpack:///src/app/views/maintenance/user-maintenance/add-user-maintenance/add-user-maintenance.component.html","webpack:///src/app/views/maintenance/till-vault-config/till-vault-popup/till-vault-popup.component.ts","webpack:///src/app/views/maintenance/till-vault-config/till-vault-popup/till-vault-popup.component.html","webpack:///src/app/views/maintenance/menus/menus.component.ts","webpack:///src/app/views/maintenance/menus/menus.component.html","webpack:///src/app/views/maintenance/menus/menu-details/menu-details.component.ts","webpack:///src/app/views/maintenance/menus/menu-details/menu-details.component.html","webpack:///src/app/views/maintenance/maintenance.module.ts","webpack:///src/app/views/maintenance/till-vault-ccy-demon-bal/till-vault-ccy-demon-bal.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-demon-bal/till-vault-ccy-demon-bal.component.html","webpack:///src/app/views/maintenance/branch/crud-ngx-table.component.ts","webpack:///src/app/views/maintenance/branch/crud-ngx-table.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/custom-calender/custom-calender.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/custom-calender/custom-calender.component.html","webpack:///src/app/views/maintenance/add-securitypolicy/add-securitypolicy.component.ts","webpack:///src/app/views/maintenance/add-securitypolicy/add-securitypolicy.component.html","webpack:///src/app/views/maintenance/currency-paira-rates-maintenance/currency-paira-rates-maintenance.component.ts","webpack:///src/app/views/maintenance/currency-paira-rates-maintenance/currency-paira-rates-maintenance.component.html","webpack:///src/app/views/maintenance/city-maintenance/add-edit-city/add-edit-city.component.ts","webpack:///src/app/views/maintenance/city-maintenance/add-edit-city/add-edit-city.component.html","webpack:///src/app/views/maintenance/till-vault-ccy-demon-bal/add-tillvault-ccy-demonbal/add-tillvault-ccy-demonbal.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-demon-bal/add-tillvault-ccy-demonbal/add-tillvault-ccy-demonbal.component.html","webpack:///src/app/views/maintenance/charge-maint-summary/charge-maint-summary.component.ts","webpack:///src/app/views/maintenance/charge-maint-summary/charge-maint-summary.component.html","webpack:///src/app/views/maintenance/transaction-cash-master/txn-cash-master-crud-table/txn-cash-master-crud-table.component.ts","webpack:///src/app/views/maintenance/transaction-cash-master/txn-cash-master-crud-table/txn-cash-master-crud-table.component.html","webpack:///src/app/views/maintenance/biller-info-maintenance/biller-info-maintenance.component.ts","webpack:///src/app/views/maintenance/biller-info-maintenance/biller-info-maintenance.component.html","webpack:///src/app/views/maintenance/audit-log/audit-log.component.ts","webpack:///src/app/views/maintenance/audit-log/audit-log.component.html","webpack:///src/app/views/maintenance/country-state-maintenance/country-state-popup/country-state-popup.component.ts","webpack:///src/app/views/maintenance/country-state-maintenance/country-state-popup/country-state-popup.component.html","webpack:///src/app/views/maintenance/workflow-maintenance/workflow-maintenance.component.ts","webpack:///src/app/views/maintenance/workflow-maintenance/workflow-maintenance.component.html","webpack:///src/app/views/maintenance/security-policy/security-policy.component.ts","webpack:///src/app/views/maintenance/security-policy/security-policy.component.html","webpack:///src/app/views/maintenance/currency-maint-summary/add-currency-maint/add-currency-maint.component.ts","webpack:///src/app/views/maintenance/currency-maint-summary/add-currency-maint/add-currency-maint.component.html","webpack:///src/app/views/maintenance/till-vault-ccy-bal-history/till-vault-ccybal-hispopup/till-vault-ccybal-hispopup.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-bal-history/till-vault-ccybal-hispopup/till-vault-ccybal-hispopup.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/custom-calendar-arr-type/custom-calendar-arr-type.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/custom-calendar-arr-type/custom-calendar-arr-type.component.html","webpack:///src/app/views/maintenance/till-vault-ccy-bal-history/till-vault-ccybal-his-summary/till-vault-ccybal-his-summary.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-bal-history/till-vault-ccybal-his-summary/till-vault-ccybal-his-summary.component.html","webpack:///src/app/views/maintenance/tillVaultDenomination/till-vault-denomination/till-vault-denomination.component.ts","webpack:///src/app/views/maintenance/tillVaultDenomination/till-vault-denomination/till-vault-denomination.component.html","webpack:///src/app/views/maintenance/maintenance-routing.module.ts","webpack:///src/app/views/maintenance/base-denomination/base-denomination-popup/base-denomination-popup.component.ts","webpack:///src/app/views/maintenance/base-denomination/base-denomination-popup/base-denomination-popup.component.html","webpack:///src/app/views/maintenance/currency-pair-maintenance/currency-pair-maintenance.component.ts","webpack:///src/app/views/maintenance/currency-pair-maintenance/currency-pair-maintenance.component.html","webpack:///src/app/views/maintenance/menus/menu-dialog/menu-dialog.component.ts","webpack:///src/app/views/maintenance/menus/menu-dialog/menu-dialog.component.html","webpack:///src/app/views/maintenance/denominationMaster/demon-master-crud-ngx-table/demon-master-crud-ngx-table.component.ts","webpack:///src/app/views/maintenance/denominationMaster/demon-master-crud-ngx-table/demon-master-crud-ngx-table.component.html","webpack:///src/app/views/maintenance/till-vault-ccy-bal/till-vault-ccy-summry/till-vault-ccy-summry.component.ts","webpack:///src/app/views/maintenance/till-vault-ccy-bal/till-vault-ccy-summry/till-vault-ccy-summry.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/branch-holiday.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/branch-holiday.component.html","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/branch-holiday-popup/branch-holiday-popup.component.ts","webpack:///src/app/views/maintenance/holiday-maintenance/branch-holiday/branch-holiday-popup/branch-holiday-popup.component.html","webpack:///src/app/views/maintenance/tillVaultDenomination/till-vault-denomination-summary/till-vault-denomination-summary.component.ts","webpack:///src/app/views/maintenance/tillVaultDenomination/till-vault-denomination-summary/till-vault-denomination-summary.component.html"],"names":["TransactionDenominationHistoryComponent","data","dialogRef","fb","apiService","countryCurrency","tillId","branchCode","bankCode","DenominationID","payload","id","buildItemForm","currency","till","item","itemForm","group","txtReference","required","txtDate","Date","denomCode","denomUnit","payloadOBJ","value","close","event","pattern","inputChar","String","fromCharCode","charCode","test","preventDefault","submit","alphakeyPress","selector","templateUrl","styleUrls","CityMaintenanceComponent","router","_liveAnnouncer","downloadService","snack","loader","ls","confirmService","dataSource","displayedColumns","filterByOption","key","selectedFilterIndex","loggedInUser","getItem","getAllCity","paginator","sort","open","fetchAllCity","subscribe","i","length","authStatus","recordStatus","userdata","filterBy","e","filterTable","applyFilter","index","filterPredicate","filter","toLocaleLowerCase","includes","searchVal","nativeElement","filterValue","target","trim","toLowerCase","sortState","direction","announce","console","log","path","files","file","uploadData","FormData","append","uploadExelFile","response","duration","verticalPosition","horizontalPosition","downloadFiles","cityId","navigate","queryParams","city","confirm","message","cityName","res","deleteCity","goBack","onFileChange","downloadRecord","doFilter","clearFilter","addEditCity","announceSortChange","CurrencyHolidayComponent","screenService","dialog","entityCode","users","getBrancheHoliday","getItems","getItemSub","unsubscribe","items","holidayScr","next","getCurrencyHolidayInfo","isNew","title","width","disableClose","afterClosed","updateBranchHolidayDetails","getBranchCode","resp","element","deleteCurrencyHoliday","err","status","setItem","isEdit","addNew","commonHoliday","KioskLoginComponent","getProductInfo","getKioskLoginDetails","productName","deleteKioskLoginById","AddOrEditBillerInfoComponent","cdr","dataService","route","readorWrite","queryParamMap","params","get","getBillerInfoById","auditLogData","setAuditLogData","sendClickEvent","userName","getBankCode","getEnityCode","billerMaintenance","billerAccount","billerCode","billerName","lastModifiedDate","authBy","authDate","createdBy","createdDate","modifiedBy","noOfModification","oneTimeAuth","version","markForCheck","detectChanges","operation","fire","text","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","isConfirmed","deleteBillerInfo","updateBiller","form","saveOrUpdateBillerInfo","branchCodeResp","bankCodeResp","push","fetchEntityDetails","entityCodeResp","branch","TillVaultCcyPopupComponent","arrayCurrency","isAuditData","currentUser","entity","setTimeout","CcyBalStatus","JSON","parse","localStorage","undefined","auditData","getCurrency","getTillId","getEntityCode","tillccyBalForm","glAccount","openBalInAcy","openBalInLcy","balInAcy","balInLcy","inp","keyCode","invalid","tillData","find","x","tillVaultCode","saveoftillVaultCurrencyBal","_","removetillVaultCurrencyBal","getAuditLogsForCurrencybal","removeItem","getCurrencyDetails","currencyId","tillOrVault","getTillData","DATA","subtitle","state","url","HolidayMaintenanceComponent","changeDetectorRef","_location","document","getElementById","style","backgroundColor","obs","connect","TxnchargesMaintenanceComponent","doc","head","body","forEach","u","row","chargeAmount","chargeCurrency","txnDate","didDrawCell","prepare","save","uploadTxnChargesFile","getTxnCharge","getTxnChargeDetails","deleteTxnChargesById","uploadtxnCharges","convert","AddEntityDetailsComponent","countries","states","cities","isReadOnly","isView","show","editNow","editEntityById","getStateName","country","getCityName","getCountryName","entityMaintenance","entityName","parentBankCode","denomRequired","mobile","compose","telephone","pincode","getAllCountries","countryName","getStateByCountry","stateName","getDropDownValues1","deleteEntity","getAuditLogsForEntity","updateEntityDetails","error","_keyPress","keyPressAlphanumeric","auditLog","reusable","opacity","transform","delay","scale","y","z","rumangoAnimations","display","AddKioskLoginMaintenanceComponent","formBuilder","entityCodeArr","kioskEnable","getEntityDropdown","entityIsEdit","getKioskDataById","kioskSystemEnable","otpInfo","map","otp","emailId","pushEmail","mobileNumber","pushMobile","addKioskDetailsForm","kioskSystemCode","kioskSystemName","passcode","logoutCode","otpEmailData","otpMobileData","valueChanges","val","setValidators","controls","f","removeAt","m","formValue","otpData","kioskSystemId","createKioskBranch","getAuditLogsForKioskMaintenance","HolidayListDialogComponent","myControl","markAsHoliday","options","date","fetchBranchHolidayByCalendarDateDetails","filteredOptions","pipe","_filter","Object","keys","holidayData","addBranchHoliday","calenderYear","description","holidayType","option","setValue","holidayList","action","details","responseDate","format","calenderDate","dateUpdated","setHolidayData","disableSave","goToClose","panelClass","onCheckOfMarAsHoiday","saveHoliday","reset","TillVaultStatusSummaryComponent","fetchTillVaultStatusInfoList","toString","fetchTellVaultStatus","getTillVaultStatusById","fetchVaultStatus","stringify","deleteTillVaultStatusById","tillVaultStatusSummery","animations","CountryStateMaintenanceComponent","getAllBranch","deleteCountry","countryStateMaintenance","openPopUp","BankListComponent","getAllBanks","shareBankItem","bankName","deleteBank","bankList","MaintenanceHomeComponent","isSidenavOpen","sideNav","profilePanel","CutomerCategoryCreateComponent","api","getCustomerCategoryCode","getCustomerCategoryById","categoryCode","categoryDescription","categoryName","isActive","getCustomerCategory","icon","deleteCustomerCategory","getDropDownValues","updateCustomerAuditLog","saveCustomerCategory","bankC","CommonHolidayComponent","selectedItem","selectedItemRow","disabled","monthArr","newYearArrayany","months","weekdaysInWords","weekdays","monthEnds","viewDate","yearlyCalendarArr","calendarDate","daysFinalArr","calendarArrFinal","confirmRes","daysFinalArrNew","calendarArrFinalNew","selected","yearArr","count","checks","disable","rowChecks","screen","year","month","dayAmount","monthNumsArr","daysArr","daysArrNew","endOffSet","dateOffSet","getDay","calenderArr","fillInMonth","currentMonth","getMonth","currentMonthDate","getFullYear","fillInYear","j","k","i1","i2","col","checked","findIndex","buildCalenderArr","rowIdx","isRowChecked","calendar","colIdx","colChecked","rowChecked","dateValue","d","splice","indexOf","dateSample","v","thirdCalenderArray","assignFormValue","BaseDenominationSummaryComponent","baseDenomDetails","getDenomInfoList","baseDenominationId","denomination","isNaN","removeBaseDenominationById","getDenomId","getDenomInfoById","fetchBaseDenomValue","baseDenominationMaintenance","TillVaultMasterSummaryComponent","getTillVaultMaster","tillVaultVal","tillVaultMasterValues","bnkCode","getTillVaultById","fetchTillVault","sendNavParam","deleteTillVaultMaster","masterpdf","TxnCashMasterTablePopupComponent","txnproductArr","TrxnCashStatus","txnCashMasterForm","txnProduct","txnReference","account","accCurrency","accBalance","instrument","txnCurrency","txnAmount","ofsCurrency","ofsAmount","forexRate","forexNegoRate","remarks","loggedInuser","currencyCode","deleteTxnCashMaster","getAuditLogsForTransactionCashMaster","convertDate","upsertTxnCashMaster","ClearingHolidayComponent","http","getBranchHolidayInfo","getClearingHoliday","loading","deleteClearingHoliday","getClearingHolidayInfo","AddCurrencyPairMaintanenceComponent","currencies","getBranchCurrency","getCurrencyPairById","branchForm","currency1","currency2","throughCurrency","rateDirect","spreadAdder","saveCurrencyPair","deleteCurrencyPair","getAuditLogsForCurrencyPair","RoleMaintenanceComponent","selectAllChecked","hideSelect","isDisable","screenName","editFlag","enableFinish","selectedCheckbox","getarr","permissions","childarr","childPer","parentSelector","checkedcheckbox","tellerRoleName","allRoles","allRolesPer","isSelectedAll","entityArr","bankCodeArr","branchCodeArr","tabArr","editMenuMaintenance","tabName","toUpperCase","fetchRoleById","roleInfo","testvar","roleTab","screenInfo","permissionInfo","permissionId","screenId","tabInfo","tabData","parentId","tabSelection","childPermission","roleName","$event","isChecked","roleScreenList","roleForm","array","createPermissionFields","roleId","selectAllRole","roleDesc","branchName","checkbox","tabIndex","roleValues","selectedTabId","selectedItemLength","role","some","roleObj","parentPermission","selectedrole","saveRole","getAuditLogsForRoleMaintenance","tabId","name","getTabDetails","getPermissionInfo","selectAllreturn","deleteRole","getBankInfoByEntityCode","getBranchCode1","AddEditMenuDetailsComponent","menuIsEdit","parentMenus","buildMenuForm","getParentMenus","menuDetailsForm","screenCode","routing","getMaintenanceParentMenu","upsertMenu","NgxTablePopupComponent","banks","getBranchById","branchCcy","externalSystemBranchCode","centralBankAccount","currencyChestAccount","address1","address2","minLength","maxLength","getBankCode1","_list","which","fetchAuthBankInfo","bankDetails","updateBranchDetails","deleteBranch","getAuditLogsForBranch","bank","value1","keyPressEmail","shortName","MainHomeComponent","jwtService","filteredStatus","maintenanceMenus","compPermissions","getMainMenus","user","getUser","fetchTellerProfileInfo","disconnect","sortedusers","a","b","nameA","nameB","getMaintenanceMenu","alpha","AccountTypeCrudTableComponent","accountTypeName","fetchAccountTypeInfo","deleteAccountType","accountTypeId","accountTypeMaintenance","AddHolidayComponent","icBranchHolidayModel","resetFormSubject","checkNoChanges","loadData","editeditBranchHoliday","dateList","holidayModelResp","editCurrencyHoliday","getCurrencyCode","back","params1","findByCalenderYearAndEntityCodeAndBankCodeAndBranchCode","holidayModel","addBranchHolidayFormData","findByCalenderYearAndEntityCodeAndBankCodeAndCurrencyCode","upsertCurrencyHolidayDetails","getAuditLogsForHolidayBranch","getAuditLogsForCurrencyBranch","Error","fetchCurrencyMaintDetails","currencyResp","entityC","doSomething","CustomerCategoryComponent","cutomerCategoryMasterValues","fetchcutomerCategory","BankDetailsComponent","bankItem","isAllSameDigitVal","getBankItem","buildBankForm","bankForm","headOfficeBrn","swiftCode","getAuditLogsForBank","entityData","entityValue","createOrUpdateBank","number","_keyPressForAlphabets","_keyPress1","isAllSameDigit","TillVaultBranchMapComponent","vault","authEntityCode","vaultItem","getParentVault","tillVaultBranchMapForm","locked","parentTillVault","primaryVault","deleteTellerVaultBrnMap","getAuditLogsFortillvaulmap","saveTellerVaultBranchMap","AddChargeMantComponent","productCodeArr","currencyCodeArr","accountClassArr","customerArr","terminalArr","getBankDropdown","getBranchDropdown","getProductDropdown","getCurrencyDropdown","getAccountDropdown","getCustomerDropdown","getTerminalDropdown","chargeMaintIsEdit","chargeId","editChargeMaintById","chargeMaint","accountClass","source","terminal","productCode","customerGroup","rateClass","rateType","amountBasicBase","bankData","branchData","getProductDetails","productCodeResp","productData","currencyCodeResp","currencyData","fetchAccountClassDetails","accountClassResp","accountClassData","fetchCustomerGroupDetails","customerResp","customerData","fetchTerminalDetails","terminalResp","terminalData","upsertChargeMaintDetails","deleteChargeMaint","updateAuditLogForChargeMaint","customer","CurrencyMaintSummaryComponent","filteredDdata","deleteCurrencyMaint","currencyMaintenance","TillVaultStatusComponent","vaultStatus","tillVaultStatusDetails","tillVaultForm","userId","tillVaultStatus","tvOpenTime","tvClosingTime","getAuditLogsFortillvaultStatus","openTime","closeTime","upsertTillVaultStatus","AddCurrencyPairRatesMaintenanceComponent","minDate","currencyPair","currencyPairRateIsEdit","getCurrencyPairRatesById","fetchCurrencyPair","rateDate","currencyPairId","rateSeq","buySpread","sellSpread","midRate","buyRate","sellRate","startDate","saveCurrencyPairRates","pairRateId","updateAuditLogsForCurrencyPairRates","getCurrencyPair","TransactionDenominationSummaryComponent","getTransactionDenomination","saveoftransDenom","deleteTransactionDenomination","getCountryValues","UserMaintenanceComponent","fetchUserInfo","getUserInfo","deleteUserById","SubMenuComponent","getMenus","submenus","TillVaultMasterPopupComponent","tillVaultDesc","getAuditLogsFortillvaultMaster","saveTillVaultMaster","TillVaultBranchMapSummaryComponent","uploadFile","getTellVaultBranchMap","arr","autoTable","theme","output","fetchTellVaultBranchMap","getTellerVaultBranchMap","fetchTellerVaultBranchMap","vaultData","parentVaultId","fetchBrnMap","tillVaultBranchMaping","RoleMaintenanceSummaryComponent","fetchRoleSummary","currencyPairMaintValues","TransactionTypeCrudTableComponent","fetchTransactionTypeInfo","upsertTransactionType","transactionTypeCode","deleteTransactionType","transactionTypeId","StatePopupComponent","showLoader","isStatecode","isStatecode2","countryId","countryIsEdit","selectedCountryCode","getCountryById","countryIdentity","getStateById","isStateCodePresent","respo","isStateCode2Present","deleteState","getAuditLogsForState","stateMaintenance","upsertStateDetails","countryCode","stateCode","stateCode2","stateNumCode","isStatePresent","Onlynumber","TillVaultSummaryComponent","getTillVaultConfigUpload","getvaultConfiguration","gettillVaultResp","getTillVaultConfigById","removetillVaultConfig","fetchtillVaultConfigById","fetchVaultConfig","uploadtillvaultconfig","tillVaultConfiguration","isArray","Array","FilterPipe","search","entries","obj","AddTxnchargesComponent","chargeCurrencyArr","addTxnChargesForm","chargeDesc","getCountrynameValues","getTxnChargesById","getAuditLogsForTransactioncharge","parseInt","updateTxnChargeDetails","ProductMaintenanceComponent","deleteProductById","EntityMaintenanceComponent","userData","entityMaintenancePage","AddBranchComponent","BranchHolidayForm","transactionDate","now","dateStringWithTime","convertedyear","slice","convertMonth","conv1Month","convertCalender","conv1Calender","calenderMonth","TransactionTypePopupTableComponent","transactionTypeName","transactionTypeDescription","CutomerChargeCategoryCreateComponent","getChargeCategoryCode","getCustomerChargeCategoryById","chargeCategoryCode","chargeCategory","deleteCustomerChargeCategory","updateCustomerChargeAuditLog","saveCustomerChargeCategory","CustomerChargeCategoryComponent","getCustomerChargeCategory","AccountTypeTablePopupComponent","fetchAccountTypeById","accTypeStatus","accountTypeDescription","creatorId","getAuditLogsForAccountType","upsertAccountType","AddProductMaintenanceComponent","isProductCode","maxDate","addProductForm","getProductById","effectiveDate","expiryDate","getAuditLogsForProductMaintenance","endDate","updateProductDetails","isProductCodePresent","DenomMasterTablePopupComponent","patternValidation","denomMasterStatus","getCurrencyValue","denomDesc","denomValue","saveDenomMaster","deleteDenomMaster","getAuditLogsForDenominationMaster","AddEditSecurityPolicyComponent","buildForm","fetchSecurityPolicy","pswdComplexSplc","securityForm","activeEdit","maxInvLogins","maxPswdLength","minPswdLength","modifiedTime","notifyPasswordExpiryInDays","firstTimeAuth","pswdComplexLcase","pswdComplexNum","pswdComplexUcase","pswdExpiry","pswdReuseAft","passwordGenerationType","upsertSecurityPolicy","getAuditLogsSecurityPolicy","numberOnly","SendHolidayScreenService","providedIn","StateMaintenanceComponent","demoData","getAllState","AddUserMaintenanceComponent","spinner","isPassword","hide","errorMsg","isDisabledSave","editable","getRoleId","buildUserForm","getUserId","tillVaultData","userMaintenance","encryptedPassword","getSecurityPolicyDetails","securityPolicyData","fetchAuthrorizedRoleInfo","RoleInfo","email","firstName","lastName","department","levelForUser","finance","intime","outtime","statusForUser","password","passwordRegex","maxPass","minPass","formControlValueChanged","security1","ucase","lcase","num","splc","cifNumberControl","nullValidator","updateValueAndValidity","UserName","toLocaleUpperCase","roles","roleValue","upsertUserMaintenance","getAuditLogsForUserMaintenance","onInput","onInputChange","onToggle","SecurityDto","TillVaultPopupComponent","vaultConfig","minCashHoldingValue","tillVaultAccount","shortageOverageAccount","limitAmount","maxCashHolding","control","min","minCashHolding","saveoftillVaultConfig","getAuditLogsFortillvaultconfig","MenusComponent","getAllNavs","menus","changeNav","deleteMenu","openDialogue","MenuDetailsComponent","dialogue","getParentMenu","currentNav","isEmpty","navItem","menuForm","prop","prototype","hasOwnProperty","call","getAuditLogsForMenu","setchildMenuDetails","parenId","MaintenanceModule","forChild","declarations","imports","TillVaultCcyDemonBalComponent","getTillVaultDetails","fetchTillVaultCcyDemonBal","deleteTillVaultCcyDemonById","CrudNgxTableComponent","getBranches","branchMaintenance","CustomCalenderComponent","onDatePicked","emit","getDate","changes","V","K","tempMonthArr","dateFromForm","dateAlreadyActive","position","right","hasBackdrop","AddSecuritypolicyComponent","CurrencyPairaRatesMaintenanceComponent","getCurrencyPairRates","currencyPairRatesInfo","fetchCurrencyPairRates","deleteCurrencyPairRates","AddEditCityComponent","getCityById","buildCityForm","cityMaintenance","pinCode","countryArr","stateArr","stateAA","upsertCities","updateCityAuditLog","getStateCode","AddTillvaultCcyDemonbalComponent","denom","tillVaultCcyDenomBal","addTillVaultCcyForm","openUnitsBal","unitsBal","idtvcId","getTillVaultCcyDemonById","getDenomCode","tvcId","updateTillVaultCcyDemonBalDetails","getAuditLogsForTillVaultCcyDenomBal","fetchDenomMasterAuthRecs","ChargeMaintSummaryComponent","fetchChargeMaintDetails","chargeMaintenance","TxnCashMasterCrudTableComponent","fetchTxnCashMasterInfo","getTxnCashMasterById","fetchTxnCashMasterById","fetchTrxnCashStatus","txnCashMaster","BillerInfoMaintenanceComponent","fetchBillerInfo","getAllBillerInfoId","billerInfo","AuditLogComponent","auditLogDataObject","getClickEvent","getAuditLogData","CountryStatePopupComponent","countryCodeList","isCountrycode","isCountrycode2","allCountryCode","countryMaintenance","countryIsoCode2","numericCode","ibanCheckReqd","blacklisted","region","isdCode","upsertCountryDetails","isCountryCodePresent","isCountryCode2Present","SelectedCountryCode","iso2","isCountryPresent","iso3","phonecode","getAuditLogsForCountry","WorkflowMaintenanceComponent","getMainModuleInfo","accountList","getId","fetchSubmoduleById","subModuleData","selectedRoleId","fetchRoleId","subModuleId","saveWorkflowRecord","onAccountSelect","SecurityPolicyComponent","disableDelete","recordExist","Record","deleteSecurityPolicy","sortedArray","latestVersion","AddCurrencyMaintComponent","currencyMaintIsEdit","editCurrencyMaintById","currencyMaint","currencyName","isoCcyCode","upsertCurrencyMaintDetails","updateAuditLogForCurrencyMaint","TillVaultCcybalHispopupComponent","ccybalHistoryForm","tellerId","alhanumericValidation","numericValidation","CustomCalendarArrTypeComponent","monthArrIndex","currentMonthYear","updateCalendar","newDate","iV","iK","iV1","iK1","cV","cK","cV1","cK1","dateValue1","d1","currentDate","getHolidayData","TillVaultCcybalHisSummaryComponent","getvaulCurrencyBalHistory","saveoftillVaultCurrencyBalHistory","removetillVaultCurrencyBalHistory","gettillCurrencyBalHistoryResp","TillVaultDenominationComponent","units","saveTellerVaultDenomination","deleteTellerVaultDenomination","getAuditLogsFortillvaultdenomination","maintenanceRoutes","component","children","redirectTo","pathMatch","breadcrumb","BaseDenominationPopupComponent","baseDenomStatus","baseDenomForm","getAuditLogsForBaseDenomination","saveBaseDenomination","CurrencyPairMaintenanceComponent","currencyPairInfo","MenuDialogComponent","getchildMenuDetails","DemonMasterCrudNgxTableComponent","denomvalues","getDenomMaster","allCountryValues","currencyValues","getDenomMasterId","fetchDenomMasterById","fetchdenomValue","uploadCollateralType","denominationMaster","TillVaultCcySummryComponent","getvaulCurrencyBal","getCurrencyBalId","fetchCcyBalValue","fetchCurrencyBalId","gettillCurrencyBalResp","tillVaultCurrrencyBalance","BranchHolidayComponent","deleteBranchHoliday","branchHolidayMaintenance","addBranch","BranchHolidayPopupComponent","branchHolidayDetails","holidaypopupForm","TillVaultDenominationSummaryComponent","getTellVaultDenomination","fetchTellVaultDenomination","getTellerVaultDenomination","getTellerVaultDenomById","fetchVaultDenom","tillVaultDenomination"],"mappings":"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","file":"views-maintenance-maintenance-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-transaction-denomination-history',\r\n  templateUrl: './transaction-denomination-history.component.html',\r\n  styleUrls: ['./transaction-denomination-history.component.scss']\r\n})\r\nexport class TransactionDenominationHistoryComponent implements OnInit {\r\n\r\n  public itemForm: FormGroup;\r\n  countryCurrency: any[]=[];\r\n  tillId:string[]=[];\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  DenominationID:number;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<TransactionDenominationHistoryComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.DenominationID = this.data.payload? this.data.payload.id: null;\r\n    this.buildItemForm(this.data.payload);\r\n    this.countryCurrency=this.data.currency;\r\n    this.tillId=this.data.till;\r\n    this.branchCode=this.data.branchCode;\r\n    this.bankCode=this.data.bankCode;\r\n  }\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      txtReference:  [item.txtReference || '', Validators.required],\r\n      txtDate:  [new Date(item.txtDate) || '', Validators.required],\r\n      denomCode: [item.denomCode || '', Validators.required],\r\n      denomUnit: [item.denomUnit || '', Validators.required],\r\n      \r\n    })\r\n  }\r\n  \r\n  submit() {\r\n    let payloadOBJ : any ={}\r\n    payloadOBJ = this.itemForm.value;\r\n    payloadOBJ.id = this.DenominationID;\r\n    this.dialogRef.close(this.itemForm.value)\r\n    \r\n    \r\n  }\r\n\r\n  alphakeyPress(event: any) {\r\n    const pattern = /[0-9a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 matDialogTitle>{{data.title}}</h1>\r\n<form [formGroup]=\"itemForm\" (ngSubmit)=\"submit()\">\r\n  <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n    <div fxFlex=\"50\" class=\"pr-16\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input matInput name=\"TransRef\" maxlength=\"10\" [formControl]=\"itemForm.controls['txtReference']\"\r\n            placeholder=\"Transaction Referance\">\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"50\" class=\"pr-16\">\r\n            <mat-form-field class=\"full-width\" >\r\n            <mat-label>Transaction Date</mat-label>\r\n            <input matInput  [formControl]=\"itemForm.controls['txtDate']\" [matDatepicker]=\"picker\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n              <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n      </div>\r\n\r\n    <div fxFlex=\"50\" class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input matInput name=\"denomCode\" maxlength=\"10\" (keypress)=alphakeyPress($event) \r\n         [formControl]=\"itemForm.controls['denomCode']\"\r\n          placeholder=\"Denomination Code\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"50\" class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input matInput type=\"number\" name=\"units\" min=\"0\" [formControl]=\"itemForm.controls['denomUnit']\" placeholder=\" Denomination unit\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\">{{\"SAVE\" }}</button>\r\n      <span fxFlex></span>\r\n      <button mat-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close(false)\">Cancel</button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-city-maintenance',\r\n  templateUrl: './city-maintenance.component.html',\r\n  styleUrls: ['./city-maintenance.component.scss']\r\n})\r\nexport class CityMaintenanceComponent implements OnInit {\r\n  dataSource = new MatTableDataSource();\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  userdata: any[];\r\n  displayedColumns: string[] = ['countryCode', 'countryName', 'stateCode', 'stateName', 'cityName', 'pinCode', 'authStatus', 'recordStatus', 'action'];\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'countryCode', value: 'Country Code' },\r\n    { key: 'countryName', value: 'Country Name' },\r\n    { key: 'stateCode', value: 'State Code' },\r\n    { key: 'stateName', value: 'State Name' },\r\n    { key: 'cityName', value: 'City Name' },\r\n  ];\r\n  selectedFilterIndex: number = 0;\r\n  loggedInUser: any;\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService,\r\n    private snack: MatSnackBar,\r\n    private loader: AppLoaderService,\r\n    private ls: LocalStoreService,\r\n    private confirmService: AppConfirmService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.getAllCity();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  getAllCity() {\r\n    this.loader.open();\r\n    this.apiService.fetchAllCity().subscribe(data => {\r\n      this.loader.close();\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus == 'U') {\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if (data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        }\r\n        if (data[i].recordStatus == 'O') {\r\n          data[i].recordStatus = 'Open'\r\n        }\r\n        if (data[i].recordStatus == 'C') {\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.userdata = data;\r\n    }\r\n    )\r\n  }\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  dataByFilter(index, item) {\r\n    return item.key\r\n  }\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'countryMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  downloadRecord() {\r\n    this.downloadService.downloadFiles(\"cityMaintenance\", this.userdata);\r\n  }\r\n  addEditCity(cityId?) {\r\n    if (cityId) {\r\n      this.router.navigate([`/maintenance/main/addEditCity`], { queryParams: { cityId: cityId } })\r\n    }\r\n    else {\r\n      this.router.navigate([`/maintenance/main/addEditCity`]);\r\n    }\r\n\r\n  }\r\n\r\n  deleteItem(city) {\r\n    this.confirmService.confirm({ message: `Are you sure, you want to delete ${city.cityName}?` })\r\n      .subscribe((res) => {\r\n        console.log('res')\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteCity(city.id)\r\n            .subscribe(res => {\r\n              console.log(res);\r\n              if (res) {\r\n                this.loader.close();\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n              this.getAllCity();\r\n            })\r\n        }\r\n\r\n      });\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > City Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    City Maintenance\r\n  </span>\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Cities\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\" (change)=\"onFileChange($event)\" />\r\n      </div>\r\n      <button (click)=\"downloadRecord()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div><br>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n\r\n            <mat-option value=\"0\" disabled>Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div style=\"padding-top: 3px;\">\r\n        <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n        <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addEditCity()\">ADD NEW\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n      <ng-container matColumnDef=\"countryCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country code\"> Country Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.countryCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"countryName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country name\"> Country Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.countryName}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> State Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state name\"> State Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateName}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"cityName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by city name\"> City Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.cityName}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"pinCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by pin code\"> Pin Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.pinCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n      <!-- <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"addEditCity(element.id)\">edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"\r\n              (click)=\"deleteItem(element)\">delete</mat-icon>\r\n          </div>\r\n        </mat-cell>\r\n      </ng-container> -->\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"addEditCity(element.id)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.authStatus == 'Authorized'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</mat-card>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Location } from '@angular/common';\r\nimport { Data, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { BranchHolidayPopupComponent } from '../branch-holiday/branch-holiday-popup/branch-holiday-popup.component';\r\nimport { SendHolidayScreenService } from 'app/shared/services/send-holiday-screen.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-currency-holiday',\r\n  templateUrl: './currency-holiday.component.html',\r\n  styleUrls: ['./currency-holiday.component.scss']\r\n})\r\nexport class CurrencyHolidayComponent implements OnInit {\r\n  // items: string[];\r\n  // loading: boolean;\r\n\r\n  // constructor(\r\n  //   private dialog: MatDialog,\r\n  //   private snack: MatSnackBar,\r\n  //   private confirmService: AppConfirmService,\r\n  //   private loader: AppLoaderService,\r\n  //   private apiService:ApiService,\r\n  //   private ls:LocalStoreService,\r\n  //   private _location: Location,\r\n  //   private router:Router,\r\n  //   private http: HttpClient\r\n  // ) { }\r\n\r\n  // ngOnInit(): void {\r\n  //   this.apiService.getBranchHolidayInfo()\r\n  //     .subscribe(data => {\r\n  //       this.items = data;\r\n  //       this.getCurrencyHoliday();\r\n  //   this.loading = false;\r\n  //     })\r\n  // }\r\n\r\n  // deleteItem(row) {\r\n  //   this.confirmService.confirm({message: `Delete ${row.entityCode}?`})\r\n  //     .subscribe(res => {\r\n  //       if (res) {\r\n  //         this.loader.open();\r\n  //         this.apiService.deleteCurrencyHoliday(row.id)\r\n  //           .subscribe(data => {\r\n  //             this.getCurrencyHoliday() ;\r\n  //             this.loader.close();\r\n  //             this.snack.open('CurrencyHoliday deleted!', 'OK', { duration: 4000 })\r\n  //           })\r\n  //       }\r\n  //     })\r\n  // }\r\n  // getCurrencyHoliday() {\r\n  //   this.apiService.getCurrencyHolidayInfo()\r\n  //     .subscribe(data => {\r\n  //       this.items = data;\r\n  //     })\r\n  // }\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['entityCode', 'bankCode', 'branchCode', 'calenderYear', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n    // { key: 'branchCode', value: 'Branch Code' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  entityCode:string[]=[];\r\n  public items: any[];\r\n  users: any[] = [];\r\n  public getItemSub: Subscription;\r\n  screen: any;\r\n  \r\n\r\n  constructor(private router:Router,private snack: MatSnackBar,private loader: AppLoaderService,    private screenService: SendHolidayScreenService, \r\n    private dialog: MatDialog,private apiService:ApiService,private confirmService: AppConfirmService,private _liveAnnouncer: LiveAnnouncer,\r\n    private ls:LocalStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n   this.getBrancheHoliday(); \r\n   this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  addNew(res){\r\n    console.log(res);\r\n    this.screenService.holidayScr.next(res);\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"]);\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'BranchHoliday');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n    this.getBrancheHoliday();\r\n  }\r\n\r\n  getBrancheHoliday() {\r\n    this.apiService.getCurrencyHolidayInfo().subscribe((data: any) => {\r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  \r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main/holiday`]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n \r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  openPopUp(data: any = {}, isNew?){\r\n    let title = isNew ? 'Add Branch Specific Holiday' : 'Edit Branch Specific Holiday';\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(BranchHolidayPopupComponent, {\r\n      width: '400px',\r\n      disableClose: true,\r\n      data: {\r\n        title: title, \r\n        payload: data,\r\n        branchCode: this.branchCode,\r\n        \r\n      }\r\n    })\r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n        if(!res) {\r\n          return;\r\n        }\r\n        \r\n        if (isNew) {\r\n           this.apiService.updateBranchHolidayDetails(res,false).subscribe(response => {\r\n            \r\n            this.getBrancheHoliday();\r\n            this.snack.open(`Record Added!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        } else {\r\n          this.apiService.updateBranchHolidayDetails(res,false).subscribe(response => {\r\n            \r\n            this.items = response;\r\n            this.loader.close();\r\n            this.getBrancheHoliday();\r\n            this.snack.open(`Record Updated!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }\r\n      })\r\n\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  \r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete ${element.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteCurrencyHoliday(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n      \r\n              \r\n              this.getBrancheHoliday();\r\n              \r\n            })\r\n        }\r\n        \r\n      });\r\n  }\r\n  commonHoliday(){\r\n    this.ls.setItem('SCREEN_NAME','Currency');\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/commonHoliday\"]);\r\n  }\r\n  addBranch(){\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addBranch\"]);\r\n    \r\n  }\r\n  openEdit(data: any = {},res,isEdit : string) {\r\n    console.log(res);\r\n    this.screenService.holidayScr.next(res);\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n/*this.apiService.upsertCurrencyHolidayDetails().subscribe(response => {\r\n\r\n    });*/\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > \r\n    Holiday Maintenance > Currency Holiday</small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Currency Holidays\r\n      </span>\r\n      <span fxFlex></span>\r\n      <mat-button-toggle-group value=\"table\" appearance=\"legacy\" name=\"fontStyle\" aria-label=\"Font Style\" >\r\n        <mat-button-toggle value=\"table\"><span >TABLE</span></mat-button-toggle>\r\n        <mat-button-toggle value=\"calendar\" (click)=\"addNew('Currency')\" ><span >CALENDAR</span></mat-button-toggle>\r\n      </mat-button-toggle-group>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    \r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Currency Holidays\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n         <div class=\"upload_botton\">\r\n          <button type=\"button\" mat-menu-item>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            class=\"btn btn-success\"\r\n            (change)=\"onFileChange($event)\"\r\n          />\r\n        </div>\r\n         <button mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n     <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n           <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n     </div>\r\n     <div>\r\n       <button mat-flat-button color=\"primary\" class=\"filterDiv\"  class=\"mr-38\" style=\"height: 45px;\" >ADD NEW\r\n           <button mat-icon-button>\r\n             <mat-icon [matMenuTriggerFor]=\"accountMenu\"\r\n               >keyboard_arrow_down</mat-icon>\r\n           <mat-menu #accountMenu=\"matMenu\" style=\"width: 50ox;\" >\r\n             <mat-nav-list role=\"list\" class=\"notification-list curr_holiday\" >\r\n               <mat-list-item\r\n               role=\"listitem\"\r\n               class=\"notific-item\">\r\n               <div (click)=\"commonHoliday()\">\r\n                 <small>\r\n                  Common Holiday\r\n                </small>\r\n               </div>\r\n               </mat-list-item>\r\n               <!-- <mat-list-item\r\n               role=\"listitem\"\r\n               class=\"notific-item\">\r\n               <div (click)=\"addBranch()\">\r\n                 <small >\r\n                    Currency Specific Holiday\r\n                 </small>\r\n               </div>\r\n   \r\n               </mat-list-item> -->\r\n   \r\n             </mat-nav-list>\r\n           </mat-menu>\r\n           </button>\r\n           </button>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <ng-container matColumnDef=\"entityCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity Code\"> Entity Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"bankCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"branchCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Branch Code\"> Currency Code\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.currencyCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"calenderYear\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Year\"> Year\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.calenderYear}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n\r\n       <!-- <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openEdit(element,'Currency')\">edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container> -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"openEdit(element,'Currency')\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.authStatus == 'Authorized'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5,10,20]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  ","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-kiosk-login',\r\n  templateUrl: './kiosk-login.component.html',\r\n  styleUrls: ['./kiosk-login.component.scss']\r\n})\r\nexport class KioskLoginComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['branchCode', 'kioskSystemCode', 'emailId', 'mobileNumber',  'authStatus', 'kioskSystem', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'branchCode', value: 'Branch Code' },\r\n    { key: 'kioskSystemCode', value: 'Kiosk System Code' },    \r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  users: string[] = [];\r\n  public items: string[];\r\n  constructor(private router:Router,private snack: MatSnackBar,\r\n    private apiService:ApiService,private confirmService: AppConfirmService,\r\n    private _liveAnnouncer: LiveAnnouncer,private downloadService: DownloadService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getProductInfo();\r\n    this.getItems();\r\n  }\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/kioskLogin/addKioskLogin\"]);\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n  getProductInfo(){\r\n    this.apiService.getKioskLoginDetails().subscribe((data: any) => {\r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n   \r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      if(data[filterBy] !=null){\r\n      return (\r\n        data[filterBy].trim().toLocaleLowerCase().includes(filter)\r\n      )}\r\n    }\r\n  }\r\n  \r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   applyFilter(event: Event) {\r\n     \r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {  \r\n    this.router.navigate([\"/maintenance/main/kioskLogin/addKioskLogin\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete  ${element.productName}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteKioskLoginById(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n                this.getProductInfo();\r\n            })\r\n        }\r\n      });\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'product');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getProductInfo();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.getProductInfo();\r\n    });\r\n  }\r\n  downloadRecord() {\r\n    this.downloadService.downloadFiles(\"kioskLoginMaintenance\", this.users);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home >Branch Maintenance  > Kiosk Maintenance  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Kiosk Branch Login Maintenance \r\n      </span>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-12 mb-48\">\r\n    \r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            KIOSK User Details\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n         <button mat-menu-item (click)=\"downloadRecord()\">\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n     <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n       <div>\r\n         <mat-form-field appearance=\"outline\" fxFlex=\"90\">\r\n           <mat-label class=\"labelClass\">Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n           \r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n           <mat-label class=\"labelClass\">Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">            \r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div *ngIf=\"searchVal.value || filterBy.value\" style=\" padding-top:10px; padding-left: 20px;\">\r\n         <button  mat-flat-button color=\"warn\" (click)=\"clearFilter()\">Clear Filter</button>\r\n       </div>\r\n       <div class=\"filterDiv\">\r\n        <button mat-flat-button class=\"addNewBtn\" (click)=\"addNew()\">ADD NEW\r\n        </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">      \r\n  \r\n       <ng-container matColumnDef=\"branchCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Branch Code\">Branch Code\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.branchCode}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"kioskSystemCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Kiosk System Code\">Kiosk System Code\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.kioskSystemCode}} </mat-cell>\r\n      </ng-container>\r\n       <ng-container matColumnDef=\"emailId\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Email Id\"> Email Id\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\" style=\"padding-right:10px\">\r\n          <div fxFlex=\"90\">\r\n            {{element?.otpInfo[0]?.emailId|slice:0:17}}<span *ngIf=\"element?.emailId[0].length > 17 \">...</span>\r\n          </div>\r\n           <mat-icon *ngIf=\"element?.emailId.length > 1\" fxFlex=\"5\" [matMenuTriggerFor]=\"menu\">arrow_drop_down</mat-icon>\r\n          <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n            <div fxLayout=\"column\" fxLayoutGap=\"10px\" style=\"padding:10px\">\r\n                <div *ngFor=\"let email of element.otpInfo;\">\r\n                               {{email.emailId}}                    \r\n                </div>\r\n            </div>\r\n    </mat-menu>\r\n         </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"mobileNumber\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Mobile Number\">Mobile Number\r\n         </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div fxFlex=\"50\">\r\n            {{element?.otpInfo[0]?.mobileNumber}}\r\n          </div>\r\n           <mat-icon *ngIf=\"element?.mobileNumber.length > 1\" fxFlex=\"5\" [matMenuTriggerFor]=\"menu\">arrow_drop_down</mat-icon>\r\n          <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n            <div fxLayout=\"column\" fxLayoutGap=\"10px\" style=\"padding:10px\">\r\n                <div *ngFor=\"let mobile of element.otpInfo;\">\r\n                               {{mobile.mobileNumber}}                    \r\n                </div>\r\n            </div>\r\n    </mat-menu>\r\n        </mat-cell>\r\n      </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element?.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"kioskSystem\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Kiosk System\"> Kiosk System\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n            <label class=\"switch\">\r\n              <input type=\"checkbox\" [checked]=\"element.kioskSystemEnable\" [readonly]=\"true\">\r\n              <span class=\"slider round\"></span>\r\n            </label>\r\n          </div>\r\n        \r\n       </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n         <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openEdit(element)\">\r\n          <mat-icon class=\"actionIcon\">edit</mat-icon>\r\n        </button>\r\n         <button mat-icon-button mat-sm-button color=\"warn\" [disabled]=\"element?.oneTimeAuth =='Y'\"\r\n              (click)=\"deleteItem(element)\">\r\n              <mat-icon [ngClass]=\"{'actionIcon':element?.oneTimeAuth !='Y'}\">delete</mat-icon>\r\n            </button>\r\n         </mat-cell>\r\n       </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n\r\n\r\n\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-or-edit-biller-info',\r\n  templateUrl: './add-or-edit-biller-info.component.html',\r\n  styleUrls: ['./add-or-edit-biller-info.component.scss']\r\n})\r\nexport class AddOrEditBillerInfoComponent implements OnInit {\r\n  public billerMaintenance: FormGroup;\r\n  id: number;\r\n  isEdit: boolean = false;\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  entityCode: string[] = [];\r\n  readorWrite: boolean=true;\r\n  auditLogData: any;\r\n  loggedInUser: any;\r\n  constructor(private fb: FormBuilder,private apiService: ApiService,private router:Router, private  ls : LocalStoreService,\r\n    private snack: MatSnackBar,private cdr: ChangeDetectorRef, private dataService : DataService, private route : ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getBillerInfoById(params.get('id')).subscribe((resp) =>{\r\n          this.auditLogData = resp;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n           this.dataService.sendClickEvent();\r\n           this.buildItemForm(resp);\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );  \r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    this.buildItemForm({});\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getEnityCode();\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.billerMaintenance = this.fb.group({\r\n      id: [item.id || ''],\r\n      entityCode: [item.entityCode || '', Validators.required],\r\n      bankCode: [item.bankCode || '', Validators.required],\r\n      // billerAccBrn: [item.billerAccBrn || ''],\r\n      branchCode:[item.branchCode || ''],\r\n      billerAccount: [item.billerAccount || ''],\r\n      billerCode: [item.billerCode || ''],\r\n      billerName: [item.billerName || ''],\r\n      loggedInUser: [item.loggedInUser || ''],\r\n      lastModifiedDate:[item.lastModifiedDate || ''],\r\n      authStatus: [item.authStatus || ''],\r\n      authBy: [item.authBy || ''],\r\n      authDate: [item.authDate || ''],\r\n      createdBy: [item.createdBy || ''],\r\n      createdDate: [item.createdDate || ''],\r\n      modifiedBy: [item.modifiedBy || ''],\r\n      noOfModification: [item.noOfModification || ''],\r\n      oneTimeAuth: [item.oneTimeAuth || ''],\r\n      recordStatus: [item.recordStatus || ''],\r\n      version: [item.version || ''],\r\n    });\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteBillerInfo(this.auditLogData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/billerInfoMaint`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/billerInfoMaint`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.updateBiller(payload).subscribe((data) => {\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }\r\n    }))\r\n    \r\n  }\r\n\r\n  save(form){\r\n    this.billerMaintenance.value.loggedInUser = this.loggedInUser;\r\n    this.apiService.saveOrUpdateBillerInfo(this.billerMaintenance.value).subscribe(data => {\r\n      if(data != null && this.isEdit == true){\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.goBack();\r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null && this.isEdit == false){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.goBack();\r\n        this.cdr.markForCheck();\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  getBranchCode(){\r\n    this.apiService.getBranchCode().subscribe(branchCodeResp=>{\r\n      this.branchCode=branchCodeResp;\r\n      console.log(this.branchCode);\r\n    });\r\n  }\r\n\r\n  getBankCode(){\r\n    this.apiService.getBankCode().subscribe(bankCodeResp=>{\r\n     // this.bankCode=bankCodeResp;\r\n      //console.log(this.bankCode);\r\n      for(let i=0;i<bankCodeResp.length;i++){\r\n        if(bankCodeResp[i].authStatus==='A'){\r\n          console.log('auth',bankCodeResp[i].authStatus)\r\n          this.bankCode.push(bankCodeResp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getEnityCode(){\r\n    this.apiService.fetchEntityDetails().subscribe(entityCodeResp=>{\r\n    // this.entityCode=entityCodeResp;\r\n      console.log(this.entityCode);\r\n      for(let i=0;i<entityCodeResp.length;i++){\r\n        if(entityCodeResp[i].authStatus==='A'){\r\n          console.log('auth',entityCodeResp[i].authStatus)\r\n          this.entityCode.push(entityCodeResp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/billerInfoMaint`]);\r\n  }\r\n  dataByEntityCode(index,item){\r\n    return item.entityCode;\r\n  }\r\n  dataByBankCode(index,item){\r\n    return item.bankCode;\r\n  }\r\n  dataByBranchCode(index,item){\r\n    return item.branchCode;\r\n  }\r\n\r\n  dataBybranchCode(index, branch){\r\n    return branch.branchCode; \r\n }\r\n\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Biller Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Biller Information</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n\t<button mat-icon-button (click)=\"goBack()\">\r\n\t\t<mat-icon>arrow_back</mat-icon>\r\n\t</button>\r\n\t<h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Biller Information</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Biller Information</h1>\r\n</div>\r\n<form [formGroup]=\"billerMaintenance\">\r\n\t<mat-card>\r\n\t\t<mat-card-header>\r\n\t\t\t<!-- <mat-card-title>Biller Info</mat-card-title> -->\r\n\t\t</mat-card-header>\r\n\t\t<mat-card-content>\r\n\t\t\t<div fxLayoutGap=\"15px\">\r\n\t\t\t\t<div fxFlex=\"32.33\"  *ngIf=\"!readorWrite\" >\r\n\t\t\t\t\t<mat-label>Entity Code *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<mat-select name=\"entityCode\" formControlName=\"entityCode\" placeholder=\"select entityCode\"\r\n\t\t\t\t\t\t\trequired>\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let entityC of entityCode; trackBy:dataByEntityCode\" [value]=\"entityC.entityCode\">\r\n\t\t\t\t\t\t\t\t{{entityC.entityCode}} </mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"billerMaintenance.get('entityCode').hasError('required')\">\r\n\t\t\t\t\t\t\tEntity Code is Required!\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"32.33\"  *ngIf=\"readorWrite\" >\r\n\t\t\t\t\t<mat-label>Entity Code *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input   [readonly]=\"readorWrite\" matInput name=\"billerCode\" type=\"text\" formControlName=\"entityCode\" required\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxFlex=\"32.33\" *ngIf=\"!readorWrite\">\r\n\t\t\t\t\t<mat-label>Bank Code *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<mat-select name=\"bankCode\" formControlName=\"bankCode\" placeholder=\"select bankCode\">\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let bankC of bankCode; trackBy:dataByBankCode\" [value]=\"bankC.bankCode\"> {{bankC.bankCode}}\r\n\t\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t\t<mat-error *ngIf=\"billerMaintenance.get('entityCode').hasError('required')\">\r\n\t\t\t\t\t\t\tBank Code is Required!\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"32.33\"  *ngIf=\"readorWrite\" >\r\n\t\t\t\t\t<mat-label>Bank Code *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input   [readonly]=\"readorWrite\" matInput name=\"billerCode\" type=\"text\" formControlName=\"bankCode\" required\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxFlex=\"32.33\">\r\n\t\t\t\t\t<mat-label>Biller Code *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input   [readonly]=\"readorWrite\" matInput name=\"billerCode\" type=\"text\" formControlName=\"billerCode\" required\r\n\t\t\t\t\t\t\tplaceholder=\"billerCode\" />\r\n\t\t\t\t\t\t<mat-error *ngIf=\"billerMaintenance.get('billerCode').hasError('required')\">\r\n\t\t\t\t\t\t\tBiller Code is Required!\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t\t<div fxLayoutGap=\"15px\">\r\n\t\t\t\t<div fxFlex=\"32.33\">\r\n\t\t\t\t\t<mat-label>Biller Name *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input  [readonly]=\"readorWrite\" matInput name=\"billerName\" type=\"text\" formControlName=\"billerName\" required\r\n\t\t\t\t\t\t\tplaceholder=\"billerName\" />\r\n\t\t\t\t\t\t<mat-error *ngIf=\"billerMaintenance.get('billerName').hasError('required')\">\r\n\t\t\t\t\t\t\tBiller Name is Required!\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div> \r\n\t\t\t\t<!-- <div fxFlex=\"32.33\" *ngIf=\"!readorWrite\" >\r\n\t\t\t\t\t<mat-label>Biller Account Branch</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<mat-select name=\"billerAccBrn\" formControlName=\"billerAccBrn\"\r\n\t\t\t\t\t\t\tplaceholder=\"select billerAccBrn\">\r\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let branch of branchCode; trackBy:dataByBranchCode\" [value]=\"branch.branchCode\">\r\n\t\t\t\t\t\t\t\t{{branch.branchCode}} </mat-option>\r\n\t\t\t\t\t\t</mat-select>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"32.33\"  *ngIf=\"readorWrite\" >\r\n\t\t\t\t\t<mat-label>Biller Account Branch </mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input   [readonly]=\"readorWrite\" matInput name=\"billerCode\" type=\"text\" formControlName=\"billerAccBrn\" required\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div> -->\r\n\r\n\t\t\t\t<div fxFlex=\"32.33\">\r\n\t\t\t\t\t<mat-label>Branch Code </mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input  placeholder=\"billerCode\" [readonly]=\"readorWrite\" matInput name=\"branchCode\" type=\"text\" formControlName=\"branchCode\" required/>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div fxFlex=\"32.33\">\r\n\t\t\t\t\t<mat-label>Biller Account *</mat-label>\r\n\t\t\t\t\t<mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\t\t\t\t\t\t<input  [readonly]=\"readorWrite\" matInput name=\"billerAccount\" maxlength=\"10\"\r\n\t\t\t\t\t\t\tformControlName=\"billerAccount\" required placeholder=\"billerAccount\" />\r\n\t\t\t\t\t\t<mat-error *ngIf=\"billerMaintenance.get('billerAccount').hasError('required')\">\r\n\t\t\t\t\t\t\tBiller Account is Required!\r\n\t\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t</mat-card-content>\r\n\r\n\t\t<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n\t\t\t<div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n\t\t\t  <button \r\n\t\t\t\tcolor=\"primary\" *ngIf=\"!isEdit\"\r\n\t\t\t\t[disabled]= \"billerMaintenance.invalid\"\r\n\t\t\t\tmat-raised-button \r\n\t\t\t\t(click)=\"save(billerMaintenance.value)\"\r\n\t\t\t  >\r\n\t\t\t\tSave\r\n\t\t\t  </button>\r\n\t\t\t  <div [hidden]=\"readorWrite\" >\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(billerMaintenance.invalid || billerMaintenance.dirty)\" (click)=\"save(billerMaintenance.value)\">\r\n\t\t\t\t   Save\r\n\t\t\t\t  </button>&nbsp;&nbsp;\r\n\t\t\t  </div>\r\n\t\t\t  \r\n\t\t\t  \r\n\t\t\t  <div [hidden]=\"!readorWrite\">\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n\t\t\t\t  Edit\r\n\t\t\t\t</button>&nbsp;&nbsp;\r\n\t\t\t  </div>\r\n\t\t\t  <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n\t\t\t\t  Authorize\r\n\t\t\t\t</button>&nbsp;&nbsp;\r\n\t\t\t  </div> \r\n\t\t\t  <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n\t\t\t\t  Reopen\r\n\t\t\t\t</button>&nbsp;&nbsp;\r\n\t\t\t  </div>\r\n\t\t\t  <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n\t\t\t\t  Close\r\n\t\t\t\t</button>&nbsp;&nbsp;\r\n\t\t\t  </div>\r\n\t\t\t  <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n\t\t\t\t<button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n\t\t\t\t  Delete\r\n\t\t\t\t</button> &nbsp;&nbsp;\r\n\t\t\t  </div>\r\n\t\t\t \r\n\t\t\t  <button\r\n\t\t\t\tmat-raised-button\r\n\t\t\t\tcolor=\"warn\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\t(click)=\"goBack()\"\r\n\t\t\t  >\r\n\t\t\t\tExit\r\n\t\t\t  </button>\r\n\t\t\t</div>\r\n\t\t  </div>\r\n\t</mat-card>\r\n</form>\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n  </div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-ccy-popup',\r\n  templateUrl: './till-vault-ccy-popup.component.html',\r\n  styleUrls: ['./till-vault-ccy-popup.component.scss']\r\n})\r\nexport class TillVaultCcyPopupComponent implements OnInit {\r\n\r\n  arrayCurrency: any[] = [];\r\n  countryCurrency: any[]=[];\r\n  // tillId:number[]=[];\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  currency: string[] = [];\r\n  till: any[] = [];\r\n  public tillccyBalForm: FormGroup;\r\n  tillVaultResponse: any;\r\n  currentUser: any;\r\n  CcyBalStatus: any;\r\n  entity: any;\r\n  entityCode: string[] = [];\r\n  tillData: any;\r\n  entityName: string;\r\n  loggedInUser : any;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n  id: any;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultCcyPopupComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private dataService:DataService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.entity =\"entityCode\"\r\n    // this.dataService.getCcyBal.subscribe(data =>{\r\n    //   console.log(data)\r\n    //   this.CcyBalStatus = typeof this.CcyBalStatus === 'object' ? data : {};\r\n    // });\r\n\r\n    setTimeout(() => {  \r\n      this.CcyBalStatus = JSON.parse(localStorage.getItem('fetchCcyBalValue'));\r\n      console.log('output',this.CcyBalStatus);\r\n      if(this.CcyBalStatus == null || this.CcyBalStatus == undefined){\r\n        console.log(this.CcyBalStatus)\r\n        this.readorWrite=false;\r\n        this.buildItemForm({})\r\n      }       \r\n      else if(this.CcyBalStatus.id != null || this.CcyBalStatus.id != undefined){\r\n      this.loader.open();\r\n      console.log(this.CcyBalStatus.id)\r\n      this.id = this.CcyBalStatus.id\r\n      this.buildItemForm(this.CcyBalStatus)\r\n      this.auditData = this.CcyBalStatus\r\n      this.isEdit = true;\r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.loader.close();\r\n      this.loader.close();\r\n      }\r\n    }, 1000)\r\n\r\n    this.getCurrency();\r\n    // this.getBankCode('entityCode');\r\n    // this.getBranchCode('entityCode');\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n    this.getBranchCode();\r\n    this.getBankCode();\r\n\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    console.log(this.loggedInUser);\r\n   \r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.tillccyBalForm = this.fb.group({\r\n      entityCode: [item.entityCode || '',[Validators.required]],\r\n      bankCode: [item.bankCode || '', [Validators.required]],\r\n      branchCode: [item.branchCode || '',[Validators.required]],\r\n      tillId: [item.tillId || '',Validators.required],\r\n      currency: [item.currency || '',[Validators.required]],\r\n      glAccount: [item.glAccount || '',Validators.required],\r\n      openBalInAcy: [item.openBalInAcy || '',Validators.required],\r\n      openBalInLcy: [item.openBalInLcy || '',Validators.required],\r\n      balInAcy: [item.balInAcy || '',Validators.required],\r\n      balInLcy: [item.balInLcy || '',Validators.required],\r\n      id:[item.id || null]\r\n    })\r\n  }\r\n  numericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  alhanumericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n// Save of tillVaultCurrency Bal\r\n  submit() {\r\n    if(this.tillccyBalForm.invalid){\r\n      return;\r\n    }else{\r\n      this.loader.open();\r\n      this.tillData = this.till.find(x => x.tillVaultCode == this.tillccyBalForm.value.tillId);\r\n      this.tillccyBalForm.value.loggedInUser= this.loggedInUser.userName;\r\n      this.tillccyBalForm.value.tillId = this.tillData.id;\r\n      console.log(this.tillccyBalForm.value);\r\n      this.apiService.saveoftillVaultCurrencyBal(this.tillccyBalForm.value).subscribe((resp) => {\r\n      console.log(\"data\", resp);\r\n      this.loader.close();\r\n      this.router.navigate([`/maintenance/main/tillVaultCcyBal`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n        });\r\n      },(err:any) =>{\r\n        this.loader.close();\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n      }\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.removetillVaultCurrencyBal(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultCcyBal`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultCcyBal`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        console.log(this.id);\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.getAuditLogsForCurrencybal(payload).subscribe((data) => {\r\n          console.log(data);\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} Successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  goBack(){\r\n    localStorage.removeItem('fetchCcyBalValue');\r\n    console.log( localStorage.getItem('fetchCcyBalValue'));\r\n\r\n    this.router.navigate([`/maintenance/main/tillVaultCcyBal`]);\r\n  }\r\n\r\n  getCurrency() {\r\n    // this.apiService.getCountryValues().subscribe((resp) => {\r\n    //   this.currency = resp;\r\n    // });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.bankCode);\r\n      // this.bankCode = resp;\r\n    });\r\n  }\r\n  // getBankCode(entityCode) {\r\n  //   //  this.entityName = \"bankCode\"\r\n  //   this.apiService.getBankCode1(entityCode).subscribe((resp) => {\r\n  //     this.bankCode = resp;\r\n  //     console.log(this.bankCode)\r\n  //   });\r\n  // }\r\n  \r\n getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.branchCode);\r\n      // this.branchCode = resp;\r\n    });\r\n  }\r\n  // getBranchCode(bankCode:any) {\r\n   \r\n  //   this.entityName= this.tillccyBalForm.get('entityCode').value ;\r\n  //   this.apiService.getBranchCode1(this.entityName,bankCode).subscribe((resp) => {\r\n  //     this.branchCode = resp;\r\n  //     console.log(this.branchCode)\r\n  //   });\r\n  // }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.entityCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.entityCode);\r\n      console.log(\"bankCodeData\", resp)\r\n      // this.entityCode = resp;\r\n    });\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Currency Balance Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Currency Balance Details </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Currency Balance Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Currency Balance Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <div *ngIf=\"!isEdit\">\r\n      <h1 matDialogTitle>Add Currency Balance Details</h1>\r\n    </div>\r\n    <div *ngIf=\"isEdit\">\r\n      <h1 matDialogTitle>Edit Currency Balance Details</h1>\r\n    </div> -->\r\n    <form [formGroup]=\"tillccyBalForm\" *ngIf=\"tillccyBalForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"entityCode\" (keypress)=\"alhanumericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['entityCode']\" (selectionChange)=\"getBankCode($event.value)\"  class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of entityCode\" [value]=\"data.entityCode\">\r\n                {{data?.entityCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillccyBalForm.get('entityCode').touched && !tillccyBalForm.get('entityCode').valid\">\r\n              Entity Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Entity Code  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input readonly matInput name=\"glAccount\"\r\n              [formControl]=\"tillccyBalForm.controls['entityCode']\"> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"bankCode\" [formControl]=\"tillccyBalForm.controls['bankCode']\"  (selectionChange)=\"getBranchCode($event.value)\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of bankCode\" [value]=\"data.bankCode\">\r\n                {{data?.bankCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillccyBalForm.get('bankCode').touched && !tillccyBalForm.get('bankCode').valid\">\r\n              Bank Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input readonly matInput name=\"glAccount\"\r\n              [formControl]=\"tillccyBalForm.controls['bankCode']\"> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"branchCode\" [formControl]=\"tillccyBalForm.controls['branchCode']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of branchCode\" [value]=\"data.branchCode\">\r\n                {{data?.branchCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillccyBalForm.get('branchCode').touched && !tillccyBalForm.get('branchCode').valid\">\r\n              Branch Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input readonly matInput name=\"glAccount\"\r\n              [formControl]=\"tillccyBalForm.controls['branchCode']\"> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"tillId\" [formControl]=\"tillccyBalForm.controls['tillId']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of till\" [value]=\"data.tillVaultCode\">\r\n                {{data?.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillccyBalForm.get('tillId').touched && !tillccyBalForm.get('tillId').valid\">\r\n              Till Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input readonly matInput name=\"glAccount\"\r\n              [formControl]=\"tillccyBalForm.controls['tillId']\"> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"currency\" [formControl]=\"tillccyBalForm.controls['currency']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of currency\" [value]=\"data.currencyCode\">\r\n                {{data?.currencyCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillccyBalForm.get('currency').touched && !tillccyBalForm.get('currency').valid\">\r\n              Currency is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input readonly matInput name=\"glAccount\"\r\n              [formControl]=\"tillccyBalForm.controls['currency']\"> \r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>GL Account *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"glAccount\" maxlength=\"20\" (keypress)=\"alhanumericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['glAccount']\">\r\n            <mat-error *ngIf=\"tillccyBalForm.get('glAccount').touched && !tillccyBalForm.get('glAccount').valid\">\r\n              GL Account is required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Open Balance In Acy *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"openBalInAcy\" (keypress)=\"numericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['openBalInAcy']\">\r\n            <mat-error *ngIf=\"tillccyBalForm.get('openBalInAcy').touched && !tillccyBalForm.get('openBalInAcy').valid\">\r\n              Open Balance In Acy is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label> Open Balance In Lcy *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"openBalInLcy\" (keypress)=\"numericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['openBalInLcy']\">\r\n            <mat-error *ngIf=\"tillccyBalForm.get('openBalInLcy').touched && !tillccyBalForm.get('openBalInLcy').valid\">\r\n              Open Balance In Lcy is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label> Balance In Acy *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"balInAcy\" (keypress)=\"numericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['balInAcy']\">\r\n            <mat-error *ngIf=\"tillccyBalForm.get('balInAcy').touched && !tillccyBalForm.get('balInAcy').valid\">\r\n              Balance In Acy is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label> Balance In Lcy * </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"balInLcy\" (keypress)=\"numericValidation($event)\"\r\n              [formControl]=\"tillccyBalForm.controls['balInLcy']\">\r\n            <mat-error *ngIf=\"tillccyBalForm.get('balInLcy').touched && !tillccyBalForm.get('balInLcy').valid\">\r\n              Balance In Lcy is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"tillccyBalForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(tillccyBalForm.invalid || tillccyBalForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n      \r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { Component, OnInit,OnDestroy, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\nexport interface Card {\r\n  title: string;\r\n  subtitle: string;\r\n  text: string;\r\n  state?:string;\r\n  url:any;\r\n}\r\n\r\nconst DATA: Card[] = [\r\n  \r\n  {\r\n    title: 'Branch Holiday',\r\n    subtitle: 'Product Details',\r\n    text: 'this covers ordination product details, Product prefrences, Interest Charges and additional attributes.',\r\n    state:\"BranchHoliday\",\r\n    url:\"assets/images/brnchholiday.png\"\r\n  },{\r\n    title: 'Currency Holiday',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers create business process and create process stages.',\r\n    state:\"currencyholiday\",\r\n    url:\"assets/images/processing.png\"\r\n  },\r\n  {\r\n    title: 'Clearing Holiday',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitative and Qualitative score card.',\r\n    state:\"clearingholiday\",\r\n    url:'assets/images/screen.png'\r\n  },\r\n\r\n];\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-holiday-maintenance',\r\n  templateUrl: './holiday-maintenance.component.html',\r\n  styleUrls: ['./holiday-maintenance.component.scss']\r\n})\r\nexport class HolidayMaintenanceComponent implements OnInit {\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  obs: Observable<any>;\r\n  dataSource: MatTableDataSource<Card> = new MatTableDataSource<Card>(DATA);\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef, private router:Router, private _location: Location,) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    document.getElementById('main-content-wrap').style.backgroundColor = 'white' ; \r\n    this.changeDetectorRef.detectChanges();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.obs = this.dataSource.connect();\r\n  }\r\n\r\n\r\n  navigateToScreen(state:string){\r\n    this.router.navigate([`/maintenance/main/holiday/${state}`]);\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n\r\n}","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > \r\n    Holiday Maintenance</small></h1>\r\n<div class=\"content\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n        <button mat-icon-button (click)=\"goBack()\"> \r\n            <mat-icon>arrow_back</mat-icon>\r\n          </button> \r\n          <span class=\"text-large\">\r\n            Holiday Maintenances\r\n          </span>\r\n          <span fxFlex></span>\r\n       </div>\r\n\r\n     \r\n      \r\n</div>\r\n\r\n    <div fxLayout=\"row wrap\" class=\"mt-32\" class=\"pointer\"> \r\n        <div fxFlex=\"50\" *ngFor=\"let card of obs | async\" >\r\n            <mat-card (click)=\"navigateToScreen(card.state)\">\r\n                <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-around center\">\r\n                    <div fxFlex=\"65\">\r\n                        <mat-card-content>\r\n                            <h2 class=\"\">{{ card.title }}</h2>\r\n                            <span class=\"card-text-label\">{{ card.text }}</span>\r\n                          </mat-card-content>\r\n                        \r\n                    </div>\r\n                    <div fxFlex=\"30\" style=\"text-align: right;\">\r\n                        <img class=\"image\" width=\"100\" height=\"100\" [src]=\"card.url\" alt=\"photo\">\r\n                    </div>\r\n                </div>\r\n\r\n              </mat-card>\r\n        </div>\r\n  </div>\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable'\r\n\r\n@Component({\r\n  selector: 'app-txncharges-maintenance',\r\n  templateUrl: './txncharges-maintenance.component.html',\r\n  styleUrls: ['./txncharges-maintenance.component.scss']\r\n})\r\nexport class TxnchargesMaintenanceComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['chargeAmount', 'chargeCurrency', 'txnDate',  'oneTimeAuth', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'chargeCurrency', value: 'Charge Currency' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  users: any[] = [];\r\n  public items: any[];\r\n\r\n  constructor(private router:Router,private snack: MatSnackBar,\r\n    private apiService:ApiService,private confirmService: AppConfirmService,\r\n    private _liveAnnouncer: LiveAnnouncer) { }\r\n  \r\n\r\n  convert() {  \r\n    let doc = new jsPDF(); \r\n    const head = [['Charge Amount', 'Charge Currency', 'TXN Date', 'One Time Auth',  'Auth Status', 'Record Status']] \r\n    const body=[];\r\n    this.users.forEach(u=>{\r\n      var row = [];\r\n      row.push(u.chargeAmount);\r\n      row.push(u.chargeCurrency);\r\n      row.push(u.txnDate);\r\n      row.push(u.oneTimeAuth);\r\n      row.push(u.authStatus);\r\n      row.push(u.recordStatus);\r\n      body.push(row)\r\n    });\r\n    autoTable(doc, {\r\n      head: head,\r\n      body: body,\r\n      didDrawCell: (prepare) => { },\r\n    });\r\n    doc.save('test.pdf');  \r\n  }\r\n\r\n  uploadtxnCharges(event) {\r\n  const file:File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', \"txnCharges\");\r\n    uploadData.append('file', file);\r\n    \r\n    this.apiService.uploadTxnChargesFile(uploadData).subscribe(data => {\r\n      if(uploadData != null){\r\n        \r\n        this.snack.open('File Uploaded Successfully!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n     \r\n      }\r\n    this.getTxnCharge();\r\n    })\r\n    \r\n  }\r\n\r\n  upload(){\r\n      \r\n  }     \r\n  \r\n  ngOnInit(): void {\r\n    this.getTxnCharge();\r\n    this.getItems();\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n  getTxnCharge(){\r\n    this.apiService.getTxnChargeDetails().subscribe((data: any) => {\r\n      \r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  \r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/transactionCharges/addtxnCharges\"]);\r\n  }\r\n  \r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {\r\n    \r\n    this.router.navigate([\"/maintenance/main/transactionCharges/addtxnCharges\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete Transaction Charges?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteTxnChargesById(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n      \r\n                this.getTxnCharge();\r\n              \r\n            })\r\n        }\r\n        \r\n      });\r\n  }\r\n  goBack(){\r\n    \r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n  }\r\n}\r\n\r\n\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Transaction Charge Maintenance </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n       Transaction Charges Maintenance\r\n      </span>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    \r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Transaction Charges\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n         <button mat-menu-item >\r\n          <input style=\"display: none;\"\r\n          type=\"file\" name=\"documentUrl\"\r\n          #documentUrl \r\n          (change)=\"uploadtxnCharges($event)\">\r\n          <a \r\n          (click)=\"documentUrl.click()\"\r\n          [routerLink]=\"\">Upload</a>\r\n         </button>\r\n        \r\n         <button mat-menu-item (click)=\"convert()\">\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n     <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption;trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div style=\"padding-top: 3px;\">\r\n         <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n       </div>\r\n       <div>\r\n        <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"addNew()\"  style=\"height: 45px; margin-left: 15cm;\" >ADD NEW\r\n\r\n            </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <ng-container matColumnDef=\"chargeAmount\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Charge Amount\"> Charge Amount\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.chargeAmount}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"chargeCurrency\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Charge Currency\"> Charge Currency\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.chargeCurrency}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"txnDate\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Transaction Date\"> Transaction Date\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.txnDate}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n           <!--<div>\r\n              <mat-icon color=\"primary\" style=\"cursor: pointer;\" [disableRipple]=\"false\" (click)=\"openEdit(element)\">edit</mat-icon>\r\n           </div>&nbsp;&nbsp;\r\n           <div>\r\n            <mat-icon color=\"warn\" style=\"cursor: pointer;\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n           </div>-->\r\n           <div>\r\n            <mat-icon color=\"primary\" style=\"cursor: pointer;\" (click)=\"openEdit(element)\" >edit</mat-icon>\r\n         </div>&nbsp;&nbsp;\r\n         <div>\r\n          <mat-icon color=\"warn\" style=\"cursor: pointer;\"  [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n         </div>\r\n         </mat-cell>\r\n       </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator [pageSizeOptions]=\"[5,10,20]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport { entityData } from 'app/shared/models/entityMaintenance';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-entity-details',\r\n  templateUrl: './add-entity-details.component.html',\r\n  styleUrls: ['./add-entity-details.component.scss']\r\n})\r\nexport class AddEntityDetailsComponent implements OnInit {\r\n\r\n  public entityMaintenance: FormGroup;\r\n\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n\r\n  countries: string[] = [];\r\n  states: string[] = [];\r\n  cities: string[] = [];\r\n  id: number;\r\n  isEdit: boolean = false;\r\n  isReadOnly: boolean = true;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n  loggedInUser : string;\r\n  auditLogData : entityData;\r\n  readorWrite: boolean=true;\r\n  \r\n  constructor(\r\n\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private route : ActivatedRoute,\r\n     private dataService : DataService,\r\n     private ls : LocalStoreService,\r\n    \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('isEdit') == 'Yes'){\r\n        this.isReadOnly = false;\r\n        this.isView= false;\r\n        this.editNow = true;\r\n      }\r\n      else if(params.get('isEdit') == 'No'){\r\n        this.isReadOnly = true;\r\n        this.isView= true;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == 'false'){\r\n        this.isReadOnly = false;\r\n        this.isView= false;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == null){\r\n        this.isView= false;\r\n        this.isReadOnly = false;\r\n        this.editNow = true;\r\n      }\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.editEntityById(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n           if( resp.authStatus==\"U\" ){\r\n            resp.authDate =\"\"\r\n            resp.authBy=\"\"\r\n          }\r\n           this.auditLogData = resp;\r\n         console.log(this.auditLogData)\r\n         this.getStateName(this.auditLogData.country);\r\n         this.getCityName(this.auditLogData.state)\r\n           this.dataService.setAuditLogData(this.auditLogData);\r\n           this.dataService.sendClickEvent();\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );    \r\n    this.buildItemForm({});\r\n    this.getCountryName(\"country\");\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n  }\r\n  buildItemForm(item) {\r\n    this.entityMaintenance = this.fb.group({\r\n      entityCode: [item?.entityCode || '', Validators.required],\r\n      entityName: [item?.entityName || '', Validators.required],\r\n      parentBankCode: [item?.parentBankCode || '', Validators.required],\r\n      // oneTimeAuth: [item.oneTimeAuth || ''],\r\n      // authStatus: [item.authStatus || ''],\r\n      // recordStatus: [item.recordStatus || ''],\r\n      version: [item?.version || ''],\r\n      denomRequired: [item?.denomRequired || ''],\r\n      mobile: [item?.mobile || '', Validators.compose([Validators.required,Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{6,10}$\")])],\r\n      telephone: [item?.telephone || '',Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{6,10}$\")],\r\n      country: [item?.country || '',Validators.required],\r\n      state: [item?.state || '',Validators.required],\r\n      city: [item?.city || '',Validators.required],\r\n      loggedInUser: [item?.loggedInUser || ''],\r\n      id: [item?.id || ''],\r\n      pincode: [item?.pincode || '', Validators.compose([Validators.required,Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{6,10}$\")])],\r\n    });\r\n\r\n    if(item.country){\r\n      this.getStateName(item.country);\r\n      this.getCityName(item.state);\r\n    }\r\n\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      console.log('resp',data)\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          console.log(data[i])\r\n          this.countries.push(data[i].countryName);\r\n          console.log(this.countries)\r\n        }\r\n      }\r\n      // this.countries = data;\r\n    });\r\n  }\r\n\r\n  getStateName(countryName){\r\n    this.states=[];\r\n    this.cities=[];\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName === countryName){\r\n          this.apiService.getStateByCountry(data[i].id).subscribe((resp: any) => {\r\n            for(let i=0; i<resp.length;i++){\r\n              if(resp[i].authStatus==='A'){\r\n                this.states.push(resp[i].stateName);\r\n              }\r\n            }\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n    this.states;\r\n    // this.entityMaintenance.controls['state'].reset();\r\n    // this.entityMaintenance.controls['city'].reset();\r\n    }\r\n  getCityName(state: any) {\r\n    this.cities=[];\r\n    let entityName = \"city\";\r\n    this.apiService.getDropDownValues1(entityName, state).subscribe((data) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteEntity(this.auditLogData.id)\r\n        .subscribe(data => {\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/entity/list`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForEntity(payload).subscribe((data) => {\r\n          if(data.authStatus==\"U\" ){\r\n            data.authDate =\"\"\r\n            data.authBy=\"\"\r\n          }\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }\r\n    }))\r\n    \r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z ]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    this.entityMaintenance.value.loggedInUser = this.loggedInUser;\r\n    this.apiService.updateEntityDetails(this.entityMaintenance.value).subscribe(data => {\r\n      if(data != null && this.isEdit == true){\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        \r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null || this.isEdit == true){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        \r\n        this.cdr.markForCheck();\r\n\r\n      }\r\n      this.router.navigate([`/maintenance/main/entity/list`]);\r\n    },error=>{\r\n      this.snack.open(error.error.message, 'error', { \r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n             })\r\n    }); \r\n    \r\n    \r\n  }\r\n\r\n  \r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/entity/list`]);\r\n  }\r\n  dataByCountryCode(index,item){\r\n    return item;\r\n  }\r\n  dataByStateCode(index,item){\r\n    return item;\r\n  }\r\n  dataByCityCode(index,item){\r\n    return item;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Entity Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Entity Information </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Entity Information</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Entity Information</h1>\r\n    <!-- <span class=\"text-large\">\r\n        Edit Country\r\n      </span>\r\n      <span fxFlex></span>\r\n      <button mat-button>\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button> -->\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"entityMaintenance\" (ngSubmit)=\"submit()\" class=\"m-333\">\r\n            <h1>Entity Information</h1>\r\n            <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Entity Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                            [readonly]=\"readorWrite\"\r\n                                matInput name=\"entityCodeCode\" \r\n                                (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                [formControl]=\"entityMaintenance.controls['entityCode']\" \r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('entityCode').hasError('required')\">\r\n                                Entity Code is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Entity Name *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"entityName\" \r\n                                type=\"text\"\r\n                                [readonly]=\"readorWrite\" \r\n                                (keypress)=keyPressAlphanumeric($event) maxlength=\"200\"\r\n                                [formControl]=\"entityMaintenance.controls['entityName']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('entityName').hasError('required')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Parent Bank Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"parentBankCode\" \r\n                                type=\"text\"\r\n                                [readonly]=\"readorWrite\" \r\n                                (keypress)=keyPressAlphanumeric($event) maxlength=\"3\"\r\n                                [formControl]=\"entityMaintenance.controls['parentBankCode']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('parentBankCode').hasError('required')\">\r\n                                Parent Bank Code is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\" >\r\n                        <mat-label>Denomination Required ?</mat-label>\r\n                        <mat-form-field  class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select  \r\n                            [disabled]=\"isView\"\r\n                                name=\"denomRequired\" \r\n                                [formControl]=\"entityMaintenance.controls['denomRequired']\">\r\n                                <mat-option [value]=\"'yes'\" selected> Yes </mat-option>\r\n                                <mat-option [value]=\"'no'\"> No </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                      \r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\" >\r\n                        <mat-label>Denomination Required ?</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput \r\n                                type=\"text\"\r\n                                readonly\r\n                                [formControl]=\"entityMaintenance.controls['denomRequired']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('denomRequired').hasError('denomRequired')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                      \r\n                    </div>\r\n\r\n                </div>\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <!-- <div fxFlex=\"33.33\">\r\n                        <mat-label>One time Auth</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"oneTimeAuth\" \r\n                                [formControl]=\"entityMaintenance.controls['oneTimeAuth']\"\r\n                            />    \r\n                        </mat-form-field>\r\n                    </div> -->\r\n\r\n                    <!-- <div fxFlex=\"33.33\">\r\n                        <mat-label>Authorisation Status</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"authStatus\" type=\"text\" \r\n                                [formControl]=\"entityMaintenance.controls['authStatus']\"\r\n                            />\r\n                        </mat-form-field>\r\n                    </div> -->\r\n\r\n                    <!-- <div fxFlex=\"33.33\">\r\n                        <mat-label>Record Status</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"recordStatus\" type=\"text\"\r\n                                [formControl]=\"entityMaintenance.controls['recordStatus']\"\r\n                            />\r\n                        </mat-form-field>\r\n                    </div> -->\r\n\r\n                    <!-- <div fxFlex=\"33.33\">\r\n                        <mat-label>Version <span *ngIf=\"!isReadOnly\" class=\"pl-4 \">*</span></mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"version\" [readonly]=\"isReadOnly\" \r\n                                (keypress)=_keyPress($event) maxlength=\"1\"\r\n                                [formControl]=\"entityMaintenance.controls['version']\"\r\n                            />\r\n                        </mat-form-field>\r\n                    </div> -->\r\n                    \r\n                </div>\r\n\r\n                <h1>Address Information</h1>\r\n\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>Country *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select \r\n                                name=\"country\" [disabled]=\"isView\"\r\n                                [formControl]=\"entityMaintenance.controls['country']\"\r\n                                (selectionChange)=\"getStateName($event.value)\" \r\n                                required\r\n                            >\r\n                                <mat-option *ngFor=\"let country of countries;trackBy:dataByCountryCode\" [value]=\"country\">\r\n                                    {{ country }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"entityMaintenance.get('country').hasError('required')\">\r\n                                Country is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\" >\r\n                        <mat-label>Country *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput \r\n                                type=\"text\"\r\n                                readonly\r\n                                [formControl]=\"entityMaintenance.controls['country']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('country').hasError('country')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                      \r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>State *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select [disabled]=\"isView\" \r\n                                name=\"state\" \r\n                                [formControl]=\"entityMaintenance.controls['state']\" \r\n                                (selectionChange)=\"getCityName($event.value)\" \r\n                                required\r\n                            >\r\n                                <mat-option *ngFor=\"let state of states;trackBy:dataByStateCode \" [value]=\"state\">\r\n                                    {{ state }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"entityMaintenance.get('state').hasError('required')\">\r\n                                State is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\" >\r\n                        <mat-label>State *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput \r\n                                type=\"text\"\r\n                                readonly\r\n                                [formControl]=\"entityMaintenance.controls['state']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('state').hasError('state')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                      \r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>City *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select \r\n                                name=\"city\" [disabled]=\"isView\" \r\n                                [formControl]=\"entityMaintenance.controls['city']\"\r\n                                required\r\n                            >\r\n                                <mat-option *ngFor=\"let city of cities;trackBy:dataByCityCode\" [value]=\"city.value1\">\r\n                                    {{ city.value1 }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"entityMaintenance.get('city').hasError('required')\">\r\n                                City is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\" >\r\n                        <mat-label>City *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput \r\n                                type=\"text\"\r\n                                readonly\r\n                                [formControl]=\"entityMaintenance.controls['city']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('city').hasError('city')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                      \r\n                    </div>\r\n                    </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"32.33\" class=\"pr-16\">\r\n                        <mat-label>Pincode *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                            [readonly]=\"readorWrite\"\r\n                            matInput \r\n                            name=\"pincode\" \r\n                            minlength=\"6\" \r\n                            maxlength=\"10\" \r\n                            pattern =\"^[1-9][0-9][{6}-{10}]$\"\r\n                            (keypress)=\"_keyPress($event)\"\r\n                            [formControl]=\"entityMaintenance.controls['pincode']\" \r\n                            required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('pincode').touched && entityMaintenance.get('pincode').hasError('required')\">\r\n                                <small>Pincode is Required!</small>\r\n                              </mat-error>\r\n                             \r\n                              <mat-error *ngIf=\"!entityMaintenance.get('pincode').valid && !entityMaintenance.get('pincode').hasError('required')\">\r\n                                <small>Please Enter Valid Pincode!</small>\r\n                              </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n\r\n                <h1>Communication Information</h1>\r\n                <!-- <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\"> -->\r\n                <div fxLayout=\"row\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Mobile Number *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"mobile\" \r\n                                (keypress)=_keyPress($event) \r\n                                maxlength=\"10\" [readonly]=\"readorWrite\" \r\n                                minlength=\"10\"\r\n                                [formControl]=\"entityMaintenance.controls['mobile']\"\r\n                                required\r\n                            />\r\n                            <mat-error *ngIf=\"entityMaintenance.get('mobile').hasError('required')\">\r\n                                <small>Mobile Number is Required!</small>\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"!entityMaintenance.get('mobile').hasError('pattern')\">\r\n                                <small>Please Enter valid Mobile Number</small>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Telephone <span *ngIf=\"!isReadOnly\" class=\"pl-4 \"></span></mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"telephone\"  [readonly]=\"readorWrite\" \r\n                                (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                [formControl]=\"entityMaintenance.controls['telephone']\" \r\n                            />\r\n                            <mat-error *ngIf=\"!entityMaintenance.get('mobile').hasError('pattern')\">\r\n                                <small>Please Enter valid Phone Number</small>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            <!-- </div> -->\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                  <button \r\n                    color=\"primary\" *ngIf=\"!isEdit\"\r\n                    [disabled]= \"entityMaintenance.invalid\"\r\n                    mat-raised-button \r\n                    (click)=\"submit()\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <div [hidden]=\"readorWrite\" >\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(entityMaintenance.invalid && entityMaintenance.dirty)\"(click)=\"submit()\">\r\n                       Save\r\n                      </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  \r\n                  \r\n                  <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                      Edit\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                  </div> \r\n                  <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                      Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                      Delete\r\n                    </button> &nbsp;&nbsp;\r\n                  </div>\r\n                 \r\n                  <button\r\n                    mat-raised-button\r\n                    color=\"warn\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n        </form>\r\n\r\n        \r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n  </div>","import {\r\n  sequence,\r\n  trigger,\r\n  animate,\r\n  style,\r\n  group,\r\n  query,\r\n  transition,\r\n  animateChild,\r\n  state,\r\n  animation,\r\n  useAnimation,\r\n  stagger,\r\n} from '@angular/animations';\r\n\r\nconst reusable = animation(\r\n  [\r\n    style({\r\n      opacity: '{{opacity}}',\r\n      transform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})',\r\n    }),\r\n    animate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*')),\r\n  ],\r\n  {\r\n    params: {\r\n      duration: '200ms',\r\n      delay: '0ms',\r\n      opacity: '0',\r\n      scale: '1',\r\n      x: '0',\r\n      y: '0',\r\n      z: '0',\r\n    },\r\n  }\r\n);\r\n\r\nexport const rumangoAnimations = [\r\n  trigger('animate', [transition('void => *', [useAnimation(reusable)])]),\r\n\r\n  trigger('fadeInOut', [\r\n    state(\r\n      '0',\r\n      style({\r\n        opacity: 0,\r\n        display: 'none',\r\n      })\r\n    ),\r\n    state(\r\n      '1',\r\n      style({\r\n        opacity: 1,\r\n        display: 'block',\r\n      })\r\n    ),\r\n    transition('0 => 1', animate('300ms')),\r\n    transition('1 => 0', animate('300ms')),\r\n  ]),\r\n];\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport { auditLogInterface, loggedInUserInterface } from './add-kiosk-maintenance';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-kiosk-login-maintenance',\r\n  templateUrl: './add-kiosk-login-maintenance.component.html',\r\n  styleUrls: ['./add-kiosk-login-maintenance.component.scss']\r\n})\r\nexport class AddKioskLoginMaintenanceComponent implements OnInit {\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  addKioskDetailsForm: FormGroup;\r\n  data:any;\r\n  entityCode: any[] = [];\r\n  bankCode: any[] = [];\r\n  branchCode: string[] = [];\r\n  entity: any;\r\n  loggedInUser : any;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n  entityIsEdit: any;\r\n  id: any;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n  auditLogData: auditLogInterface;\r\n  entityCodeArr: any[] = [];\r\n  readorWrite: boolean=true;\r\n  kioskEnable: boolean = true;\r\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,\r\n    private router:Router,private snack: MatSnackBar, private route : ActivatedRoute,    private dataService : DataService, \r\n    private ls : LocalStoreService, private loader: AppLoaderService,\r\n\r\n    private cdr: ChangeDetectorRef) {\r\n}\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName\r\n    this.getEntityDropdown();    \r\n    this.getBankCode();\r\n     this.getBranchCode();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params.get('id'));\r\n      this.entityIsEdit = params.get('isEdit');\r\n      console.log(\"this.entityIsEdit\",this.entityIsEdit);\r\n      if(params.get('isEdit') == 'Yes'){\r\n         this.isReadOnly = false;\r\n       this.isView= true;\r\n       this.editNow = true;\r\n      }\r\n      else if(params.get('isEdit') == 'No'){\r\n         this.isReadOnly = true;\r\n         this.isView= true;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == 'false'){\r\n        this.isReadOnly = false;\r\n        this.isView= false;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == null){\r\n      this.isView= false;\r\n      }\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n          this.apiService.getKioskDataById(params.get('id')).subscribe((resp) =>{\r\n          console.log(resp);\r\n          if(resp){\r\n            this.kioskEnable = resp.kioskSystemEnable;\r\n            this.readorWrite = true;\r\n            this.buildItemForm(resp);\r\n            resp.otpInfo.map(otp => {\r\n              if(otp.emailId){\r\n                this.pushEmail(otp)\r\n              }\r\n              if(otp.mobileNumber){\r\n                this.pushMobile(otp)\r\n              }\r\n            })\r\n            console.log(this.addKioskDetailsForm);\r\n            \r\n            this.auditLogData = resp;\r\n            this.isAuditData = true;\r\n            this.dataService.setAuditLogData(this.auditLogData);\r\n            this.dataService.sendClickEvent();\r\n          }\r\n       });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n       this.buildItemForm({});\r\nthis.pushEmail();\r\nthis.pushMobile();\r\n      }\r\n    }\r\n    ); \r\n  }\r\n  buildItemForm(item) {\r\n    console.log(\"item\",item)\r\n      this.addKioskDetailsForm = this.formBuilder.group({\r\n      entityCode: [item.entityCode ||'',[Validators.required]],\r\n      bankCode: [item.bankCode || '',Validators.required],\r\n      branchCode: [ item.branchCode || '',Validators.required],\r\n      id: [ item.id ||''],     \r\n      loggedInUser: [item.loggedInUser || ''],     \r\n      kioskSystemCode: [ item.kioskSystemCode || '',[Validators.required]],\r\n      kioskSystemName: [ item.kioskSystemName || '',[Validators.required]],\r\n      passcode: [ item.passcode,[Validators.required]],\r\n      logoutCode: [ item.logoutCode || '',[Validators.required]],\r\n      kioskSystemEnable: [ this.kioskEnable],\r\n      otpEmailData: new FormArray([]),\r\n      otpMobileData: new FormArray([])      \r\n    });\r\n    console.log(this.addKioskDetailsForm);  \r\n    this.addKioskDetailsForm.get('passcode').valueChanges.subscribe(val => this.addKioskDetailsForm.get('passcode').setValidators(Validators.pattern(\"(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){6,6}$\")))  \r\n    this.addKioskDetailsForm.get('logoutCode').valueChanges.subscribe(val => this.addKioskDetailsForm.get('logoutCode').setValidators(Validators.pattern(\"(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){6,6}$\")))  \r\n\r\n  }\r\n\r\n  get f() { return this.addKioskDetailsForm.controls; }\r\n  get e() { return this.f.otpEmailData as FormArray; }\r\n  get m() { return this.f.otpMobileData as FormArray;}\r\n\r\n  removeOtpData(index){\r\n    this.e.removeAt(index)\r\n  }\r\n  removeMobileData(index){\r\n    this.m.removeAt(index)\r\n  }\r\n  pushEmail(item?) {\r\n    this.e.push(this.formBuilder.group({\r\n      id:[item ? item.id : ''],\r\n      emailId: [item ? item.emailId : '', [Validators.required,Validators.pattern('^[A-Za-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]]\r\n    }));\r\n  }\r\n  pushMobile(item?) {\r\n    this.m.push(this.formBuilder.group({\r\n      id: [item ? item.id : ''],\r\n      mobileNumber: [item ? item.mobileNumber : '', [Validators.required,Validators.pattern(\"^[0-9]{10,12}$\")]]\r\n    }));\r\n  }\r\n  getBranchCode(){\r\n    this.apiService.getBranchCode().subscribe(branchCodeResp=>{\r\n      this.branchCode=branchCodeResp;\r\n      console.log(this.branchCode);\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n     // this.bankCode = resp;\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getEntityDropdown(){\r\n    this.apiService.getEntityDropdown().subscribe((data) => {\r\n      console.log(data);\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          this.entityCode.push(data[i]);\r\n          console.log('auth',i)\r\n        }\r\n      }\r\n      \r\n    });   \r\n  }\r\n  check(){\r\n    console.log(\"As\");\r\n    \r\n  }\r\n  submit() {\r\n    console.log(\"Form:\",this.addKioskDetailsForm.value);\r\n    console.log(this.addKioskDetailsForm.get('otpEmailData'));\r\n    console.log(this.addKioskDetailsForm.get('otpEmailData')['controls']);\r\n    \r\n    console.log(this.addKioskDetailsForm.controls.otpEmailData);\r\n    console.log(this.addKioskDetailsForm.controls.otpMobileData);    \r\n    if(this.addKioskDetailsForm.invalid){\r\n    return;\r\n    }\r\n    else if(this.e.controls.length>this.m.controls.length){\r\n      this.snack.open('Please Enter the Mobile Numbers for Email','Ok',{\r\n        duration:3000,\r\n        verticalPosition:\"top\",\r\n        horizontalPosition:\"right\"\r\n      })\r\n      return;\r\n    }\r\n    else if(this.e.controls.length<this.m.controls.length){\r\n      this.snack.open('Please Enter the EmailId for Mobile Number','Ok',{\r\n        duration:3000,\r\n        verticalPosition:'top',\r\n        horizontalPosition:'right'\r\n      })\r\n      return;\r\n    }\r\n    else{\r\n    console.log(\"payload:\",this.addKioskDetailsForm.value);\r\n    const formValue = this.addKioskDetailsForm.value\r\n    let length = this.e.controls.length>this.m.controls.length?this.e.controls.length:this.m.controls.length\r\n    let otpInfo = [];\r\n    for(let i = 0; i < length; i++){\r\n      let otpData = {id:'',kioskSystemId: '',emailId:'',mobileNumber:''};\r\n      if(this.e.controls[i]){\r\n        otpData.id = this.e.controls[i].value.id\r\n        otpData.emailId = this.e.controls[i].value.emailId\r\n      }\r\n      if(this.m.controls[i]){\r\n        otpData.mobileNumber = this.m.controls[i].value.mobileNumber\r\n      }\r\n      if(this.id){\r\n        otpData.kioskSystemId = this.id\r\n      }\r\n      otpInfo.push(otpData)\r\n    }\r\n    \r\n    const payload = {\r\n      bankCode: formValue.bankCode,\r\n      entityCode:formValue.entityCode,\r\n      branchCode:formValue.branchCode,\r\n      id:formValue.id,\r\n      kioskSystemCode:formValue.kioskSystemCode,\r\n      kioskSystemName:formValue.kioskSystemName,\r\n      passcode:formValue.passcode,\r\n      logoutCode:formValue.logoutCode,\r\n      kioskSystemEnable:formValue.kioskSystemEnable,\r\n\r\n      otpInfo:otpInfo,\r\n      loggedInUser:this.loggedInUser,\r\n    }\r\n    console.log(payload.otpInfo[0].emailId);\r\n    \r\n    this.apiService.createKioskBranch(payload).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null && this.isEdit == true){\r\n        this.router.navigate([`/maintenance/main/kioskLogin`]).then(_=>{\r\n                this.snack.open('Data Updated!', 'OK', \r\n                { duration: 4000 , \r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",});\r\n                });       \r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null || this.isEdit == true){\r\n        console.log(\"data\",data);\r\n        this.router.navigate([`maintenance/main/kioskLogin`]).then(_=>{\r\n          this.snack.open('Data Saved!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n          });\r\n        this.cdr.markForCheck();\r\n       }\r\n    }) \r\n    }  \r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/kioskLogin\"]);\r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n    console.log(this.addKioskDetailsForm);\r\n    \r\n    }\r\n    deleteRecord(operation){\r\n      Swal.fire(\r\n        {\r\n          //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n          text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES', 'icon': 'info'\r\n        }\r\n      ).then((result => {\r\n        if(result.isConfirmed==true){\r\n          this.apiService.deleteKioskLoginById(this.auditLogData.id)\r\n          .subscribe(data => {\r\n            this.router.navigate([\"/maintenance/main/kioskLogin\"]);\r\n          },\r\n          err=>{\r\n            if (err.status == 200) {\r\n              this.snack.open('Record Deleted Successfully', 'OK', {\r\n                duration: 4000,\r\n                verticalPosition: 'top',\r\n                horizontalPosition: 'right'\r\n              });\r\n            }\r\n            this.router.navigate([\"/maintenance/main/kioskLogin\"]);\r\n          \r\n        })\r\n        }}))\r\n     \r\n           \r\n         \r\n    } \r\n    updateRecord(operation) {\r\n      Swal.fire(\r\n        {\r\n          //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n          text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          // confirmButtonText: 'PROCEED.'\r\n          cancelButtonText: 'NO',\r\n          confirmButtonText: 'YES', 'icon': 'info'\r\n        }\r\n      ).then((result => {\r\n        if(result.isConfirmed==true){\r\n          let payload: any = {};\r\n          payload.id = this.id;\r\n          payload.operation = operation;\r\n          payload.loggedInUser = this.loggedInUser;\r\n          this.apiService.getAuditLogsForKioskMaintenance(payload).subscribe((data) => {\r\n            console.log(data);\r\n            this.auditLogData = data;\r\n            this.dataService.setAuditLogData(this.auditLogData);\r\n            this.dataService.sendClickEvent();\r\n            let message = '';\r\n            switch (operation) {\r\n              case 'open':\r\n                message = 'opened'\r\n                break;\r\n              case 'close':\r\n                message = 'closed'\r\n                break;\r\n              case 'auth':\r\n                message = 'authorized'\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }}))\r\n     \r\n    }\r\n  dataByEntityCode(index,item){\r\n    return item.entityCode\r\n  }\r\n  dataByBankCode(index,item){\r\n   return item.bankCode\r\n  }\r\n  dataByBranchCode(index,item){\r\n    return item.branchCode;\r\n  }\r\n\r\n  dataBybranchCode(index, branch){\r\n    return branch.branchCode; \r\n }\r\n_keyPress(event){\r\n  if(event.target.value.length == 10){\r\n    event.preventDefault();\r\n  }\r\n  const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    } \r\n}\r\n_keyPress1(event){\r\n  if(event.target.value.length == 6){\r\n    event.preventDefault();\r\n  }\r\n  const pattern = /[A-Za-z0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    } \r\n}\r\n}\r\n","<h1 class=\"main-head\" *ngIf=\"!isEdit\"><small class=\"small-head\">Home >Branch Maintenance  > Kiosk Maintenance  </small></h1>\r\n<h1 class=\"main-head\" *ngIf=\"isEdit\"><small class=\"small-head\">Home > Branch Maintenance  > Kiosk Maintenance  > Edit Kiosk Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16 mb-48\">\r\n    <button mat-icon-button (click)=\"goBack()\" >\r\n        <mat-icon class=\"head-weight\">arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text head-weight\">Create Kiosk Account</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text head-weight\">Edit Kiosk Account</h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\"><h2 class=\"text-large labelClass\"> Kiosk System Details</h2></div>\r\n      <div class=\"highlight\">\r\n      </div>\r\n        <form [formGroup]=\"addKioskDetailsForm\" class=\"m-333\" *ngIf=\"addKioskDetailsForm\">           \r\n                <div fxLayoutAlign=\"space-between\" fxLayoutGap=\"5px\" class=\"mt-24\">\r\n                    <div fxFlex=\"33.33\"  class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                        <mat-form-field  appearance=\"outline\"  class=\"full-width\">\r\n                          <mat-label class=\"labelClass\">Entity Code*</mat-label>\r\n                          <mat-select\r\n                          name=\"entity\"\r\n                          formControlName=\"entityCode\"\r\n                          placeholder=\"Entity Code\">\r\n                         <mat-option *ngFor=\"let entity of entityCode\" [value]=\"entity.entityCode\">\r\n                          {{ entity.entityCode }}\r\n                        </mat-option>\r\n                        </mat-select>\r\n                          <mat-error\r\n                          *ngIf=\"addKioskDetailsForm?.get('entityCode').touched && !addKioskDetailsForm?.get('entityCode').valid\">\r\n                          Entity Code is Required\r\n                      </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                          <mat-label class=\"labelClass\">Entity Code * </mat-label>\r\n                          <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" formControlName=\"entityCode\" />\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                        <mat-label class=\"labelClass\">Bank Code *</mat-label>\r\n                          <mat-select name=\"bankCode\"  formControlName=\"bankCode\" placeholder=\"Bank Code\">\r\n                              <mat-option *ngFor=\"let data of bankCode\"  [value]=\"data.bankCode\">\r\n                              {{data.bankCode}}\r\n                              </mat-option>\r\n                          </mat-select>\r\n                          <mat-error *ngIf=\"addKioskDetailsForm?.get('bankCode').touched && !addKioskDetailsForm?.get('bankCode').valid\">\r\n                            Bank Code is Required\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxFlex=\"33.33\" class=\"pr-16\"  *ngIf=\"readorWrite\">\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                          <mat-label class=\"labelClass\">Bank Code  * </mat-label>\r\n                        <input matInput [readonly]=\"readorWrite\" name=\"bankCode\" placeholder=\"Spread Adder\" formControlName=\"bankCode\" />\r\n                        </mat-form-field>\r\n                      </div>       \r\n                      <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                          <mat-label class=\"labelClass\">Branch Code *</mat-label>\r\n                          <mat-select name=\"branchCode\"  formControlName=\"branchCode\" placeholder=\"Branch Code\">\r\n                            <mat-option *ngFor=\"let branch of branchCode; trackBy:dataByBranchCode\" [value]=\"branch.branchCode\">\r\n                              {{branch.branchCode}} </mat-option>\r\n                          </mat-select>\r\n                          <!-- <mat-error *ngIf=\"addKioskDetailsForm?.get('branchCode').touched && !addKioskDetailsForm?.get('branchCode').valid\">\r\n                            Branch Code is Required\r\n                          </mat-error> -->\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                          <mat-label class=\"labelClass\">Branch Code  * </mat-label>\r\n                        <input matInput [readonly]=\"readorWrite\" name=\"branchCode\" placeholder=\"Spread Adder\" formControlName=\"branchCode\" />\r\n                        </mat-form-field>\r\n                      </div> \r\n                </div>\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"5px\">                    \r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label class=\"labelClass\">Kiosk System Code *</mat-label>\r\n              <input matInput [readonly]=\"readorWrite\" placeholder=\"Kiosk System Code\" formControlName=\"kioskSystemCode\" [maxlength]=\"15\" />\r\n              <mat-error *ngIf=\"addKioskDetailsForm?.get('kioskSystemCode').touched && !addKioskDetailsForm?.get('kioskSystemCode').valid\">\r\n                Kiosk System Code is Required!\r\n               </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"66.66\" class=\"pr-16\">\r\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n              <mat-label class=\"labelClass\">Kiosk System Name*</mat-label>\r\n              <input matInput [readonly]=\"readorWrite\" name=\"kioskSystemName\" placeholder=\"Kiosk System Name\" formControlName=\"kioskSystemName\" />\r\n              <mat-error *ngIf=\"addKioskDetailsForm?.get('kioskSystemName').touched && !addKioskDetailsForm?.get('kioskSystemName').valid\">\r\n                Kiosk System Name is Required!\r\n               </mat-error>\r\n            </mat-form-field>\r\n          </div>                    \r\n                </div>\r\n                <div fxLayoutAlign=\"space-between start\" fxLayoutGap=\"5px\">                    \r\n                  <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label class=\"labelClass\">Passcode *</mat-label>\r\n            <input matInput [readonly]=\"readorWrite\" name=\"passcode\" placeholder=\"Passcode\" formControlName=\"passcode\" (keypress)=\"_keyPress1($event)\" />\r\n            <mat-error *ngIf=\"addKioskDetailsForm?.get('passcode').touched && addKioskDetailsForm?.get('passcode').hasError('required')\">\r\n             Passcode is Required!\r\n             </mat-error>\r\n            <mat-error *ngIf=\"addKioskDetailsForm?.get('passcode').touched && addKioskDetailsForm?.get('passcode').hasError('pattern')\">\r\n            Please Enter 6 Digit Alphanumeric Passcode\r\n             </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label class=\"labelClass\">Logout Code*</mat-label>\r\n            <input matInput [readonly]=\"readorWrite\" name=\"logoutCode\" placeholder=\"Logout Code\" formControlName=\"logoutCode\" (keypress)=\"_keyPress1($event)\"/>\r\n            <mat-error *ngIf=\"addKioskDetailsForm?.get('logoutCode').touched && addKioskDetailsForm?.get('logoutCode').hasError('required')\">\r\n              Logout Code is Required!\r\n             </mat-error>\r\n            <mat-error *ngIf=\"addKioskDetailsForm?.get('logoutCode').touched && addKioskDetailsForm?.get('logoutCode').hasError('pattern')\">\r\n              Please Enter 6 Digit Alphanumeric Logout Code\r\n             </mat-error>\r\n          </mat-form-field>\r\n        </div> \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label class=\"labelClass\">Kiosk System Enable Or Disable</mat-label>\r\n          \r\n            <div [ngClass]=\"{'readEvent':readorWrite}\" >\r\n            <label class=\"switch\">\r\n              <input  type=\"checkbox\" (click)=\"check()\" formControlName=\"kioskSystemEnable\">\r\n              <span class=\"slider round\"></span>\r\n            </label>\r\n          </div>\r\n            <!-- <mat-slide-toggle formControlName=\"addKioskDetailsForm.controls['kioskSystemEnableOrDisable']\" [disabled]=\"readorWrite\"></mat-slide-toggle>             -->\r\n            <!-- <input matInput [readonly]=\"readorWrite\" name=\"kioskSystemEnableOrDisable\" placeholder=\"kiosk System Enable Or Disable\" formControlName=\"addKioskDetailsForm.controls['kioskSystemEnable']\" /> -->\r\n          \r\n        </div>                    \r\n              </div>\r\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">                \r\n                <h2 class=\"labelClass\">Generate Otp Access</h2>                \r\n            </div>\r\n            <div class=\"highlight\">\r\n            </div>\r\n          <div fxLayoutAlign=\"space-between\" fxLayoutGap=\"5px\" class=\"mt-16\">  \r\n            <div fxFlex=\"50\" fxLayout=\"column\" class=\"pr-16\">                \r\n              <h3 class=\"main-head head-weight labelClass\" >Email ID</h3>           \r\n            <mat-card fxFlex=\"98\" class=\"Designmatcard\">\r\n              <mat-card-content> \r\n                <div>\r\n                <div *ngFor=\"let email of  e.controls; let i = index\">                 \r\n                <div fxFlex=\"100\" [formGroup]=\"email\">       \r\n                  <mat-card>\r\n                    <input matInput [readonly]=\"readorWrite\"  formControlName=\"emailId\" />                  \r\n                  </mat-card> \r\n                  <mat-hint *ngIf=\"email.get('emailId').touched && email.get('emailId').hasError('required')\" class=\"error-hint\">Please Enter Email Id</mat-hint>                   \r\n                  <mat-hint *ngIf=\"email.get('emailId').touched && email.get('emailId').hasError('pattern')\" class=\"error-hint\">Please Enter Valid Email Id</mat-hint>                   \r\n                </div>  \r\n                <div class=\"addbtndiv\">\r\n                  <mat-icon *ngIf=\"i == e.controls.length-1 else remove\" (click)=\"pushEmail()\" class=\"addbtn\" [ngClass]=\"{'readEvent':readorWrite}\">add</mat-icon>\r\n                  <ng-template #remove>\r\n                    <mat-icon (click)=\"removeOtpData(i)\" class=\"addbtn\" [ngClass]=\"{'readEvent':readorWrite}\">remove</mat-icon>\r\n                  </ng-template>\r\n                </div>\r\n                \r\n                </div>\r\n              </div>\r\n              </mat-card-content>\r\n            </mat-card> \r\n            </div>\r\n            <div fxFlex=\"50\" fxLayout=\"column\" class=\"pr-16\">                \r\n              <h3 class=\"main-head head-weight labelClass\">Mobile Number</h3>           \r\n            <mat-card fxFlex=\"98\" class=\"Designmatcard\">\r\n              <mat-card-content>  \r\n                <div>\r\n                <div *ngFor=\"let mobile of m.controls; let i = index\">                 \r\n                <div fxFlex=\"100\" [formGroup]=\"mobile\">     \r\n                  <mat-card>\r\n                    <input matInput [readonly]=\"readorWrite\" formControlName=\"mobileNumber\" maxlength=\"10\" (keypress)=\"_keyPress($event)\" \r\n                    />                  \r\n                  </mat-card>  \r\n                  <mat-hint *ngIf=\"mobile.get('mobileNumber').touched && mobile.get('mobileNumber').hasError('required')\" class=\"error-hint\">Please Enter Mobile Number</mat-hint>           \r\n                  <mat-hint *ngIf=\"mobile.get('mobileNumber').touched && mobile.get('mobileNumber').hasError('pattern')\" class=\"error-hint\">Please Enter Valid Mobile Number</mat-hint>         \r\n                </div>\r\n                <div class=\"addbtndiv\">\r\n                  <mat-icon *ngIf=\"i == m.controls.length-1; else removeMobile\" (click)=\"pushMobile()\" class=\"addbtn\" [ngClass]=\"{'readEvent':readorWrite}\">add</mat-icon>\r\n                  <ng-template #removeMobile>\r\n                    <mat-icon (click)=\"removeMobileData(i)\" class=\"addbtn\" [ngClass]=\"{'readEvent':readorWrite}\">remove</mat-icon>\r\n                  </ng-template>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              </mat-card-content>\r\n            </mat-card> \r\n            </div>\r\n          </div>            \r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                  <button *ngIf=\"!isEdit\" \r\n                    mat-raised-button \r\n                    class=\"btnConfirmClass\"\r\n                    color=\"primary\"\r\n                    (click)=\"submit()\"\r\n                    [disabled]=\"!(addKioskDetailsForm.valid && addKioskDetailsForm.dirty)\"\r\n                  >\r\n                    Save\r\n                 \r\n                  </button> \r\n                  <div [hidden]=\"readorWrite\">\r\n                    <button *ngIf=\"isEdit\"  type=\"button\" mat-raised-button\r\n                    class=\"btnConfirmClass\"\r\n                    color=\"primary\"\r\n                    [disabled]= \"!addKioskDetailsForm.valid\" \r\n                    (click)=\"submit(addKioskDetailsForm.value)\">\r\n                       Save\r\n                     </button>\r\n                  </div>  \r\n               \r\n                  &nbsp;\r\n                  <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\" >\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" class=\"btnConfirmClass\" (click)=\"editRecord()\">\r\n                      Edit\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" class=\"btnConfirmClass\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                  </div> \r\n                  <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" class=\"btnConfirmClass\" (click)=\"updateRecord('open')\">\r\n                      Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" class=\"btnConfirmClass\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" class=\"btnConfirmClass\" (click)=\"deleteRecord('delete')\">\r\n                      Delete\r\n                    </button> &nbsp;&nbsp;\r\n                  </div>\r\n                 \r\n                  <button\r\n                    mat-raised-button\r\n                    class=\"btnCancelClass\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>\r\n\r\n\r\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-holiday-list-dialog',\r\n  templateUrl: './holiday-list-dialog.component.html',\r\n  styleUrls: ['./holiday-list-dialog.component.scss']\r\n})\r\nexport class HolidayListDialogComponent implements OnInit {\r\n  holidayList: any;\r\n  myControl = new FormControl();\r\n  markAsHoliday: boolean = false;\r\n  disableSave: boolean;\r\n  dateUpdated: any;\r\n\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<HolidayListDialogComponent>, private cdr: ChangeDetectorRef,\r\n    private formBuilder: FormBuilder,\r\n    private snack: MatSnackBar,\r\n    private ls:LocalStoreService,\r\n    public dialog: MatDialog, private apiService: ApiService) { }\r\n  date: Date;\r\n  isEdit: boolean = false;\r\n  addBranchHoliday: FormGroup;\r\n  options: string[] = ['National', 'Regional', 'Bank', 'Common'];\r\n  filteredOptions: Observable<string[]>;\r\n  ngOnInit(): void {\r\n    if (this.data.date) {\r\n      this.date = this.data.date;\r\n    }\r\n\r\n    this.fetchBranchHolidayByCalendarDateDetails();\r\n\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value)),\r\n    );\r\n\r\n    if (Object.keys(this.data.holidayData).length != 0) {\r\n      this.buildItemForm(this.data.holidayData);\r\n    } else {\r\n      this.buildItemForm({});\r\n    }\r\n  }\r\n  buildItemForm(item) {\r\n    this.addBranchHoliday = this.formBuilder.group({\r\n      bankCode: [item.bankCode || ''],\r\n      branchCode: [item.branchCode || ''],\r\n      calenderYear: [item.calenderYear || ''],\r\n      entityCode: [item.entityCode || ''],\r\n      description: [''],\r\n      holidayType: [''],\r\n    })\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  onCheckOfMarAsHoiday() {\r\n    this.markAsHoliday = !this.markAsHoliday;\r\n  }\r\n\r\n  reset(addBranchHoliday) {\r\n    this.addBranchHoliday.get('description').setValue('');\r\n    this.addBranchHoliday.get('holidayType').setValue('');\r\n    // this.myControl.setValue(undefined);\r\n    // this.filteredOptions = this.myControl.valueChanges.pipe(\r\n    //   startWith(''),\r\n    //   map(value => this._filter(value)),\r\n    // );\r\n    this.markAsHoliday = false;\r\n  }\r\n\r\n\r\n\r\n\r\n  fetchBranchHolidayByCalendarDateDetails() {\r\n    this.apiService.fetchBranchHolidayByCalendarDateDetails()\r\n      .subscribe(holidayList => {\r\n        this.holidayList = holidayList;\r\n      });\r\n  }\r\n\r\n\r\n\r\n  saveHoliday(addBranchHoliday) {\r\n\r\n    if (this.data.action === 'UPDATE') {\r\n      this.isEdit = true;\r\n    }else{\r\n      this.isEdit = false;\r\n    }\r\n   \r\n    console.log('addBranchHoliday :: ', addBranchHoliday, this.date);\r\n    this.ls.setItem('holidayType',addBranchHoliday.holidayType)\r\n    let details: any[] = [];\r\n    var responseDate = moment(this.date).format('YYYY-MM-DD');\r\n    let payload = {\r\n      entityCode: addBranchHoliday.entityCode,\r\n      bankCode: addBranchHoliday.bankCode,\r\n      branchCode: addBranchHoliday.branchCode,\r\n      calenderYear: addBranchHoliday.calenderYear,\r\n      description: addBranchHoliday.description,\r\n      holidayType: addBranchHoliday.holidayType,\r\n      calenderDate: responseDate\r\n    }\r\n    details.push(payload);\r\n    console.log('details :: ', details);\r\n    this.dateUpdated = details;\r\n\r\n    this.apiService.updateBranchHolidayDetails(details, this.isEdit)\r\n      .subscribe(data => {\r\n        this.apiService.setHolidayData(data);\r\n        if (data != null) {\r\n          this.disableSave = true;\r\n          this.snack.open('Data Saved' + ' !', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.cdr.markForCheck();\r\n          this.dateUpdated = responseDate;\r\n        }\r\n        this.goToClose();\r\n\r\n      }, error => {\r\n        this.disableSave = true;\r\n        this.snack.open(`${error.error}` + ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n          panelClass: 'snackbar-error'\r\n        });\r\n\r\n      });\r\n  }\r\n  goToClose() {\r\n    this.dialogRef.close({\r\n      message: 'Confirm',\r\n      dateUpdated: this.dateUpdated\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card style=\"display: contents;padding: 0px;margin: 0px;\">\r\n\r\n\t<mat-card-content>\r\n\t\t<form [formGroup]=\"addBranchHoliday\" ngNativeValidate>\r\n\t\t\t<div fxLayout=\"row\">\r\n\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t\t<h3 style=\"color: darkgray;\">CALENDAR</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"end start\">\r\n\t\t\t\t\t<mat-icon style=\"color: darkgray; cursor: pointer;\" (click)=\"goToClose()\">close</mat-icon>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\">\r\n\t\t\t\t<h2>{{date | date:'EEE ,MMM dd'}}</h2>\r\n\t\t\t</div>\r\n\r\n\t\t\t<hr>\r\n\r\n\t\t\t<!-- <mat-card style=\"padding: 10px;margin:2px;\">\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\t\t\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"start center\">\r\n\t\t\t\t\t\t\t<h3 style=\"color: darkgray;\">Today</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"end center\">\r\n\t\t\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"menu\">\r\n\t\t\t\t\t\t\t\t<mat-icon style=\"color: darkgray; cursor: pointer;\">more_vert</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t\t\t\t\t\t\t<button mat-menu-item>Edit holiday</button>\r\n\t\t\t\t\t\t\t\t<button mat-menu-item>Mark as holiday</button>\r\n\t\t\t\t\t\t\t</mat-menu>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t</mat-card> -->\r\n\r\n\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n\t\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t\t<mat-label>Select Holiday Type</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"holidayType\" [matAutocomplete]=\"auto\">\r\n\t\t\t\t\t<mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\r\n\t\t\t\t\t\t<mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n\t\t\t\t\t\t\t{{option}}\r\n\t\t\t\t\t\t</mat-option>\r\n\t\t\t\t\t</mat-autocomplete>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<mat-form-field appearance=\"fill\">\r\n\t\t\t\t\t<mat-label>Description</mat-label>\r\n\t\t\t\t\t<input type=\"text\" matInput formControlName=\"description\" [disabled]=\"!addBranchHoliday.get('holidayType').value\">\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t\t<div class=\"menuIconDiv\">\r\n\t\t\t\t\t<mat-icon [matMenuTriggerFor]=\"menu\" class=\"menuIcon\">more_vert</mat-icon>\r\n\t\t\t\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item>Edit holiday</button>\r\n\t\t\t\t\t\t<button mat-menu-item [disabled]=\"!markAsHoliday\">Mark as holiday</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\">\r\n\t\t\t\t<mat-checkbox matSuffix (change)=\"onCheckOfMarAsHoiday()\">Enable mark as holiday</mat-checkbox>\r\n\t\t\t</div>\r\n\t\t\t<div fxLayout=\"row\" fxLayoutGap=\"10\" fxLayoutAlign=\"end center\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button mat-button (click)=\"saveHoliday(addBranchHoliday.value)\" >\r\n\t\t\t\t\t\t<mat-icon color=\"primary\">done</mat-icon>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button (click)=\"reset(addBranchHoliday.value)\" mat-button>\r\n\t\t\t\t\t\t<mat-icon color=\"warn\">highlight_off</mat-icon>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<!-- <mat-divider></mat-divider> -->\r\n\t\t\t<hr>\r\n\t\t\t<div *ngFor=\"let holiday of holidayList\">\r\n\t\t\t\t<mat-card style=\"padding: 10px;margin:2px;\">\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\t\t\t\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"start center\" style=\"color: darkgray;\">\r\n\t\t\t\t\t\t\t\t<h4>{{holiday.calenderDate | date:'EEE ,MMM dd'}}</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div fxFlex=\"50%\" fxLayoutAlign=\"end center\">\r\n\t\t\t\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"menu\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon style=\"color: darkgray; cursor: pointer;\">more_vert</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t\t\t\t\t\t\t\t<button mat-menu-item>Edit holiday</button>\r\n\t\t\t\t\t\t\t\t\t<button mat-menu-item>Mark as holiday</button>\r\n\t\t\t\t\t\t\t\t</mat-menu>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngIf=\"holiday.holidayType=='Common'\"\r\n\t\t\t\t\t\t\tclass=\"commonHoliDiv\">\r\n\t\t\t\t\t\t\t<h4>{{holiday.holidayType}}-{{holiday.description}}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngIf=\"holiday.holidayType=='Regional'\"\r\n\t\t\t\t\t\t\tclass=\"RegionalHoliDiv\">\r\n\t\t\t\t\t\t\t<h4>{{holiday.holidayType}}-{{holiday.description}}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngIf=\"holiday.holidayType=='Bank'\"\r\n\t\t\t\t\t\t\tclass=\"BankHoliDiv\">\r\n\t\t\t\t\t\t\t<h4>{{holiday.holidayType}}-{{holiday.description}}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngIf=\"holiday.holidayType=='National'\"\r\n\t\t\t\t\t\t\tclass=\"NationalHoliDiv\">\r\n\t\t\t\t\t\t\t<h4>{{holiday.holidayType}}-{{holiday.description}}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t\t<hr>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</mat-card-content>\r\n\r\n</mat-card>","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\n\r\nimport { tillVault } from \"app/shared/models/tillvault\";\r\n\r\n@Component({\r\n  selector: \"app-till-vault-status-summary\",\r\n  templateUrl: \"./till-vault-status-summary.component.html\",\r\n  styleUrls: [\"./till-vault-status-summary.component.scss\"],\r\n  animations: rumangoAnimations\r\n})\r\nexport class TillVaultStatusSummaryComponent implements OnInit {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"entityCode\", value: \"Entity Code\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  displayedColumns: string[] = [ 'entityCode','bankCode','branchCode', 'tillId', 'authStatus','recordStatus','action'];\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public items: string[]=[];\r\n  public getItemSub: Subscription;\r\n  fetchVaultStatus: tillVault;\r\n  loading: boolean;\r\n  tillData: any;\r\n  till: any;\r\n  data: any;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private dataService: DataService,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    //this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.getTillId();\r\n    this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'tillVaultStatus');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.getItems();\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n  getItems() {\r\n    // this.loading = true;\r\n    this.getItemSub = this.apiService\r\n      .fetchTillVaultStatusInfoList()\r\n      .subscribe((data:any) => {\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.items = data;\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        // this.loading = false;\r\n      });\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().toString().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  // announceSortChange(sortState: Sort) {\r\n  //   if (sortState.direction) {\r\n  //     this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n  //   } else {\r\n  //     this._liveAnnouncer.announce(\"Sorting cleared\");\r\n  //   }\r\n  // }\r\n\r\n  openPopUp(row) {\r\n    this.fetchTellVaultStatus(row);\r\n    // this.dataService.sendNavParam(this.fetchVaultStatus);\r\n    this.router.navigate([`/maintenance/main/tillVaultStatus/${row.id}`]);\r\n  }\r\n\r\n  fetchTellVaultStatus(row) {\r\n    // this.loader.open();\r\n    this.apiService.getTillVaultStatusById(row.id).subscribe((result) => {\r\n      this.data = result;\r\n      if (this.data != null) {\r\n        this.tillData = this.till.find((x) => x.id == this.data.tillId);\r\n        if (this.tillData != null) {\r\n          this.data.tillId = this.tillData.tillVaultCode;\r\n        }\r\n        this.fetchVaultStatus = this.data;\r\n      }\r\n\r\n      if (this.fetchVaultStatus != null) {\r\n        localStorage.setItem(\r\n          \"fetchVaultStatus\",\r\n          JSON.stringify(this.fetchVaultStatus)\r\n        );\r\n        // this.loader.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/tillVaultStatus/add\"]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/\"]);\r\n  }\r\n  tillVaultStatusSummery(){\r\n    this.downloadService.downloadFiles(\"tillVaultStatusSummery\" , this.items);\r\n\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.entityCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteTillVaultStatusById(row.id).subscribe(\r\n            (res: any) => {},\r\n            (err: any) => {\r\n              (\"\");\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open(\"Member deleted!\", \"OK\", { duration: 4000 });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  getTillId() {\r\n    let tillOrVault = \"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  dataByFilter(index,filter){\r\n    return filter.key;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Status Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Till Vault Status Maintenance\r\n  </span>\r\n  </div>\r\n<mat-card class=\"mt-32\" >\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Status Maintenance\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"tillVaultStatusSummery()\"  mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>  \r\n  <mat-card-content class=\"p-0\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n       <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n       </button>\r\n     </div>\r\n      \r\n    </div>\r\n    </div>\r\n    <!-- <ngx-datatable class=\"material ml-0 mr-0\" [rows]=\"dataSource?.data\" [columnMode]=\"'force'\" [headerHeight]=\"50\"\r\n      [footerHeight]=\"50\" [scrollbarH]=\"true\" [limit]=\"6\" [rowHeight]=\"50\">\r\n      <ngx-datatable-column name=\"Entity Code\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.entityCode }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Bank Code\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.bankCode }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Branch Code\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.branchCode }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Till Id\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.tillId }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Auth Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.authStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Record Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.recordStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(row)\">\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button mat-sm-button color=\"warn\" [disabled]=\"row.oneTimeAuth =='Y'\"\r\n            (click)=\"deleteItem(row)\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n    </ngx-datatable> -->\r\n\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort>\r\n\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.entityCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"bankCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bannk Code \"> Bank Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.bankCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"branchCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by status\"> Branch Code         \r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.branchCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"tillId\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by status\"> Till Id      \r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.tillId}} </mat-cell>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.authStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element)\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\"  [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> -->\r\n  </mat-card-content>\r\n</mat-card>","import {ElementRef, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {AfterViewInit, Component, ViewChild} from '@angular/core';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-country-state-maintenance',\r\n  templateUrl: './country-state-maintenance.component.html',\r\n  styleUrls: ['./country-state-maintenance.component.scss']\r\n})\r\nexport class CountryStateMaintenanceComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n  currentUser:string;\r\n  public getItemSub: Subscription;\r\n  public userdata: any[];\r\n  public items: string[];\r\n\r\n dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['countryCode', 'countryName', 'countryIsoCode2', 'region', 'ibanCheckReqd', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'countryCode', value: 'Country Code' },\r\n    { key: 'countryName', value: 'Country Name' },\r\n    { key: 'regionCode', value: 'Region Code' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(private router:Router,\r\n     private snack: MatSnackBar,\r\n     private loader: AppLoaderService,\r\n       private confirmService: AppConfirmService,\r\n       private apiService:ApiService,\r\n       private _liveAnnouncer: LiveAnnouncer,\r\n       private downloadService: DownloadService\r\n       ) { }\r\n\r\n  ngOnInit(): void {\r\n   this.getAllCountries(); \r\n   \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n \r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'countryMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getAllCountries();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  getAllCountries() {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n   \r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.userdata= data;\r\n\r\n    });\r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/countryStatepopup\"]);\r\n  }\r\n  openPopUp(data: any = {}, isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/countryStatepopup\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n  getBranches() {\r\n    this.getItemSub = this.apiService.getAllBranch()\r\n      .subscribe(data => {\r\n        this.items = data;\r\n      })\r\n  }\r\n  countryStateMaintenance(){\r\n    this.downloadService.downloadFiles(\"countryStateMaintenance\", this.userdata);\r\n  }\r\n\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.countryName}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteCountry(row.id)\r\n            .subscribe(data => {\r\n              \r\n            },    err=>{\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n            this.getAllCountries();\r\n            \r\n          })\r\n        }\r\n      })\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Country and State Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Country and State Maintenance\r\n  </span>\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Countries\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"countryStateMaintenance()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n</div><br>\r\n<div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n          <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n\r\n            <mat-option value=\"0\" disabled>Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div style=\"padding-top: 3px;\">\r\n        <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n      </div>\r\n    <div class=\"filterDiv\">\r\n     <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"openPopUp('','false')\" >ADD NEW\r\n     </button>\r\n   </div>\r\n\r\n  </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n      <ng-container matColumnDef=\"countryCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country code\"> Country Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.countryCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"countryName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country name\"> Country Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.countryName}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"countryIsoCode2\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country code 2\"> Country\r\n          Code 2 </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.countryIsoCode2}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"region\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by region code\"> Region Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.region}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"ibanCheckReqd\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by iban check required\"> IBAN check required\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.ibanCheckReqd}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n      <!-- <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container> -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"openPopUp(element,'Yes')\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.authStatus == 'Authorized'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n</mat-card>","import { Component, EventEmitter,ElementRef,  OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\nimport { currentUser } from 'app/shared/models/cureentUser';\r\n\r\n\r\n@Component({\r\n  selector: 'app-bank-list',\r\n  templateUrl: './bank-list.component.html',\r\n  styleUrls: ['./bank-list.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class BankListComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n\r\n  displayedColumns: string[] = ['entityCode', 'bankCode', 'bankName', 'headOfficeBrn', 'country', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n    { key: 'bankName', value: 'Bank Name' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource = new MatTableDataSource();\r\n  \r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  entityCode:string[]=[];\r\n\r\n  public items: string[];\r\n  users: string[] = [];\r\n  public getItemSub: Subscription;\r\n\r\n\r\n \r\n  currentUser: currentUser;\r\n  loading: boolean;\r\n  constructor(\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private dataService:DataService,\r\n    private _location: Location,\r\n    private ls: LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    \r\n    this.getAllBanks();\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'bank');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getAllBanks();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n  getAllBanks() {\r\n    this.getItemSub = this.apiService.getBankCode()\r\n      .subscribe(data => {\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.items = data;\r\n      \r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.users = data;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        \r\n      })\r\n  }\r\n\r\n\r\n  openPopUp(row) {\r\n   \r\n    this.dataService.shareBankItem(row);\r\n    this.router.navigate([`/maintenance/bank/${row.id}`]);\r\n  }\r\n  bankList(){\r\n    this.downloadService.downloadFiles(\"bankMaintance\" , this.users);\r\n  }\r\n  deleteItem(row) {\r\n      this.confirmService.confirm({ message: `Are you sure, you want to delete ${row.bankName}?` })\r\n         .subscribe((res) => {\r\n              console.log('res')\r\n              if (res) {\r\n                this.loader.open();\r\n                this.apiService.deleteBank(row.id,this.currentUser.userName)\r\n                .subscribe((res: any) => {\r\n                     (\"\");\r\n                    console.log(res);\r\n                    if (res) {\r\n                    this.loader.close();\r\n                    this.snack.open('Record Deleted Successfully', 'OK', {\r\n                      duration: 4000,\r\n                      verticalPosition: 'top',\r\n                      horizontalPosition: 'right'\r\n                    });\r\n                  }\r\n                  this.getAllBanks();\r\n  \r\n                })\r\n          }\r\n  \r\n        });\r\n    }\r\n\r\n  goBack(){\r\n    // this._location.back();\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  doFilter(filterBy, e){\r\n   \r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n \r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  dataByFilter(index,filter){\r\n    return filter.value;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary  > Bank Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Bank Maintenance\r\n  </span>  \r\n</div>\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Banks\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n  <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <!-- <button mat-menu-item>\r\n      <span>Export</span>\r\n    </button> -->\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"bankList()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n<div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n    <div>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Filter By</mat-label>\r\n        <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n          <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n          <mat-option value=\"0\" disabled>Select</mat-option>\r\n          <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n            {{filter.value}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Search</mat-label>\r\n        <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n        <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n        <mat-icon matSuffix>search</mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n    <!-- <div style=\"padding-top: 3px;\">\r\n      <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n    </div>\r\n  <div>\r\n  <button mat-flat-button color=\"primary\" routerLink=\"/maintenance/main/bank/add\" style=\"height: 45px; margin-left: 15cm;\">ADD BANK</button>\r\n  </div> -->\r\n\r\n  <div style=\"padding-top: 3px;\">\r\n    <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n  </div>\r\n  <div class=\"filterDiv\">\r\n   <button mat-flat-button color=\"primary\" class=\"addNewBtn\" routerLink=\"/maintenance/main/bank/add\" >ADD NEW\r\n   </button>\r\n </div>\r\n\r\n</div>\r\n</div>\r\n<div class=\"mat-elevation-z0\">\r\n  <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n    <ng-container matColumnDef=\"entityCode\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by entity code\"> Entity\r\n        Code\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"bankCode\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by bank code \">Bank Code\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"bankName\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by bank name\"> Bank Name\r\n         </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element?.bankName}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"headOfficeBrn\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by head office brn\"> Head Office Branch\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.headOfficeBrn}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"country\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by  country\"> Country\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.country}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"authStatus\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"recordStatus\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"action\">\r\n      <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n      </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n      <div>\r\n       <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n      </div>\r\n      </mat-cell>\r\n    </ng-container> -->\r\n    <ng-container matColumnDef=\"action\">\r\n      <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">\r\n        <button\r\n          mat-icon-button\r\n          mat-sm-button\r\n          color=\"primary\"\r\n          class=\"mr-16\"\r\n          (click)=\"openPopUp(element,'Yes')\"\r\n        >\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button\r\n          mat-icon-button\r\n          mat-sm-button\r\n          color=\"warn\"\r\n          [disabled]=\"element.authStatus == 'Authorized'\"\r\n          (click)=\"deleteItem(element)\"\r\n        >\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n  <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n</div>\r\n</mat-card>","import { ChangeDetectorRef, Input, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\n\r\n@Component({\r\n  selector: 'app-maintenance-home',\r\n  templateUrl: './maintenance-home.component.html',\r\n  styleUrls: ['./maintenance-home.component.scss']\r\n})\r\nexport class MaintenanceHomeComponent implements OnInit {\r\n  isSidenavOpen: Boolean = true;\r\n  @Input() profilePanel;\r\n  @ViewChild(MatSidenav) private sideNav: MatSidenav;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    // document.getElementById('main-content-wrap').style.backgroundColor = 'white' ; \r\n  }\r\n\r\n  toggleNotific() {\r\n    this.sideNav.open();\r\n  }\r\n\r\n  close() {\r\n    this.profilePanel.close();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n      \r\n  }\r\n}\r\n","\r\n    <div class=\"container\">\r\n      <div class=\"m-333\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AuditLogComponent } from \"app/views/maintenance/audit-log/audit-log.component\";\r\nimport Swal from \"sweetalert2\";\r\n@Component({\r\n  selector: \"app-cutomer-category-create\",\r\n  templateUrl: \"./cutomer-category-create.component.html\",\r\n  styleUrls: [\"./cutomer-category-create.component.scss\"],\r\n})\r\nexport class CutomerCategoryCreateComponent implements OnInit {\r\n  @ViewChild(\"auditLog\") auditLog: AuditLogComponent;\r\n  public itemForm: FormGroup;\r\n  cutomerCategoryForm: FormGroup;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow: boolean = false;\r\n  entityIsEdit: boolean;\r\n  id: number;\r\n  isAuditData: boolean = false;\r\n  readorWrite: boolean = true;\r\n  loggedInUser: string;\r\n  auditData: any;\r\n  categoryCode: string[];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private cdr: ChangeDetectorRef,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm({});\r\nthis.getCustomerCategoryCode();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.entityIsEdit = params.get(\"isEdit\");\r\n      if (params.get(\"isEdit\") == \"Yes\") {\r\n        this.isReadOnly = false;\r\n        this.isView = true;\r\n        this.editNow = true;\r\n      } else if (params.get(\"isEdit\") == \"No\") {\r\n        this.isReadOnly = true;\r\n        this.isView = true;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == \"false\") {\r\n        this.isReadOnly = false;\r\n        this.isView = false;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == null) {\r\n        this.isView = false;\r\n      }\r\n      if (params.get(\"id\")) {\r\n        this.isEdit = true;\r\n        this.id = params.get(\"id\");\r\n        this.api.editEntityById(params.get(\"id\")).subscribe((resp) => {\r\n          this.buildItemForm(resp);\r\n        });\r\n        this.api\r\n          .getCustomerCategoryById(params.get(\"id\"))\r\n          .subscribe((resp: any) => {\r\n            this.buildItemForm(resp);\r\n            if (resp.authStatus == \"U\") {\r\n              resp.authDate = \"\";\r\n              resp.authBy = \"\";\r\n            }\r\n            this.auditData = resp;\r\n            this.isAuditData = true;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n          });\r\n      } else {\r\n        this.readorWrite = false;\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n\r\n    this.loggedInUser = this.ls.getItem(\"ICUST_USER\").userName;\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      id: [item.id || \"\"],\r\n      authStatus: [item.authStatus || \"\"],\r\n      categoryCode: [item.categoryCode || \"\"],\r\n      categoryDescription: [\r\n        item.categoryDescription || \"\",\r\n        [Validators.required],\r\n      ],\r\n      categoryName: [item.categoryName || \"\", [Validators.required]],\r\n      isActive: [item.isActive || true],\r\n      oneTimeAuth: [item.oneTimeAuth || \"\"],\r\n      recordStatus: [item.recordStatus || \"\"],\r\n      version: [item.version || \"\"],\r\n      createdDate: [item.createdDate || \"\"],\r\n      lastModifiedDate: [item.lastModifiedDate || \"\"],\r\n      authBy: [item.authBy || \"\"],\r\n      authDate: [item.authDate || \"\"],\r\n      modifiedBy: [item.modifiedBy || \"\"],\r\n      createdBy: [item.createdBy || \"\"],\r\n      noOfModification: [item.noOfModification || \"\"],\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/customerCategory`]);\r\n  }\r\n\r\n\r\n  onCategoryCodeChange(event){\r\n    console.log(event);\r\n    this.api.getCustomerCategory().subscribe((resp: any) => {\r\n     console.log(resp);\r\n    });\r\n  }\r\n\r\n  deleteRecord(operation) {\r\n    Swal.fire({\r\n      text:\r\n        \"You are trying to \" +\r\n        operation +\r\n        \" record.\" +\r\n        \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed == true) {\r\n        this.apiService.deleteCustomerCategory(this.auditData.id).subscribe(\r\n          (data) => {\r\n            this.router.navigate([`/maintenance/main/customerCategory`]);\r\n          },\r\n          (err) => {\r\n            if (err.status == 200) {\r\n              this.snack.open(\"Record Deleted Successfully\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            }\r\n            this.router.navigate([`/maintenance/main/customerCategory`]);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editRecord() {\r\n    this.readorWrite = false;\r\n  }\r\ngetCustomerCategoryCode(){\r\n  this.apiService.getDropDownValues('category_code').subscribe(res => this.categoryCode = res)\r\n}\r\n  updateRecord(operation) {\r\n    Swal.fire({\r\n      text:\r\n        \"You are trying to \" +\r\n        operation +\r\n        \" record.\" +\r\n        \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed == true) {\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService\r\n          .updateCustomerAuditLog(payload)\r\n          .subscribe((data) => {\r\n            if (data.authStatus == \"U\") {\r\n              data.authDate = \"\";\r\n              data.authBy = \"\";\r\n            }\r\n\r\n            this.auditData = data;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n            this.isAuditData = true;\r\n            this.dataService.sendClickEvent();\r\n            let message = \"\";\r\n            switch (operation) {\r\n              case \"open\":\r\n                message = \"opened\";\r\n                break;\r\n              case \"close\":\r\n                message = \"closed\";\r\n                break;\r\n              case \"auth\":\r\n                message = \"authorized\";\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.itemForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.itemForm.value.loggedInUser = this.loggedInUser;\r\n      this.api.saveCustomerCategory(this.itemForm.value).subscribe((data) => {\r\n        \r\n        console.log(data);\r\n        \r\n        if(data.status==500){\r\n         \r\n            console.log(data);\r\n            this.snack.open(data.message, \"OK\", {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n\r\n        this.cdr.markForCheck();\r\n        }\r\n        \r\n        else if (data != null && this.isEdit == true) {\r\n          this.router\r\n            .navigate([`/maintenance/main/customerCategory`])\r\n            .then((_) => {\r\n              this.snack.open(\"Data Updated!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            });\r\n          this.cdr.markForCheck();\r\n        }\r\n        else if (data != null || this.isEdit == true) {\r\n          this.router\r\n            .navigate([`/maintenance/main/customerCategory`])\r\n            .then((_) => {\r\n              \r\n              this.snack.open(\"Data Saved!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            });\r\n          this.cdr.markForCheck();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  dataByBank(index, bankC) {\r\n    return bankC.bankCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Customer Category Maintenance > <span\r\n            *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Customer Category </small>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n        <button mat-icon-button (click)=\"goBack()\">\r\n            <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Customer Category </h1>\r\n        <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Customer Category </h1>\r\n    </div>\r\n    <mat-card>\r\n        <mat-card-content>\r\n            <form [formGroup]=\"itemForm\" (ngSubmit)=\"submit()\">\r\n                <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                    <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n\r\n                        <div fxFlex=\"30\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                            <mat-label>Category Code</mat-label>\r\n                            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                                <input *ngIf=\"readorWrite\" matInput [readonly]=\"readorWrite\" (selectionChange)=\"onCategoryCodeChange($event)\"  name=\"categoryCode\" formControlName=\"categoryCode\"\r\n                                    placeholder=\"Category Code\" />\r\n                                    <mat-select *ngIf=\"!readorWrite\" name=\"categoryCode\" formControlName=\"categoryCode\"\r\n                                    placeholder=\"Category Code\">\r\n                                        <mat-option *ngFor=\"let category of categoryCode\" [value]=\"category\">{{category}}</mat-option>\r\n                                    </mat-select>\r\n\r\n                                <mat-error\r\n                                    *ngIf=\"itemForm?.get('categoryCode').touched && !itemForm?.get('categoryCode').valid\">\r\n                                    Category Code is Required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex=\"30\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n                            <mat-label>Category Code</mat-label>\r\n                            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                                <input matInput [readonly]=\"readorWrite\" name=\"categoryCode\"\r\n                                    formControlName=\"categoryCode\">\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div fxFlex=\"50\" class=\"pr-16\">\r\n\r\n                            <mat-label>Category Name*</mat-label>\r\n                            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                                <input matInput [readonly]=\"readorWrite\" name=\"categoryName\" formControlName=\"categoryName\" maxlength=\"20\"\r\n                                    placeholder=\"Category Name\" />\r\n\r\n                                <mat-error\r\n                                    *ngIf=\"itemForm?.get('categoryName').touched && !itemForm?.get('categoryName').valid\">\r\n                                    Category Name is Required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex=\"50\" class=\"pr-16\">\r\n                            <mat-label>Category Description*</mat-label>\r\n                            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                                <input matInput [readonly]=\"readorWrite\" name=\"categoryDescription\" maxlength=\"200\"\r\n                                    formControlName=\"categoryDescription\" placeholder=\"Category Description\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n                        <div>\r\n                            <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\"\r\n                                *ngIf=\"!isEdit\">Save\r\n                            </button>\r\n                        </div>\r\n                        <div [hidden]=\"readorWrite\">\r\n                            <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\"\r\n                                *ngIf=\"isEdit\">Save\r\n                            </button>\r\n                        </div>\r\n                        <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                                (click)=\"editRecord()\">\r\n                                Edit\r\n                            </button>&nbsp;&nbsp; \r\n                        </div>\r\n                        <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                                (click)=\"updateRecord('auth')\">\r\n                                Authorize\r\n                            </button>&nbsp;&nbsp;\r\n                        </div>\r\n                        <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\"\r\n                            [hidden]=\"!readorWrite\">\r\n                            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                                (click)=\"updateRecord('open')\">\r\n                                Reopen\r\n                            </button>&nbsp;&nbsp;\r\n                        </div>\r\n                        <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\"\r\n                            [hidden]=\"!readorWrite\">\r\n                            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                                (click)=\"updateRecord('close')\">\r\n                                Close\r\n                            </button>&nbsp;&nbsp;\r\n                        </div>\r\n                        <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                                (click)=\"deleteRecord('delete')\">\r\n                                Delete\r\n                            </button> &nbsp;&nbsp;\r\n                        </div>\r\n\r\n                        <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"goBack()\">\r\n                            Exit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <div class=\"mt-32\">\r\n        <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n    </div>\r\n","import { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormArray, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { SendHolidayScreenService } from 'app/shared/services/send-holiday-screen.service';\r\n\r\n@Component({\r\n  selector: 'app-common-holiday',\r\n  templateUrl: './common-holiday.component.html',\r\n  styleUrls: ['./common-holiday.component.scss']\r\n})\r\nexport class CommonHolidayComponent implements OnInit {\r\n  calenderArr: any[];\r\n  selectedItem: boolean = false;\r\n  selectedItemRow: boolean = false;\r\n  disabled: boolean = true;\r\n  monthArr: any = [\r\n    ['January', 'February', 'March'],\r\n    ['April', 'May', 'June'],\r\n    ['July', 'August', 'September'],\r\n    ['October', 'November', 'December'],\r\n  ];\r\n  newYearArrayany: any[] = [];\r\n  months: string[] = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  weekdaysInWords: string[] = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednsday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n  weekdays:string[] = [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S',\r\n  ];\r\n  monthEnds = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  viewDate: Date = new Date();\r\n  yearlyCalendarArr = [];\r\n  currentMonth: any;\r\n  currentMonthDate: any;\r\n  calendarDate: any[] = [];\r\n  year: number;\r\n  daysFinalArr: any[] = [];\r\n  calendarArrFinal: any[] = [];\r\n  confirmRes: boolean = false;\r\n  daysFinalArrNew: any[] = [];\r\n  calendarArrFinalNew: any[] = [];\r\n  dynamicObject: { value: string; disabled: boolean; };\r\n  selected = new FormControl('', [Validators.required]);\r\n  yearArr: string[] = ['2023','2022', '2021', '2020', '2019', '2018', '2017'];\r\n  disableSave:boolean=true;\r\n  isEdit: boolean=false;\r\n  count: number =0;\r\n  screen: any;\r\n  constructor(\r\n    private router: Router, private snack: MatSnackBar, private fb: FormBuilder,private ls: LocalStoreService,\r\n    private confirmService: AppConfirmService, private cdr: ChangeDetectorRef,private apiService: ApiService,\r\n    private screenService: SendHolidayScreenService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n   this.screen=this.ls.getItem('SCREEN_NAME')\r\n    // this.fillInYear(2022);\r\n  }\r\n\r\n  fillInMonth(year: number, month: string, dayAmount: number) {\r\n    this.year = year;\r\n    let monthNumsArr = [];\r\n    let daysArr = [];\r\n    let daysArrNew = [];\r\n    let daysFinalArr = [];\r\n    let daysFinalArrNew = [];\r\n    let endOffSet = 42 - dayAmount;\r\n    let date = new Date(month + '1, ' + year);\r\n    let dateOffSet = date.getDay();\r\n\r\n    for (let i = 0; i < dayAmount + endOffSet; i++) {\r\n      if (i < dateOffSet) {\r\n        monthNumsArr.push(' ');\r\n        daysArrNew.push({ value: '', disabled: false });\r\n        daysArr.push('');\r\n      } else if (i > dayAmount + dateOffSet - 1) {\r\n        monthNumsArr.push(' ');\r\n        daysArrNew.push({ value: '', disabled: false });\r\n        daysArr.push('');\r\n      } else {\r\n        monthNumsArr.push((i + 1 - dateOffSet).toString());\r\n        daysArr.push((i + 1 - dateOffSet).toString());\r\n        daysArrNew.push({ value: (i + 1 - dateOffSet).toString(), disabled: false });\r\n      }\r\n\r\n      if (((8 + i) % 7 == 0)) {\r\n        daysFinalArr.push(daysArr);\r\n        daysFinalArrNew.push(daysArrNew);\r\n        daysArr = [];\r\n        daysArrNew = [];\r\n      }\r\n\r\n    }\r\n\r\n    // monthNumsArr.forEach((V, K) => {\r\n    //   if ((K % 7 == 0) || ((8 + K) % 7 == 0)) {\r\n    //     if (V != ' ') {\r\n    //       let dateValue = (+V);\r\n    //       var d = new Date(year, date.getMonth(), dateValue);\r\n    //       var responseDate = moment(d).format('YYYY-MM-DD');\r\n    //       this.calendarDate.push(responseDate);\r\n    //     }\r\n    //   }\r\n    // });\r\n    // this.daysFinalArr.push(daysFinalArr);\r\n    this.daysFinalArrNew.push(daysFinalArrNew);\r\n\r\n    return monthNumsArr;\r\n  }\r\n\r\n\r\n  fillInYear(year: number) {\r\n    this.yearlyCalendarArr = [];\r\n    this.calenderArr = [];\r\n    this.daysFinalArr = [];\r\n    this.daysFinalArrNew = [];\r\n    this.newYearArrayany = [];\r\n    this.calendarArrFinal = [];\r\n    this.calendarArrFinalNew = [];\r\n    for (let i = 0; i < 12; i++) {\r\n      this.yearlyCalendarArr.push(\r\n        this.fillInMonth(year, this.months[i], this.monthEnds[i])\r\n      );\r\n\r\n      if ((i + 1) % 3 == 0) {\r\n        this.newYearArrayany.push(this.yearlyCalendarArr);\r\n        this.calenderArr = this.daysFinalArr;\r\n        this.calendarArrFinal.push(this.calenderArr);\r\n        this.calendarArrFinalNew.push(this.daysFinalArrNew);\r\n        this.calenderArr = [];\r\n        this.daysFinalArr = [];\r\n        this.daysFinalArrNew = [];\r\n        this.yearlyCalendarArr = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  assignFormValue(event) {\r\n    this.currentMonth = this.months[this.viewDate.getMonth()];\r\n    this.currentMonthDate = this.viewDate.getFullYear();\r\n    this.fillInYear(event.value);\r\n    console.log(this.calendarArrFinalNew)\r\n    for(let i=0; i<=this.calendarArrFinalNew.length-1;i++){\r\n       for(let j=i;j<=this.calendarArrFinalNew[i].length;j++){\r\n        for(let k=j;k<=this.calendarArrFinalNew[i][j].length;k++){\r\n          this.checks[i][j][k].value=false\r\n        }\r\n       }\r\n    }\r\n  }\r\n\r\n\r\n  goBack() {\r\n    if(this.screen==='Branch'){\r\n      this.router.navigate([\"/maintenance/main/holiday/BranchHoliday\"]);\r\n    }else \r\n    this.router.navigate([\"/maintenance/main/holiday/currencyholiday\"]);\r\n  }\r\n\r\n  // For example, an array of choices\r\n  public checks: Array<any> = [\r\n    [\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }]\r\n    ],\r\n    [\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }]\r\n    ],\r\n    [\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }]\r\n    ],\r\n    [\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }],\r\n      [{ description: 'col1', value: false, disable: false },\r\n      { description: 'col2', value: false, disable: false },\r\n      { description: 'col3', value: false, disable: false },\r\n      { description: 'col4', value: false, disable: false },\r\n      { description: 'col5', value: false, disable: false },\r\n      { description: 'col6', value: false, disable: false },\r\n      { description: 'col7', value: false, disable: false }]\r\n    ]];\r\n\r\n  public rowChecks: Array<any> = [\r\n    [\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }]],\r\n    [\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }]],\r\n    [\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }]],\r\n    [\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }],\r\n      [{ description: 'row1', value: false, disable: false },\r\n      { description: 'row2', value: false, disable: false },\r\n      { description: 'row3', value: false, disable: false },\r\n      { description: 'row4', value: false, disable: false },\r\n      { description: 'row5', value: false, disable: false },\r\n      { description: 'row6', value: false, disable: false }]]]\r\n\r\n  onCheckChange(event: MatCheckboxChange, i1, i2, col, row,year) {\r\n    this.checks[i1][i2][col].value = event.checked;\r\n    console.log(event);        \r\n    const index = this.rowChecks[i1][i2].findIndex(x => x.value == true);\r\n      if (index == (-1) && event.checked) {\r\n        // this.confirmService\r\n        //   .confirm({ message: `Is row selection required ? ` })\r\n        //   .subscribe((res) => {\r\n            // if (res) {\r\n            //   this.snack.open('Select Row To Add Date', 'OK');\r\n            // } else {\r\n              if (this.checks[i1][i2][col].value) {\r\n                this.count++;\r\n                this.buildCalenderArr(this.calendarArrFinalNew[i1][i2], this.monthArr[i1][i2], year, col,\r\n                  this.checks[i1][i2][col].value, this.rowChecks[i1][i2][row].value, row,i1,i2);\r\n               // this.checks[i1][i2][col].disable = true;\r\n                this.cdr.detectChanges();\r\n              }\r\n            // }\r\n          // });\r\n      } else if (index != (-1 && this.checks[i1][i2][col].value)) {\r\n        this.count--;\r\n  \r\n        for (let rowIdx = 0; rowIdx < this.rowChecks[i1][i2].length; rowIdx++) {\r\n          const isRowChecked = this.rowChecks[i1][i2][rowIdx];\r\n  \r\n          if (isRowChecked.value) {\r\n           \r\n            this.buildCalenderArr(this.calendarArrFinalNew[i1][i2], this.monthArr[i1][i2], year, col,\r\n              this.checks[i1][i2][col].value, isRowChecked, rowIdx,i1,i2);\r\n          }else{\r\n            this.buildCalenderArr(this.calendarArrFinalNew[i1][i2], this.monthArr[i1][i2], year, col,\r\n              this.checks[i1][i2][col].value, isRowChecked, rowIdx,i1,i2);\r\n          }\r\n        }\r\n      } else {\r\n        this.buildCalenderArr(this.calendarArrFinalNew[i1][i2], this.monthArr[i1][i2], year, col,\r\n          this.checks[i1][i2][col].value, this.rowChecks[i1][i2][row].value, row,i1,i2);\r\n      }\r\n    \r\nif(this.count==0){\r\n  this.disableSave=true;\r\n}\r\nelse{\r\n  this.disableSave=false;\r\n}\r\n\r\n\r\n  }\r\n  buildCalenderArr(calendar, month, year, colIdx, colChecked, rowChecked, rowIdx,i1,i2) {\r\n    let date = new Date(month + '1, ' + year);\r\n    this.disableSave=false;\r\n    for (let index = 0; index < calendar.length; index++) {\r\n      const element = calendar[index];\r\n      if (element[colIdx].value != '' && element[colIdx].value != ' ') {\r\n        let dateValue = (+element[colIdx].value);\r\n        var d = new Date(year, date.getMonth(), dateValue);\r\n        var responseDate = moment(d).format('YYYY-MM-DD');\r\n        if (colChecked && rowChecked) {\r\n          if (index == rowIdx) {\r\n            this.calendarDate.push(responseDate);\r\n          }\r\n        } else if (colChecked && !rowChecked) {\r\n          this.calendarArrFinalNew[i1][i2][index][colIdx].disabled=true; \r\n          this.cdr.detectChanges();\r\n          this.calendarDate.push(responseDate);\r\n        } else {\r\n          this.calendarArrFinalNew[i1][i2][index][colIdx].disabled=false;                  \r\n          this.cdr.detectChanges();\r\n          this.calendarDate.splice(this.calendarDate.indexOf(responseDate), 1);\r\n        }\r\n\r\n      }\r\n    }\r\n    console.log(this.calendarDate);\r\n  }\r\n  showOptionsRow(event: MatCheckboxChange, i1, i2, row,year) {\r\n    this.rowChecks[i1][i2][row].value = event.checked;\r\n    const index = this.checks[i1][i2].findIndex(x => x.value == true);\r\n    if (index != -1) {\r\n      for (let colIdx = 0; colIdx < this.checks.length; colIdx++) {\r\n        const element = this.checks[colIdx];\r\n      }\r\n    } else {\r\n      this.snack.open('Select Column To Add Date', 'OK');\r\n    }\r\n\r\n  }\r\n\r\n  onDateSelection(date,i1, i2, year){\r\n    console.log(date,i1, i2, year);\r\n    let month = this.monthArr[i1][i2];\r\n    let dateSample = new Date(month + '1, ' + year);\r\n    var d = new Date(year, dateSample.getMonth(), date);\r\n    var responseDate = moment(d).format('YYYY-MM-DD');\r\n    if(this.calendarDate.includes(responseDate)){\r\n      var index = this.calendarDate.indexOf(responseDate);\r\n      if (index !== -1) {\r\n        this.calendarDate.splice(index, 1);\r\n      }\r\n    }\r\n    else{\r\n      this.calendarDate.push(responseDate);\r\n    }\r\n    if(this.calendarDate.length > 0){\r\n      this.disableSave = false;\r\n    }\r\n    console.log(this.calendarDate);\r\n  }\r\n\r\n  checkDateAlreadySelected(date,i1, i2, year) : boolean{\r\n    let month = this.monthArr[i1][i2];\r\n    let dateSample = new Date(month + '1, ' + year);\r\n    var d = new Date(year, dateSample.getMonth(), date);\r\n    var responseDate = moment(d).format('YYYY-MM-DD');\r\n    if(this.calendarDate.includes(responseDate)){\r\n       return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  saveHoliday(year) {\r\n    this.isEdit=false;\r\n    let details: any[] = [];\r\n    this.calendarDate.forEach((v, k) => {\r\n      let payload = {\r\n        entityCode: 'common',\r\n        bankCode: 'common',\r\n        branchCode: 'common',\r\n        calenderYear: year,\r\n        calenderDate: v,\r\n        description:'common'\r\n      }\r\n      details.push(payload);\r\n    });\r\n\r\n    this.apiService.updateBranchHolidayDetails(details,this.isEdit)\r\n    .subscribe(data => {\r\n      if (data != null) {\r\n        this.disableSave=true;\r\n        this.snack.open('Data Saved' + ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        // this._location.back();\r\n        this.cdr.markForCheck();\r\n        if(this.screen==='Branch'){\r\n          this.router.navigate([\"/maintenance/main/holiday/BranchHoliday\"]);\r\n        }else \r\n        this.router.navigate([\"/maintenance/main/holiday/currencyholiday\"]);\r\n    \r\n      }\r\n\r\n    },error=>{\r\n      this.disableSave=true;\r\n      console.log('error :: ',error);\r\n      this.snack.open(`${error.error}` + ' !', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right',\r\n        panelClass: 'snackbar-error'\r\n      });\r\n    \r\n    });\r\n\r\n\r\n  }\r\n\r\n  dataBythirdCalenderArray(index,thirdCalenderArray)\r\n  {\r\n    return thirdCalenderArray.disabled;\r\n  }\r\n\r\n}\r\n"," <h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary >\r\n         Holiday Maintenance > {{screen}} Holiday > {{screen}} Common Holiday Maintenance</small></h1>\r\n <div fxLayoutAlign=\"center\">\r\n\r\n </div>\r\n <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n     <button mat-icon-button (click)=\"goBack()\">\r\n         <mat-icon>arrow_back</mat-icon>\r\n     </button>\r\n     <span class=\"text-large\">\r\n         Add Common Holidays\r\n     </span>\r\n\r\n\r\n </div>\r\n\r\n <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n     <div class=\"pr-16\" fxFlex=\"20%\">\r\n         <mat-hint>year</mat-hint>\r\n         <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n             <mat-select [formControl]=\"selected\" (selectionChange)=\"assignFormValue($event)\" required>\r\n                 <mat-option *ngFor=\"let year of yearArr\" [value]=\"year\">\r\n                     {{year}}\r\n                 </mat-option>\r\n             </mat-select>\r\n         </mat-form-field>\r\n\r\n     </div>\r\n\r\n     <div>\r\n      <span fxFlex></span>\r\n      <button mat-flat-button color=\"primary\" (click)=\"saveHoliday(selected.value)\" \r\n      [disabled]=\"disableSave\"\r\n        class=\"mr-38\">Save</button>\r\n      <!-- <button mat-button color=\"warn\" type=\"button\" (click)=\"goBack()\">Cancel</button> -->\r\n    </div>\r\n\r\n </div>\r\n\r\n <table *ngFor=\"let calenderArray of calendarArrFinalNew; let i1 = index\">\r\n     <tr>\r\n\r\n         <td *ngFor=\"let firstCalenderArray of calenderArray; let i2 = index\">\r\n             <table>\r\n                 <tr *ngFor=\"let secondCalenderArray of firstCalenderArray; let row = index\">\r\n                     <td *ngFor=\"let thirdCalenderArray of secondCalenderArray; let col = index\">\r\n                         <mat-checkbox *ngIf=\"row==i1 \" [checked]=\"checks[i1][i2][col].value\"\r\n                         class=\"checkbox1\" [disabled]=\"checks[i1][i2][col].disable\"\r\n                             (change)=\"onCheckChange($event,i1,i2,col,row,selected.value)\">\r\n                         </mat-checkbox>\r\n                     </td>\r\n                 </tr>\r\n             </table>\r\n             <table>\r\n                 <caption style=\"background-color: #D4E6F1;padding-left: unset;margin-left: 20px;height: 40px;\r\n          border-radius: 15px;\">\r\n                     <h3 style=\"margin-top: 15px;\">{{monthArr[i1][i2]}}</h3>\r\n                 </caption>\r\n\r\n                 <tbody>\r\n                    <tr>\r\n                        <td *ngFor=\"let weekDay of weekdays; let i4 = index\" class=\"childTd\">\r\n                            <button (click)=\"onDateSelection(weekDay,i1,i2,selected.value)\" mat-button [disabled]=\"thirdCalenderArray?.disabled\"\r\n                                [ngClass]=\"checkDateAlreadySelected(weekDay,i1,i2,selected.value) ? 'primaryColor' : ''\">\r\n                                <h3 style=\"color: #808B96;\">{{weekDay}}</h3>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                     <tr *ngFor=\"let secondCalenderArray of firstCalenderArray; let i3 = index\">\r\n\r\n                         <!-- <mat-checkbox [checked]=\"rowChecks[i1][i2][i3].value\"\r\n                             (change)=\"showOptionsRow($event,i1,i2,i3,selected.value);\">\r\n                         </mat-checkbox> -->\r\n\r\n                         <td *ngFor=\"let thirdCalenderArray of secondCalenderArray; trackBy:dataBythirdCalenderArray let i4 = index\" class=\"childTd\">\r\n\r\n                             <!-- <div style=\"background-color: primaryColor;\"> -->\r\n                             <button (click)=\"onDateSelection(thirdCalenderArray.value,i1,i2,selected.value) \" mat-button [ngClass]=\"checkDateAlreadySelected(thirdCalenderArray.value,i1,i2,selected.value) ? 'primaryColor' : ''\"\r\n                                 [disabled]=\"thirdCalenderArray?.disabled\" *ngIf=\"i4 % 7 == 0\">\r\n                                 <h5 [ngClass]=\"!thirdCalenderArray?.disabled ? 'h5Red' : 'h5RedDisabled'\">{{ thirdCalenderArray.value}}</h5>\r\n                             </button>\r\n                             <!-- </div> -->\r\n                             <!-- <div> -->\r\n                             <button (click)=\"onDateSelection(thirdCalenderArray.value,i1,i2,selected.value) \" mat-button [disabled]=\"thirdCalenderArray?.disabled\"\r\n                                 [ngClass]=\"checkDateAlreadySelected(thirdCalenderArray.value,i1,i2,selected.value) ? 'primaryColor' : ''\"\r\n                                 *ngIf=\"(8 + i4) % 7 == 0\">\r\n                                 <h5 [ngClass]=\"!thirdCalenderArray?.disabled ? 'h5Red' : 'h5RedDisabled'\">{{ thirdCalenderArray.value}}</h5>\r\n                             </button>\r\n                             <!-- </div> -->\r\n                             <!-- <div *ngIf=\"i4 % 7 != 0 && (8 + i4) % 7 != 0\"> -->\r\n                             <button (click)=\"onDateSelection(thirdCalenderArray.value,i1,i2,selected.value) \" mat-button *ngIf=\"i4 % 7 != 0 && (8 + i4) % 7 != 0\" [disabled]=\"thirdCalenderArray?.disabled\"\r\n                                 [ngClass]=\"checkDateAlreadySelected(thirdCalenderArray.value,i1,i2,selected.value) ? 'primaryColor' : ''\">\r\n                                 <h5 style=\"color:black;\"> {{ thirdCalenderArray.value }}</h5>\r\n                             </button>\r\n                             <!-- <button mat-raised-button color=\"warn\" class=\"button4\" *ngIf=\"\r\n             monthArr[i][j] == currentMonth && d == currentMonthDate\" (click)=\" captureDate(d,monthArr[i][j],year)\">\r\n                           {{ d }}\r\n                       </button> -->\r\n                             <!-- <button mat-button [disabled]=\"thirdCalenderArray.disabled\" class=\"button\" *ngIf=\"\r\n             monthArr[i][j] == currentMonth && d != currentMonthDate\r\n           \">\r\n                           {{thirdCalenderArray }}\r\n                       </button>\r\n                       <button mat-button [disabled]=\"thirdCalenderArray.disabled\" class=\"button\" *ngIf=\"monthArr[i][j] != currentMonth\">\r\n                           {{ thirdCalenderArray}} </button> -->\r\n                             <!-- </div> -->\r\n\r\n\r\n                         </td>\r\n                         <!-- <div *ngIf=\"(secondCalenderArray.length-3) == i3\"> -->\r\n\r\n                         <!-- </div> -->\r\n                     </tr>\r\n                    \r\n\r\n                 </tbody>\r\n\r\n\r\n             </table>\r\n         </td>\r\n     </tr>\r\n </table>\r\n <!-- <div fxFlex></div>\r\n  \r\n  </div> -->","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\nimport { baseDenomData } from \"app/shared/models/base_denom_summary\";\r\n\r\n@Component({\r\n  selector: 'app-base-denomination-summary',\r\n  templateUrl: './base-denomination-summary.component.html',\r\n  styleUrls: ['./base-denomination-summary.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class BaseDenominationSummaryComponent implements OnInit {\r\n\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = ['baseDenominationId', 'denomination', 'currency', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"denomination\", value: \"Denomination\" },\r\n    { key: \"baseDenominationId\", value: \"Base Denomination Id\" },\r\n    { key: \"currency\", value: \"Currency\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  public userdata: any[];\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n  currentUser: string;\r\n  loading: boolean;\r\n  fetchBaseDenomValue: string;\r\n  baseDenomDetails:baseDenomData[] = [];\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private dataService:DataService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    // this.loading = true;\r\n    this.getItemSub = this.apiService.getDenomInfoList().subscribe(data => {\r\n      this.items = data;\r\n      this.getItems();\r\n      // this.loading = false;\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n    // this.loading = true;\r\n    this.getItemSub = this.apiService.getDenomInfoList()\r\n      .subscribe((data : any) => {\r\n        if(data){\r\n          for (let index = 0; index < data.length; index++) {\r\n            data[index].baseDenominationId = String(data[index].baseDenominationId);\r\n            data[index].denomination = String(data[index].denomination);\r\n            \r\n            if(data[index].authStatus == 'U'){\r\n              data[index].authStatus = 'Unauthorized'\r\n            }\r\n            if(data[index].authStatus == 'A') {\r\n              data[index].authStatus = 'Authorized'\r\n            } \r\n            if(data[index].recordStatus == 'O'){\r\n              data[index].recordStatus = 'Open'\r\n            } \r\n            if(data[index].recordStatus == 'C'){\r\n              data[index].recordStatus = 'Closed'\r\n            }\r\n          }\r\n        }\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.userdata = data;\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n      // this.loading = false;\r\n  }\r\n\r\n   doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().toString().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: any) {\r\n    let filterValue = (event.target as HTMLInputElement).value;\r\n    !isNaN(event.key)? filterValue = String(filterValue) : '';\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n  baseDenominationMaintenance(){\r\n    this.downloadService.downloadFiles(\"baseDenominationMaintenance\",this.userdata);\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'baseDenomination');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getItems();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  deleteItem(row) {\r\n    row.baseDenominationId = +row.baseDenominationId;\r\n    row.denomination = +row.denomination;\r\n    this.confirmService.confirm({ message: `Delete ${row.baseDenominationId}?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.removeBaseDenominationById(row.baseDenominationId)\r\n            .subscribe((res: any) => {\r\n            }, (err: any) => {\r\n              ''\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open('Member deleted!', 'OK', { duration: 4000 })\r\n\r\n              }\r\n            })\r\n        }\r\n      })\r\n  }\r\n\r\n  openPopUp(row){\r\n    row.baseDenominationId = +row.baseDenominationId;\r\n    row.denomination = +row.denomination;\r\n    this.getDenomId(row);\r\n    this.router.navigate([`/maintenance/main/baseDenomination/${row.baseDenominationId}`]);\r\n  }\r\n \r\n\r\n  getDenomId(row){\r\n    this.loader.open();\r\n    this.apiService.getDenomInfoById(row.baseDenominationId).subscribe((data : any)=> {\r\n      this.fetchBaseDenomValue=data;\r\n      \r\n      if(this.fetchBaseDenomValue != null){\r\n        localStorage.setItem('fetchBaseDenomValue',JSON.stringify(this.fetchBaseDenomValue));\r\n        }\r\n      });\r\n      this.loader.close();  \r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/baseDenomination/add\"]);\r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n\r\n  trackByFilter(filter){\r\n    return filter.value;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Base Denomination Maintenance </small>\r\n</h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Base Denomination Maintenance\r\n  </span>\r\n  </div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Base Denominations \r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"baseDenominationMaintenance()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption; trackBy: trackByFilter\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n          </div>\r\n          <div class=\"filterDiv\">\r\n           <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n           </button>\r\n         </div>    \r\n    </div>\r\n    </div>\r\n    \r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"baseDenominationId\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Base Denomination Id\">Base Denomination Id\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.baseDenominationId }} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"denomination\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Denomination\"> Denomination\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.denomination}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"currency\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency\"> Currency\r\n            \r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.currency}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Status \"> Status\r\n          </mat-header-cell>\r\n          <ng-template let-row=\"element\" ngx-datatable-cell-template>\r\n            <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"row.isActive\">{{element.isActive ? 'active' : 'inactive'}}</mat-chip>\r\n          </ng-template>\r\n        </ng-container>\r\n\r\n        <!-- <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element)\" >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container> -->\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <button\r\n              mat-icon-button\r\n              mat-sm-button\r\n              color=\"primary\"\r\n              class=\"mr-16\"\r\n              (click)=\"openPopUp(element)\"\r\n            >\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button\r\n              mat-icon-button\r\n              mat-sm-button\r\n              color=\"warn\"\r\n              [disabled]=\"element.authStatus == 'Authorized'\"\r\n              (click)=\"deleteItem(element)\"\r\n            >\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n\r\n  </mat-card-content>\r\n</mat-card>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { TillVaultMasterPopupComponent } from '../../till-vault-master-popup/till-vault-master-popup/till-vault-master-popup.component';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-till-vault-master-summary',\r\n  templateUrl: './till-vault-master-summary.component.html',\r\n  styleUrls: ['./till-vault-master-summary.component.scss']\r\n})\r\nexport class TillVaultMasterSummaryComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['entityCode', 'bankCode', 'tillVaultCode', 'oneTimeAuth', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public users: any[];\r\n  public items: any[];\r\n  entity: any;\r\n  bankCode: any;\r\n  tillVaultMasterValues: any;\r\n  public getItemSub: Subscription;\r\n  fetchTillVault: any;\r\n  id:any;\r\n  \r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api:ApiService, private router: Router,\r\n    private dataService:DataService,private _liveAnnouncer: LiveAnnouncer,\r\n    private ls: LocalStoreService,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n      this.getEntityCode();\r\n      this.getBankCode();\r\n      this.getItems();\r\n    }\r\n    ngOnDestroy() {\r\n      if (this.getItemSub) {\r\n        this.getItemSub.unsubscribe()\r\n      }\r\n    }\r\n    addNew() {\r\n      this.router.navigate([`/maintenance/main/tillVaultltMaster/add`]);\r\n    }\r\n\r\n    trackByFnFilterByOption(index, item) {\r\n      return index; \r\n    }\r\n    onFileChange(event) {\r\n      console.log('event', event.path[0].files[0]);\r\n      const file: File = event.path[0].files[0];\r\n      const uploadData = new FormData();\r\n      uploadData.append('screenType', 'tillVaultltMaster');\r\n      uploadData.append('file', file);\r\n      this.api.uploadExelFile(uploadData).subscribe((response) => {\r\n        console.log(response);\r\n        this.getItems();\r\n        this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      });\r\n    }\r\n    \r\n    getItems() {\r\n      this.api.getTillVaultMaster().subscribe((tillVaultVal : any)=> {\r\n        if(tillVaultVal){\r\n\r\n          for(let i=0;i<tillVaultVal.length;i++){\r\n            if(tillVaultVal[i].authStatus == 'U'){\r\n              tillVaultVal[i].authStatus = 'Unauthorized'\r\n            }\r\n            if(tillVaultVal[i].authStatus == 'A') {\r\n              tillVaultVal[i].authStatus = 'Authorized'\r\n            } \r\n            if(tillVaultVal[i].recordStatus == 'O'){\r\n              tillVaultVal[i].recordStatus = 'Open'\r\n            } \r\n            if(tillVaultVal[i].recordStatus == 'C'){\r\n              tillVaultVal[i].recordStatus = 'Closed'\r\n            }\r\n          }\r\n        this.tillVaultMasterValues = tillVaultVal;\r\n          this.items =  this.tillVaultMasterValues;\r\n          this.dataSource = new MatTableDataSource(tillVaultVal);\r\n          this.users = tillVaultVal;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n        });\r\n    \r\n    }\r\n    getBankCode(){\r\n      this.api.getBankCode().subscribe((bnkCode : any)=> {\r\n        this.bankCode=bnkCode;\r\n        });\r\n    }\r\n    getEntityCode() {\r\n      this.api.getEntityCode().subscribe((resp) => {\r\n        this.entity = resp;\r\n      });\r\n    }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  openPopUp(data: any = {},isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/tillVaultltMaster/add\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  \r\n   \r\n  }\r\n\r\n  masterpdf(){\r\n    this.downloadService.downloadFiles(\"tillVaultMaintenance\", this.users);\r\n\r\n  }\r\n\r\n  \r\n  fetchTillVaultById(){\r\n    this.api.getTillVaultById(this.id).subscribe((resp) =>{\r\n     this.fetchTillVault=resp;\r\n    })\r\n    this.dataService.sendNavParam(this.fetchTillVault);\r\n    this.router.navigate([`/maintenance/main/tillVaultltMaster/add/${this.id}`]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/`]);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.api.deleteTillVaultMaster(row.id)\r\n            .subscribe((res: any) => {        \r\n                }, (err: any) => {''\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open('Member deleted!', 'OK', { duration: 4000})\r\n              \r\n                } })\r\n        }\r\n      })\r\n  } \r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Maintenance </small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button> \r\n  <span class=\"text-large\">\r\n    Till Vault Maintenance\r\n  </span>\r\n</div>\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Till Vault Maintenance\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n         <div class=\"upload_botton\">\r\n          <button type=\"button\" mat-menu-item>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            class=\"btn btn-success\"\r\n            (change)=\"onFileChange($event)\"\r\n          />\r\n        </div>\r\n         <button (click)=\"masterpdf()\" mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n      </mat-menu>\r\n </div>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption; trackBy: trackByFnFilterByOption\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n       <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n       </button>\r\n     </div>\r\n\r\n     </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <ng-container matColumnDef=\"entityCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity Code\"> Entity Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"bankCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"tillVaultCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Till Vault Code\"> Till Vault Code\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.tillVaultCode}} </mat-cell>\r\n       </ng-container>\r\n       <!-- <ng-container matColumnDef=\"Status\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Status\"> Status\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.Status}} </mat-cell>\r\n      </ng-container> -->\r\n       <ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n\r\n       <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5,10,15]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport * as moment from 'moment';\r\nimport { loggedInUserInterface, TrxnCashStatusInterface } from './txn-cash-master-table-popup';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: \"app-txn-cash-master-table-popup\",\r\n  templateUrl: \"./txn-cash-master-table-popup.component.html\",\r\n  styleUrls: [\"./txn-cash-master-table-popup.component.scss\"],\r\n})\r\nexport class TxnCashMasterTablePopupComponent implements OnInit {\r\n  public txnCashMasterForm: FormGroup;\r\n  countryCurrency: string[] = [];\r\n  tillId: string[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  entity: string;\r\n  currency: string[] = [];\r\n  till: string[] = [];\r\n  txnproductArr =[ 'CHD', 'CHW','CQD' ,'CQW' ];\r\n  currentUser: string;\r\n  data: string;\r\n  entityCode: string[] = [];\r\n  loggedInUser : loggedInUserInterface;\r\n   auditData : TrxnCashStatusInterface;\r\n  isAuditData : boolean = false;\r\n  id: string;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  TrxnCashStatus: TrxnCashStatusInterface;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private ls: LocalStoreService,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n \r\n    setTimeout(() => {\r\n      this.TrxnCashStatus = JSON.parse(\r\n        localStorage.getItem(\"fetchTrxnCashStatus\")\r\n      );\r\n \r\n      if (this.TrxnCashStatus == null || this.TrxnCashStatus == undefined) {\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      } else if (\r\n        this.TrxnCashStatus.id != null ||\r\n        this.TrxnCashStatus.id != undefined\r\n      ) {\r\n        this.loader.open();\r\n        this.id = this.TrxnCashStatus.id;\r\n        this.buildItemForm(this.TrxnCashStatus);\r\n        \r\n        this.auditData =this.TrxnCashStatus;\r\n      this.isEdit = true;\r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n        this.loader.close();\r\n      }\r\n    }, 1000);\r\n\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    console.log('item',item)\r\n    this.txnCashMasterForm = this.fb.group({\r\n      entityCode: [item?.entityCode || \"\", Validators.required],\r\n      bankCode: [item?.bankCode || \"\", Validators.required],\r\n      branchCode: [item?.branchCode || \"\", Validators.required],\r\n      tillId: [item.tillId || \"\", Validators.required],\r\n      txnProduct: [item?.txnProduct || \"\", Validators.required],\r\n      txnReference: [item?.txnReference || \"\", Validators.required],\r\n      account: [item?.account || \"\", Validators.required],\r\n      accCurrency: [item?.accCurrency || \"\", Validators.required],\r\n      accBalance: [item?.accBalance || \"\", Validators.required],\r\n      instrument: [item?.instrument || \"\", Validators.required],\r\n      txnCurrency: [item?.txnCurrency || \"\", Validators.required],\r\n      txnAmount: [item?.txnAmount || \"\", Validators.required],\r\n      ofsCurrency: [item?.ofsCurrency || \"\", Validators.required],\r\n      ofsAmount: [item?.ofsAmount || \"\", Validators.required],\r\n      txnDate : [new Date(item.txnDate) || \"\", [Validators.required]],\r\n      forexRate: [item?.forexRate || \"\", Validators.required],\r\n      forexNegoRate: [item?.forexNegoRate || \"\", Validators.required],\r\n      chargeAmount: [item?.chargeAmount || \"\", Validators.required],\r\n      remarks: [item?.remarks || \"\", Validators.required],\r\n      isActive: [item?.isActive || false],\r\n      id: [item?.id || null],\r\n      loggedInuser : [item.loggedInUser || ''],\r\n    });\r\n  }\r\n  dataByEntityCode(index,item){\r\n    return item.entityCode;\r\n  }\r\n  dataByBankCode(index,item){\r\n    return item.bankCode;\r\n  }\r\n  dataByBranchCode(index,item){\r\n    return item.branchCode;\r\n  }\r\n  dataByTillVaultCode(index,item){\r\n  //  \r\n    return item.tillVaultCode\r\n  }\r\n  dataByCurrencyCode(index,item){\r\n    return item.currencyCode\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTxnCashMaster(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/transactionCashMaster`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/transactionCashMaster`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsForTransactionCashMaster(payload).subscribe((data) => {\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  submit() {\r\n    let date = this.convertDate(this.txnCashMasterForm.controls.txnDate.value);\r\n    this.txnCashMasterForm.value[\"txnDate\"] = date;\r\n    if (this.txnCashMasterForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.loader.open();\r\n      this.txnCashMasterForm.value.loggedInUser = this.loggedInUser.userName;\r\n      this.api.upsertTxnCashMaster(this.txnCashMasterForm.value).subscribe(\r\n        (resp) => {\r\n          this.loader.close();\r\n          this.router\r\n            .navigate([`/maintenance/main/transactionCashMaster`])\r\n            .then((_) => {\r\n              this.snack.open(\"Data Saved Successfully!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n              localStorage.removeItem(\"fetchTrxnCashStatus\");\r\n            });\r\n        },\r\n        (err: any) => {\r\n          this.loader.close();\r\n          this.snack.open(`Error!`, \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getCurrency() {\r\n    // this.api.getCountryValues().subscribe((resp) => {\r\n    //   this.currency = resp;\r\n    // });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  getBankCode() {\r\n    this.api.getBankCode().subscribe((resp) => {\r\n    //  this.bankCode = resp;\r\n      for(let i = 0; i<resp.length; i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.api.getBranchCode().subscribe((resp) => {\r\n      //this.branchCode = resp;\r\n      for(let i = 0; i<resp.length; i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault = \"T\";\r\n    this.api.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format(\"YYYY-MMM-DD HH:mm:ss\");\r\n    if (date) return date;\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n   //   this.entityCode = resp;\r\n      for(let i = 0; i<resp.length; i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.entityCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    localStorage.removeItem(\"fetchTrxnCashStatus\");\r\n    this.router.navigate([`/maintenance/main/transactionCashMaster`]);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Transaction Cash Master Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Transaction Cash Master Details</small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Transaction Cash Master Details </h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Transaction Cash Master Details</h1>\r\n</div>\r\n<mat-card>\r\n  <!-- <h1 matDialogTitle>Add Transaction Cash Master Details</h1> -->\r\n  <form [formGroup]=\"txnCashMasterForm\" *ngIf=\"txnCashMasterForm\" (ngSubmit)=\"submit()\">\r\n    <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Entity Code*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"entityCode\" [formControl]=\"txnCashMasterForm.controls['entityCode']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of entityCode;trackBy:dataByEntityCode\"  [value]=\"data.entityCode\">\r\n              {{data.entityCode}}\r\n            </mat-option> \r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('entityCode').touched && !txnCashMasterForm.get('entityCode').valid\">\r\n            Entity Code is Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n        <mat-label>Bank Code*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"bankCode\" [formControl]=\"txnCashMasterForm.controls['bankCode']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of bankCode ;trackBy:dataByBankCode\" [value]=\"data.bankCode\">\r\n              {{data.bankCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('bankCode').touched && !txnCashMasterForm.get('bankCode').valid\">\r\n            Bank Code is Required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label>Bank Code*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['bankCode']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n        <mat-label>Branch Code*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"branchCode\" [formControl]=\"txnCashMasterForm.controls['branchCode']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of branchCode;trackBy:dataByBranchCode\" [value]=\"data.branchCode\">\r\n              {{data.branchCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('branchCode').touched && !txnCashMasterForm.get('branchCode').valid\">\r\n            Branch Code is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label>Branch Code*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['branchCode']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n        <mat-label>Till Id*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"tillId\" [formControl]=\"txnCashMasterForm.controls['tillId']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of till;trackBy:dataByTillVaultCode\" [value]=\"data.tillVaultCode\">\r\n              {{data.tillVaultCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('tillId').touched && !txnCashMasterForm.get('tillId').valid\">\r\n            Till Id is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label>Till Id*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['tillId']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n        <mat-label>Transaction Product*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"txnProduct\" [formControl]=\"txnCashMasterForm.controls['txnProduct']\">\r\n            <!-- <mat-option>Select</mat-option>\r\n            <mat-option value=\"CHD\">CHD</mat-option>\r\n            <mat-option value=\"CHW\">CHW</mat-option>\r\n            <mat-option value=\"CQD\">CQD</mat-option>\r\n            <mat-option value=\"CQW\">CQW</mat-option> -->\r\n            <mat-option *ngFor=\"let txnproduct of txnproductArr;\" [value]=\"txnproduct\">\r\n              {{txnproduct}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('txnProduct').touched && !txnCashMasterForm.get('txnProduct').valid\">\r\n            Transaction Product is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label>Transaction Product*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['txnProduct']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Transaction Reference*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"txnReference\" [formControl]=\"txnCashMasterForm.controls['txnReference']\">\r\n          <mat-error\r\n            *ngIf=\"txnCashMasterForm.get('txnReference').touched && !txnCashMasterForm.get('txnReference').valid\">\r\n            Transaction Reference is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Account*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['account']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('account').touched && !txnCashMasterForm.get('account').valid\">\r\n            Account is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Account Currency*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"accCurrency\" [formControl]=\"txnCashMasterForm.controls['accCurrency']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of currency;trackBy:dataByCurrencyCode\" [value]=\"data.currencyCode\">\r\n              {{data.currencyCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('accCurrency').touched && !txnCashMasterForm.get('accCurrency').valid\">\r\n            Account Currency is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Account Balance*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"accBalance\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['accBalance']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('accBalance').touched && !txnCashMasterForm.get('accBalance').valid\">\r\n            Account Balance is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Instrument*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"instrument\" [formControl]=\"txnCashMasterForm.controls['instrument']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('instrument').touched && !txnCashMasterForm.get('instrument').valid\">\r\n            Instrument is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Transaction Currency*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"txnCurrency\" [formControl]=\"txnCashMasterForm.controls['txnCurrency']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of currency;trackBy:dataByCurrencyCode\" [value]=\"data.currencyCode\">\r\n              {{data.currencyCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('txnCurrency').touched && !txnCashMasterForm.get('txnCurrency').valid\">\r\n            Transaction Currency is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label>Transaction Product*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['txnProduct']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Transaction Amount*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"txnAmount\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['txnAmount']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('txnAmount').touched && !txnCashMasterForm.get('txnAmount').valid\">\r\n            Transaction Amount is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n        <mat-label>Offset Currency*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"ofsCurrency\" [formControl]=\"txnCashMasterForm.controls['ofsCurrency']\" class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of currency;trackBy:dataByCurrencyCode\" [value]=\"data.currencyCode\">\r\n              {{data.currencyCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('ofsCurrency').touched && !txnCashMasterForm.get('ofsCurrency').valid\">\r\n            Offset Currency is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n        <mat-label> Offset Currency *</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  matInput name=\"account\" [formControl]=\"txnCashMasterForm.controls['ofsCurrency']\"/>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Offset Amount*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"ofsAmount\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['ofsAmount']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('ofsAmount').touched && !txnCashMasterForm.get('ofsAmount').valid\">\r\n            Offset Amount is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  \r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Transaction Date*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" [formControl]=\"txnCashMasterForm.controls['txnDate']\" [min]=\"txnCashMasterForm.get('txnDate').value\" matInput name=\"txnDate\"\r\n            [matDatepicker]=\"picker1\" readonly>\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\"> \r\n            <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n          </mat-datepicker-toggle>\r\n          <mat-datepicker #picker1></mat-datepicker>\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('txnDate').touched && !txnCashMasterForm.get('txnDate').valid\">\r\n            Transaction Date is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-datepicker #txnDatepicker></mat-datepicker>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Forex Rate*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"forexRate\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['forexRate']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('forexRate').touched && !txnCashMasterForm.get('forexRate').valid\">\r\n            Forex Rate is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Forex Negotiation Rate*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"forexNegoRate\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['forexNegoRate']\">\r\n          <mat-error\r\n            *ngIf=\"txnCashMasterForm.get('forexNegoRate').touched && !txnCashMasterForm.get('forexNegoRate').valid\">\r\n            Forex Negotiation Rate is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label> Charge Amount*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"chargeAmount\" type=\"number\" [formControl]=\"txnCashMasterForm.controls['chargeAmount']\">\r\n          <mat-error\r\n            *ngIf=\"txnCashMasterForm.get('chargeAmount').touched && !txnCashMasterForm.get('chargeAmount').valid\">\r\n            Charge Amount is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33\" class=\"pr-16\">\r\n        <mat-label>Remarks*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input  [readonly]=\"readorWrite\" matInput name=\"remarks\" [formControl]=\"txnCashMasterForm.controls['remarks']\">\r\n          <mat-error *ngIf=\"txnCashMasterForm.get('remarks').touched && !txnCashMasterForm.get('remarks').valid\">\r\n            Remarks is Required!\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"txnCashMasterForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(txnCashMasterForm.invalid || txnCashMasterForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-card>  \r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Location } from '@angular/common';\r\nimport { Data, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-clearing-holiday',\r\n  templateUrl: './clearing-holiday.component.html',\r\n  styleUrls: ['./clearing-holiday.component.scss']\r\n})\r\nexport class ClearingHolidayComponent implements OnInit {\r\n  items: string[];\r\n  loading: boolean;\r\n  \r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService:ApiService,\r\n    private ls:LocalStoreService,\r\n    private _location: Location,\r\n    private router:Router,\r\n    private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.apiService.getBranchHolidayInfo()\r\n      .subscribe(data => {\r\n        this.items = data;\r\n        this.getClearingHoliday();\r\n    this.loading = false;\r\n      })\r\n  }\r\n\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteClearingHoliday(row.id)\r\n            .subscribe(data => {\r\n              this.getClearingHoliday() ;\r\n              this.loader.close();\r\n              this.snack.open('ClearingHoliday deleted!', 'OK', { duration: 4000 })\r\n            })\r\n        }\r\n      })\r\n  }\r\n  getClearingHoliday() {\r\n    this.apiService.getClearingHolidayInfo()\r\n      .subscribe(data => {\r\n        this.items = data;\r\n      })\r\n  }\r\n\r\n}\r\n","<p>clearing-holiday works!</p>\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-currency-pair-maintanence',\r\n  templateUrl: './add-currency-pair-maintanence.component.html',\r\n  styleUrls: ['./add-currency-pair-maintanence.component.scss']\r\n})\r\nexport class AddCurrencyPairMaintanenceComponent implements OnInit {\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  public branchForm: FormGroup;\r\n  // entity: string[] = [];\r\n  // bankCode: string[] = [];\r\n  currencies:any = [];\r\n  data:any;\r\n  entityCode: any[] = [];\r\n  bankCode: any[] = [];\r\n  entity: any;\r\n  loggedInUser : any;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n  entityIsEdit: any;\r\n  id: any;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n    entityCodeArr: any[] = [];\r\n    readorWrite: boolean=true;\r\n\r\n  constructor(private router: Router, private fb: FormBuilder, private apiService: ApiService,\r\n    private snack: MatSnackBar, private cdr: ChangeDetectorRef, private ls:LocalStoreService,private route : ActivatedRoute,private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    console.log(this.loggedInUser);\r\n    this.getEntityDropdown();\r\n    this.buildItemForm({});\r\n    this.getBranchCurrency();\r\n    this.getBankCode();\r\n   \r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params.get('id'));\r\n      this.entityIsEdit = params.get('isEdit');\r\n      console.log(\"this.entityIsEdit\",this.entityIsEdit);\r\n      if(params.get('isEdit') == 'Yes'){\r\n         this.isReadOnly = false;\r\n       this.isView= true;\r\n       this.editNow = true;\r\n      }\r\n      else if(params.get('isEdit') == 'No'){\r\n         this.isReadOnly = true;\r\n         this.isView= true;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == 'false'){\r\n        this.isReadOnly = false;\r\n        this.isView= false;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == null){\r\n      this.isView= false;\r\n      }\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.editEntityById(params.get('id')).subscribe((resp) =>{\r\n           console.log(resp);\r\n           this.buildItemForm(resp);\r\n        });\r\n          this.apiService.getCurrencyPairById(params.get('id')).subscribe((resp) =>{\r\n          console.log(resp);\r\n          this.buildItemForm(resp);\r\n          this.auditData = resp;\r\n          this.isAuditData = true;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n       });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    ); \r\n  }\r\n\r\n  buildItemForm(item) {\r\n    console.log(\"selected item 2::\",item)\r\n    //this.getEntityDropdown();\r\n \r\n    this.branchForm = this.fb.group({\r\n      // entityCode: [item.entityCode || '', Validators.required], \r\n      // bankCode: [item.bankCode || '', Validators.required],\r\n      currency1: [item.currency1 || '', Validators.required],  \r\n      currency2: [item.currency2 || '', Validators.required],\r\n      throughCurrency: [item.throughCurrency || '', Validators.required],\r\n      rateDirect: [item.rateDirect || '', Validators.required],\r\n      spreadAdder: [item.spreadAdder || '',Validators.required],\r\n      id: [item.id || ''],\r\n      authStatus: [item.authStatus || ''],\r\n      isActive:[item.isActive || true],\r\n      oneTimeAuth:[item.oneTimeAuth || ''],\r\n      recordStatus:[item.recordStatus || ''],\r\n      version:[item.version || ''],\r\n      loggedInUser:[item.loggedInUser || ''],\r\n\r\n    });\r\n    \r\n\r\n  }\r\n\r\n  // getEntityCode() {\r\n  //   this.apiService.getEntityCode().subscribe((resp) => {\r\n  //     console.log(\"bankCodeData\", resp)\r\n  //     this.entity = resp;\r\n  //   });\r\n  // }\r\n\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n     // this.bankCode = resp;\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getEntityDropdown(){\r\n    this.apiService.getEntityDropdown().subscribe((data) => {\r\n      console.log(data);\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          this.entityCode.push(data[i]);\r\n          console.log('auth',i)\r\n        }\r\n      }\r\n\r\n      // this.entityCode = entityCodeResp;\r\n    });   \r\n  }\r\n\r\n  getBranchCurrency(){\r\n    // this.apiService.getCountryValues().subscribe(_list =>{\r\n    //   this.currencies = _list;\r\n    // },(err:any) =>{\r\n    //   console.error(\"Error\", err);\r\n    // })\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currencies.push(data[i].currencyCode)\r\n      }\r\n      console.log(this.currencies);\r\n    })\r\n  }\r\n\r\n    \r\n  submit() {\r\n    console.log(\"Form:\",this.branchForm.value);\r\n    if(this.branchForm.invalid){\r\n    return;\r\n    }else{\r\n    console.log(\"payload:\",this.branchForm.value);\r\n    this.branchForm.value.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.saveCurrencyPair(this.branchForm.value).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null && this.isEdit == true){\r\n        this.router.navigate([`/maintenance/main/currencyPairMaintenance`]).then(_=>{\r\n                this.snack.open('Data Updated!', 'OK', \r\n                { duration: 4000 , \r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",});\r\n                });       \r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null || this.isEdit == true){\r\n       // \r\n        console.log(\"data\",data);\r\n        this.router.navigate([`maintenance/main/currencyPairMaintenance`]).then(_=>{\r\n          this.snack.open('Data Saved!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n          });\r\n        this.cdr.markForCheck();\r\n       }\r\n    }) \r\n    }  \r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteCurrencyPair(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([\"/maintenance/main/currencyPairMaintenance\"]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n        \r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\neditRecord(){\r\nthis.readorWrite=false;\r\n}\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        console.log(this.id);\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.getAuditLogsForCurrencyPair(payload).subscribe((data) => {\r\n          console.log(data);\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/currencyPairMaintenance\"]);\r\n  }\r\n  \r\n\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Pair Maintenance > <span *ngIf=\"!isEdit\">New</span> <span *ngIf=\"isEdit\">Edit</span> Currency Pair Maintenance</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span *ngIf=\"isEdit\" class=\"text-large\">\r\n        Edit Currency Pair Maintenance\r\n      </span>\r\n      <span *ngIf=\"!isEdit\" class=\"text-large\">\r\n        New Currency Pair Maintenance\r\n      </span>\r\n   </div>\r\n\r\n   <mat-card>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"branchForm\" (ngSubmit)=\"submit()\" class=\"mt-32\">\r\n        <!-- <h1>{{isEdit? 'Edit Branch Info' : 'New Branch Info'}}</h1> -->\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <!-- <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n            <mat-label>Entity Code * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select \r\n              name=\"entity\"\r\n              formControlName=\"entityCode\"\r\n              placeholder=\"Entity Code\">\r\n             <mat-option *ngFor=\"let entity of entityCode\" [value]=\"entity.entityCode\">\r\n              {{ entity.entityCode }}\r\n            </mat-option>\r\n            </mat-select>\r\n              <mat-error\r\n              *ngIf=\"branchForm?.get('entityCode').touched && !branchForm?.get('entityCode').valid\">\r\n              Entity Code is Required\r\n          </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Entity Code * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['entityCode']\" />\r\n            </mat-form-field>\r\n          </div> -->\r\n      \r\n          <!-- <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n            <mat-label>Bank Code *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"bankCode\"  formControlName=\"bankCode\" placeholder=\"Bank Code\">\r\n                  <mat-option *ngFor=\"let data of bankCode\"  [value]=\"data.bankCode\">\r\n                  {{data.bankCode}}\r\n                  </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"branchForm?.get('bankCode').touched && !branchForm?.get('bankCode').valid\">\r\n                Bank Code is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Bank Code  * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['bankCode']\" />\r\n            </mat-form-field>\r\n          </div> -->\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n            <mat-label>Currency 1 * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"currency\" placeholder=\"Currency 1\" [formControl]=\"branchForm.controls['currency1']\" required >\r\n              <mat-option>Select</mat-option>\r\n              <mat-option *ngFor=\"let currency of currencies\"  [value]=\"currency\">\r\n                {{ currency }}\r\n              </mat-option>\r\n             </mat-select>\r\n            <mat-error *ngIf=\"branchForm?.get('currency1').touched && !branchForm?.get('currency1').valid\">\r\n             Currency 1 is Required\r\n           </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Currency 1 * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['currency1']\" />\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n            <mat-label>Currency 2 *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"currency\"  placeholder=\"Currency 2\" [formControl]=\"branchForm.controls['currency2']\"  required >\r\n              <mat-option>Select</mat-option>\r\n              <mat-option *ngFor=\"let currency of currencies\" [value]=\"currency\" >\r\n                {{ currency }}\r\n              </mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"branchForm?.get('currency2').touched && !branchForm?.get('currency2').valid\">\r\n                Currency 2 is Required\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Currency 2 * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['currency2']\" />\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n            <mat-label>Through Currency *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n               <mat-select name=\"currency\"  placeholder=\"Through Currency\" [formControl]=\"branchForm.controls['throughCurrency']\" required >\r\n                <mat-option>Select</mat-option>\r\n                <mat-option *ngFor=\"let currency of currencies\"  [value]=\"currency\">\r\n                  {{ currency }}\r\n                </mat-option>\r\n               </mat-select>\r\n              <mat-error *ngIf=\"branchForm?.get('throughCurrency').touched && !branchForm?.get('throughCurrency').valid\">\r\n               Through Currency is Required!\r\n              </mat-error>\r\n               \r\n            </mat-form-field>\r\n        \r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Through Currency * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['throughCurrency']\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\"  *ngIf=\"!readorWrite\">\r\n            <mat-label>Rate Direct *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"tillOrVault\" formControlName=\"rateDirect\" placeholder=\"Rate Direct\">\r\n              <mat-option value=\"D\">D</mat-option>\r\n              <mat-option value=\"I\">I</mat-option>\r\n              </mat-select>\r\n              <!-- <input matInput name=\"rateDirect\" [formControl]=\"branchForm.controls['rateDirect']\"/> -->\r\n              <mat-error *ngIf=\"branchForm?.get('rateDirect').touched && !branchForm?.get('rateDirect').valid\">\r\n                Rate Direct is Required!\r\n               </mat-error>\r\n            </mat-form-field>\r\n        \r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n            <mat-label>Rate Direct * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"entityCode\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['rateDirect']\" />\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Spread Adder *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput [readonly]=\"readorWrite\" name=\"spreadAdder\" placeholder=\"Spread Adder\" [formControl]=\"branchForm.controls['spreadAdder']\" />\r\n              <mat-error *ngIf=\"branchForm?.get('spreadAdder').touched && !branchForm?.get('spreadAdder').valid\">\r\n                Spread Adder is Required!\r\n               </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n    \r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n            <!-- <div>\r\n              <button mat-raised-button color=\"primary\" [disabled]=\"!(branchForm.valid && branchForm.dirty)\" *ngIf=\"!isEdit\">{{\"SAVE\"\r\n                }}</button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"primary\" [disabled]=\"!(branchForm.valid && branchForm..dirty)\" *ngIf=\"isEdit\">{{\"UPDATE\"\r\n                }}</button>\r\n            </div> -->\r\n            <div>\r\n              <button *ngIf=\"!isEdit\" mat-raised-button color=\"primary\" [disabled]=\"!(branchForm.valid && branchForm.dirty)\"\r\n                (click)=\"submit()\">\r\n                Save\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div [hidden]=\"readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"submit(branchForm.value)\"\r\n                [disabled]=\"!(branchForm.valid && branchForm.dirty)\">\r\n                Save\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                Edit\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                Authorize\r\n              </button>&nbsp;&nbsp;\r\n            </div> \r\n            <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                Reopen\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                Close\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                Delete\r\n              </button> &nbsp;&nbsp;\r\n            </div>\r\n           \r\n            <button\r\n              mat-raised-button\r\n              color=\"warn\"\r\n              type=\"button\"\r\n              (click)=\"goBack()\"\r\n            >\r\n              Exit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <div class=\"mt-32\">\r\n    <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n  </div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Form, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../audit-log/audit-log.component';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { flow } from 'lodash';\r\nimport { flatMap, filter } from 'lodash/fp';\r\nimport { select } from '@syncfusion/ej2-schedule';\r\nimport { roleAuditLogInterface } from './add-role-maintenance.component';\r\nimport Swal from 'sweetalert2';\r\nimport { timeStamp } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-role-maintenance',\r\n  templateUrl: './role-maintenance.component.html',\r\n  styleUrls: ['./role-maintenance.component.scss']\r\n})\r\nexport class RoleMaintenanceComponent implements OnInit {\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  public roleForm: FormGroup;\r\n  selectAllChecked: boolean=false;\r\n  hideSelect: boolean=true; \r\n  isDisable:boolean = true;\r\n  isEdit:boolean = false;\r\n  auditData : roleAuditLogInterface;\r\n  isAuditData : boolean = false\r\n  roleScreenList: any;\r\n  public selectedtab: string;\r\n  indexdata: any;\r\n  screenName:any = [];\r\n  editFlag = false;\r\n  loggedInUser : any;\r\n  id: any;\r\n  //dataService: any;\r\n  enableFinish: boolean=false;\r\n // permissions:any [] = [];\r\n  selectedCheckbox: any[] = [];\r\n  getarr: any[] = [];\r\n // selectedCheckbox:any;\r\n  isReadOnly: boolean = true;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n  permissions: any[] = [];\r\n  childarr: any[] = [];\r\n  childPer: string=\"\";\r\n  parentPermission: any;\r\n  parentSelector: boolean = false;\r\n  checked = false;\r\n  testvar: any;\r\n  checkedcheckbox:boolean=true;\r\n  tellerRoleName:any=[];\r\n  selectedrole: string;\r\n  selectRole: any;\r\n  readorWrite: boolean=true;\r\n  allRoles: any[] = [];\r\n  allRolesPer: any[] = [];\r\n  selectedTabId: any;\r\n  tabIndex: any;\r\n  isSelectedAll:boolean = false;\r\n  roleValues: boolean;\r\n  entityArr: any[]=[];\r\n  bankCodeArr: any[]=[];\r\n  branchCodeArr: any[]=[];\r\n  tabArr: any[] =[];\r\n  currentUser: any;\r\n  entityName: any;\r\n\r\n\r\n  constructor(private apiService: ApiService, private router:Router, private route: ActivatedRoute,\r\n    private snack: MatSnackBar, private ls: LocalStoreService, private fb: FormBuilder, private cdr: ChangeDetectorRef, private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildItemForm({});\r\n    this.getEntityCode();\r\n    // this.getBankCode();\r\n    // this.getBranchCode();\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.loggedInUser=this.currentUser.userName;\r\n    console.log(this.loggedInUser);\r\n    \r\n    this.apiService.editMenuMaintenance(0).subscribe((response: any) => {//parent api\r\n      this.tellerRoleName = response;\r\n      for (let i = 0; i < response.length; i++) {\r\n        this.tellerRoleName[i].tabName = this.tellerRoleName[i].screenName.toUpperCase();\r\n        this.tellerRoleName[i].selected = false;\r\n        // this.apiService.editMenuMaintenance(this.tellerRoleName[i].id).subscribe((resp) => {\r\n          // console.log(resp);\r\n          // for (let i = 0; i < resp.length; i++) {\r\n          //   resp[i].checked = false;\r\n          //   this.allRoles.push(resp[i]);\r\n          // }\r\n          this.route.queryParamMap.subscribe((params: any) => {\r\n            // this.entityIsEdit = params.get('isEdit');\r\n            // console.log(\"this.entityIsEdit\",this.entityIsEdit);\r\n            if(params.get('isEdit') == 'Yes'){\r\n               this.isReadOnly = false;\r\n             this.isView= true;\r\n             this.editNow = true;\r\n            }\r\n            else if(params.get('isEdit') == 'No'){\r\n               this.isReadOnly = true;\r\n               this.isView= true;\r\n              this.editNow = false;\r\n            }\r\n            else if(params.get('isEdit') == 'false'){\r\n              this.isReadOnly = false;\r\n              this.isView= false;\r\n              this.editNow = false;\r\n            }\r\n            else if(params.get('isEdit') == null){\r\n            this.isView= false;\r\n            }\r\n            if(params.get('id')){\r\n              this.isEdit = true;\r\n              this.id = params.get('id');\r\n              this.apiService.fetchRoleById(params.get('id')).subscribe((resp: any) =>{\r\n                 console.log(resp);\r\n                 console.log(resp.roleInfo.entityName);\r\n                 \r\n                 this.entityName=resp.roleInfo.entityName;\r\n                 if(resp.roleInfo.entityName!=null){            \r\n                  this.getBankCode(resp.roleInfo.entityName);\r\n                }\r\n                if(resp.roleInfo.bankName!=null && resp.roleInfo.entityName!=null){\r\n                  this.getBranchCode(resp.roleInfo.bankName)\r\n                }\r\n\r\n                //  this.getTabDetails(resp.tabInfo[0].id)\r\n                // this.selectedrole=\"Customer Onboarding\";\r\n                this.testvar = resp;\r\n\r\n                var roleTab\r\n                var screen= resp.screenInfo.filter((item)=>{\r\n                  // console.log(\"parentId\",item.parentId);\r\n                  // console.log(\"screenId\",resp.permissionInfo[i].permissionId.screenId);\r\n                  \r\n                  return  item.id===resp.permissionInfo[i].permissionId.screenId\r\n                  });\r\n                  this.childarr.push(screen[0].screenName);\r\n                roleTab = resp.tabInfo.filter((tabData)=>{\r\n                  return tabData.id==screen[0].parentId\r\n                  })\r\n                  \r\n                  this.tabSelection(roleTab[0].id,roleTab[0].screenName.toUpperCase());\r\n                  console.log(this.allRoles)\r\n                // for(let i=0;i<resp.permissionInfo.length; i++ ){\r\n                //   this.getPermissionInfo(resp.permissionInfo[i].permissionId.screenId);\r\n     \r\n                \r\n                // //  var screen= resp.screenInfo.filter((item)=>{\r\n                // //   // console.log(\"parentId\",item.parentId);\r\n                // //   // console.log(\"screenId\",resp.permissionInfo[i].permissionId.screenId);\r\n                  \r\n                // //   return  item.id===resp.permissionInfo[i].permissionId.screenId\r\n                // //   })\r\n                //   // console.log(screen);\r\n                // //  this.childarr.push(screen[0].screenName);\r\n                // //  console.log(this.childarr);\r\n                 \r\n                // //  roleTab = resp.tabInfo.filter((tabData)=>{\r\n                // //  return tabData.id==screen[0].parentId\r\n                // //  })\r\n                //   //console.log(roleTab);\r\n                // }\r\n                //this.selectedrole=roleTab[0].tabName.toUpperCase();\r\n                this.buildItemForm(resp.roleInfo);\r\n                console.log(\"---->>>>\", roleTab[0]);\r\n                \r\n                // this.tabSelection(roleTab[0].id,roleTab[0].screenName.toUpperCase());\r\n        \r\n                this.childPer = resp.childPermission + ',';\r\n                if( resp.roleInfo.authStatus==\"U\" ){\r\n                  resp.roleInfo.authDate =\"\"\r\n                  resp.roleInfo.authBy=\"\"\r\n                }\r\n      \r\n                this.auditData = resp.roleInfo;\r\n                this.isAuditData = true;\r\n                this.dataService.setAuditLogData(this.auditData);\r\n                this.dataService.sendClickEvent();\r\n              \r\n                \r\n              });\r\n            }\r\n            else{\r\n              this.readorWrite=false;\r\n              this.buildItemForm({});\r\n           \r\n            }\r\n          }\r\n          ); \r\n        // })\r\n\r\n      }\r\n    }); \r\n    \r\n  }\r\n  \r\n  createPermissionFields(): any {\r\n    return this.fb.group({\r\n      permissionId: {\r\n        roleName: [''],\r\n        screenId: ['']\r\n      },\r\n      version: ['']\r\n    })\r\n\r\n  }\r\n//  getScreenPermissions(){\r\n//   this.apiService.fetchScreenPermissions().subscribe((response:any) => {//parent api\r\n//     this.tellerRoleName=response;\r\n// for(let i=0; i< response.length; i++){\r\n//   this.tellerRoleName[i].tabName=this.tellerRoleName[i].tabName.toUpperCase();\r\n//   this.tellerRoleName[i].selected=false;\r\n//   this.apiService.fetchRolePermissionByTabID(this.tellerRoleName[i].tabId).subscribe((resp) => {\r\n//     console.log(resp);\r\n//     for(let i = 0; i < resp.length; i++){\r\n//       resp[i].checked = false;\r\n//       this.allRoles.push(resp[i]);\r\n//     }\r\n//   })\r\n// } \r\n//   }); \r\n//   console.log(this.allRoles);\r\n// }\r\ngetPermissionInfo(screenId){\r\n  console.log(this.allRolesPer, this.allRoles);\r\n  \r\n  console.log(this.allRoles[0]);\r\n  console.log(screenId);\r\n  console.log(this.tellerRoleName);\r\n  \r\n  for(let j = 0; j < this.allRoles.length; j++){\r\n    console.log(this.allRoles[j].id);\r\n    if(this.allRoles[j].id == screenId){\r\n      console.log(\"----------->\", j);\r\n      \r\n      this.allRoles[j].checked = true;\r\n      for(let k = 0; k < this.tellerRoleName.length; k++){\r\n        if(this.tellerRoleName[k].tabName == this.allRoles[j].screenName){\r\n          this.tellerRoleName[k].selected = true;\r\n          break;\r\n        }\r\n      }\r\n      break;\r\n  }\r\n} \r\n}\r\n  onChange($event) {\r\n    const screenName = $event.target.value;\r\n    const isChecked = $event.target.checked;\r\n    this.roleScreenList = this.roleScreenList.map((d) => {\r\n      if (d.screenName == screenName) {\r\n        d.checked = isChecked;\r\n        this.parentSelector = true;\r\n        return d;\r\n      }\r\n      if (screenName == -1) {\r\n        d.checked = this.parentSelector;\r\n        return d;\r\n      }\r\n      return d;\r\n    });\r\n  }\r\n \r\n \r\n\r\n  \r\n\r\n  buildItemForm(item) {\r\n    this.roleForm = this.fb.group({\r\n      screenName:[''],\r\n      id: [''],\r\n      authStatus: [''],\r\n      isActive:[true],\r\n      oneTimeAuth:[''],\r\n      recordStatus:[''],\r\n      version:[''],\r\n      loggedInUser:[''],\r\n      authBy:[''],\r\n      authDate: [''],\r\n      permissions: this.fb.array([this.createPermissionFields()]),\r\n      roleId: [item? item.id:''],\r\n      selectAllRole:[false],\r\n      roleName: [item? item.roleName :'',[Validators.required]],\r\n      roleDesc:[item? item.roleDesc : '',[Validators.required]],\r\n      entityName:[item? item.entityName:'',[Validators.required]],\r\n      bankName:[item? item.bankName:'',[Validators.required]],\r\n      branchName:[item? item.branchName:'',[Validators.required]]\r\n      }) \r\n  }\r\n\r\n\r\n  \r\n\r\n  onChecklistChange(checked, checkbox, index?) {\r\n    \r\n \r\n    console.log('checked',checked)\r\n    console.log('checkbox', checkbox)\r\n    console.log(\"index\", index);\r\n    // this.allRoles[index].checked=true;\r\n\r\n    // var roleObj;\r\n    if (checked.checked==true) {\r\n      console.log(\"tabIndex\", this.tabIndex);\r\n      console.log(\"tellerRoleName\", this.tellerRoleName);\r\n      console.log(this.allRoles[index]);\r\n      \r\n      this.allRoles[index].checked = true\r\n      this.roleValues=true;\r\n      this.tellerRoleName[this.tabIndex].selected = true; \r\n      // this.tellerRoleName[this.tabIndex].checked= true;\r\n      // roleObj = \r\n      // {\r\n      //   \"permissionId\": {\r\n      //     \"roleName\": this.roleForm.value.roleName,\r\n      //     \"screenId\": checkbox.screenId\r\n      //   },\r\n      //   \"version\": 0\r\n      // }\r\n      // console.log('roleObj',roleObj)\r\n\r\n      // this.permissions.push(roleObj)\r\n    } else {\r\n      this.allRoles[index].checked = false;\r\n      // var index1 = this.permissions.findIndex(x => x.screenName == checkbox.screenName);\r\n      // this.permissions.splice(index1, 1);\r\n    }\r\n    // if(this.permissions.length == this.roleScreenList.length)\r\n    // this.roleForm.controls.selectAllRole.setValue(true);\r\n    // else this.roleForm.controls.selectAllRole.setValue(false);\r\n    console.log(this.selectedTabId);\r\n    \r\n    let selectedItemLength = this.allRoles.filter(role => role.parentId == this.selectedTabId && role.checked == true).length;\r\n    this.isSelectedAll = this.allRoles.filter(role => role.parentId == this.selectedTabId).length == selectedItemLength;\r\n    if(selectedItemLength < 1){\r\n      this.tellerRoleName[this.tabIndex].selected = false;\r\n    }\r\n    if (this.allRoles.some(role => role.checked === true)){\r\n      this.roleValues=true;\r\n     }\r\n     else{\r\n      this.roleValues=false;\r\n     }\r\n  }\r\n\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/roleMaintenance\"]);\r\n  }\r\n\r\n\r\n  submit(form) {\r\n    \r\n    console.log('click',this.roleScreenList);\r\n     console.log(\"Form:\",form);\r\n \r\n    this.roleForm.value.loggedInUser = this.loggedInUser;\r\n    console.log(this.roleForm);\r\n    this.allRoles.map(role => {\r\n      if (role.checked == true) {\r\n        let roleObj;\r\n        roleObj =\r\n        {\r\n          \"permissionId\": {\r\n            \"roleName\": this.roleForm.value.roleName,\r\n            \"screenId\": role.id\r\n          },\r\n          \"version\": 0\r\n        }\r\n        this.permissions.push(roleObj)\r\n      }\r\n    }) \r\n    if(this.permissions.length == this.allRoles.length){\r\n      this.roleForm.controls.selectAllRole.setValue(true);\r\n    }   \r\n    else{\r\n      this.roleForm.controls.selectAllRole.setValue(false);\r\n    }\r\n    console.log('this.roleForm.value',this.roleForm.value)\r\n      this.roleForm.value.permissions = this.permissions;\r\n    console.log('perm', this.permissions)\r\n    for (let i = 0; i < this.permissions.length; i++){\r\n      console.log(this.permissions[i].permissionId.roleName);\r\n      if (i == this.permissions.length - 1) {\r\n        this.childPer= this.childPer+this.permissions[i].permissionId.roleName; \r\n      } else {\r\n        this.childPer= this.childPer+this.permissions[i].permissionId.roleName + ',';\r\n      }\r\n\r\n      this.parentPermission = \"Teller Dashboard\";\r\n    \r\n    }\r\n   // this.roleForm.value.childPermission = this.childPer;\r\n\r\n    this.roleForm.value.id = this.roleForm.value.roleId; \r\n    this.roleForm.value.parentPermission=this.selectedrole;  \r\n    this.roleForm.value.loggedInUser=this.loggedInUser;\r\n    console.log(this.roleForm.value);\r\n    \r\n    this.apiService.saveRole(this.roleForm.value).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null && this.isEdit == true){\r\n        this.router.navigate([`/maintenance/main/roleMaintenance`]).then(_=>{\r\n                this.snack.open('Data Updated!', 'OK', \r\n                { duration: 4000 , \r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",});\r\n                });       \r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null || this.isEdit == true){\r\n       // \r\n        console.log(\"data\",data);\r\n        this.router.navigate([`/maintenance/main/roleMaintenance`]).then(_=>{\r\n          this.snack.open('Data Saved!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n          });\r\n        this.cdr.markForCheck();\r\n       }\r\n    },error=>{\r\n      this.snack.open(error.error.message, 'error', { \r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n             })\r\n    }); \r\n    //}  \r\n  }\r\n  selectAll(event) {\r\n\r\n    \r\n    for (let i = 0; i < this.allRoles.length; i++) {\r\n      if(this.allRoles[i].parentId == this.selectedTabId){\r\n      if (event.checked == true){\r\n        this.roleValues=true;\r\n        this.allRoles[i].checked = true;\r\n        this.tellerRoleName[this.tabIndex].selected = true;\r\n        this.isSelectedAll = true\r\n        \r\n        // this.roleScreenList[i].checked = true;\r\n        // this.onChecklistChange(event, this.roleScreenList[i]);\r\n      }\r\n      else{\r\n        this.roleValues=false;\r\n        this.allRoles[i].checked = false;\r\n        this.tellerRoleName[this.tabIndex].selected = true;\r\n        this.isSelectedAll = false\r\n      }\r\n    }\r\n      // else { this.roleScreenList[i].checked = false;\r\n        // this.onChecklistChange(event, this.roleScreenList[i]);\r\n      // }\r\n    }\r\n    let selectedItemLength = this.allRoles.filter(role => role.parentId == this.selectedTabId && role.checked == true).length;\r\n    this.isSelectedAll = this.allRoles.filter(role => role.parentId == this.selectedTabId).length == selectedItemLength;\r\n    if(selectedItemLength < 1){\r\n      this.tellerRoleName[this.tabIndex].selected = false;\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  \r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n    let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser;\r\n\r\n    console.log(payload)\r\n    this.apiService.getAuditLogsForRoleMaintenance(payload).subscribe((data) => {\r\n      console.log(data);\r\n      if( data.authStatus==\"U\" ){\r\n        data.authDate = \"\"\r\n        data.authBy = \"\"\r\n        }\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n   }}))\r\n    \r\n  }\r\n  tabSelection(tabId,name,index?){\r\n    this.hideSelect = false;\r\n    this.selectedTabId = tabId\r\n    this.tabIndex = index;\r\n    this.selectedrole=name;\r\n    if(!this.tabArr.includes(tabId)){\r\n      console.log(\"v------------------\")\r\n      this.getTabDetails(tabId);\r\n    }\r\n   \r\n    // this.apiService.getMaintenanceParentMenu().subscribe((resp)=>{\r\n    //   console.log(resp);\r\n      \r\n    // })\r\n\r\n\r\n\r\n    //  this.roleForm.controls.selectAllRole.setValue(false);\r\n    //   this.apiService.fetchRolePermissionByTabID(tabId).subscribe((response) => {\r\n\r\n      // this.roleScreenList = response;\r\n      // console.log('test', this.roleScreenList)\r\n      // for (let i = 0; i < this.roleScreenList.length; i++){\r\n      //   this.roleScreenList[i].checked = false;\r\n      // }\r\n      // console.log('roleScreenList', this.roleScreenList);\r\n      // for (let k = 0; k < this.childarr.length; k++) { \r\n      //   this.getarr= this.roleScreenList.filter((val) => {\r\n      //     return val.screenName == this.childarr[k];\r\n      //   })\r\n      //   const index = this.roleScreenList.findIndex(object => {\r\n      //     return object.screenName ==this.childarr[k];\r\n      //   })\r\n      //   console.log(index);\r\n      //   for (let j = 0; j < this.getarr.length; j++){\r\n      //     this.roleScreenList[index].checked = true;\r\n      //   }\r\n      // }\r\n      \r\n\r\n      // console.log(this.getarr, this.roleScreenList);\r\n      // this.enableSelectAll(this.roleScreenList);\r\n      //  for(let i = 0;i < response[i];i++){\r\n      //   this.screenName = response[i].screenName;\r\n      //  }\r\n    // });\r\n  }\r\n\r\n  getTabDetails(tabId){\r\n    this.apiService.editMenuMaintenance(tabId).subscribe((resp) => {\r\n      this.tabArr.push(tabId);\r\n      console.log(resp);\r\n      this.isSelectedAll=false;\r\n      for (let i = 0; i < resp.length; i++) {\r\n        resp[i].checked = false;\r\n        this.allRoles.push(resp[i]);\r\n        this.allRolesPer.push(resp[i]);\r\n        \r\n      }\r\n      console.log(\"================\")\r\n      this.isSelectedAll = this.allRoles.filter(role => role.parentId == tabId).length == this.allRoles.filter(role => role.parentId == tabId && role.checked == true).length;\r\n      for(let i=0;i<this.testvar.permissionInfo.length; i++ ){\r\n        console.log(\"------------==>\")\r\n        this.getPermissionInfo(this.testvar.permissionInfo[i].permissionId.screenId);\r\n\r\n      \r\n      //  var screen= resp.screenInfo.filter((item)=>{\r\n      //   // console.log(\"parentId\",item.parentId);\r\n      //   // console.log(\"screenId\",resp.permissionInfo[i].permissionId.screenId);\r\n        \r\n      //   return  item.id===resp.permissionInfo[i].permissionId.screenId\r\n      //   })\r\n        // console.log(screen);\r\n      //  this.childarr.push(screen[0].screenName);\r\n      //  console.log(this.childarr);\r\n       \r\n      //  roleTab = resp.tabInfo.filter((tabData)=>{\r\n      //  return tabData.id==screen[0].parentId\r\n      //  })\r\n        //console.log(roleTab);\r\n      }\r\n\r\n      console.log(this.allRoles);\r\n      console.log(this.allRolesPer);\r\n      \r\n      // if(this.allRoles.filter(role => role.parentId == tabId) == this.allRolesPer.filter(role => role.parentId == tabId && role.checked == true)){\r\n      //   this.allRolesPer[0].checked=true;\r\n      // }\r\n      \r\n        \r\n          // for (let index = 0; index < resp.length; index++) {\r\n            for(let j=0;j<this.allRoles.length;j++){\r\n            if(tabId==this.allRoles[j].parentId && this.allRoles[j].checked==true){\r\n              // if(this.allRoles[j].checked==true){\r\n                console.log(\"saj\",this.allRoles[j].checked);\r\n                \r\n                \r\n              this.allRolesPer[j].checked=true;\r\n            // }\r\n            \r\n          // }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  enableSelectAll(role){\r\n    var selectAllreturn= role.filter((item)=>{\r\n      return item.checked == false;\r\n         })\r\n      if(selectAllreturn.length==0)\r\n      this.roleForm.controls.selectAllRole.setValue(true);\r\n      else  this.roleForm.controls.selectAllRole.setValue(false);\r\n  }\r\n  deleteRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteRole(this.auditData.id)\r\n        .subscribe(data => {\r\n        },\r\n          err=>{\r\n            if (err.status == 200) {\r\n              this.snack.open('Record Deleted Successfully', 'OK', {\r\n                duration: 4000,\r\n                verticalPosition: 'top',\r\n                horizontalPosition: 'right'\r\n              });\r\n             \r\n            }\r\n            \r\n        })\r\n      }}))}\r\n  \r\n      // allRoles.some(role => role.checked === true)\r\n\r\n      getEntityCode(){\r\n        this.apiService.fetchEntityDetails()\r\n          .subscribe(data => {\r\n            console.log(data);\r\n            for(let i=0;i<data.length;i++){\r\n              if (data[i].authStatus=='A') {\r\n                this.entityArr.push(data[i].entityCode)\r\n              }\r\n            }\r\n            console.log(this.entityArr);\r\n            \r\n          });\r\n      }\r\n      // getBankCode(){\r\n      //   this.apiService.getBankCode().subscribe(data=>{\r\n      //     console.log(data);\r\n      //       for(let i=0;i<data.length;i++){\r\n      //         if (data[i].authStatus=='A') {\r\n      //           this.bankCodeArr.push(data[i].entityCode)\r\n      //         }\r\n      //       }\r\n      //       console.log(this.bankCodeArr);\r\n            \r\n      //    });\r\n         \r\n      // }\r\n      getBankCode(entityCode:any) {\r\n        this.bankCodeArr=[];\r\n        this.entityName=entityCode;\r\n        this.apiService.getBankInfoByEntityCode(entityCode).subscribe((data) => {\r\n          for(let i=0;i<data.length;i++){\r\n                    if (data[i].authStatus=='A') {\r\n                      this.bankCodeArr.push(data[i].bankCode)\r\n                    }\r\n                  }\r\n          console.log(this.bankCodeArr);\r\n        });\r\n      }\r\n      getBranchCode(bankCode:any) {\r\n        this.branchCodeArr=[]\r\n        // this.entityName= this.buildUserForm.;\r\n        this.apiService.getBranchCode1(this.entityName,bankCode).subscribe((data) => {\r\n          for(let i=0;i<data.length;i++){\r\n                    if (data[i].authStatus=='A') {\r\n                      this.branchCodeArr.push(data[i].branchCode)\r\n                    }\r\n                  }\r\n                  console.log(this.branchCodeArr);  \r\n                   \r\n        });\r\n      }\r\n      // getBranchCode(){\r\n      //   this.apiService.getBranchCode().subscribe(data=>{\r\n      //     console.log(data);\r\n      //       for(let i=0;i<data.length;i++){\r\n      //         if (data[i].authStatus=='A') {\r\n      //           this.branchCodeArr.push(data[i].branchCode)\r\n      //         }\r\n      //       }\r\n      //       console.log(this.branchCodeArr);\r\n            \r\n      //    });\r\n        \r\n      // }\r\n}\r\n","\r\n <h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Role Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Role </small></h1>  \r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span *ngIf=\"isEdit\" class=\"text-large\">\r\n        Edit Role\r\n      </span>\r\n      <span *ngIf=\"!isEdit\" class=\"text-large\">\r\n        New Role \r\n      </span>\r\n   </div>\r\n   <br>\r\n\r\n   <mat-card>\r\n    <form [formGroup]=\"roleForm\" *ngIf=\"roleForm\" class=\"mt-32\">\r\n      <div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity Name*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select (selectionChange)=\"getBankCode($event.value)\"  formControlName=\"entityName\" name=\"Entity\"  placeholder=\"Enter Entity Code\"  >\r\n              <mat-option  *ngFor=\"let entity of entityArr \" [value]=\"entity\">{{entity}}</mat-option>\r\n    \r\n          </mat-select>\r\n            <mat-error *ngIf=\"roleForm.get('entityName').touched && !roleForm.get('entityName').valid\">\r\n                Entity code is Required!\r\n            </mat-error>\r\n        </mat-form-field>\r\n        \r\n          </div>\r\n          <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n            <mat-label>Entity Name *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput readonly\r\n              formControlName=\"entityName\">\r\n            </mat-form-field>\r\n          </div>\r\n              <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\"  >\r\n                <mat-label>Bank Name*</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <mat-select (selectionChange)=\"getBranchCode($event.value)\" formControlName=\"bankName\" name=\"Bank\"  placeholder=\"Enter Bank Code\"  >\r\n                    <mat-option  *ngFor=\"let bankCode of bankCodeArr \" [value]=\"bankCode\">{{bankCode}}</mat-option>\r\n        \r\n                </mat-select>\r\n                  <mat-error *ngIf=\"roleForm.get('bankName').touched && !roleForm.get('bankName').valid\">\r\n                    Bank code is Required!\r\n                  </mat-error>\r\n              </mat-form-field>\r\n              \r\n                </div>\r\n                <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                  <mat-label>Bank Name *</mat-label>\r\n                  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <input matInput readonly\r\n                    formControlName=\"bankName\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                  <mat-label>Branch Name*</mat-label>\r\n                  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <mat-select formControlName=\"branchName\" name=\"Branch\"  placeholder=\"Enter Branch Code\"  >\r\n                      <mat-option  *ngFor=\"let branchCode of branchCodeArr \" [value]=\"branchCode\">{{branchCode}}</mat-option>\r\n        \r\n                  </mat-select>\r\n                    <mat-error *ngIf=\"roleForm.get('branchName').touched && roleForm.get('branchName').hasError('required')\">\r\n                        Branch code is Required!\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                \r\n                  </div>\r\n                  <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                    <mat-label>Branch Name *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                      <input matInput readonly\r\n                      formControlName=\"branchName\">\r\n                    </mat-form-field>\r\n                  </div>\r\n    \r\n          </div>\r\n      <div  fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"50\" class=\"pr-16\">\r\n          <mat-label>Role Name*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input \r\n                  matInput   type=\"texts\"\r\n                  formControlName=\"roleName\"  \r\n                  [readonly]=\"readorWrite\"\r\n                  placeholder=\"Enter Role Name\"\r\n              />\r\n              <mat-error  *ngIf=\"!roleForm.get('roleName').valid  && roleForm.get('roleName').touched\">\r\n                Role Name is Required!\r\n              </mat-error>\r\n          </mat-form-field>\r\n          \r\n      </div>\r\n      <div fxFlex=\"50\" class=\"pr-16\">\r\n        <mat-label>Role Description*</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n                matInput \r\n                formControlName=\"roleDesc\" \r\n                [readonly]=\"readorWrite\" \r\n                placeholder=\"Enter Role Description\"\r\n            />\r\n            <mat-error *ngIf=\"!roleForm.get('roleDesc').valid  && roleForm.get('roleDesc').touched\">\r\n              Role Description is Required!\r\n            </mat-error>\r\n        </mat-form-field>\r\n        \r\n    </div>\r\n  </div>\r\n <br>\r\n      <!-- {{selectedrole}} -->\r\n      <div class=\"col-lg-12\">\r\n        <div class=\"row justify-content-center\"  >\r\n          <div class=\"col-auto\" *ngFor=\"let role of tellerRoleName; let i = index\">\r\n            <div [ngClass]=\"(selectedrole == role.tabName|| role.selected)? 'mr-38 btnAfter':'mr-38 btnBefore'\" (click)=\"tabSelection(role.id, role.tabName, i)\"   >\r\n              {{role.tabName}}\r\n            </div>\r\n          </div>\r\n         \r\n        </div>\r\n      </div>\r\n      <!-- <div *ngFor=\"let role of roleName\">\r\n        <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"tabSelection()\"  style=\"height: 45px; margin-left: 1cm;\" >\r\n          {{role.tabName}}\r\n        </button>\r\n      </div> -->\r\n    <br>\r\n    <div class=\"dbCardStyle\">\r\n        <div [hidden]=\"hideSelect\" class=\"form-check pl-4\">\r\n          \r\n          <!-- <input type=\"checkbox\" class=\"form-check-input\" (change)=\"pk($event)\"> -->\r\n          <mat-checkbox\r\n          [checked]=\"isSelectedAll\"\r\n          class=\"form-check-input\" \r\n          [disabled]=\"readorWrite\"\r\n          (change)=\"selectAll($event)\" >\r\n                Select ALL\r\n          </mat-checkbox>\r\n\r\n        </div>\r\n         \r\n    \r\n    <!-- <div *ngIf=\"isEdit\"> -->\r\n      <div class=\"table-responsive\">\r\n        <table id=\"dbTable1\" class=\"table tableStyle\" >\r\n        <thead>\r\n          <tr class=\"screen\">\r\n            <h2 style=\"margin-left:10px\">Screen</h2>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr class = \"screenList\" *ngFor=\"let roles of allRoles ; let i = index\" > \r\n            <td *ngIf=\"roles.parentId == selectedTabId\">\r\n              <div class=\"form-check\">\r\n                <mat-checkbox\r\n                class=\"checkbox-margin\" color=\"primary\" (change)=\"onChecklistChange($event, roles, i)\"\r\n                [value]=\"roles\"\r\n                [disabled]=\"readorWrite\"\r\n                [checked]=\"roles.checked\"\r\n                >{{ roles.screenName }}\r\n              </mat-checkbox>\r\n                </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <!-- </div> -->\r\n      </div>\r\n       \r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button *ngIf=\"!isEdit\" \r\n            color=\"primary\" \r\n            mat-raised-button \r\n            (click)=\"submit(roleForm.value)\"\r\n            [disabled]=\"!roleForm.valid || !roleValues\"\r\n          >\r\n            Save\r\n         \r\n          </button> \r\n          \r\n          <div [hidden]=\"readorWrite\">\r\n            <button *ngIf=\"isEdit\"  type=\"button\" mat-raised-button color=\"primary\"\r\n\r\n            [disabled]= \"!roleForm.valid || !roleValues\" \r\n            (click)=\"submit(roleForm.value)\">\r\n               Save\r\n             </button>\r\n          </div>  \r\n       \r\n          &nbsp; \r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"readorWrite=false\" >\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit \r\n          </button>\r\n\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n   </mat-card>\r\n\r\n\r\n   <div *ngIf=\"auditData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-menu-details',\r\n  templateUrl: './add-edit-menu-details.component.html',\r\n  styleUrls: ['./add-edit-menu-details.component.scss']\r\n})\r\nexport class AddEditMenuDetailsComponent implements OnInit {\r\n  menuDetailsForm: FormGroup;\r\n  loggedInUser: any;\r\n  menuIsEdit: boolean = false;\r\n  isEdit: boolean = false;\r\n  id: number;\r\n  parentMenus: any[]=[];\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStoreService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.buildMenuForm({});\r\n    this.getParentMenus();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n\r\n  buildMenuForm(item: any) {\r\n    this.menuDetailsForm = this.fb.group({\r\n      id: [item.id || null],\r\n      screenCode: [item.screenCode || '', Validators.required],\r\n      screenName: [item.screenName || \"\", Validators.required],\r\n      parentId: [item.parentId || \"\", Validators.required],\r\n      routing: [item.routing || \"\", Validators.required],\r\n      status: true,\r\n    });\r\n  }\r\n  getParentMenus() {\r\n    this.apiService.getMaintenanceParentMenu().subscribe((res: any) => {\r\n      // this.parentMenus = res;\r\n      for(let i=0;i<res.length;i++){\r\n        if(res[i].authStatus=='A'){\r\n          this.parentMenus.push(res[i])\r\n        }\r\n      }\r\n      console.log(this.parentMenus);\r\n      \r\n    }, (err: any) => {\r\n\r\n    })\r\n  }\r\n  submit() {\r\n    let payload: any = {};\r\n    payload = this.menuDetailsForm.value;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.loader.open();\r\n    this.apiService.upsertMenu(payload).subscribe(res => {\r\n      this.loader.close();\r\n      this.snack.open('Data Saved Successfully!', 'OK',\r\n        {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      this.router.navigate([`/maintenance/main/menu-config`]);\r\n    }, err => {\r\n      this.loader.close();\r\n      this.snack.open('Unable to Save!', 'Error',\r\n        {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      this.router.navigate([`/maintenance/main/menu-config`]);\r\n    })\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/menu-config`]);\r\n  }\r\n}\r\n\r\n\r\n","\r\n<h1 class=\"main-head\"><small class=\"small-head\">Home >  Maintenance Summary > Menu Maintenance > New Menu Maintenance</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\" >\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        New Menu\r\n      </span>\r\n   </div>\r\n  \r\n  \r\n    <mat-card>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"menuDetailsForm\" class=\"mt-32\">\r\n        <!-- <h1>{{isEdit? 'Edit Branch Info' : 'New Branch Info'}}</h1> -->\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Screen Name *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input \r\n                  matInput name=\"screenName\"\r\n                  type=\"text\"\r\n                  formControlName=\"screenName\"\r\n                  placeholder=\"Screen Name\"\r\n              />\r\n              <mat-error\r\n              *ngIf=\"menuDetailsForm.get('screenName').touched && !menuDetailsForm.get('screenName').valid\">\r\n              Screen Name is Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n           \r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Screen Code * </mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput name=\"screenCode\"\r\n              type=\"text\" formControlName=\"screenCode\" \r\n              placeholder=\"Screen Code\"/>\r\n              <mat-error\r\n              *ngIf=\"menuDetailsForm.get('screenCode').touched && !menuDetailsForm.get('screenCode').valid\">\r\n              Screen Code is Required\r\n            </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Route *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input matInput type=\"text\" placeholder=\"Route\" name=\"routing\" formControlName=\"routing\" />\r\n              <mat-error\r\n              *ngIf=\"menuDetailsForm.get('routing').touched && !menuDetailsForm.get('routing').valid\">\r\n              Route is Required\r\n            </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Parent Menu *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">      \r\n              <mat-select formControlName=\"parentId\" placeholder=\"Parent Menu\">\r\n                <mat-option [value]=\"'0'\">Main Menu</mat-option>\r\n                <mat-option *ngFor=\"let item of parentMenus\" [value]=\"item.id\">\r\n                  {{ item.screenName }}\r\n                </mat-option>\r\n \r\n              </mat-select>\r\n              <mat-error\r\n              *ngIf=\"menuDetailsForm.get('parentId').touched && !menuDetailsForm.get('parentId').valid\">\r\n              Parent Menu is Required\r\n            </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          \r\n  \r\n         \r\n        </div>\r\n       \r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n\r\n \r\n          <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n            <div>\r\n              <button  mat-raised-button color=\"primary\"\r\n              (click)=\"submit()\"\r\n              [disabled]=\"!(menuDetailsForm.valid) \"\r\n                >\r\n                SAVE\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <button mat-raised-button color=\"warn\" (click)=\"goBack()\"  type=\"button\">\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <!-- </mat-card> -->\r\n  \r\n  \r\n  \r\n","import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Location } from '@angular/common';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport { ngxDetails } from 'app/shared/models/ngxtable';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-ngx-table-popup',\r\n  templateUrl: './ngx-table-popup.component.html'\r\n})\r\nexport class NgxTablePopupComponent implements OnInit {\r\n\r\n  // @ViewChild('auditLog') auditLog : AuditLogComponent\r\n\r\n\r\n  public branchForm: FormGroup;\r\n  loggedInUser : string;\r\n  auditData : ngxDetails;\r\n  banks: string[]=[];\r\n  currencies: string[] = [];\r\n  countries: string[] = [];\r\n  states: string[] = [];\r\n  isAuditData : boolean = false;\r\n  cities: string[] = [];\r\n  isEdit: boolean = false;\r\n  isReadOnly: boolean = true;\r\n  id: number;\r\n  show = false;\r\n  bankCode: string[] = [];\r\n  entityCode:  string[] = [];\r\n  readorWrite: boolean = true;\r\n  currentUser: any;\r\n  bankDetails: any;\r\n  constructor(\r\n    private route : ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private _location: Location,\r\n    private ls : LocalStoreService,\r\n    private router:Router,\r\n    private cdr: ChangeDetectorRef,\r\n    private snack: MatSnackBar,\r\n    private dataService : DataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n     \r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getBranchById(params.get('id')).subscribe((resp) =>{\r\n        \r\n           this.buildItemForm(resp);           \r\n           this.auditData = resp;\r\n           this.isAuditData = true;\r\n           this.dataService.setAuditLogData(this.auditData);\r\n         \r\n         \r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );  \r\n    this.getEntityCode();\r\n    // this.getAuthBankDetails();\r\n    this.getAllBanks();\r\n    this.getBranchCurrency();\r\n    this.getCountryName();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n\r\n    \r\n    this.buildItemForm({});\r\n\r\n  }\r\n  buildItemForm(item) {\r\n    \r\n    this.branchForm = this.fb.group({\r\n      bankCode: [item.bankCode || '', Validators.required], //dropdown\r\n      entityCode: [item.entityCode || '', Validators.required],\r\n      branchCode: [item.branchCode || '', Validators.required],\r\n      branchCcy: [item.branchCcy || '', Validators.required],  //dropdown\r\n      // branchDetails: [item.branchDetails || '', Validators.required],externalSystemBranchCode\r\n      externalSystemBranchCode: [item.externalSystemBranchCode || '', Validators.required],\r\n      centralBankAccount: [item.centralBankAccount || '', Validators.required],\r\n      currencyChestAccount: [item.currencyChestAccount || '', Validators.required],\r\n      emailId: [item.emailId || \"\", [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n      branchName: [item.branchName || '', Validators.required],\r\n      address1: [item.address1 || '', Validators.required],\r\n      address2: [item.address2 || ''],\r\n      country: [item.country || '', Validators.required],\r\n      state: [item.state || '', Validators.required],\r\n      city: [item.city || '', Validators.required],\r\n      pincode: [item.pincode || '',[ Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n      id: [item.id || ''],\r\n    });\r\n\r\n    if (item.country) {\r\n      this.getStateName(item.country);\r\n      this.getCityName(item.state);\r\n      \r\n    }\r\n    if (item.entityCode) {\r\n      this.getBankCode1(item.entityCode);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  keyPressEmail(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/^[ A-Za-z0-9_@./#&$,.;:+-]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  getAllBanks() {\r\n    this.apiService.getBankCode().subscribe(_list => {\r\n      this.banks = _list;\r\n    }, (err: any) => {\r\n      \r\n    })\r\n  }\r\n\r\n  Onlynumber(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z- ]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n getBranchCurrency(){\r\n    // this.apiService.getCountryValues().subscribe(_list =>{\r\n    //   this.currencies = _list;\r\n    // },(err:any) =>{\r\n     \r\n    // })\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currencies.push(data[i])\r\n      }\r\n      console.log(this.currencies);\r\n    })\r\n  }\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.entityCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.entityCode);\r\n      // this.entityCode = resp;\r\n    });\r\n  }\r\n\r\n  getBankCode1(entityCode) {\r\n    this.apiService.getBankInfoByEntityCode(entityCode).subscribe((resp) => {\r\n      this.bankCode = resp;\r\n      console.log(this.bankCode);\r\n    });\r\n  }\r\n  getAuthBankDetails(){\r\n    this.apiService.fetchAuthBankInfo().subscribe(resp => {\r\n      this.bankDetails = resp\r\n    })\r\n    }\r\n// getEntityCodeByBankCode(bankCode){\r\n\r\n//   for (let index = 0; index < this.bankDetails.length; index++) {\r\n//     if(this.bankDetails[index].bankCode == bankCode){\r\n//       this.branchForm.get('entityCode').setValue(this.bankDetails[index].entityCode)\r\n//       return;\r\n//     }\r\n    \r\n//   }\r\n// }\r\n  getBankCode(entityCode:any) {\r\n    this.apiService.getBankInfoByEntityCode(entityCode).subscribe((resp) => {\r\n      this.bankDetails = resp\r\n      // for(let i=0; i<resp.length;i++){\r\n      //   if(resp[i]===entityCode){\r\n      //     this.bankCode.push(resp[i]);\r\n      //   }\r\n      // }\r\n      console.log(this.bankDetails);\r\n    });\r\n  }\r\n\r\n\r\n  getCountryName() {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      console.log('resp',data)\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          console.log(data[i])\r\n          this.countries.push(data[i].countryName);\r\n          \r\n        }\r\n      }console.log(this.countries)\r\n    });\r\n  }\r\n\r\n  getStateName(countryName){\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName === countryName){\r\n          this.apiService.getStateByCountry(data[i].id).subscribe((resp: any) => {\r\n          this.states = resp\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n    }\r\n    \r\n  getCityName(state: any) {\r\n    let entityName = \"city\";\r\n    \r\n    this.apiService.getDropDownValues1(entityName, state).subscribe((data) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    // let details: any = {};\r\n    // details = this.branchForm.value;\r\n    // details.id = this.id;\r\n\r\n    let loggedInUser = this.loggedInUser;\r\n    // \r\n    this.apiService.updateBranchDetails(this.branchForm.value,loggedInUser).subscribe(data => {\r\n     \r\n      if(data != null){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.cdr.markForCheck();\r\n      }\r\n    })\r\n    \r\n    // this.router.navigate([`/maintenance/main/branch`]);\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteBranch(this.auditData.id,this.currentUser.userName)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/branch`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/branch`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  \r\n editRecord(){\r\n this.readorWrite=false;\r\n }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForBranch(payload).subscribe((data) => {\r\n       \r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  goBack() {\r\n    //this._location.back();\r\n    this.router.navigate([`/maintenance/main/branch`]);\r\n  }\r\n  dataByBank(index,bank){\r\n    return bank.bankCode;\r\n  }\r\n  dataByCurrency(index,currency){\r\n    return currency.currencyCode;\r\n  }\r\n  dataByCountry(index,country){\r\n    return country;\r\n  }\r\n  dataByState(index,state){\r\n    return state.value1;\r\n  }\r\n  dataByCity(index,city){\r\n    return city.value1;\r\n  }\r\n\r\n  // edit() {\r\n  //  this.show = !this.show;\r\n  // }\r\n}\r\n","<h1 style=\"margin-top: 5px; padding-left:10px; padding-top: 5px; padding-bottom: 0px;\"><small style=\"font-size: 10px; color: rgb(143, 140, 140) ;\">\r\n  Home >  Maintenance Summary > Branch Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Branch Maintenance</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button> \r\n    <span *ngIf=\"isEdit\" class=\"text-large\">\r\n      Edit Branch\r\n    </span>\r\n    <span *ngIf=\"!isEdit\" class=\"text-large\">\r\n      New Branch \r\n    </span>\r\n </div>\r\n\r\n\r\n  <mat-card>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"branchForm\" (ngSubmit)=\"submit()\" class=\"mt-32\">\r\n      <!-- <h1>{{isEdit? 'Edit Branch Info' : 'New Branch Info'}}</h1> -->\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label >Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <mat-select name=\"entityCode\"  [formControl]=\"branchForm.controls['entityCode']\" (selectionChange)=\"getBankCode($event.value)\" class=\"selectOption\">\r\n                <mat-option *ngFor=\"let data of entityCode;\"  [value]=\"data.entityCode\">\r\n              {{data?.entityCode}}\r\n              </mat-option>\r\n          </mat-select>\r\n          <!-- <input matInput [formControl]=\"branchForm.controls['entityCode']\" [readonly]=\"true\" required > -->\r\n              <mat-error *ngIf=\"branchForm.get('entityCode').hasError('required')\">\r\n                  Entity Code is Required!\r\n              </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['entityCode']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select\r\n              name=\"bankCode\"\r\n              [formControl]=\"branchForm.controls['bankCode']\"\r\n              required\r\n              \r\n            >\r\n              <mat-option *ngFor=\"let bank of bankDetails; trackBy:dataByBank\" [value]=\"bank.bankCode\">\r\n                {{ bank.bankCode }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['bankCode']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Branch Name *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"branchname\" [readonly]=\"readorWrite\" maxlength=\"20\"\r\n              (keypress)=keyPressAlphanumeric($event)\r\n              [formControl]=\"branchForm.controls['branchName']\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"branchcode\" [readonly]=\"readorWrite\" maxlength=\"20\"\r\n              (keypress)=keyPressAlphanumeric($event)\r\n              [formControl]=\"branchForm.controls['branchCode']\"\r\n              required\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Branch Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select\r\n              name=\"branchCcy\"\r\n              [formControl]=\"branchForm.controls['branchCcy']\"\r\n              required\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let currency of currencies; trackBy:dataByCurrency\"\r\n                [value]=\"currency.currencyCode\"\r\n              >\r\n                {{ currency.currencyCode }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"branchForm.get('branchCcy').hasError('required')\">\r\n              Branch Currency is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Branch Currency  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['branchCcy']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>External System Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"externalSystemBranchCode\" [readonly]=\"readorWrite\" maxlength=\"5\"\r\n              (keypress)=keyPressAlphanumeric($event)\r\n              [formControl]=\"branchForm.controls['externalSystemBranchCode']\"\r\n            />\r\n            <mat-error *ngIf=\"branchForm.get('externalSystemBranchCode').hasError('required')\">\r\n              <small>\r\n                External System Branch Code is Required!\r\n              </small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Email Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput\r\n              name=\"emailId\"  [readonly]=\"readorWrite\"\r\n              (keypress)=keyPressEmail($event)\r\n              [formControl]=\"branchForm.controls['emailId']\"\r\n            />\r\n            <mat-error *ngIf=\"branchForm.get('emailId').hasError('required')\">\r\n              <small>\r\n                Email Id is Required!\r\n              </small>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"branchForm.get('emailId').hasError('pattern')\">\r\n              <small>\r\n                Please Enter valid Email id!\r\n              </small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Central Bank Account *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"centralBankAccount\" [readonly]=\"readorWrite\" maxlength=\"20\"\r\n              (keypress)=keyPressAlphanumeric($event)\r\n              [formControl]=\"branchForm.controls['centralBankAccount']\"\r\n            />\r\n            <mat-error *ngIf=\"branchForm.get('centralBankAccount').hasError('required')\">\r\n              <small>\r\n                Central Bank Account is Required!\r\n              </small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Currency Chest Account *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"currencyChestAccount\" [readonly]=\"readorWrite\" maxlength=\"20\"\r\n              (keypress)=keyPressAlphanumeric($event)\r\n              [formControl]=\"branchForm.controls['currencyChestAccount']\"\r\n            />\r\n            <mat-error *ngIf=\"branchForm.get('currencyChestAccount').hasError('required')\">\r\n              <small>\r\n                Currency Chest Account is Required!\r\n              </small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n      <h1>Address</h1>\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Address 1 *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"address1\" [readonly]=\"readorWrite\"\r\n              [formControl]=\"branchForm.controls['address1']\"\r\n              required\r\n              maxlength=\"200\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Address 2 *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"address2\" [readonly]=\"readorWrite\"\r\n              [formControl]=\"branchForm.controls['address2']\"\r\n              required\r\n              maxlength=\"200\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Country *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select\r\n              name=\"country\"\r\n              [formControl]=\"branchForm.controls['country']\"\r\n              (selectionChange)=\"getStateName($event.value)\"\r\n              required\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let country of countries; trackBy:dataByCountry\"\r\n                [value]=\"country\"\r\n              >\r\n                {{ country }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Country *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['country']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>State *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\" >\r\n            <mat-select\r\n              name=\"state\"\r\n              [formControl]=\"branchForm.controls['state']\"\r\n              (selectionChange)=\"getCityName($event.value)\"\r\n              required\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let state of states; trackBy:dataByState\"\r\n                [value]=\"state.stateName\"\r\n              >\r\n                {{ state.stateName }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>State *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['state']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\"  *ngIf=\"!readorWrite\">\r\n          <mat-label>City *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\"> \r\n            <mat-select\r\n              name=\"city\"\r\n              [formControl]=\"branchForm.controls['city']\"\r\n              required\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let city of cities; trackBy:dataByCity\"\r\n                [value]=\"city.value1\"\r\n              >\r\n                {{ city.value1 }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>City *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"branchForm.controls['city']\"\r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Pincode *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput \r\n            name=\"pincode\" \r\n            minlength=\"6\" \r\n            maxlength=\"10\" [readonly]=\"readorWrite\"\r\n            \r\n            (keypress)=\"_keyPress($event)\"\r\n            [formControl]=\"branchForm.controls['pincode']\" \r\n            required\r\n            />\r\n            <!-- <mat-error *ngIf=\"branchForm.get('pincode').touched && branchForm.get('pincode').hasError('required')\">\r\n              <small>Pincode is Required!</small>\r\n            </mat-error>\r\n           \r\n            <mat-error *ngIf=\"!branchForm.get('pincode').valid && !branchForm.get('pincode').hasError('required')\">\r\n              <small>Please Enter Valid Pincode!</small>\r\n            </mat-error> -->\r\n            <mat-error *ngIf=\"branchForm.get('pincode').touched && !branchForm.get('pincode').valid\r\n            && !branchForm.controls['pincode'].hasError('minLength')\">\r\n            Pin code field requires minimum of 6 digits\r\n          </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n    \r\n    \r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n          <div>\r\n            <button *ngIf=\"!isEdit\" mat-raised-button color=\"primary\" [disabled]=\"!(branchForm.valid)\"\r\n              (click)=\"submit(branchForm.value)\">\r\n              Save\r\n            </button>\r\n          </div>\r\n          <div [hidden]=\"readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"submit(branchForm.value)\"\r\n              [disabled]=\"!(branchForm.valid && branchForm.dirty)\">\r\n              Save\r\n            </button>\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord()\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n<!-- </mat-card> -->\r\n\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { JwtAuthService } from 'app/shared/services/auth/jwt-auth.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Card {\r\n  title: string;\r\n  subtitle: string;\r\n  text: string;\r\n  state?: string;\r\n  url: any;\r\n  shortName: string;\r\n}\r\n\r\nconst DATA: Card[] = [\r\n  {\r\n    title: 'Security Policy',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'This covers ordination product details. Product preferances, Intrest Charges and additionalattributes.',\r\n      state: 'securityPolicy',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_GM',\r\n  },\r\n  {\r\n    title: 'General Maintenance',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'This covers ordination product details. Product preferances, Intrest Charges and additionalattributes.',\r\n    // state:\"branch\",\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_GM',\r\n  },\r\n  {\r\n    title: 'Menus Maintenance',\r\n    subtitle: 'Menus add and modify',\r\n    text: 'This is menus maintenance cofiguration',\r\n    state: 'menu-config',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_MM',\r\n  },\r\n  {\r\n    title: 'Role Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers create business process and create process stages.',\r\n    state:'roleMaintenance',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_RM',\r\n  },\r\n  {\r\n    title: 'User Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    state: 'userMaintenance',\r\n    url: 'assets/images/screen.png',\r\n    shortName: 'Maint_UM',\r\n  },\r\n  {\r\n    title: 'Country and State Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configuration and settings of dashboard',\r\n    state: 'countryState',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_CSM',\r\n  },\r\n  {\r\n    title: 'City Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configuration and settings of dashboard',\r\n    state: 'cityMaintenance',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_CM',\r\n  },\r\n  {\r\n    title: 'Entity Maintenance',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'This covers ordination product details, Product preferences, Intrest Charges and additional attributes.',\r\n    state: 'entity/list',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_EM',\r\n  },\r\n  {\r\n    title: 'Bank Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers create business process and create process stages.',\r\n    state: 'bank/list',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_BM',\r\n  },\r\n  {\r\n    title: 'Branch Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    state: 'branch',\r\n    url: 'assets/images/screen.png',\r\n    shortName: 'Maint_BRM',\r\n  },\r\n  {\r\n    title: 'Currency Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    state: 'currencyMaint',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_CM',\r\n  },\r\n  {\r\n    title: 'Charge Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    state: 'chargeMaint',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_CM',\r\n  },\r\n  {\r\n    title: 'Currency Pair Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    state: 'currencyPairMaintenance',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_CPM',\r\n  },\r\n  {\r\n    title: 'Currency Pair Rate Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    state: 'currencyPairRateMaintenance',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_CPRM',\r\n  },\r\n  // {\r\n  //   title: 'State Maintenance',\r\n  //   subtitle: 'Product Details',\r\n  //   text: 'This covers all the configuration and settings of dashboard',\r\n  //   state:\"State\"\r\n  //   },\r\n\r\n  {\r\n    title: 'Holiday Maintenance',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'The Holiday Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'holiday',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_HM',\r\n  },\r\n  {\r\n    title: 'Product Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    state: 'product',\r\n    url: 'assets/images/screen.png',\r\n    shortName: 'Maint_PM',\r\n  },\r\n  {\r\n    title: 'Workflow Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    url: 'assets/images/screen.png',\r\n    shortName: 'Maint_WM',\r\n  },\r\n  {\r\n    title: 'Customer Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_CUM',\r\n  },\r\n  {\r\n    title: 'Account Maintenance',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'This covers ordination product details, Product preferences, Intrest Charges and additional attributes.',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_AM',\r\n  },\r\n  {\r\n    title: 'Biller Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers create business process and create process stages.',\r\n    state: 'billerInfoMaint',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_BIM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    state: 'tillVaultltMaster',\r\n    url: 'assets/images/screen.png',\r\n    shortName: 'Maint_TVM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Branch Mapping Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers all the configurations and settings of dashboard.',\r\n    state: 'tillVaultltBranch',\r\n    url: 'assets/images/Dashboard.png',\r\n    shortName: 'Maint_TVBMM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Configuaration Maintenance',\r\n    subtitle: 'Product Details',\r\n    text:\r\n      'This covers ordination product details, Product preferences, Intrest Charges and additional attributes.',\r\n    state: 'tillVaultConfig',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TVCM',\r\n  },\r\n  {\r\n    title: 'Denomination Maintenance',\r\n    subtitle: 'Product Details',\r\n    text: 'This covers Quantitive and Qualitative score card.',\r\n    state: 'denominationMaster',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_DM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Currency Balance Maintenance',\r\n    subtitle: 'Till Vault Currency Balance Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'tillVaultCcyBal',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TVCBM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Status Maintenance',\r\n    subtitle: 'Till Vault Status Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'tillVaultStatus',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TVSM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Currency Denomination Balance Maintenance',\r\n    subtitle: 'Till Vault Currency Denomination Balance Details',\r\n    text:\r\n      'This Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'tillVaultCcyDenomBal',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_TVCDM',\r\n  },\r\n  {\r\n    title: 'Till/Vault Denomination Maintenance',\r\n    subtitle: 'Till Vault Denomination Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'tillVaultDenom',\r\n    url: 'assets/images/processing.png',\r\n    shortName: 'Maint_TVDM',\r\n  },\r\n  {\r\n    title: 'Transaction Cash Master Maintenance',\r\n    subtitle: 'Transaction Cash Master',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'transactionCashMaster',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TCMM',\r\n  },\r\n  {\r\n    title: 'Transaction Charges Maintenance',\r\n    subtitle: 'Transaction Charges Details',\r\n    text:\r\n      'This Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'transactionCharges',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TCM',\r\n  },\r\n  // {\r\n  //   title: 'Transaction Type',\r\n  //   subtitle: 'Transaction Type Details',\r\n  //   text: 'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n  //   state: 'transactionType'\r\n  // },\r\n  {\r\n    title: 'Account Type Maintenance',\r\n    subtitle: 'Account Type Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'accountType',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_ATM',\r\n  },\r\n  {\r\n    title: 'Base Denomination Maintenance',\r\n    subtitle: 'Base Denomination Maintenance Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'baseDenomination',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_BDM',\r\n  },\r\n  {\r\n    title: 'Customer category Maintenance',\r\n    subtitle: 'Customer category Maintenance Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'customerCategory',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_CCM',\r\n  },\r\n  {\r\n    title: 'Teller Maintenance',\r\n    subtitle: 'Teller Maintenance Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'teller',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_TM',\r\n  },\r\n  {\r\n    title: 'Kiosk Login',\r\n    subtitle: 'koisk Login Details',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'kioskLogin',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_KL',\r\n  },\r\n  {\r\n    title: 'Customer charge category Maintenance',\r\n    subtitle: 'Customer charge category Maintenance',\r\n    text:\r\n      'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.',\r\n    state: 'customerChargeCategory',\r\n    url: 'assets/images/brnchholiday.png',\r\n    shortName: 'Maint_CCCM',\r\n  },\r\n  // {\r\n  //   title: 'Branch Maintenance 22',\r\n  //   subtitle: 'Product Details',\r\n  //   text: 'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.'\r\n  // },\r\n  // {\r\n  //   title: 'Branch Maintenance 23',\r\n  //   subtitle: 'Product Details',\r\n  //   text: 'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.'\r\n  // },\r\n  // {\r\n  //   title: 'Branch Maintenance 24',\r\n  //   subtitle: 'Product Details',\r\n  //   text: 'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.'\r\n  // },\r\n  // {\r\n  //   title: 'Branch Maintenance 25',\r\n  //   subtitle: 'Product Details',\r\n  //   text: 'The Branch Maintenance is the smallest of the six original and distinct spitz breeds of dog from Japan.'\r\n  // }\r\n];\r\n\r\n@Component({\r\n  selector: 'app-main-home',\r\n  templateUrl: './main-home.component.html',\r\n  styleUrls: ['./main-home.component.scss'],\r\n})\r\nexport class MainHomeComponent implements OnInit {\r\n  filteredStatus: string = '';\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  obs: Observable<any>;\r\n  dataSource: MatTableDataSource<Card> = new MatTableDataSource<Card>(DATA);\r\n  maintenanceMenus: any = [];\r\n\r\n  compPermissions: String[] = [];\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private dataService: DataService,\r\n    private jwtService: JwtAuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    document.getElementById('main-content-wrap').style.backgroundColor =\r\n      'white';\r\n    // this.cdr.detectChanges();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.obs = this.dataSource.connect();\r\n\r\n    this.getMainMenus();\r\n\r\n    var user = this.jwtService.getUser();\r\n    if (user) {\r\n      this.apiService\r\n        .fetchTellerProfileInfo(user.id)\r\n        .subscribe((result) => {\r\n          // this.compPermissions = result?.icustRoleInfoModel?.childPermission\r\n          //   .split(',')\r\n          //   .reduce(\r\n          //     (compArr: String[], comp: String) =>\r\n          //       compArr.includes(comp.trim())\r\n          //         ? compArr\r\n          //         : [...compArr, comp.trim()],\r\n          //     []\r\n          //   );\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    document.getElementById('main-content-wrap').style.backgroundColor =\r\n      '#fafafa';\r\n    if (this.dataSource) {\r\n      this.dataSource.disconnect();\r\n    }\r\n  }\r\n\r\n  checkCompPermission() {}\r\n\r\n  navigateToScreen(state: string) {\r\n   \r\n    this.router.navigate([`/maintenance/main/${state}`]);\r\n    // this.dataService.sendMenu(item);\r\n    // this.router.navigate([`/maintenance/main/sub/${item.id}`]);\r\n  }\r\n  alpha() {\r\n    const sortedusers = DATA.sort(function (a, b) {\r\n      var nameA = a.title.toUpperCase();\r\n      var nameB = b.title.toUpperCase();\r\n      if (nameA < nameB) {\r\n        return -1; //nameA comes first\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1; // nameB comes first\r\n      }\r\n      return 0; // names must be equal\r\n    });\r\n   \r\n  }\r\n\r\n  getMainMenus() {\r\n    this.apiService.getMaintenanceMenu().subscribe(\r\n      (data: any) => {\r\n       \r\n        this.maintenanceMenus = data;\r\n        this.cdr.markForCheck();\r\n      },\r\n      (err: any) => {\r\n     \r\n      }\r\n    );\r\n  }\r\n  dataByCard(index,item){\r\n    return item;\r\n  }\r\n}\r\n","<h1 class=\"main-head\">\r\n  <small class=\"small-head\"\r\n    >Home >Maintenance Summary</small\r\n  >\r\n</h1>\r\n<div class=\"content\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button [routerLink]=\"['/others/dashboard']\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <span class=\"text-large\">\r\n      <!-- {{ maintenanceMenus[0].screenName }} -->\r\n      Maintenance Summary\r\n    </span>\r\n    <span fxFlex></span>\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"mt-32\">\r\n    <div class=\"search-box\">\r\n      <input type=\"text\" [(ngModel)]=\"filteredStatus\" placeholder=\"search\" />\r\n    </div>\r\n    <span fxFlex></span>\r\n    <button mat-flat-button [matMenuTriggerFor]=\"menu\">\r\n      Sort by:Relevance <mat-icon>expand_more </mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <!--<button mat-menu-item>\r\n               <mat-icon>arrow_drop_down</mat-icon>\r\n               <span>Sort by ASC/DSC</span>\r\n             </button>-->\r\n      <button mat-menu-item>\r\n        <mat-icon>sort_by_alpha</mat-icon>\r\n        <span (click)=\"alpha()\">Sort by Alpha</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div fxLayout=\"row wrap\" class=\"mt-32\">\r\n     <div fxFlex=\"50\" *ngFor=\"let menu of maintenanceMenus\">\r\n        <mat-card (click)=\"navigateToScreen(menu)\">\r\n            <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-around center\">\r\n                <div fxFlex=\"65\">\r\n                    <mat-card-content>\r\n                        <h2 class=\"\">{{ menu.screenName }}  ({{ menu.sub ? (menu.sub.length) : 0 }})</h2>\r\n                        <span class=\"card-text-label\">{{ 'This covers ordination product details. Product preferances, Intrest Charges and additionalattributes.' }}</span>\r\n                      </mat-card-content>\r\n                </div>\r\n                <div fxFlex=\"30\" style=\"text-align: right;\">\r\n                    <img class=\"image\" width=\"100\" height=\"100\" src=\"assets/images/funding.png\" alt=\"photo\">\r\n                </div>\r\n            </div>\r\n          </mat-card>\r\n     </div>\r\n  </div> -->\r\n\r\n<div fxLayout=\"row wrap\" class=\"mt-32\">\r\n  <!--<div fxFlex=\"50\" *ngFor=\"let card of obs | async | filter: filteredStatus: 'title'\">-->\r\n  <ng-container *ngFor=\"let card of obs | async | filter: filteredStatus; trackBy:dataByCard\">\r\n    <!-- <div fxFlex=\"50\" *ngIf=\"compPermissions.includes(card.shortName)\"> -->\r\n      <div fxFlex=\"50\" >\r\n      <mat-card (click)=\"navigateToScreen(card.state)\">\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"5px\"\r\n          fxLayoutAlign=\"space-around center\"\r\n        >\r\n          <div fxFlex=\"65\">\r\n            <mat-card-content>\r\n              <h2 class=\"title\">{{ card.title }}</h2>\r\n              <span class=\"card-text-label\">{{ card.text }}</span>\r\n            </mat-card-content>\r\n          </div>\r\n          <div fxFlex=\"30\" style=\"text-align: right\">\r\n            <img\r\n              class=\"image\"\r\n              width=\"100\"\r\n              height=\"100\"\r\n              [src]=\"card.url\"\r\n              alt=\"photo\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialogRef, MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\n\r\n@Component({\r\n  selector: \"app-account-type-crud-table\",\r\n  templateUrl: \"./account-type-crud-table.component.html\",\r\n  styleUrls: [\"./account-type-crud-table.component.scss\"],\r\n  animations: rumangoAnimations\r\n})\r\nexport class AccountTypeCrudTableComponent implements OnInit, OnDestroy {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = [ 'accountTypeName', 'accountTypeDescription', 'authStatus','recordStatus','action'];\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"accountTypeName\", value: \"Account Type Name\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource = new MatTableDataSource();\r\n\r\n  accountTypeName:string[]=[];\r\n  public items: string[];\r\n  public getItemSub: Subscription;\r\n  loading: boolean;\r\n  currentUser: string;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private dataService: DataService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.loading = true;\r\n    //this.items = transactionType;\r\n    this.getItemSub = this.apiService\r\n      .fetchAccountTypeInfo()\r\n      .subscribe((data) => {\r\n        this.items = data;\r\n        console.log(data);\r\n        \r\n        for(let i=0;i<data.length;i++){\r\n\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n\r\n        }\r\n        this.dataSource = new MatTableDataSource(data);\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.items = data;\r\n        this.dataSource.sort = this.sort;\r\n      this.loading = false;\r\n      });\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'accountType');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getItems();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n  accountTypeMaintenance(){\r\n    this.downloadService.downloadFiles(\"accountTypeMaintenance\",this.items);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.accountTypeName}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService\r\n            .deleteAccountType(row.accountTypeId)\r\n            .subscribe((res: any) => {\r\n              if (res.status == 200) {\r\n              this.loader.close();\r\n                this.getItems();\r\n                this.snack.open('Record deleted!', 'OK', { duration: 4000 })\r\n            } (err: any) => {\r\n            }\r\n            })\r\n        }\r\n      });\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n \r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n \r\n\r\n  openPopUp(row) {\r\n    \r\n    \r\n    this.router.navigate([`/maintenance/main/accountType/${row.accountTypeId}`],{ queryParams: { id: row.accountTypeId, isEdit : true } });\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/accountType/add\"]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  dataByFilter(index, item){\r\n    return item.key;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Account Type Maintenance </small>\r\n</h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Account Type Maintenance\r\n  </span>\r\n  </div>\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Account Types\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"accountTypeMaintenance()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n\r\n  \r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-18 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\"  fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption; trackBy: dataByFilter\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" routerLink=\"/maintenance/main/bank/add\" >ADD NEW\r\n         </button>\r\n       </div>\r\n      \r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n    <!-- <ngx-datatable class=\"material ml-0 mr-0\" [rows]=\"items\" [columnMode]=\"'force'\" [headerHeight]=\"50\"\r\n      [footerHeight]=\"50\" [scrollbarH]=\"true\" [limit]=\"6\" [rowHeight]=\"50\"> -->\r\n      <ng-container matColumnDef=\"accountTypeName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Name \"> Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.accountTypeName }} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"accountTypeDescription\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Description \"> Description\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.accountTypeDescription }}</mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.authStatus }} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.recordStatus }} </mat-cell>\r\n      </ng-container>\r\n      <!-- <ng-container matColumnDef=\"status\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by status\"> Status         \r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">  <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"element.isActive\">{{element.isActive ? 'active' : 'inactive'}}\r\n        </mat-chip> </mat-cell>\r\n      </ng-container> -->\r\n      <!-- <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element)\" >edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container> -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"openPopUp(element)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.authStatus == 'Authorized'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n  <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n</div>\r\n\r\n</mat-card>\r\n\r\n      <!-- <ngx-datatable-column name=\"Name\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.accountTypeName }}\r\n        </ng-template>\r\n      </ngx-datatable-column> -->\r\n      <!-- <ngx-datatable-column name=\"Description\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.accountTypeDescription }}\r\n        </ng-template>\r\n      </ngx-datatable-column> -->\r\n      <!-- <ngx-datatable-column name=\"Auth Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.authStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column> -->\r\n      <!-- <ngx-datatable-column name=\"Record Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.recordStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column> -->\r\n      <!-- <ngx-datatable-column name=\"Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"row.isActive\">{{row.isActive ? 'active' : 'inactive'}}\r\n          </mat-chip>\r\n        </ng-template>\r\n      </ngx-datatable-column> -->\r\n      <!-- <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(row)\">\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button mat-sm-button color=\"warn\" [disabled]=\"row.oneTimeAuth =='Y'\"\r\n            (click)=\"deleteItem(row)\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </ng-template>\r\n      </ngx-datatable-column> \r\n      \r\n    </ngx-datatable>-->\r\n    <!-- </mat-table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n     <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> \r\n  </mat-card-content>\r\n</mat-card> -->","import { ChangeDetectorRef, Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Data, Router } from '@angular/router';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { SendHolidayScreenService } from 'app/shared/services/send-holiday-screen.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-holiday',\r\n  templateUrl: './add-holiday.component.html',\r\n  styleUrls: ['./add-holiday.component.scss']\r\n})\r\nexport class AddHolidayComponent implements OnInit {\r\n  addBranchHoliday: FormGroup;\r\n  icBranchHolidayModel: any[] = [];\r\n\r\n\r\n  yearArr: any[] = [2025, 2024, 2023, 2022, 2021, 2020];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  entityCode: string[] = [];\r\n  addBranchHolidayFormData: { data: any; holidayModel:any; action:any};\r\n\r\n  dateList: any[];\r\n  disableSave:boolean=false;\r\n  isEdit: boolean=false;\r\n  id: any;\r\n  holidayModelResp: any;\r\n  screen: string;\r\n  auditLogData: any;\r\n  readorWrite: boolean=true;\r\n  loggedInUser: any;\r\n\r\n  constructor(\r\n    private _location: Location,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private cdr: ChangeDetectorRef,\r\n    private formBuilder: FormBuilder,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,private route : ActivatedRoute,\r\n    private apiService: ApiService,\r\n    private dataService:DataService,\r\n    private screenService: SendHolidayScreenService,\r\n    private ls: LocalStoreService\r\n  ) {\r\n    this.screenService.holidayScr.subscribe(res=>{\r\n      console.log(res);\r\n      this.screen=res;\r\n      this.cdr.checkNoChanges();\r\n      this.cdr.markForCheck();\r\n      console.log(this.screen);\r\n     });\r\n    console.log(\"screen name\",this.screen);\r\n    this.disableSave=false;\r\n   this.buildItemForm({});\r\n  \r\n  }\r\n  buildItemForm(item) {\r\n    this.addBranchHoliday = this.formBuilder.group({\r\n      bankCode: [item.bankCode || '', [Validators.required]],\r\n      branchCode: [item.branchCode || ''],\r\n      currencyCode: [item.currencyCode || ''],\r\n      calenderYear: [item.calenderYear || '', [Validators.required]],\r\n      entityCode: [item.entityCode || '', [Validators.required]],\r\n      description: [item.description || ''],\r\n      holidayType: [item.holidayType || '']\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"screen name\",this.screen);\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    this.loadData();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        if(this.screen===\"Branch\"){\r\n        this.apiService.editeditBranchHoliday(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n           if(resp.entityCode!=null){\r\n            this.getBankCode(resp.entityCode);\r\n          }\r\n           this.dateList.push(resp.calenderDate)\r\n           console.log(resp)\r\n           this.auditLogData=resp;\r\n           this.dataService.setAuditLogData(this.auditLogData);\r\n           this.dataService.sendClickEvent();\r\n           this.holidayModelResp=resp;\r\n           this.assignFormValue('','UPDATE');\r\n        });\r\n      }else if(this.screen===\"Currency\"){\r\n        this.apiService.editCurrencyHoliday(params.get('id')).subscribe((resp)=>{\r\n          this.buildItemForm(resp);\r\n          this.entityName=resp.entityCode;\r\n          if(resp.entityCode!=null){\r\n            this.getBankCode(resp.entityCode);\r\n          }\r\n          if(resp.entityCode!=null && resp.bankCode!=null){\r\n            this.getBranchCode(resp.bankCode)\r\n          }\r\n          this.auditLogData=resp;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          this.holidayModelResp=resp;\r\n          this.assignFormValue('','UPDATE');\r\n        })\r\n      }\r\n    }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );\r\n  }\r\n\r\n  commonHoliday(){\r\n    if(this.screen==='branch'){\r\n      this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/commonHoliday\"]);\r\n    }else \r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/commonHoliday\"]);\r\n  }\r\n  addBranch(){\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addBranch\"]);\r\n    \r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteCurrencyHoliday(this.auditLogData.id)\r\n        .subscribe(data => {\r\n          if(this.screen===\"Branch\"){\r\n            this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"]);\r\n          }\r\n          else if(this.screen===\"Currency\"){\r\n            this.router.navigate([\"/maintenance/main/holiday/currencyholiday\"]);\r\n          }\r\n          \r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          if(this.screen===\"Branch\"){\r\n            this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"]);\r\n          }\r\n          else if(this.screen===\"Currency\"){\r\n            this.router.navigate([\"/maintenance/main/holiday/currencyholiday\"]);\r\n          }\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  resetFormSubject: Subject<boolean> = new Subject<boolean>();\r\n\r\n\r\n  loadData() {\r\n    // this.getBankCode();\r\n    if(this.screen===\"Currency\"){\r\n      this.getCurrencyCode();\r\n    }\r\n    this.getEnityCode();\r\n  }\r\n  goBack() {\r\n    this._location.back();\r\n  }\r\n  keyPress1(event: any) {\r\n    const pattern = /[a-zA-Z0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  assignFormValue(event,action) {   \r\n    if(action === 'UPDATE'){\r\n      console.log(this.addBranchHoliday);\r\n\r\n      if(this.screen===\"Branch\"){\r\n        var params1 = new HttpParams().append('bankCode', this.addBranchHoliday.value.bankCode)\r\n      .append('branchCode', this.addBranchHoliday.value.branchCode)\r\n      .append('calenderYear', this.addBranchHoliday.value.calenderYear)\r\n      .append('entityCode', this.addBranchHoliday.value.entityCode);\r\n      console.log(\"param\", params1);\r\n      this.apiService.findByCalenderYearAndEntityCodeAndBankCodeAndBranchCode(params1)\r\n      .subscribe(holidayModel=>{\r\n        this.addBranchHolidayFormData = {\r\n          'data': this.addBranchHoliday.value,\r\n          'holidayModel':holidayModel,\r\n          'action':action\r\n        }\r\n      })\r\n      }\r\n      else if(this.screen===\"Currency\"){\r\n        var params1 = new HttpParams().append('bankCode', this.addBranchHoliday.value.bankCode)\r\n        .append('currencyCode', this.addBranchHoliday.value.currencyCode)\r\n        .append('calenderYear', this.addBranchHoliday.value.calenderYear)\r\n        .append('entityCode', this.addBranchHoliday.value.entityCode);\r\n        console.log(\"param\", params1);\r\n        this.apiService.findByCalenderYearAndEntityCodeAndBankCodeAndCurrencyCode(params1)\r\n      .subscribe(holidayModel=>{\r\n        this.addBranchHolidayFormData={\r\n          'data': this.addBranchHoliday.value,\r\n          'holidayModel': holidayModel,\r\n          'action': action\r\n        }\r\n      })\r\n\r\n      }\r\n\r\n     \r\n    }else{\r\n      this.addBranchHolidayFormData = {\r\n        'data': this.addBranchHoliday.value,\r\n        'holidayModel':'',\r\n        'action':action\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  public doSomething(dateList: any[]): void {\r\n\r\n    this.dateList = [];\r\n    this.dateList = dateList;\r\n\r\n  }\r\n  resetChildForm() {\r\n    this.resetFormSubject.next(true);\r\n  }\r\n\r\n  saveHoliday(addBranchHoliday) {\r\n    console.log(\"add branch holiday\", addBranchHoliday)\r\n    this.isEdit=false;\r\n    let details: any[] = [];\r\n\r\n    this.dateList.forEach((v, k) => {\r\n      console.log(\"date\", v)\r\n      if(this.screen===\"Branch\"){\r\n        let payload = {\r\n          entityCode: addBranchHoliday.entityCode,\r\n          bankCode: addBranchHoliday.bankCode,\r\n          branchCode: addBranchHoliday.branchCode,\r\n          calenderYear: addBranchHoliday.calenderYear,\r\n          description:  addBranchHoliday.description,\r\n          holidayType: this.ls.getItem('holidayType'),\r\n          calenderDate: v,\r\n          id:this.auditLogData?.id,\r\n          createdBy: this.loggedInUser\r\n        }\r\n        details.push(payload);\r\n      }else if(this.screen===\"Currency\"){\r\n        let payload = {\r\n          entityCode: addBranchHoliday.entityCode,\r\n          bankCode: addBranchHoliday.bankCode,\r\n          currencyCode: addBranchHoliday.currencyCode,\r\n          calenderYear: addBranchHoliday.calenderYear,\r\n          description:  addBranchHoliday.description,\r\n          holidayType:  this.ls.getItem('holidayType'),\r\n          calenderDate: v,\r\n          id:this.auditLogData?.id,\r\n          createdBy: this.loggedInUser\r\n        }\r\n        details.push(payload);\r\n      }\r\n      \r\n    });\r\n    if(this.screen===\"Branch\"){\r\n      this.apiService.updateBranchHolidayDetails(details,this.isEdit)\r\n    .subscribe(data => {\r\n      if (data != null) {\r\n        this.disableSave=true;\r\n        this.snack.open('Data Saved' + ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this._location.back();\r\n        this.cdr.markForCheck();\r\n      }\r\n\r\n    },error=>{\r\n      this.disableSave=true;\r\n      this.snack.open(`${error.error}` + ' !', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right',\r\n        panelClass: 'snackbar-error'\r\n      });\r\n    \r\n    });\r\n    }else if(this.screen===\"Currency\"){\r\n\r\n      this.apiService.upsertCurrencyHolidayDetails(details)\r\n    .subscribe(data => {\r\n      if (data != null) {\r\n        this.disableSave=true;\r\n        this.snack.open('Data Saved' + ' !', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this._location.back();\r\n        this.cdr.markForCheck();\r\n      }\r\n\r\n    },error=>{\r\n      this.disableSave=true;\r\n      this.snack.open(`${error.error}` + ' !', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right',\r\n        panelClass: 'snackbar-error'\r\n      });\r\n    \r\n    });\r\n\r\n    }\r\n    \r\n\r\n    \r\n\r\n  }\r\n  updateRecord(operation) {\r\n    console.log(\"operations\")\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        if(this.screen===\"Branch\"){\r\n          this.apiService.getAuditLogsForHolidayBranch(payload).subscribe((data) => {\r\n            this.auditLogData = data;\r\n            this.dataService.setAuditLogData(this.auditLogData);\r\n            this.dataService.sendClickEvent();\r\n            let message = '';\r\n            switch (operation) {\r\n              case 'open':\r\n                message = 'opened'\r\n                break;\r\n              case 'close':\r\n                message = 'closed'\r\n                break;\r\n              case 'auth':\r\n                message = 'authorized'\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }\r\n        else if(this.screen===\"Currency\"){\r\n          this.apiService.getAuditLogsForCurrencyBranch(payload).subscribe((data) => {\r\n            this.auditLogData = data;\r\n            this.dataService.setAuditLogData(this.auditLogData);\r\n            this.dataService.sendClickEvent();\r\n            let message = '';\r\n            switch (operation) {\r\n              case 'open':\r\n                message = 'opened'\r\n                break;\r\n              case 'close':\r\n                message = 'closed'\r\n                break;\r\n              case 'auth':\r\n                message = 'authorized'\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }else{\r\n          \r\n        }\r\n       \r\n      }\r\n    }))\r\n    \r\n  }\r\n  // getBranchCode() {\r\n  //   this.apiService.getBranchCode().subscribe(branchCodeResp => {\r\n  //     console.log(branchCodeResp);\r\n  //     for(let i=0; i<branchCodeResp.length;i++){\r\n  //       if(branchCodeResp[i].authStatus==='A'){\r\n  //         this.branchCode.push(branchCodeResp[i].branchCode);\r\n  //       }\r\n  //     }\r\n  //     console.log(this.branchCode);\r\n  //     // this.branchCode = branchCodeResp;\r\n  //   });\r\n  // }\r\n  getBranchCode(bankCode:any) {\r\n    this.branchCode=[];\r\n     this.apiService.getBranchCode1(this.entityName,bankCode).subscribe((data) => {\r\n       for(let i=0;i<data.length;i++){\r\n                 if (data[i].authStatus=='A') {\r\n                   this.branchCode.push(data[i].branchCode)\r\n                 }\r\n               }\r\n               console.log(this.branchCode);  \r\n                \r\n     });\r\n   }\r\n  entityName(entityName: any, bankCode: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getCurrencyCode(){\r\n    this.apiService.fetchCurrencyMaintDetails().subscribe(currencyResp =>{\r\n      console.log(currencyResp);\r\n      \r\n      for(let i=0; i<currencyResp.length;i++){\r\n        if(currencyResp[i]){\r\n\r\n        if(currencyResp[i].authStatus==='A'){\r\n          this.branchCode.push(currencyResp[i].currencyCode);\r\n        }\r\n      }\r\n    }\r\n    })\r\n  }\r\n\r\n  trackByFnBranchCode(index, item) {\r\n    return index; \r\n  }\r\n\r\n  trackByFnYearArr(index, item) {\r\n    return index; \r\n  }\r\n\r\n  trackByFnEntityCode(index, item) {\r\n    return index; \r\n  }\r\n\r\n  trackByFnBankCode(index, item) {\r\n    return index; \r\n  }\r\n\r\n  getBankCode(entityCode:any) {\r\n    this.entityName=entityCode;\r\n    this.bankCode=[];\r\n    this.apiService.getBankInfoByEntityCode(entityCode).subscribe(bankCodeResp => {\r\n      console.log(bankCodeResp);\r\n      for(let i=0; i<bankCodeResp.length;i++){\r\n        if(bankCodeResp[i].authStatus==='A'){\r\n          this.bankCode.push(bankCodeResp[i]);\r\n        }\r\n      }\r\n      console.log(this.bankCode);\r\n      // this.bankCode = bankCodeResp;\r\n    });\r\n  }\r\n\r\n  getEnityCode() {\r\n    this.apiService.fetchEntityDetails().subscribe(entityCodeResp => {\r\n      console.log(entityCodeResp);\r\n      for(let i=0; i<entityCodeResp.length;i++){\r\n        if(entityCodeResp[i].authStatus==='A'){\r\n          this.entityCode.push(entityCodeResp[i]);\r\n        }\r\n      }\r\n      console.log(this.entityCode);\r\n      // this.entityCode = entityCodeResp;\r\n    });\r\n  }\r\n  addNew(screen) {\r\n    console.log(screen)\r\n    if(screen==='Currency'){\r\n      this.router.navigate([\"/maintenance/main/holiday/currencyholiday\"]);\r\n    }else\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday\"]);\r\n  }\r\n  dataByYear(index,year){\r\n    return year;\r\n  }\r\n  dataByEntity(index,entityC){\r\n    return entityC.entityCode;\r\n  }\r\n  dataByBank(index,bankC){\r\n    return bankC.bankCode;\r\n  }\r\n  dataByBranch(index,branch){\r\n    return branch.branchCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary >\r\n    Holiday Maintenance > {{screen}} Maintenance</small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    {{screen}} Maintenance\r\n  </span>\r\n\r\n  <span fxFlex></span>\r\n  <mat-button-toggle-group value=\"calendar\" appearance=\"legacy\" name=\"fontStyle\" aria-label=\"Font Style\">\r\n    <mat-button-toggle (click)=\"addNew(screen)\" value=\"table\"><span>TABLE</span></mat-button-toggle>\r\n    <mat-button-toggle value=\"calendar\"><span>CALENDAR</span></mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n\r\n</div>\r\n<form [formGroup]=\"addBranchHoliday\" ngNativeValidate>\r\n\r\n  <mat-card class=\"mt-32\">\r\n    <mat-card-content>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n\r\n        <span class=\"text-large\">\r\n          {{screen}} Maintenance\r\n        </span>\r\n        <span fxFlex></span>\r\n        <!-- <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n          <mat-icon>more_vert</mat-icon>\r\n        </button> -->\r\n        <!-- <mat-menu #menu=\"matMenu\">\r\n          <button mat-menu-item>\r\n            <span>Export</span>\r\n          </button>\r\n          <button mat-menu-item>\r\n            <span>Download</span>\r\n          </button>\r\n        </mat-menu> -->\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div class=\"pr-16\" fxFlex=\"20%\" *ngIf=\"!readorWrite\">\r\n          <mat-hint>year</mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <mat-select *ngIf=\"!readorWrite\" formControlName=\"calenderYear\" (selectionChange)=\"assignFormValue($event,'')\" required>\r\n              <mat-option *ngFor=\"let year of yearArr; trackBy:dataByYear\" [value]=\"year\">\r\n\r\n                {{year}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addBranchHoliday.get('calenderYear').hasError('required')\">\r\n              Year is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n        <div class=\"pr-16\" fxFlex=\"20%\" *ngIf=\"readorWrite\">\r\n          <mat-hint>year</mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n         <input matInput formControlName=\"calenderYear\" />\r\n          </mat-form-field>\r\n\r\n        </div>\r\n       <!-- <div>\r\n          <button mat-flat-button color=\"primary\"  class=\"mr-38\" style=\"height: 45px;\" >ADD NEW\r\n              <button mat-icon-button>\r\n                <mat-icon [matMenuTriggerFor]=\"accountMenu\"\r\n                  >keyboard_arrow_down</mat-icon>\r\n              <mat-menu #accountMenu=\"matMenu\" style=\"width: 50ox;\" >\r\n                <mat-nav-list *ngIf=\"screen==='Branch'\" role=\"list\" class=\"notification-list\" >\r\n                  <mat-list-item\r\n                  role=\"listitem\"\r\n                  class=\"notific-item\">\r\n                  <div (click)=\"commonHoliday()\">\r\n                    <small>\r\n                     Common Holiday\r\n                   </small>\r\n                  </div>\r\n                  </mat-list-item>\r\n                  <mat-list-item\r\n                  role=\"listitem\"\r\n                  class=\"notific-item\">\r\n                  <div (click)=\"addBranch()\">\r\n                    <small >\r\n                      Branch Specific Holiday\r\n                    </small>\r\n                  </div>\r\n      \r\n                  </mat-list-item>\r\n                  <!-- <mat-list-item\r\n                  role=\"listitem\"\r\n                  class=\"notific-item\">\r\n                  <div (click)=\"addBranch()\">\r\n                    <small >\r\n                       Currency Specific Holiday\r\n                    </small>\r\n                  </div>\r\n      \r\n                  </mat-list-item> \r\n      \r\n                </mat-nav-list>\r\n                <mat-nav-list *ngIf=\"screen!='Branch'\" role=\"list\" class=\"notification-list\" >\r\n                  <mat-list-item\r\n                  role=\"listitem\"\r\n                  class=\"notific-item\">\r\n                  <div (click)=\"commonHoliday()\">\r\n                    <small>\r\n                     Common Holiday\r\n                   </small>\r\n                  </div>\r\n                  </mat-list-item>\r\n                   <mat-list-item\r\n                  role=\"listitem\"\r\n                  class=\"notific-item\">\r\n                  <div (click)=\"addBranch()\">\r\n                    <small >\r\n                       Currency Specific Holiday\r\n                    </small>\r\n                  </div>\r\n      \r\n                  </mat-list-item> \r\n      \r\n                </mat-nav-list>\r\n              </mat-menu>\r\n              </button>\r\n              </button>\r\n        </div>-->\r\n      </div>\r\n      <div>\r\n\r\n\r\n      </div>\r\n    </mat-card-content>\r\n\r\n    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n      <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>Entity Code * </mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select formControlName=\"entityCode\" placeholder=\"select entityCode\" (selectionChange)=\"getBankCode($event.value)\" required>\r\n\r\n              <mat-option *ngFor=\"let entityC of entityCode; trackBy:dataByEntity\" [value]=\"entityC.entityCode\">\r\n\r\n                {{entityC.entityCode}} </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addBranchHoliday.get('entityCode').hasError('required')\">\r\n              Entity Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n      <div  fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>Entity Code*</mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n         <input matInput formControlName=\"entityCode\" />\r\n          </mat-form-field>\r\n\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>Bank Code * </mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select formControlName=\"bankCode\" placeholder=\"select bankCode\" (selectionChange)=\"getBranchCode($event.value)\">\r\n\r\n              <mat-option *ngFor=\"let bankC of bankCode; trackBy:dataByBank\" [value]=\"bankC.bankCode\"> {{bankC.bankCode}}\r\n\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addBranchHoliday.get('bankCode').hasError('required')\">\r\n              Bank Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <div  fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>Bank Code*</mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n         <input matInput formControlName=\"bankCode\" />\r\n          </mat-form-field>\r\n\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"33.33\" *ngIf=\"screen==='Branch' && !readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>{{screen}} Code * </mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select formControlName=\"branchCode\" placeholder=\"select {{screen}}\">\r\n\r\n              <mat-option *ngFor=\"let branch of branchCode; trackBy:dataByBranch\" [value]=\"branch\">\r\n\r\n                {{branch}} </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addBranchHoliday.get('branchCode').hasError('required')\">\r\n              {{screen}} is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n      <div fxFlex=\"33.33\" *ngIf=\"screen==='Branch' && readorWrite\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>{{screen}} Code * </mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput formControlName=\"branchCode\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div fxFlex=\"33.33\"  *ngIf=\"screen==='Currency'\">\r\n        <div class=\"pb-1\">\r\n          <mat-hint>{{screen}} Code * </mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select formControlName=\"currencyCode\" placeholder=\"select {{screen}}\">\r\n\r\n              <mat-option *ngFor=\"let branch of branchCode; trackBy:dataByBranch\" [value]=\"branch\">\r\n\r\n                {{branch}} </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addBranchHoliday.get('branchCode').hasError('required')\">\r\n              {{screen}} is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- <div class=\"pb-1\"  fxFlex=\"20%\" *ngIf=\"readorWrite\">\r\n          <mat-hint>{{screen}} Code*</mat-hint>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n         <input matInput formControlName=\"currencyCode\" />\r\n          </mat-form-field>\r\n\r\n        </div> -->\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n    <div [hidden]=\"addBranchHoliday.invalid\" >\r\n      <app-custom-calendar-arr-type  [addBranchHolidayFormData]=\"addBranchHolidayFormData\" (onDatePicked)=\"doSomething($event)\"></app-custom-calendar-arr-type>\r\n\r\n    </div>\r\n    <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n      <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n        <button \r\n          color=\"primary\" *ngIf=\"!isEdit\"\r\n          [disabled]= \"addBranchHoliday.invalid || disableSave\"\r\n          mat-raised-button \r\n          (click)=\"saveHoliday(addBranchHoliday.value)\"\r\n        >\r\n          Save\r\n        </button>\r\n        <div [hidden]=\"readorWrite\" >\r\n          <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(addBranchHoliday.invalid || addBranchHoliday.dirty) || disableSave\" (click)=\"saveHoliday(addBranchHoliday.value)\">\r\n             Save\r\n            </button>&nbsp;&nbsp;\r\n        </div>\r\n        \r\n        \r\n        <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n          <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n            Edit\r\n          </button>&nbsp;&nbsp;\r\n        </div>\r\n        <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n          <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n            Authorize\r\n          </button>&nbsp;&nbsp;\r\n        </div> \r\n        <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n          <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n            Reopen\r\n          </button>&nbsp;&nbsp;\r\n        </div>\r\n        <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n          <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n            Close\r\n          </button>&nbsp;&nbsp;\r\n        </div>\r\n        <!-- <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n          <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n            Delete\r\n          </button> &nbsp;&nbsp;\r\n        </div> -->\r\n       \r\n        <button\r\n          mat-raised-button\r\n          color=\"warn\"\r\n          type=\"button\"\r\n          (click)=\"goBack()\"\r\n        >\r\n          Exit\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  </mat-card>\r\n\r\n</form>\r\n\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\n@Component({\r\n  selector: \"app-customer-category\",\r\n  templateUrl: \"./customer-category.component.html\",\r\n  styleUrls: [\"./customer-category.component.scss\"],\r\n})\r\nexport class CustomerCategoryComponent implements OnInit {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = [\r\n    \"categoryCode\",\r\n    \"categoryName\",\r\n    \"categoryDescription\",\r\n    \"oneTimeAuth\",\r\n    \"authStatus\",\r\n    \"recordStatus\",\r\n    \"action\",\r\n  ];\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"categoryCode\", value: \"Category Code\" },\r\n    { key: \"categoryName\", value: \"Category Name\" },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public users: any[];\r\n  public items: any[];\r\n  entity: any;\r\n  bankCode: any;\r\n  cutomerCategoryMasterValues: any;\r\n  public getItemSub: Subscription;\r\n  fetchcutomerCategory: any;\r\n  id: any;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private ls: LocalStoreService,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getEntityCode();\r\n    this.getBankCode();\r\n    this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  addNew() {\r\n    this.router.navigate([`/maintenance/main/customerCreateCategory`]);\r\n  }\r\n\r\n  trackByFnFilterByOption(index, item) {\r\n    return index;\r\n  }\r\n  onFileChange(event) {\r\n    console.log(\"event\", event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"screenType\", \"cutomerCategoryltMaster\");\r\n    uploadData.append(\"file\", file);\r\n    this.api.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getItems();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    this.api.getCustomerCategory().subscribe((resp: any) => {\r\n      if (resp) {\r\n        console.log(resp);\r\n        for (let i = 0; i < resp.length; i++) {\r\n          if (resp[i].authStatus == \"U\") {\r\n            resp[i].authStatus = \"Unauthorized\";\r\n          }\r\n          if (resp[i].authStatus == \"A\") {\r\n            resp[i].authStatus = \"Authorized\";\r\n          }\r\n          if (resp[i].recordStatus == \"O\") {\r\n            resp[i].recordStatus = \"Open\";\r\n          }\r\n          if (resp[i].recordStatus == \"C\") {\r\n            resp[i].recordStatus = \"Closed\";\r\n          }\r\n        }\r\n        this.cutomerCategoryMasterValues = resp;\r\n        this.items = this.cutomerCategoryMasterValues;\r\n        this.dataSource = new MatTableDataSource(resp);\r\n        this.users = resp;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.api.getBankCode().subscribe((bnkCode: any) => {\r\n      this.bankCode = bnkCode;\r\n    });\r\n  }\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n      this.entity = resp;\r\n    });\r\n  }\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy]?.toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n  openPopUp(data: any = {}, isEdit: string) {\r\n    this.router.navigate([\"/maintenance/main/customerCreateCategory\"], {\r\n      queryParams: { id: data.id, isEdit: isEdit },\r\n    });\r\n  }\r\n\r\n  masterpdf() {\r\n    this.downloadService.downloadFiles(\r\n      \"cutomerCategoryMaintenance\",\r\n      this.users\r\n    );\r\n  }\r\n\r\n  fetchcutomerCategoryById() {\r\n    this.api.getCustomerCategoryById(this.id).subscribe((resp) => {\r\n      this.fetchcutomerCategory = resp;\r\n    });\r\n    this.dataService.sendNavParam(this.fetchcutomerCategory);\r\n    this.router.navigate([\r\n      `/maintenance/main/cutomerCategoryltMaster/add/${this.id}`,\r\n    ]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/`]);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.categoryName}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.api.deleteCustomerCategory(row.id).subscribe(\r\n            (res: any) => {},\r\n            (err: any) => {\r\n              (\"\");\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open(\"Member deleted!\", \"OK\", { duration: 4000 });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Customer Category Maintenance </small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Customer Category Maintenance\r\n  </span>\r\n</div>\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Customer Category Maintenance\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\" (change)=\"onFileChange($event)\" />\r\n      </div>\r\n      <button (click)=\"masterpdf()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n            <mat-option value=\"0\">Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy: trackByFnFilterByOption\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n        <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\">ADD NEW\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n      <ng-container matColumnDef=\"categoryCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Category Code\"> Category Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.categoryCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"categoryName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Category Name\"> Category Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.categoryName}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"categoryDescription\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header\r\n          sortActionDescription=\"Sort by Cutomer Category Description\">Category Description\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.categoryDescription}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"oneTimeAuth\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\">edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n          </div>\r\n        </mat-cell>\r\n      </ng-container> -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"openPopUp(element,'Yes')\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.authStatus == 'Authorized'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5,10,15]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</mat-card>","import { Component, Inject, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-bank-details',\r\n  templateUrl: './bank-details.component.html',\r\n  styleUrls: ['./bank-details.component.scss']\r\n})\r\nexport class BankDetailsComponent implements OnInit {\r\n  public bankForm: FormGroup;\r\n  currencies:string[] = [];\r\n  countries: any = [];\r\n  states: any = [];\r\n  cities: any = [];\r\n  bankItem: any = {};\r\n  currentUser: any;\r\n  entityCodeArr: any = [];\r\n  isAllSameDigitVal: boolean = false;\r\n  loggedInUser : string;\r\n  auditLogData : any;\r\n  id : number;\r\n\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean = true;\r\n\r\n  @ViewChild('auditLog') auditLog: AuditLogComponent\r\n  entityData: any;\r\n\r\n\r\n  constructor(private apiService: ApiService,\r\n    private fb: FormBuilder,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.dataService.getBankItem.subscribe(data =>{\r\n    this.bankItem = typeof this.bankItem === 'object' ? data : {};\r\n    this.id = this.bankItem.id;\r\n    if(this.id){\r\n      this.isEdit = true;\r\n    }\r\n    else{\r\n      this.isEdit = false;\r\n      this.readorWrite=false;\r\n    }\r\n    if( this.bankItem.authStatus==\"Unauthorized\" ){\r\n      this.bankItem.authDate =\"\"\r\n      this.bankItem.authBy=\"\"\r\n    }\r\n    console.log(\"this.bankItemt\",this.bankItem)\r\n    this.auditLogData = this.bankItem;\r\n    this.dataService.setAuditLogData(this.auditLogData);\r\n    });\r\n\r\n    this.getBranchCurrency();\r\n    this.getCountryName('country');\r\n    this.getEntityDropdown();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n\r\n    this.buildBankForm(this.bankItem);\r\n  }\r\n\r\n  buildBankForm(item) {\r\n    this.bankForm = this.fb.group({\r\n      bankCode: [item.bankCode || '', Validators.pattern(\"(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){4,4}$\")],\r\n      id: [item.id ? item.id : null],\r\n      // bankCurrency: [item.bankCurrency || '', Validators.required],\r\n      bankName: [item.bankName || '', Validators.required],\r\n      // defaultLanguage: [item.defaultLanguage || '', Validators.required],\r\n      emailId: [item.emailId || \"\", [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n      denomRequired: [item.denomRequired || ''],\r\n      entityCode: [item.entityCode || '', Validators.required],\r\n      headOfficeBrn: [item.headOfficeBrn || ''],\r\n      //swiftCode: [item.swiftCode || '', Validators.required],\r\n      address1: [item.address1 || '', Validators.required],\r\n      address2: [item.address2 || ''],\r\n      country: [item.country || '', Validators.required],\r\n      state: [item.state || '', Validators.required],\r\n      city: [item.city || '', Validators.required],\r\n      pincode: [item.pincode || '', Validators.required],\r\n      telephone: [item.telephone || ''],\r\n      mobile: [item.mobile || '', Validators.required],\r\n      swiftCode: [item ? item.swiftCode : '', Validators.pattern(\"(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){8,8}$\")],\r\n    });\r\n\r\n    if (item.country) {\r\n      this.getStateName(item.country);\r\n      this.getCityName(item.state);\r\n    }\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteBank(this.auditLogData.id,this.currentUser.userName)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/bank/list`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/bank/list`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n\r\neditRecord(){\r\nthis.readorWrite=false;\r\n}\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForBank(payload).subscribe((data) => {\r\n          if( data.authStatus==\"U\" ){\r\n            data.authDate = \"\"\r\n            data.authBy = \"\"\r\n            }\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n    \r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n\r\n  getBranchCurrency(){\r\n    // this.apiService.getCountryValues().subscribe(_list =>{\r\n    //   this.currencies = _list;\r\n    // },(err:any) =>{\r\n\r\n    // })\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currencies.push(data[i])\r\n      }\r\n      console.log(this.currencies);\r\n    })\r\n  }\r\n\r\n  // getCountryName(key: string) {\r\n  //   this.apiService.getDropDownValues(key).subscribe((data) => {\r\n  //     this.countries = data;\r\n  //   });\r\n  // }\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      console.log('resp',data)\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          console.log(data[i])\r\n          this.countries.push(data[i].countryName);\r\n          \r\n        }\r\n      }console.log(this.countries)\r\n    });\r\n  }\r\n  getStateName(countryName){\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName === countryName){\r\n          this.apiService.getStateByCountry(data[i].id).subscribe((resp: any) => {\r\n          this.states = resp\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n    }\r\n\r\n  \r\n\r\n  getCityName(state: any) {\r\n    let entityName = \"city\";\r\n    this.apiService.getDropDownValues1(entityName, state).subscribe((data) => {\r\n      this.cities = data;\r\n    });\r\n  }\r\n\r\n  getEntityDropdown() {\r\n    this.apiService.getEntityDropdown().subscribe((data) => {\r\n      console.log(data);\r\n      this.entityData=data;\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          this.entityCodeArr.push(data[i]);\r\n         \r\n        }\r\n      }\r\n      //this.entityCodeArr = data;\r\n    });\r\n  }\r\n  getEnitityCode(entityValue){\r\n    \r\n    \r\n      for(let i=0; i<this.entityCodeArr.length;i++){\r\n        if(this.entityCodeArr[i].entityCode===entityValue){\r\n          console.log(this.entityCodeArr[i].denomRequired);\r\n          this.bankForm.controls['denomRequired'].setValue(this.entityCodeArr[i].denomRequired);\r\n          \r\n        }\r\n      }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.bankForm.invalid) {\r\n      return;\r\n    } else {\r\n      let payload: any = {};\r\n      payload = this.bankForm.value;\r\n      if (this.id) {\r\n        payload.id = this.id;\r\n      }\r\n    //  payload.entityCode = payload.entityCode.entityCode;\r\n      payload.loggedInUser = this.loggedInUser;\r\n      this.loader.open();\r\n      this.apiService.createOrUpdateBank(payload, this.currentUser.userName)\r\n        .subscribe(data => {\r\n          this.loader.close();\r\n          this.router.navigate(['/maintenance/main/bank/list']).then(_ => {\r\n            this.snack.open('Data Saved Successfully!', 'OK',\r\n              {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n          });\r\n        }, (err: any) => {\r\n          this.loader.close();\r\n          this.snack.open(`Error!`, 'OK', { duration: 4000 });\r\n        })\r\n    }\r\n  }\r\n  _keyPress1(event: any) {\r\n    const pattern = /[a-zA-Z0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  _keyPressForAlphabets(event:any)\r\n  {\r\n      var keyCode = (event.which) ? event.which : event.keyCode\r\n      if ((keyCode < 65 || keyCode > 90) && (keyCode < 97 || keyCode > 123) && keyCode != 32)\r\n       \r\n      return false;\r\n          return true;\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z ]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  keyPressEmail(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/^[ A-Za-z0-9_@./#&$,.;:+-]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n    this.dataService.shareBankItem({});\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/bank/list`]);\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == number.length) {\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n  dataByCurrency(index,currency){\r\n    return currency.currencyCode;\r\n  }\r\n  dataByEntityCode(index,entity){\r\n    return entity.entityCode;\r\n  }\r\n  dataByCountry(index,state){\r\n    return state.value1;\r\n  }\r\n  dataByState(index,city){\r\n    return city.value1;\r\n  }\r\n  dataByCity(index,country){\r\n    return country;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary  > Bank Maintenance > <span *ngIf=\"!isEdit\" >Add</span> <span *ngIf=\"isEdit\" >Edit</span> Bank Information</small></h1>\r\n<mat-toolbar>\r\n  <button mat-icon-button (click)=\" goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Bank Information</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Bank Information</h1>\r\n  <div fxLayout=\"row\" fxFlex=\"1 1 0%\" fxLayoutAlign=\"end center\">\r\n    <!-- <button mat-icon-button matTooltip=\"Delete\">\r\n      <mat-icon>delete_outline</mat-icon>\r\n    </button> -->\r\n  </div>\r\n</mat-toolbar>\r\n\r\n<mat-card >\r\n  <h1>Bank Information</h1>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"bankForm\" class=\"mt-32\">\r\n      <!-- <table class=\"pb-32\">\r\n        <h2>Country and State Maintenance Info</h2>\r\n        <tr>\r\n          <td>\r\n            <h1>{{countryMaintenance.controls['countryName'].value}}</h1>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div *ngIf=\"countryMaintenance.controls['countryName'].value\" class=\"highlight\">\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </table> -->\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['entityCode']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select \r\n              name=\"entity\"\r\n              [formControl]=\"bankForm.controls['entityCode']\"\r\n            >\r\n\r\n            <mat-option *ngFor=\"let entity of entityCodeArr; trackBy:dataByEntityCode\" [value]=\"entity.entityCode\">\r\n              {{ entity.entityCode }}\r\n            </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Bank Name *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput \r\n              name=\"name\"  [readonly]=\"readorWrite\"\r\n              (keypress)=_keyPressForAlphabets($event)\r\n              [formControl]=\"bankForm.controls['bankName']\" \r\n              required \r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('bankName').hasError('required')\">\r\n              <small>\r\n                Bank Name is Required!\r\n              </small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              maxlength=\"4\" \r\n              required\r\n              name=\"code\"\r\n              [readonly]=\"readorWrite\"\r\n              (keypress)=_keyPress1($event) \r\n\r\n              [formControl]=\"bankForm.controls['bankCode']\" \r\n              required\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('bankCode').hasError('required')\">\r\n              <small>Bank Code is Required!</small>\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"bankForm.get('bankCode').value && !bankForm.get('bankCode').hasError('required')\" > \r\n              <small>BANK Code should be a combination of minimum of 4 alphanumeric characters</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Swift Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">   \r\n            <input \r\n              matInput \r\n              minlength=\"8\" \r\n              maxlength=\"11\" \r\n              required  [readonly]=\"readorWrite\"\r\n              name=\"swift\" \r\n              (keypress)=_keyPress1($event) \r\n              [formControl]=\"bankForm.controls['swiftCode']\" \r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('swiftCode').hasError('required')\">\r\n              <small>SWIFT Code is Required!</small>\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"bankForm.get('swiftCode').value && !bankForm.get('swiftCode').hasError('required')\" > \r\n              <small>SWIFT Code should be a combination of minimum of 8 alphanumeric characters</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <!-- <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select  \r\n              name=\"currency\"\r\n              [formControl]=\"bankForm.controls['bankCurrency']\" \r\n              required\r\n            >\r\n              <mat-option>Select</mat-option>\r\n              <mat-option\r\n                *ngFor=\"let currency of currencies; trackBy:dataByCurrency\"\r\n                [value]=\"currency.currencyCode\"\r\n              >\r\n                {{ currency.currencyCode }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"bankForm.get('bankCurrency').hasError('required')\">\r\n              <small>Bank Currency is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['bankCurrency']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Default Language *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">   \r\n            <mat-select \r\n              name=\"language\"\r\n              [formControl]=\"bankForm.controls['defaultLanguage']\" \r\n              required>\r\n              <mat-option [value]=\"'english'\"> English </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"bankForm.get('defaultLanguage').hasError('required')\">\r\n              <small>Default Language is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>  \r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Default Language *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['defaultLanguage']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div> -->\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Email Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput\r\n              name=\"emailId\"  [readonly]=\"readorWrite\"\r\n              (keypress)=keyPressEmail($event)\r\n              [formControl]=\"bankForm.controls['emailId']\"\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('emailId').hasError('required')\">\r\n              <small>\r\n                Email Id is Required!\r\n              </small>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"bankForm.get('emailId').hasError('pattern')\">\r\n              <small>\r\n                Please Enter valid Email id!\r\n              </small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Head Office Branch</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput\r\n              name=\"office\"  [readonly]=\"readorWrite\"\r\n              (keypress)=keyPressAlphanumeric($event)\r\n              [formControl]=\"bankForm.controls['headOfficeBrn']\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <!-- <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Denomination Required? </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select \r\n              name=\"denom\"\r\n              [formControl]=\"bankForm.controls['denomRequired']\"\r\n            >\r\n              <mat-option [value]=\"'yes'\" selected> Yes </mat-option>\r\n              <mat-option [value]=\"'no'\"> No </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div> -->\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" >\r\n          <mat-label>Denomination Required? </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  \r\n            readonly\r\n            [formControl]=\"bankForm.controls['denomRequired']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput \r\n              name=\"entity\"\r\n              [formControl]=\"bankForm.controls['entityCode']\" \r\n              required\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('entityCode').hasError('required')\">\r\n              <small>Entity Code is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div> -->\r\n      </div><br>\r\n      <div>\r\n        <h1>Address Information</h1>\r\n      </div><br>\r\n      \r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>address1 *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n              matInput\r\n              name=\"address1\"  [readonly]=\"readorWrite\"\r\n              [formControl]=\"bankForm.controls['address1']\"\r\n              placeholder=\"Address 1\" \r\n              required\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('address1').hasError('required')\">\r\n              <small>Address 1 is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>address2 </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput\r\n            name=\"address2\"  [readonly]=\"readorWrite\"\r\n            [formControl]=\"bankForm.controls['address2']\"\r\n            placeholder=\"Address 2\"\r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Country *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">   \r\n             <mat-select\r\n                name=\"country\"\r\n                [formControl]=\"bankForm.controls['country']\"\r\n                placeholder=\"Country\"\r\n                (selectionChange)=\"getStateName($event.value)\" \r\n                required\r\n              >\r\n                <mat-option *ngFor=\"let country of countries\" [value]=\"country\">\r\n                  {{ country }}\r\n                </mat-option>\r\n             </mat-select>\r\n             <mat-error *ngIf=\"bankForm.get('country').hasError('required')\">\r\n              <small>Country is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>Country * </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['country']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>State *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select\r\n              name=\"state\"\r\n              [formControl]=\"bankForm.controls['state']\"\r\n              (selectionChange)=\"getCityName($event.value)\" \r\n              required\r\n            >\r\n              <mat-option *ngFor=\"let state of states; trackBy:dataByState\" [value]=\"state.stateName\">\r\n                {{ state.stateName }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"bankForm.get('state').hasError('required')\">\r\n              <small>State is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>State * </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['state']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>City *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">   \r\n            <mat-select \r\n              name=\"city\"\r\n              [formControl]=\"bankForm.controls['city']\" \r\n              required\r\n            >\r\n              <mat-option *ngFor=\"let city of cities; trackBy:dataByCity\" [value]=\"city.value1\">\r\n                {{ city.value1 }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"bankForm.get('city').hasError('required')\">\r\n              <small>City is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n          <mat-label>City * </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n            matInput \r\n            name=\"name\"  [readonly]=\"readorWrite\"\r\n        \r\n            [formControl]=\"bankForm.controls['city']\" \r\n            required \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Pincode *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput \r\n              name=\"pincode\" \r\n              minlength=\"6\" \r\n              maxlength=\"10\"  [readonly]=\"readorWrite\"\r\n              pattern =\"^[1-9][0-9][{6}-{10}]$\"\r\n              (keypress)=\"_keyPress($event)\"\r\n              (keyup)=\"isAllSameDigit($event)\" \r\n              [formControl]=\"bankForm.controls['pincode']\" \r\n              required\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('pincode').touched && bankForm.get('pincode').hasError('required')\">\r\n              <small>Pincode is Required!</small>\r\n            </mat-error>\r\n           \r\n            <mat-error *ngIf=\"!bankForm.get('pincode').valid && !bankForm.get('pincode').hasError('required')\">\r\n              <small>Please Enter Valid Pincode!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div><br> \r\n      <div>\r\n        <h1>Contact Information</h1>\r\n      </div><br> \r\n      \r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Mobile Number *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput \r\n              name=\"mobile\" \r\n              minlength=\"10\"\r\n              maxlength=\"10\"  [readonly]=\"readorWrite\"\r\n              (keypress)=\"_keyPress($event)\"\r\n              [formControl]=\"bankForm.controls['mobile']\" \r\n              required\r\n            />\r\n            <mat-error *ngIf=\"bankForm.get('mobile').hasError('required')\">\r\n              <small>Mobile Number is Required!</small>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Telephone </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input \r\n              matInput \r\n              name=\"telephone\"  [readonly]=\"readorWrite\" \r\n              maxlength=\"10\" \r\n              (keypress)=\"_keyPress($event)\"\r\n              [formControl]=\"bankForm.controls['telephone']\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button *ngIf=\"!isEdit\"\r\n            color=\"primary\" \r\n            [disabled]=\"bankForm.invalid\" \r\n            mat-raised-button \r\n            (click)=\"onSubmit()\"\r\n          >\r\n          Save\r\n          </button>\r\n          <div [hidden]=\"readorWrite\">\r\n            <button *ngIf=\"isEdit\"\r\n            color=\"primary\" \r\n            [disabled]=\"(bankForm.invalid && !bankForm.dirty)\" \r\n            mat-raised-button \r\n            (click)=\"onSubmit()\"\r\n          >\r\n          Save\r\n          </button>\r\n          &nbsp;&nbsp;\r\n          </div>\r\n         \r\n\r\n          <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord()\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n         \r\n        </div>\r\n      </div>\r\n\r\n      \r\n      \r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData && isEdit\" class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { tillVaultBranchMap } from \"app/shared/models/tillVaultBranchMap\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: \"app-till-vault-branch-map\",\r\n  templateUrl: \"./till-vault-branch-map.component.html\",\r\n  styleUrls: [\"./till-vault-branch-map.component.scss\"],\r\n})\r\nexport class TillVaultBranchMapComponent implements OnInit {\r\n  public tillVaultBranchMapForm: FormGroup;\r\n  till: any[] = [];\r\n  vault: any[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  id: number;\r\n  vaultItem:tillVaultBranchMap;\r\n  entityCode: string[] = [];\r\n  authEntityCode:string[]= [];\r\n  tillData: tillVaultBranchMap;\r\n  vaultData: tillVaultBranchMap;\r\n  loggedInUser : string;\r\n  auditData : tillVaultBranchMap;\r\n  isAuditData : boolean = false;\r\n  isEdit: boolean = false;\r\n  authStatus:any;\r\n  entityCodeArr: any[] = [];\r\n  readorWrite: boolean=true;\r\n\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultBranchMapComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private dataService:DataService,\r\n    private ls:LocalStoreService,\r\n    private loader: AppLoaderService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // this.dataService.getTillVaultMap.subscribe(data =>{\r\n    //   console.log(data)\r\n    //   this.vaultItem = typeof this.vaultItem === 'object' ? data : {};\r\n    // });\r\n    \r\n    setTimeout(() => {  \r\n      this.vaultItem = JSON.parse(localStorage.getItem('fetchBrnMap'));\r\n      if(this.vaultItem == null || this.vaultItem == undefined){\r\n        this.buildItemForm({})\r\n        this.readorWrite=false;\r\n      }       \r\n      else if(this.vaultItem.id != null || this.vaultItem.id != undefined){\r\n      this.loader.open();\r\n      this.id = this.vaultItem.id\r\n      this.buildItemForm(this.vaultItem)\r\n      this.auditData = this.vaultItem;\r\n      this.isEdit = true;\r\n          this.isAuditData = true;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n      this.loader.close();\r\n      }\r\n    }, 1000)\r\n\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n    this.getParentVault();\r\n    this.getEntityCode();\r\n\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    \r\n  }\r\n\r\n  // fetchTellVaultBranchMap(){\r\n  //   this.apiService.fetchTellerVaultBranchMap(id).subscribe(result=>{\r\n  //       console.log(result);\r\n  //       this.buildItemForm(result);\r\n  //     })\r\n  // }\r\n\r\n  buildItemForm(item) {\r\n    this.tillVaultBranchMapForm = this.fb.group({\r\n      bankCode: [item?.bankCode || \"\", Validators.required],\r\n      branchCode: [item?.branchCode || \"\", Validators.required],\r\n      entityCode: [item?.entityCode || \"\",[Validators.required]],\r\n      tillVaultCode: [item?.tillVaultCode || \"\",Validators.required],\r\n      id: [item.id ? item.id : null],\r\n      locked: [item.locked === \"0\" ? true : false || \"\", false],\r\n      parentTillVault: [item?.parentTillVault || \"\", Validators.required],\r\n      primaryVault: [item?.primaryVault || \"\", Validators.required],\r\n      // tillId: [item?.tillId || \"\", Validators.required],\r\n      // parentVaultId: [item?.parentVaultId || \"\", Validators.required],\r\n      // shortOvgGl: [item?.shortOvgGl || \"\", Validators.required],\r\n      loggedInuser : [item.loggedInUser || '']\r\n     \r\n    });\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTellerVaultBrnMap(this.auditData.id)\r\n        .subscribe(data => {   \r\n    this.router.navigate([`/maintenance/main/tillVaultltBranch`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n         \r\n    this.router.navigate([`/maintenance/main/tillVaultltBranch`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsFortillvaulmap(payload).subscribe((data) => {\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n    \r\n  }\r\n\r\n  submit() {\r\n    if(this.tillVaultBranchMapForm.invalid){\r\n      return;\r\n    }else{\r\n      this.loader.open();\r\n      // this.tillData = this.till.find(x => x.tillVaultCode == this.tillVaultBranchMapForm.value.tillId);\r\n      // this.tillVaultBranchMapForm.value.tillId = this.tillData.id;\r\n      // this.vaultData = this.vault.find(x => x.tillVaultCode == this.tillVaultBranchMapForm.value.parentVaultId);\r\n      // this.tillVaultBranchMapForm.value.parentVaultId = this.vaultData.id;\r\n      this.tillVaultBranchMapForm.value.loggedInUser = this.loggedInUser;\r\n      this.apiService.saveTellerVaultBranchMap(this.tillVaultBranchMapForm.value).subscribe((resp) => {\r\n      this.loader.close();\r\n      this.router.navigate([`/maintenance/main/tillVaultltBranch`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n        });\r\n      },(err:any) =>{\r\n        this.loader.close();\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n      }  \r\n\r\n      // this.tillVaultBranchMapForm.value.locked === true\r\n      //   ? (this.tillVaultBranchMapForm.value.locked = \"0\")\r\n      //   : (this.tillVaultBranchMapForm.value.locked = \"1\");\r\n      // this.dialogRef.close(this.tillVaultBranchMapForm.value);\r\n   \r\n  }\r\n\r\n  alhanumericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n     //this.entityCode = resp;\r\n \r\n      for(let i=0; i<resp.length; i++){\r\n         if(resp[i].authStatus === 'A') {\r\n          this.entityCode.push(resp[i]);\r\n        } \r\n      }\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n   // this.bankCode = resp;\r\n    \r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n    //  this.branchCode = resp;\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  getParentVault(){\r\n    let tillOrVault =\"V\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.vault = resp;\r\n    }); \r\n  }\r\n  goBack() {\r\n    localStorage.removeItem('fetchBrnMap');\r\n\r\n    this.router.navigate([`/maintenance/main/tillVaultltBranch`]);\r\n  }\r\n  dataByEntityCode(index,item){\r\n   // console.log(\"item\",item)\r\n    // if(item.authStatus == 'A' || item.authStatus == 'Authorized'){\r\n      return item.entityCode;\r\n    // }\r\n   \r\n  }\r\n  dataByBankCode(index,item){\r\n    return item.bankCode;\r\n  }\r\n  dataByBranchCode(index,item){\r\n    return item.branchCode;\r\n  }\r\n  dataByTillId(index,item){\r\n    return item.tillVaultCode;\r\n  }\r\n  dataParentVaultId(index,item){\r\n    return item.tillVaultCode;\r\n  }\r\n  \r\n  \r\n  \r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Branch Map Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Branch Map Details</small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Branch Map Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Branch Map Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 matDialogTitle>Add Branch Map Details</h1> -->\r\n    <form [formGroup]=\"tillVaultBranchMapForm\" *ngIf=\"tillVaultBranchMapForm\" class=\"m-333\">\r\n\r\n      <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"entityCode\" (keypress)=\"alhanumericValidation($event)\"\r\n              [formControl]=\"tillVaultBranchMapForm.controls['entityCode']\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of entityCode; trackBy:dataByEntityCode\" [value]=\"data.entityCode\">\r\n                {{data?.entityCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('entityCode').touched && !tillVaultBranchMapForm.get('entityCode').valid\">\r\n              Enter the Entity Code!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Entity code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"entityCode\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <mat-select name=\"bankCode\" formControlName=\"bankCode\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBankCode\" [value]=\"data.bankCode\">\r\n                {{data?.bankCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('bankCode').touched && !tillVaultBranchMapForm.get('bankCode').valid\">\r\n              Bank code is Required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"bankCode\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <mat-select name=\"branchCode\" formControlName=\"branchCode\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of branchCode; trackBy:dataByBranchCode\" [value]=\"data.branchCode\">\r\n                {{data?.branchCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('branchCode').touched && !tillVaultBranchMapForm.get('branchCode').valid\">\r\n              Branch code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"branchCode\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <!-- <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <mat-select name=\"tillId\" formControlName=\"tillId\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of till; trackBy:dataByTillId\" [value]=\"data.tillVaultCode\">\r\n                {{data?.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('tillId').touched && !tillVaultBranchMapForm.get('tillId').valid\">\r\n              Till Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div> -->\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Till Vault Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" maxlength=\"10\" matInput name=\"tillVaultCode\" formControlName=\"tillVaultCode\">\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('tillVaultCode').touched && !tillVaultBranchMapForm.get('tillVaultCode').valid\">\r\n              Till Vault Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Parent Till Vault *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" maxlength=\"10\" matInput name=\"parentTillVault\" formControlName=\"parentTillVault\">\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('parentTillVault').touched && !tillVaultBranchMapForm.get('parentTillVault').valid\">\r\n              Parent Till Vault is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Primary Vault *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" maxlength=\"1\" matInput name=\"primaryVault\" formControlName=\"primaryVault\">\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('primaryVault').touched && !tillVaultBranchMapForm.get('primaryVault').valid\">\r\n              Primary Vault is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <!-- <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Parent Vault Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"parentVaultId\" formControlName=\"parentVaultId\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of vault; trackBy:dataParentVaultId\" [value]=\"data.tillVaultCode\">\r\n                {{data?.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('parentVaultId').touched && !tillVaultBranchMapForm.get('parentVaultId').valid\">\r\n              Parent Vault Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Parent Vault Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"parentVaultId\">\r\n          </mat-form-field>\r\n        </div> -->\r\n\r\n        <!-- <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Short Ovg Gl *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"shortOvgGl\" formControlName=\"shortOvgGl\">\r\n            <mat-error\r\n              *ngIf=\"tillVaultBranchMapForm.get('shortOvgGl').touched && !tillVaultBranchMapForm.get('shortOvgGl').valid\">\r\n              Short Ovg Gl is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div> -->\r\n      </div>\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Locked</mat-label>\r\n          <mat-slide-toggle formControlName=\"locked\"></mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button *ngIf=\"!isEdit\" mat-raised-button color=\"primary\" [disabled]=\"tillVaultBranchMapForm.invalid\"\r\n            (click)=\"submit()\">SAVE</button>\r\n            <div  [hidden]=\"readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(tillVaultBranchMapForm.invalid || tillVaultBranchMapForm.dirty)\"(click)=\"submit()\">\r\n                Save\r\n               </button>&nbsp;&nbsp;\r\n            </div>\r\n          &nbsp;\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-charge-mant',\r\n  templateUrl: './add-charge-mant.component.html',\r\n  styleUrls: ['./add-charge-mant.component.scss']\r\n})\r\nexport class AddChargeMantComponent implements OnInit {\r\n\r\n  public chargeMaint: FormGroup;\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  chargeMaintIsEdit: any;\r\n  isEdit: boolean = false ;\r\n  \r\n  loggedInUser : any;\r\n  auditLogData : any;\r\n  entityCodeArr: any[]=[];\r\n  currencyId: any;\r\n  readorWrite: boolean = true;\r\n  currencyCode: any;\r\n  id: any;\r\n  entityData: any;\r\n  bankDetails: any;\r\n  bankCodeArr: string[] = [];\r\n  bankData: any;\r\n  branchData: any;\r\n  branchCodeArr: string[] = [];\r\n  productData: any;\r\n  productCodeArr: string[] = [];\r\n  currencyData: any;\r\n  currencyCodeArr: string[] = [];\r\n  accountClassData: any;\r\n  accountClassArr: string[] = [];\r\n  customerData: any;\r\n  customerArr: string[] = [];\r\n  terminalData: any;\r\n  terminalArr: string[] = [];\r\n  entityCode: any;\r\n  chargeId: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route : ActivatedRoute,\r\n    private api: ApiService,\r\n    private apiService: ApiService,\r\n    private dataService : DataService,\r\n    private ls : LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private router:Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    console.log(this.loggedInUser);\r\n    this.getEntityDropdown();\r\n    this.getBankDropdown();\r\n    this.getBranchDropdown();\r\n    this.getProductDropdown();\r\n    this.getCurrencyDropdown();\r\n    this.getAccountDropdown();\r\n    this.getCustomerDropdown();\r\n    this.getTerminalDropdown();\r\n    this.buildItemForm({});\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params);\r\n      // this.entityCode = JSON.parse(params.get('entityCode'));\r\n      this.chargeMaintIsEdit = params.get('isEdit');\r\n      console.log(\"this.chargeMaintIsEdit\",this.chargeMaintIsEdit);\r\n      if(this.chargeId){\r\n        this.isEdit = true;\r\n        console.log(this.chargeId);\r\n        this.apiService.editChargeMaintById(this.chargeId).subscribe((resp) =>{\r\n           console.log(resp);\r\n           this.id = resp.id;\r\n           this.buildItemForm(resp);\r\n           this.auditLogData = resp;\r\n           this.dataService.setAuditLogData(this.auditLogData);\r\n           this.dataService.sendClickEvent();\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.chargeMaint = this.fb.group({\r\n      id:[item.id || null],\r\n      entityCode: [item.entityCode || '', Validators.required],\r\n      bankCode: [item.bankCode || '', Validators.required],\r\n      branchCode: [item.branchCode || '', Validators.required],\r\n      accountClass: [item.accountClass || ''],\r\n      source: [item.source || ''],\r\n      terminal: [item.terminal || ''],\r\n      productCode: [item.productCode || ''],\r\n      currencyCode: [item.currencyCode || '',Validators.required],\r\n      customerGroup: [item.customerGroup || '',Validators.required],\r\n      rateClass: [item.rateClass || ''],\r\n      rateType: [item.rateType || ''],\r\n      amountBasicBase: [item.amountBasicBase || ''],\r\n    });\r\n  }\r\n\r\n  getEntityDropdown() {\r\n    this.apiService.getEntityDropdown().subscribe((data) => {\r\n      console.log(data);\r\n      this.entityData=data;\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          this.entityCodeArr.push(data[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getBankDropdown(){\r\n    this.apiService.getBankCode().subscribe(bankCodeResp=>{\r\n      console.log(bankCodeResp);\r\n      this.bankData=bankCodeResp;\r\n       for(let i=0;i<bankCodeResp.length;i++){\r\n         if(bankCodeResp[i].authStatus==='A'){\r\n           console.log('auth',bankCodeResp[i].authStatus)\r\n           this.bankCodeArr.push(bankCodeResp[i]);\r\n         }\r\n       }\r\n     });\r\n  }\r\n\r\n  getBranchDropdown(){\r\n    this.apiService.getBranchCode().subscribe(branchCodeResp=>{\r\n      console.log(branchCodeResp);\r\n      this.branchData=branchCodeResp;\r\n       for(let i=0;i<branchCodeResp.length;i++){\r\n         if(branchCodeResp[i].authStatus==='A'){\r\n           console.log('auth',branchCodeResp[i].authStatus)\r\n           this.branchCodeArr.push(branchCodeResp[i]);\r\n         }\r\n       }\r\n    });\r\n  }\r\n\r\n  getProductDropdown(){\r\n    this.apiService.getProductDetails().subscribe(productCodeResp=>{\r\n      console.log(productCodeResp);\r\n      this.productData=productCodeResp;\r\n       for(let i=0;i<productCodeResp.length;i++){\r\n         if(productCodeResp[i].authStatus==='A'){\r\n           console.log('auth',productCodeResp[i].authStatus)\r\n           this.productCodeArr.push(productCodeResp[i]);\r\n         }\r\n       }\r\n    });\r\n  }\r\n\r\n  getCurrencyDropdown(){\r\n    this.apiService.fetchCurrencyMaintDetails().subscribe(currencyCodeResp=>{\r\n      console.log(currencyCodeResp);\r\n      this.currencyData=currencyCodeResp;\r\n       for(let i=0;i<currencyCodeResp.length;i++){\r\n         if(currencyCodeResp[i].authStatus==='A'){\r\n           console.log('auth',currencyCodeResp[i].authStatus)\r\n           this.currencyCodeArr.push(currencyCodeResp[i]);\r\n         }\r\n       }\r\n    });\r\n  }\r\n\r\n  getAccountDropdown(){\r\n    this.apiService.fetchAccountClassDetails().subscribe(accountClassResp=>{\r\n      console.log(accountClassResp);\r\n      this.accountClassData=accountClassResp;\r\n       for(let i=0;i<accountClassResp.length;i++){\r\n         if(accountClassResp[i].authStatus==='A'){\r\n           console.log('auth',accountClassResp[i].authStatus)\r\n           this.accountClassArr.push(accountClassResp[i]);\r\n         }\r\n       }\r\n    });\r\n  }\r\n\r\n  getCustomerDropdown(){\r\n    this.apiService.fetchCustomerGroupDetails().subscribe(customerResp=>{\r\n      console.log(customerResp);\r\n      this.customerData=customerResp;\r\n       for(let i=0;i<customerResp.length;i++){\r\n         if(customerResp[i].authStatus==='A'){\r\n           console.log('auth',customerResp[i].authStatus)\r\n           this.customerArr.push(customerResp[i]);\r\n         }\r\n       }\r\n    });\r\n  }\r\n\r\n  getTerminalDropdown(){\r\n    this.apiService.fetchTerminalDetails().subscribe(terminalResp=>{\r\n      console.log(terminalResp);\r\n      this.terminalData=terminalResp;\r\n       for(let i=0;i<terminalResp.length;i++){\r\n         if(terminalResp[i].authStatus==='A'){\r\n           console.log('auth',terminalResp[i].authStatus)\r\n           this.terminalArr.push(terminalResp[i]);\r\n         }\r\n       }\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.chargeMaint.value.loggedInUser = this.loggedInUser.userName;\r\n    if(this.isEdit == true){\r\n      this.chargeMaint.value.id = this.id\r\n    }\r\n    console.log(this.chargeMaint.value);\r\n    this.apiService.upsertChargeMaintDetails(this.chargeMaint.value).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data.status == 400){\r\n        this.snack.open(`${data.message}`, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n      else if(data && this.isEdit == false ){\r\n        this.snack.open('Data Created Successfully!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.router.navigate([`/maintenance/main/chargeMaint`]);\r\n        this.cdr.markForCheck();\r\n      }\r\n     else if(data && this.isEdit == true){\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.router.navigate([`/maintenance/main/chargeMaint`]);\r\n        this.cdr.markForCheck();\r\n      }\r\n      else {\r\n        this.snack.open('Save Failed! Cannot add duplicate records', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/chargeMaint`]);\r\n  }\r\n\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteChargeMaint(this.auditLogData.id)\r\n        .subscribe(data => {\r\n            this.router.navigate([`/maintenance/main/chargeMaint`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n            this.router.navigate([`/maintenance/main/chargeMaint`]);\r\n      })\r\n      }}))\r\n  }\r\n\r\n editRecord(){\r\n this.readorWrite=false;\r\n }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        console.log(\"operation::\",operation);\r\n        console.log(this.chargeMaint.value.id);\r\n        let payload: any = {};\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        payload.id = this.id\r\n        this.apiService.updateAuditLogForChargeMaint(payload).subscribe((data) => {\r\n          console.log(data);\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n    \r\n  }\r\n  dataByEntityCode(index,entity){\r\n    return entity.entityCode;\r\n  }\r\n  dataByBankCode(index,item){\r\n    return item.bankCode;\r\n  }\r\n  dataByBranchCode(index,item){\r\n    return item.branchCode;\r\n  }\r\n  // dataByProductCode(index,item){\r\n  //   return item.productCode;\r\n  // }\r\n  dataByCurrencyCode(index,item){\r\n    return item.currencyCode;\r\n  }\r\n  // dataByAccountClass(index,item){\r\n  //   return item.accountClass;\r\n  // }\r\n  dataByCustomer(index,item){\r\n    return item.customer;\r\n  }\r\n  // dataByTerminal(index,item){\r\n  //   return item.terminal;\r\n  // }\r\n}\r\n\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Charge Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Charge Information</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Charge Information</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Charge Information</h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <div *ngIf=\"chargeMaint\" [formGroup]=\"chargeMaint\" class=\"m-333\">\r\n            \r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Entity Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"entity\" [formControl]=\"chargeMaint.controls['entityCode']\">\r\n                            <mat-option *ngFor=\"let entity of entityCodeArr; trackBy:dataByEntityCode\"\r\n                                [value]=\"entity\">\r\n                                {{ entity.entityCode }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('entityCode').touched && !chargeMaint.get('entityCode').valid\">\r\n                            Entity Code is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Bank Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"bankCode\" [formControl]=\"chargeMaint.controls['bankCode']\"\r\n                         required>\r\n                        <mat-option *ngFor=\"let bank of bankCodeArr; trackBy:dataByBankCode\" [value]=\"bank.bankCode\"> {{bank.bankCode}}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('bankCode').touched && !chargeMaint.get('bankCode').valid\">\r\n                            Bank Code is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Branch Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"branch\" [formControl]=\"chargeMaint.controls['branchCode']\" required>\r\n                            <mat-option *ngFor=\"let branch of branchCodeArr; trackBy:dataByBranchCode\" [value]=\"branch.branchCode\"> {{branch.branchCode}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('branchCode').touched && !chargeMaint.get('branchCode').valid\">\r\n                            Branch Code is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Product Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"product\" [formControl]=\"chargeMaint.controls['productCode']\"\r\n                         required>\r\n                         <!-- <mat-option value=\"Product-A\">Product-A</mat-option>\r\n                         <mat-option value=\"Product-B\">Product-B</mat-option> -->\r\n                         <mat-option *ngFor=\"let product of productCodeArr; trackBy:dataByProductCode\" [value]=\"product.productCode\"> {{product.productCode}}</mat-option>\r\n                      </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('productCode').touched && !chargeMaint.get('productCode').valid\">\r\n                            Product Code is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Currency Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"currency\" [formControl]=\"chargeMaint.controls['currencyCode']\">\r\n                            <mat-option *ngFor=\"let currency of currencyCodeArr; trackBy:dataByCurrencyCode\" [value]=\"currency.currencyCode\"> {{currency.currencyCode}}</mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('currencyCode').touched && !chargeMaint.get('currencyCode').valid\">\r\n                            Currency Code is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Account Class *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"accountClass\" [formControl]=\"chargeMaint.controls['accountClass']\">\r\n                            <mat-option *ngFor=\"let account of accountClassArr; trackBy:dataByAccountClass\" [value]=\"account.accountClass\"> {{account.accountClass}}</mat-option>\r\n                            <!-- <mat-option value=\"Account-A\">Account-A</mat-option>\r\n                            <mat-option value=\"Account-B\">Account-B</mat-option> -->\r\n                        </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('accountClass').touched && !chargeMaint.get('accountClass').valid\">\r\n                            Account Class is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Customer Group *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"customer\" [formControl]=\"chargeMaint.controls['customerGroup']\"\r\n                         required>\r\n                         <mat-option *ngFor=\"let customer of customerArr; trackBy:dataByCustomer\" [value]=\"customer.categoryCode\"> {{customer.categoryCode}}</mat-option>\r\n                      </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('customerGroup').touched && !chargeMaint.get('customerGroup').valid\">\r\n                            Customer Group is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Source *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"source\" [formControl]=\"chargeMaint.controls['source']\">\r\n                            <mat-option value=\"source-A\">source-A</mat-option>\r\n                            <mat-option value=\"source-B\">source-B</mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('source').touched && !chargeMaint.get('source').valid\">\r\n                            Source is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Terminal *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"terminal\" [formControl]=\"chargeMaint.controls['terminal']\">\r\n                            <mat-option *ngFor=\"let terminalData of terminalArr; trackBy:dataByTerminal\" [value]=\"terminalData.terminal\"> {{terminalData.terminal}}</mat-option>\r\n                            <!-- <mat-option value=\"Terminal-A\">Terminal-A</mat-option>\r\n                            <mat-option value=\"Terminal-B\">Terminal-B</mat-option> -->\r\n                        </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('terminal').touched && !chargeMaint.get('terminal').valid\">\r\n                            Terminal is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Rate Class *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"rateclass\" [formControl]=\"chargeMaint.controls['rateClass']\"\r\n                         required>\r\n                         <mat-option value=\"STANDARD\">STANDARD</mat-option>\r\n                         <mat-option value=\"CASH\">CASH</mat-option>\r\n                         <mat-option value=\"WALKIN\">WALKIN</mat-option>\r\n                      </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('rateClass').touched && !chargeMaint.get('rateClass').valid\">\r\n                            Rate Class is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Rate Type *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"rateType\" [formControl]=\"chargeMaint.controls['rateType']\">\r\n                            <mat-option value=\"Mid\">Mid</mat-option>\r\n                            <mat-option value=\"Sell\">Sell</mat-option>\r\n                            <mat-option value=\"Buy\">Buy</mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('rateType').touched && !chargeMaint.get('rateType').valid\">\r\n                            Rate Type is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Amount Basis Base *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"amount\" [formControl]=\"chargeMaint.controls['amountBasicBase']\">\r\n                            <mat-option value=\"SLAB\">SLAB</mat-option>\r\n                            <mat-option value=\"TIER\">TIER</mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"chargeMaint.get('amountBasicBase').touched && !chargeMaint.get('amountBasicBase').valid\">\r\n                            Amount Basis Base is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                    <button color=\"primary\" *ngIf=\"!isEdit\"  [disabled]= \"chargeMaint.invalid\" mat-raised-button\r\n                        (click)=\"submit()\">\r\n                        Save\r\n                    </button>\r\n                    <div [hidden]=\"readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" [disabled]=\"!(chargeMaint.invalid || chargeMaint.dirty)\"\r\n                            mat-raised-button color=\"primary\" (click)=\"submit()\">\r\n                            Save\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                    <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                            Edit\r\n                        </button>&nbsp;&nbsp;\r\n                    </div>\r\n                    <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"updateRecord('auth')\">\r\n                            Authorize\r\n                        </button>&nbsp;&nbsp;\r\n                    </div>\r\n                    <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\"\r\n                        [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"updateRecord('open')\">\r\n                            Reopen\r\n                        </button>&nbsp;&nbsp;\r\n                    </div>\r\n                    <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\"\r\n                        [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"updateRecord('close')\">\r\n                            Close\r\n                        </button>&nbsp;&nbsp;\r\n                    </div>\r\n                    <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord()\">\r\n                            Delete\r\n                        </button> &nbsp;&nbsp;\r\n                    </div>\r\n\r\n                    <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"goBack()\">\r\n                        Exit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n</div> ","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-currency-maint-summary',\r\n  templateUrl: './currency-maint-summary.component.html',\r\n  styleUrls: ['./currency-maint-summary.component.scss']\r\n})\r\nexport class CurrencyMaintSummaryComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['currencyCode', 'currencyName', 'country','authStatus','recordStatus','action'];\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'currencyCode', value: 'Currency Code' },\r\n    { key: 'currencyName', value: 'Currency Name' }\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  getItemSub: any;\r\n  items: any;\r\n  public users: any[];\r\n  dataSource = new MatTableDataSource();\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex: number;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private confirmService: AppConfirmService,\r\n    private snack: MatSnackBar,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n      this.fetchCurrencyMaintDetails();\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'currencyMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.fetchCurrencyMaintDetails();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n  fetchCurrencyMaintDetails() {\r\n    this.getItemSub = this.apiService.fetchCurrencyMaintDetails()\r\n      .subscribe(data => {\r\n        console.log(\"data\",data);\r\n       \r\n          for(let i=0;i<data.length;i++){\r\n            if(data[i]){\r\n            if(data[i].authStatus == 'U'){\r\n              data[i].authStatus = 'Unauthorized'\r\n            }\r\n            if(data[i].authStatus == 'A') {\r\n              data[i].authStatus = 'Authorized'\r\n            } \r\n            if(data[i].recordStatus == 'O'){\r\n              data[i].recordStatus = 'Open'\r\n            } \r\n            if(data[i].recordStatus == 'C'){\r\n              data[i].recordStatus = 'Closed'\r\n            }\r\n          }\r\n        }\r\n        \r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.users = data;\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      })\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/currencyMaint/add\"], { queryParams: { currencyId: null, isEdit : \"No\" } });\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n    \r\n  }\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   doFilter(filterBy, e){\r\n    console.log(filterBy,e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  dataByFilter(index, item) {\r\n    return item.key\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  \r\n  openPopUp(data: any = {},isEdit : boolean) {\r\n    console.log(data);\r\n    console.log(\"stringified data\",JSON.stringify(data.currencyCode));\r\n    this.router.navigate([`/maintenance/main/currencyMaint/add`],{ queryParams: { currencyCode: JSON.stringify(data.currencyCode), isEdit : isEdit } });\r\n  }\r\n\r\n  applyFilter(e: any) {\r\n    //throw new Error('Method not implemented.');\r\n    const filterValue = (e.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  filterTable(filterBy: any) {\r\n    //throw new Error('Method not implemented.');\r\n    this.dataSource.filterPredicate = (filteredDdata: any, filter: string): boolean => {\r\n      return (\r\n        filteredDdata[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  currencyMaintenance(){\r\n    this.downloadService.downloadFiles(\"courrencyMaintenance\", this.users);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    console.log(row);\r\n    this.confirmService.confirm({message: `Are you sure? You want to delete?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteCurrencyMaint(row.id)\r\n            .subscribe(data => {\r\n              if (data !== null) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n            this.fetchCurrencyMaintDetails();\r\n            },\r\n            err=>{\r\n          })\r\n        }\r\n      })\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">  \r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <span class=\"text-large\">\r\n      Currency Maintenance\r\n    </span>\r\n   </div> \r\n  <mat-card class=\"mt-32\">\r\n    <div>\r\n      <table style=\"margin: 18px;\">\r\n        <tr>\r\n          <td>\r\n            <h2>\r\n              Currencies\r\n            </h2>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"highlight\">\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </table>  \r\n      <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <!-- <button mat-menu-item>\r\n        <span>Upload</span>\r\n      </button> -->\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\"\r\n          (change)=\"onFileChange($event)\"\r\n        />\r\n      </div>\r\n      <button (click)=\"currencyMaintenance()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n    <mat-card-content>\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n        <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Filter By</mat-label>\r\n              <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n                <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n                <mat-option value=\"0\" disabled>Select</mat-option>\r\n                <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                  {{filter.value}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Search</mat-label>\r\n              <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n              <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n              <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n          <div style=\"padding-top: 3px;\">\r\n            <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n          </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div>\r\n        \r\n      </div>\r\n      </div>\r\n      <div class=\"mat-elevation-z0\">\r\n        <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n          <ng-container matColumnDef=\"currencyCode\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by currency code\">\r\n              Currency Code\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.currencyCode}} </mat-cell>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"currencyName\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by currency name\"> Currency Name\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.currencyName}} </mat-cell>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"country\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by country\"> \r\n              Country\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.country}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"authStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"recordStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n              Status\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n          </ng-container>\r\n  \r\n  \r\n          <!-- <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <div>\r\n               <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,true)\" >edit</mat-icon>\r\n            </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <div [hidden]=\"element.authStatus == 'Authorized'\">\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n            </div>\r\n            </mat-cell>\r\n          </ng-container> -->\r\n          <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <button\r\n                mat-icon-button\r\n                mat-sm-button\r\n                color=\"primary\"\r\n                class=\"mr-16\"\r\n                (click)=\"openPopUp(element,'Yes')\"\r\n              >\r\n                <mat-icon>edit</mat-icon>\r\n              </button>\r\n              <button\r\n                mat-icon-button\r\n                mat-sm-button\r\n                color=\"warn\"\r\n                [disabled]=\"element.authStatus == 'Authorized'\"\r\n                (click)=\"deleteItem(element)\"\r\n              >\r\n                <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </mat-cell>\r\n          </ng-container>\r\n  \r\n          <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n          <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n        <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { tillVaultStatus } from 'app/shared/models/tillVaultStatus';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-status',\r\n  templateUrl: './till-vault-status.component.html',\r\n  styleUrls: ['./till-vault-status.component.scss']\r\n})\r\nexport class TillVaultStatusComponent implements OnInit {\r\n\r\n  arrayCurrency: string[] = [];\r\n  public tillVaultForm: FormGroup;\r\n  tillVaultResponse: any;\r\n  Id: number;\r\n  currentUser: string;\r\n  vaultStatus: any = {};\r\n  // vaultStatus: {};\r\n  bankCode: string[] = [];\r\n  till: any;\r\n  entity: string[] = [];\r\n  branchCode: string[] = [];\r\n  tillData: any;\r\n  loggedInUser : any;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n  id: any;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  tillVaultStatusDetails:tillVaultStatus[] = []\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultStatusComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private dataService:DataService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    // this.dataService.getTillVaultStatus.subscribe(data =>{\r\n    //   console.log(data)\r\n    //   this.vaultStatus = typeof this.vaultStatus === 'object' ? data : {};\r\n    // });\r\n    // this.buildItemForm(this.vaultStatus);\r\n\r\n    setTimeout(() => {  \r\n      this.vaultStatus = JSON.parse(localStorage.getItem('fetchVaultStatus'));\r\n      if(this.vaultStatus == null || this.vaultStatus == undefined){\r\n        this.readorWrite=false;\r\n        this.buildItemForm({})\r\n      }       \r\n      else if(this.vaultStatus.id != null || this.vaultStatus.id != undefined){\r\n      this.loader.open();\r\n      this.id = this.vaultStatus.id;\r\n      this.buildItemForm(this.vaultStatus)\r\n      this.auditData = this.vaultStatus\r\n      console.log( this.auditData)\r\n      this.isEdit = true;\r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.loader.close();\r\n      }\r\n    }, 1000)\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.tillVaultForm = this.fb.group({\r\n      bankCode: [item.bankCode || '', [Validators.required]],\r\n      branchCode: [item.branchCode || '', [Validators.required, Validators.minLength(1), Validators.maxLength(6)]],\r\n      entityCode: [item.entityCode || '', [Validators.required]],\r\n      tillId: [item.tillId || '', [Validators.required, Validators.minLength(1), Validators.maxLength(19)]],\r\n      userId: [item.userId || '', [Validators.required, Validators.minLength(1), Validators.maxLength(255)]],\r\n      tillVaultStatus: [item.tillVaultStatus || '', [Validators.required, Validators.minLength(1), Validators.maxLength(5)]],\r\n      tvOpenTime : [new Date(item.tvOpenTime) || '', [Validators.required]],\r\n      tvClosingTime : [new Date(item.tvClosingTime) || '', [Validators.required]],\r\n      id: [item.id || null],\r\n      loggedInuser : [item.loggedInUser || '']\r\n    })\r\n  }\r\n\r\n  alphakeyPress(event: any) {\r\n    const pattern = /[0-9a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTillVaultStatusById(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsFortillvaultStatus(payload).subscribe((data) => {\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  submit() {\r\n    let  openTime = this.convertDate(this.tillVaultForm.controls.tvOpenTime.value);\r\n    this.tillVaultForm.value['tvOpenTime'] = openTime;\r\n\r\n    let  closeTime = this.convertDate(this.tillVaultForm.controls.tvClosingTime.value);\r\n    this.tillVaultForm.value['tvClosingTime'] = closeTime;\r\n\r\n    if(this.tillVaultForm.invalid){\r\n      return;\r\n    }else{\r\n      this.loader.open();\r\n      // this.tillVaultForm.value.tvOpenTime =this.convertDate(this.tillVaultForm.value.tvOpenTime);\r\n      // this.tillVaultForm.value.tvClosingTime =this.convertDate(this.tillVaultForm.value.tvClosingTime);\r\n      this.tillData = this.till.find(x => x.tillVaultCode == this.tillVaultForm.value.tillId);\r\n      this.tillVaultForm.value.tillId = this.tillData.id;\r\n      this.tillVaultForm.value.loggedInUser = this.loggedInUser.userName;\r\n\r\n      this.apiService.upsertTillVaultStatus(this.tillVaultForm.value).subscribe((resp) => {\r\n      this.loader.close();\r\n      this.router.navigate([`/maintenance/main/tillVaultStatus`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n            localStorage.removeItem('fetchVaultStatus');\r\n        });\r\n      },(err:any) =>{\r\n        this.loader.close();\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n      }  \r\n    // let payloadObj : any = {};\r\n    // payloadObj = this.tillVaultForm.value;\r\n    // payloadObj.id = this.Id;\r\n    // this.dialogRef.close(payloadObj);\r\n  }\r\n\r\n  goBack() {\r\n    localStorage.removeItem('fetchVaultStatus');\r\n    this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n  }\r\n\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n      // this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n      // this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n  let tillOrVault =\"T\";\r\n  this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n    this.till = resp;\r\n });\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.entity.push(resp[i]);\r\n        }\r\n      }\r\n      // this.entity = resp;\r\n    });\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format(\"YYYY-MMM-DD HH:mm:ss\");\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  trackByEntityCode(data){\r\n    return data.entityCode;\r\n  }\r\n\r\n  trackByBankCode(data){\r\n    return data.bankCode;\r\n  }\r\n\r\n  trackByBranchCode(data){\r\n    return data.branchCode;\r\n  }\r\n\r\n  trackByTill(data){\r\n    return data.tillVaultCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Status Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Till Vault Status Details</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Till Vault Status Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Till Vault Status Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 *ngIf=\"!isEdit\" matDialogTitle>Add Till Vault Status Details</h1>\r\n    <h1 *ngIf=\"isEdit\" matDialogTitle>Edit Till Vault Status Details</h1> -->\r\n    <form [formGroup]=\"tillVaultForm\" *ngIf=\"tillVaultForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"entityCode\" [formControl]=\"tillVaultForm.controls['entityCode']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of entity; trackBy: trackByEntityCode;\" [value]=\"data.entityCode\">\r\n                {{data.entityCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('entityCode').touched && !tillVaultForm.get('entityCode').valid\">\r\n              Entity Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n          <mat-label>Entity Code  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n              [formControl]=\"tillVaultForm.controls['entityCode']\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"bankCode\" [formControl]=\"tillVaultForm.controls['bankCode']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of bankCode; trackBy: trackByBankCode;\" [value]=\"data.bankCode\">\r\n                {{data.bankCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('bankCode').touched && !tillVaultForm.get('bankCode').valid\">\r\n              Bank Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Code  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n              [formControl]=\"tillVaultForm.controls['bankCode']\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"branchCode\" [formControl]=\"tillVaultForm.controls['branchCode']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of branchCode; trackBy: trackByBranchCode;\" [value]=\"data.branchCode\">\r\n                {{data.branchCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('branchCode').touched && !tillVaultForm.get('branchCode').valid\">\r\n              Branch Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n          <mat-label>Branch Code  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n              [formControl]=\"tillVaultForm.controls['branchCode']\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\" *ngIf=\"!readorWrite\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"tillId\" [formControl]=\"tillVaultForm.controls['tillId']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of till; trackBy: trackByTill;\" [value]=\"data.tillVaultCode\">\r\n                {{data.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('tillId').touched && !tillVaultForm.get('tillId').valid\">\r\n              Till Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n          <mat-label>Till Id  *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n              [formControl]=\"tillVaultForm.controls['tillId']\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>User Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"userId\" minlength=\"1\" maxlength=\"255\" (keypress)=alphakeyPress($event)\r\n              [formControl]=\"tillVaultForm.controls['userId']\">\r\n            <mat-error *ngIf=\"tillVaultForm.get('userId').touched && !tillVaultForm.get('userId').valid\">\r\n              User Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Till Vault Status *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select \r\n            name=\"tillVaultStatus\"\r\n            [formControl]=\"tillVaultForm.controls['tillVaultStatus']\"\r\n          >\r\n            <mat-option [value]=\"'Open'\" selected> Open </mat-option>\r\n            <mat-option [value]=\"'Closed'\"> Closed </mat-option>\r\n          </mat-select>\r\n            <!-- <input matInput name=\"tillVaultStatus\" minlength=\"1\" maxlength=\"5\" (keypress)=alphakeyPress($event)\r\n              [formControl]=\"tillVaultForm.controls['tillVaultStatus']\"> -->\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('tillVaultStatus').touched && !tillVaultForm.get('tillVaultStatus').valid\">\r\n              Till Vault Status is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n          <mat-label>Till Vault Status *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n              [formControl]=\"tillVaultForm.controls['tillVaultStatus']\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>TV Open Time *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  [readonly]=\"readorWrite\" placeholder=\"Select Date\" [formControl]=\"tillVaultForm.controls['tvOpenTime']\" [min]=\"tillVaultForm.get('tvOpenTime').value\"\r\n              matInput name=\"tvOpenTime\" [matDatepicker]=\"picker\" readonly>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n              <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"tillVaultForm.get('tvOpenTime').touched && !tillVaultForm.get('tvOpenTime').valid\">\r\n              TV Open Time is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>TV Closing Time *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  [readonly]=\"readorWrite\" placeholder=\"Select Date\" [formControl]=\"tillVaultForm.controls['tvClosingTime']\"\r\n              [min]=\"tillVaultForm.get('tvClosingTime').value\" matInput name=\"tvClosingTime\" [matDatepicker]=\"picker1\"\r\n              readonly>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\">\r\n              <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n            </mat-datepicker-toggle>\r\n            <mat-datepicker #picker1></mat-datepicker>\r\n            <mat-error *ngIf=\"tillVaultForm.get('tvClosingTime').touched && !tillVaultForm.get('tvClosingTime').valid\">\r\n              TV Closing Time is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"tillVaultForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(tillVaultForm.invalid || tillVaultForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AuditLogComponent } from \"../../audit-log/audit-log.component\";\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: \"app-add-currency-pair-rates-maintenance\",\r\n  templateUrl: \"./add-currency-pair-rates-maintenance.component.html\",\r\n  styleUrls: [\"./add-currency-pair-rates-maintenance.component.scss\"],\r\n})\r\nexport class AddCurrencyPairRatesMaintenanceComponent implements OnInit {\r\n  @ViewChild(\"auditLog\") auditLog: AuditLogComponent;\r\n  public branchForm: FormGroup;\r\n \r\n  currencies: any = [];\r\n  data: any;\r\n \r\n  loggedInUser: any;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow: boolean = false;\r\n  currencyPairRateIsEdit: any;\r\n  id: any;\r\n  auditData: any;\r\n  isAuditData: boolean = false;\r\n  currency: any;\r\n  branchCode: any[] = [];\r\n  minDate = new Date();\r\n  currencyPair: any[] = [];\r\n  readorWrite: boolean=true;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private ls: LocalStoreService,\r\n    private route: ActivatedRoute,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params.get(\"id\"));\r\n      this.currencyPairRateIsEdit = params.get(\"isEdit\");\r\n      console.log(\"this.entityIsEdit\", this.currencyPairRateIsEdit);\r\n      if (params.get(\"isEdit\") == \"Yes\") {\r\n        this.isReadOnly = false;\r\n        this.isView = true;\r\n        this.editNow = true;\r\n      } else if (params.get(\"isEdit\") == \"No\") {\r\n        this.isReadOnly = true;\r\n        this.isView = true;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == \"false\") {\r\n        this.isReadOnly = false;\r\n        this.isView = false;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == null) {\r\n        this.isView = false;\r\n      }\r\n      if (params.get(\"id\")) {\r\n        this.isEdit = true;\r\n        this.id = params.get(\"id\");\r\n        this.apiService\r\n          .getCurrencyPairRatesById(params.get(\"id\"))\r\n          .subscribe((resp) => {\r\n            console.log(resp);\r\n            this.buildItemForm(resp);\r\n            this.auditData = resp;\r\n            this.isAuditData = true;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n          });\r\n      } else {\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n    this.buildItemForm({});\r\n    this.fetchCurrencyPair();\r\n    this.getBranchCode();\r\n    this.loggedInUser = this.ls.getItem(\"ICUST_USER\");\r\n    console.log(this.loggedInUser);\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    console.log(\"selected item 2::\", item);\r\n    console.log(\"item.rateDate\",item.rateDate)\r\n   \r\n    if(item.rateDate){\r\n      item.rateDate = item ? moment(item.rateDate).format() : \"\";\r\n    }\r\n    console.log(\"item.rateDate\",item.rateDate)\r\n    this.branchForm = this.fb.group({\r\n      currencyPairId: [item.currencyPairId || \"\", Validators.required],\r\n      branchCode: [item.branchCode || \"\", Validators.required],\r\n      rateType: [item.rateType || \"\", Validators.required],\r\n      rateDate: [item.rateDate || \"\", Validators.required],\r\n      rateSeq: [item.rateSeq || \"\", Validators.required],\r\n      buySpread: [item.buySpread || \"\", Validators.required],\r\n      sellSpread: [item.sellSpread || \"\", Validators.required],\r\n      id: [item.id || \"\"],\r\n      midRate: [item.midRate || \"\", Validators.required],\r\n      buyRate: [item.buyRate || \"\", Validators.required],\r\n      sellRate: [item.sellRate || \"\", Validators.required],\r\n      rateClass: [item.rateClass || \"\", Validators.required],\r\n      authStatus: [item.authStatus || \"\"],\r\n      isActive: [item.isActive || true],\r\n      oneTimeAuth: [item.oneTimeAuth || \"\"],\r\n      recordStatus: [item.recordStatus || \"\"],\r\n      version: [item.version || \"\"],\r\n      loggedInUser: [item.loggedInUser || \"\"],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    let startDate = this.convertDate(this.branchForm.controls.rateDate.value);\r\n    this.branchForm.value['rateDate'] = startDate;\r\n    console.log(\"Form:\", this.branchForm.value);\r\n    // if (this.branchForm.invalid) {\r\n    //   return;\r\n    // } else {\r\n      console.log(\"payload:\", this.branchForm.value);\r\n      this.branchForm.value.loggedInUser = this.loggedInUser.userName;\r\n      this.apiService.saveCurrencyPairRates(this.branchForm.value).subscribe((data) => {\r\n          console.log(\"data\", data);\r\n          if (data != null && this.isEdit == true) {\r\n            \r\n                this.snack.open(\"Data Updated!\", \"OK\", {\r\n                  duration: 4000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                });\r\n              \r\n            this.cdr.markForCheck();\r\n          } else if (data != null || this.isEdit == true) {\r\n            // \r\n            console.log(\"data\", data);\r\n              this.snack.open(\"Data Saved!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n             \r\n            this.cdr.markForCheck();\r\n          }\r\n        });\r\n        this.router.navigate([`/maintenance/main/currencyPairRateMaintenance`]);\r\n    // }\r\n    \r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteEntity(this.auditData.pairRateId)\r\n        .subscribe(data => {\r\n          this.router.navigate([\"/maintenance/main/currencyPairRateMaintenance\"]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([\"/maintenance/main/currencyPairRateMaintenance\"]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        console.log(this.id);\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.updateAuditLogsForCurrencyPairRates(payload).subscribe((data) => {\r\n            console.log(data);\r\n            this.auditData = data;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n            this.isAuditData = true;\r\n            this.dataService.sendClickEvent();\r\n            let message = \"\";\r\n            switch (operation) {\r\n              case \"open\":\r\n                message = \"opened\";\r\n                break;\r\n              case \"close\":\r\n                message = \"closed\";\r\n                break;\r\n              case \"auth\":\r\n                message = \"authorized\";\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n      }}))\r\n    \r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    console.log(\"PRessed\", event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  fetchCurrencyPair(){\r\n    this.apiService.getCurrencyPair().subscribe((resp:any) =>{\r\n     console.log(\"currencyPair\",resp);\r\n     for(let i=0; i< resp.length;i++){\r\n      if(resp[i].authStatus==\"A\" )\r\n      this.currencyPair.push(resp[i]);\r\n     }\r\n    })\r\n  }\r\n\r\n  getBranchCode(){\r\n    this.apiService.getBranchCode().subscribe(branchCodeResp=>{\r\n      console.log(branchCodeResp);\r\n      for(let i=0; i<branchCodeResp.length;i++){\r\n        if(branchCodeResp[i].authStatus==='A'){\r\n          this.branchCode.push(branchCodeResp[i]);\r\n        }\r\n      }\r\n      console.log(this.branchCode);\r\n      console.log(\"branchCode\",branchCodeResp);\r\n      // this.branchCode=branchCodeResp;\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/currencyPairRateMaintenance\"]);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Pair Rate Maintenance > <span *ngIf=\"!isEdit\">New</span> <span *ngIf=\"isEdit\">Edit</span> Currency Pair Rate</small> </h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <span *ngIf=\"isEdit\" class=\"text-large\">\r\n        Edit Currency Pair Rate\r\n    </span>\r\n    <span *ngIf=\"!isEdit\" class=\"text-large\">\r\n        New Currency Pair Rate\r\n    </span>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"branchForm\" (ngSubmit)=\"submit()\" class=\"mt-32\">\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                    <mat-label>Currency Pair *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"currencyPairId\" formControlName=\"currencyPairId\" placeholder=\"Currency Pair\">\r\n                            <mat-option *ngFor=\"let item of currencyPair\" [value]=\"item.id\">\r\n                                {{ item.id }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('currencyPairId').touched && !branchForm?.get('currencyPairId').valid\">\r\n                            Currency Pair is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n                    <mat-label>Currency Pair *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"rateSeq\"\r\n                        formControlName=\"currencyPairId\"\r\n                        />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                    <mat-label>Branch Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"branchCode\" formControlName=\"branchCode\" placeholder=\"Branch Code\">\r\n                            <mat-option *ngFor=\"let data of branchCode\" [value]=\"data.branchCode\">\r\n                                {{data.branchCode}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"branchForm?.get('branchCode').touched && !branchForm?.get('branchCode').valid\">\r\n                            Bank Code is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n                    <mat-label>Branch Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"rateSeq\"\r\n                        formControlName=\"branchCode\"\r\n                        />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n                    <mat-label>Rate Type *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"currency\" placeholder=\"Rate Type \"  \r\n                            [formControl]=\"branchForm.controls['rateType']\" required>\r\n                            <mat-option>Select</mat-option>\r\n                            <mat-option value=\"standard\">STANDARD</mat-option>\r\n                            <mat-option value=\"cash\">CASH</mat-option>\r\n                            <mat-option value=\"walkin\">WALKIN</mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"branchForm?.get('rateType').touched && !branchForm?.get('rateType').valid\">\r\n                            Rate Type is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"readorWrite\">\r\n                    <mat-label>Rate Type *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"rateSeq\"\r\n                            [formControl]=\"branchForm.controls['rateType']\" \r\n                        />\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Rate Date *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input  matInput [matDatepicker]=\"appDatepicker\" \r\n                        [min]=\"minDate\" \r\n                        name=\"date\" readonly formControlName=\"rateDate\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" [disabled]=\"readorWrite\" ></mat-datepicker-toggle>\r\n                        <mat-datepicker #appDatepicker ></mat-datepicker>\r\n                        <mat-error *ngIf=\"branchForm.get('rateDate').hasError('required') && branchForm.get('rateDate').touched\">\r\n                            Rate Date is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    \r\n                </div>\r\n  \r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Rate Seq *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"rateSeq\" placeholder=\"Rate Seq\"\r\n                            [formControl]=\"branchForm.controls['rateSeq']\" \r\n                            (keypress)=_keyPress($event) maxlength=\"10\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('rateSeq').touched && !branchForm?.get('rateSeq').valid\">\r\n                            Rate Seq is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Buy Spread *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"buySpread\" placeholder=\"Buy Spread \"\r\n                            [formControl]=\"branchForm.controls['buySpread']\"\r\n                            (keypress)=_keyPress($event) maxlength=\"10\"\r\n                         />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('buySpread').touched && !branchForm?.get('buySpread').valid\">\r\n                            Buy Spread is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Sell Spread *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"sellSpread\" placeholder=\"Sell Spread \"\r\n                            [formControl]=\"branchForm.controls['sellSpread']\"\r\n                            (keypress)=_keyPress($event) maxlength=\"10\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('sellSpread').touched && !branchForm?.get('sellSpread').valid\">\r\n                            Sell Spread  is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Mid Rate *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"midRate\" placeholder=\"Mid Rate\"\r\n                            [formControl]=\"branchForm.controls['midRate']\" \r\n                            (keypress)=_keyPress($event) maxlength=\"10\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('midRate').touched && !branchForm?.get('midRate').valid\">\r\n                            Mid Rate is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Buy Rate *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"buyRate\" placeholder=\"Buy Rate\"\r\n                            [formControl]=\"branchForm.controls['buyRate']\" \r\n                            (keypress)=_keyPress($event) maxlength=\"10\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('buyRate').touched && !branchForm?.get('buyRate').valid\">\r\n                            Buy Rate is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Sell Rate *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input matInput name=\"sellRate\" placeholder=\"Sell Rate\"\r\n                            [formControl]=\"branchForm.controls['sellRate']\" \r\n                            (keypress)=_keyPress($event) maxlength=\"10\" [readonly]=\"readorWrite\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('sellRate').touched && !branchForm?.get('sellRate').valid\">\r\n                            Sell Rate is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Rate Class *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input matInput name=\"rateClass\" placeholder=\"Rate Class\"\r\n                            [formControl]=\"branchForm.controls['rateClass']\" \r\n                            (keypress)=_keyPress($event) maxlength=\"10\" [readonly]=\"readorWrite\"\r\n                        />\r\n                        <mat-error\r\n                            *ngIf=\"branchForm?.get('rateClass').touched && !branchForm?.get('rateClass').valid\">\r\n                            Rate Class is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n                    <div>\r\n                        <button *ngIf=\"!isEdit\" mat-raised-button color=\"primary\"\r\n                            [disabled]=\"!(branchForm.valid && branchForm.dirty)\" (click)=\"submit()\">\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                    <div [hidden]=\"readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"submit(branchForm.value)\" [disabled]=\"!branchForm.valid\">\r\n                            Save\r\n                        </button>\r\n                    </div>\r\n                    <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                          Edit\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                          Authorize\r\n                        </button>&nbsp;&nbsp;\r\n                      </div> \r\n                      <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                          Reopen\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                          Close\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                          Delete\r\n                        </button> &nbsp;&nbsp;\r\n                      </div>\r\n                     \r\n                      <button\r\n                        mat-raised-button\r\n                        color=\"warn\"\r\n                        type=\"button\"\r\n                        (click)=\"goBack()\"\r\n                      >\r\n                        Exit\r\n                      </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n    <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { TransactionDenominationHistoryComponent } from \"../transaction-denomination-history/transaction-denomination-history.component\";\r\n\r\n@Component({\r\n  selector: 'app-transaction-denomination-summary',\r\n  templateUrl: './transaction-denomination-summary.component.html',\r\n  styleUrls: ['./transaction-denomination-summary.component.scss'],\r\n  animations:rumangoAnimations\r\n})\r\nexport class TransactionDenominationSummaryComponent implements OnInit {\r\n\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n  users: any[] = [];\r\n  currency: string[] = [];\r\n  till: string[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getItems();\r\n    this.getTransactionDenomination();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n\r\n  openPopUp(data: any = {}, isNew?) {\r\n    let title = isNew\r\n      ? \"Add New Transaction Denomination\"\r\n      : \"Update Transaction Denomination\";\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n      TransactionDenominationHistoryComponent,\r\n      {\r\n        width: \"720px\",\r\n        disableClose: true,\r\n        data: {\r\n          title: title,\r\n          payload: data,\r\n          currency: this.currency,\r\n          till: this.till,\r\n          branchCode: this.branchCode,\r\n          bankCode: this.bankCode,\r\n        },\r\n      }\r\n    );\r\n    dialogRef.afterClosed().subscribe((res) => {\r\n      if (!res) {\r\n        return;\r\n      }\r\n      this.loader.open();\r\n      if (isNew) {\r\n        this.apiService.saveoftransDenom(res).subscribe((resp) => {\r\n          this.loader.close();\r\n          this.getTransactionDenomination();\r\n          this.snack.open(`Record Added!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      } else {\r\n        this.apiService.saveoftransDenom(res).subscribe((resp) => {\r\n          this.getTransactionDenomination();\r\n          this.loader.close();\r\n          this.snack.open(`Record Updated!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.txtReference}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteTransactionDenomination(row.id).subscribe(\r\n            (data) => {},\r\n            (err) => {\r\n              if (err.status === 200) {\r\n                this.getTransactionDenomination();\r\n                this.loader.close();\r\n                this.snack.open(`Record Deleted!'`, \"OK\", {\r\n                  duration: 2000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n  getTransactionDenomination() {\r\n    this.apiService.getTransactionDenomination().subscribe((resp) => {\r\n      this.users = resp;\r\n      this.items = this.users;\r\n    });\r\n  }\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    this.apiService.getTillId().subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"ml-16\">\r\n    <span class=\"mat-heading-label \">Transaction Denomination History</span>\r\n    <span fxFlex></span>\r\n    <button mat-flat-button color=\"primary\" (click)=\"openPopUp({}, true)\" class=\"mr-38\">ADD TRANSACTION DENOMINATION</button>\r\n  </div>\r\n  <mat-card class=\"p-0\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\"> \r\n    <mat-card-content class=\"p-0\">\r\n      <ngx-datatable\r\n            class=\"material ml-0 mr-0\"\r\n            [rows]=\"items\"\r\n            [columnMode]=\"'force'\"\r\n            [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\"\r\n            [scrollbarH]=\"true\"\r\n            [limit]=\"6\"\r\n            [rowHeight]=\"50\">\r\n            <ngx-datatable-column name=\"Transaction Referance\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{ row?.txtReference}}\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Denomination Code\" [flexGrow]=\"1\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                  {{ row?.denomCode}}\r\n                </ng-template>\r\n              </ngx-datatable-column>\r\n              <ngx-datatable-column name=\"Denomination Unit\" [flexGrow]=\"1\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                  {{ row?.denomUnit}}\r\n                </ng-template>\r\n              </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Status\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"row.isActive\">{{row.isActive ? 'active' : 'inactive'}}</mat-chip>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(row)\"><mat-icon>edit</mat-icon></button>\r\n                <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"deleteItem(row)\"><mat-icon>delete</mat-icon></button>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n          </ngx-datatable>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user-maintenance',\r\n  templateUrl: './user-maintenance.component.html',\r\n  styleUrls: ['./user-maintenance.component.scss']\r\n})\r\nexport class UserMaintenanceComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['userId', 'userName','roleId', 'authStatus','recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'userName', value: ' User Name' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public items: any[];\r\n  public userData: any[];\r\n  public getItemSub: Subscription;\r\n  users: any[];\r\n\r\n  constructor(private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private _liveAnnouncer: LiveAnnouncer,private downloadService: DownloadService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchUserInfo();\r\n  }\r\n  fetchUserInfo(){\r\n    this.apiService.getUserInfo().subscribe((data: any) => {\r\n      for(let i=0;i<data.length;i++){\r\n\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/userMaintenance/addUserMaintenance\"]);\r\n  }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n    \r\n  }\r\n  deleteItem(element) {\r\n    if(element.authStatus == 'Authorized'){\r\n      this.snack.open('Authorized record cannot be deleted', 'error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      return;\r\n    }\r\n    this.confirmService.confirm({message: `Delete ${element.id}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteUserById(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n      \r\n              \r\n              this.fetchUserInfo();\r\n              \r\n            })\r\n        }\r\n        \r\n      });\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/userMaintenance/addUserMaintenance\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  \r\n  masterpdf() {\r\n    this.downloadService.downloadFiles(\r\n      \"userScreen\",\r\n      this.users\r\n    );\r\n  }\r\n\r\n}\r\n","<!-- <div fxLayoutAlign=\"center\">\r\n    <mat-spinner ></mat-spinner>\r\n  </div> -->\r\n  <h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > User Maintenance  \r\n    </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button >\r\n      <mat-icon (click)=\"goBack()\">arrow_back</mat-icon>\r\n    </button>\r\n    <span class=\"text-large\">\r\n      User Maintenance\r\n    </span>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item>\r\n        <span>Export</span>\r\n      </button>\r\n      <button  mat-menu-item (click)=\"masterpdf()\">\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n  <mat-card class=\"mt-32\">\r\n\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            User Maintenance \r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  \r\n    <mat-card-content>\r\n      <div fxLayout=\"row\" class=\"w-full\"  fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n        <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Filter By</mat-label>\r\n              <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n                <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n                <mat-option value=\"0\" disabled>Select</mat-option>\r\n                <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                  {{filter.value}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Search</mat-label>\r\n              <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\"> -->\r\n              <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\">\r\n              <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n          <div style=\"padding-top: 3px;\">\r\n            <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n          </div>\r\n          <div class=\"filterDiv\">\r\n           <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n           </button>\r\n         </div>\r\n       </div>\r\n      </div>\r\n      <div class=\"mat-elevation-z0\">\r\n        <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n          <ng-container matColumnDef=\"userId\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by User ID\"> User ID\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.userId}} </mat-cell>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"userName\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by User Name\"> User Name\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.userName}} </mat-cell>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"email\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Email\"> Email\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"mobile\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Mobile\"> Mobile\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.mobile}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"roleId\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Role Id\"> Role ID\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.roleId}} </mat-cell>\r\n          </ng-container>\r\n         \r\n          <ng-container matColumnDef=\"firstName\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by First Name\"> First Name\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.firstName}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"lastName\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Last Name\"> Last Name\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.lastName}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"language\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Language\"> Language\r\n              \r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.language}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"authStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"recordStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n          </ng-container>\r\n          \r\n  \r\n  \r\n          <!-- <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <div>\r\n               <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openEdit(element)\" >edit</mat-icon>\r\n            </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n            </div>\r\n            </mat-cell>\r\n          </ng-container> -->\r\n          <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <button\r\n                mat-icon-button\r\n                mat-sm-button\r\n                color=\"primary\"\r\n                class=\"mr-16\"\r\n                (click)=\"openEdit(element)\"\r\n              >\r\n                <mat-icon>edit</mat-icon>\r\n              </button>\r\n              <button\r\n                mat-icon-button\r\n                mat-sm-button\r\n                color=\"warn\"\r\n                [disabled]=\"element.authStatus == 'Authorized'\"\r\n                (click)=\"deleteItem(element)\"\r\n              >\r\n                <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </mat-cell>\r\n          </ng-container>\r\n  \r\n          <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n          <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n        <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { DataService } from 'app/shared/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-sub-menu',\r\n  templateUrl: './sub-menu.component.html',\r\n  styleUrls: ['./sub-menu.component.scss']\r\n})\r\nexport class SubMenuComponent implements OnInit {\r\n  submenus: any\r\n  constructor(private dataService: DataService, private _location: Location ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataService.getMenus.subscribe((data:any) => {\r\n      this.submenus = data;\r\n    })\r\n  }\r\n\r\n  back() {\r\n    this._location.back();\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n        <button mat-icon-button (click)=\"back()\">\r\n            <mat-icon>arrow_back</mat-icon>\r\n          </button> \r\n          <span class=\"text-large\">\r\n            {{ submenus.screenName }}\r\n          </span>\r\n          <span fxFlex></span>\r\n       </div>\r\n</div>\r\n\r\n   <div fxLayout=\"row wrap\" class=\"mt-32\">\r\n     <div fxFlex=\"50\" *ngFor=\"let menu of submenus.sub\">\r\n     \r\n        <mat-card (click)=\"navigateToScreen(menu)\">\r\n            <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-around center\">\r\n                <div fxFlex=\"65\">\r\n                    <mat-card-content>\r\n                        <h2 class=\"\">{{ menu.screenName }}</h2>\r\n                        <span class=\"card-text-label\">{{ 'This covers ordination product details. Product preferances, Intrest Charges and additionalattributes.' }}</span>\r\n                      </mat-card-content>\r\n                    \r\n                </div>\r\n                <div fxFlex=\"30\" style=\"text-align: right;\">\r\n                    <img class=\"image\" width=\"100\" height=\"100\" src=\"assets/images/funding.png\" alt=\"photo\">\r\n                </div>\r\n            </div>\r\n\r\n          </mat-card>\r\n    \r\n     </div>\r\n     \r\n   \r\n  </div>\r\n\r\n    <!-- <div fxLayout=\"row wrap\" class=\"mt-32\">\r\n        <div fxFlex=\"50\" *ngFor=\"let card of obs | async\">\r\n            <mat-card (click)=\"navigateToScreen(card.state)\">\r\n                <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"space-around center\">\r\n                    <div fxFlex=\"65\">\r\n                        <mat-card-content>\r\n                            <h2 class=\"\">{{ card.title }}</h2>\r\n                            <span class=\"card-text-label\">{{ card.text }}</span>\r\n                          </mat-card-content>\r\n                        \r\n                    </div>\r\n                    <div fxFlex=\"30\" style=\"text-align: right;\">\r\n                        <img class=\"image\" width=\"100\" height=\"100\" src=\"assets/images/funding.png\" alt=\"photo\">\r\n                    </div>\r\n                </div>\r\n\r\n              </mat-card>\r\n        </div>\r\n  </div> -->","import { ChangeDetectorRef, Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { TillVaultMasterSummaryComponent } from '../../till-vault-master-summary/till-vault-master-summary/till-vault-master-summary.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from 'app/views/maintenance/audit-log/audit-log.component';\r\nimport { tillVaultMaster } from 'app/shared/models/tillvaultmaster';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-master-popup',\r\n  templateUrl: './till-vault-master-popup.component.html',\r\n  styleUrls: ['./till-vault-master-popup.component.scss']\r\n})\r\nexport class TillVaultMasterPopupComponent implements OnInit {\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  public itemForm: FormGroup;\r\n  tillVaultForm:FormGroup;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n  entityIsEdit: boolean;\r\n  entityCode: any;\r\n  id: number;\r\n  data:any;\r\n  bankCode: any;\r\n  entity: any;\r\n  loggedInUser : any;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n  readorWrite: boolean=true;\r\n\r\n\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultMasterSummaryComponent>,\r\n     private router:Router, private snack: MatSnackBar,\r\n    private fb: FormBuilder,private api:ApiService, private route : ActivatedRoute,\r\n      private cdr: ChangeDetectorRef, private dataService : DataService,    private ls : LocalStoreService,\r\n      private apiService:ApiService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getEntityDropdown();\r\n    this.getBankCode();\r\n    this.buildItemForm({});\r\n    \r\n\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.entityIsEdit = params.get('isEdit');//save\r\n      if(params.get('isEdit') == 'Yes'){\r\n         this.isReadOnly = false;\r\n       this.isView= true;\r\n       this.editNow = true;\r\n      }\r\n      else if(params.get('isEdit') == 'No'){\r\n         this.isReadOnly = true;\r\n         this.isView= true;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == 'false'){\r\n        this.isReadOnly = false;\r\n        this.isView= false;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == null){\r\n      this.isView= false;\r\n      }\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.api.editEntityById(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n        });\r\n        this.api.getTillVaultById(params.get('id')).subscribe((resp:any) =>{\r\n          this.buildItemForm(resp);\r\n          if( resp.authStatus==\"U\" ){\r\n            resp.authDate =\"\"\r\n            resp.authBy=\"\"\r\n          }\r\n          this.auditData = resp;\r\n          this.isAuditData = true;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n       });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n\r\n    }\r\n\r\n    ); \r\n   \r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n   \r\n\r\n  }\r\n \r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      authStatus: [item.authStatus || ''],\r\n      bankCode: [item.bankCode || '',[Validators.required]],\r\n      tillVaultCode:[item.tillVaultCode || '',[Validators.required]],\r\n      entityCode:[item.entityCode || '',[Validators.required]], \r\n      tillVaultDesc:[item.tillVaultDesc || '',[Validators.required]],\r\n      isActive:[item.isActive || true],\r\n      tillOrVault:[item.tillOrVault || '',[Validators.required]],\r\n      id: [item.id || ''],\r\n      oneTimeAuth:[item.oneTimeAuth || ''],\r\n      recordStatus:[item.recordStatus || ''],\r\n      version:[item.version || ''],\r\n      // primaryVault:[item.primaryVault || '',[Validators.required]],\r\n      loggedInUser:[item.loggedInUser || '']\r\n  \r\n    });\r\n    // this.itemForm.get('entityCode').setValue(this.entityCode);\r\n  \r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/tillVaultltMaster`]);\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTillVaultMaster(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultltMaster`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultltMaster`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser;\r\n    this.apiService.getAuditLogsFortillvaultMaster(payload).subscribe((data) => {         \r\n      if( data.authStatus==\"U\" ){\r\n      data.authDate = \"\"\r\n      data.authBy = \"\"\r\n      }\r\n\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n  \r\n  submit() {\r\n    if(this.itemForm.invalid){\r\n    return;\r\n    }else{\r\n    this.itemForm.value.loggedInUser = this.loggedInUser;\r\n    this.api.saveTillVaultMaster(this.itemForm.value).subscribe(data => {\r\n      if(data != null && this.isEdit == true){\r\n        this.router.navigate([`/maintenance/main/tillVaultltMaster`]).then(_=>{\r\n                this.snack.open('Data Updated!', 'OK', \r\n                { duration: 4000 , \r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",});\r\n                });       \r\n        this.cdr.markForCheck();\r\n      }\r\n      else if(data != null || this.isEdit == true){\r\n       // \r\n        this.router.navigate([`/maintenance/main/tillVaultltMaster`]).then(_=>{\r\n          this.snack.open('Data Saved!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n          });\r\n        this.cdr.markForCheck();\r\n       }\r\n    }) \r\n    }  \r\n  }\r\n\r\n  getEntityDropdown(){\r\n    this.api.getEntityDropdown().subscribe((data) => {\r\n      this.entityCode = data;\r\n    });\r\n    \r\n  }\r\n  getBankCode(){\r\n    this.api.getBankCode().subscribe(( bankCode: any)=> {\r\n      this.bankCode=bankCode;\r\n      });\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n      this.entity = resp;\r\n    });\r\n  }\r\n \r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  dataByEntity(index,entityC){\r\n    return entityC.entityCode;\r\n  }\r\n  dataByBank(index,bankC){\r\n    return bankC.bankCode;\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Till Vault Master</small>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Till Vault Master</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Till Vault Master</h1>\r\n</div>\r\n<mat-card>\r\n  <mat-card-content>\r\n <!-- <form [formGroup]=\"tillVaultForm\" (ngSubmit)=\"submit()\" class=\"m-333\">-->\r\n     \r\n  <!-- <h1>Add New Till Vault Master</h1> -->\r\n  <form [formGroup]=\"itemForm\" (ngSubmit)=\"submit()\">\r\n  <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n    <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n      <mat-label>Entity Code</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-select \r\n        name=\"entity\"\r\n        formControlName=\"entityCode\"\r\n        placeholder=\"Entity Code\">\r\n       <mat-option *ngFor=\"let entity of entityCode; trackBy:dataByEntity\" [value]=\"entity.entityCode\">\r\n        {{ entity.entityCode }}\r\n      </mat-option>\r\n      </mat-select>\r\n        <mat-error\r\n        *ngIf=\"itemForm?.get('entityCode').touched && !itemForm?.get('entityCode').valid\">\r\n        Entity Code is Required\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"readorWrite\">\r\n      <mat-label>Entity Code</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultCode\"\r\n       formControlName=\"entityCode\" \r\n      >\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n      \r\n            <mat-label>BankCode</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"bankCode\"  formControlName=\"bankCode\" placeholder=\"Bank Code\"\r\n               >\r\n                <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBank\"  [value]=\"data.bankCode\">\r\n                {{data.bankCode}}\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n        *ngIf=\"itemForm?.get('bankCode').touched && !itemForm?.get('bankCode').valid\">\r\n        Bank Code is Required\r\n    </mat-error>\r\n          </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"readorWrite\">\r\n      <mat-label>Bank Code</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultCode\"\r\n       formControlName=\"bankCode\" \r\n      >\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n     \r\n        <mat-label>Till Or Vault</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <mat-select name=\"tillOrVault\" formControlName=\"tillOrVault\" placeholder=\"Till Or Vault\"\r\n            >\r\n            <mat-option value=\"T\">Till</mat-option>\r\n            <mat-option value=\"V\">Vault</mat-option>\r\n        </mat-select>\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('tillOrVault').touched && !itemForm.get('tillOrVault').valid\">\r\n        TillOrVault is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"readorWrite\">\r\n      <mat-label>Till Or Vault</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultCode\"\r\n       formControlName=\"tillOrVault\" \r\n      >\r\n      </mat-form-field>\r\n    </div>\r\n  \r\n    <div fxFlex=\"25\"  class=\"pr-16\">\r\n      <mat-label>Till Vault Code</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultCode\"\r\n       formControlName=\"tillVaultCode\" placeholder=\"Till Vault Code\"\r\n      >\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('tillVaultCode').touched && !itemForm.get('tillVaultCode').valid\">\r\n        Till Vault Code is Required!\r\n       </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <!-- <div fxLayoutAlign=\"space-between center\"  fxLayoutGap=\"15px\" > -->\r\n    <div fxFlex=\"23.5\" class=\"pr-16\">\r\n      <mat-label>Till Vault Desc</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultDesc\" formControlName=\"tillVaultDesc\"\r\n     \r\n        placeholder=\"TillVaultDesc\">\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('tillVaultDesc').touched && !itemForm.get('tillVaultDesc').valid\">\r\n        Till Vault Desc is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <!-- <div fxFlex=\"50\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n      <mat-label>Primary Vault </mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-select name=\"primaryVault\"  formControlName=\"primaryVault\" placeholder=\"PrimaryVault\"\r\n            >\r\n            <mat-option value=\"Y\">Y</mat-option>\r\n            <mat-option value=\"N\">N</mat-option>\r\n        </mat-select>\r\n          <mat-error\r\n          *ngIf=\"itemForm.get('primaryVault').touched && !itemForm.get('primaryVault').valid\">\r\n          primaryVault is Required!\r\n      </mat-error>\r\n        </mat-form-field>\r\n    </div> -->\r\n    <!-- </div> -->\r\n    <!-- <div fxFlex=\"25\"  class=\"pr-16\" *ngIf=\"readorWrite\">\r\n      <mat-label>Primary Vault</mat-label>\r\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n        <input\r\n        matInput  [readonly]=\"readorWrite\"\r\n        name=\"tillVaultCode\"\r\n       formControlName=\"primaryVault\" \r\n      >\r\n      </mat-form-field>\r\n    </div> -->\r\n      \r\n    <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\" *ngIf=\"!isEdit\">Save\r\n      </button>\r\n      </div>\r\n      <div [hidden]=\"readorWrite\">\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\" *ngIf=\"isEdit\">Save\r\n          </button>\r\n      </div>\r\n      <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n          Edit\r\n        </button>&nbsp;&nbsp;\r\n      </div>\r\n      <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n          Authorize\r\n        </button>&nbsp;&nbsp;\r\n      </div> \r\n      <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n          Reopen\r\n        </button>&nbsp;&nbsp;\r\n      </div>\r\n      <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n          Close\r\n        </button>&nbsp;&nbsp;\r\n      </div>\r\n      <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n          Delete\r\n        </button> &nbsp;&nbsp;\r\n      </div>\r\n     \r\n      <button\r\n        mat-raised-button\r\n        color=\"warn\"\r\n        type=\"button\"\r\n        (click)=\"goBack()\"\r\n      >\r\n        Exit\r\n      </button>\r\n    </div>\r\n  </div>\r\n  </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>\r\n\r\n  <!---->\r\n\r\n\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-branch-map-summary',\r\n  templateUrl: './till-vault-branch-map-summary.component.html',\r\n  styleUrls: ['./till-vault-branch-map-summary.component.scss'],\r\n  animations: rumangoAnimations,\r\n})\r\nexport class TillVaultBranchMapSummaryComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = [ 'entityCode', 'parentVaultId', 'authStatus','recordStatus','action'];\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n  users: any[] = [];\r\n  currency: string[] = [];\r\n  till: any[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  id: any;\r\n  fetchBrnMap: any;\r\n  currentUser: string;\r\n  loading: boolean;\r\n  tillData: any;\r\n  vault: any;\r\n  data: any;\r\n  vaultData: any;\r\n  entity: any;\r\n  entityCode: any[] = [];\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  onFileChange(event) {\r\n    console.log('event',event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'tillValutBrnMap');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadFile(uploadData).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.getTellVaultBranchMap();\r\n        this.snack.open('File Uploaded Successfully', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        this.snack.open('Upload Failed', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createPdf() {\r\n    const arr = [];\r\n    const head = [\r\n      ['entityCode', 'parentVaultId', 'authStatus', 'recordStatus'],\r\n    ];\r\n    const body = [];\r\n    this.users.map((user) => {\r\n      const arr = [];\r\n      head[0].map((i) =>\r\n        !!user[i] ? arr.push(user[i].toString()) : arr.push('N/A')\r\n      );\r\n      body.push(arr);\r\n      return;\r\n    });\r\n    const doc = new jsPDF();\r\n\r\n    (doc as any).autoTable({\r\n      head,\r\n      body,\r\n      theme: 'grid',\r\n    });\r\n\r\n    // below line for Open PDF document in new tab\r\n    doc.output('dataurlnewwindow');\r\n\r\n    // below line for Download PDF document\r\n    doc.save('users.pdf');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem('ICUST_USER');\r\n    this.getTillId();\r\n    this.getParentVault();\r\n    // this.fetchTellVaultBranchMap()\r\n    // this.getItems();\r\n    this.getTellVaultBranchMap();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n \r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  // announceSortChange(sortState: Sort) {\r\n  //   if (sortState.direction) {\r\n  //     this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n  //   } else {\r\n  //     this._liveAnnouncer.announce(\"Sorting cleared\");\r\n  //   }\r\n  // }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n \r\n\r\n  addNew() {\r\n    this.router.navigate(['/maintenance/main/tillVaultltBranchMap/add']);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/`]);\r\n  }\r\n\r\n  openPopUp(row) {\r\n    console.log(row);\r\n    this.fetchTellVaultBranchMap(row);\r\n    // this.dataService.sendNavParam(this.fetchBrnMap);\r\n    this.router.navigate([`/maintenance/main/tillVaultltBranchMap/${row.id}`]);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.entityCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteTellerVaultBrnMap(row.id).subscribe(\r\n            (data) => {},\r\n            (err) => {\r\n              if (err.status === 200) {\r\n                this.loader.close();\r\n                this.snack.open(`Record Deleted!'`, 'OK', {\r\n                  duration: 2000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right',\r\n                });\r\n                this.getTellVaultBranchMap();\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n  getTellVaultBranchMap() {\r\n    this.loading = true;\r\n    this.apiService.getTellerVaultBranchMap().subscribe((resp) => {\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'U'){\r\n          resp[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(resp[i].authStatus == 'A') {\r\n          resp[i].authStatus = 'Authorized'\r\n        } \r\n        if(resp[i].recordStatus == 'O'){\r\n          resp[i].recordStatus = 'Open'\r\n        } \r\n        if(resp[i].recordStatus == 'C'){\r\n          resp[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      console.log(resp);\r\n      this.users = resp;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(resp);\r\n      console.log(this.dataSource);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.items = resp;\r\n      this.dataSource.sort = this.sort;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  getTillId() {\r\n    let tillOrVault = 'T';\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      console.log('tillData', resp);\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  getParentVault() {\r\n    let tillOrVault = 'V';\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.vault = resp;\r\n    });\r\n  }\r\n  fetchTellVaultBranchMap(row) {\r\n    this.loader.open();\r\n    this.apiService.fetchTellerVaultBranchMap(row.id).subscribe((result) => {\r\n      console.log(result);\r\n      this.data = result;\r\n      this.tillData = this.till.find((x) => x.id == this.data.tillId);\r\n      this.data.tillId = this.tillData.tillVaultCode;\r\n      this.vaultData = this.vault.find((x) => x.id == this.data.parentVaultId);\r\n      this.data.parentVaultId = this.vaultData.tillVaultCode;\r\n\r\n      this.fetchBrnMap = this.data;\r\n\r\n      if (this.fetchBrnMap != null) {\r\n        localStorage.setItem('fetchBrnMap', JSON.stringify(this.fetchBrnMap));\r\n        console.log(this.fetchBrnMap);\r\n        this.loader.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  tillVaultBranchMaping() {\r\n    this.downloadService.downloadFiles('tillVaultBranchMaping', this.users);\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      this.entityCode = resp;\r\n    });\r\n  }\r\n\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  dataByFilterByOption(filter) {\r\n    return filter.key;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Branch Map Maintenance </small>\r\n</h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\"> Till Vault Branch Map Maintenance </span>\r\n</div>\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Till Vault Branch Maps\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload-btn-wrapper\">\r\n        <button type=\"button\" mat-menu-item>Export</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\"\r\n          (change)=\"onFileChange($event)\"\r\n        />\r\n      </div>\r\n      <button (click)=\"tillVaultBranchMaping()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">    \r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption; rackBy: dataByFilterByOption\" value=\"{{ filter.key }}\">\r\n                {{ filter.value }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value, $event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value, $event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div>\r\n      </div>\r\n    </div>\r\n    <!-- <ngx-datatable\r\n      class=\"material ml-0 mr-0\"\r\n      [rows]=\"items\"\r\n      [columnMode]=\"'force'\"\r\n      [headerHeight]=\"50\"\r\n      [footerHeight]=\"50\"\r\n      [scrollbarH]=\"true\"\r\n      [limit]=\"6\"\r\n      [rowHeight]=\"50\"\r\n    > -->\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Name \"> Entity Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{ element.entityCode }} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"parentVaultId\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Description \"> Parent Vault Id\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{ element.parentVaultId }}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{ element.authStatus }} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{ element.recordStatus }} </mat-cell>\r\n        </ng-container> \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n  \r\n  </mat-card>\r\n\r\n      <!-- <ngx-datatable-column name=\"Entity Code\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row?.entityCode }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Parent Vault Id\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row.parentVaultId }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Auth Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row.authStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column name=\"Record Status\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          {{ row.recordStatus }}\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n\r\n      <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"openPopUp(row)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"row.oneTimeAuth == 'Y'\"\r\n            (click)=\"deleteItem(row)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n    </ngx-datatable>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> \r\n  \r\n</mat-card> -->\r\n","\r\nimport { Component, OnInit,ElementRef, ViewChild } from '@angular/core';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-role-maintenance-summary',\r\n  templateUrl: './role-maintenance-summary.component.html',\r\n  styleUrls: ['./role-maintenance-summary.component.scss']\r\n})\r\nexport class RoleMaintenanceSummaryComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = [ 'roleName', 'roleDesc',  'oneTimeAuth', 'authStatus', 'recordStatus', 'action'];\r\n  filterByOption: { key: string, value: string }[] = [\r\n    \r\n    { key: 'roleName', value: 'Role Name' },\r\n    { key: 'roleDesc', value: 'Role Description' },\r\n    // { key: 'childPermission', value: 'Child Permission'}\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  // bankCode: any;\r\n  // entityCode: any;\r\n  // currencies: any;\r\n  currencies: string[] = [];\r\n  bankCode: string[] = [];\r\n  entityCode:string[] = [];\r\n  users: any[] = [];\r\n  public items: any[];\r\n  entity: any;\r\n  tillVaultMasterValues: any;\r\n  fetchTillVault: any;\r\n  fetchCurrencyPair:any;\r\n  fetchRoleById:any;\r\n  currencyPairMaintValues:any;\r\n  public getItemSub: Subscription;\r\n  id:any;\r\n  constructor(private router: Router, private _liveAnnouncer: LiveAnnouncer, private confirmService: AppConfirmService, \r\n    private apiService: ApiService,private downloadService: DownloadService, private snack: MatSnackBar,private dataService:DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.getBranchCurrency();\r\n    // this.getBankCode();\r\n    // this.getEntityDropdown();\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n\r\n  // getItems() {\r\n  //   // this.apiService.fetchScreenPermissions('Roles').subscribe((roleInfo : any)=> {\r\n  //   //   console.log('roleInfo',roleInfo)\r\n  //   //   if(roleInfo){  \r\n  //   //     for(let i=0;i<roleInfo.length;i++){\r\n  //   //       if(roleInfo[i].authStatus == 'U'){\r\n  //   //         roleInfo[i].authStatus = 'Unauthorized'\r\n  //   //       }\r\n  //   //       if(roleInfo[i].authStatus == 'A') {\r\n  //   //         roleInfo[i].authStatus = 'Authorized'\r\n  //   //       } \r\n  //   //       if(roleInfo[i].recordStatus == 'O'){\r\n  //   //         roleInfo[i].recordStatus = 'Open'\r\n  //   //       } \r\n  //   //       if(roleInfo[i].recordStatus == 'C'){\r\n  //   //         roleInfo[i].recordStatus = 'Closed'\r\n  //   //       }\r\n  //   //     }\r\n  //   //   this.currencyPairMaintValues = roleInfo;\r\n  //   //     this.items =  this.currencyPairMaintValues;\r\n  //   //     console.log(\"items4::\", this.items);\r\n  //   //     this.dataSource = new MatTableDataSource(roleInfo);\r\n  //   //     this.dataSource.paginator = this.paginator;\r\n  //   //     this.dataSource.sort = this.sort;\r\n  //   //   }\r\n  //   //   });\r\n  \r\n  // }\r\n  \r\n  getItems() {\r\n    this.apiService.fetchRoleSummary().subscribe((roleInfo : any)=> {\r\n      if(roleInfo){  \r\n        for(let i=0;i<roleInfo.length;i++){\r\n          if(roleInfo[i].authStatus == 'U'){\r\n            roleInfo[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(roleInfo[i].authStatus == 'A') {\r\n            roleInfo[i].authStatus = 'Authorized'\r\n          } \r\n          if(roleInfo[i].recordStatus == 'O'){\r\n            roleInfo[i].recordStatus = 'Open'\r\n          } \r\n          if(roleInfo[i].recordStatus == 'C'){\r\n            roleInfo[i].recordStatus = 'Closed'\r\n          }\r\n          if(roleInfo[i].oneTimeAuth == 'N'){\r\n            roleInfo[i].oneTimeAuth = 'No'\r\n          }\r\n          if(roleInfo[i].oneTimeAuth == 'Y'){\r\n            roleInfo[i].oneTimeAuth = 'Yes'\r\n          }\r\n          \r\n        }\r\n      this.currencyPairMaintValues = roleInfo;\r\n        this.items =  this.currencyPairMaintValues;\r\n        console.log(\"items4::\", this.items);\r\n        this.dataSource = new MatTableDataSource(roleInfo);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      });\r\n  \r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'currencyPair');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.getItems();\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n    \r\n  }\r\n  fetchRole(){\r\n    this.apiService.fetchRoleById(this.id).subscribe((resp) =>{\r\n     console.log(\"currencyPairById\",resp);\r\n     this.fetchRoleById=resp;\r\n    })\r\n    console.log(this.fetchRoleById)\r\n    this.dataService.sendNavParam(this.fetchRoleById);\r\n    this.router.navigate([`/maintenance/main/currencyPairMaintenance/addCurrencyPair/${this.id}`]);\r\n  }\r\n  // getBankCode() {\r\n  //   this.apiService.getBankCode().subscribe((resp) => {\r\n  //     this.bankCode = resp;\r\n  //   });\r\n  // }\r\n  // getEntityDropdown(){\r\n  //   this.apiService.getEntityDropdown().subscribe((data) => {\r\n  //     this.entityCode = data;\r\n  //     console.log(\"Entity Code\",this.entityCode)  \r\n  //   });\r\n    \r\n  // }\r\n\r\n  // getBranchCurrency(){\r\n  //   this.apiService.getCountryValues().subscribe(_list =>{\r\n  //     this.currencies = _list;\r\n  //   },(err:any) =>{\r\n  //     console.error(\"Error\", err);\r\n  //   })\r\n  // }\r\n  \r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/addRoleMaintenance\"]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    console.log(filterBy,e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  applyFilter(event: Event) {\r\n     \r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    console.log(\"filterValue\",filterValue)\r\n    this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n\r\n   filterTable(filterBy) {\r\n   \r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      console.log('data :: ',data[filterBy]);\r\n      if(data[filterBy] !=null){\r\n      return (\r\n        data[filterBy].trim().toLocaleLowerCase().includes(filter)\r\n      )}\r\n    }\r\n  }\r\n\r\n   announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {\r\n    console.log(\"data\",isEdit);\r\n    console.log(\".id\",data.id);\r\n    console.log(\"item1::\",data);\r\n    \r\n    this.router.navigate([\"/maintenance/main/addRoleMaintenance\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  deleteItem(element) {\r\n    if(element.authStatus == 'Authorized'){\r\n      this.snack.open('Authorized record cannot be deleted', 'error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      return;\r\n    }\r\n    console.log(\"element\",element.id);\r\n    this.confirmService.confirm({message: `Delete  ${element.id}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteRole(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                 \r\n                }\r\n                this.getItems();\r\n            })  \r\n        } \r\n      });\r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  masterpdf() {\r\n    this.downloadService.downloadFiles(\r\n      \"roleScreen\",\r\n      this.items\r\n    );\r\n  }\r\n}\r\n\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Retail Operations > Role Maintenance  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Role Maintenance\r\n      </span>\r\n  </div>\r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div >\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n           Role \r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n         <div class=\"upload_botton\">\r\n          <button type=\"button\" mat-menu-item>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            class=\"btn btn-success\"\r\n            (change)=\"onFileChange($event)\"\r\n          />\r\n        </div>\r\n         <button mat-menu-item (click)=\"masterpdf()\">\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n           <!-- <mat-label>Filter By</mat-label> -->\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"outline\">\r\n           <!-- <mat-label>Search</mat-label> -->\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n         <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n         </button>\r\n       </div>\r\n       <div class=\"filterDiv\">\r\n        <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n        </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <!-- <ng-container matColumnDef=\"roleCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Role Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.roleCode}} </mat-cell>\r\n       </ng-container> -->\r\n  \r\n       <ng-container matColumnDef=\"roleName\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Role Name\"> Role Name\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.roleName}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"roleDesc\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Role Description\">Role Description\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.roleDesc}} </mat-cell>\r\n       </ng-container>\r\n       <!-- <ng-container matColumnDef=\"childPermission\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency 2\">Child Permission\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.childPermission}} </mat-cell>\r\n      </ng-container> -->\r\n       <ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <!-- <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n           <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openEdit(element)\" >edit</mat-icon>\r\n         </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n         <div  [hidden]=\"element.authStatus == 'Authorized'\">\r\n          <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n         </div>\r\n         </mat-cell>\r\n       </ng-container> -->\r\n       <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"openEdit(element)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.authStatus == 'Authorized'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5,10,15]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { TransactionTypePopupTableComponent } from '../transaction-type-table-popup/transaction-type-popup-table/transaction-type-popup-table.component';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-transaction-type-crud-table',\r\n  templateUrl: './transaction-type-crud-table.component.html',\r\n  styleUrls: ['./transaction-type-crud-table.component.scss']\r\n})\r\nexport class TransactionTypeCrudTableComponent implements OnInit, OnDestroy {\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api : ApiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getItems()\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n   // this.items = transactionType;\r\n    this.getItemSub = this.api.fetchTransactionTypeInfo()\r\n      .subscribe(data => {\r\n        this.items = data;\r\n      })\r\n  }\r\n\r\n  openPopUp(data: any = {}, isNew?) {\r\n    console.log(\"data::\",data)\r\n    let title = isNew ? 'Add new Transaction Type' : 'Update Transaction Type';\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(TransactionTypePopupTableComponent, {\r\n      width: '720px',\r\n      disableClose: true,\r\n      data: { title: title, payload: data }\r\n    })\r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n        if(!res) {\r\n          // If user press cancel\r\n          return;\r\n        }\r\n        this.loader.open();\r\n        if (isNew) {\r\n           this.api.upsertTransactionType(res).subscribe(response => {\r\n            this.loader.close();\r\n            this.getItems();\r\n            this.snack.open(`Record Added!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        } else {\r\n          this.api.upsertTransactionType(res).subscribe(response => {\r\n            this.loader.close();\r\n            this.getItems();\r\n            this.snack.open(`Record Updated!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }\r\n      })\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.transactionTypeCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.api.deleteTransactionType(row.transactionTypeId)\r\n            .subscribe(data => {\r\n              this.getItems();\r\n              this.loader.close();\r\n              this.snack.open('Record deleted!', 'OK', { duration: 4000 })\r\n            })\r\n        }\r\n      })\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"ml-16\">\r\n    <span class=\"mat-heading-label \">Transaction Type Maintenance</span>\r\n    <span fxFlex></span>\r\n    <button mat-flat-button color=\"primary\" (click)=\"openPopUp({}, true)\" class=\"mr-38\">ADD TRANSACTION TYPE</button>\r\n  </div>\r\n  <mat-card class=\"p-0\" [@animate]=\"{value:'*',params:{y:'50px',delay:'300ms'}}\"> \r\n    <mat-card-content class=\"p-0\">\r\n      <ngx-datatable\r\n            class=\"material ml-0 mr-0\"\r\n            [rows]=\"items\"\r\n            [columnMode]=\"'force'\"\r\n            [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\"\r\n            [scrollbarH]=\"true\"\r\n            [limit]=\"6\"\r\n            [rowHeight]=\"50\">\r\n            <ngx-datatable-column name=\"Code\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{ row?.transactionTypeCode }}\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Name\" [flexGrow]=\"1\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                  {{ row?.transactionTypeName }}\r\n                </ng-template>\r\n              </ngx-datatable-column>\r\n              <ngx-datatable-column name=\"Description\" [flexGrow]=\"1\">\r\n                <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                  {{ row?.transactionTypeDescription }}\r\n                </ng-template>\r\n              </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Status\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"row.isActive\">{{row.isActive ? 'active' : 'inactive'}}</mat-chip>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(row)\"><mat-icon>edit</mat-icon></button>\r\n                <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"deleteItem(row)\"><mat-icon>delete</mat-icon></button>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n          </ngx-datatable>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Location } from '@angular/common';\r\nimport { ThisReceiver } from '@angular/compiler';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({ \r\n  selector: 'app-state-popup',\r\n  templateUrl: './state-popup.component.html',\r\n  styleUrls: ['./state-popup.component.scss']\r\n})\r\nexport class StatePopupComponent implements OnInit {\r\n  id: any;\r\n  isEdit: boolean = false;\r\n  showLoader : boolean = false;\r\n  isStatecode: boolean = false;\r\n  isStatecode2: boolean = false;\r\n  countryIsEdit : any;\r\n  countryId : any;\r\n  loggedInUser : any;\r\n  auditLogData : any;\r\n  selectedCountryCode:any;\r\n  readorWrite: boolean=true;\r\n\r\n\r\n  public stateMaintenance: FormGroup;\r\n  countryIdentity: any;\r\n\r\n  constructor(\r\n\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private _location: Location,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private dataService : DataService,\r\n    private ls : LocalStoreService,\r\n    private snack: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.countryId = params.get('countryId');\r\n      this.countryIsEdit = params.get('countryIsEdit');\r\n      this.selectedCountryCode = params.get('selectedCountryCode');\r\n      this.apiService.getCountryById(params.get('countryId')).subscribe((resp:any) =>{\r\n        this.countryIdentity=resp.id;\r\n      });\r\n      if (params.get('id')) {\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getStateById(params.get('id')).subscribe((resp) => {\r\n          this.showLoader = true;\r\n          this.buildItemForm(resp);\r\n          this.showLoader = false;\r\n          this.auditLogData = resp;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n        });\r\n      }\r\n      else {\r\n        this.readorWrite=false;\r\n        this.showLoader = true;\r\n        this.buildItemForm({});\r\n        this.showLoader = false;\r\n      }\r\n    }\r\n    );\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n  isStatePresent(data: any) {\r\n    this.apiService.isStateCodePresent(this.selectedCountryCode,data).subscribe((respo) => {\r\n      console.log(respo);\r\n      if(respo == true){\r\n      this.isStatecode = true;\r\n      }else{\r\n        this.isStatecode = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  isStateCode2Present(data: any){\r\n    this.apiService.isStateCode2Present(data).subscribe((respo) => {\r\n      if(respo == true){\r\n      this.isStatecode2 = true;\r\n      }else{\r\n        this.isStatecode2 = false;\r\n      }\r\n    });\r\n\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteState(this.auditLogData.id)\r\n        .subscribe(data => {\r\n         this.router.navigate([\"/maintenance/main/countryStatepopup\"],{ queryParams: { id: this.countryId, isEdit : this.countryIsEdit } });\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n         this.router.navigate([\"/maintenance/main/countryStatepopup\"],{ queryParams: { id: this.countryId, isEdit : this.countryIsEdit } });\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){ \r\n        let payload : any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsForState(payload).subscribe((data) => {\r\n      this.auditLogData = data;\r\n      this.dataService.setAuditLogData(this.auditLogData);\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  submit(data: any) {\r\n    let details: any = {};\r\n    details = this.stateMaintenance.value;\r\n    details.id = this.id;\r\n    data.countryId=this.countryIdentity;\r\n    data.loggedInUser = this.loggedInUser.userName;\r\n\r\n    this.apiService.upsertStateDetails(data).subscribe((resp) => {\r\n      if (resp) {\r\n        this.router.navigate([\"/maintenance/main/countryStatepopup\"],{ queryParams: { id: this.countryId, isEdit : this.countryIsEdit } });\r\n      }\r\n    });\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z ]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  Onlynumber(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.stateMaintenance = this.fb.group({\r\n      countryCode: [this.selectedCountryCode?this.selectedCountryCode:item.countryCode, Validators.required],\r\n      countryId: [this.countryId? this.countryId : item.countryId, Validators.required],\r\n      stateCode: [item.stateCode || '', Validators.required], //dropdown\r\n      stateName: [item.stateName || '', Validators.required],\r\n      stateCode2: [item.stateCode2 || '', Validators.required],  //dropdown\r\n      stateNumCode: [item.stateNumCode || '', Validators.required],\r\n      recordStatus: [item.recordStatus || '']\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/countryStatepopup\"],{ queryParams: { id: this.countryId, isEdit : this.countryIsEdit } });\r\n\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Country and State Maintenance > State Maintenance > <span *ngIf=\"!isEdit\">New</span><span *ngIf=\"isEdit\">Edit</span> State</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        {{isEdit? 'Edit State' : 'New State'}}\r\n      </span>\r\n      <span fxFlex></span>\r\n   </div>\r\n\r\n   <mat-card >\r\n    <mat-card-content>\r\n      <!-- <span class=\"text-large\">\r\n        {{isEdit? 'Edit State' : 'New State'}}\r\n      </span> -->\r\n      <form [formGroup]=\"stateMaintenance\"  class=\"mt-32\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Country Code <span class=\"pl-4 \">*</span></mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                maxlength=\"3\"\r\n                minlength=\"1\"\r\n                name=\"countryCode\"\r\n                readonly\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"stateMaintenance.controls['countryCode']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>State Code <span class=\"pl-4 \">*</span></mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n              (keyup)=\"isStatePresent($event.target.value)\"\r\n                matInput\r\n                maxlength=\"2\"\r\n                minlength=\"1\" [readonly]=\"readorWrite\"\r\n                name=\"stateCode\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"stateMaintenance.controls['stateCode']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"isStatecode\">this is an existing state code</mat-error>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>State code 2 <span class=\"pl-4 \">*</span></mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                maxlength=\"3\"\r\n                minlength=\"1\" [readonly]=\"readorWrite\"\r\n                name=\"stateCode2\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"stateMaintenance.controls['stateCode2']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"isStatecode2\">this is an existing state code 2</mat-error>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>State Name <span class=\"pl-4 \">*</span></mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                name=\"stateName\" [readonly]=\"readorWrite\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                maxlength=\"20\"\r\n                [formControl]=\"stateMaintenance.controls['stateName']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>State Numeric Code <span class=\"pl-4 \">*</span></mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                maxlength=\"3\" [readonly]=\"readorWrite\"\r\n                minlength=\"1\"\r\n                name=\"stateNumCode\"\r\n                (keypress)=Onlynumber($event)\r\n                [formControl]=\"stateMaintenance.controls['stateNumCode']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <!-- <button *ngIf=\"!isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"submit(stateMaintenance.value)\" [disabled]=\"!(stateMaintenance.valid && stateMaintenance.dirty)\">\r\n          SAVE\r\n        </button> -->\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n            <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"stateMaintenance.invalid\" (click)=\"submit(stateMaintenance.value)\">Save</button>\r\n            &nbsp;\r\n            <div [hidden]=\"readorWrite\" >\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(stateMaintenance.invalid || stateMaintenance.dirty)\"(click)=\"submit(stateMaintenance.value)\">\r\n                 Save\r\n                </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                Edit\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                Authorize\r\n              </button>&nbsp;&nbsp;\r\n            </div> \r\n            <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                Reopen\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                Close\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                Delete\r\n              </button> &nbsp;&nbsp;\r\n            </div>\r\n           \r\n            <button\r\n              mat-raised-button\r\n              color=\"warn\"\r\n              type=\"button\"\r\n              (click)=\"goBack()\"\r\n            >\r\n              Exit\r\n            </button>\r\n  \r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log></app-audit-log>\r\n  </div>\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\n\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable'\r\n@Component({\r\n  selector: \"app-till-vault-summary\",\r\n  templateUrl: \"./till-vault-summary.component.html\",\r\n  styleUrls: [\"./till-vault-summary.component.scss\"],\r\n  animations: rumangoAnimations\r\n})\r\nexport class TillVaultSummaryComponent implements OnInit {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = ['entityCode','authStatus','recordStatus','action'];\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"entityCode\", value: \"Entity Code\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public items: any[];\r\n  public users: any[];\r\n  currency: string[] = [];\r\n  till: any;\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  public getItemSub: Subscription;\r\n  fetchVaultConfig: any;\r\n  loading: boolean;\r\n  tillData: any;\r\n  data: any;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n  download() {  \r\n    let doc = new jsPDF(); \r\n    const head = [['Entity Code', 'Auth Status', 'Record Status']] \r\n    const body=[];\r\n    \r\n    this.users.map(u=>{\r\n      var row = [];\r\n      row.push(u.entityCode);\r\n      row.push(u.authStatus);\r\n      row.push(u.recordStatus);\r\n      body.push(row)\r\n    });\r\n    autoTable(doc, {\r\n      head: head,\r\n      body: body,\r\n      didDrawCell: (prepare) => { },\r\n    });\r\n    doc.save('test.pdf');  \r\n  }\r\n  uploadtillvaultconfig(event) {\r\n\r\n    const file:File = event.path[0].files[0];\r\n      const uploadData = new FormData();\r\n      uploadData.append('screenType', \"tillVaultConfig\");\r\n      uploadData.append('file', file);\r\n      \r\n\r\n      this.apiService.getTillVaultConfigUpload(uploadData).subscribe(data => {\r\n        if(uploadData != null){\r\n          this.getvaultConfiguration();\r\n          this.snack.open('File Uploaded Successfully!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n       \r\n        }\r\n      \r\n      // this.getTillVaultConfig();\r\n      })\r\n      //  err => {\r\n      //   console.log(\"error\", err)\r\n      // }\r\n    }\r\n  \r\n    upload(){\r\n        \r\n    }\r\n  ngOnInit() {\r\n    this.getItems();\r\n    this.getTillId();\r\n    this.getvaultConfiguration();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.loading = true;\r\n    this.getItemSub = this.apiService.gettillVaultResp().subscribe((data:any) => {\r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.items = data;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.users = data;\r\n      console.log(this.dataSource);\r\n      this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    });\r\n    this.loading = false;\r\n  }\r\n  // getTillVaultConfig(){\r\n  //   this.apiService.getTillVaultConfigUpload().subscribe((data: any) => {\r\n  //     this.users = data;\r\n  //     console.log(\"this.users::\", this.users);\r\n  //     this.items = this.users;\r\n  //     console.log(\"items4::\", this.items);\r\n  //     this.dataSource = new MatTableDataSource(data);\r\n  //     this.dataSource.paginator = this.paginator;\r\n  //     this.dataSource.sort = this.sort;\r\n  //   });\r\n  // }\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/tillVaultConfig/add\"]);\r\n  }\r\n\r\n  openPopUp(row) {\r\n    this.getTillVaultConfigById(row);\r\n    // this.dataService.sendNavParam(this.fetchVaultConfig);\r\n    this.router.navigate([`/maintenance/main/tillVaultConfig/${row.id}`]);\r\n  }\r\n  tillVaultConfiguration(){\r\n    this.downloadService.downloadFiles(\"tillVaultConfiguration\",this.users);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.entityCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.removetillVaultConfig(row.id).subscribe(\r\n            (res: any) => {},\r\n            (err: any) => {\r\n              (\"\");\r\n              console.log(err);\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open(\"Record deleted!\", \"OK\", { \r\n                  duration: 2000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                 });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n\r\n  getvaultConfiguration() {\r\n    // this.loading = true;\r\n    this.apiService.gettillVaultResp().subscribe((resp) => {\r\n      console.log('resp',resp)\r\n      this.users = resp;\r\n      // this.items = this.users;\r\n      // this.loading = false;\r\n    });\r\n  }\r\n  getTillVaultConfigById(row) {\r\n    // this.loader.open();\r\n    this.apiService.fetchtillVaultConfigById(row.id).subscribe((resp) => {\r\n      this.data = resp;\r\n      if (this.data != null) {     \r\n\r\n        this.tillData = this.till.find((x) => x.id == this.data.tillId);\r\n        if (this.tillData != null) {\r\n          this.data.tillId = this.tillData.tillVaultCode;\r\n        }\r\n        this.fetchVaultConfig = this.data;\r\n      }\r\n      if (this.fetchVaultConfig != null) {\r\n        localStorage.setItem(\r\n          \"fetchVaultConfig\",\r\n          JSON.stringify(this.fetchVaultConfig)\r\n        );\r\n        //  this.loader.close();\r\n      }\r\n    });\r\n  }\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault = \"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  dataByfilterByOption(index,filter)\r\n{\r\n  return filter.value;\r\n}\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Configuration Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Till Vault Configuration Maintenance\r\n  </span>\r\n  </div>\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Configurations\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item>\r\n      <input style=\"display: none;\"\r\n      type=\"file\" name=\"documentUrl\"\r\n      #documentUrl \r\n      (change)=\"uploadtillvaultconfig($event)\">\r\n      <a \r\n      (click)=\"documentUrl.click()\"\r\n      [routerLink]=\"\">Export</a>\r\n    </button>\r\n    <button mat-menu-item (click)=\"tillVaultConfiguration()\" >\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByfilterByOption\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div>\r\n      \r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> -->\r\n  </mat-card-content>\r\n</mat-card>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Card } from 'app/views/maintenance/main-home/main-home.component';\r\nconst { isArray } = Array;\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(DATA: Card[], title: string): Card[] {\r\n    if(!DATA ) return [];\r\n    if(!title) return DATA;\r\n    title = title.toLowerCase();\r\n    console.log(DATA, title);\r\n    return search( DATA, title);\r\n   }\r\n}\r\n\r\nfunction search(entries: any[], search: string) {\r\n\r\n  search = search.toLowerCase();\r\n\r\n  return entries.filter(function (obj) {\r\n    const keys: string[] = Object.keys(obj);\r\n    return keys.some(function (key) {\r\n      const value = obj.title;\r\n      console.log(obj[key]);\r\n      if (isArray(value)) {\r\n        return value.some(v => {\r\n          return v.toLowerCase().includes(search);\r\n        });\r\n      }\r\n      else if (!isArray(value)) {\r\n        return value.toLowerCase().includes(search);\r\n      }\r\n    })\r\n  });\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { addTax } from 'app/shared/models/addtaxchrg';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-txncharges',\r\n  templateUrl: './add-txncharges.component.html',\r\n  styleUrls: ['./add-txncharges.component.scss']\r\n})\r\nexport class AddTxnchargesComponent implements OnInit {\r\n  addTxnChargesForm:FormGroup;\r\n  isEdit: boolean = false;\r\n  isReadOnly: boolean = true;\r\n  id: number;\r\n  chargeCurrencyArr: string[]=[];\r\n  loggedInUser : string;\r\n  auditData : addTax;\r\n  isAuditData : boolean = false;\r\n  minDate = new Date();\r\n  readorWrite: boolean=true;\r\n // chargeCurrencyArr: string[] = ['INR', 'Dollar', '\tEUR','GBP'];\r\n\r\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,\r\n    private router:Router,private snack: MatSnackBar, private route : ActivatedRoute, private ls: LocalStoreService, private dataService: DataService,\r\n    private cdr: ChangeDetectorRef) { this.addTxnChargesForm = this.formBuilder.group({\r\n    chargeAmount: [ '',[Validators.required]],\r\n    chargeCurrency: [ '',[Validators.required]],\r\n    chargeDesc: [ '',[Validators.required]],\r\n    txnDate: [ '',[Validators.required]],\r\n    txnReference: [ ''],\r\n    id: [ ''],\r\n    loggedInuser : [''],\r\n\r\n\r\n  })}\r\n\r\n  ngOnInit(): void {\r\n    this.getCountrynameValues();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getTxnChargesById(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n           this.auditData =resp;\r\n           this.isEdit = true;\r\n           this.isAuditData = true;\r\n           this.dataService.setAuditLogData(this.auditData);\r\n           this.dataService.sendClickEvent();\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n  }\r\n  getCountrynameValues() {\r\n    // this.apiService.getCountryValues().subscribe((allCountryValues: any) => {\r\n    //   this.chargeCurrencyArr = allCountryValues;\r\n    // });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.chargeCurrencyArr.push(data[i].currencyId)\r\n      }\r\n      console.log(this.chargeCurrencyArr);\r\n    })\r\n  }\r\n  buildItemForm(item) {\r\n    if(item.txnDate){\r\n      item.txnDate = item ? moment(item.txnDate).format() : '';\r\n    }\r\n    this.addTxnChargesForm = this.formBuilder.group({\r\n      chargeAmount: [item.chargeAmount || '',[Validators.required]],\r\n      chargeCurrency: [item.chargeCurrency ||'',[Validators.required]],\r\n      chargeDesc: [item.chargeDesc ||'',[Validators.required]],\r\n      id: [ item.id ||''],\r\n      txnDate: [item.txnDate ||'',[Validators.required]],\r\n      txnReference: [item.txnReference ||''],\r\n      loggedInuser : [item.loggedInUser || ''],\r\n\r\n    })\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/transactionCharges\"]);\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTxnChargesById(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([\"/maintenance/main/transactionCharges\"]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([\"/maintenance/main/transactionCharges\"]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser;\r\n    this.apiService.getAuditLogsForTransactioncharge(payload).subscribe((data) => {\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n  submit(){\r\n    \r\n    // let now = new Date();\r\n    let startDate = this.convertDate(this.addTxnChargesForm.controls.txnDate.value);\r\n    this.addTxnChargesForm.value['txnDate'] = startDate;\r\n    // now=this.addTxnChargesForm.value.txnDate;\r\n    // var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    this.addTxnChargesForm.value.loggedInUser = this.loggedInUser;\r\n\r\n    this.addTxnChargesForm.value.chargeAmount=parseInt(this.addTxnChargesForm.value.chargeAmount)\r\n    this.addTxnChargesForm.value.id=parseInt(this.addTxnChargesForm.value.id)\r\n   \r\n    let payload={\r\n      chargeAmount: this.addTxnChargesForm.value.chargeAmount,\r\n      chargeCurrency: this.addTxnChargesForm.value.chargeCurrency,\r\n      chargeDesc: this.addTxnChargesForm.value.chargeDesc,\r\n      txnDate : this.addTxnChargesForm.value.txnDate,\r\n      // txnDate:dateStringWithTime,\r\n      id:this.addTxnChargesForm.value.id,\r\n      txnReference: this.addTxnChargesForm.value.txnReference,\r\n      loggedInUser: this.loggedInUser,\r\n      //txnId:101,\r\n\r\n    }\r\n  \r\n  this.apiService.updateTxnChargeDetails(payload).subscribe(response => {\r\n    if(response != null && this.isEdit){\r\n      this.snack.open(`Record Updated!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    else if(response != null && !this.isEdit){\r\n      this.snack.open(`Record Saved!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    this.router.navigate([\"/maintenance/main/transactionCharges\"]);\r\n  });\r\n \r\n  \r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n    dataByCharge(index,chargeCurrency){\r\n    return chargeCurrency.currencyCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\" *ngIf=\"!isEdit\"><small class=\"small-head\">Home > Maintenance Summary >Add Transaction Charge Maintenance > Add Transaction Charge</small></h1>\r\n<h1 class=\"main-head\" *ngIf=\"isEdit\"><small class=\"small-head\">Home > Maintenance Summary > Edit Transaction Charge Maintenance > Edit Transaction Charge</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\" >\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Transaction Charge </h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Transaction Charge </h1>\r\n    <!-- <span class=\"text-large\">\r\n        Edit Country\r\n      </span>\r\n      <span fxFlex></span>\r\n      <button mat-button>\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button> -->\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content><!--(ngSubmit)=\"submit()\"-->\r\n        <form [formGroup]=\"addTxnChargesForm\"   class=\"m-333\">\r\n            <!-- <h1 *ngIf=\"!isEdit\">Add Transaction Charge</h1>\r\n            <h1 *ngIf=\"isEdit\">Edit Transaction Charge</h1> -->\r\n            <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Charge Ammount *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input [readonly]=\"readorWrite\"\r\n                                matInput name=\"chargeAmount\"\r\n                                maxlength=\"6\"\r\n                                type=\"number\"\r\n                                formControlName=\"chargeAmount\"\r\n                            />\r\n                                  <!--<mat-error *ngIf=\"BranchHolidayForm.get('entityCode').hasError('required')\">\r\n                                     Entity Code is Required!\r\n                                  </mat-error>-->\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>Charge Currency *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select formControlName=\"chargeCurrency\"\r\n                            required >\r\n                              <mat-option *ngFor=\"let chargeCurrency of chargeCurrencyArr ; trackBy:dataByCharge\" [value]=\"chargeCurrency.currencyCode\"  >\r\n                                {{chargeCurrency.currencyCode}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                           <!--<mat-error *ngIf=\"BranchHolidayForm.get('bankCode').hasError('required')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                      <mat-label>Charge Currency *</mat-label>\r\n                      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\"\r\n                                matInput name=\"chargeDesc\"\r\n                                type=\"text\"\r\n                                formControlName=\"chargeCurrency\" required />\r\n                         <!--<mat-error *ngIf=\"BranchHolidayForm.get('bankCode').hasError('required')\">\r\n                              Entity Name is Required!\r\n                          </mat-error>-->\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Charge Description *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input [readonly]=\"readorWrite\"\r\n                                matInput name=\"chargeDesc\"\r\n                                type=\"text\"\r\n                                formControlName=\"chargeDesc\" required />\r\n                            \r\n                            <!--<mat-error *ngIf=\"BranchHolidayForm.get('branchCode').hasError('required')\">\r\n                                Branch Code is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                <div  fxLayout=\"row\">\r\n                  \r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Transaction Date *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input matInput [matDatepicker]=\"appDatepicker\" \r\n                            [min]=\"minDate\"  \r\n                            name=\"date\" readonly formControlName=\"txnDate\" \r\n                            placeholder=\"DD/MM/YYYY\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" ></mat-datepicker-toggle>\r\n                            <mat-datepicker #appDatepicker ></mat-datepicker>\r\n                            <!--<mat-error *ngIf=\"BranchHolidayForm.get('transactionDate').hasError('required') && BranchHolidayForm.get('transactionDate').touched\">\r\n                                Branch Code is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                        <mat-label>Transaction Reference</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input  [readonly]=\"readorWrite\"\r\n                                matInput name=\"txnReference\"\r\n                                type=\"text\"\r\n                                formControlName=\"txnReference\"\r\n                            />\r\n                            <!--<mat-error *ngIf=\"BranchHolidayForm.get('branchCode').hasError('required')\">\r\n                                Branch Code is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n                \r\n            <!-- </div> -->\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n              <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"addTxnChargesForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n                &nbsp;\r\n                <div [hidden]=\"readorWrite\" >\r\n                  <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(addTxnChargesForm.invalid || addTxnChargesForm.dirty)\"(click)=\"submit()\">\r\n                     Save\r\n                    </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                  <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                    Edit\r\n                  </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                  <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                    Authorize\r\n                  </button>&nbsp;&nbsp;\r\n                </div> \r\n                <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                  <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                    Reopen\r\n                  </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                  <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                    Close\r\n                  </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                  <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                    Delete\r\n                  </button> &nbsp;&nbsp;\r\n                </div>\r\n               \r\n                <button\r\n                  mat-raised-button\r\n                  color=\"warn\"\r\n                  type=\"button\"\r\n                  (click)=\"goBack()\"\r\n                >\r\n                  Exit\r\n                </button>\r\n      \r\n              </div>\r\n            </div>\r\n        </form>\r\n\r\n        \r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n    <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n  </div>\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-product-maintenance',\r\n  templateUrl: './product-maintenance.component.html',\r\n  styleUrls: ['./product-maintenance.component.scss']\r\n})\r\nexport class ProductMaintenanceComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['bankCode', 'entityCode', 'productCode', 'productName',  'oneTimeAuth', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'productCode', value: 'Product Code' },\r\n    { key: 'productName', value: 'Product Name' },\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  users: string[] = [];\r\n  public items: string[];\r\n\r\n  constructor(private router:Router,private snack: MatSnackBar,\r\n    private apiService:ApiService,private confirmService: AppConfirmService,\r\n    private _liveAnnouncer: LiveAnnouncer) { }\r\n\r\n    ngOnInit(): void {\r\n      this.getProductInfo();\r\n      this.getItems();\r\n    }\r\n\r\n    onFileChange(event) {\r\n      console.log('event', event.path[0].files[0]);\r\n      const file: File = event.path[0].files[0];\r\n      const uploadData = new FormData();\r\n      uploadData.append('screenType', 'product');\r\n      uploadData.append('file', file);\r\n      this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n        console.log(response);\r\n        this.getProductInfo();\r\n        this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.getProductInfo();\r\n      });\r\n    }\r\n    getItems() {\r\n      this.items = this.users;\r\n    }\r\n    getProductInfo(){\r\n      this.apiService.getProductDetails().subscribe((data: any) => {\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.users = data;\r\n        this.items = this.users;\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n    }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n   \r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      if(data[filterBy] !=null){\r\n      return (\r\n        data[filterBy].trim().toLocaleLowerCase().includes(filter)\r\n      )}\r\n    }\r\n  }\r\n  \r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n \r\n \r\n   applyFilter(event: Event) {\r\n     \r\n     const filterValue = (event.target as HTMLInputElement).value;\r\n     this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\r\n   }\r\n   announceSortChange(sortState: Sort) {\r\n     if (sortState.direction) {\r\n       this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n     } else {\r\n       this._liveAnnouncer.announce('Sorting cleared');\r\n     }\r\n   }\r\n   addNew(){\r\n    this.router.navigate([\"/maintenance/main/product/addProduct\"]);\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {  \r\n    this.router.navigate([\"/maintenance/main/product/addProduct\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete  ${element.productName}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteProductById(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n                this.getProductInfo();\r\n            })\r\n        }\r\n      });\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Product Maintenance  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Product Maintenance\r\n      </span>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    \r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Product Maintenance \r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n         <button mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n     <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div style=\"padding-top: 3px;\">\r\n         <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n       </div>\r\n       <div>\r\n        <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"addNew()\"  style=\"height: 45px; margin-left: 15cm;\" >ADD NEW\r\n\r\n            </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <ng-container matColumnDef=\"bankCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"entityCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity Code\"> Entity Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"productCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Product Code\">Product Code\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.productCode}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"productName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Product Name\">Product Name\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.productName}} </mat-cell>\r\n      </ng-container>\r\n       <ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n         <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openEdit(element)\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n         <button mat-icon-button mat-sm-button color=\"warn\" [disabled]=\"element.oneTimeAuth =='Y'\"\r\n              (click)=\"deleteItem(element)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n         </mat-cell>\r\n       </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n\r\n\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n// import { NgxTablePopupComponent } from './ngx-table-popup/ngx-table-popup.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-entity-maintenance',\r\n  templateUrl: './entity-maintenance.component.html',\r\n  styleUrls: ['./entity-maintenance.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class EntityMaintenanceComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  public entityMaintenance: FormGroup;\r\n  public items: any[];\r\n  public userData: any[];\r\n  public getItemSub: Subscription;\r\n  currentUser: any;\r\n  loading: boolean;\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['entityCode', 'entityName', 'denomRequired','authStatus','recordStatus','action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'entityName', value: 'Entity Name' }\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.getItemSub = this.apiService.fetchEntityDetails().subscribe(data => {\r\n      this.items = data;\r\n      this.fetchEntityDetails();\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    // uploadData.append('screenType', 'entity/list');\r\n    uploadData.append('screenType', 'entity');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => { \r\n      console.log(response);\r\n      this.fetchEntityDetails();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.fetchEntityDetails();\r\n    });\r\n  }\r\n  \r\n  fetchEntityDetails() {\r\n    this.getItemSub = this.apiService.fetchEntityDetails()\r\n      .subscribe(data => {\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.userData = data;\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      })\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/entity/add\"]);\r\n  }\r\n  entityMaintenancePage(){\r\n    this.downloadService.downloadFiles(\"entityMaintenance\",this.userData);\r\n\r\n\r\n  }\r\n\r\n  // deleteItem(row) {\r\n  //   this.confirmService.confirm({ message: `Delete ${row.entityName}?` })\r\n  //     .subscribe(res => {\r\n  //       if (res) {\r\n\r\n  //         this.apiService.deleteEntity(row.id)\r\n  //           .subscribe(data => {\r\n  //           },\r\n  //             err => {\r\n  //               if (err.status == 200) {\r\n  //                 this.snack.open('Record Deleted Successfully', 'OK', {\r\n  //                   duration: 4000,\r\n  //                   verticalPosition: 'top',\r\n  //                   horizontalPosition: 'right'\r\n  //                 });\r\n  //               }\r\n  //               this.fetchEntityDetails();\r\n\r\n  //             })\r\n  //       }\r\n\r\n  //     });\r\n  // }\r\n\r\n  // openPopUp(data: any = {}, isNew?) {\r\n  //   this.router.navigate([\"/maintenance/main/entity/edit/1\"]);\r\n  // }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n    \r\n  }\r\n  openPopUp(data: any = {},isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/entity/add\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n  deleteItem(row) {\r\n    if(row.authStatus == 'Authorized'){\r\n      this.snack.open('Authorized record cannot be deleted', 'error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      return;\r\n    }\r\n    console.log(row)\r\n    this.confirmService.confirm({message: `Are you sure? You want to delete?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n        \r\n          this.apiService.deleteEntity(row.id)\r\n            .subscribe(data => {\r\n            },\r\n            err=>{\r\n              if (err.status == 200) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n            this.fetchEntityDetails();\r\n            \r\n          })\r\n        }\r\n      })\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Entity Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Entity Maintenance\r\n  </span>\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Entities\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n  <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"entityMaintenancePage()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n</div>\r\n  <mat-card-content>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\" disabled>Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>      \r\n        <div style=\"padding-top: 3px;\">\r\n          <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n        </div>\r\n      <div class=\"filterDiv\">\r\n       <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n       </button>\r\n     </div>\r\n\r\n\r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"entityName\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state name\"> Entity Name\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.entityName}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"denomRequired\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code 2\"> Denomination\r\n            Required\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.denomRequired}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container> -->\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <button\r\n              mat-icon-button\r\n              mat-sm-button\r\n              color=\"primary\"\r\n              class=\"mr-16\"\r\n              (click)=\"openPopUp(element,'Yes')\"\r\n            >\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button\r\n              mat-icon-button\r\n              mat-sm-button\r\n              color=\"warn\"\r\n              [disabled]=\"element.authStatus == 'Authorized'\"\r\n              (click)=\"deleteItem(element)\"\r\n            >\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-add-branch',\r\n  templateUrl: './add-branch.component.html',\r\n  styleUrls: ['./add-branch.component.scss']\r\n})\r\nexport class AddBranchComponent implements OnInit {\r\n  bankCodeArr:string[]=[];\r\n  entityCodeArr:string[]=[];\r\n  branchCodeArr:string[]=[];\r\n  branchCode:string[]=[];\r\n  BranchHolidayForm: FormGroup;\r\n  isEdit: boolean = false;\r\n  isReadOnly: boolean = true;\r\n  id: any;\r\n  loggedInUser : string;\r\n  auditData : any;\r\n  isAuditData : boolean = false;\r\n  show = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,\r\n    private router:Router,private snack: MatSnackBar, private route : ActivatedRoute,\r\n    private dataService : DataService,    private ls : LocalStoreService,\r\n    \r\n    private cdr: ChangeDetectorRef) { this.BranchHolidayForm = this.formBuilder.group({\r\n      branchCode: [ '',[Validators.required]],\r\n      transactionDate: ['',[Validators.required]],\r\n      bankCode: ['',[Validators.required]],\r\n      year:[''],\r\n      id: [ ''],\r\n      \r\n      entityCode: ['',[Validators.required]],\r\n\r\n    })}\r\n\r\n  ngOnInit(): void {\r\n    //this.getBranchCode(); \r\n    //this.buildItemForm();\r\n    // this.getBankCode();\r\n    this.getEnityCode();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.editeditBranchHoliday(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n           this.auditData = resp\r\n          this.isAuditData = true;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          console.log(\"this.auditData\", this.auditData)\r\n        });\r\n      }\r\n      else{\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n  }\r\n  // getBranchCode() {\r\n  //   this.apiService.getBranchCode().subscribe((resp) => {\r\n  //     this.branchCode = resp;\r\n  //   });\r\n  // }\r\n\r\n  getBankCode(entityCode:any) {\r\n    this.bankCodeArr=[];\r\n    this.entityName=entityCode;\r\n    this.apiService.getBankInfoByEntityCode(entityCode).subscribe(bankCodeResp => {\r\n      console.log(bankCodeResp);\r\n      for(let i=0; i<bankCodeResp.length;i++){\r\n        if(bankCodeResp[i].authStatus==='A'){\r\n          this.bankCodeArr.push(bankCodeResp[i]);\r\n        }\r\n      }\r\n      console.log(this.bankCodeArr);\r\n      // this.bankCode = bankCodeResp;\r\n    });\r\n  }\r\n  getBranchCode(bankCode:any) {\r\n    console.log(\"klsdfl\");\r\n    \r\n    this.branchCodeArr=[];\r\n     this.apiService.getBranchCode1(this.entityName,bankCode).subscribe((data) => {\r\n       for(let i=0;i<data.length;i++){\r\n                 if (data[i].authStatus=='A') {\r\n                   this.branchCodeArr.push(data[i].branchCode)\r\n                 }\r\n               }\r\n               console.log(this.branchCodeArr);  \r\n                \r\n     });\r\n   }\r\n  entityName(entityName: any, bankCode: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  getEnityCode() {\r\n    this.apiService.fetchEntityDetails().subscribe(entityCodeResp => {\r\n      console.log(entityCodeResp);\r\n      for(let i=0; i<entityCodeResp.length;i++){\r\n        if(entityCodeResp[i].authStatus==='A'){\r\n          this.entityCodeArr.push(entityCodeResp[i]);\r\n        }\r\n      }\r\n      console.log(this.entityCodeArr);\r\n      // this.entityCode = entityCodeResp;\r\n    });\r\n  }\r\n  \r\n  goBack(){\r\n   this.router.navigate([\"/maintenance/main/holiday/BranchHoliday\"]);\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser;\r\n    console.log(payload);\r\n    console.log(this.loggedInUser);\r\n    \r\n    \r\n    this.apiService.getAuditLogsForHolidayBranch(payload).subscribe((data) => {\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  buildItemForm(item) {\r\n\r\n    this.BranchHolidayForm = this.formBuilder.group({\r\n      branchCode: [item.branchCode || '',[Validators.required]],\r\n      transactionDate: [item.transactionDate ||'',[Validators.required]],\r\n      bankCode: [item.bankCode ||'',[Validators.required]],\r\n      year:[''],\r\n      id: [ item.id ||''],\r\n      \r\n      entityCode: [ item.entityCode ||'',[Validators.required]],\r\n\r\n    })\r\n  }\r\n  submit(){\r\n    \r\n    let now = new Date();\r\n    now=this.BranchHolidayForm.value.transactionDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MM-DD HH:MM:SS');\r\n    console.log(this.BranchHolidayForm.value)\r\n    console.log(dateStringWithTime)\r\n   var convertedyear=dateStringWithTime.slice(0,4);\r\n   var convertMonth=dateStringWithTime.slice(5,7);\r\n   var conv1Month= parseInt(convertMonth);\r\n   var convertCalender=dateStringWithTime.slice(8,10);\r\n   var conv1Calender= parseInt(convertCalender);\r\n   \r\n  \r\n    let payload=[{\r\n      entityCode: this.BranchHolidayForm.value.entityCode,\r\n      bankCode: this.BranchHolidayForm.value.bankCode,\r\n      branchCode: this.BranchHolidayForm.value.branchCode,\r\n      transactionDate:this.BranchHolidayForm.value.transactionDate,\r\n      calenderYear:convertedyear,\r\n      id:this.BranchHolidayForm.value.id,\r\n      calenderMonth:conv1Month,\r\n      calenderDate:dateStringWithTime,\r\n      loggedInUser:this.loggedInUser\r\n    }\r\n  ]\r\n  this.apiService.updateBranchHolidayDetails(payload,false).subscribe(response => {\r\n    if(response != null){\r\n      this.snack.open(`Record Added!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday\"]);\r\n  });\r\n  \r\n\r\n  \r\n  }\r\n  dataByEntity(index,entityC){\r\n    return entityC.entityCode;\r\n  }\r\n  dataByBank(index,bankC){\r\n    return bankC.bankCode;\r\n  }\r\n  dataByBranch(index,branch){\r\n    return branch.branchCode;\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <!-- <span class=\"text-large\">\r\n        Edit Country\r\n      </span>\r\n      <span fxFlex></span>\r\n      <button mat-button>\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button> -->\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content><!--(ngSubmit)=\"submit()\"-->\r\n        <form [formGroup]=\"BranchHolidayForm\"   class=\"m-333\">\r\n            <h1 *ngIf=\"!isEdit\">Add Branch Specific Holiday</h1>\r\n            <h1 *ngIf=\"isEdit\">Edit Branch Specific Holiday</h1>\r\n            <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Entity Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select formControlName=\"entityCode\" (selectionChange)=\"getBankCode($event.value)\"\r\n                              required >\r\n                               <mat-option *ngFor=\"let entityCode of entityCodeArr; trackBy:dataByEntity\" [value]=\"entityCode.entityCode\"  >\r\n                                  {{entityCode.entityCode}}\r\n                                </mat-option>\r\n                             </mat-select>\r\n                                  <mat-error *ngIf=\"BranchHolidayForm.get('entityCode').hasError('required')\">\r\n                                     Entity Code is Required!\r\n                                  </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Bank Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select formControlName=\"bankCode\" (selectionChange)=\"getBranchCode($event.value)\"\r\n                            required >\r\n                              <mat-option *ngFor=\"let bankCode of bankCodeArr; trackBy:dataByBank\" [value]=\"bankCode.bankCode\"  >\r\n                                {{bankCode.bankCode}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                           <mat-error *ngIf=\"BranchHolidayForm.get('bankCode').hasError('required')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Branch Code</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select formControlName=\"branchCode\"\r\n                            required >\r\n                            <mat-option *ngFor=\"let branchCode of branchCodeArr; trackBy:dataByBranch\" [value]=\"branchCode\">\r\n                              {{branchCode}}\r\n                            </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"BranchHolidayForm.get('branchCode').hasError('required')\">\r\n                                Branch Code is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                  \r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Calendar*</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input matInput [matDatepicker]=\"appDatepicker\"   name=\"date\" readonly formControlName=\"transactionDate\" placeholder=\"DD/MM/YYYY\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" ></mat-datepicker-toggle>\r\n                            <mat-datepicker #appDatepicker ></mat-datepicker>\r\n                            <mat-error *ngIf=\"BranchHolidayForm.get('transactionDate').hasError('required') && BranchHolidayForm.get('transactionDate').touched\">\r\n                                Branch Code is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n\r\n                \r\n            <!-- </div> -->\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutGap=\"10px\" fxLayoutAlign=\"end center\">\r\n                  <button *ngIf=\"!isEdit\" \r\n                    color=\"primary\" \r\n                    mat-raised-button \r\n                    (click)=\"submit()\"\r\n                    [disabled]=\"!(BranchHolidayForm.valid && BranchHolidayForm.dirty)\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  \r\n                 \r\n                 <button *ngIf=\"isEdit\"  type=\"button\" mat-raised-button color=\"primary\"\r\n                 [disabled]=\"!(BranchHolidayForm.valid && BranchHolidayForm.dirty)\"  (click)=\"submit()\">\r\n                    UPDATE\r\n                  </button>\r\n            \r\n                  <div *ngIf=\"auditData?.recordStatus == 'C'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                      Open\r\n                    </button>\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.recordStatus == 'O'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.authStatus == 'U'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <button\r\n                    mat-raised-button\r\n                    color=\"warn\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n        </form>\r\n\r\n        \r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-transaction-type-popup-table',\r\n  templateUrl: './transaction-type-popup-table.component.html',\r\n  styleUrls: ['./transaction-type-popup-table.component.scss']\r\n})\r\nexport class TransactionTypePopupTableComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<TransactionTypePopupTableComponent>,\r\n    private fb: FormBuilder,private api: ApiService,\r\n  ) {\r\n    \r\n   }\r\n\r\n \r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload)\r\n    let payload = {\r\n    };\r\n  }\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      transactionTypeCode: [item.transactionTypeCode || '', Validators.required],\r\n      transactionTypeName: [item.transactionTypeName || '', Validators.required],\r\n      transactionTypeDescription: [item.transactionTypeDescription || '' ,Validators.required],\r\n      transactionTypeId: [item.transactionTypeId || null]\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    this.dialogRef.close(this.itemForm.value)\r\n  }\r\n\r\n}\r\n","<h1 matDialogTitle>{{data.title}}</h1>\r\n  <form [formGroup]=\"itemForm\" (ngSubmit)=\"submit()\">\r\n  <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n    <div fxFlex=\"50\"  class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n        matInput\r\n        name=\"transactionTypeCode\"\r\n        [formControl]=\"itemForm.controls['transactionTypeCode']\"\r\n        placeholder=\"Transaction Type Code\">\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('transactionTypeCode').touched && !itemForm.get('transactionTypeCode').valid\">\r\n        Transaction Type Code is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"50\"  class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n        matInput\r\n        name=\"transactionTypeName\"\r\n        [formControl]=\"itemForm.controls['transactionTypeName']\"\r\n        placeholder=\"Transaction Type Name\">\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('transactionTypeName').touched && !itemForm.get('transactionTypeName').valid\">\r\n        Transaction Type Name is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxFlex=\"50\"  class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n        matInput\r\n        name=\"transactionTypeDescription\"\r\n        [formControl]=\"itemForm.controls['transactionTypeDescription']\"\r\n        placeholder=\"Transaction Type Description\">\r\n        <mat-error\r\n        *ngIf=\"itemForm.get('transactionTypeDescription').touched && !itemForm.get('transactionTypeDescription').valid\">\r\n        Transaction Type Description is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\">{{\"SAVE\" }}</button>\r\n      <span fxFlex></span>\r\n      <button mat-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close(false)\">Cancel</button>\r\n    </div>\r\n  </div>\r\n  </form>","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AuditLogComponent } from \"app/views/maintenance/audit-log/audit-log.component\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: 'app-cutomer-charge-category-create',\r\n  templateUrl: './cutomer-charge-category-create.component.html',\r\n  styleUrls: ['./cutomer-charge-category-create.component.scss']\r\n})\r\nexport class CutomerChargeCategoryCreateComponent implements OnInit {\r\n\r\n  @ViewChild(\"auditLog\") auditLog: AuditLogComponent;\r\n  public itemForm: FormGroup;\r\n  cutomerCategoryForm: FormGroup;\r\n  isReadOnly: boolean = true;\r\n  isEdit: boolean = false;\r\n  isView: boolean = true;\r\n  show = false;\r\n  editNow: boolean = false;\r\n  entityIsEdit: boolean;\r\n  id: number;\r\n  isAuditData: boolean = false;\r\n  readorWrite: boolean = true;\r\n  loggedInUser: string;\r\n  auditData: any;\r\n  categoryCode: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private route: ActivatedRoute,\r\n    private cdr: ChangeDetectorRef,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm({});\r\nthis.getChargeCategoryCode();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.entityIsEdit = params.get(\"isEdit\");\r\n      if (params.get(\"isEdit\") == \"Yes\") {\r\n        this.isReadOnly = false;\r\n        this.isView = true;\r\n        this.editNow = true;\r\n      } else if (params.get(\"isEdit\") == \"No\") {\r\n        this.isReadOnly = true;\r\n        this.isView = true;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == \"false\") {\r\n        this.isReadOnly = false;\r\n        this.isView = false;\r\n        this.editNow = false;\r\n      } else if (params.get(\"isEdit\") == null) {\r\n        this.isView = false;\r\n      }\r\n      if (params.get(\"id\")) {\r\n        this.isEdit = true;\r\n        this.id = params.get(\"id\");\r\n        this.api.editEntityById(params.get(\"id\")).subscribe((resp) => {\r\n          this.buildItemForm(resp);\r\n        });\r\n        this.api\r\n          .getCustomerChargeCategoryById(params.get(\"id\"))\r\n          .subscribe((resp: any) => {\r\n            this.buildItemForm(resp);\r\n            if (resp.authStatus == \"U\") {\r\n              resp.authDate = \"\";\r\n              resp.authBy = \"\";\r\n            }\r\n            this.auditData = resp;\r\n            this.isAuditData = true;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n          });\r\n      } else {\r\n        this.readorWrite = false;\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n\r\n    this.loggedInUser = this.ls.getItem(\"ICUST_USER\").userName;\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      id: [item.id || \"\"],\r\n      authStatus: [item.authStatus || \"\"],\r\n      categoryDescription: [\r\n        item.categoryDescription || \"\",\r\n        [Validators.required],\r\n      ],\r\n      chargeCategoryCode:[item.chargeCategoryCode || \"\"],\r\n      chargeCategory: [item.chargeCategory || \"\", [Validators.required]],\r\n      isActive: [item.isActive || true],\r\n      oneTimeAuth: [item.oneTimeAuth || \"\"],\r\n      recordStatus: [item.recordStatus || \"\"],\r\n      version: [item.version || \"\"],\r\n      createdDate: [item.createdDate || \"\"],\r\n      lastModifiedDate: [item.lastModifiedDate || \"\"],\r\n      authBy: [item.authBy || \"\"],\r\n      authDate: [item.authDate || \"\"],\r\n      modifiedBy: [item.modifiedBy || \"\"],\r\n      createdBy: [item.createdBy || \"\"],\r\n      noOfModification: [item.noOfModification || \"\"],\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/customerChargeCategory`]);\r\n  }\r\n  deleteRecord(operation) {\r\n    Swal.fire({\r\n      text:\r\n        \"You are trying to \" +\r\n        operation +\r\n        \" record.\" +\r\n        \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed == true) {\r\n        this.apiService.deleteCustomerChargeCategory(this.auditData.id).subscribe(\r\n          (data) => {\r\n            this.router.navigate([`/maintenance/main/customerChargeCategory`]);\r\n          },\r\n          (err) => {\r\n            if (err.status == 200) {\r\n              this.snack.open(\"Record Deleted Successfully\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            }\r\n            this.router.navigate([`/maintenance/main/customerChargeCategory`]);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editRecord() {\r\n    this.readorWrite = false;\r\n  }\r\ngetChargeCategoryCode(){\r\n  this.apiService.getDropDownValues('charge_category_code').subscribe(res => this.categoryCode = res)\r\n}\r\n  updateRecord(operation) {\r\n    Swal.fire({\r\n      text:\r\n        \"You are trying to \" +\r\n        operation +\r\n        \" record.\" +\r\n        \" Do you want to proceed?\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      cancelButtonText: \"NO\",\r\n      confirmButtonText: \"YES\",\r\n      icon: \"info\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed == true) {\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService\r\n          .updateCustomerChargeAuditLog(payload)\r\n          .subscribe((data) => {\r\n            if (data.authStatus == \"U\") {\r\n              data.authDate = \"\";\r\n              data.authBy = \"\";\r\n            }\r\n\r\n            this.auditData = data;\r\n            this.dataService.setAuditLogData(this.auditData);\r\n            this.isAuditData = true;\r\n            this.dataService.sendClickEvent();\r\n            let message = \"\";\r\n            switch (operation) {\r\n              case \"open\":\r\n                message = \"opened\";\r\n                break;\r\n              case \"close\":\r\n                message = \"closed\";\r\n                break;\r\n              case \"auth\":\r\n                message = \"authorized\";\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.itemForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.itemForm.value.loggedInUser = this.loggedInUser;\r\n      this.api.saveCustomerChargeCategory(this.itemForm.value).subscribe((data) => {\r\n        if (data != null && this.isEdit == true) {\r\n          this.router\r\n            .navigate([`/maintenance/main/customerChargeCategory`])\r\n            .then((_) => {\r\n              this.snack.open(\"Data Updated!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            });\r\n          this.cdr.markForCheck();\r\n          \r\n        }else if (data.status==500 ) {\r\n          \r\n          this.snack.open(\"CategoryCode is already exist\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        \r\n      this.cdr.markForCheck();\r\n    }\r\n         else if (data != null || this.isEdit == true) {\r\n          this.router\r\n            .navigate([`/maintenance/main/customerChargeCategory`])\r\n            .then((_) => {\r\n              this.snack.open(\"Data Saved!\", \"OK\", {\r\n                duration: 4000,\r\n                verticalPosition: \"top\",\r\n                horizontalPosition: \"right\",\r\n              });\r\n            });\r\n          this.cdr.markForCheck();\r\n        }\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  dataByBank(index, bankC) {\r\n    return bankC.bankCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Customer Category Maintenance > <span\r\n    *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Customer Category </small>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n<button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n</button>\r\n<h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Customer Charge Category </h1>\r\n<h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Customer Charge Category </h1>\r\n</div>\r\n<mat-card>\r\n<mat-card-content>\r\n    <form [formGroup]=\"itemForm\" (ngSubmit)=\"submit()\">\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n         \r\n                <div fxFlex=\"50\" class=\"pr-16\">\r\n\r\n\r\n                    <mat-label>Category Code*</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input *ngIf=\"readorWrite\" matInput [readonly]=\"readorWrite\" name=\"chargeCategoryCode\" formControlName=\"chargeCategoryCode\"\r\n                            placeholder=\"Category Code\" />\r\n                            <mat-select *ngIf=\"!readorWrite\" name=\"chargeCategoryCode\" formControlName=\"chargeCategoryCode\"\r\n                            placeholder=\"Category Code\">\r\n                                <mat-option *ngFor=\"let category of categoryCode\" [value]=\"category\">{{category}}</mat-option>\r\n                            </mat-select>\r\n                        <mat-error\r\n                            *ngIf=\"itemForm?.get('chargeCategoryCode').touched && !itemForm?.get('chargeCategoryCode').valid\">\r\n                           Charge Category is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"50\" class=\"pr-16\">\r\n\r\n                    <mat-label>Category Name*</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input matInput [readonly]=\"readorWrite\" name=\"chargeCategory\" formControlName=\"chargeCategory\" maxlength=\"20\"\r\n                            placeholder=\"Category Name\" />\r\n\r\n                        <mat-error\r\n                            *ngIf=\"itemForm?.get('chargeCategory').touched && !itemForm?.get('chargeCategory').valid\">\r\n                           Charge Category is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"50\" class=\"pr-16\">\r\n                    <mat-label>Category Description*</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input matInput [readonly]=\"readorWrite\" name=\"categoryDescription\" maxlength=\"200\"\r\n                            formControlName=\"categoryDescription\" placeholder=\"Category Description\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\" fxLayoutGap=\"10px\">\r\n                <div>\r\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\"\r\n                        *ngIf=\"!isEdit\">Save\r\n                    </button>\r\n                </div>\r\n                <div [hidden]=\"readorWrite\">\r\n                    <button mat-raised-button color=\"primary\" [disabled]=\"!(itemForm.valid && itemForm.dirty)\"\r\n                        *ngIf=\"isEdit\">Save\r\n                    </button>\r\n                </div>\r\n                <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                        (click)=\"editRecord()\">\r\n                        Edit\r\n                    </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                        (click)=\"updateRecord('auth')\">\r\n                        Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\"\r\n                    [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                        (click)=\"updateRecord('open')\">\r\n                        Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\"\r\n                    [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                        (click)=\"updateRecord('close')\">\r\n                        Close\r\n                    </button>&nbsp;&nbsp;\r\n                </div>\r\n                <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                        (click)=\"deleteRecord('delete')\">\r\n                        Delete\r\n                    </button> &nbsp;&nbsp;\r\n                </div>\r\n\r\n                <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"goBack()\">\r\n                    Exit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n<app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-charge-category',\r\n  templateUrl: './customer-charge-category.component.html',\r\n  styleUrls: ['./customer-charge-category.component.scss']\r\n})\r\nexport class CustomerChargeCategoryComponent implements OnInit {\r\n\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = [\r\n    \"chargeCategory\",\r\n    \"categoryDescription\",\r\n    \"oneTimeAuth\",\r\n    \"authStatus\",\r\n    \"recordStatus\",\r\n    \"action\",\r\n  ];\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"chargeCategory\", value: \"Charge Category\" },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public users: any[];\r\n  public items: any[];\r\n  entity: any;\r\n  bankCode: any;\r\n  cutomerCategoryMasterValues: any;\r\n  public getItemSub: Subscription;\r\n  fetchcutomerCategory: any;\r\n  id: any;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private ls: LocalStoreService,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getEntityCode();\r\n    this.getBankCode();\r\n    this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  addNew() {\r\n    this.router.navigate([`/maintenance/main/customerChargeCategoryCreate`]);\r\n  }\r\n\r\n  trackByFnFilterByOption(index, item) {\r\n    return index;\r\n  }\r\n  onFileChange(event) {\r\n    console.log(\"event\", event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"screenType\", \"cutomerCategoryltMaster\");\r\n    uploadData.append(\"file\", file);\r\n    this.api.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getItems();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    this.api.getCustomerChargeCategory().subscribe((resp: any) => {\r\n      if (resp) {\r\n        console.log(resp);\r\n        for (let i = 0; i < resp.length; i++) {\r\n          if (resp[i].authStatus == \"U\") {\r\n            resp[i].authStatus = \"Unauthorized\";\r\n          }\r\n          if (resp[i].authStatus == \"A\") {\r\n            resp[i].authStatus = \"Authorized\";\r\n          }\r\n          if (resp[i].recordStatus == \"O\") {\r\n            resp[i].recordStatus = \"Open\";\r\n          }\r\n          if (resp[i].recordStatus == \"C\") {\r\n            resp[i].recordStatus = \"Closed\";\r\n          }\r\n        }\r\n        this.cutomerCategoryMasterValues = resp;\r\n        this.items = this.cutomerCategoryMasterValues;\r\n        this.dataSource = new MatTableDataSource(resp);\r\n        this.users = resp;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.api.getBankCode().subscribe((bnkCode: any) => {\r\n      this.bankCode = bnkCode;\r\n    });\r\n  }\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n      this.entity = resp;\r\n    });\r\n  }\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy]?.toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n  openPopUp(data: any = {}, isEdit: string) {\r\n    this.router.navigate([\"/maintenance/main/customerChargeCategoryCreate\"], {\r\n      queryParams: { id: data.id, isEdit: isEdit },\r\n    });\r\n  }\r\n\r\n  masterpdf() {\r\n    this.downloadService.downloadFiles(\r\n      \"cutomerChargeCategoryMaintenance\",\r\n      this.users\r\n    );\r\n  }\r\n\r\n  fetchcutomerCategoryById() {\r\n    this.api.getCustomerChargeCategoryById(this.id).subscribe((resp) => {\r\n      this.fetchcutomerCategory = resp;\r\n    });\r\n    this.dataService.sendNavParam(this.fetchcutomerCategory);\r\n    this.router.navigate([\r\n      `/maintenance/main/cutomerCategoryltMaster/add/${this.id}`,\r\n    ]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/`]);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.chargeCategory}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.api.deleteCustomerChargeCategory(row.id).subscribe(\r\n            (res: any) => {},\r\n            (err: any) => {\r\n              (\"\");\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open(\"Member deleted!\", \"OK\", { duration: 4000 });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Customer Charge Category Maintenance </small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Customer Charge Category Maintenance\r\n  </span>\r\n</div>\r\n<mat-card class=\"mt-32\"> \r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Customer Charge Category Maintenance\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\" (change)=\"onFileChange($event)\" />\r\n      </div>\r\n      <button (click)=\"masterpdf()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n            <mat-option value=\"0\">Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy: trackByFnFilterByOption\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n        <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\">ADD NEW\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n\r\n      <ng-container matColumnDef=\"chargeCategory\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Charge Category\"> Charge Category\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.chargeCategory}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"categoryDescription\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header\r\n          sortActionDescription=\"Sort by Cutomer Category Description\">Category Description\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.categoryDescription}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"oneTimeAuth\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\">edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n            <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n          </div>\r\n        </mat-cell>\r\n      </ng-container> -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"openPopUp(element,'Yes')\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.authStatus == 'Authorized'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5,10,15]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n</mat-card>","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { accTypeStatusInterface, loggedInUserObject } from \"./acccount-type-table-popup\";\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: \"app-account-type-table-popup\",\r\n  templateUrl: \"./account-type-table-popup.component.html\",\r\n  styleUrls: [\"./account-type-table-popup.component.scss\"],\r\n})\r\nexport class AccountTypeTablePopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  accountTypeId: string;\r\n  currentUser: currentUserObject;\r\n  id: string;\r\n  loggedInUser: loggedInUserObject;\r\n  auditData: any;\r\n  isAuditData: boolean = false;\r\n  show = false;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  accTypeStatus: accTypeStatusInterface;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private dataService: DataService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if (params.get(\"id\")) {\r\n        this.isEdit = true;\r\n        this.id = params.get(\"id\");\r\n        this.apiService\r\n          .fetchAccountTypeById(params.get(\"id\"))\r\n          .subscribe((resp) => {\r\n            console.log(\"account status \",resp)\r\n            this.accTypeStatus = resp;\r\n            if (this.accTypeStatus == null || this.accTypeStatus == undefined) {\r\n              this.readorWrite=false;\r\n              this.buildItemForm({});\r\n            } else if (\r\n              this.accTypeStatus.accountTypeId != null ||\r\n              this.accTypeStatus.accountTypeId != undefined\r\n            ) {\r\n              this.loader.open();\r\n              this.id = this.accTypeStatus.accountTypeId;\r\n              this.buildItemForm(this.accTypeStatus);\r\n              this.isEdit = true;\r\n              this.auditData = this.accTypeStatus;\r\n              this.isAuditData = true;\r\n              this.dataService.setAuditLogData(this.auditData);\r\n              this.loader.close();\r\n            }\r\n            this.loggedInUser = this.ls.getItem(\"ICUST_USER\");\r\n          });\r\n      } else {\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n  }\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      accountTypeName: [item?.accountTypeName || \"\", Validators.required],\r\n      accountTypeDescription: [\r\n        item?.accountTypeDescription || \"\",\r\n        Validators.required,\r\n      ],\r\n      accountTypeId: [item?.accountTypeId || null],\r\n      loggedInUser: [item?.creatorId || this.currentUser.userName],\r\n    });\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteAccountType(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/accountType`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/accountType`]);\r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.getAuditLogsForAccountType(payload).subscribe((data) => {\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = \"\";\r\n          switch (operation) {\r\n            case \"open\":\r\n              message = \"opened\";\r\n              break;\r\n            case \"close\":\r\n              message = \"closed\";\r\n              break;\r\n            case \"auth\":\r\n              message = \"authorized\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  submit() {\r\n    if (this.itemForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.loader.open();\r\n      this.apiService.upsertAccountType(this.itemForm.value).subscribe(\r\n        (resp) => {\r\n          this.loader.close();\r\n          this.router.navigate([`/maintenance/main/accountType`]).then((_) => {\r\n            this.snack.open(\"Data Saved Successfully!\", \"OK\", {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        },\r\n        (err: any) => {\r\n          this.loader.close();\r\n          this.snack.open(`Error!`, \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    localStorage.removeItem(\"fetchAccTypeValue\");\r\n    this.router.navigate([`/maintenance/main/accountType`]);\r\n  }\r\n}\r\ninterface currentUserObject {\r\n  userName: string;\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Account Type Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> AccountType Details</small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <!-- <span *ngIf=\"isEdit && editNow\" class=\"text-large\"> -->\r\n   <span *ngIf=\"isEdit\" class=\"text-large\">\r\n    Edit AccountType Details\r\n  </span>\r\n  <span *ngIf=\"!isEdit\" class=\"text-large\">\r\n    Add AccountType Details\r\n  </span>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 matDialogTitle>Add AccountType Details</h1> -->\r\n    <form [formGroup]=\"itemForm\" *ngIf=\"itemForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"40\">\r\n          <mat-label> Account Type Name *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input [readonly]=\"readorWrite\" matInput name=\"accountTypeName\" [formControl]=\"itemForm.controls['accountTypeName']\">\r\n            <mat-error *ngIf=\"itemForm.get('accountTypeName').touched && !itemForm.get('accountTypeName').valid\">\r\n              Account Type Name is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"40\">\r\n          <mat-label>Account Type Description *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput [readonly]=\"readorWrite\" name=\"accountTypeDescription\" [formControl]=\"itemForm.controls['accountTypeDescription']\">\r\n            <mat-error\r\n              *ngIf=\"itemForm.get('accountTypeDescription').touched && !itemForm.get('accountTypeDescription').valid\">\r\n              Account Type Description is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"itemForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(itemForm.invalid || itemForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport { auditLogInterface, loggedInUserInterface } from './add-product-maintenance';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-product-maintenance',\r\n  templateUrl: './add-product-maintenance.component.html',\r\n  styleUrls: ['./add-product-maintenance.component.scss']\r\n})\r\nexport class AddProductMaintenanceComponent implements OnInit {\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  addProductForm: FormGroup;\r\n  isEdit: boolean = false;\r\n  entityCode: string;\r\n  bankCode: string;\r\n  isProductCode: boolean = false;\r\n  loggedInUser : loggedInUserInterface;\r\n  id: number;\r\n  auditLogData: auditLogInterface;\r\n  entityIsEdit: string;\r\n  minDate = new Date();\r\n  maxDate = new Date();\r\n  readorWrite: boolean=true;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,\r\n    private router:Router,private snack: MatSnackBar, private route : ActivatedRoute,    private dataService : DataService, \r\n    private ls : LocalStoreService, private loader: AppLoaderService,\r\n\r\n    private cdr: ChangeDetectorRef) {this.addProductForm = this.formBuilder.group({\r\n    bankCode: [ '',[Validators.required]],\r\n    entityCode: [ '',[Validators.required]],\r\n    productName: [ '',[Validators.required]],\r\n    productCode: [ '',[Validators.required]],\r\n  id: [ ''],\r\n}) }\r\n  ngOnInit(): void {\r\n\r\n    this.getEntityCode();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params.get('id'));\r\n      this.entityIsEdit = params.get('isEdit');\r\n      console.log(\"this.entityIsEdit\",this.entityIsEdit);\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.editEntityById(params.get('id')).subscribe((resp) =>{\r\n           console.log(resp);\r\n           this.getBankCode(resp.entityCode);\r\n           this.buildItemForm(resp);\r\n        });\r\n          this.apiService.getProductById(params.get('id')).subscribe((resp) =>{\r\n          console.log(resp);\r\n          this.buildItemForm(resp);\r\n          this.auditLogData = resp;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n       });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    ); \r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n  buildItemForm(item) {\r\n    console.log(\"item\",item)\r\n    if(item.effectiveDate){\r\n      item.effectiveDate = item ? moment(item.effectiveDate).format() : \"\";\r\n    }\r\n    if(item.expiryDate){\r\n      item.expiryDate = item ? moment(item.expiryDate).format() : \"\";\r\n    }\r\n      this.addProductForm = this.formBuilder.group({\r\n      bankCode: [item.bankCode || '',Validators.required],\r\n      entityCode: [item.entityCode ||'',Validators.required],\r\n      effectiveDate: [item.effectiveDate || \"\", Validators.required],\r\n      expiryDate: [item.expiryDate || \"\", Validators.required],\r\n      id: [ item.id ||''],\r\n      loggedInUser: [item.loggedInUser || ''],\r\n      productName: [item.productName ||'',Validators.required],\r\n      productCode: [item.productCode ||'',Validators.required],\r\n    });\r\n    console.log(this.addProductForm);\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/product\"]);\r\n  }\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      this.entityCode = resp;\r\n    });\r\n  }\r\n  getBankCode(entityCode:any) {\r\n    this.apiService.getBankInfoByEntityCode(entityCode).subscribe((resp) => {\r\n      this.bankCode = resp;\r\n      console.log(this.bankCode);\r\n    });\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteProductById(this.auditLogData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([\"/maintenance/main/product\"]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([\"/maintenance/main/product\"]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.getAuditLogsForProductMaintenance(payload).subscribe((data) => {\r\n          console.log(data);\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  getEntityDropdown(){\r\n    this.apiService.getEntityDropdown().subscribe((data) => {\r\n      this.entityCode = data;\r\n      console.log(\"Entity Code\",this.entityCode)  \r\n    });   \r\n  }\r\n  submit(){\r\n    let startDate = this.convertDate(this.addProductForm.controls.effectiveDate.value);\r\n    this.addProductForm.value['effectiveDate'] = startDate;\r\n    let endDate = this.convertDate(this.addProductForm.controls.expiryDate.value);\r\n    this.addProductForm.value['expiryDate'] = endDate;\r\n    this.addProductForm.value.loggedInUser = this.loggedInUser.userName;\r\n    let payload={\r\n      bankCode: this.addProductForm.value.bankCode,\r\n      entityCode: this.addProductForm.value.entityCode,\r\n      id:this.addProductForm.value.id,\r\n      productName:this.addProductForm.value.productName,\r\n      productCode:this.addProductForm.value.productCode,\r\n      loggedInUser:this.addProductForm.value.loggedInUser,\r\n       // this.addProductForm.value.loggedInUser = this.loggedInUser.userName;\r\n      //txnId:101,\r\n\r\n    }\r\n\r\n    this.loader.open();\r\n    this.addProductForm.value.loggedInUser = this.loggedInUser;\r\n    this.apiService.updateProductDetails(payload).subscribe(response => {\r\n    this.loader.close();\r\n    if(response != null && !this.isEdit){\r\n      this.router.navigate([`/maintenance/main/product`]).then(_=>{\r\n        this.snack.open('Record Added Successfully!', 'OK', \r\n        { duration: 4000 , \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    else if(response != null && this.isEdit){\r\n      this.router.navigate([`/maintenance/main/product`]).then(_=>{\r\n        this.snack.open('Record updated Successfully!', 'OK', \r\n        { duration: 4000 , \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    else if(response != null || this.isEdit == true){\r\n     // \r\n      console.log(\"response\",response);\r\n      this.router.navigate([`/maintenance/main/product`]).then(_=>{\r\n        this.snack.open('Record Saved Successfully!', 'OK', \r\n        { duration: 4000 , \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n      });\r\n      this.cdr.markForCheck();\r\n     }\r\n  }) \r\n  \r\n  }\r\n  onProductCodeChange(event:any){\r\n    this.apiService.isProductCodePresent(event.value).subscribe((resp) => {\r\n      console.log(\"resp::\",resp) //true\r\n      if(resp == true){\r\n        // this.isProductCode = true;\r\n        this.isProductCode = false;\r\n        console.log(\"isProductCode::\",this.isProductCode)\r\n        this.snack.open(`This is an existing Product Code!'`, \"OK\", {\r\n          duration: 2000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      }else{\r\n        this.isProductCode = false;\r\n      }\r\n    });\r\n   // console.log(\"isProductCode::\",this.isProductCode)//false\r\n  }\r\n  dataByEntityCode(index,item){\r\n    return item.entityCode\r\n  }\r\n  dataByBankCode(index,item){\r\n   return item.bankCode\r\n  }\r\n}\r\n","<h1 class=\"main-head\" *ngIf=\"!isEdit\"><small class=\"small-head\">Home > Maintenance Summary > Product Maintenance > Add Product Maintenance </small></h1>\r\n<h1 class=\"main-head\" *ngIf=\"isEdit\"><small class=\"small-head\">Home > Maintenance Summary > Product Maintenance > Edit Product Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\" >\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Product</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Product</h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content><!--(ngSubmit)=\"submit()\"-->\r\n        <form [formGroup]=\"addProductForm\" class=\"m-333\">\r\n            <!-- <h1 *ngIf=\"!isEdit\">Add Product</h1>\r\n            <h1 *ngIf=\"isEdit\">Edit Product</h1> -->\r\n            <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n                <div fxLayoutAlign=\"space-between -\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>Entity code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n\r\n                            <mat-select name=\"entityCode\"  formControlName=\"entityCode\"  class=\"selectOption\"\r\n\r\n                            (selectionChange)=\"getBankCode($event.value)\" >\r\n                             <mat-option *ngFor=\"let data of entityCode ; trackBy:dataByEntityCode\"  [value]=\"data.entityCode\">\r\n                             {{data.entityCode}}\r\n                             </mat-option>\r\n                          </mat-select> \r\n                          <!-- <mat-select name=\"entity\" formControlName=\"entityCode\"  placeholder=\"Entity Code\">\r\n                           <mat-option *ngFor=\"let entity of entityCode\" [value]=\"entity.entityCode\">\r\n                            {{ entity.entityCode }}\r\n                          </mat-option>\r\n                          </mat-select> -->\r\n                          <mat-error\r\n                            *ngIf=\"addProductForm.get('entityCode').touched && !addProductForm.get('entityCode').valid\">\r\n                            Enter the Entity Code!\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n\r\n                      <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                        <mat-label>Entity Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          <input \r\n                          matInput name=\"entityCode\"\r\n                          type=\"text\" [readonly]=\"readorWrite\" \r\n                          formControlName=\"entityCode\"\r\n                          placeholder=\"Product Name\"\r\n                      />\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n\r\n                      <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>Bank Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n\r\n                          <mat-select name=\"bankCode\" formControlName=\"bankCode\" class=\"selectOption\">\r\n                            <mat-option *ngFor=\"let data of bankCode;trackBy:dataByBankCode\" [value]=\"data.bankCode\">\r\n                              {{data?.bankCode}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                          <mat-error\r\n                            *ngIf=\"addProductForm.get('bankCode').touched && !addProductForm.get('bankCode').valid\">\r\n                            Bank code is Required\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                        <mat-label>Bank Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          <input \r\n                          matInput name=\"bankCode\"\r\n                          type=\"text\" [readonly]=\"readorWrite\" \r\n                          formControlName=\"bankCode\"\r\n                          placeholder=\"Product Name\"\r\n                      />\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n                        <mat-label>Product Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <mat-select name=\"productCode\" placeholder=\"Product Code\" formControlName=\"productCode\"\r\n                            (selectionChange)=\"onProductCodeChange($event)\" >\r\n                                <mat-option>Select</mat-option>\r\n                                <mat-option value=\"CHD\">CHD</mat-option>\r\n                                <mat-option value=\"CHW\">CHW</mat-option>\r\n                                <mat-option value=\"CQD\">CQD</mat-option>\r\n                                <mat-option value=\"CQW\">CQW</mat-option>\r\n                                <mat-option value=\"FTX\">FTX</mat-option>\r\n                              </mat-select>\r\n                              <mat-error *ngIf=\"isProductCode\">This is an existing product code</mat-error>\r\n                            <mat-error\r\n                            *ngIf=\"addProductForm.get('productCode').touched && !addProductForm.get('productCode').valid\">\r\n                            Product code is Required\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n                    <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                      <mat-label>Product Code *</mat-label>\r\n                      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input \r\n                        matInput name=\"productName\"\r\n                        type=\"text\" [readonly]=\"readorWrite\" \r\n                        formControlName=\"productName\"\r\n                        placeholder=\"Product Name\"\r\n                    />\r\n                      </mat-form-field>\r\n                      \r\n                  </div>\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Product Name *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                matInput name=\"productName\"\r\n                                type=\"text\" [readonly]=\"readorWrite\" \r\n                                formControlName=\"productName\"\r\n                                placeholder=\"Product Name\"\r\n                            />\r\n                            <mat-error\r\n                            *ngIf=\"addProductForm.get('productName').touched && !addProductForm.get('productName').valid\">\r\n                            Product Name is Required\r\n                          </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                      <mat-label>Effective Date *</mat-label>\r\n                      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          <input  matInput [matDatepicker]=\"appDatepicker\" \r\n                          [max]=\"maxDate\" \r\n                          name=\"date\" readonly formControlName=\"effectiveDate\">\r\n                          <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" [disabled]=\"readorWrite\" ></mat-datepicker-toggle>\r\n                          <mat-datepicker #appDatepicker ></mat-datepicker>\r\n                          <mat-error *ngIf=\"addProductForm.get('effectiveDate').hasError('required') && addProductForm.get('effectiveDate').touched\">\r\n                            Effective Date is Required!\r\n                          </mat-error>\r\n                      </mat-form-field>  \r\n                  </div>\r\n\r\n                  <div fxFlex=\"33.33\" class=\"pr-16\">\r\n                    <mat-label>Expiry Date *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input  matInput [matDatepicker]=\"appDatepicker1\" \r\n                        [min]=\"minDate\" \r\n                        name=\"date\" readonly formControlName=\"expiryDate\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\" [disabled]=\"readorWrite\" ></mat-datepicker-toggle>\r\n                        <mat-datepicker #appDatepicker1 ></mat-datepicker>\r\n                        <mat-error *ngIf=\"addProductForm.get('expiryDate').hasError('required') && addProductForm.get('expiryDate').touched\">\r\n                            Expiry Date is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>  \r\n                </div>\r\n                </div>\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                  <button *ngIf=\"!isEdit\" \r\n                    color=\"primary\" \r\n                    mat-raised-button \r\n                    (click)=\"submit()\"\r\n                    [disabled]=\"!(addProductForm.valid && addProductForm.dirty && !isProductCode)\"\r\n                  >\r\n                    Save\r\n                 \r\n                  </button> \r\n                  <div [hidden]=\"readorWrite\">\r\n                    <button *ngIf=\"isEdit\"  type=\"button\" mat-raised-button color=\"primary\"\r\n\r\n                    [disabled]= \"! addProductForm.valid\" \r\n                    (click)=\"submit(addProductForm.value)\">\r\n                       Save\r\n                     </button>\r\n                  </div>  \r\n               \r\n                  &nbsp;\r\n                  <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                      Edit\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                  </div> \r\n                  <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                      Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                      Delete\r\n                    </button> &nbsp;&nbsp;\r\n                  </div>\r\n                 \r\n                  <button\r\n                    mat-raised-button\r\n                    color=\"warn\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { denomMaster } from 'app/shared/models/denomMaster';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DemonMasterCrudNgxTableComponent } from '../demon-master-crud-ngx-table.component';\r\nimport Swal from 'sweetalert2';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n\r\n@Component({\r\n  selector: 'app-denom-master-table-popup',\r\n  templateUrl: './denom-master-table-popup.component.html',\r\n  styleUrls: ['./denom-master-table-popup.component.scss']\r\n})\r\nexport class DenomMasterTablePopupComponent implements OnInit {\r\n  public itemForm: FormGroup;\r\n  \r\n\r\n  currentUser: string;\r\n  denomMasterStatus: denomMaster;\r\n  currency:  string[] = [];\r\n  bankCode:  string[] = [];\r\n  entityCode:  string[] = [];\r\n  id: number;\r\n  loggedInUser :string;\r\n  auditData : denomMaster;\r\n  isAuditData : boolean = false;\r\n  show = false;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  patternValidation: boolean=true;\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<DemonMasterCrudNgxTableComponent>,\r\n    private fb: FormBuilder,private api:ApiService,private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private apiService: ApiService,\r\n    private dataService:DataService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    // this.dataService.getDenomMasterStatus.subscribe(data =>{\r\n    //   this.denomMasterStatus = typeof this.denomMasterStatus === 'object' ? data : {};\r\n    // });\r\n\r\n    setTimeout(() => {  \r\n      this.denomMasterStatus = JSON.parse(localStorage.getItem('fetchdenomValue'));\r\n      if(this.denomMasterStatus == null || this.denomMasterStatus == undefined){\r\n        this.readorWrite=false;\r\n        this.buildItemForm({})\r\n      }       \r\n      else if(this.denomMasterStatus.id != null || this.denomMasterStatus.id != undefined){\r\n      this.loader.open();\r\n      this.id = this.denomMasterStatus.id;\r\n      this.buildItemForm(this.denomMasterStatus)\r\n      if(this.denomMasterStatus.entityCode!=null){\r\n        this.getBankCode(this.denomMasterStatus.entityCode);\r\n      }\r\n      this.isEdit = true;\r\n      if(this.denomMasterStatus.authStatus == \"U\"){\r\n        this.denomMasterStatus.authDate = \"\"\r\n        this.denomMasterStatus.authBy = \"\"\r\n      };\r\n      this.auditData = this.denomMasterStatus;\r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.loader.close();\r\n      }\r\n    }, 1000)\r\n\r\n    // this.getBankCode();\r\n    this.getCurrencyValue();\r\n    this.getEntityCode();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    // this.countryCurrency=this.data.currencyValues;\r\n    // this.bankCodevalues=this.data.bankCode;\r\n  }\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      authStatus : [item.authStatus || '',],\r\n      bankCode\t: [item.bankCode || '', [Validators.required]],\r\n      currency\t: [item.currency || '',Validators.required],\r\n      denomCode\t: [item.denomCode || '',Validators.required],\r\n      denomDesc\t: [item.denomDesc || '',Validators.required],\r\n      denomValue\t: [item.denomValue || '',Validators.required],\r\n      entityCode: [item.entityCode || '',[Validators.required]],\r\n      id\t: [item.id || null],\r\n      oneTimeAuth\t: [item.oneTimeAuth || ''],\r\n      recordStatus\t: [item.recordStatus || ''],\r\n      version\t: [item.version || ''],\r\n\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if(this.itemForm.invalid){\r\n      return;\r\n    }else{\r\n      this.loader.open();\r\n      this.itemForm.value.loggedInUser = this.loggedInUser;\r\n      this.api.saveDenomMaster(this.itemForm.value).subscribe((resp) => {\r\n      this.loader.close();\r\n      this.router.navigate([`/maintenance/main/denominationMaster`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n        });\r\n      },(err:any) =>{\r\n        this.loader.close();\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n      } \r\n   \r\n  }\r\n\r\n  getCurrencyValue(){\r\n    // this.api.getCountryValues().subscribe((currencyValues : any)=> {\r\n    //   this.currency=currencyValues\r\n    //   });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i])\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  getBankCode(entityCode:any){\r\n    this.bankCode=[];\r\n    this.api.getBankInfoByEntityCode(entityCode).subscribe((bnkCode : any)=> {\r\n      console.log(bnkCode);\r\n      for(let i=0; i<bnkCode.length;i++){\r\n        if(bnkCode[i].authStatus==='A'){\r\n          this.bankCode.push(bnkCode[i]);\r\n        }\r\n      }\r\n      console.log(this.bankCode);\r\n      // this.bankCode=bnkCode\r\n      });\r\n  }\r\n\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteDenomMaster(this.auditData.id)\r\n        .subscribe(data => {\r\n         this.router.navigate([`/maintenance/main/denominationMaster`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n         this.router.navigate([`/maintenance/main/denominationMaster`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForDenominationMaster(payload).subscribe((data) => {\r\n          if( data.authStatus==\"U\" ){\r\n            data.authDate =\"\"\r\n            data.authBy=\"\"\r\n          }\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    \r\n    \r\n          this.snack.open(`Record ${message} successfully!`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  _keyPress1(event: any) {\r\n    this.patternValidation=true;\r\n    const pattern = /[A-Z]{2}[0-9]{1,8}$/;\r\n    if(pattern.test(event.target.value) === false){\r\n      this.patternValidation=false;\r\n    }\r\n    else{\r\n      this.patternValidation=true;\r\n    }\r\n  }\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.entityCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.entityCode);\r\n      // this.entityCode = resp;\r\n    });\r\n  }\r\n\r\n  goBack(){\r\n    localStorage.removeItem('fetchdenomValue');\r\n    this.router.navigate([`/maintenance/main/denominationMaster`]);\r\n  }\r\n  dataByEntity(index,data){\r\n    return data.entityCode;\r\n  }\r\n  dataByBank(index,data){\r\n    return data.bankCode;\r\n  }\r\n  dataByCurrency(index,data){\r\n    return data.currencyCode;\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary  > Denomination Master Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Denomination Master Details</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Denomination Master Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Denomination Master Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 matDialogTitle>Add Denomination Master Details</h1> -->\r\n    <form  [formGroup]=\"itemForm\" *ngIf=\"itemForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        \r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"entityCode\" (selectionChange)=\"getBankCode($event.value)\"  [formControl]=\"itemForm.controls['entityCode']\" class=\"selectOption\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of entityCode; trackBy:dataByEntity\"  [value]=\"data.entityCode\">\r\n            {{data?.entityCode}}\r\n            </mat-option>\r\n        </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('entityCode').touched && !itemForm.get('entityCode').valid\">\r\n            Entity Code is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label> Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput\r\n           readonly \r\n            [formControl]=\"itemForm.controls['entityCode']\" \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"bankCode\"  [formControl]=\"itemForm.controls['bankCode']\" class=\"selectOption\"\r\n                >\r\n                <mat-option value=\"\">Select</mat-option>\r\n                <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBank\"  [value]=\"data.bankCode\">\r\n                {{data?.bankCode}}\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n        *ngIf=\"itemForm.get('bankCode').touched && !itemForm.get('bankCode').valid\">\r\n        Bank Code is Required!\r\n    </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label> Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput\r\n           readonly \r\n            [formControl]=\"itemForm.controls['bankCode']\" \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"currency\" [formControl]=\"itemForm.controls['currency']\" class=\"selectOption\"\r\n               >\r\n               <mat-option value=\"\">Select</mat-option>\r\n                <mat-option *ngFor=\"let data of currency; trackBy:dataByCurrency\"  [value]=\"data.currencyCode\">\r\n                {{data?.currencyCode}}\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('currency').touched && !itemForm.get('currency').valid\">\r\n            Currency is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput\r\n           readonly \r\n            [formControl]=\"itemForm.controls['currency']\" \r\n          />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\"> \r\n        <div fxFlex=\"33.33\" >\r\n          <mat-label>Denomination Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            \r\n            <input\r\n            matInput \r\n            [readonly]=\"readorWrite\" \r\n            name=\"denomCode\"\r\n            (keyup)=_keyPress1($event) \r\n            maxlength=\"10\"\r\n            [formControl]=\"itemForm.controls['denomCode']\">\r\n\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('denomCode').touched && !itemForm.get('denomCode').valid\">\r\n            Denomination Code is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n          <div class=\"pattern\"\r\n        *ngIf=\"patternValidation===false\">\r\n          pattern mismatch\r\n        </div>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" >\r\n          <mat-label>Denomination Desc *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput\r\n            name=\"denomDesc\"  [readonly]=\"readorWrite\" maxlength=\"30\"\r\n            [formControl]=\"itemForm.controls['denomDesc']\">\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('denomDesc').touched && !itemForm.get('denomDesc').valid\">\r\n            Denomination Desc is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" >\r\n          <mat-label>Denomination Value *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input\r\n            matInput [readonly]=\"readorWrite\" \r\n            name=\"denomValue\"\r\n            (keypress)=_keyPress($event) maxlength=\"10\"\r\n            [formControl]=\"itemForm.controls['denomValue']\">\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('denomValue').touched && !itemForm.get('denomValue').valid\">\r\n            Denomination Value is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" >      \r\n          <mat-slide-toggle [formControl]=\"itemForm.controls['isActive']\">Active Customer</mat-slide-toggle>\r\n        </div>\r\n\r\n      </div> -->\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"itemForm.invalid || !patternValidation\" (click)=\"submit()\">Save</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(itemForm.invalid || itemForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n      \r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\nimport { auditLogInterface } from '../country-state-maintenance/country-state-popup/country-state-popup';\r\nimport { roleAuditLogInterface } from '../role-maintenance/add-role-maintenance.component';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-security-policy',\r\n  templateUrl: './add-edit-security-policy.component.html',\r\n  styleUrls: ['./add-edit-security-policy.component.scss']\r\n})\r\nexport class AddEditSecurityPolicyComponent implements OnInit {\r\n\r\n  isEdit: boolean = false;\r\n  loggedInUser : any;\r\n  id : any;\r\n  editNow: boolean = false;\r\n  readorWrite: boolean=true;\r\n  securityForm: FormGroup;\r\n  auditData : roleAuditLogInterface;\r\n  auditLogData : auditLogInterface;\r\n  isAuditData : boolean = false\r\n  currentUser = this.ls.getItem(\"ICUST_USER\");\r\n\r\n  constructor(private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private apiService: ApiService,\r\n    private ls : LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private dataService : DataService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm('')\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.apiService.fetchSecurityPolicy(params.get('id')).subscribe((data) => {\r\n          if(data){\r\n             this.buildForm(data);\r\n             console.log(data.version);\r\n             this.auditLogData = data;\r\n             this.dataService.setAuditLogData(this.auditLogData);\r\n             this.dataService.sendClickEvent();\r\n          }\r\n        });\r\n      }\r\n      else{\r\n        this.buildForm(null);\r\n        this.readorWrite=false;\r\n      }\r\n    });\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n\r\n  buildForm(item) {\r\n    console.log(item.pswdComplexSplc);\r\n    this.securityForm = this.formBuilder.group({\r\n      activeEdit: [item ? item.isActive : \"\"],\r\n      authStatus: [item ? item.authStatus : \"\"],\r\n      authBy: [item ? item.authBy : \"\"],\r\n      authDate: [item ? item.authDate : \"\"],\r\n      maxInvLogins: [item ? item.maxInvLogins : \"\", Validators.required],\r\n      maxPswdLength: [item ? item.maxPswdLength : \"\", Validators.required],\r\n      minPswdLength: [item ? item.minPswdLength : \"\", Validators.required],\r\n      modifiedBy: [item ? item.modifiedBy : \"\"],\r\n      modifiedTime: [item ? item.modifiedTime : \"\"],\r\n      loggedInUser: [\"\"],\r\n      notifyPasswordExpiryInDays: [\r\n        item ? item.notifyPasswordExpiryInDays : \"\",\r\n        Validators.required,\r\n      ],\r\n      firstTimeAuth: [item ? item.firstTimeAuth : \"\",Validators.required],\r\n      pswdComplexLcase: [item.pswdComplexLcase == 'true' ? true: false],\r\n      pswdComplexNum: [item.pswdComplexNum == 'true' ? true: false],\r\n      pswdComplexSplc: [item.pswdComplexSplc == 'true' ? true: false],\r\n      pswdComplexUcase: [item.pswdComplexUcase == 'true' ? true : false],\r\n      // pswdComplexity: [item?item.pswdComplexity :false],\r\n      pswdExpiry: [item ? item.pswdExpiry : \"\", Validators.required],\r\n      pswdReuseAft: [item ? item.pswdReuseAft : \"\", Validators.required],\r\n      version: [item ? item.version : 0],\r\n      passwordGenerationType: [item ? item.passwordGenerationType:\"\", Validators.required],\r\n    });\r\n   \r\n  }\r\n\r\n  onSave() {\r\n    console.log(this.securityForm.value);\r\n    this.securityForm.get('loggedInUser').setValue(this.currentUser.userName);\r\n    this.apiService.upsertSecurityPolicy(this.securityForm.value).subscribe((resp) => {\r\n      console.log(resp);\r\n      this.snack.open('Record Saved Successfully', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      this.router.navigate([\"/maintenance/main/securityPolicy\"]);\r\n    });\r\n  }\r\n\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.auditLogData.version;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsSecurityPolicy(payload).subscribe((data) => {\r\n      if( data.authStatus==\"U\" ){\r\n        data.authDate = \"\"\r\n        data.authBy = \"\"\r\n        }\r\n      this.auditLogData = data;\r\n      this.dataService.setAuditLogData(this.auditLogData);\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/securityPolicy\"]);\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Security Policy >\r\n    <span *ngIf=\"isEdit && editNow\">Edit</span><span *ngIf=\"isEdit && !editNow\">Edit</span><span\r\n      *ngIf=\"!isEdit && !editNow\">Add</span> Security Policy</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Edit Security Policy\r\n  </span>\r\n  <!-- <span *ngIf=\"!isEdit && !editNow\" class=\"text-large\">\r\n    Add Security Policy\r\n  </span> -->\r\n  <span fxFlex></span>\r\n  <!-- <button mat-button (click)=\"editItem()\">\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n        (click)=\"deleteCountry()\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button> -->\r\n</div>\r\n<!-- {{showLoader}} -->\r\n<!-- <div>\r\n  <mat-spinner [diameter]=\"25\"></mat-spinner>\r\n</div> -->\r\n<mat-card>\r\n  <mat-card-content>\r\n    <form class=\"mt-32\" [formGroup]=\"securityForm\">\r\n      <!-- <table class=\"pb-32\">\r\n        <tr>\r\n          <td>\r\n            <h1>\r\n              Edit Security Policy\r\n            </h1>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"highlight\">\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </table> -->\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <!-- <div fxFlex=\"33.33\" class=\"pr-16\">\r\n\r\n          <mat-label>Password Generation Type*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input type=\"text\" matInput formControlName=\"passwordGenerationType\"  required>\r\n          </mat-form-field>\r\n        </div> -->\r\n        <div fxFlex=\"33.33\" class=\"pr-16\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Password Generation Type*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            \r\n              <mat-select name=\"passwordGenerationType\" formControlName=\"passwordGenerationType\"  placeholder=\"Select Password Generation Type\" >\r\n                  <mat-option   [value]=\"'Manual'\">Manual</mat-option>\r\n                  <mat-option   [value]=\"'Auto'\">Auto</mat-option>\r\n              </mat-select>\r\n          </mat-form-field>\r\n      </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Maximum Invalid Logins*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  (keypress)=\"numberOnly($event)\" type=\"text\" maxlength=\"3\" [readonly]=\"readorWrite\"  matInput formControlName=\"maxInvLogins\" required/>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Maximum Password Length*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <input maxlength=\"2\" (keypress)=\"numberOnly($event)\" type=\"text\" [readonly]=\"readorWrite\" matInput  formControlName=\"maxPswdLength\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Minimum Password Length*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input maxlength=\"1\" (keypress)=\"numberOnly($event)\" type=\"text\" [readonly]=\"readorWrite\" matInput formControlName=\"minPswdLength\" />\r\n          </mat-form-field>\r\n          <mat-error *ngIf=\"this.securityForm.value.minPswdLength >  this.securityForm.value.maxPswdLength\">\r\n            Min Password Length should not be greater than Max Password Length\r\n          </mat-error>\r\n        </div>\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Password Expiry (In days)*</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input (keypress)=\"numberOnly($event)\" type=\"text\" maxlength=\"3\" [readonly]=\"readorWrite\" matInput maxlength=\"20\" minlength=\"1\" formControlName=\"pswdExpiry\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Password Expiry Reminder (In days) *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <input (keypress)=\"numberOnly($event)\" type=\"text\" maxlength=\"3\" [readonly]=\"readorWrite\" matInput maxlength=\"10\" minlength=\"1\" formControlName=\"notifyPasswordExpiryInDays\" />\r\n          </mat-form-field>\r\n          <mat-error  *ngIf=\"this.securityForm.value.pswdExpiry <  this.securityForm.value.notifyPasswordExpiryInDays\">\r\n            Notification on password expiry days can not be greater than password expiry days\r\n          </mat-error>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Password Reuse Limit *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n\r\n            <input (keypress)=\"numberOnly($event)\" type=\"text\" maxlength=\"3\" [readonly]=\"readorWrite\" matInput maxlength=\"10\" minlength=\"1\" formControlName=\"pswdReuseAft\"  />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"col-12\">\r\n          <label for=\"\" class=\"formLbl\">Password Complexity</label>\r\n          <div class=\"checkListCol\">\r\n            <div >\r\n              <!-- <input type=\"checkbox\" [disabled]=\"readorWrite\"  formControlName=\"pswdComplexUcase\" id=\"uppercaseCheck\">\r\n              <label for=\"uppercaseCheck\">Require atleast one Uppercase (A-Z)</label> -->\r\n              <mat-checkbox  formControlName=\"pswdComplexUcase\" id=\"uppercaseCheck\" [disabled]=\"readorWrite\">Require atleast one Uppercase (A-Z)</mat-checkbox>\r\n            </div>\r\n            <div >\r\n              <!-- <input type=\"checkbox\" [disabled]=\"readorWrite\" formControlName=\"pswdComplexLcase\" id=\"lowercaseCheck\">\r\n              <label for=\"lowercaseCheck\">Require atleast one Lowercase (a-z)</label> -->\r\n              <mat-checkbox  formControlName=\"pswdComplexLcase\" id=\"lowercaseCheck\" [disabled]=\"readorWrite\">Require atleast one Lowercase (a-z)</mat-checkbox>\r\n            </div>\r\n            <div >\r\n              <!-- <input type=\"checkbox\" [disabled]=\"readorWrite\" formControlName=\"pswdComplexNum\" id=\"numberCheck\">\r\n              <label for=\"numberCheck\">Require atleast one Number (0-9)</label> -->\r\n              <mat-checkbox  formControlName=\"pswdComplexNum\" id=\"numberCheck\" [disabled]=\"readorWrite\">Require atleast one Number (0-9)</mat-checkbox>\r\n            </div>\r\n            <div >\r\n              <!-- <input type=\"checkbox\" [disabled]=\"readorWrite\" formControlName=\"pswdComplexSplc\" id=\"charactersCheck\">\r\n              <label for=\"charactersCheck\">Require atleast one Special Characters (@#$%!?.)</label> -->\r\n              <mat-checkbox  formControlName=\"pswdComplexSplc\" id=\"charactersCheck\" [disabled]=\"readorWrite\">Require atleast one Special Characters (@#$%!?.)</mat-checkbox>\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button [disabled]=\"!(securityForm.valid && securityForm.dirty)\" *ngIf=\"!isEdit\" type=\"button\" (click)=\"onSave()\" mat-raised-button color=\"primary\">\r\n            SAVE\r\n          </button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" [disabled]= \"!(securityForm.invalid && securityForm.dirty) || this.securityForm.value.pswdExpiry <  this.securityForm.value.notifyPasswordExpiryInDays || this.securityForm.value.minPswdLength >  this.securityForm.value.maxPswdLength\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"onSave()\">\r\n              Save\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div  [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n\r\n          <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n\r\n          <button mat-raised-button color=\"warn\" (click)=\"goBack()\" type=\"button\">\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData\"  class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SendHolidayScreenService {\r\n\r\n  // public holidayScreen= new BehaviorSubject<any>();\r\n     public holidayScr = new BehaviorSubject<string>('Currency');  \r\n\r\n  constructor() {\r\n   }\r\n}\r\n// function getScreenName(data: any, any: any) {\r\n//   throw new Error('Function not implemented.');\r\n// }\r\n\r\n","import { Component, ElementRef, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ViewChild } from '@angular/core';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  CountryCode: string;\r\n  CountryCode2: string;\r\n  RegionCode: string;\r\n  IBAN : String;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-state-maintenance',\r\n  templateUrl: './state-maintenance.component.html',\r\n  styleUrls: ['./state-maintenance.component.scss']\r\n})\r\nexport class StateMaintenanceComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['stateCode', 'stateName', 'stateCode2', 'stateNumCode','recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'stateCode', value: 'State Code' },\r\n    { key: 'stateName', value: 'State Name' },\r\n    { key: 'stateNumCode', value: 'State Numric Code' },\r\n    { key: 'recordStatus', value: 'Record Status' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n\r\n  constructor(private router:Router,\r\n    private snack: MatSnackBar,\r\n    private loader: AppLoaderService,\r\n      private confirmService: AppConfirmService,\r\n      private apiService:ApiService,\r\n      private _liveAnnouncer: LiveAnnouncer) { }\r\n\r\n  demoData : PeriodicElement[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.getAllState();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n\r\n  getAllState() {\r\n    this.apiService.getAllState().subscribe((data: any) => {\r\n     \r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'stateMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getAllState();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n     this.getAllState();\r\n  }\r\n\r\n  openPopUp(data: any = {}, isNew?) {\r\n    this.router.navigate([\"/maintenance/main/statepopup\"],{ queryParams: { id: data.id } });\r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  doFilter(filterBy, e){\r\n    \r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   \r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.stateName}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteState(row.id)\r\n            .subscribe(data => {\r\n              \r\n            },    err=>{\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n    \r\n            \r\n            this.getAllState();\r\n            \r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n   \r\n\r\n   applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/statepopup\"]);\r\n  }\r\n  dataByFilter(index,filter){\r\n    return filter.value;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Country and State Maintenance > State Maintenance</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n   State Maintenance\r\n  </span>\r\n  <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap='20px'>\r\n      <div>\r\n        <mat-form-field appearance=\"fill\">\r\n          <!-- <mat-label>Filter By</mat-label> -->\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <mat-option value=\"0\" disabled>Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"fill\">\r\n          <!-- <mat-label>Search</mat-label> -->\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div style=\"padding-top: 3px;\">\r\n        <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\"  style=\"height: 45px;\">Clear Filter</button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button mat-flat-button color=\"primary\" (click)=\"addNew()\" class=\"mr-38\"  style=\"height: 45px;\">ADD NEW</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n      <ng-container matColumnDef=\"stateCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> State\r\n          Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state name\"> State Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateName}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateCode2\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code 2\"> State Code 2\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateCode2}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateNumCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> State Numric Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.stateNumCode}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(element)\">\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"deleteItem(element)\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n</mat-card>\r\n\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-user-maintenance',\r\n  templateUrl: './add-user-maintenance.component.html',\r\n  styleUrls: ['./add-user-maintenance.component.scss']\r\n})\r\nexport class AddUserMaintenanceComponent implements OnInit {\r\n  public userMaintenance: FormGroup;\r\n  RoleInfo: any;\r\n  id: number;\r\n  auditData: any;\r\n  isAuditData:boolean=false;\r\n  isEdit:boolean=false;\r\n  loggedInUser: any;\r\n  securityPolicyData : any\r\n  UserName: any;\r\n  isPassword:boolean=false;\r\n  hide=true;\r\n  readorWrite: boolean=true;\r\n  authorizedRoleId: any;\r\n  tillData: any;\r\n  password: any;\r\n  errorMsg: any = \"\";\r\n  till: any[] = [];\r\n  passwordRegex: any\r\n  isDisabledSave:boolean=true;\r\n \r\n\r\n\r\n\r\n  res: any;\r\n  editable: boolean = false;\r\n  finalpattern: string;\r\n  responseMsg: any;\r\n  responseError: any;\r\n  passwordDTO: any;\r\n  passwordStatus: boolean;\r\n  msg: any;\r\n  userId: string;\r\n  lowerCase: string;\r\n  security1: SecurityDto;\r\n  minPass: any;\r\n  maxPass: any;\r\n  ucase: any;\r\n  lcase: any;\r\n  num: any;\r\n  splc: any;\r\n  deptCode: any;\r\n  entityArr: any[]=[];\r\n  bankCodeArr: any[]=[];\r\n  branchCodeArr: any[]=[];\r\n  entityName: any;\r\n  tillVaultData: any;\r\n  roleId: any;\r\n  // roleValue: string=\"\";\r\n  \r\n\r\n  constructor(private router:Router,private route : ActivatedRoute,\r\n    private formBuilder: FormBuilder, private ls:LocalStoreService,\r\n    private api:ApiService,private dataService : DataService,   private spinner: NgxSpinnerService,\r\n    private snack:MatSnackBar,private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRoleId();\r\n    this.buildUserForm('');\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n    // this.getBankCode();\r\n    // this.getBranchCodeee();\r\n   \r\n\r\n\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params);\r\n      if(params.get('id')){\r\n         this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.api.getUserId(params.get('id')).subscribe((resp) =>{\r\n           this.buildUserForm(resp);\r\n           this.entityName=resp.entityCode;\r\n\r\n           this.roleId= resp.roleId;\r\n           this.tillVaultData = this.till.find(x => x.id == resp.tillId);\r\n           this.userMaintenance.get('tillId').setValue(this.tillVaultData.tillVaultCode)\r\n\r\n           if(resp.passwordGenerationType=='Manual'){\r\n            this.isPassword=true;\r\n            this.userMaintenance.get('password').setValue(resp.encryptedPassword)\r\n          }else{\r\n           this.isPassword=false;\r\n          }\r\n          if(resp.entityCode!=null){            \r\n            this.getBankCode(resp.entityCode);\r\n          }\r\n          if(resp.bankCode!=null && resp.entityCode!=null){\r\n            this.getBranchCode(resp.bankCode)\r\n          }\r\n           this.auditData = resp\r\n           this.isAuditData = true;\r\n           this.dataService.setAuditLogData(this.auditData);\r\n           console.log(\"this.auditData\", this.auditData)\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        console.log(\"else\");\r\n       \r\n      }\r\n    })\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n\r\n    this.api.getSecurityPolicyDetails().subscribe((data) => {\r\n      console.log(data)\r\n      this.securityPolicyData = data;\r\n     });\r\n  }\r\n \r\n\r\n  // getDeptCode(){\r\n  //   this.api.getDeptCode().subscribe((data)=>{\r\n  //     console.log(data);\r\n  //     this.deptCode = data;\r\n  //   })\r\n  // }\r\n\r\n  getRoleId(){\r\n    this.api.fetchAuthrorizedRoleInfo().subscribe((data) => {\r\n      this.RoleInfo=data;\r\n      console.log(this.RoleInfo);\r\n    })\r\n  }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.api.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n  \r\n  getEntityCode(){\r\n    this.api.fetchEntityDetails()\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        for(let i=0;i<data.length;i++){\r\n          if (data[i].authStatus=='A') {\r\n            this.entityArr.push(data[i].entityCode)\r\n          }\r\n        }\r\n        console.log(this.entityArr);\r\n        \r\n      });\r\n  }\r\n  // getBankCode(){\r\n  //   this.api.getBankCode().subscribe(data=>{\r\n  //     console.log(data);\r\n  //       for(let i=0;i<data.length;i++){\r\n  //         if (data[i].authStatus=='A') {\r\n  //           this.bankCodeArr.push(data[i].entityCode)\r\n  //         }\r\n  //       }\r\n  //       console.log(this.bankCodeArr);        \r\n  //    });\r\n     \r\n  // }\r\n  getBankCode(entityCode:any) {\r\n    this.bankCodeArr=[];\r\n    this.branchCodeArr=[];\r\n    this.entityName=entityCode;\r\n    this.api.getBankInfoByEntityCode(entityCode).subscribe((data) => {\r\n      for(let i=0;i<data.length;i++){\r\n                if (data[i].authStatus=='A') {\r\n                  this.bankCodeArr.push(data[i].bankCode)\r\n                }\r\n              }\r\n      console.log(this.bankCodeArr);\r\n    });\r\n  }\r\n  // getBranchCodeee(){\r\n  //   this.api.getBranchCode().subscribe(data=>{\r\n  //     console.log(data);\r\n  //       for(let i=0;i<data.length;i++){\r\n  //         if (data[i].authStatus=='A') {\r\n  //           this.branchCodeArr.push(data[i].branchCode)\r\n  //         }\r\n  //       }\r\n  //       console.log(this.branchCodeArr);       \r\n  //    });    \r\n  // }\r\n  getBranchCode(bankCode:any) {\r\n   this.branchCodeArr=[];\r\n    this.api.getBranchCode1(this.entityName,bankCode).subscribe((data) => {\r\n      for(let i=0;i<data.length;i++){\r\n                if (data[i].authStatus=='A') {\r\n                  this.branchCodeArr.push(data[i].branchCode)\r\n                }\r\n              }\r\n              console.log(this.branchCodeArr);  \r\n               \r\n    });\r\n  }\r\n  \r\n  buildUserForm(data){\r\n    console.log(data);\r\n    this.userMaintenance = this.formBuilder.group({\r\n      userId: [data ? data.userId : '',[Validators.required]],\r\n      userName: [data ? data.userName : '',[Validators.required]],\r\n      email: [data ? data.email : '',[Validators.required]],\r\n      mobile: [data ? data.mobile : '',[Validators.required,Validators.minLength(10), Validators.maxLength(10)]],\r\n      roleId: [data ? data.roleId : '',[Validators.required]],\r\n      firstName: [data ? data.firstName : '',[Validators.required]],\r\n      lastName: [data ? data.lastName : '',[Validators.required]],\r\n      entityCode: [data ? data.entityCode : '',[Validators.required]],\r\n      branchCode: [data ? data.branchCode : '',[Validators.required]],\r\n      department:[data ? data.department : '',[Validators.required]],\r\n      levelForUser:[data ? data.levelForUser : '',[Validators.required]],\r\n      finance:[data ? data.finance : '',[Validators.required]],\r\n      intime: [data.intime ? data.intime : '09:00'],\r\n      outtime: [data.outtime ? data.outtime : '06:00'],\r\n      bankCode: [data ? data.bankCode : '',[Validators.required]],\r\n      statusForUser:[data? data.statusForUser:'', [Validators.required]],\r\n      // language: [data ? data.language : ''],\r\n      \r\n      password: new FormControl(\"\", [\r\n        \r\n        Validators.compose([\r\n          Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass),\r\n        ]),\r\n      ]),\r\n      passwordGenerationType: [data ? data.passwordGenerationType : ''],\r\n      tillId: [data ? data.tillId : '',[Validators.required]],\r\n      \r\n    });\r\n    this.formControlValueChanged();\r\n    var role\r\n    if(data){\r\n      \r\n      role= this.RoleInfo.filter((item)=>{\r\n        return data.roleId == item.roleName;\r\n      });\r\n    }\r\n    this.tillData = this.till.find(x => x.id == data.tillId);\r\n    console.log(\"this.tillData::\",this.tillData)\r\n    console.log(\"role::\",role)\r\n    this.api.getSecurityPolicyDetails().subscribe((resp) => {\r\n      this.security1 = resp;\r\n      console.log(this.security1);\r\n      this.ucase = this.security1[0].pswdComplexUcase;\r\n      this.lcase = this.security1[0].pswdComplexLcase;\r\n      console.log(this.lcase);\r\n      this.num = this.security1[0].pswdComplexNum;\r\n      this.splc = this.security1[0].pswdComplexSplc;\r\n      this.minPass = this.security1[0].minPswdLength;\r\n      this.maxPass = this.security1[0].maxPswdLength;\r\n      console.log(this.maxPass);\r\n\r\n      if (this.security1[0].pswdComplexUcase==\"true\") {\r\n        this.passwordRegex = '(?=[^A-Z]*[A-Z])';\r\n        this.errorMsg = ' UpperCase';\r\n      }\r\n      if (this.security1[0].pswdComplexLcase==\"true\") {\r\n        this.passwordRegex = this.passwordRegex + '(?=[^a-z]*[a-z])';\r\n        if (this.errorMsg != '') {\r\n          this.errorMsg = this.errorMsg + ', LowerCase';\r\n        }\r\n        else {\r\n          this.errorMsg = this.errorMsg + ' LowerCase';\r\n        }\r\n      }\r\n      if(this.splc==\"true\") {\r\n        this.passwordRegex = this.passwordRegex  + '(?=.*[!@#$%^&*])';\r\n        if(this.errorMsg != '') \r\n          this.errorMsg = this.errorMsg + \", Special Character\";  \r\n        else\r\n          this.errorMsg = this.errorMsg + \" Special Character\";\r\n      }\r\n\r\n      if (this.security1[0].pswdComplexNum==\"true\") {\r\n        this.passwordRegex = this.passwordRegex + '(?=[^0-9]*[0-9])';\r\n        if (this.errorMsg != '') {\r\n          this.errorMsg = this.errorMsg + ', Number';\r\n        }\r\n        else {\r\n          this.errorMsg = this.errorMsg + ' Number';\r\n        }\r\n      }\r\n\r\n      this.passwordRegex =\r\n        this.passwordRegex + \".{\" + this.minPass + \",\" + this.maxPass + \"}\";\r\n      this.errorMsg =\r\n        \"Password must contain atleast one \" + this.errorMsg + \".\";\r\n      console.log(this.passwordRegex);\r\n\r\n\r\n      // this.userMaintenance = this.formBuilder.group({\r\n     \r\n      //   password: new FormControl(\"\", [\r\n      //     Validators.required,\r\n      //     Validators.compose([\r\n      //       Validators.pattern(this.passwordRegex),\r\n      //       Validators.maxLength(this.maxPass),\r\n      //       Validators.minLength(this.minPass),\r\n      //     ]),\r\n      //   ]),\r\n      // });\r\n    });\r\n    \r\n  }\r\n    formControlValueChanged(){\r\n      let cifNumberControl = this.userMaintenance.get('password');\r\n    this.userMaintenance.get('passwordGenerationType').valueChanges.subscribe(\r\n        (val) => {\r\n            console.log(val);\r\n            if (val == 'Manual') {\r\n              this.userMaintenance.get('password').setValidators([Validators.required]);\r\n            }   \r\n            else{\r\n              this.userMaintenance.get('password').setValidators([Validators.nullValidator]);\r\n          }            \r\n            cifNumberControl.updateValueAndValidity();\r\n        });\r\n    }\r\n\r\n    onInputChange() {\r\n    \r\n      (this.userMaintenance.get('password') as FormControl).setValidators([\r\n        Validators.compose([\r\n          Validators.pattern(this.passwordRegex),\r\n          Validators.maxLength(this.maxPass),\r\n          Validators.minLength(this.minPass),\r\n        ]),\r\n      ]);\r\n      this.isDisabledSave = false\r\n    }\r\n\r\n  onInput(event:any){\r\n    console.log(event);\r\n    this.UserName= event.target.value.toLocaleUpperCase();\r\n    this.userMaintenance.get('userId').setValue(this.UserName)\r\n  }\r\n  // onInputt(event:any){\r\n  //   console.log(event);\r\n  //   this.UserName= event.target.value.toLocaleUpperCase();\r\n  //   this.userMaintenance.get('userId').setValue(event.target.value)\r\n  // }\r\n\r\n  selectRole(roles){\r\n    console.log(roles.value);\r\n    // for (let index = 0; index < this.userMaintenance.value.roleId.length; index++) {\r\n    //   const element = this.userMaintenance.value.roleId[index];\r\n    //   if(this.roleValue==\"\"){\r\n    //     this.roleValue+=element;\r\n    //   }else{\r\n    //   this.roleValue+= \",\"+ element;\r\n    //   }\r\n    // }\r\n    \r\n  }\r\n  onToggle(event){\r\n    console.log(event.value);\r\n    if(event.value=='Manual'){\r\nthis.isPassword=true;\r\n    }\r\n    else{\r\n      this.isPassword=false;\r\n    }\r\n  }\r\n  \r\n  \r\n  submit(){\r\n  \r\n    this.tillData = this.till.find(x => x.tillVaultCode == this.userMaintenance.value.tillId);\r\n    this.userMaintenance.value.tillId = this.tillData.id;\r\n    this.userMaintenance.value.loggedInUser = this.loggedInUser;\r\n    \r\n    this.userMaintenance.value.userId=this.userMaintenance.value.userId;\r\n    if(this.auditData!=null && this.auditData.id!=null && this.auditData.id!=undefined){\r\n    this.userMaintenance.value.id= this.auditData.id;\r\n    }\r\n    this.userMaintenance.value.loggedInUser = this.loggedInUser;\r\n    var role=this.RoleInfo.filter((item)=>{\r\n      return item.roleName==this.userMaintenance.value.roleId\r\n    })  \r\n    console.log(this.userMaintenance.value.roleId);\r\n    // this.userMaintenance.value.roleId.filter((item)=>{\r\n    //   if(this.userMaintenance.value.roleId.includes(item.roleName)){\r\n    //     return this.roleValue= this.roleValue+\",\"+item.roleName;\r\n    //   }\r\n    // });\r\n    let roleValue=\"\";\r\n    for (let index = 0; index < this.userMaintenance.value.roleId.length; index++) {\r\n      const element = this.userMaintenance.value.roleId[index];\r\n      if(roleValue==\"\"){\r\n        roleValue+=element;\r\n      }else{\r\n      roleValue+= \",\"+ element;\r\n      }\r\n    }\r\n    \r\n    console.log(\"roleValue\",roleValue);\r\n    \r\n    this.userMaintenance.value.roleId= roleValue;\r\n    console.log(\"User ::\",this.userMaintenance.value);\r\n    this.api.upsertUserMaintenance(this.userMaintenance.value).subscribe(response => {\r\n      console.log(\"response status::\",response.status)\r\n      if(response != null){\r\n        this.spinner.hide();\r\n        // if(response.status == 200){\r\n          this.snack.open(`User Added!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n\r\n          this.router.navigate([\"/maintenance/main/userMaintenance\"]);\r\n        // } else if (response.status == 400) {\r\n        //     this.snack.open('User already exists for the given role!', 'OK', { \r\n        //       duration: 4000,\r\n        //       verticalPosition: \"top\",\r\n        //       horizontalPosition: \"right\",\r\n        //      })\r\n        // }\r\n        this.cdr.markForCheck();\r\n      }\r\n    },error=>{\r\n      this.snack.open(error.error.message, 'error', { \r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n             })\r\n    });\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/userMaintenance\"]);\r\n  }\r\n\r\n  // passwordValidation(event){\r\n  // console.log(event.target.value);\r\n  // this.password = event.target.value;\r\n\r\n  // console.log(this.securityPolicyData);\r\n  // }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  _keyPress1(event: any) {\r\n    const pattern = /[a-zA-Z0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  deleteRecord(){\r\n   \r\n    this.api.deleteUserById(this.auditData.userId)\r\n      .subscribe(data => {\r\n      },\r\n      err=>{\r\n        if (err.status == 200) {\r\n          this.snack.open('Record Deleted Successfully', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n        this.router.navigate([\"/maintenance/main/userMaintenance\"]);\r\n      \r\n    })\r\n \r\n}\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n    console.log(this.tillData.tillVaultCode);\r\n    \r\n    this.userMaintenance.get('tillId').setValue(this.tillData.tillVaultCode)\r\n    // this.userMaintenance.get('roleId').setValue(\"newTeller\")\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.api.getAuditLogsForUserMaintenance(payload).subscribe((data) => {\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }\r\n      \r\n    }\r\n    ))\r\n   \r\n  }\r\n\r\n}\r\n\r\nexport class SecurityDto {\r\n  clientId: number;\r\n  maxInvLogins: number;\r\n  maxPswdLength: number;\r\n  minPswdLength: number;\r\n  pswdExpiry: number;\r\n  notifyPasswordExpiryInDays: number;\r\n  pswdReuseAft: number;\r\n  pswdComplexLcase: any;\r\n  pswdComplexNum: any;\r\n  pswdComplexSplc: any;\r\n  passwordGenerationType:any\r\n  pswdComplexUcase: any;\r\n  authStatus: string;\r\n  authorizedBy: string;\r\n  authorizedTime: Date;\r\n  modifiedBy: string;\r\n  modifiedTime: Date;\r\n  pswdComplexity: string;\r\n  version: number;\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary> User Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> User Maintenance\r\n</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add User Information</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit User Information</h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"userMaintenance\"  class=\"m-333\">\r\n            <!-- <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\"> -->\r\n              <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                  <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                      <mat-label>Entity Code *</mat-label>\r\n                      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          <!-- <input placeholder=\"Enter Entity Code\"\r\n                           (keypress)=_keyPress($event) maxlength=\"10\" minlength=\"10\"\r\n                              matInput name=\"Entity\" \r\n                              type=\"number\"\r\n                              formControlName=\"entityCode\"\r\n                              [readonly]=\"readorWrite\"\r\n                          /> -->\r\n                          <mat-select (selectionChange)=\"getBankCode($event.value)\" formControlName=\"entityCode\" name=\"Entity\"  placeholder=\"Enter Entity Code\"  >\r\n                            <mat-option  *ngFor=\"let entity of entityArr \" [value]=\"entity\">{{entity}}</mat-option>\r\n\r\n                        </mat-select>\r\n                          <mat-error *ngIf=\"userMaintenance.get('entityCode').touched && !userMaintenance.get('entityCode').valid\">\r\n                              Entity code is Required!\r\n                          </mat-error>\r\n                      </mat-form-field>\r\n                  </div>\r\n                  <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                    <mat-label>Entity Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                      <input matInput readonly\r\n                      formControlName=\"entityCode\">\r\n                    </mat-form-field>\r\n                  </div>\r\n\r\n                  <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                    <mat-label>Bank Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <!-- <input placeholder=\"Enter Bank Code\"\r\n                         (keypress)=_keyPress1($event) maxlength=\"10\" minlength=\"4\"\r\n                            matInput name=\"Bank\" \r\n                            formControlName=\"bankCode\"\r\n                            [readonly]=\"readorWrite\"\r\n                        /> -->\r\n                        <mat-select (selectionChange)=\"getBranchCode($event.value)\" formControlName=\"bankCode\" name=\"Bank\"  placeholder=\"Enter Bank Code\"  >\r\n                          <mat-option  *ngFor=\"let bankCode of bankCodeArr \" [value]=\"bankCode\">{{bankCode}}</mat-option>\r\n  \r\n                      </mat-select>\r\n                        <mat-error *ngIf=\"userMaintenance.get('bankCode').touched && !userMaintenance.get('bankCode').valid\">\r\n                          Bank code is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                  <mat-label>Bank Code *</mat-label>\r\n                  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <input matInput readonly\r\n                    formControlName=\"bankCode\">\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n                  <mat-label>Branch Code *</mat-label>\r\n                  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                      <!-- <input placeholder=\"Enter Branch Code\"\r\n                       (keypress)=_keyPress1($event) maxlength=\"10\" minlength=\"4\"\r\n                          matInput name=\"Branch\" \r\n                          formControlName=\"branchCode\"\r\n                          [readonly]=\"readorWrite\"\r\n                      /> -->\r\n                      <mat-select formControlName=\"branchCode\" name=\"Branch\"  placeholder=\"Enter Branch Code\"  >\r\n                        <mat-option  *ngFor=\"let branchCode of branchCodeArr \" [value]=\"branchCode\">{{branchCode}}</mat-option>\r\n\r\n                    </mat-select>\r\n                      <mat-error *ngIf=\"userMaintenance.get('branchCode').touched && userMaintenance.get('branchCode').hasError('required')\">\r\n                          Branch code is Required!\r\n                      </mat-error>\r\n                  </mat-form-field>\r\n               </div>\r\n               <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                <mat-label>Branch Code *</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <input matInput readonly\r\n                  formControlName=\"branchCode\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>User Id *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                                placeholder=\"Enter User Id\"\r\n                                matInput name=\"userId\" \r\n                                formControlName=\"userId\"\r\n                                (keyup)=\"onInput($event)\"\r\n                                style=\"text-transform: uppercase\"\r\n                                [readonly]=\"readorWrite\"\r\n                            />\r\n                            <mat-error *ngIf=\"userMaintenance.get('userId').touched && !userMaintenance.get('userId').valid\">\r\n                                User Id is Required!\r\n                            </mat-error>\r\n                          \r\n                        </mat-form-field>\r\n                  </div>\r\n              </div>\r\n\r\n                    <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>User Name *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                            placeholder=\"Enter User Name\"\r\n                                matInput name=\"userName\"  \r\n                                formControlName=\"userName\"\r\n                                \r\n                                \r\n                                [readonly]=\"readorWrite\"\r\n                            />\r\n                            <mat-error *ngIf=\"userMaintenance.get('userName').touched && !userMaintenance.get('userName').valid\">\r\n                                UserName is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Email *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input placeholder=\"Enter Email\"\r\n                             \r\n                                matInput name=\"email\" type=\"email\" \r\n                                pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$\"\r\n                                formControlName=\"email\"\r\n                                [readonly]=\"readorWrite\"\r\n                            />\r\n                            <mat-error *ngIf=\"userMaintenance.get('email').touched && !userMaintenance.get('email').valid\">\r\n                                Email is Required!\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                      <mat-label>Mobile Number *</mat-label>\r\n                      <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          <input placeholder=\"Enter Mobile Number\"\r\n                           (keypress)=\"_keyPress($event)\" maxlength=\"10\" minlength=\"10\"\r\n                              matInput name=\"mobile\" type=\"text\"                    \r\n                              formControlName=\"mobile\"\r\n                              [readonly]=\"readorWrite\"\r\n                          />\r\n                          <mat-error *ngIf=\"userMaintenance.get('mobile').touched && !userMaintenance.get('mobile').valid\">\r\n                              Mobile Number is Required!\r\n                          </mat-error>\r\n                      </mat-form-field>\r\n                  </div>\r\n                    </div>\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n\r\n                   <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                        <mat-label>Role Id *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                          \r\n                            <mat-select multiple formControlName=\"roleId\" (selectionChange)=\"selectRole($event)\" placeholder=\"Select Role ID\"  >\r\n                                <mat-option  *ngFor=\"let role of RoleInfo \" [value]=\"role.roleName\">{{role.roleName}}</mat-option>\r\n\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"userMaintenance.get('roleId').touched && !userMaintenance.get('roleId').valid\">\r\n                                Role Name is Required!\r\n                            </mat-error>                            \r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"32.5\" *ngIf=\"readorWrite\">\r\n                        <mat-label>Role Id *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                            matInput name=\"roleId\" \r\n                            type=\"text\"\r\n                            formControlName=\"roleId\"\r\n                            [readonly]=\"readorWrite\"\r\n                        />\r\n        \r\n                        </mat-form-field>\r\n        \r\n                     </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>First Name *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input \r\n                            placeholder=\"Enter First Name\"\r\n                                matInput name=\"firstName\" \r\n                                type=\"text\"\r\n                                formControlName=\"firstName\"\r\n                                [readonly]=\"readorWrite\"\r\n                            />\r\n                            <mat-error *ngIf=\"userMaintenance.get('firstName').touched && !userMaintenance.get('firstName').valid\">\r\n                                First Name is Required!\r\n                            </mat-error>\r\n                            \r\n                        </mat-form-field>\r\n                  </div>\r\n                  <div fxFlex=\"33.33\">\r\n                    <mat-label>Last Name *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input  placeholder=\"Enter Last Name\"\r\n                            matInput name=\"lastName\" \r\n                            type=\"text\"\r\n                            formControlName=\"lastName\"\r\n                            [readonly]=\"readorWrite\"\r\n                        />\r\n                        <mat-error *ngIf=\"userMaintenance.get('lastName').touched && !userMaintenance.get('lastName').valid\">\r\n                            Last Name is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                </div>\r\n                \r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n\r\n              \r\n                <div fxFlex=\"32.5\" *ngIf=\"!readorWrite\" >\r\n                  <mat-label>Till Id *</mat-label>\r\n                  <mat-form-field class=\"full-width\" appearance=\"fill\">          \r\n\r\n                    <!-- <mat-select name=\"tillId\" [formControl]=\"itemForm.controls['tillId']\" class=\"selectOption\"> -->\r\n                     \r\n                      <mat-select name=\"tillId\" formControlName=\"tillId\">\r\n                        <mat-option value=\"\" disabled>Select</mat-option>\r\n                      <mat-option *ngFor=\"let data of till\" [value]=\"data.tillVaultCode\">\r\n                        {{data?.tillVaultCode}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                     <mat-error\r\n                      *ngIf=\"userMaintenance.get('tillId').touched && !userMaintenance.get('tillId').valid\">\r\n                      Till Id is Required!\r\n                  </mat-error>\r\n                  </mat-form-field>\r\n                 </div> \r\n                <div fxFlex=\"32.5\" *ngIf=\"readorWrite\">\r\n                  <mat-label>Till Id *</mat-label>\r\n                  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    <input matInput readonly\r\n                    formControlName=\"tillId\">\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                  <mat-label>Department *</mat-label>\r\n                  <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                    \r\n                      <mat-select  name=\"department\" formControlName=\"department\"  placeholder=\"Select Department\"  >\r\n                          <mat-option   [value]=\"'Finance'\">Finance</mat-option>\r\n                          <mat-option   [value]=\"'IT'\">IT</mat-option>\r\n                          <mat-option   [value]=\"'Marketing'\">Marketing</mat-option>\r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"userMaintenance.get('department').touched && !userMaintenance.get('department').valid\">\r\n                          Department is Required!\r\n                      </mat-error>    \r\n                  </mat-form-field>\r\n                  \r\n              </div>\r\n              <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                <mat-label>Department *</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  <input matInput readonly\r\n                  formControlName=\"department\">\r\n                </mat-form-field>\r\n              </div>\r\n              <!-- <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\" >\r\n                <mat-label>Department *</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  \r\n                    <mat-select *ngIf=\"!readorWrite\"  name=\"department\" formControlName=\"department\"  placeholder=\"Select Department\"  >\r\n                        <mat-option   [value]=\"'Finance'\">Finance</mat-option>\r\n                        <mat-option   [value]=\"'IT'\">IT</mat-option>\r\n                        <mat-option   [value]=\"'Marketing'\">Marketing</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"userMaintenance.get('department').touched && !userMaintenance.get('department').valid\">\r\n                        Department is Required!\r\n                    </mat-error>    \r\n                </mat-form-field>\r\n            </div> -->\r\n\r\n               <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                <mat-label>Level For User *</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  \r\n                    <mat-select name=\"levelForUser\" formControlName=\"levelForUser\"  placeholder=\"Select Level For User\"  >\r\n                        <mat-option   [value]=\"'A'\">A</mat-option>\r\n                        <mat-option   [value]=\"'B'\">B</mat-option>\r\n                        <mat-option [value]=\"'C'\">C</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"userMaintenance.get('levelForUser').touched && !userMaintenance.get('levelForUser').valid\">\r\n                      Level For User is Required!\r\n                    </mat-error>    \r\n                </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n              <mat-label>Department *</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput readonly\r\n                formControlName=\"levelForUser\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n\r\n\r\n              <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                <mat-label>Finance *</mat-label>\r\n                <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                  \r\n                    <mat-select name=\"finance\" formControlName=\"finance\"  placeholder=\"Select Finance\"  >\r\n                        <mat-option   [value]=\"'low'\">Low</mat-option>\r\n                        <mat-option   [value]=\"'medium'\">Medium</mat-option>\r\n                        <mat-option   [value]=\"'high'\">High</mat-option>\r\n\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"userMaintenance.get('finance').touched && !userMaintenance.get('finance').valid\">\r\n                        Finance is Required!\r\n                    </mat-error>    \r\n                </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n              <mat-label>Department *</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput readonly\r\n                formControlName=\"finance\">\r\n              </mat-form-field>\r\n            </div>\r\n            \r\n            <div fxFlex=\"33.33\">\r\n              <mat-label>Select the time range for operating (In time)</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput type=\"time\" id=\"timeStart\" value=\"09:00\" (change)=\"onInputChange()\" formControlName=\"intime\"\r\n                  [readonly]=\"readorWrite\" />\r\n                <div class=\"errorColor\" *ngIf=\"userMaintenance.get('intime').invalid &&\r\n                        (userMaintenance.get('intime').dirty ||\r\n                        userMaintenance.get('intime').touched)\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"33.33\">\r\n              <mat-label>Select the time range for operating (Out time)</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input matInput type=\"time\" id=\"timeEnd\" value=\"\" (change)=\"onInputChange()\" formControlName=\"outtime\"\r\n                  [readonly]=\"readorWrite\" />\r\n                <div class=\"errorColor\" *ngIf=\"userMaintenance.get('outtime').invalid &&\r\n                        (userMaintenance.get('outtime').dirty ||\r\n                        userMaintenance.get('outtime').touched)\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div fxLayoutGap=\"15px\">\r\n            <div fxFlex=\"32.5\">\r\n              <mat-label>Password Generation Type</mat-label>\r\n              \r\n              &nbsp;&nbsp;&nbsp;\r\n                  <mat-button-toggle-group value=\"table\" formControlName=\"passwordGenerationType\"   name=\"fontStyle\" aria-label=\"Font Style\" (change)=\"onToggle($event)\" >\r\n                      <mat-button-toggle value=\"Auto\"><span style=\"color: black;\">Auto</span></mat-button-toggle>\r\n                      <mat-button-toggle value=\"Manual\"  style=\"color: black;\" ><span >Manual</span></mat-button-toggle>\r\n                  </mat-button-toggle-group>\r\n           </div>\r\n           <div fxFlex=\"33.33\" >\r\n              <mat-label *ngIf=\"isPassword;\">Password</mat-label>\r\n              <mat-form-field class=\"full-width\" appearance=\"fill\" *ngIf=\"isPassword;\">\r\n                  <input  placeholder=\"Enter Password\"\r\n                  [readonly]=\"readorWrite\"\r\n                      matInput name=\"password\" \r\n                      [type]=\"hide ? 'password' : 'text'\"\r\n                      autocomplete=\"off\"\r\n                      minlength={{minPass}}\r\n                      maxlength={{maxPass}}\r\n                      formControlName=\"password\"\r\n                      \r\n                  />\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\" style=\"cursor: pointer;\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </mat-form-field>\r\n              <mat-error \r\n              *ngIf=\"userMaintenance.get('password').touched && !userMaintenance.get('password').valid && !isEdit\">\r\n              <div  *ngIf=\"userMaintenance.get('password').errors.pattern\">{{errorMsg}}</div>\r\n            </mat-error>\r\n            <mat-error  *ngIf=\"userMaintenance.get('password').hasError('minlength') && !isEdit\" >\r\n              New Password Password must contain Minimum {{minPass}} digits.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"userMaintenance.get('password').hasError('maxlength') && !isEdit\" >\r\n              New Password must contain Maximum {{maxPass}} digits.\r\n            </mat-error>\r\n          </div>  \r\n          <div fxFlex=\"33.33\">\r\n            <mat-label>User Status</mat-label> \r\n            <div fxLayout=\"row\" style=\"margin-top: 5px;\">\r\n             <div>\r\n               <input formControlName=\"statusForUser\" type=\"radio\" name=\"enable\" [readonly]=\"readorWrite\" value=\"Enable\">Enable\r\n             </div>\r\n             <div style=\"padding-left: 40px;\">\r\n               <input formControlName=\"statusForUser\" type=\"radio\" name=\"enable\" id=\"radio\" [readonly]=\"readorWrite\" value=\"Disable\">Disable\r\n             </div>\r\n            </div>\r\n          </div> \r\n        </div>\r\n        <!-- <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n          \r\n            \r\n          \r\n        </div> -->\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                  <button  class=\"savebtn\" *ngIf=\"!isEdit\"\r\n                    color=\"primary\" \r\n                    [disabled]= \"userMaintenance.invalid\"\r\n                    mat-raised-button \r\n                    (click)=\"submit()\"\r\n                    >\r\n                    Save\r\n                  </button>&nbsp;&nbsp;\r\n                 <div [hidden]=\"readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(userMaintenance.invalid || userMaintenance.dirty)\"(click)=\"submit()\">\r\n                        Save\r\n                      </button>&nbsp;&nbsp;\r\n                 </div>\r\n                 \r\n                  <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                      Edit\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                  </div> \r\n                  <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                      Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  \r\n                  <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord()\">\r\n                      Delete\r\n                    </button> &nbsp;&nbsp;\r\n                  </div>\r\n                 \r\n                  <button\r\n                    mat-raised-button\r\n                    color=\"warn\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n                \r\n        </form>\r\n\r\n        \r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div  class=\"mt-32\">\r\n    <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n  </div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { tillVaultConfig } from 'app/shared/models/tillVaultConfig';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-popup',\r\n  templateUrl: './till-vault-popup.component.html',\r\n  styleUrls: ['./till-vault-popup.component.scss']\r\n})\r\nexport class TillVaultPopupComponent implements OnInit {\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  public tillVaultForm: FormGroup;\r\n  vaultConfig: tillVaultConfig;\r\n  currency: string[] = [];\r\n  till: any[] = [];\r\n  entity: string[] = [];\r\n  tillData: any;\r\n  loggedInUser : string;\r\n  auditData : tillVaultConfig;\r\n  isAuditData : boolean = false;\r\n  id: number;\r\n  isEdit: boolean = false;\r\n  minCashHoldingValue: number;\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultPopupComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private dataService: DataService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.dataService.getTillVaultConfig.subscribe(data => {\r\n    //   console.log(data)\r\n    //   this.vaultConfig = typeof this.vaultConfig === 'object' ? data : {};\r\n    // });\r\n\r\n     setTimeout(() => {  \r\n        this.vaultConfig = JSON.parse(localStorage.getItem('fetchVaultConfig'));\r\n        console.log(\" this.vaultConfig\", this.vaultConfig)\r\n        if(this.vaultConfig == null || this.vaultConfig == undefined){\r\n          this.buildItemForm({})\r\n        }       \r\n        else if(this.vaultConfig.id != null || this.vaultConfig.id != undefined){\r\n        this.loader.open();\r\n        this.id = this.vaultConfig.id;\r\n        this.buildItemForm(this.vaultConfig);\r\n        this.auditData = this.vaultConfig;\r\n        this.isEdit = true;\r\n        this.isAuditData = true;\r\n        this.dataService.setAuditLogData(this.auditData);\r\n        this.loader.close();\r\n        }\r\n      }, 1000)\r\n\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n    this.getEntityCode();\r\n\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    // this.buildItemForm(this.data.payload);\r\n    // this.countryCurrency=this.data.currency;\r\n    // this.tillId=this.data.till;\r\n    // this.branchCode=this.data.branchCode;\r\n    // this.bankCode=this.data.bankCode;\r\n  }\r\n  getValue(val: any) {\r\n    this.minCashHoldingValue = val;\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.tillVaultForm = this.fb.group({\r\n      bankCode: [item.bankCode || '', [Validators.required]],\r\n      branchCode: [item.branchCode || '', [Validators.required]],\r\n      // currency: [item.currency || '', [Validators.required]],\r\n      tillVaultCode: [item.tillVaultCode || '', [Validators.required]],\r\n      currencyCode: [item.currencyCode || '', [Validators.required]],\r\n      tillVaultAccount: [item.tillVaultAccount || '', [Validators.required]],\r\n      shortageOverageAccount: [item.shortageOverageAccount || '', [Validators.required]],\r\n      limitAmount: [item.limitAmount || '', [Validators.required]],\r\n      entityCode: [item.entityCode || '', [Validators.required]],\r\n      id: [item.id || null],\r\n      // maxCashHolding: [item.maxCashHolding || '',[Validators.required, Validators.min(this.minCashHoldingValue)]],\r\n      maxCashHolding: [item.maxCashHolding || '', [Validators.required, (control: AbstractControl) => Validators.min(this.minCashHoldingValue)(control)]],\r\n      minCashHolding: [item.minCashHolding || '', Validators.required],\r\n      // tillId: [item.tillId || '', [Validators.required]],\r\n    })\r\n  }\r\n  numericValidation(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  alhanumericValidation(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Save of tillVaultConfig\r\n  submit() {\r\n    if (this.tillVaultForm.invalid) {\r\n      return;\r\n    } else {\r\n        // this.tillData = this.till.find(x => x.tillVaultCode == this.tillVaultForm.value.tillId);\r\n        // this.tillVaultForm.value.tillId = this.tillData.id;\r\n        this.tillVaultForm.value.loggedInUser=this.loggedInUser;\r\n        this.apiService.saveoftillVaultConfig(this.tillVaultForm.value).subscribe((resp) => {\r\n        this.router.navigate([`/maintenance/main/tillVaultConfig`]).then(_ => {\r\n          this.snack.open('Data Saved Successfully!', 'OK',\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n            localStorage.removeItem('fetchVaultConfig');\r\n        });\r\n      }, (err: any) => {\r\n        this.snack.open(`Error!`, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      }\r\n      )\r\n    }\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser;\r\n    this.apiService.getAuditLogsFortillvaultconfig(payload).subscribe((data) => {\r\n      console.log(data);\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.snack.open(`Record ${message} successfully!`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    localStorage.removeItem('fetchVaultConfig');\r\n    this.router.navigate([\"/maintenance/main/tillVaultConfig\"]);\r\n  }\r\n\r\n  getCurrency() {\r\n    // this.apiService.getCountryValues().subscribe((resp) => {\r\n    //   this.currency = resp;\r\n    // });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.bankCode);\r\n      // this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.branchCode);\r\n      // this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      console.log(\"tillData\",resp)\r\n      this.till = resp;\r\n   });\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.entity.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.entity);\r\n      // this.entity = resp;\r\n    });\r\n  }\r\n  dataByBankCode(index,item){\r\n    return item?.bankCode;\r\n  }\r\n  dataByBranchCode(index,item){\r\n    return item?.branchCode;\r\n  }\r\n  dataByEntityCode(index,item){\r\n    return item?.entityCode;\r\n  }\r\n  dataByCurrencyCode(index,item){\r\n    return item?.currencyCode;\r\n  }\r\n  dataByTillVaultCode(index,item){\r\n    return item.currencyCode;\r\n  }\r\n  \r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Configuration Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Till Vault Configuration Details</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Till Vault Configuration Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Till Vault Configuration Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <div *ngIf=\"!isEdit\">\r\n      <h1 matDialogTitle>Add Till Vault Configuration Details</h1>\r\n    </div>\r\n    <div *ngIf=\"isEdit\">\r\n      <h1 matDialogTitle>Edit Till Vault Configuration Details</h1>\r\n    </div> -->\r\n    <form [formGroup]=\"tillVaultForm\" *ngIf=\"tillVaultForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <!-- <mat-select *ngIf=\"readorWrite\" name=\"entityCode\" formControlName=\"entityCode\"\r\n              class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of entity; trackBy:dataByEntityCode\" [value]=\"data.entityCode\">\r\n                {{data?.entityCode}}\r\n              </mat-option>\r\n            </mat-select> -->\r\n            <mat-select name=\"entityCode\" formControlName=\"entityCode\"\r\n            class=\"selectOption\">\r\n            <mat-option *ngFor=\"let data of entity; trackBy:dataByEntityCode\" [value]=\"data.entityCode\">\r\n              {{data?.entityCode}}\r\n            </mat-option>\r\n          </mat-select>\r\n          \r\n            <mat-error\r\n            *ngIf=\"tillVaultForm.get('entityCode').touched && !tillVaultForm.get('entityCode').valid\">\r\n            Entity Code is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"bankCode\" formControlName=\"bankCode\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBankCode\" [value]=\"data.bankCode\">\r\n                {{data?.bankCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('bankCode').touched && !tillVaultForm.get('bankCode').valid\">\r\n              Bank Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"branchCode\" formControlName=\"branchCode\"  class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of branchCode; trackBy:dataByBranchCode\" [value]=\"data.branchCode\">\r\n                {{data?.branchCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('branchCode').touched && !tillVaultForm.get('branchCode').valid\">\r\n              Branch Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <!-- <div fxFlex=\"33.33\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"currency\" formControlName=\"currency\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of currency; trackBy:dataByCurrencyCode\" [value]=\"data.currencyCode\">\r\n                {{data.currencyCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('currency').touched && !tillVaultForm.get('currency').valid\">\r\n              Currency is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div> -->\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Min Cash Holding *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"minCashHolding\" #minCash (keyup)=getValue(minCash.value)\r\n              (keypress)=\"numericValidation($event)\" formControlName=\"minCashHolding\" >\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('minCashHolding').touched && !tillVaultForm.get('minCashHolding').valid\">\r\n              Min Cash Holding is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Max Cash Holding *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"maxCashHolding\" (keypress)=\"numericValidation($event)\"\r\n              formControlName=\"maxCashHolding\" min=\"tillVaultForm.controls['minCashHolding']\">\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('maxCashHolding').touched && !tillVaultForm.get('maxCashHolding').valid\">\r\n              Max Cash Holding should be greater than min cash holding!\r\n            </mat-error>\r\n            <!-- <mat-error *ngIf=\"tillVaultForm.controls['maxCashHolding'].errors?.min\">\r\n              Max Cash Holding should greater than min cash holding!\r\n            </mat-error> -->\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Till Vault Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput (keypress)=\"alhanumericValidation($event)\" name=\"tillVaultCode\" maxlength=\"10\" formControlName=\"tillVaultCode\" >\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('tillVaultCode').touched && !tillVaultForm.get('tillVaultCode').valid\">\r\n              Till Vault Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <!-- <div fxFlex=\"33.33\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select name=\"tillId\" formControlName=\"tillId\" class=\"selectOption\">\r\n              <mat-option *ngFor=\"let data of till\" [value]=\"data.tillVaultCode\">\r\n                {{data?.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"tillVaultForm.get('tillId').touched && !tillVaultForm.get('tillId').valid\">\r\n              Till Id is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div> -->\r\n        \r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Currency Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput (keypress)=\"alhanumericValidation($event)\" name=\"currencyCode\" maxlength=\"3\" formControlName=\"currencyCode\" >\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('currencyCode').touched && !tillVaultForm.get('currencyCode').valid\">\r\n              Currency Code is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Till Vault Account *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput (keypress)=\"alhanumericValidation($event)\" name=\"tillVaultAccount\" maxlength=\"20\" formControlName=\"tillVaultAccount\" >\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('tillVaultAccount').touched && !tillVaultForm.get('tillVaultAccount').valid\">\r\n              Till Vault Account is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Shortage Overage Account *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput (keypress)=\"alhanumericValidation($event)\" name=\"shortageOverageAccount\" maxlength=\"20\" formControlName=\"shortageOverageAccount\" >\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('shortageOverageAccount').touched && !tillVaultForm.get('shortageOverageAccount').valid\">\r\n              Shortage Overage Account is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\">\r\n          <mat-label>Limit Amount *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"limitAmount\" maxlength=\"10\" (keypress)=\"numericValidation($event)\" formControlName=\"limitAmount\" >\r\n            <mat-error\r\n              *ngIf=\"tillVaultForm.get('limitAmount').touched && !tillVaultForm.get('limitAmount').valid\">\r\n              Limit Amount is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button *ngIf=\"!isEdit\" mat-raised-button color=\"primary\" [disabled]=\"tillVaultForm.invalid\"\r\n            (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          \r\n\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Location } from '@angular/common';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\n\r\n\r\n@Component({\r\n  selector: 'app-menus',\r\n  templateUrl: './menus.component.html',\r\n  styleUrls: ['./menus.component.scss']\r\n})\r\nexport class MenusComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n  currentUser: any;\r\n  menus: any;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource = new MatTableDataSource();\r\n  loading: boolean;\r\n  displayedColumns: string[] = ['id', 'screenName', 'routing', 'parentId', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'screenName', value: 'Screen Name' },\r\n    { key: 'routing', value: 'Routing' },\r\n   \r\n  ];\r\n  \r\n  constructor(private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private dataService:DataService,\r\n    private _location: Location,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private ls: LocalStoreService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    console.log(this.currentUser);\r\n    this.getAllNavs();\r\n  }\r\n\r\n  getAllNavs(){\r\n    this.loader.open();\r\n      this.apiService.getMaintenanceMenu().subscribe((data: any) => {\r\n        console.log(\"Menus ??\", data);\r\n        this.loader.close();\r\n        this.menus = data;\r\n        for(let i=0;i<data.length;i++){\r\n\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n  \r\n        }\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }, (err: any) => {\r\n        console.error();\r\n        this.loader.close();\r\n      })\r\n  }\r\n\r\n  goToDetails(row) {\r\n    console.log(row);\r\n    this.dataService.changeNav(row);\r\n    this.router.navigate([`/maintenance/main/menu-config/${row.id}`]);\r\n    // this.router.navigate([`/maintenance/main/menu-config/addEditMenu`],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  openDialogue() {\r\n    this.router.navigate([`/maintenance/main/addEditMenu`]);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({ message: `Are you sure, you want to delete ${row.screenName}?` })\r\n      .subscribe(res => {\r\n      console.log(res)\r\n      console.log(row)\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteMenu(row.id)\r\n            .subscribe(data => {\r\n            },\r\n              err => {\r\n                if (err.status == 200) {\r\n                  this.loader.close();\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n                this.getAllNavs();\r\n\r\n              })\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n  goBack(){\r\n    // this._location.back();\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n   \r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      if(data[filterBy] !=null){\r\n      return (\r\n        data[filterBy].trim().toLocaleLowerCase().includes(filter)\r\n      )}\r\n    }\r\n  }\r\n  \r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n \r\n \r\n   applyFilter(event: Event) {\r\n     \r\n     const filterValue = (event.target as HTMLInputElement).value;\r\n     this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\r\n   }\r\n   announceSortChange(sortState: Sort) {\r\n     if (sortState.direction) {\r\n       this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n     } else {\r\n       this._liveAnnouncer.announce('Sorting cleared');\r\n     }\r\n   }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home >  Maintenance Summary > Menu Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\"> Menu Maintenance </span>\r\n  <span fxFlex></span>\r\n  <!-- <button mat-button (click)=\"openDialogue()\">\r\n    <mat-icon>add</mat-icon>Add New\r\n  </button> -->\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <table style=\"margin: 18px;\">\r\n    <tr>\r\n      <td>\r\n        <h2>\r\n          Menus\r\n        </h2>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <div class=\"highlight\">\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </table>  \r\n  <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n      <div>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Filter By</mat-label>\r\n          <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\"> -->\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\">\r\n\r\n            <mat-option value=\"0\">Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Search</mat-label>\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\"> -->\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\">\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div style=\"padding-top: 3px;\">\r\n        <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n      </div>\r\n      <div>\r\n       <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"openDialogue()\"   style=\"height: 45px; margin-left: 15cm;\" >ADD NEW\r\n  \r\n           </button>\r\n     </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort>\r\n      <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"\"\r\n        >\r\n          #\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"screenName\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by Screen Name\"\r\n          >Screen Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.screenName }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"routing\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by Routing\"\r\n        >\r\n          Routing\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.routing }} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"parentId\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by Parent ID\"\r\n        >\r\n          Parent ID\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{ element.parentId }} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by Auth Status\"\r\n        >\r\n          Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.authStatus }}\r\n        </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell\r\n          *matHeaderCellDef\r\n          mat-sort-header\r\n          sortActionDescription=\"Sort by Record Status\"\r\n        >\r\n          Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          {{ element.recordStatus }}\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"goToDetails(element)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.oneTimeAuth == 'Y'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"></mat-paginator>\r\n  </div>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MenuDialogComponent } from '../menu-dialog/menu-dialog.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-menu-details',\r\n  templateUrl: './menu-details.component.html',\r\n  styleUrls: ['./menu-details.component.scss']\r\n})\r\nexport class MenuDetailsComponent implements OnInit {\r\n  currentUser: any;\r\n  menuForm: FormGroup;\r\n  navItem: any;\r\n  auditLogData: any;\r\n  parentMenus: any = [];\r\n\r\n  loggedInUser: any;\r\n  id: any;\r\n  readorWrite: boolean=true;\r\n  isEdit: boolean = false;\r\n  isAuditData: boolean = false;\r\n  parentId: any;\r\n\r\n  constructor(private apiService: ApiService,\r\n    private fb: FormBuilder,\r\n    private dialogue: MatDialog,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.getParentMenu();\r\n\r\n    this.dataService.currentNav.subscribe((data: any) => {\r\n      if (!this.isEmpty(data)) {\r\n        this.navItem = data;\r\n        this.id = data.id;\r\n        this.auditLogData = data;\r\n        this.isEdit = true;\r\n        this.isAuditData = true;\r\n        this.buildMenuForm(this.navItem);\r\n        this.dataService.setAuditLogData(this.auditLogData);\r\n      } else {\r\n        this.readorWrite=false;\r\n        this.goBack();\r\n      }\r\n    });\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.parentId=params.get('id');\r\n      if(this.parentId){\r\n        this.apiService.editMenuMaintenance(this.parentId).subscribe((resp)=>{\r\n          console.log(resp);\r\n          })\r\n      }\r\n    \r\n      console.log(\"param\",params)\r\n     \r\n    })\r\n  }\r\n\r\n  buildMenuForm(item: any) {\r\n    this.menuForm = this.fb.group({\r\n      id: [item.id || null],\r\n      screenCode: [item.screenCode || \"\"],\r\n      screenName: [item.screenName || \"\"],\r\n      parentId: [item.parentId || \"\"],\r\n      routing: [item.routing || \"\"],\r\n      status: true,\r\n    });\r\n  }\r\n\r\n  isEmpty(obj) {\r\n    for (var prop in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return JSON.stringify(obj) === JSON.stringify({});\r\n  }\r\n\r\n  getParentMenu() {\r\n    this.apiService.getMaintenanceParentMenu().subscribe((res: any) => {\r\n      this.parentMenus = res;\r\n      console.log(this.parentMenus)\r\n    }, (err: any) => {\r\n\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.menuForm.invalid) {\r\n      return;\r\n    }\r\n    console.log(this.menuForm.value);\r\n\r\n    let payload: any = {};\r\n    payload = this.menuForm.value;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.loader.open();\r\n    this.apiService.upsertMenu(payload).subscribe(res => {\r\n      this.loader.close();\r\n      this.goBack();\r\n    }, err => {\r\n      this.loader.close();\r\n    })\r\n\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteMenu(this.auditLogData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsForMenu(payload).subscribe((data) => {\r\n      console.log(data);\r\n      this.auditLogData = data;\r\n      this.dataService.setAuditLogData(this.auditLogData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  openDialogue(data: any = {},isEdit : string) {\r\n    this.dataService.setchildMenuDetails(data);\r\n    this.router.navigate(['/maintenance/main/addEditMenu/menuDialog'],{ queryParams: { id: data.id, parenId : this.id,isEdit:true } });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/menu-config`]);\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home >  Maintenance Summary > Menu Maintenance > Edit Menu Maintenance</small></h1>\r\n<div fxLayout=\"row\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 class=\"add-text\">Edit Menu</h1>\r\n  <span fxFlex></span>\r\n</div>\r\n\r\n<mat-card>\r\n  <!-- <h1>Edit Menu Information</h1> -->\r\n  <mat-card-content>\r\n    <form class=\"mt-32\" [formGroup]=\"menuForm\">\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>ScreenName </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  [readonly]=\"readorWrite\" matInput name=\"name\" formControlName=\"screenName\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>ScreenCode </mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  [readonly]=\"readorWrite\" matInput name=\"code\" formControlName=\"screenCode\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Route *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input  [readonly]=\"readorWrite\" matInput name=\"route\" formControlName=\"routing\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Parent Menu</mat-label>\r\n                <mat-select formControlName=\"parentId\">\r\n                  <mat-option *ngFor=\"let item of parentMenus\" [value]=\"item.id\">\r\n                    {{item.screenName}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n          </div>\r\n      </div> -->\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button \r\n            color=\"primary\" *ngIf=\"!isEdit\"\r\n            [disabled]= \"menuForm.invalid\"\r\n            mat-raised-button \r\n            (click)=\"onSubmit()\"\r\n          >\r\n            Save\r\n          </button>\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(menuForm.invalid || menuForm.dirty)\"(click)=\"onSubmit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          \r\n          \r\n          <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n        </div>\r\n      </div>     \r\n    </form>\r\n\r\n    <div class=\"margin-333 mt-16\">\r\n      <table\r\n        class=\"cart-table default-bg mat-elevation-z1 mt-16\"\r\n        *ngIf=\"navItem?.sub != null\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th class=\"text-muted\">ID</th>\r\n            <th class=\"text-muted\">ScreenCode</th>\r\n            <th class=\"text-muted\">ScreenName</th>\r\n            <th class=\"text-muted\">Routing</th>\r\n            <th class=\"text-muted\">Parent ID</th>\r\n            <th class=\"text-muted\">Edit</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <ng-container *ngFor=\"let child of navItem?.sub; let i = index\">\r\n            <tr>\r\n              <td>{{ child.id }}</td>\r\n              <td>{{ child.screenName }}</td>\r\n              <td>{{ child.screenCode }}</td>\r\n              <td>{{ child.routing }}</td>\r\n              <td>{{ child.id }}</td>\r\n              <td>\r\n                <button\r\n                  mat-icon-button\r\n                  color=\"primary\"\r\n                  (click)=\"openDialogue(child)\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr *ngFor=\"let item of child?.sub; let i = index\">\r\n              <td>{{ child.id }}</td>\r\n              <td>{{ item.screenName }}</td>\r\n              <td>{{ item.screenCode }}</td>\r\n              <td>{{ item.routing }}</td>\r\n              <td>{{ item.id }}</td>\r\n              <td>\r\n                <button\r\n                  mat-icon-button\r\n                  color=\"primary\"\r\n                  (click)=\"openDialogue(item,'YES')\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr *ngFor=\"let item2 of item?.sub; let i = index\">\r\n              <td>{{ child.id }}</td>\r\n              <td>{{ item2.screenName }}</td>\r\n              <td>{{ item2.screenCode }}</td>\r\n              <td>{{ item2.routing }}</td>\r\n              <td>{{ item2.id }}</td>\r\n              <td>\r\n                <button\r\n                  mat-icon-button\r\n                  color=\"primary\"\r\n                  (click)=\"openDialogue(item2,'YES')\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr *ngFor=\"let item3 of item2?.sub; let i = index\">\r\n              <td>{{ child.id }}</td>\r\n              <td>{{ item3?.screenName }}</td>\r\n              <td>{{ item3?.screenCode }}</td>\r\n              <td>{{ item3?.routing }}</td>\r\n              <td>{{ item3.id }}</td>\r\n              <td>\r\n                <button\r\n                  mat-icon-button\r\n                  color=\"primary\"\r\n                  (click)=\"openDialogue(item3,'YES')\"\r\n                >\r\n                  <mat-icon>edit</mat-icon>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n      </table>\r\n      <div *ngIf=\"navItem?.sub == null\">\r\n        <span>Not Nested Menu</span>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"isAuditData\" class=\"mt-32\">\r\n  <app-audit-log #auditLog></app-audit-log>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedMaterialModule } from 'app/shared/shared-material.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { SharedDirectivesModule } from 'app/shared/directives/shared-directives.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedPipesModule } from 'app/shared/pipes/shared-pipes.module';\r\nimport { MaintenanceHomeComponent } from './maintenance-home.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { maintenanceRoutes } from './maintenance-routing.module';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { TransactionTypeCrudTableComponent } from './transaction-type/transaction-type-crud-table/transaction-type-crud-table.component';\r\nimport { TransactionTypePopupTableComponent } from './transaction-type/transaction-type-table-popup/transaction-type-popup-table/transaction-type-popup-table.component';\r\nimport { AccountTypeTablePopupComponent } from './account-type/account-type-table-popup/account-type-table-popup.component';\r\nimport { AccountTypeCrudTableComponent } from './account-type/account-type-crud-table/account-type-crud-table.component';\r\nimport { TillVaultSummaryComponent } from './till-vault-config/till-vault-summary/till-vault-summary.component';\r\nimport { TillVaultPopupComponent } from './till-vault-config/till-vault-popup/till-vault-popup.component';\r\nimport { TillVaultDenominationComponent } from './tillVaultDenomination/till-vault-denomination/till-vault-denomination.component';\r\nimport { TillVaultDenominationSummaryComponent } from './tillVaultDenomination/till-vault-denomination-summary/till-vault-denomination-summary.component';\r\nimport { TillVaultCcyPopupComponent } from './till-vault-ccy-bal/till-vault-ccy-popup/till-vault-ccy-popup.component';\r\nimport { TillVaultCcySummryComponent } from './till-vault-ccy-bal/till-vault-ccy-summry/till-vault-ccy-summry.component';\r\nimport { TransactionDenominationHistoryComponent } from './TransactionDenominationHistory/transaction-denomination-history/transaction-denomination-history.component';\r\nimport { TransactionDenominationSummaryComponent } from './TransactionDenominationHistory/transaction-denomination-summary/transaction-denomination-summary.component';\r\nimport { BaseDenominationSummaryComponent } from './base-denomination/base-denomination-summary/base-denomination-summary.component';\r\nimport { BaseDenominationPopupComponent } from './base-denomination/base-denomination-popup/base-denomination-popup.component';\r\nimport { DemonMasterCrudNgxTableComponent } from './denominationMaster/demon-master-crud-ngx-table/demon-master-crud-ngx-table.component';\r\nimport { DenomMasterTablePopupComponent } from './denominationMaster/demon-master-crud-ngx-table/denom-master-table-popup/denom-master-table-popup.component';\r\nimport { TillVaultStatusSummaryComponent } from './till-vault-status/till-vault-status-summary/till-vault-status-summary.component';\r\nimport { TillVaultStatusComponent } from './till-vault-status/till-vault-status/till-vault-status.component';\r\nimport { TxnCashMasterCrudTableComponent } from './transaction-cash-master/txn-cash-master-crud-table/txn-cash-master-crud-table.component';\r\nimport { TxnCashMasterTablePopupComponent } from './transaction-cash-master/txn-cash-master-table-popup/txn-cash-master-table-popup.component';\r\nimport { TillVaultMasterPopupComponent } from './till-vault-master/till-vault-master-popup/till-vault-master-popup/till-vault-master-popup.component';\r\nimport { TillVaultMasterSummaryComponent } from './till-vault-master/till-vault-master-summary/till-vault-master-summary/till-vault-master-summary.component';\r\nimport { CrudNgxTableComponent } from './branch/crud-ngx-table.component';\r\nimport { NgxTablePopupComponent } from './branch/ngx-table-popup/ngx-table-popup.component';\r\nimport { TillVaultBranchMapComponent } from './tillVaultBranchMap/till-vault-branch-map/till-vault-branch-map.component';\r\nimport { TillVaultBranchMapSummaryComponent } from './tillVaultBranchMap/till-vault-branch-map-summary/till-vault-branch-map-summary.component';\r\nimport { TillVaultCcybalHispopupComponent } from './till-vault-ccy-bal-history/till-vault-ccybal-hispopup/till-vault-ccybal-hispopup.component';\r\nimport { TillVaultCcybalHisSummaryComponent } from './till-vault-ccy-bal-history/till-vault-ccybal-his-summary/till-vault-ccybal-his-summary.component';\r\nimport { BankDetailsComponent } from './bank/bank-details/bank-details.component';\r\nimport { BankListComponent } from './bank/bank-list/bank-list.component';\r\nimport { MainHomeComponent } from './main-home/main-home.component';\r\nimport { AuditLogComponent } from './audit-log/audit-log.component';\r\nimport { CountryStateMaintenanceComponent } from './country-state-maintenance/country-state-maintenance.component';\r\nimport { CountryStatePopupComponent } from './country-state-maintenance/country-state-popup/country-state-popup.component';\r\nimport { HolidayMaintenanceComponent } from './holiday-maintenance/holiday-maintenance.component';\r\nimport { BranchHolidayComponent } from './holiday-maintenance/branch-holiday/branch-holiday.component';\r\nimport { CurrencyHolidayComponent } from './holiday-maintenance/currency-holiday/currency-holiday.component';\r\nimport { ClearingHolidayComponent } from './holiday-maintenance/clearing-holiday/clearing-holiday.component';\r\nimport { AddHolidayComponent } from './holiday-maintenance/branch-holiday/add-holiday/add-holiday.component';\r\nimport { EntityMaintenanceComponent } from './entity-maintenance/entity-maintenance.component';\r\nimport { StateMaintenanceComponent } from './state-maintenance/state-maintenance.component';\r\nimport { StatePopupComponent } from './state-maintenance/state-popup/state-popup.component';\r\nimport { AddEntityDetailsComponent } from './entity-maintenance/add-entity-details/add-entity-details.component';\r\nimport { BranchHolidayPopupComponent } from './holiday-maintenance/branch-holiday/branch-holiday-popup/branch-holiday-popup.component';\r\nimport { SubMenuComponent } from './main-home/sub-menu/sub-menu.component';\r\nimport { CommonHolidayComponent } from './holiday-maintenance/branch-holiday/common-holiday/common-holiday.component';\r\nimport { FilterPipe } from 'app/shared/pipes/filter.pipe';\r\nimport { BillerInfoMaintenanceComponent } from './biller-info-maintenance/biller-info-maintenance.component';\r\nimport { AddOrEditBillerInfoComponent } from './biller-info-maintenance/add-or-edit-biller-info/add-or-edit-biller-info.component';\r\nimport { AddBranchComponent } from './holiday-maintenance/branch-holiday/add-branch/add-branch.component';\r\nimport { TxnchargesMaintenanceComponent } from './txncharges-maintenance/txncharges-maintenance.component';\r\nimport { AddTxnchargesComponent } from './txncharges-maintenance/add-txncharges/add-txncharges.component';\r\nimport { TillVaultCcyDemonBalComponent } from './till-vault-ccy-demon-bal/till-vault-ccy-demon-bal.component';\r\nimport { AddTillvaultCcyDemonbalComponent } from './till-vault-ccy-demon-bal/add-tillvault-ccy-demonbal/add-tillvault-ccy-demonbal.component';\r\nimport { ProductMaintenanceComponent } from './product-maintenance/product-maintenance.component';\r\nimport { AddProductMaintenanceComponent } from './product-maintenance/add-product-maintenance/add-product-maintenance.component';\r\nimport { CustomCalenderComponent } from './holiday-maintenance/branch-holiday/custom-calender/custom-calender.component';\r\nimport { HolidayListDialogComponent } from './holiday-maintenance/branch-holiday/holiday-list-dialog/holiday-list-dialog.component';\r\nimport { CustomCalendarArrTypeComponent } from './holiday-maintenance/branch-holiday/custom-calendar-arr-type/custom-calendar-arr-type.component';\r\nimport { CurrencyMaintSummaryComponent } from './currency-maint-summary/currency-maint-summary.component';\r\nimport { AddCurrencyMaintComponent } from './currency-maint-summary/add-currency-maint/add-currency-maint.component';\r\nimport { CurrencyPairMaintenanceComponent } from './currency-pair-maintenance/currency-pair-maintenance.component';\r\nimport { AddCurrencyPairMaintanenceComponent } from './currency-pair-maintenance/add-currency-pair-maintanence/add-currency-pair-maintanence.component';\r\nimport { CurrencyPairaRatesMaintenanceComponent } from './currency-paira-rates-maintenance/currency-paira-rates-maintenance.component';\r\nimport { AddCurrencyPairRatesMaintenanceComponent } from './currency-paira-rates-maintenance/add-currency-pair-rates-maintenance/add-currency-pair-rates-maintenance.component';\r\nimport { MenusComponent } from './menus/menus.component';\r\nimport { MenuDetailsComponent } from './menus/menu-details/menu-details.component';\r\nimport { MenuDialogComponent } from './menus/menu-dialog/menu-dialog.component';\r\nimport { UserMaintenanceComponent } from './user-maintenance/user-maintenance.component';\r\nimport { AddUserMaintenanceComponent } from './user-maintenance/add-user-maintenance/add-user-maintenance.component';\r\nimport { AddEditMenuDetailsComponent } from './menus/add-edit-menu-details/add-edit-menu-details.component';\r\nimport { RoleMaintenanceSummaryComponent } from './role-maintenance-summary/role-maintenance-summary.component';\r\nimport { RoleMaintenanceComponent } from './role-maintenance/role-maintenance.component';\r\nimport { SecurityPolicyComponent } from './security-policy/security-policy.component';\r\nimport { AddSecuritypolicyComponent } from './add-securitypolicy/add-securitypolicy.component';\r\nimport { AddEditSecurityPolicyComponent } from './add-edit-security-policy/add-edit-security-policy.component';\r\nimport { CustomerCategoryComponent } from './customer-category/customer-category.component';\r\nimport { CustomerChargeCategoryComponent } from './customer-charge-category/customer-charge-category.component';\r\nimport { CutomerCategoryCreateComponent } from './customer-category/cutomer-category-create/cutomer-category-create.component';\r\nimport { CutomerChargeCategoryCreateComponent } from './customer-charge-category/cutomer-charge-category-create/cutomer-charge-category-create.component';\r\nimport { CityMaintenanceComponent } from './city-maintenance/city-maintenance.component';\r\nimport { AddEditCityComponent } from './city-maintenance/add-edit-city/add-edit-city.component';\r\nimport { KioskLoginComponent } from './kiosk-login/kiosk-login.component';\r\nimport { AddKioskLoginMaintenanceComponent } from './kiosk-login/add-kiosk-login-maintenance/add-kiosk-login-maintenance.component';\r\nimport { WorkflowMaintenanceComponent } from './workflow-maintenance/workflow-maintenance.component';\r\nimport { ChargeMaintSummaryComponent } from './charge-maint-summary/charge-maint-summary.component';\r\nimport { AddChargeMantComponent } from './charge-maint-summary/add-charge-mant/add-charge-mant.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MaintenanceHomeComponent,\r\n    CrudNgxTableComponent,\r\n    NgxTablePopupComponent,\r\n    TransactionTypeCrudTableComponent,\r\n    TransactionTypePopupTableComponent,\r\n    AccountTypeTablePopupComponent,\r\n    AccountTypeCrudTableComponent,\r\n    TillVaultSummaryComponent,\r\n    TillVaultPopupComponent,\r\n    TillVaultDenominationComponent,\r\n    TillVaultDenominationSummaryComponent,\r\n    TillVaultCcyPopupComponent,\r\n    TillVaultCcySummryComponent,\r\n    TransactionDenominationHistoryComponent,\r\n    TransactionDenominationSummaryComponent,\r\n    BaseDenominationSummaryComponent,\r\n    BaseDenominationPopupComponent,\r\n    DemonMasterCrudNgxTableComponent,\r\n    DenomMasterTablePopupComponent,\r\n    TillVaultStatusSummaryComponent,\r\n    TillVaultStatusComponent,\r\n    TxnCashMasterCrudTableComponent,\r\n    TxnCashMasterTablePopupComponent,\r\n    TillVaultMasterPopupComponent,\r\n    TillVaultMasterSummaryComponent,\r\n    TillVaultBranchMapComponent,\r\n    TillVaultBranchMapSummaryComponent,\r\n    TillVaultCcybalHispopupComponent,\r\n    TillVaultCcybalHisSummaryComponent,\r\n    BankListComponent,\r\n    BankDetailsComponent,\r\n    MainHomeComponent,\r\n    AuditLogComponent,\r\n    CountryStateMaintenanceComponent,\r\n    CountryStatePopupComponent,\r\n    HolidayMaintenanceComponent,\r\n    BranchHolidayComponent,\r\n    CurrencyHolidayComponent,\r\n    ClearingHolidayComponent,\r\n    AddHolidayComponent,\r\n    EntityMaintenanceComponent,\r\n    StateMaintenanceComponent,\r\n    StatePopupComponent,\r\n    AddEntityDetailsComponent,\r\n    BranchHolidayPopupComponent,\r\n    SubMenuComponent,\r\n    CommonHolidayComponent,\r\n    BillerInfoMaintenanceComponent,\r\n    AddOrEditBillerInfoComponent,\r\n    AddTillvaultCcyDemonbalComponent,\r\n    ProductMaintenanceComponent,\r\n    AddProductMaintenanceComponent,\r\n    HolidayListDialogComponent,\r\n    AddCurrencyMaintComponent,\r\n    CurrencyPairaRatesMaintenanceComponent,\r\n    AddCurrencyPairRatesMaintenanceComponent,\r\n    FilterPipe,\r\n    AddBranchComponent,\r\n    TxnchargesMaintenanceComponent,\r\n    AddTxnchargesComponent,\r\n    TillVaultCcyDemonBalComponent,\r\n    CustomCalenderComponent,\r\n    CurrencyMaintSummaryComponent,\r\n    CurrencyPairMaintenanceComponent,\r\n    AddCurrencyPairMaintanenceComponent,\r\n    CustomCalendarArrTypeComponent,\r\n    MenusComponent,\r\n    MenuDetailsComponent,\r\n    MenuDialogComponent,\r\n    UserMaintenanceComponent,\r\n    AddUserMaintenanceComponent,\r\n    AddEditMenuDetailsComponent,\r\n    RoleMaintenanceSummaryComponent,\r\n    RoleMaintenanceComponent,\r\n    SecurityPolicyComponent,\r\n    AddSecuritypolicyComponent,\r\n    AddEditSecurityPolicyComponent,\r\n    CustomerCategoryComponent,\r\n    CustomerChargeCategoryComponent,\r\n    CutomerCategoryCreateComponent,\r\n    CutomerChargeCategoryCreateComponent,\r\n    CityMaintenanceComponent,\r\n    AddEditCityComponent,\r\n    KioskLoginComponent,\r\n    AddKioskLoginMaintenanceComponent,\r\n    WorkflowMaintenanceComponent,\r\n    ChargeMaintSummaryComponent,\r\n    AddChargeMantComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    NgxDatatableModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedPipesModule,\r\n    SharedDirectivesModule,\r\n    SharedMaterialModule,\r\n    RouterModule.forChild(maintenanceRoutes)\r\n  ]\r\n})\r\nexport class MaintenanceModule { }\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-ccy-demon-bal',\r\n  templateUrl: './till-vault-ccy-demon-bal.component.html',\r\n  styleUrls: ['./till-vault-ccy-demon-bal.component.scss']\r\n})\r\nexport class TillVaultCcyDemonBalComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['denomCode', 'openUnitsBal', 'unitsBal', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'denomCode', value: 'Denomination Code' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  users: string[] = [];\r\n  public items: any[];\r\n\r\n  constructor(private router:Router,private snack: MatSnackBar,\r\n    private apiService:ApiService,private confirmService: AppConfirmService,\r\n    private _liveAnnouncer: LiveAnnouncer) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTillVaultDetails();\r\n    this.getItems();\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n  getTillVaultDetails(){\r\n    this.apiService.fetchTillVaultCcyDemonBal().subscribe((data: any) => {\r\n  \r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  \r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal/addTillVaultCcyDenomBal\"]);\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal/addTillVaultCcyDenomBal\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'tillVaultCcyDenomBal');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getTillVaultDetails();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete Transaction Charges?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteTillVaultCcyDemonById(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n      \r\n                this.getTillVaultDetails();\r\n              \r\n            })\r\n        }\r\n        \r\n      });\r\n  }\r\n  dataByFilter(index,filter){\r\n    return filter.value;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till/Vault Currency Denomination Balance  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Till/Vault Currency Denomination Balance \r\n      </span>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    \r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Till/Vault Currency Denomination Balance \r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n        <div class=\"upload_botton\">\r\n          <button type=\"button\" mat-menu-item>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            class=\"btn btn-success\"\r\n            (change)=\"onFileChange($event)\"\r\n          />\r\n        </div>\r\n         <button mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n     <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\">Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div style=\"padding-top: 3px;\">\r\n         <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n       </div>\r\n       <div>\r\n        <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"addNew()\"  style=\"height: 45px; margin-left: 15cm;\" >ADD NEW\r\n\r\n            </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n       <ng-container matColumnDef=\"denomCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Denomination Code\"> Denomination Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.denomCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"openUnitsBal\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Open Units Balance\"> Open Units Balance\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.openUnitsBal}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"unitsBal\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Unit Balance\"> Unit Balance\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.unitsBal}} </mat-cell>\r\n       </ng-container>\r\n       <!--<ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>-->\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\"\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n           <!--<div>\r\n              <mat-icon color=\"primary\" style=\"cursor: pointer;\" [disableRipple]=\"false\" (click)=\"openEdit(element)\">edit</mat-icon>\r\n           </div>&nbsp;&nbsp;\r\n           <div>\r\n            <mat-icon color=\"warn\" style=\"cursor: pointer;\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n           </div>-->\r\n           <div>\r\n            <mat-icon color=\"primary\" style=\"cursor: pointer;\"  (click)=\"openEdit(element)\" >edit</mat-icon>\r\n         </div>&nbsp;&nbsp;\r\n         <div>\r\n          <mat-icon color=\"warn\" style=\"cursor: pointer;\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n         </div>\r\n         </mat-cell>\r\n       </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n\r\n","import { Component, OnInit,ElementRef, OnDestroy } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NgxTablePopupComponent } from './ngx-table-popup/ngx-table-popup.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-crud-ngx-table',\r\n  templateUrl: './crud-ngx-table.component.html',\r\n  styleUrls: ['./crud-ngx-table.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class CrudNgxTableComponent implements OnInit, OnDestroy {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['branchName', 'branchCode', 'city', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'branchName', value: 'Branch Name' },\r\n    { key: 'branchCode', value: 'Branch Code' },\r\n    { key: 'city', value: ' City' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  entityCode:string[]=[];\r\n  public items: any[];\r\n  users: any[] = [];\r\n  public getItemSub: Subscription;\r\n  currentUser: any;\r\n  loading: boolean;\r\n \r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService:ApiService,\r\n    private ls:LocalStoreService,\r\n    private _location: Location,\r\n    private router:Router,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.getItemSub = this.apiService.getAllBranch()\r\n      .subscribe(data => {\r\n        this.items = data;\r\n        this.getBranches();\r\n    this.loading = false;\r\n      })\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'branch');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n\r\n      console.log(response);\r\n      this.getBranches();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  getBranches() {\r\n    this.getItemSub = this.apiService.getAllBranch()\r\n      .subscribe(data => {\r\n        for(let i=0;i<data.length;i++){\r\n          if(data[i].authStatus == 'U'){\r\n            data[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(data[i].authStatus == 'A') {\r\n            data[i].authStatus = 'Authorized'\r\n          } \r\n          if(data[i].recordStatus == 'O'){\r\n            data[i].recordStatus = 'Open'\r\n          } \r\n          if(data[i].recordStatus == 'C'){\r\n            data[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.items = data;\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.users = data;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n  }\r\n  branchMaintenance(){\r\n\r\n    this.downloadService.downloadFiles(\"branchMaintenance\" , this.users);\r\n\r\n  }\r\n  \r\n  trackByFn(index, item) {\r\n    return index; \r\n  }\r\n\r\n  \r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/branch/add\"]);\r\n  }\r\n\r\n  openPopUp(data: any = {},isEdit : string) {\r\n    this.router.navigate([\"/maintenance/main/branch/add\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Are you sure? You want to delete?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteBranch(row.id,this.currentUser.userName)\r\n            .subscribe(data => {\r\n              this.getBranches();\r\n              this.loader.close();\r\n              this.snack.open('Branch deleted!', 'OK', { duration: 4000 })\r\n            })\r\n        }\r\n      })\r\n  }\r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n \r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n}\r\n\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home >  Maintenance Summary > Branch Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button> \r\n    <span class=\"text-large\">\r\n      Branch Maintenance\r\n    </span>\r\n   </div>\r\n <mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Branches\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\"\r\n          (change)=\"onFileChange($event)\"\r\n        />\r\n      </div>\r\n      <button (click)=\"branchMaintenance()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>  \r\n<mat-card-content>\r\n  <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Filter By</mat-label>\r\n          <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n            <mat-option value=\"0\" disabled>Select</mat-option>\r\n            <mat-option *ngFor=\"let filter of filterByOption; trackBy: trackByFn\" value=\"{{filter.key}}\">\r\n              {{filter.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Search</mat-label>\r\n          <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n          <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n          <mat-icon matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n      <div style=\"padding-top: 3px;\">\r\n        <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n      </div>\r\n    <div class=\"filterDiv\">\r\n     <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n     </button>\r\n   </div>\r\n\r\n  </div>\r\n  </div>\r\n  <div class=\"mat-elevation-z0\">\r\n    <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n      <ng-container matColumnDef=\"branchName\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by branch name\"> Branch\r\n          Name\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.branchName}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"branchCode\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by branch code \">Branch Code\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.branchCode}} </mat-cell>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"city\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by city\"> City\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.city}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"authStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"recordStatus\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container> -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"openPopUp(element,'Yes')\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.authStatus == 'Authorized'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n  \r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n  </div>\r\n</mat-card-content>\r\n </mat-card>\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport * as moment from 'moment';\r\nimport { Subject } from 'rxjs';\r\nimport { HolidayListDialogComponent } from '../holiday-list-dialog/holiday-list-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-custom-calender',\r\n  templateUrl: './custom-calender.component.html',\r\n  styleUrls: ['./custom-calender.component.scss']\r\n})\r\nexport class CustomCalenderComponent implements OnInit {\r\n  monthArr: string[][] = [\r\n    ['January', 'February', 'March'],\r\n    ['April', 'May', 'June'],\r\n    ['July', 'August', 'September'],\r\n    ['October', 'November', 'December'],\r\n  ];\r\n  newYearArrayany: any[] = [];\r\n  months: string[] = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  weekdays: string[] = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednsday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n  monthEnds = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  viewDate: Date = new Date();\r\n  yearlyCalendarArr = [];\r\n  currentMonth: string;\r\n  currentMonthDate: number;\r\n  calendarDate: string[] = [];\r\n  dateAlreadyActive : string;\r\n  year: number;\r\n  constructor(public dialog: MatDialog) { }\r\n  @Input() public addBranchHolidayFormData: any;\r\n  @Input() resetFormSubject: Subject<boolean> = new Subject<boolean>();\r\n  @Output() onDatePicked = new EventEmitter<any>();\r\n  ngOnInit() {\r\n    // this.fillInYear(2022);\r\n    // console.log(this.yearlyCalendarArr);\r\n    // console.log(this.newYearArrayany);\r\n    // console.log('calendarDate :: ', this.calendarDate);\r\n    this.onDatePicked.emit(this.calendarDate);\r\n    this.currentMonth = this.months[this.viewDate.getMonth()];\r\n    this.currentMonthDate = this.viewDate.getDate();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    console.log('addBranchHolidayFormData :: ',this.addBranchHolidayFormData);\r\n    if(this.addBranchHolidayFormData !=null){\r\n      this.fillInYear(this.addBranchHolidayFormData.data.year);\r\n      this.currentMonth = this.months[this.viewDate.getMonth()];\r\n      this.currentMonthDate = this.viewDate.getDate();\r\n    }\r\n  }\r\n\r\n  fillInMonth(year: number, month: string, dayAmount: number) {\r\n    this.year=year;\r\n    //do leep year too\r\n    let monthNumsArr = [];\r\n    let endOffSet = 42 - dayAmount;\r\n    //let month_name = document.getElementsByClassName(\"month-name\")[0];\r\n    //if(month_name.innerHTML === month){\r\n    //let calendar_day = document.getElementsByClassName(\"calendar-box\")\r\n    let date = new Date(month + '1, ' + year);\r\n    // console.log('date :: ', date, ' month :: ', month);\r\n    let dateOffSet = date.getDay();\r\n\r\n    for (let i = 0; i < dayAmount + endOffSet; i++) {\r\n      // console.log('i :: ', i);\r\n\r\n      if (i < dateOffSet) {\r\n        //calendar_day[i].innerHTML = \" \";\r\n        monthNumsArr.push(' ');\r\n      } else if (i > dayAmount + dateOffSet - 1) {\r\n        //calendar_day[i].innerHTML = \" \";\r\n        monthNumsArr.push(' ');\r\n      } else {\r\n        monthNumsArr.push((i + 1 - dateOffSet).toString());\r\n        //calendar_day[i].innerHTML = ((i+1) - dateOffSet).toString();\r\n      }\r\n    }\r\n    monthNumsArr.forEach((V, K) => {\r\n      if ((K % 7 == 0) || ((8 + K) % 7 == 0)) {\r\n        if (V != ' ') {\r\n          let dateValue = (+V);\r\n          var d = new Date(year, date.getMonth(), dateValue);\r\n          var responseDate = moment(d).format('YYYY-MM-DD');\r\n          this.calendarDate.push(responseDate);\r\n        }\r\n      }\r\n    });\r\n    return monthNumsArr;\r\n    //}\r\n  }\r\n\r\n\r\n  fillInYear(year: number) {\r\n    let tempMonthArr = [];\r\n    this.yearlyCalendarArr=[];\r\n    this.newYearArrayany=[];\r\n    for (let i = 0; i < 12; i++) {\r\n      // console.log('i-> ', (i + 1) % 3)\r\n      this.yearlyCalendarArr.push(\r\n        this.fillInMonth(year, this.months[i], this.monthEnds[i])\r\n      );\r\n\r\n      if ((i + 1) % 3 == 0) {\r\n        this.newYearArrayany.push(this.yearlyCalendarArr);\r\n        this.yearlyCalendarArr = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  captureDate(dateFromForm,month,year) {\r\n    // console.log('date :: ', dateFromForm,' m :: ',month, ' y:: ', year);\r\n    let date = new Date(month + '1, ' + year);\r\n    let dateValue = (+dateFromForm);\r\n    var d = new Date(year, date.getMonth(), dateValue);\r\n    var responseDate = moment(d).format('YYYY-MM-DD');\r\n    if(responseDate == this.dateAlreadyActive){\r\n        return\r\n    }\r\n    this.dateAlreadyActive = responseDate;\r\n    this.calendarDate.push(responseDate);\r\n    this.onDatePicked.emit(this.calendarDate);\r\n    // console.log('captured :: ',this.calendarDate);\r\n    const dialogRef = this.dialog.open(HolidayListDialogComponent, {\r\n      data: { date: d},\r\n      position: { right: '0' },\r\n      panelClass: 'customHolidayListStyle',\r\n      hasBackdrop: false\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.dateAlreadyActive = null;\r\n      // this.animal = result;\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","<table>\r\n\t<tr *ngFor=\"let arr of newYearArrayany; let i = index\">\r\n\t\t<td *ngFor=\"let days of arr; let j = index\">\r\n\t\t\t<mat-card class=\"mat-elevation-z0\"\r\n\t\t\t\tstyle=\"width: 400px;background-color: transparent;display: flow-root;padding: 0px;\">\r\n\t\t\t\t<mat-card-header>\r\n\t\t\t\t\t<div style=\"margin-left: 120px;margin-top: 10px;\">{{ monthArr[i][j] }}</div>\r\n\t\t\t\t</mat-card-header>\r\n\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t<div class=\"month-body\">\r\n\t\t\t\t\t\t<div class=\"month-divider\">\r\n\t\t\t\t\t\t\t<div class=\"item\" *ngFor=\"let d of days; let di = index\">\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button mat-button class=\"button\" *ngIf=\"di % 7 == 0\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"color:red;padding-left: 15px;\">{{ d }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button mat-button class=\"button\" *ngIf=\"(8 + di) % 7 == 0\"\r\n\t\t\t\t\t\t\t\t\t\tstyle=\"color:red;\">{{ d }} </button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div *ngIf=\"di % 7 != 0 && (8 + di) % 7 != 0\">\r\n\t\t\t\t\t\t\t\t\t<button mat-raised-button color=\"warn\" class=\"button4\" *ngIf=\"\r\n\t\t\t\t\t\t  monthArr[i][j] == currentMonth && d == currentMonthDate\" (click)=\" captureDate(d,monthArr[i][j],year)\">\r\n\t\t\t\t\t\t\t\t\t\t{{ d }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<button mat-button class=\"button\" *ngIf=\"\r\n\t\t\t\t\t\t  monthArr[i][j] == currentMonth && d != currentMonthDate\r\n\t\t\t\t\t\t\" (click)=\" captureDate(d,monthArr[i][j],year)\">\r\n\t\t\t\t\t\t\t\t\t\t{{ d }}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<button mat-button class=\"button\" *ngIf=\"monthArr[i][j] != currentMonth\" (click)=\" captureDate(d,monthArr[i][j],year)\">\r\n\t\t\t\t\t\t\t\t\t\t{{ d }} </button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"week-divider\">\r\n\t\t\t\t\t\t<div class=\"weekday\" *ngFor=\"let w of weekdays\">\r\n\t\t\t\t\t\t\t<button mat-button class=\"button\" [disabled]=\"true\" color=\"warn\"> {{ w[0] }} </button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</mat-card-content>\r\n\t\t\t</mat-card>\r\n\t\t</td>\r\n\t</tr>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-securitypolicy',\r\n  templateUrl: './add-securitypolicy.component.html',\r\n  styleUrls: ['./add-securitypolicy.component.scss']\r\n})\r\nexport class AddSecuritypolicyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>add-securitypolicy works!</p>\r\n","import { Component, OnInit, ElementRef, ViewChild } from \"@angular/core\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-currency-paira-rates-maintenance\",\r\n  templateUrl: \"./currency-paira-rates-maintenance.component.html\",\r\n  styleUrls: [\"./currency-paira-rates-maintenance.component.scss\"],\r\n})\r\nexport class CurrencyPairaRatesMaintenanceComponent implements OnInit {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['pairRateId', 'branchCode', 'rateType', 'rateDate','oneTimeAuth', 'authStatus', 'recordStatus','action'];\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"pairRateId\", value: \"Currency Pair Rate Id\" },\r\n    { key: \"branchCode\", value: \"Branch Code\" },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  currencyPairId: any = [];\r\n  branchCode: string[] = [];\r\n  rateType: string[] = [];\r\n  users: any[] = [];\r\n  public items: any[];\r\n  entity: any;\r\n  tillVaultMasterValues: any;\r\n  fetchTillVault: any;\r\n  fetchCurrencyPairRates: any;\r\n  currencyPairMaintValues: any;\r\n  public getItemSub: Subscription;\r\n  id: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private confirmService: AppConfirmService,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchCurrencyPair();\r\n    this.getBranchCode();\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  getItems() {\r\n    this.apiService.getCurrencyPairRates().subscribe((currencyPairRatesInfo: any) => {\r\n        if (currencyPairRatesInfo) {\r\n          for(let i=0;i<currencyPairRatesInfo.length;i++){\r\n            if(currencyPairRatesInfo[i].authStatus == 'U'){\r\n              currencyPairRatesInfo[i].authStatus = 'Unauthorized'\r\n            }\r\n            if(currencyPairRatesInfo[i].authStatus == 'A') {\r\n              currencyPairRatesInfo[i].authStatus = 'Authorized'\r\n            } \r\n            if(currencyPairRatesInfo[i].recordStatus == 'O'){\r\n              currencyPairRatesInfo[i].recordStatus = 'Open'\r\n            } \r\n            if(currencyPairRatesInfo[i].recordStatus == 'C'){\r\n              currencyPairRatesInfo[i].recordStatus = 'Closed'\r\n            }\r\n          }\r\n          this.currencyPairMaintValues = currencyPairRatesInfo;\r\n          this.items = this.currencyPairMaintValues;\r\n          console.log(\"items4::\", this.items);\r\n          this.dataSource = new MatTableDataSource(currencyPairRatesInfo);\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'currencyPairRate');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.getItems();\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n   \r\n  }\r\n\r\n  fetchCurrencyPair(){\r\n    this.apiService.getCurrencyPair().subscribe((resp) =>{\r\n     console.log(\"currencyPairById\",resp);\r\n     this.currencyPairId=resp;\r\n    })\r\n  }\r\n\r\n  getBranchCode(){\r\n    this.apiService.getBranchCode().subscribe(branchCodeResp=>{\r\n      this.branchCode=branchCodeResp;\r\n    });\r\n  }\r\n\r\n  fetchCurrencyPairRatesById() {\r\n    this.apiService.getCurrencyPairRatesById(this.id).subscribe((resp) => {\r\n      console.log(\"currencyPairRatesById\", resp);\r\n      this.fetchCurrencyPairRates = resp;\r\n    });\r\n    console.log(this.fetchCurrencyPairRates);\r\n    this.dataService.sendNavParam(this.fetchCurrencyPairRates);\r\n    this.router.navigate([`/maintenance/main/addCurrencyPair/${this.id}`]);\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/addCurrencyPairRates\"]);\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    console.log(filterBy, e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    console.log(\"filterValue\", filterValue);\r\n    this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      console.log(\"data :: \", data[filterBy]);\r\n      if (data[filterBy] != null) {\r\n        return data[filterBy].trim().toLocaleLowerCase().includes(filter);\r\n      }\r\n    };\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n  openEdit(data: any = {}, isEdit: string) {\r\n    console.log(\"data\", isEdit);\r\n    console.log(\".id\", data.pairRateId);\r\n    console.log(\"item1::\", data);\r\n\r\n    this.router.navigate([\"/maintenance/main/addCurrencyPairRates\"], {\r\n      queryParams: { id: data.pairRateId, isEdit: isEdit },\r\n    });\r\n  }\r\n\r\n  deleteItem(element) {\r\n    console.log(\"element\", element.pairRateId);\r\n    this.confirmService\r\n      .confirm({ message: `Delete  ${element.pairRateId}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.apiService.deleteCurrencyPairRates(element.pairRateId).subscribe(\r\n            (data) => {\r\n              this.getItems();\r\n            },\r\n            (err) => {\r\n              if (err.status == 200) {\r\n                this.snack.open(\"Record Deleted Successfully\", \"OK\", {\r\n                  duration: 4000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Pair Rate Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <span class=\"text-large\">\r\n        Currency Pair Rate Maintenance\r\n    </span>\r\n</div>\r\n\r\n<mat-card class=\"mt-32\">\r\n    <div>\r\n        <table>\r\n            <tr>\r\n                <td>\r\n                    <h2>\r\n                        Currency Pair Rates\r\n                    </h2>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <div class=\"highlight\">\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon>more_vert</mat-icon>\r\n        </button>\r\n        <mat-menu #menu=\"matMenu\">\r\n            <div class=\"upload_botton\">\r\n                <button type=\"button\" mat-menu-item>Upload</button>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                  class=\"btn btn-success\"\r\n                  (change)=\"onFileChange($event)\"\r\n                />\r\n              </div>\r\n            <button mat-menu-item>\r\n                <span>Download</span>\r\n            </button>\r\n        </mat-menu>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n            <div>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>Filter By</mat-label>\r\n                    <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n                        <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n                        <mat-option value=\"0\">Select</mat-option>\r\n                        <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                            {{filter.value}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n                    <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n            </div>\r\n            <div style=\"padding-top: 3px;\">\r\n                <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n            </div>\r\n            <div>\r\n                <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"addNew()\"\r\n                    style=\"height: 45px; margin-left: 12cm;\">ADD NEW\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n        <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n            <ng-container matColumnDef=\"pairRateId\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency Pair\"> Currency Pair Rate Id\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.pairRateId}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"branchCode\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Branch Code\"> Branch Code\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.branchCode}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"rateType\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Rate Type\"> Rate Type\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.rateType}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"rateDate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Rate Date\">Rate Date\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.rateDate}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- <ng-container matColumnDef=\"rateSeq\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Rate Seq\">Rate Seq\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.rateSeq}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"buySpread\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Buy Spread\"> Buy Spread\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.buySpread}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"sellSpread\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Sell Spread\"> Sell Spread\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.sellSpread}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"midRate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Mid Rate\"> Mid Rate\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.midRate}} </mat-cell>\r\n            </ng-container>\r\n            \r\n            <ng-container matColumnDef=\"buyRate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Buy Rate\"> Buy Rate\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.buyRate}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"sellRate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Sell Rate\"> Sell Rate\r\n                </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.sellRate}} </mat-cell>\r\n            </ng-container> -->\r\n\r\n            <ng-container matColumnDef=\"oneTimeAuth\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n                 </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"authStatus\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n                 </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"recordStatus\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n                 </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"action\">\r\n                <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\">\r\n                    <div>\r\n                        <mat-icon color=\"primary\" style=\"cursor: pointer;\" (click)=\"openEdit(element)\">edit</mat-icon>\r\n                    </div>&nbsp;&nbsp;\r\n                    <div>\r\n                        <mat-icon color=\"warn\" style=\"cursor: pointer;\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n                    </div>\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n        <mat-paginator [pageSizeOptions]=\"[5,10,20]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-city',\r\n  templateUrl: './add-edit-city.component.html',\r\n  styleUrls: ['./add-edit-city.component.scss']\r\n})\r\nexport class AddEditCityComponent implements OnInit {\r\n  cityId: any;\r\n  cityMaintenance: FormGroup;\r\n  countryArr: any;\r\n  readorWrite: boolean = true;\r\n  stateArr: any;\r\n  loggedInUser: any;\r\n  countryId: number;\r\n  auditLogData: any;\r\n  countryCode: any;\r\n\r\n  @ViewChild('auditLog') auditLog: AuditLogComponent\r\n  stateCode: any;\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private route: ActivatedRoute,\r\n    private ls: LocalStoreService,\r\n    private dataService: DataService,\r\n    private snack: MatSnackBar\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.getAllCountries();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if (params.get('cityId')) {\r\n        this.cityId = params.get('cityId');\r\n        this.apiService.getCityById(this.cityId).subscribe(resp => {\r\n          console.log(resp.countryName);\r\n          setTimeout(() => {\r\n            this.getStateName(resp.countryName)\r\n          }, 100);\r\n          this.buildCityForm(resp);\r\n          console.log(this.cityMaintenance);\r\n          this.auditLogData = resp;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n        })\r\n      }\r\n      else {\r\n        console.log('else');\r\n        this.readorWrite = false;\r\n        this.buildCityForm({})\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  buildCityForm(item) {\r\n    this.cityMaintenance = this.fb.group({\r\n      id: [item ? item.id : ''],\r\n      countryName: [item ? item.countryName : '', Validators.required],\r\n      cityName: [item ? item.cityName : '', Validators.required],\r\n      stateName: [item ? item.stateName : '', Validators.required],\r\n      recordStatus: [item ? item.recordStatus : ''],\r\n      pinCode: [item ? item.pinCode : '', Validators.required]\r\n    });\r\n  }\r\n\r\n  getAllCountries() {\r\n    this.apiService.getAllCountries().subscribe(resp => {\r\n      this.countryArr = resp.filter(res => res.authStatus == 'A');\r\n    })\r\n  }\r\n\r\n  getStateName(countryName) {\r\n    this.countryId = this.countryArr[this.countryArr.findIndex(country => country.countryName == countryName)].id\r\n    this.countryCode=this.countryArr[this.countryArr.findIndex(country => country.countryName == countryName)].countryCode;\r\n    this.apiService.getStateByCountry(this.countryId).subscribe(resp => {\r\n      this.stateArr = resp.filter(res => res.authStatus == 'A')\r\n    })\r\n  }\r\n  getStateCode(stateName){\r\n    console.log(stateName);\r\n    this.stateCode=this.stateArr[this.stateArr.findIndex(stateAA => stateAA.stateName == stateName)].stateCode;\r\n    console.log(this.stateCode);\r\n    \r\n    \r\n  }\r\n\r\n  _keyPress(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z\\s]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  _keyPress1(event) {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  editRecord() {\r\n    this.readorWrite = false;\r\n  }\r\n  submit(data: any) {\r\n    data.loggedInUser = this.loggedInUser.userName;\r\n    data.countryId = this.countryId\r\n    data.countryCode= this.countryCode;\r\n    data.stateCode= this.stateCode;\r\n    if (this.cityId) {\r\n      data.cityId = this.cityId;\r\n    }\r\n    console.log(data);\r\n\r\n    this.apiService.upsertCities(data).subscribe(resp => {\r\n      if (resp) {\r\n        if(resp.message){\r\n          this.snack.open(\"Pincode is already present in other city\", 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n        else{\r\n          this.snack.open(\"Data Saved Successfully\", 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        this.router.navigate([\"/maintenance/main/cityMaintenance\"]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        text: 'You are trying to ' + operation + ' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if (result.isConfirmed == true) {\r\n        let payload: any = {};\r\n        payload.id = this.cityId;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        this.apiService.updateCityAuditLog(payload).subscribe((data) => {\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }\r\n    }))\r\n\r\n  }\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/cityMaintenance\"]);\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > City Maintenance</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    {{cityId? 'Edit City' : 'Add City'}}\r\n  </span>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"cityMaintenance\" class=\"mt-32\">\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Country Name <span class=\"pl-4 \">*</span></mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select readonly=\"readorWrite\" [formControl]=\"cityMaintenance.controls['countryName']\"\r\n              (selectionChange)=\"getStateName($event.value)\">\r\n              <mat-option *ngFor=\"let country of countryArr\"\r\n                [value]=\"country.countryName\">{{country.countryName}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>State Name<span class=\"pl-4 \">*</span></mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <mat-select (selectionChange)=\"getStateCode($event.value)\" readonly=\"readorWrite\" [formControl]=\"cityMaintenance.controls['stateName']\">\r\n              <mat-option *ngFor=\"let state of stateArr\" [value]=\"state.stateName\">{{state.stateName}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>City Name <span class=\"pl-4 \">*</span></mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput minlength=\"3\" [readonly]=\"readorWrite\" (keypress)=_keyPress($event)\r\n              [formControl]=\"cityMaintenance.controls['cityName']\" />\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" class=\"pr-16\">\r\n          <mat-label>Pin Code<span class=\"pl-4 \">*</span></mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput maxlength=\"10\" minlength=\"6\" [readonly]=\"readorWrite\" (keypress)=_keyPress1($event)\r\n              [formControl]=\"cityMaintenance.controls['pinCode']\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!cityId\" color=\"primary\" [disabled]=\"cityMaintenance.invalid\"\r\n            (click)=\"submit(cityMaintenance.value)\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\"\r\n              [disabled]=\"!(cityMaintenance.valid || cityMaintenance.dirty)\" (click)=\"submit(cityMaintenance.value)\">\r\n              Save\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\"\r\n            [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\"\r\n            [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"cityId\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n\r\n          <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"goBack()\">\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n  <app-audit-log></app-audit-log>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { tillVaultCcyDenomBal } from 'app/shared/models/tillVaultCcy-denomBal';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-tillvault-ccy-demonbal',\r\n  templateUrl: './add-tillvault-ccy-demonbal.component.html',\r\n  styleUrls: ['./add-tillvault-ccy-demonbal.component.scss']\r\n})\r\nexport class AddTillvaultCcyDemonbalComponent implements OnInit {\r\n  addTillVaultCcyForm:FormGroup;\r\n  isEdit: boolean = false;\r\n  id: number;\r\n  loggedInUser: any;\r\n  denom:  string[] = [];\r\n  tillVaultCcyDenomBal:tillVaultCcyDenomBal[] = [];\r\n  auditData: any;\r\n  isAuditData: boolean = false;\r\n  readorWrite: boolean=true;\r\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService,\r\n    private router:Router,private snack: MatSnackBar, private route : ActivatedRoute,\r\n    private ls:LocalStoreService, private dataService:DataService,\r\n    private cdr: ChangeDetectorRef) { this.addTillVaultCcyForm = this.formBuilder.group({\r\n      denomCode: [ '',[Validators.required]],\r\n      openUnitsBal: [ '',[Validators.required]],\r\n      unitsBal: [ '',[Validators.required]],\r\n      loggedInuser : [''],\r\n    idtvcId: [ ''],\r\n    id: [ ''],\r\n\r\n  })}\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getTillVaultCcyDemonById(params.get('id')).subscribe((resp) =>{\r\n           this.buildItemForm(resp);\r\n           this.auditData = resp;\r\n           console.log( this.auditData)\r\n           this.isEdit = true;\r\n           this.isAuditData = true;\r\n           this.dataService.setAuditLogData(this.auditData);\r\n           \r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    }\r\n    );\r\n    this.getDenomCode();\r\n  }\r\n  buildItemForm(item) {\r\n    this.addTillVaultCcyForm = this.formBuilder.group({\r\n      denomCode: [item.denomCode || '',[Validators.required]],\r\n      openUnitsBal: [item.openUnitsBal ||'',[Validators.required]],\r\n      unitsBal: [item.unitsBal ||'',[Validators.required]],\r\n      id: [ item.id ||''],\r\n      tvcId: [ item.tvcId ||''],\r\n\r\n    })\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal\"]);\r\n  }\r\n  submit(){\r\n    this.addTillVaultCcyForm.value.unitsBal=parseInt(this.addTillVaultCcyForm.value.unitsBal);\r\n    this.addTillVaultCcyForm.value.openUnitsBal=parseInt(this.addTillVaultCcyForm.value.openUnitsBal);\r\n   \r\n   \r\n    let payload={\r\n      denomCode: this.addTillVaultCcyForm.value.denomCode,\r\n      openUnitsBal: this.addTillVaultCcyForm.value.openUnitsBal,\r\n      unitsBal: this.addTillVaultCcyForm.value.unitsBal,\r\n      id:this.addTillVaultCcyForm.value.id,\r\n      tvcId:this.addTillVaultCcyForm.value.tvcId,\r\n      loggedInUser:this.loggedInUser,\r\n      //txnId:101,\r\n\r\n    }\r\n    console.log(payload)\r\n  \r\n  this.apiService.updateTillVaultCcyDemonBalDetails(payload).subscribe(response => {\r\n    if(response != null){\r\n      this.snack.open(`Record Added!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n    this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal\"]);\r\n  });\r\n\r\n  \r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTillVaultCcyDemonById(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal\"]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([\"/maintenance/main/tillVaultCcyDenomBal\"]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsForTillVaultCcyDenomBal(payload).subscribe((data) => {\r\n      this.auditData = data;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.isAuditData = true;\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n  getDenomCode() {\r\n    this.apiService.fetchDenomMasterAuthRecs().subscribe((resp: any) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.denom.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.denom);\r\n    });\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\" *ngIf=\"!isEdit\"><small class=\"small-head\">Home > Maintenance Summary > Till/Vault Currency Denomination Balance >Add Till/Vault Currency Denomination Balance  </small></h1>\r\n<h1 class=\"main-head\" *ngIf=\"isEdit\"><small class=\"small-head\">Home > Maintenance Summary > Till/Vault Currency Denomination Balance >Edit Till/Vault Currency Denomination Balance  </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\" >\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Till/Vault Currency Denomination Balance </h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Till/Vault Currency Denomination Balance </h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"addTillVaultCcyForm\"   class=\"m-333\">\r\n            <!-- <h1 *ngIf=\"!isEdit\">Add Till/Vault Currency Denomination Balance </h1>\r\n            <h1 *ngIf=\"isEdit\">Edit Till/Vault Currency Denomination Balance </h1> -->\r\n                <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                    <div fxFlex=\"33.33\"  *ngIf=\"!readorWrite\">\r\n                        <mat-label>Denomination Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <!-- <input \r\n                                matInput name=\"denomCode\"\r\n                                maxlength=\"6\"\r\n                                formControlName=\"denomCode\"\r\n                            /> -->\r\n                            <mat-select name=\"denomCode\"  formControlName=\"denomCode\">\r\n                                <mat-option value=\"\">Select</mat-option>\r\n                                <mat-option *ngFor=\"let data of denom;\"  [value]=\"data.denomCode\">\r\n                              {{data?.denomCode}}\r\n                              </mat-option>\r\n                          </mat-select>\r\n                                  <!--<mat-error *ngIf=\"BranchHolidayForm.get('entityCode').hasError('required')\">\r\n                                     Entity Code is Required!\r\n                                  </mat-error>-->\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"33.33\"  *ngIf=\"readorWrite\">\r\n                        <mat-label>Denomination Code *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                           <input \r\n                                matInput name=\"denomCode\"\r\n                                maxlength=\"6\"\r\n                                formControlName=\"denomCode\"/>\r\n                            \r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Open Units Balance *</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                           \r\n                            <input [readonly]=\"readorWrite\"\r\n                            matInput name=\"openUnitsBal\"\r\n                            maxlength=\"6\"\r\n                            formControlName=\"openUnitsBal\"\r\n                        />\r\n                           <!--<mat-error *ngIf=\"BranchHolidayForm.get('bankCode').hasError('required')\">\r\n                                Entity Name is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div fxFlex=\"33.33\">\r\n                        <mat-label>Unit Balance</mat-label>\r\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                            <input [readonly]=\"readorWrite\"\r\n                                matInput name=\"unitsBal\"\r\n                                type=\"text\"\r\n                                formControlName=\"unitsBal\"\r\n                            />\r\n                            <!--<mat-error *ngIf=\"BranchHolidayForm.get('branchCode').hasError('required')\">\r\n                                Branch Code is Required!\r\n                            </mat-error>-->\r\n                        </mat-form-field>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n\r\n            <!-- </div> -->\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                  <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"addTillVaultCcyForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n                  &nbsp;\r\n                  <div [hidden]=\"readorWrite\" >\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(addTillVaultCcyForm.invalid || addTillVaultCcyForm.dirty)\"(click)=\"submit()\">\r\n                       Save\r\n                      </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                      Edit\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                      Authorize\r\n                    </button>&nbsp;&nbsp;\r\n                  </div> \r\n                  <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                      Reopen\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                      Close\r\n                    </button>&nbsp;&nbsp;\r\n                  </div>\r\n                  <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                    <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                      Delete\r\n                    </button> &nbsp;&nbsp;\r\n                  </div>\r\n                 \r\n                  <button\r\n                    mat-raised-button\r\n                    color=\"warn\"\r\n                    type=\"button\"\r\n                    (click)=\"goBack()\"\r\n                  >\r\n                    Exit\r\n                  </button>\r\n        \r\n                </div>\r\n              </div>\r\n        </form>\r\n\r\n        \r\n    </mat-card-content>\r\n</mat-card>\r\n<div class=\"mt-32\">\r\n    <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n  </div>\r\n\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-charge-maint-summary',\r\n  templateUrl: './charge-maint-summary.component.html',\r\n  styleUrls: ['./charge-maint-summary.component.scss']\r\n})\r\nexport class ChargeMaintSummaryComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['entityCode', 'branchCode', 'bankCode','authStatus','recordStatus','action'];\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n    { key: 'branchCode', value: 'Branch Code' },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  getItemSub: any;\r\n  items: any;\r\n  public users: any[];\r\n  dataSource = new MatTableDataSource();\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex: number;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router:Router,\r\n    private loader: AppLoaderService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private confirmService: AppConfirmService,\r\n    private snack: MatSnackBar,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchChargeMaintDetails();\r\n}\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'currencyMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.fetchChargeMaintDetails();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n  fetchChargeMaintDetails() {\r\n    this.getItemSub = this.apiService.fetchChargeMaintDetails()\r\n      .subscribe(data => {\r\n        console.log(\"data\",data);\r\n       \r\n          for(let i=0;i<data.length;i++){\r\n            if(data[i]){\r\n            if(data[i].authStatus == 'U'){\r\n              data[i].authStatus = 'Unauthorized'\r\n            }\r\n            if(data[i].authStatus == 'A') {\r\n              data[i].authStatus = 'Authorized'\r\n            } \r\n            if(data[i].recordStatus == 'O'){\r\n              data[i].recordStatus = 'Open'\r\n            } \r\n            if(data[i].recordStatus == 'C'){\r\n              data[i].recordStatus = 'Closed'\r\n            }\r\n          }\r\n        }\r\n        \r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.users = data;\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      })\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/chargeMaint/add\"], { queryParams: { isEdit : \"No\" } });\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n    \r\n  }\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   doFilter(filterBy, e){\r\n    console.log(filterBy,e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  dataByFilter(index, item) {\r\n    return item.key\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  \r\n  openPopUp(data: any = {},isEdit : boolean) {\r\n    console.log(data);\r\n    console.log(\"stringified data\",JSON.stringify(data.id));\r\n    this.router.navigate([`/maintenance/main/chargeMaint/add`],{ queryParams: { chargeId: JSON.stringify(data.id), isEdit : isEdit } });\r\n  }\r\n\r\n  applyFilter(e: any) {\r\n    const filterValue = (e.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  filterTable(filterBy: any) {\r\n    this.dataSource.filterPredicate = (filteredDdata: any, filter: string): boolean => {\r\n      return (\r\n        filteredDdata[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n  chargeMaintenance(){\r\n    this.downloadService.downloadFiles(\"chargeMaintenance\", this.users);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    console.log(row);\r\n    this.confirmService.confirm({message: `Are you sure? You want to delete?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          // this.loader.open();\r\n          this.apiService.deleteChargeMaint(row.id)\r\n            .subscribe(data => {\r\n              // this.loader.close();\r\n              if (data !== null) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n            this.fetchChargeMaintDetails();\r\n            },\r\n            err=>{\r\n          })\r\n          // this.loader.close();\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Charge Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">  \r\n  </div>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <span class=\"text-large\">\r\n      Charge Maintenance\r\n    </span>\r\n   </div> \r\n  <mat-card class=\"mt-32\">\r\n    <div>\r\n      <table style=\"margin: 18px;\">\r\n        <tr>\r\n          <td>\r\n            <h2>\r\n              Charge\r\n            </h2>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div class=\"highlight\">\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </table>  \r\n      <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\"\r\n          \r\n        />\r\n      </div>\r\n      <button (click)=\"chargeMaintenance()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n    <mat-card-content>\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n        <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Filter By</mat-label>\r\n              <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n                <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n                <mat-option value=\"0\" disabled>Select</mat-option>\r\n                <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                  {{filter.value}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Search</mat-label>\r\n              <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n              <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n              <mat-icon matSuffix>search</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n          <div style=\"padding-top: 3px;\">\r\n            <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n          </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div>\r\n        \r\n      </div>\r\n      </div>\r\n      <div class=\"mat-elevation-z0\">\r\n        <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n          <ng-container matColumnDef=\"entityCode\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity code\">\r\n              Entity Code\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"bankCode\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank code\"> Bank Code\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"branchCode\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Branch Code\"> \r\n                Branch Code\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.branchCode}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"authStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"recordStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n              Status\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n          </ng-container>\r\n  \r\n  \r\n          <!-- <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <div>\r\n               <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,true)\" >edit</mat-icon>\r\n            </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <div [hidden]=\"element.authStatus == 'Authorized'\">\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n            </div>\r\n            </mat-cell>\r\n          </ng-container> -->\r\n          <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <button\r\n                mat-icon-button\r\n                mat-sm-button\r\n                color=\"primary\"\r\n                class=\"mr-16\"\r\n                (click)=\"openPopUp(element,'Yes')\"\r\n              >\r\n                <mat-icon>edit</mat-icon>\r\n              </button>\r\n              <button\r\n                mat-icon-button\r\n                mat-sm-button\r\n                color=\"warn\"\r\n                [disabled]=\"element.authStatus == 'Authorized'\"\r\n                (click)=\"deleteItem(element)\"\r\n              >\r\n                <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </mat-cell>\r\n          </ng-container>\r\n  \r\n          <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n          <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n        <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialogRef, MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\nimport { fetchTrxnStatus } from \"app/shared/models/fetchTrxnStatus\";\r\n\r\n@Component({\r\n  selector: \"app-txn-cash-master-crud-table\",\r\n  templateUrl: \"./txn-cash-master-crud-table.component.html\",\r\n  styleUrls: [\"./txn-cash-master-crud-table.component.scss\"],\r\n  animations: rumangoAnimations\r\n})\r\nexport class TxnCashMasterCrudTableComponent implements OnInit, OnDestroy {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = ['entityCode', 'bankCode', 'branchCode','authStatus','recordStatus','action'];\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"entityCode\", value: \"Entity Code\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n  currency: string[] = [];\r\n  till: any[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  entity: string[] = [];\r\n  fetchTrxnCashStatus: fetchTrxnStatus;\r\n  loading: boolean;\r\n  data: any;\r\n  tillData: any;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api: ApiService,\r\n    private dataService: DataService,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getItems();\r\n    this.getEntityCode();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    // this.items = transactionType;\r\n    this.loading = true;\r\n    this.getItemSub = this.api.fetchTxnCashMasterInfo().subscribe((data) => {\r\n    \r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.items = data;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'transactionCashMaster');\r\n    uploadData.append('file', file);\r\n    this.api.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.getItems();\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  getCurrency() {\r\n    this.api.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.api.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.api.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getEntityCode() {\r\n    this.api.getEntityCode().subscribe((resp) => {\r\n      this.entity = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault = \"T\";\r\n    this.api.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n\r\n  txnCashMaster(){\r\n    this.downloadService.downloadFiles(\"txnCashMaster\" , this.items);\r\n  }\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.entityCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.api.deleteTxnCashMaster(row.id).subscribe((data) => {\r\n            this.getItems();\r\n            this.loader.close();\r\n            this.snack.open(\"Record deleted!\", \"OK\", { duration: 4000 });\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  openPopUp(row) {\r\n    this.getTxnCashMasterById(row);\r\n    // this.dataService.sendNavParam(this.fetchTrxnCashStatus);\r\n    this.router.navigate([`/maintenance/main/transactionCashMaster/${row.id}`]);\r\n  }\r\n\r\n  getTxnCashMasterById(row) {\r\n    this.loader.open();\r\n    this.api.fetchTxnCashMasterById(row.id).subscribe((result) => {\r\n      this.fetchTrxnCashStatus = result;\r\n\r\n      // this.data = result;\r\n      // if(this.data != null){\r\n      //   console.log(\"this.till::\",this.till)\r\n      //   console.log(\"this.data::\",this.data)\r\n\r\n      //   this.tillData = this.till.find(x => x.id == this.data.tillId);\r\n      //   console.log(\"this.data::\",this.tillData)\r\n      //   if(this.tillData != null){\r\n      //     this.data.tillId = this.tillData.tillVaultCode;\r\n      //   }\r\n      //   this.fetchTrxnCashStatus =  this.data;\r\n      // }\r\n\r\n      if (this.fetchTrxnCashStatus != null) {\r\n        localStorage.setItem(\r\n          \"fetchTrxnCashStatus\",\r\n          JSON.stringify(this.fetchTrxnCashStatus)\r\n        );\r\n        console.log(this.fetchTrxnCashStatus);\r\n        this.loader.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/transactionCashMaster/add\"]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/\"]);\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Transaction Cash Master Maintenance </small>\r\n</h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Transaction Cash Master Maintenance\r\n  </span>\r\n  </div>\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Transaction Cash Master Details\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"txnCashMaster()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content class=\"p-0\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption;trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div> \r\n      \r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"bankCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"branchCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Branch Code\"> Branch Code\r\n            \r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.branchCode}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n\r\n        <!-- <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container> -->\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <button\r\n              mat-icon-button\r\n              mat-sm-button\r\n              color=\"primary\"\r\n              class=\"mr-16\"\r\n              (click)=\"openPopUp(element,'Yes')\"\r\n            >\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button\r\n              mat-icon-button\r\n              mat-sm-button\r\n              color=\"warn\"\r\n              [disabled]=\"element.authStatus == 'Authorized'\"\r\n              (click)=\"deleteItem(element)\"\r\n            >\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> -->\r\n  </mat-card-content>\r\n</mat-card>","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n@Component({\r\n  selector: 'app-biller-info-maintenance',\r\n  templateUrl: './biller-info-maintenance.component.html',\r\n  styleUrls: ['./biller-info-maintenance.component.scss']\r\n})\r\nexport class BillerInfoMaintenanceComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  public users: any[];\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['entityCode', 'billerCode', 'billerName', 'billerAccBrn', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'billerCode', value: 'Biller Code' }\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  data: any = [];\r\n  // { id: number; entityCode: string; bankCode: string; billerCode: string; billerName: string; billerAccBrn: string; billerAccount: string; createdDate: string; lastModifiedDate: string; oneTimeAuth: string; authStatus: string; recordStatus: string; version: number; authBy: string; authDate: string; modifiedBy: string; createdBy: string; noOfModification: number; }[];\r\n\r\n  constructor(private confirmService: AppConfirmService,\r\n     private snack: MatSnackBar,\r\n    private apiService: ApiService, \r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef, \r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private loader: AppLoaderService,\r\n    private downloadService: DownloadService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.fetchBillerInfo();\r\n\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'billerInfoMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.fetchBillerInfo();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n   \r\n  }\r\n\r\n  fetchBillerInfo() {\r\n    this.apiService.getAllBillerInfoId().subscribe((resp) => {\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'U'){\r\n          resp[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(resp[i].authStatus == 'A') {\r\n          resp[i].authStatus = 'Authorized'\r\n        } \r\n        if(resp[i].recordStatus == 'O'){\r\n          resp[i].recordStatus = 'Open'\r\n        } \r\n        if(resp[i].recordStatus == 'C'){\r\n          resp[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.data = resp;\r\n      this.dataSource = new MatTableDataSource(this.data);\r\n      console.log(this.dataSource);\r\n      this.users = this.data;\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/addOrEditBillerInfo\"]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main`]);\r\n  }\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any=[], filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )      \r\n    }\r\n  }\r\n  clearFilter() {\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  editItem(data: any = {}, isEdit: string) {\r\n    console.log(\"data to edit:: \", data);\r\n    this.router.navigate([\"/maintenance/main/addOrEditBillerInfo\"], { queryParams: { id: data.id, isEdit: isEdit } });\r\n  }\r\n\r\n  billerInfo(){\r\n\r\n    this.downloadService.downloadFiles(\"billerInfo\" , this.users);\r\n  }\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({ message: `Are you sure? You want to delete?` })\r\n      .subscribe(res => {\r\n        if (res) {\r\n          console.log(\"data to delete :: \", row);\r\n          this.loader.open();\r\n          this.apiService.deleteBillerInfo(row.id)\r\n            .subscribe(data => {\r\n              this.loader.close();\r\n              this.fetchBillerInfo();\r\n            },\r\n              err => {\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                  \r\n                }  \r\n              })\r\n        }\r\n      });\r\n  }\r\n\r\n  dataByFilterByOption(index, filter){\r\n    return filter.value; \r\n }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Biller Maintenance </small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n\t<button mat-icon-button (click)=\"goBack()\">\r\n\t  <mat-icon>arrow_back</mat-icon>\r\n\t</button>\r\n\t<span class=\"text-large\">\r\n\t  Biller Maintenance\r\n\t</span>\r\n</div>\r\n  <!-- <div fxLayoutAlign=\"center\">\r\n\t<mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n  </div> -->\r\n  <mat-card class=\"mt-32\">\r\n\t<div>\r\n\t\t<table style=\"margin: 18px;\">\r\n\t\t  <tr>\r\n\t\t\t<td>\r\n\t\t\t  <h2>\r\n\t\t\t\tBillers\r\n\t\t\t  </h2>\r\n\t\t\t</td>\r\n\t\t  </tr>\r\n\t\t  <tr>\r\n\t\t\t<td>\r\n\t\t\t  <div class=\"highlight\">\r\n\t\t\t  </div>\r\n\t\t\t</td>\r\n\t\t  </tr>\r\n\t\t</table>  \r\n\t\t<span fxFlex></span>\r\n\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n\t\t  <mat-icon>more_vert</mat-icon>\r\n\t\t</button>\r\n\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t  <div class=\"upload_botton\">\r\n\t\t\t<button type=\"button\" mat-menu-item>Upload</button>\r\n\t\t\t<input\r\n\t\t\t  type=\"file\"\r\n\t\t\t  accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n\t\t\t  class=\"btn btn-success\"\r\n\t\t\t  (change)=\"onFileChange($event)\"\r\n\t\t\t/>\r\n\t\t  </div>\r\n\t\t  <button (click)=\"billerInfo()\" mat-menu-item>\r\n\t\t\t<span>Download</span>\r\n\t\t  </button>\r\n\t\t</mat-menu>\r\n\t\t</div>\r\n\t   <mat-card-content>\r\n\t\t<div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n\t\t\t<div fxLayout=\"row\"class=\"w-full\" fxLayoutGap=\"10px\">\r\n\t\t\t  <div>\r\n\t\t\t\t<mat-form-field appearance=\"outline\">\r\n\t\t\t\t  <mat-label>Filter By</mat-label>\r\n\t\t\t\t  <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n\t\t\t\t\t<!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n\t\t\t\t\t<mat-option value=\"0\">Select</mat-option>\r\n\t\t\t\t\t<mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilterByOption\" value=\"{{filter.key}}\">\r\n\t\t\t\t\t  {{filter.value}}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t  </mat-select>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t  </div>\r\n\t\t\t  <div>\r\n\t\t\t\t<mat-form-field appearance=\"outline\">\r\n\t\t\t\t  <mat-label>Search</mat-label>\r\n\t\t\t\t  <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n\t\t\t\t  <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n\t\t\t\t  <mat-icon matSuffix>search</mat-icon>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t  </div>\r\n\t\t\t<div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n\t\t\t\t<button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n\t\t\t\t</button>\r\n\t\t\t  </div>\r\n\t\t\t  <div class=\"filterDiv\">\r\n\t\t\t   <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n\t\t\t   </button>\r\n\t\t\t </div>\r\n\t\t\t  \r\n\t\t\t</div>\r\n\t\t  </div>\r\n\t\t  <div class=\"mat-elevation-z0\">\r\n\t\t\t<mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">      \r\n\t\t  <ng-container matColumnDef=\"entityCode\">\r\n\t\t  <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n\t\t\tCode\r\n\t\t</mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n\t  </ng-container>\r\n  \r\n\t  <ng-container matColumnDef=\"billerCode\">\r\n\t\t<mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state name\"> Biller Code\r\n\t\t</mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.billerCode}} </mat-cell>\r\n\t  </ng-container>\r\n  \r\n\t  <ng-container matColumnDef=\"billerName\">\r\n\t\t<mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code 2\"> Biller Name\r\n\t\t   </mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.billerName}} </mat-cell>\r\n\t  </ng-container>\r\n  \r\n\t  <ng-container matColumnDef=\"billerAccBrn\">\r\n\t\t<mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> Biller Account Brn\r\n\t\t</mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.billerAccBrn}} </mat-cell>\r\n\t  </ng-container>\r\n\t  <ng-container matColumnDef=\"authStatus\">\r\n\t\t<mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n\t\t</mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n\t  </ng-container>\r\n\t  <ng-container matColumnDef=\"recordStatus\">\r\n\t\t<mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n\t\t</mat-header-cell>\r\n\t\t<mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n\t  </ng-container>\r\n\t  <!-- <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"editItem(element,'yes')\" >edit</mat-icon>\r\n        </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n        </div>\r\n        </mat-cell>\r\n      </ng-container> -->\r\n\t  <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\">\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"primary\"\r\n            class=\"mr-16\"\r\n            (click)=\"editItem(element,'Yes')\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            mat-sm-button\r\n            color=\"warn\"\r\n            [disabled]=\"element.authStatus == 'Authorized'\"\r\n            (click)=\"deleteItem(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </mat-cell>\r\n      </ng-container>\r\n  \r\n\t  <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n\t  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\t</mat-table>\r\n\t<mat-paginator  class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n\t</div>\r\n\t   </mat-card-content>\r\n  </mat-card>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-audit-log',\r\n  templateUrl: './audit-log.component.html',\r\n  styleUrls: ['./audit-log.component.scss']\r\n})\r\nexport class AuditLogComponent implements OnInit {\r\n\r\n  clickEventsubscription: Subscription;\r\n\r\n  constructor(private dataService: DataService) {\r\n    this.dataService.getClickEvent().subscribe(() => {\r\n      console.log(\"test\");\r\n      this.auditLogDataObject = this.dataService.getAuditLogData();\r\n      if (this.auditLogDataObject.oneTimeAuth == \"N\") {\r\n        this.auditLogDataObject.oneTimeAuth = \"No\"\r\n      }\r\n      else if (this.auditLogDataObject.oneTimeAuth == \"Y\") {\r\n        this.auditLogDataObject.oneTimeAuth = \"Yes\"\r\n      }\r\n      if (this.auditLogDataObject.authStatus == \"U\") {\r\n        this.auditLogDataObject.authStatus = \"Unauthorized\"\r\n      }\r\n      else if (this.auditLogDataObject.authStatus == \"A\") {\r\n        this.auditLogDataObject.authStatus = \"Authorized\"\r\n      }\r\n      if (this.auditLogDataObject.recordStatus == \"O\") {\r\n        this.auditLogDataObject.recordStatus = \"Open\"\r\n      }\r\n      else if (this.auditLogDataObject.recordStatus == \"C\") {\r\n        this.auditLogDataObject.recordStatus = \"Close\"\r\n      }\r\n    })\r\n  }\r\n  auditLogDataObject: any = {};\r\n\r\n  ngOnInit(): void {\r\n    this.auditLogDataObject = this.dataService.getAuditLogData();\r\n    console.log(this.auditLogDataObject);\r\n    if (this.auditLogDataObject.oneTimeAuth == \"N\") {\r\n      this.auditLogDataObject.oneTimeAuth = \"No\"\r\n    }\r\n    else if (this.auditLogDataObject.oneTimeAuth == \"Y\") {\r\n      this.auditLogDataObject.oneTimeAuth = \"Yes\"\r\n    }\r\n    if (this.auditLogDataObject.authStatus == \"U\") {\r\n      this.auditLogDataObject.authStatus = \"Unauthorized\"\r\n    }\r\n    else if (this.auditLogDataObject.authStatus == \"A\") {\r\n      this.auditLogDataObject.authStatus = \"Authorized\"\r\n    }\r\n    if (this.auditLogDataObject.recordStatus == \"O\") {\r\n      this.auditLogDataObject.recordStatus = \"Open\"\r\n    }\r\n    else if (this.auditLogDataObject.recordStatus == \"C\") {\r\n      this.auditLogDataObject.recordStatus = \"Close\"\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"table pb-32\">\r\n    <div class=\"table-header\">\r\n        <div class=\"header__item\"><a id=\"name\" class=\"\">Onetime Auth</a></div>\r\n        <div class=\"header__item\"><a id=\"wins\" class=\"\">Authorization Status</a></div>\r\n        <div class=\"header__item\"><a id=\"draws\" class=\"\">Record Status</a></div>\r\n        <div class=\"header__item\"><a id=\"losses\" class=\"\">Maker ID</a></div>\r\n        <div class=\"header__item\"><a id=\"total\" class=\"\">Maker Time</a></div>\r\n        <div class=\"header__item\"><a id=\"total\" class=\"\">Authorized By</a></div>\r\n        <div class=\"header__item\"><a id=\"total\" class=\"\">Authorizer Time</a></div>\r\n        <div class=\"header__item\"><a id=\"total\" class=\"\">Modification No</a></div>\r\n    </div>\r\n    <div class=\"table-content\">\t\r\n        <div class=\"table-row\">\t\t\r\n            <div class=\"table-data\">{{auditLogDataObject?.oneTimeAuth}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.authStatus}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.recordStatus}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.createdBy}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.lastModifiedDate}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.authBy}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.authDate}}</div>\r\n            <div class=\"table-data\">{{auditLogDataObject?.noOfModification}}</div>\r\n        </div>\r\n    </div>\t\r\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Location } from '@angular/common';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { auditLogInterface, loggedInUserInterface } from './country-state-popup';\r\nimport Swal from 'sweetalert2';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  CountryCode: string;\r\n  countryIsoCode2: string;\r\n  RegionCode: string;\r\n  IBAN : String;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-country-state-popup',\r\n  templateUrl: './country-state-popup.component.html',\r\n  styleUrls: ['./country-state-popup.component.scss']\r\n})\r\nexport class CountryStatePopupComponent implements OnInit {\r\n\r\n  public countryMaintenance: FormGroup;\r\n  banks: string[] = [];\r\n  currencies: string[] = [];\r\n  countries: string[] = [];\r\n  states: string[] = [];\r\n  cities: string[] = [];\r\n  countryCodeList: any[] = [];\r\n  filteredOptions: Observable<string[]>;\r\n  id: any;\r\n  loggedInUser : any;\r\n  auditLogData : auditLogInterface;\r\n  isEdit: boolean = false;\r\n  isCountrycode: boolean = false;\r\n  isCountrycode2: boolean = false;\r\n  isReadOnly: boolean = true;\r\n  show = false;\r\n  editNow : boolean = false;\r\n    showLoader : boolean = false;\r\n    readorWrite: boolean=true;\r\n  selectedCountryCode : string;\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['stateCode', 'stateName', 'stateCode2', 'stateNumCode','authStatus','recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'stateCode', value: 'State Code' },\r\n    { key: 'stateName', value: 'State Name' },\r\n    { key: 'stateNumCode', value: 'State Numric Code' },\r\n    { key: 'authstatus', value: 'Auth Status' },\r\n    { key: 'recordStatus', value: 'Record Status' },\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  countryIsEdit: string;\r\n  userdata: any;\r\n\r\n  constructor(\r\n\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private _location: Location,\r\n    private router:Router,\r\n    private route : ActivatedRoute,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private snack: MatSnackBar,\r\n    private dataService : DataService,\r\n    private ls : LocalStoreService,\r\n    private loader: AppLoaderService,\r\n      private confirmService: AppConfirmService,\r\n      private downloadService:DownloadService\r\n      \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    //  this.getAllState();\r\n     this.allCountryCode();\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.countryIsEdit = params.get('isEdit');\r\n      if(params.get('isEdit') == 'Yes'){\r\n        this.isReadOnly = false;\r\n        this.editNow = true;\r\n      }\r\n      else if(params.get('isEdit') == 'No'){\r\n        this.isReadOnly = true;\r\n        this.editNow = false;\r\n      }\r\n      else if(params.get('isEdit') == 'false'){\r\n        this.isReadOnly = false;\r\n        this.editNow = false;\r\n      }\r\n      if(params.get('id')){\r\n        this.isEdit = true;\r\n        this.id = params.get('id');\r\n        this.apiService.getCountryById(params.get('id')).subscribe((resp:any) =>{\r\n           this.showLoader = true;\r\n           this.buildItemForm(resp);\r\n           this.showLoader = false;\r\n           this.selectedCountryCode = resp.countryCode;\r\n           this.auditLogData = resp;\r\n           this.getAllState();\r\n           this.dataService.setAuditLogData(this.auditLogData);\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.showLoader = true;\r\n        this.buildItemForm({});\r\n        this.showLoader = false;\r\n\r\n      }\r\n    }\r\n    );\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n  }\r\n  editItem(){\r\n    this.isReadOnly = false;\r\n    this.editNow = true;\r\n  }\r\n\r\n  Onlynumber(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9a-zA-Z ]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[+,1-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'countryMaint');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getAllCountries();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.countryMaintenance = this.fb.group({\r\n      countryCode: [item.countryCode || '', Validators.required], //dropdown\r\n      countryName: [item.countryName || '', Validators.required],\r\n      countryIsoCode2: [item.countryIsoCode2 || '', Validators.required],  //dropdown\r\n      numericCode: [item.numericCode || '', Validators.required],\r\n      // ibanCheckReqd: [item.ibanCheckReqd || false, Validators.required],\r\n      // blacklisted: [item.blacklisted || false, Validators.required],\r\n      ibanCheckReqd: [item.ibanCheckReqd === \"Y\" ? true : false || \"\", false],\r\n      blacklisted: [item. blacklisted === \"Y\" ? true : false || \"\", false],\r\n      region: [item.region || '', Validators.required],\r\n      isdCode: [item.isdCode || '', Validators.required]\r\n    });\r\n  }\r\n\r\n\r\n  submit(data : any) {\r\n    let details: any = {};\r\n    details = data;\r\n    data.ibanCheckReqd? details.ibanCheckReqd = 'Y' : details.ibanCheckReqd = 'N';\r\n    data.blacklisted? details.blacklisted = 'Y' : details.blacklisted = 'N';\r\n    details.id = this.id;\r\n    data.loggedInUser=this.loggedInUser.userName;\r\n    this.apiService.upsertCountryDetails(details).subscribe((resp) =>{\r\n      this.loader.close();\r\n      this.router.navigate(['/maintenance/main/countryState']).then(_=>{\r\n        this.snack.open('Data Saved Successfully!', 'OK', \r\n        { duration: 4000 , \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n      });\r\n    },(err:any) =>{\r\n      this.loader.close();\r\n      this.snack.open(`Error!`, 'OK', { duration: 4000 });\r\n    })\r\n  }\r\n  isCountryPresent(data){\r\n    this.apiService.isCountryCodePresent(data).subscribe((res) =>{\r\n      if(res == true){\r\n        this.isCountrycode = true;\r\n      }else{\r\n        this.isCountrycode = false;\r\n      }\r\n    });\r\n  }\r\n  isCountryCode2Present(data){\r\n    this.apiService.isCountryCode2Present(data).subscribe((respo) =>{\r\n      if(respo == true){\r\n        this.isCountrycode2 = true;\r\n      }else{\r\n        this.isCountrycode2 = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  goBack() {\r\n     this.router.navigate([`/maintenance/main/countryState`]);\r\n     \r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n\r\n  getAllState() {\r\n    this.apiService.getStateByCountry(this.id).subscribe((data: any) => {\r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.userdata=data;\r\n    });\r\n  }\r\n  stateMaintenance(){\r\n    console.log(\"inside downlaod \");\r\n    console.log(this.userdata);\r\n\r\n    this.downloadService.downloadFiles(\"stateMaintenance\", this.userdata);\r\n  }\r\n\r\n  \r\n\r\n  openPopUp(data: any = {}) {\r\n\r\n    this.router.navigate([\"/maintenance/main/statepopup\"],{ queryParams: { id: data.id, countryId : this.id, countryIsEdit : this.countryIsEdit,  SelectedCountryCode :this.selectedCountryCode } });\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy].toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n   getAllCountries() {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  onSelectOfCountryCode(obj){\r\n    this.countryMaintenance.get('countryCode').setValue(obj.iso2);\r\n    if(obj.iso2){\r\n      this.isCountryPresent(this.countryMaintenance.get('countryCode').value);\r\n    }\r\n    this.countryMaintenance.get('countryName').setValue(obj.name);\r\n    this.countryMaintenance.get('countryIsoCode2').setValue(obj.iso3);\r\n    if(obj.iso3){\r\n      this.isCountryCode2Present(this.countryMaintenance.get('countryIsoCode2').value);\r\n    }\r\n    this.countryMaintenance.get('numericCode').setValue(obj.numericCode);\r\n    this.countryMaintenance.get('ibanCheckReqd').setValue(true);\r\n    this.countryMaintenance.get('blacklisted').setValue(true);\r\n    this.countryMaintenance.get('region').setValue(obj.region);\r\n    this.countryMaintenance.get('isdCode').setValue(obj.phonecode);\r\n\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteCountry(this.auditLogData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/countryState`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/countryState`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n    payload.id = this.id;\r\n    payload.operation = operation;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.apiService.getAuditLogsForCountry(payload).subscribe((data) => {\r\n      this.auditLogData = data;\r\n      this.dataService.setAuditLogData(this.auditLogData);\r\n      this.dataService.sendClickEvent();\r\n      let message = '';\r\n      switch (operation) {\r\n        case 'open':\r\n          message = 'opened'\r\n          break;\r\n        case 'close':\r\n          message = 'closed'\r\n          break;\r\n        case 'auth':\r\n          message = 'authorized'\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n        duration: 2000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n      }}))\r\n    \r\n  }\r\n\r\n  allCountryCode(){\r\n    this.apiService.allCountryCode().subscribe((data) =>{\r\n      this.countryCodeList = data;\r\n    })\r\n  }\r\n\r\n  filter(value: string): string[] {\r\n\r\n    const filterValue = value.toLowerCase();\r\n    return this.countryCodeList.filter(option => option.iso2.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  // deleteCountry() {\r\n  //   this.confirmService.confirm({message: `Are you sure? You want to delete?`})\r\n  //     .subscribe(res => {\r\n  //       if (res) {\r\n  //         this.loader.open();\r\n  //         this.apiService.deleteCountry(this.id)\r\n  //           .subscribe(data => {\r\n              \r\n  //           },    err=>{\r\n  //             if (err.status == 200) {\r\n  //               this.loader.close();\r\n  //               this.snack.open('Record Deleted Successfully', 'OK', {\r\n  //                 duration: 4000,\r\n  //                 verticalPosition: 'top',\r\n  //                 horizontalPosition: 'right'\r\n  //               });\r\n  //             }\r\n    \r\n            \r\n  //           this.getAllCountries();\r\n  //         this.router.navigate([`/maintenance/main/countryState`]);\r\n\r\n            \r\n  //         })\r\n  //       }\r\n  //     })\r\n  // }\r\n\r\n  countryStateMaintenance(){\r\n    this.downloadService.downloadFiles(\"countryStateMaintenance\", this.userdata);\r\n  }\r\n   \r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.stateName}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteState(row.id)\r\n            .subscribe(data => {\r\n              \r\n            },    err=>{\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              }\r\n            this.getAllState();\r\n            \r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n   \r\n\r\n   applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/statepopup\"],{ queryParams: {countryId : this.id, countryIsEdit : this.countryIsEdit, selectedCountryCode :this.selectedCountryCode } });\r\n\r\n  }\r\n  dataByIso(index,item){\r\n    return item.iso2\r\n  }\r\n  dataByKey(index,item){\r\n    return item.key\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Country and State Maintenance >\r\n   <span *ngIf=\"isEdit && editNow\">Edit</span><span *ngIf=\"isEdit && !editNow\">View</span><span *ngIf=\"!isEdit && !editNow\">Add</span> Country</small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span *ngIf=\"isEdit && editNow\" class=\"text-large\">\r\n        Edit Country\r\n      </span>\r\n      <span *ngIf=\"isEdit && !editNow\" class=\"text-large\">\r\n        View Country\r\n      </span>\r\n      <span *ngIf=\"!isEdit && !editNow\" class=\"text-large\">\r\n        New Country\r\n      </span>\r\n      <span fxFlex></span>\r\n      <!-- <button mat-button (click)=\"editItem()\">\r\n        <mat-icon>edit</mat-icon>\r\n        Edit\r\n      </button>\r\n      <button\r\n      mat-button\r\n        type=\"button\"\r\n        (click)=\"deleteCountry()\"\r\n      >\r\n      <mat-icon>delete</mat-icon>\r\n        Delete\r\n      </button> -->\r\n   </div>\r\n   <!-- {{showLoader}} -->\r\n   <div *ngIf=\"showLoader\">\r\n    <mat-spinner [diameter]=\"25\"></mat-spinner>\r\n  </div>\r\n   <mat-card >\r\n    <mat-card-content>\r\n      <form [formGroup]=\"countryMaintenance\"  class=\"mt-32\">\r\n        <table class=\"pb-32\">\r\n          <tr>\r\n            <td>\r\n              <h1 *ngIf=\"isEdit && !editNow\">{{countryMaintenance.controls['countryName'].value}}</h1>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <div *ngIf=\"countryMaintenance && countryMaintenance.controls['countryName'].value && isEdit && !editNow\" class=\"highlight\">\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            \r\n            <mat-label>Country Code *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              <input type=\"text\"\r\n                     matInput\r\n                     [readonly]=\"readorWrite\" \r\n                     maxlength=\"3\"\r\n                     minlength=\"1\"\r\n                     name=\"countryCode\"\r\n                     (keyup)=\"filter($event.target.value);isCountryPresent($event.target.value)\"\r\n                     [formControl]=\"countryMaintenance.controls['countryCode']\"\r\n                     required\r\n                     [matAutocomplete]=\"auto\">\r\n                <mat-autocomplete #auto=\"matAutocomplete\">\r\n                    <mat-option (click)=\"onSelectOfCountryCode(code)\" *ngFor=\"let code of countryCodeList;trackBy:dataByIso\" [value]=\"code.iso2\">\r\n                      {{code.iso2}}\r\n                    </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n\r\n            <mat-error *ngIf=\"isCountrycode\">this is an existing country code</mat-error>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('countryCode').touched && !countryMaintenance.get('countryCode').valid\">\r\n            Country Code is Required!\r\n        </mat-error>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Country Code 2 *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n              (keyup)=\"isCountryCode2Present($event.target.value)\"\r\n                matInput\r\n                [readonly]=\"readorWrite\" \r\n                maxlength=\"3\"\r\n                minlength=\"1\"\r\n                name=\"countryIsoCode2\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"countryMaintenance.controls['countryIsoCode2']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"isCountrycode2\">this is an existing country code 2</mat-error>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('countryIsoCode2').touched && !countryMaintenance.get('countryIsoCode2').valid\">\r\n            Country code 2 is Required!\r\n        </mat-error>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Country Name  *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                [readonly]=\"readorWrite\" \r\n                name=\"countryName\"\r\n                maxlength=\"20\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"countryMaintenance.controls['countryName']\"\r\n               \r\n              />\r\n            </mat-form-field>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('countryName').touched && !countryMaintenance.get('countryName').valid\">\r\n            Country Name is Required!\r\n        </mat-error>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>ISO Numeric Code *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                [readonly]=\"readorWrite\" \r\n                (keypress)=\"Onlynumber($event)\"\r\n                maxlength=\"3\"\r\n                minlength=\"1\"\r\n                name=\"numericCode\"\r\n                [formControl]=\"countryMaintenance.controls['numericCode']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('numericCode').touched && !countryMaintenance.get('numericCode').valid\">\r\n            ISO numeric Code is Required!\r\n        </mat-error>\r\n          </div>\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>RegionCode *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                [readonly]=\"readorWrite\" \r\n                maxlength=\"20\"\r\n                minlength=\"1\"\r\n                name=\"region\"\r\n                (keypress)=keyPressAlphanumeric($event)\r\n                [formControl]=\"countryMaintenance.controls['region']\"\r\n                \r\n              />\r\n            </mat-form-field>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('region').touched && !countryMaintenance.get('region').valid\">\r\n            Region Code is Required!\r\n          </mat-error>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>Country Telephone ISD Code *</mat-label>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <input\r\n                matInput\r\n                maxlength=\"10\"\r\n                minlength=\"1\"\r\n                (keyup)=\"filter($event.target.value)\"\r\n                name=\"isdCode\"\r\n                [formControl]=\"countryMaintenance.controls['isdCode']\"\r\n                [readonly]=\"readorWrite\" \r\n              />\r\n            </mat-form-field>\r\n            <mat-error\r\n            *ngIf=\"countryMaintenance.get('isdCode').touched && !countryMaintenance.get('isdCode').valid\">\r\n            Telephone ISD code is Required!\r\n        </mat-error>\r\n          </div>\r\n      \r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>IBAN Check Required <span *ngIf=\"!isReadOnly\" class=\"pl-4 \">?</span></mat-label><br>\r\n        <mat-slide-toggle [formControl]=\"countryMaintenance.controls['ibanCheckReqd']\" [disabled]=\"readorWrite\"\r\n        ></mat-slide-toggle>\r\n          </div>\r\n\r\n          <div fxFlex=\"33.33\" class=\"pr-16\">\r\n            <mat-label>blacklisted <span *ngIf=\"!isReadOnly\" class=\"pl-4 \">?</span></mat-label><br>\r\n        <mat-slide-toggle [formControl]=\"countryMaintenance.controls['blacklisted']\" [disabled]=\"readorWrite\"></mat-slide-toggle>\r\n          </div>\r\n        </div>\r\n\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n          <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n            <button *ngIf=\"!isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"submit(countryMaintenance.value)\" [disabled]=\"!(countryMaintenance.valid && countryMaintenance.dirty && !isCountrycode && !isCountrycode2 )\">\r\n              Save\r\n            </button>\r\n            &nbsp;\r\n            <div [hidden]=\"readorWrite\" >\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(countryMaintenance.valid || countryMaintenance.dirty)\"(click)=\"submit(countryMaintenance.value)\">\r\n                 Save\r\n                </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                Edit\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                Authorize\r\n              </button>&nbsp;&nbsp;\r\n            </div> \r\n            <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                Reopen\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                Close\r\n              </button>&nbsp;&nbsp;\r\n            </div>\r\n            <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n              <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n                Delete\r\n              </button> &nbsp;&nbsp;\r\n            </div>\r\n           \r\n            <button\r\n              mat-raised-button\r\n              color=\"warn\"\r\n              type=\"button\"\r\n              (click)=\"goBack()\"\r\n            >\r\n              Exit\r\n            </button>\r\n  \r\n          </div>\r\n        </div>\r\n        \r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n  </div>\r\n\r\n<div *ngIf=\"!(!isEdit && !editNow)\">\r\n  <div  fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    \r\n  </div>\r\n  <mat-card class=\"mt-32\">\r\n    <div>\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            States\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"stateMaintenance()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n    </mat-menu>\r\n  </div><br>\r\n    \r\n    <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap='20px'>\r\n        <div>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\">\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption;trackBy:dataByKey\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\">Clear Filter</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button mat-flat-button color=\"primary\" (click)=\"addNew()\" class=\"mr-38\">ADD NEW</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource] = \"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n        <ng-container matColumnDef=\"stateCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> State\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.stateCode}} </mat-cell>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"stateName\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state name\"> State Name\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.stateName}} </mat-cell>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"stateCode2\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code 2\"> State Code 2\r\n             </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.stateCode2}} </mat-cell>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"stateNumCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> State Numric Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.stateNumCode}} </mat-cell>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state Numric Code\"> Record Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(element)\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"deleteItem(element)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </mat-cell>\r\n        </ng-container>\r\n  \r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n\r\n\r\n  \r\n   \r\n","import { Component, OnInit,HostListener  } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Route, Router, RouterLinkActive } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-workflow-maintenance',\r\n  templateUrl: './workflow-maintenance.component.html',\r\n  styleUrls: ['./workflow-maintenance.component.scss']\r\n})\r\nexport class WorkflowMaintenanceComponent implements OnInit {\r\n  accountList: any;\r\n  selectedAccount: any;\r\n  getId: Event;\r\n  subModuleData: [];\r\n  roleId:any;\r\n  selectedRoleId: Event;\r\n  roles: any;\r\n  fetchRoleId: any;\r\n  stringRoleId: any;\r\n  constructor(\r\n    private router:Router,\r\n    private apiService: ApiService,\r\n    private snack:MatSnackBar\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getMainModuleInfo();\r\n    this.getRoleId();\r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main/userMaintenance\"]);\r\n  }\r\n\r\n  getMainModuleInfo() {\r\n    this.apiService.getMainModuleInfo().subscribe((data: any) => {\r\n      console.log('resp',data)\r\n      this.accountList = data;\r\n    });\r\n  }\r\n\r\n  onAccountSelect(event:Event) {\r\n    console.log(event);\r\n    this.getId = event\r\n\r\n    this.apiService.fetchSubmoduleById(this.getId).subscribe((data)=>{\r\n     console.log(data);\r\n     this.subModuleData = data;\r\n    })\r\n   \r\n  }\r\n  OnRoleIdSelect(event:Event,data){\r\n    this.selectedRoleId = event\r\n    console.log(this.selectedRoleId);\r\n    console.log(data.roleId);\r\n    this.fetchRoleId = data.roleId\r\n\r\n    \r\n  }\r\n\r\n  submit(){\r\n    var payload = [];\r\n    for (var i = 0; i < this.subModuleData.length; i++) {\r\n        if(this.subModuleData[i] && this.subModuleData[i]){\r\n          console.log(this.subModuleData[i])\r\n\r\n            payload.push({\r\n                subModuleId: this.subModuleData[i]['id'],\r\n                roleId: this.subModuleData[i]['roleId']\r\n            });\r\n        }\r\n    }\r\n    console.log(payload);\r\n\r\n\r\n    this.apiService.saveWorkflowRecord(payload).subscribe(response => {\r\n      console.log(\"response status::\",response.status)\r\n      if(response != null){\r\n        // if(response.status == 200){\r\n          this.snack.open(`Successfully Saved!`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n\r\n       \r\n      \r\n      }\r\n    });\r\n\r\n   \r\n}\r\n\r\n  getRoleId() {\r\n    this.apiService.getRoleId().subscribe((data: any) => {\r\n      this.roles = data;\r\n      console.log(this.roles);\r\n      this.roleId = this.roles.id;\r\n    });\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary> Workflow Maintenance> <span>Add</span><span>Edit</span> Workflow Maintenance\r\n</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 class=\"add-text\">Workflow Maintenance</h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <form class=\"m-333\">\r\n                <div fxFlex=\"33.33\">\r\n                    <mat-label>Loan Origination *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select (selectionChange)=\"onAccountSelect($event.value)\" name=\"account\" required >\r\n                            <mat-option *ngFor=\"let account of accountList\" [value]=\"account.id\">\r\n                                {{ account.moduleName }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>    \r\n        </form>\r\n        <div fxLayoutGap=\"22px\"  *ngFor=\"let data of subModuleData\" class=\"data-input-row\" style=\"display: flex; flex-direction: row; width: fit-content;\" >\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <input \r\n                    matInput  type=\"text\"\r\n                    readonly\r\n                    [(ngModel)]=\"data.subModuleName\"\r\n                />\r\n            </mat-form-field>\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Role Id</mat-label>\r\n                <mat-select [(ngModel)]=\"data.roleId\" (selectionChange)=\"OnRoleIdSelect($event.value,data)\" multiple name=\"roleId\" >\r\n                    <mat-option *ngFor=\"let role of roles\" [value]=\"role.id\">\r\n                        {{ role.roleName }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        \r\n    </mat-card-content>\r\n    <div class=\"filterDiv\">\r\n                <button mat-flat-button color=\"primary\" class=\"submit\" (click)=\"submit()\" >Submit\r\n                </button>\r\n              </div>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-security-policy',\r\n  templateUrl: './security-policy.component.html',\r\n  styleUrls: ['./security-policy.component.scss']\r\n})\r\nexport class SecurityPolicyComponent implements OnInit {\r\n\r\n  dataSource = new MatTableDataSource();\r\n  disableDelete = true;\r\n  recordExist : number = 0;\r\n  displayedColumns: string[] = [ 'version', 'createdBy', 'authStatus', 'recordStatus','authDate' ,'action'];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(private router: Router,private apiService: ApiService,private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,private snack: MatSnackBar,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchSecurityPolicy();\r\n  }\r\n  \r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/addEditsecurityPolicy\"]);\r\n  }\r\n\r\n  editPolicy(id){\r\n    this.router.navigate([\"/maintenance/main/addEditsecurityPolicy\"],{ queryParams: { id: id } });\r\n  }\r\n    \r\n  deleteItem(Record) {\r\n    this.confirmService.confirm({message: `Delete ${Record.version}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          console.log(res)\r\n          this.apiService.deleteSecurityPolicy(Record.version)\r\n            .subscribe(data => {\r\n            },    err=>{\r\n              if (err.status == 200) {\r\n                this.snack.open('Record Deleted Successfully', 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n              } \r\n              this.fetchSecurityPolicy();\r\n          })\r\n        }\r\n      })\r\n  }\r\n  \r\n\r\n  fetchSecurityPolicy() {\r\n    this.apiService.getSecurityPolicyDetails().subscribe((resp) => {\r\n      const sortedArray = resp.sort((a, b) => b.version - a.version);\r\n      const latestVersion = sortedArray[0];\r\n      this.dataSource.data = [latestVersion];\r\n    });\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Retail Operations > Security Policy  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Security Policy\r\n      </span>\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" *ngIf=\"recordExist < 0\" fxLayoutAlign=\"end end\" class=\"mt-32\" class=\"filterDiv\">\r\n    <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n    </button>\r\n  </div>\r\n  \r\n\r\n\r\n  <mat-card class=\"mt-32\">\r\n    <div class=\"mat-elevation-z0\">\r\n        <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort>\r\n          <ng-container matColumnDef=\"version\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Version\"> Version\r\n            </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.version}} </mat-cell>\r\n          </ng-container>\r\n     \r\n          <ng-container matColumnDef=\"createdBy\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Created By\">Created By\r\n               </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.createdBy}} </mat-cell>\r\n          </ng-container>\r\n          <!-- <ng-container matColumnDef=\"childPermission\">\r\n           <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency 2\">Child Permission\r\n              </mat-header-cell>\r\n           <mat-cell *matCellDef=\"let element\"> {{element.childPermission}} </mat-cell>\r\n         </ng-container> -->\r\n          <!-- <ng-container matColumnDef=\"oneTimeAuth\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n             </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n          </ng-container> -->\r\n          <ng-container matColumnDef=\"authStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n             </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"recordStatus\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n             </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"authDate\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Date\"> Date\r\n             </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\"> {{element.authDate}} </mat-cell>\r\n          </ng-container>\r\n     \r\n     \r\n          <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let element\">\r\n              <div>\r\n               <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"editPolicy(element.version)\" >edit</mat-icon>\r\n            </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <!-- <div>\r\n             <mat-icon [disabled]=\"disableDelete\" class=\"actionIcons\" matTooltip=\"Delete\" (click)=\"deleteItem(element)\">delete</mat-icon>\r\n            </div> -->\r\n            </mat-cell>\r\n          </ng-container>\r\n     \r\n          <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n          <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        </mat-table>\r\n        <!-- <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator> -->\r\n      </div>\r\n   </mat-card>  \r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AuditLogComponent } from '../../audit-log/audit-log.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-currency-maint',\r\n  templateUrl: './add-currency-maint.component.html',\r\n  styleUrls: ['./add-currency-maint.component.scss']\r\n})\r\nexport class AddCurrencyMaintComponent implements OnInit {\r\n  public currencyMaint: FormGroup;\r\n  @ViewChild('auditLog') auditLog : AuditLogComponent\r\n  currencyMaintIsEdit: any;\r\n  isEdit: boolean = false ;\r\n  \r\n  loggedInUser : any;\r\n  auditLogData : any;\r\n  countries: string[] = [];\r\n  currencyId: any;\r\n  readorWrite: boolean = true;\r\n  currencyCode: any;\r\n  id: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route : ActivatedRoute,\r\n    private apiService: ApiService,\r\n    private dataService : DataService,\r\n    private ls : LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private router:Router,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm({});\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      console.log(params);\r\n      this.currencyCode = JSON.parse(params.get('currencyCode'));\r\n      this.currencyMaintIsEdit = params.get('isEdit');\r\n      console.log(\"this.currencyMaintIsEdit\",this.currencyMaintIsEdit);\r\n      if(this.currencyCode){\r\n        this.isEdit = true;\r\n        console.log(this.currencyCode);\r\n        this.apiService.editCurrencyMaintById(this.currencyCode).subscribe((resp) =>{\r\n           console.log(resp);\r\n           this.id = resp.id;\r\n           this.buildItemForm(resp);\r\n           this.auditLogData = resp;\r\n           this.dataService.setAuditLogData(this.auditLogData);\r\n           this.dataService.sendClickEvent();\r\n        });\r\n      }\r\n      else{\r\n        this.readorWrite=false;\r\n        this.buildItemForm({});\r\n      }\r\n    });\r\n    this.getCountryName(\"country\");\r\n    this.cdr.markForCheck();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    console.log(this.loggedInUser);\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.currencyMaint = this.fb.group({\r\n      currencyCode: [item ? item.currencyCode : '', [Validators.required,Validators.maxLength(3), Validators.minLength(3)]],\r\n      currencyName: [item ? item.currencyName : '', [Validators.required]],\r\n      country: [item ? item.country : '', [Validators.required]],\r\n      isoCcyCode: [item ? item.isoCcyCode : '', [Validators.required]]\r\n\r\n\r\n    });\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      console.log('resp',data)\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          this.countries.push(data[i].countryName);\r\n        }\r\n      }\r\n      // this.countries = data;\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.currencyMaint.value.loggedInUser = this.loggedInUser.userName;\r\n    if(this.isEdit == true){\r\n      this.currencyMaint.value.id = this.id\r\n    }\r\n    console.log(this.currencyMaint.value);\r\n    this.apiService.upsertCurrencyMaintDetails(this.currencyMaint.value).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data.status == 400){\r\n        this.snack.open(`${data.message}`, 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n      else if(data && this.isEdit == false ){\r\n        this.snack.open('Data Created Successfully!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n        this.cdr.markForCheck();\r\n      }\r\n     else if(data && this.isEdit == true){\r\n        this.snack.open('Data Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n        this.cdr.markForCheck();\r\n      }\r\n      // else if(data != null && this.isEdit == false){\r\n      //   this.snack.open('Data Saved!', 'OK', {\r\n      //     duration: 4000,\r\n      //     verticalPosition: 'top',\r\n      //     horizontalPosition: 'right'\r\n      //   });\r\n      //   this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n      //   this.cdr.markForCheck();\r\n\r\n      // }\r\n      else {\r\n        this.snack.open('Save Failed! Cannot add duplicate records', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n  }\r\n\r\n  trackByCountry(country){\r\n    return country;\r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteCurrencyMaint(this.auditLogData.currencyId)\r\n        .subscribe(data => {\r\n            this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n            this.router.navigate([`/maintenance/main/currencyMaint`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n\r\n editRecord(){\r\n this.readorWrite=false;\r\n }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        console.log(\"operation::\",operation);\r\n        console.log(this.currencyMaint.value.currencyCode);\r\n        let payload: any = {};\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser.userName;\r\n        payload.id = this.id\r\n        this.apiService.updateAuditLogForCurrencyMaint(payload).subscribe((data) => {\r\n          console.log(data);\r\n          this.auditLogData = data;\r\n          this.dataService.setAuditLogData(this.auditLogData);\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successful!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n    \r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Maintenance > <span *ngIf=\"!isEdit\">Add</span> <span *ngIf=\"isEdit\">Edit</span> Currency Information</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Currency Information</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Currency Information</h1>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-card-content>\r\n        <div [formGroup]=\"currencyMaint\" class=\"m-333\">\r\n            <!-- <h1>Currency Maintenance Information</h1> -->\r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                <div fxFlex=\"33.33\">\r\n                    <mat-label>Currency Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\" >\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"currencyCode\" minlength=\"3\" maxlength=\"3\" type=\"text\"\r\n                            formControlName=\"currencyCode\" required />\r\n                        <mat-error *ngIf=\"currencyMaint?.get('currencyCode').hasError('required')\">\r\n                            Currency Code is Required!\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"!currencyMaint.controls['currencyCode'].hasError('minLength')\">\r\n                            Currency Code field requires minimum of 3 digits\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div fxFlex=\"33.33\">\r\n                    <mat-label>Currency Name *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"currencyName\" type=\"text\" formControlName=\"currencyName\" required maxlength=\"200\"/>\r\n                        <mat-error *ngIf=\"currencyMaint.get('currencyName').hasError('required')\">\r\n                            Currency Name is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n                    <mat-label>Country *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <mat-select name=\"country\" formControlName=\"country\" required >\r\n                            <mat-option *ngFor=\"let country of countries; trackBy: trackByCountry\" [value]=\"country\">\r\n                                {{ country }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"currencyMaint?.get('country').hasError('required')\">\r\n                            Country is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n                    <mat-label>Country *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"isoCcyCode\" type=\"text\" formControlName=\"country\" required />\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n                \r\n\r\n                <div fxFlex=\"32.5\">\r\n                    <mat-label>ISO Currency Code *</mat-label>\r\n                    <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                        <input [readonly]=\"readorWrite\" matInput name=\"isoCcyCode\"  maxlength=\"3\" type=\"text\" formControlName=\"isoCcyCode\" required />\r\n                        <mat-error *ngIf=\"currencyMaint?.get('isoCcyCode').hasError('required')\">\r\n                            Iso currency code is Required!\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n                <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n                    <button color=\"primary\" *ngIf=\"!isEdit\"  [disabled]= \"currencyMaint.invalid\" mat-raised-button (click)=\"submit()\">\r\n                        Save\r\n                    </button>\r\n                    <div [hidden]=\"readorWrite\" >\r\n                        <button *ngIf=\"isEdit\" type=\"button\"  [disabled]= \"!(currencyMaint.invalid || currencyMaint.dirty)\" mat-raised-button color=\"primary\" (click)=\"submit()\">\r\n                            Save\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                    \r\n                    <!-- <div *ngIf=\"(auditLogData?.authStatus == 'Authorized' || auditLogData?.authStatus == 'A')\r\n                    && (auditLogData?.recordStatus == 'Close' || auditLogData?.recordStatus == 'C')\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"updateRecord('open')\" [disabled]=\"!currencyMaint.valid\">\r\n                            Open\r\n                        </button>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div *ngIf=\"(auditLogData?.authStatus == 'Authorized' || auditLogData?.authStatus == 'A')\r\n                    && (auditLogData?.recordStatus == 'Open' || auditLogData?.recordStatus == 'O')\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"updateRecord('close')\">\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' || auditLogData?.authStatus == 'U'\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"\r\n                            (click)=\"updateRecord('auth')\">\r\n                            Authorize\r\n                        </button>\r\n                    </div> -->\r\n                    <div [hidden]=\"!readorWrite || auditLogData?.recordStatus == 'Close'\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n                          Edit\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditLogData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n                          Authorize\r\n                        </button>&nbsp;&nbsp;\r\n                      </div> \r\n                      <div *ngIf=\"auditLogData?.recordStatus == 'Close' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n                          Reopen\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditLogData?.recordStatus == 'Open' && auditLogData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n                          Close\r\n                        </button>&nbsp;&nbsp;\r\n                      </div>\r\n                      <div *ngIf=\"auditLogData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n                        <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord()\">\r\n                          Delete\r\n                        </button> &nbsp;&nbsp;\r\n                      </div>\r\n                     \r\n                      <button\r\n                        mat-raised-button\r\n                        color=\"warn\"\r\n                        type=\"button\"\r\n                        (click)=\"goBack()\"\r\n                      >\r\n                        Exit\r\n                      </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n<div *ngIf=\"auditLogData\" class=\"mt-32\">\r\n    <app-audit-log #auditLog></app-audit-log>\r\n</div> ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\n@Component({\r\n  selector: 'app-till-vault-ccybal-hispopup',\r\n  templateUrl: './till-vault-ccybal-hispopup.component.html',\r\n  styleUrls: ['./till-vault-ccybal-hispopup.component.scss']\r\n})\r\nexport class TillVaultCcybalHispopupComponent implements OnInit {\r\n  arrayCurrency: string[] = [];\r\n  countryCurrency: string[]=[];\r\n  tillId:number[]=[];\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  public ccybalHistoryForm: FormGroup;\r\n  \r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<TillVaultCcybalHispopupComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildItemForm(this.data.payload);\r\n    this.countryCurrency=this.data.currency;\r\n    this.tillId=this.data.till;\r\n    this.branchCode=this.data.branchCode;\r\n    this.bankCode=this.data.bankCode;\r\n  }\r\n\r\n  buildItemForm(item) {\r\n    this.ccybalHistoryForm = this.fb.group({\r\n      entityCode: [item.entityCode || '',Validators.required],\r\n      bankCode: [item.bankCode || '', Validators.required], \r\n      branchCode: [item.branchCode || '',Validators.required],\r\n      tillId: [item.tillId || '',Validators.required],\r\n      currency: [item.currency || '',[Validators.required]],\r\n      glAccount: [item.glAccount || '',Validators.required],\r\n      txnDate:[item.txnDate || '',Validators.required],\r\n      openBalInAcy: [item.openBalInAcy || '',Validators.required],\r\n      openBalInLcy: [item.openBalInLcy || '',Validators.required],\r\n      balInAcy: [item.balInAcy || '',Validators.required],\r\n      balInLcy: [item.balInLcy || '',Validators.required],\r\n    })\r\n  }\r\n  numericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  alhanumericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n// Save of tillVaultCurrencyBalHistory\r\n  submit() {\r\n    let payload = {\r\n      \"entityCode\": this.ccybalHistoryForm.value.entityCode,\r\n      \"bankCode\": this.ccybalHistoryForm.value.bankCode,\r\n      \"branchCode\": this.ccybalHistoryForm.value.branchCode,\r\n      \"currency\": this.ccybalHistoryForm.value.currency,\r\n      \"tillId\": this.ccybalHistoryForm.value.tillId,\r\n      \"glAccount\": this.ccybalHistoryForm.value.glAccount,\r\n      \"txnDate\": this.ccybalHistoryForm.value.txnDate,\r\n      \"openBalInAcy\": this.ccybalHistoryForm.value.openBalInAcy,\r\n      \"openBalInLcy\": this.ccybalHistoryForm.value.glAccount,\r\n      \"balInAcy\": this.ccybalHistoryForm.value.openBalInAcy,\r\n      \"balInLcy\": this.ccybalHistoryForm.value.openBalInAcy,\r\n      \r\n    };\r\n      this.dialogRef.close(this.ccybalHistoryForm.value);\r\n      }\r\n      dataByBankCode(index,item){\r\n        return item.bankCode;\r\n      }\r\n      dataByBranchCode(index,item){\r\n        return item.branchCode;\r\n      }\r\n      dataBytillId(index,item){\r\n        return item.tellerId;\r\n      }\r\n      dataByCountry(index,item){\r\n        return item.countryCode;\r\n      }\r\n}\r\n","\r\n<h1 matDialogTitle>{{data.title}}</h1>\r\n<form [formGroup]=\"ccybalHistoryForm\" (ngSubmit)=\"submit()\">\r\n<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n    <div fxFlex=\"50\"  class=\"pr-16\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n          matInput\r\n          name=\"entityCode\"\r\n          (keypress)=\"alhanumericValidation($event)\"\r\n          [formControl]=\"ccybalHistoryForm.controls['entityCode']\"\r\n          placeholder=\"Entity Code\">\r\n          <mat-error\r\n          *ngIf=\"ccybalHistoryForm.get('entityCode').touched && !ccybalHistoryForm.get('entityCode').valid\">\r\n          Enter the Entity Code\r\n      </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <mat-label>Bank Code *</mat-label>\r\n      <mat-select name=\"bankCode\" [formControl]=\"ccybalHistoryForm.controls['bankCode']\" class=\"selectOption\">\r\n        <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBankCode\" [value]=\"data.bankCode\">\r\n          {{data.bankCode}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('bankCode').touched && !ccybalHistoryForm.get('bankCode').valid\">\r\n      Bank Code is Required\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <mat-label>Branch Code *</mat-label>\r\n      <mat-select name=\"branchCode\" [formControl]=\"ccybalHistoryForm.controls['branchCode']\" class=\"selectOption\">\r\n        <mat-option *ngFor=\"let data of branchCode; trackBy:dataByBranchCode\" [value]=\"data.branchCode\">\r\n          {{data.branchCode}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error\r\n        *ngIf=\"ccybalHistoryForm.get('branchCode').touched && !ccybalHistoryForm.get('branchCode').valid\">\r\n        Branch Code is Required!\r\n    </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <mat-label>Till Id *</mat-label>\r\n      <mat-select name=\"tillId\" [formControl]=\"ccybalHistoryForm.controls['tillId']\" class=\"selectOption\">\r\n        <mat-option *ngFor=\"let data of tillId; trackBy:dataBytillId\" [value]=\"data.tellerId\">\r\n          {{data.tellerId}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('tillId').touched && !ccybalHistoryForm.get('tillId').valid\">\r\n      Till Id is Required!\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <mat-label>Currency *</mat-label>\r\n      <mat-select name=\"currency\" [formControl]=\"ccybalHistoryForm.controls['currency']\" class=\"selectOption\">\r\n        <mat-option *ngFor=\"let data of countryCurrency; trackBy:dataByCountry\" [value]=\"data.countryCode\">\r\n          {{data.countryCode}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('currency').touched && !ccybalHistoryForm.get('currency').valid\">\r\n      Currency is Required!\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <input\r\n      matInput\r\n      name=\"glAccount\"\r\n      maxlength=\"20\"\r\n      (keypress)=\"alhanumericValidation($event)\"\r\n      [formControl]=\"ccybalHistoryForm.controls['glAccount']\"\r\n      placeholder=\"GL Account\">\r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('glAccount').touched && !ccybalHistoryForm.get('glAccount').valid\">\r\n       GL Account is required!\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n        <input \r\n        [formControl]=\"ccybalHistoryForm.controls['txnDate']\" \r\n        matInput \r\n        name=\"txnDate\"\r\n        [matDatepicker]=\"picker\" \r\n        placeholder=\"Transaction Date\" \r\n        readonly>\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n            <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\r\n          </mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker> \r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('txnDate').touched && !ccybalHistoryForm.get('txnDate').valid\">\r\n      Transaction Date is Required!\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n    <mat-form-field class=\"full-width\">\r\n      <input\r\n      matInput\r\n      name=\"openBalInAcy\"\r\n      (keypress)=\"numericValidation($event)\"\r\n      [formControl]=\"ccybalHistoryForm.controls['openBalInAcy']\"\r\n      placeholder=\"Open Balance In Acy \">\r\n      <mat-error\r\n      *ngIf=\"ccybalHistoryForm.get('openBalInAcy').touched && !ccybalHistoryForm.get('openBalInAcy').valid\">\r\n      Open Balance In Acy is Required!\r\n  </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div fxFlex=\"50\"  class=\"pr-16\">\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n        matInput\r\n        name=\"openBalInLcy\"\r\n        (keypress)=\"numericValidation($event)\"\r\n        [formControl]=\"ccybalHistoryForm.controls['openBalInLcy']\"\r\n        placeholder=\"Open Balance In Lcy \">\r\n        <mat-error\r\n        *ngIf=\"ccybalHistoryForm.get('openBalInLcy').touched && !ccybalHistoryForm.get('openBalInLcy').valid\">\r\n        Open Balance In Lcy is Required!\r\n    </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"50\"  class=\"pr-16\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n          matInput\r\n          name=\"balInAcy\"\r\n          (keypress)=\"numericValidation($event)\"\r\n          [formControl]=\"ccybalHistoryForm.controls['balInAcy']\"\r\n          placeholder=\"Balance In Acy\">\r\n          <mat-error\r\n          *ngIf=\"ccybalHistoryForm.get('balInAcy').touched && !ccybalHistoryForm.get('balInAcy').valid\">\r\n        Balance In Acy is Required!\r\n      </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"50\"  class=\"pr-16\">\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n          matInput\r\n          name=\"balInLcy\"\r\n          (keypress)=\"numericValidation($event)\"\r\n          [formControl]=\"ccybalHistoryForm.controls['balInLcy']\"\r\n          placeholder=\"Balance In Lcy\">\r\n          <mat-error\r\n          *ngIf=\"ccybalHistoryForm.get('balInLcy').touched && !ccybalHistoryForm.get('balInLcy').valid\">\r\n        Balance In Lcy is Required!\r\n      </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n   \r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"!(ccybalHistoryForm.valid && ccybalHistoryForm.dirty)\">{{\"SAVE\" }}</button>\r\n    <span fxFlex></span>\r\n    <button mat-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close(false)\">Cancel</button>\r\n  </div>\r\n</div>\r\n</form>\r\n\r\n\r\n","import { map } from 'rxjs/operators';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { Component, OnInit, ChangeDetectorRef, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormArray, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Subject } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HolidayListDialogComponent } from '../holiday-list-dialog/holiday-list-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-custom-calendar-arr-type',\r\n  templateUrl: './custom-calendar-arr-type.component.html',\r\n  styleUrls: ['./custom-calendar-arr-type.component.scss']\r\n})\r\nexport class CustomCalendarArrTypeComponent implements OnInit {\r\n\r\n  calenderArr: any[];\r\n  selectedItem: boolean = false;\r\n  selectedItemRow: boolean = false;\r\n  disabled: boolean = true;\r\n  dateAlreadyActive: any;\r\n  monthArr: any = [\r\n    ['January', 'February', 'March'],\r\n    ['April', 'May', 'June'],\r\n    ['July', 'August', 'September'],\r\n    ['October', 'November', 'December'],\r\n  ];\r\n  monthArrIndex: any = [\r\n    ['0', '1', '2'],\r\n    ['3', '4', '5'],\r\n    ['6', '7', '8'],\r\n    ['9', '10', '11'],\r\n  ];\r\n  newYearArrayany: any[] = [];\r\n  months: string[] = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  weekdaysInWords: string[] = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednsday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n  weekdays: string[] = [\r\n    'S',\r\n    'M',\r\n    'T',\r\n    'W',\r\n    'T',\r\n    'F',\r\n    'S',\r\n  ];\r\n  monthEnds = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  viewDate: Date = new Date();\r\n  yearlyCalendarArr = [];\r\n  currentMonth: any;\r\n  currentMonthDate: any;\r\n  calendarDate: any[] = [];\r\n  year: number;\r\n  daysFinalArr: any[] = [];\r\n  calendarArrFinal: any[] = [];\r\n  confirmRes: boolean = false;\r\n  daysFinalArrNew: any[] = [];\r\n  calendarArrFinalNew: any[] = [];\r\n  dynamicObject: { value: string; disabled: boolean; };\r\n  selected = new FormControl('', [Validators.required]);\r\n  yearArr: any[] = [2022, 2021, 2020, 2019, 2018, 2017];\r\n  disableSave: boolean = true;\r\n  isEdit: boolean = false;\r\n  @Input() public addBranchHolidayFormData: any;\r\n  @Input() resetFormSubject: Subject<boolean> = new Subject<boolean>();\r\n  @Output() onDatePicked = new EventEmitter<any>();\r\n  currentMonthYear: number;\r\n  constructor(\r\n    private router: Router, private snack: MatSnackBar, private cdr: ChangeDetectorRef, private apiService: ApiService,\r\n    public dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.fillInYear(2023);\r\n    this.onDatePicked.emit(this.calendarDate);\r\n    this.currentMonth = this.months[this.viewDate.getMonth()];\r\n    this.currentMonthDate = this.viewDate.getDate();\r\n    this.currentMonthYear = this.viewDate.getFullYear();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.addBranchHolidayFormData != null) {\r\n      this.fillInYear(this.addBranchHolidayFormData.data.calenderYear);\r\n      this.updateCalendar(this.addBranchHolidayFormData.holidayModel);\r\n      this.currentMonth = this.months[this.viewDate.getMonth()];\r\n      this.currentMonthDate = this.viewDate.getDate();\r\n    }\r\n  }\r\n  updateCalendar(holidayModel) {\r\n    if (holidayModel != '' && holidayModel != null) {\r\n      holidayModel.forEach((v, k) => {\r\n        let newDate = new Date(v.calenderDate);\r\n        this.monthArrIndex.forEach((iV, iK) => {\r\n          iV.forEach((iV1, iK1) => {\r\n            if (newDate.getMonth() == iV1) {\r\n              this.calendarArrFinalNew[iK][iK1].map((cV, cK) => {\r\n                cV.map((cV1, cK1) => {\r\n                  if (newDate.getDate() == cV1.value) {\r\n                    cV1.disabled = true;\r\n                    cV1.holidayType=v.holidayType;\r\n                  }\r\n                })\r\n              })\r\n            }\r\n          });\r\n        });\r\n        this.cdr.markForCheck();\r\n        this.cdr.detectChanges();\r\n      });\r\n    }\r\n  }\r\n  fillInMonth(year: number, month: string, dayAmount: number) {\r\n    this.year = year;\r\n    let monthNumsArr = [];\r\n    let daysArrNew = [];\r\n    let daysFinalArrNew = [];\r\n    let endOffSet = 42 - dayAmount;\r\n    let date = new Date(month + '1, ' + year);\r\n    let dateOffSet = date.getDay();\r\n\r\n    for (let i = 0; i < dayAmount + endOffSet; i++) {\r\n      if (i < dateOffSet) {\r\n        monthNumsArr.push(' ');\r\n        daysArrNew.push({ value: '', disabled: false,holidayType:''  });\r\n      } else if (i > dayAmount + dateOffSet - 1) {\r\n        monthNumsArr.push(' ');\r\n        daysArrNew.push({ value: '', disabled: false ,holidayType:'' });\r\n      } else {\r\n        monthNumsArr.push((i + 1 - dateOffSet).toString());\r\n        let dateValue1 = (+(i + 1 - dateOffSet).toString());\r\n        var d1 = new Date(year, date.getMonth(), dateValue1);\r\n        var responseDate = moment(d1).format('YYYY-MM-DD');\r\n        var currentDate = moment(this.viewDate).format('YYYY-MM-DD');\r\n        if (responseDate < currentDate) {\r\n          daysArrNew.push({ value: (i + 1 - dateOffSet).toString(), disabled: true,holidayType:'' });\r\n        } else {\r\n          daysArrNew.push({ value: (i + 1 - dateOffSet).toString(), disabled: false,holidayType:'' });\r\n        }\r\n\r\n      }\r\n\r\n      if (((8 + i) % 7 == 0)) {\r\n        daysFinalArrNew.push(daysArrNew);\r\n        daysArrNew = [];\r\n      }\r\n\r\n    }\r\n    this.daysFinalArrNew.push(daysFinalArrNew);\r\n\r\n    return monthNumsArr;\r\n  }\r\n\r\n\r\n  fillInYear(year: number) {\r\n    this.yearlyCalendarArr = [];\r\n    this.calenderArr = [];\r\n    this.daysFinalArrNew = [];\r\n    this.newYearArrayany = [];\r\n    this.calendarArrFinal = [];\r\n    this.calendarArrFinalNew = [];\r\n    for (let i = 0; i < 12; i++) {\r\n      this.yearlyCalendarArr.push(\r\n        this.fillInMonth(year, this.months[i], this.monthEnds[i])\r\n      );\r\n\r\n      if ((i + 1) % 3 == 0) {\r\n        this.newYearArrayany.push(this.yearlyCalendarArr);\r\n        this.calenderArr = this.daysFinalArr;\r\n        this.calendarArrFinal.push(this.calenderArr);\r\n        this.calendarArrFinalNew.push(this.daysFinalArrNew);\r\n        this.calenderArr = [];\r\n        this.daysFinalArrNew = [];\r\n        this.yearlyCalendarArr = [];\r\n      }\r\n      if (i == 11) {\r\n      }\r\n    }\r\n  }\r\n\r\n  assignFormValue(event) {\r\n    this.currentMonth = this.months[this.viewDate.getMonth()];\r\n    this.currentMonthDate = this.viewDate.getFullYear();\r\n    if (this.viewDate.getFullYear() == event.value) {\r\n\r\n    }\r\n    this.fillInYear(event.value);\r\n  }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate(['/maintenance/main/holiday/BranchHoliday']);\r\n  }\r\n\r\n  captureDate(dateFromForm, month, year) {\r\n    let date = new Date(month + '1, ' + year);\r\n    let dateValue = (+dateFromForm);\r\n    var d = new Date(year, date.getMonth(), dateValue);\r\n    var responseDate = moment(d).format('YYYY-MM-DD');\r\n    if (responseDate == this.dateAlreadyActive) {\r\n      return\r\n    }\r\n    this.dateAlreadyActive = responseDate;\r\n    this.calendarDate.push(responseDate);\r\n    this.onDatePicked.emit(this.calendarDate);\r\n    if(dateFromForm){\r\n      const dialogRef = this.dialog.open(HolidayListDialogComponent, {\r\n        data: { date: d , holidayData:this.addBranchHolidayFormData.data,action:this.addBranchHolidayFormData.action},\r\n        position: { right: '0' },\r\n        panelClass: 'customHolidayListStyle',\r\n        hasBackdrop: false\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n        this.apiService.getHolidayData().subscribe(data=>{\r\n          this.updateCalendar(data);\r\n        })\r\n        this.dateAlreadyActive = null;\r\n        if(result.dateUpdated){\r\n          console.log('dateUpdated:: ',result.dateUpdated)\r\n          this. updateCalendar(result.dateUpdated)\r\n        }\r\n      });\r\n    }\r\n   \r\n  }\r\n\r\n}\r\n","<div class=\"d-flex flex-row\">\r\n\t<div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"40px\">\r\n\t\t<button mat-icon-button aria-label=\"bank\">\r\n\t\t\t<mat-icon style=\"color: #AF7AC5 ;\">fiber_manual_record</mat-icon> Bank\r\n\t\t  </button>\r\n\t\t  <button mat-icon-button aria-label=\"common\" >\r\n\t\t\t<mat-icon style=\"color: #E6B0AA ;\">fiber_manual_record</mat-icon> Common\r\n\t\t  </button>\r\n\t\t  <button mat-icon-button aria-label=\"national\">\r\n\t\t\t<mat-icon style=\"color: orange ;\">fiber_manual_record</mat-icon> National\r\n\t\t  </button>\r\n\t\t  <button mat-icon-button aria-label=\"regional\">\r\n\t\t\t<mat-icon style=\"color: #52BE80 ;\">fiber_manual_record</mat-icon>Regional\r\n\t\t  </button>\r\n\t</div> \r\n</div>\r\n<table *ngFor=\"let cArr of calendarArrFinalNew; let i1 = index\" style=\"margin-left: 100px;\">\r\n\t<tr>\r\n\t\t<td *ngFor=\"let cArr1 of cArr; let i2 = index\">\r\n\t\t\t<table>\r\n\t\t\t\t<caption style=\"background-color: #D4E6F1;height: 40px;border-radius:5px;\">\r\n\t\t\t\t\t<h3 style=\"margin-top: 15px;\">{{monthArr[i1][i2]}}</h3>\r\n\t\t\t\t</caption>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td *ngFor=\"let weekDay of weekdays; let i4 = index\" class=\"childTd\">\r\n\t\t\t\t\t\t\t<button mat-button [disabled]=\"cArr3?.disabled\"\r\n\t\t\t\t\t\t\t\t[ngClass]=\"!cArr3?.disabled ? 'dateButton' : 'dateButtonDisabled'\">\r\n\t\t\t\t\t\t\t\t<h3 style=\"color: #808B96;\">{{weekDay}}</h3>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr *ngFor=\"let cArr2 of cArr1; let i3 = index\">\r\n\t\t\t\t\t\t<td *ngFor=\"let cArr3 of cArr2; let i4 = index\" class=\"childTd\">\r\n\t\t\t\t\t\t\t<button mat-button [ngClass]=\"[cArr3.holidayType=='Common'? 'commonHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\tcArr3.holidayType=='Regional'? 'RegionalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\tcArr3.holidayType=='Bank'? 'BankHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\tcArr3.holidayType=='National'? 'NationalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t!cArr3?.disabled ? 'dateButton' : 'dateButtonDisabled']\"\r\n\t\t\t\t\t\t\t\t[disabled]=\"cArr3?.disabled\" *ngIf=\"i4 % 7 == 0\"\r\n\t\t\t\t\t\t\t\t(click)=\" captureDate( cArr3.value,monthArr[i1][i2],year)\">\r\n\t\t\t\t\t\t\t\t<h5 [ngClass]=\"!cArr3?.disabled ? 'h5Red' : 'h5RedDisabled'\">{{ cArr3.value}}</h5>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button mat-button  [disabled]=\"cArr3?.disabled\"\r\n\t\t\t\t\t\t\t\t[ngClass]=\"[cArr3.holidayType=='Common'? 'commonHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Regional'? 'RegionalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Bank'? 'BankHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='National'? 'NationalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\t!cArr3?.disabled ? 'dateButton' : 'dateButtonDisabled']\"\r\n\t\t\t\t\t\t\t\t*ngIf=\"(8 + i4) % 7 == 0\" (click)=\" captureDate( cArr3.value,monthArr[i1][i2],year)\">\r\n\t\t\t\t\t\t\t\t<h5 [ngClass]=\"!cArr3?.disabled ? 'h5Red' : 'h5RedDisabled'\">{{ cArr3.value}}</h5>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button mat-button *ngIf=\"i4 % 7 != 0 && (8 + i4) % 7 != 0 && monthArr[i1][i2]==currentMonth \r\n\t\t\t\t\t\t\t&& cArr3.value == currentMonthDate\" [disabled]=\"cArr3?.disabled\"\r\n\t\t\t\t\t\t\t\t[ngClass]=\"!cArr3?.disabled ? '' : 'dateButtonDisabled'\"\r\n\t\t\t\t\t\t\t\t(click)=\" captureDate( cArr3.value,monthArr[i1][i2],year)\">\r\n\t\t\t\t\t\t\t\t<h5 style=\"color:black;\"> {{ cArr3.value }}</h5>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button mat-button *ngIf=\"i4 % 7 != 0 && (8 + i4) % 7 != 0 && monthArr[i1][i2]==currentMonth \r\n\t\t\t\t\t\t\t&& cArr3.value != currentMonthDate\" [disabled]=\"cArr3?.disabled\"\r\n\t\t\t\t\t\t\t\t[ngClass]=\"[cArr3.holidayType=='Common'? 'commonHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Regional'? 'RegionalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Bank'? 'BankHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='National'? 'NationalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\t!cArr3?.disabled ? 'dateButton' : 'dateButtonDisabled']\"\r\n\t\t\t\t\t\t\t\t(click)=\" captureDate( cArr3.value,monthArr[i1][i2],year)\">\r\n\t\t\t\t\t\t\t\t<h5 style=\"color:black;\"> {{ cArr3.value }}</h5>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button mat-button\r\n\t\t\t\t\t\t\t\t*ngIf=\"i4 % 7 != 0 && (8 + i4) % 7 != 0 && monthArr[i1][i2]!=currentMonth\"\r\n\t\t\t\t\t\t\t\t[disabled]=\"cArr3?.disabled\"\r\n\t\t\t\t\t\t\t\t[ngClass]=\"[cArr3.holidayType=='Common'? 'commonHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Regional'? 'RegionalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='Bank'? 'BankHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\tcArr3.holidayType=='National'? 'NationalHoliBtn' : 'dateButton', \r\n\t\t\t\t\t\t\t\t!cArr3?.disabled ? 'dateButton' : 'dateButtonDisabled']\"\r\n\t\t\t\t\t\t\t\t(click)=\" captureDate( cArr3.value,monthArr[i1][i2],year)\">\r\n\t\t\t\t\t\t\t\t<h5 style=\"color:black;\"> {{ cArr3.value }}</h5>\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</td>\r\n\t</tr>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { TillVaultCcybalHispopupComponent } from '../till-vault-ccybal-hispopup/till-vault-ccybal-hispopup.component';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-ccybal-his-summary',\r\n  templateUrl: './till-vault-ccybal-his-summary.component.html',\r\n  styleUrls: ['./till-vault-ccybal-his-summary.component.scss']\r\n})\r\nexport class TillVaultCcybalHisSummaryComponent implements OnInit {\r\n\r\n  public items: any[];\r\n  users: string[] = [];\r\n  currency: string[] = [];\r\n  till: string[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  public getItemSub: Subscription;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getItems();\r\n    this.getvaulCurrencyBalHistory();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n  openPopUp(data: any = {}, isNew?) {\r\n    let title = isNew ? 'Add new Till Vault Currency Balance History' : 'Update Till Vault Currency Balance History';\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(TillVaultCcybalHispopupComponent, {\r\n      width: '720px',\r\n      disableClose: true,\r\n      data: {\r\n        title: title,\r\n        payload: data,\r\n        currency: this.currency,\r\n        till: this.till,\r\n        branchCode: this.branchCode,\r\n        bankCode: this.bankCode,\r\n      },\r\n    })\r\n    dialogRef.afterClosed().subscribe(res => {\r\n        if(!res) {\r\n          // If user press cancel\r\n          return;\r\n        }\r\n        if (isNew) {\r\n          this.loader.open();\r\n          this.apiService.saveoftillVaultCurrencyBalHistory(res)\r\n            .subscribe(data => {\r\n              this.items = data;\r\n              this.getvaulCurrencyBalHistory();\r\n              this.loader.close();\r\n              this.snack.open('Record Added!', 'OK', { duration: 4000 })  \r\n            })\r\n        } else {\r\n          this.loader.open();\r\n          this.apiService.saveoftillVaultCurrencyBalHistory( res)\r\n            .subscribe(data => {\r\n              this.items = data;\r\n              this.getvaulCurrencyBalHistory();\r\n              this.loader.close();\r\n              this.snack.open('Record Updated!', 'OK', { duration: 4000 })\r\n            })\r\n        }\r\n      })\r\n  }\r\n  deleteItem(row) {\r\n    this.confirmService.confirm({message: `Delete ${row.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.removetillVaultCurrencyBalHistory(row.id)\r\n            .subscribe((res: any) => {        \r\n                }, (err: any) => {''\r\n             \r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getvaulCurrencyBalHistory();\r\n                this.snack.open('Record deleted!', 'OK', { duration: 4000})\r\n              \r\n                 } })\r\n        }\r\n      })\r\n  }\r\n  getvaulCurrencyBalHistory() {\r\n    this.apiService.gettillCurrencyBalHistoryResp().subscribe((resp) => {\r\n      this.users = resp;\r\n      this.items = this.users;\r\n    });\r\n  }\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    this.apiService.getTillId().subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"ml-16\">\r\n    <span class=\"mat-heading-label \">Till Vault Currency Balance History</span>\r\n    <span fxFlex></span>\r\n    <button mat-flat-button color=\"primary\" (click)=\"openPopUp({}, true)\" class=\"mr-38\">ADD VAULT CURRENCY BALANCE HISTORY</button>\r\n  </div>\r\n  <mat-card class=\"p-0\" > \r\n    <mat-card-content class=\"p-0\">\r\n      <ngx-datatable\r\n            class=\"material ml-0 mr-0\"\r\n            [rows]=\"items\"\r\n            [columnMode]=\"'force'\"\r\n            [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\"\r\n            [scrollbarH]=\"true\"\r\n            [limit]=\"6\"\r\n            [rowHeight]=\"50\">\r\n            <ngx-datatable-column name=\"Entity Code\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                {{ row?.entityCode }}\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Status\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"row.isActive\">{{row.isActive ? 'active' : 'inactive'}}</mat-chip>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Actions\" [flexGrow]=\"1\">\r\n              <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n                <button mat-icon-button mat-sm-button color=\"primary\" class=\"mr-16\" (click)=\"openPopUp(row)\"><mat-icon>edit</mat-icon></button>\r\n                <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"deleteItem(row)\"><mat-icon>delete</mat-icon></button>\r\n              </ng-template>\r\n            </ngx-datatable-column>\r\n          </ngx-datatable>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  \r\n\r\n\r\n","import { Component, Inject, OnInit, ɵCodegenComponentFactoryResolver } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { tillDetails } from 'app/shared/models/tillvaultdenom';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-till-vault-denomination',\r\n  templateUrl: './till-vault-denomination.component.html',\r\n  styleUrls: ['./till-vault-denomination.component.scss']\r\n})\r\nexport class TillVaultDenominationComponent implements OnInit {\r\n\r\n  public itemForm: FormGroup;\r\n  countryCurrency: string[]=[];\r\n  // tillId:any[]=[];\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  denom:  string[] = [];\r\n  currency: string[] = [];\r\n  till: any[] = [];\r\n  currentUser: string;\r\n  vaultStatus: any={};\r\n \r\n  entity: tillDetails[] = [];\r\n  tillData: tillDetails;\r\n  loggedInUser : string;\r\n  auditData : tillDetails;\r\n  isAuditData : boolean = false;\r\n  id: number;\r\n  isEdit: boolean = false;\r\n  readorWrite: boolean=true;\r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<TillVaultDenominationComponent>,\r\n    private fb: FormBuilder,\r\n    private router:Router,\r\n    private apiService: ApiService,\r\n    private ls:LocalStoreService,\r\n    private dataService:DataService,\r\n    private snack: MatSnackBar,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    // this.dataService.getTillVaultStatus.subscribe(data =>{\r\n   \r\n    //   this.vaultStatus = typeof this.vaultStatus === 'object' ? data : {};\r\n    // });\r\n    \r\n    setTimeout(() => {  \r\n\r\n      \r\n      this.vaultStatus = JSON.parse(localStorage.getItem('fetchVaultDenom'));\r\n     \r\n      if(this.vaultStatus == null || this.vaultStatus == undefined){\r\n        this.readorWrite=false;\r\n        this.buildItemForm({})\r\n      }       \r\n      else if(this.vaultStatus.id != null || this.vaultStatus.id != undefined){\r\n      // this.loader.open();\r\n      this.isEdit = true;\r\n     \r\n      this.id = this.vaultStatus.id;\r\n      this.auditData = this.vaultStatus\r\n      this.buildItemForm(this.vaultStatus)\r\n  \r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n    \r\n      // this.loader.close();\r\n      }\r\n    }, 500)\r\n\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getEntityCode();\r\n    this.getDenomCode();\r\n    this.getTillId();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n   \r\n    \r\n  }\r\n  buildItemForm(item) {\r\n    this.itemForm = this.fb.group({\r\n      bankCode: [item?.bankCode || '', Validators.required],\r\n      branchCode: [item?.branchCode || '', Validators.required],\r\n      currency: [item?.currency || '', Validators.required],\r\n      denomCode: [item?.denomCode || '', Validators.required],\r\n      entityCode: [item?.entityCode || '', Validators.required],\r\n      tillId: [item?.tillId || '', Validators.required],\r\n      units: [item?.units || '', Validators.required],\r\n      id: [item?.id || null],\r\n      loggedInuser : [item.loggedInUser || '']\r\n      // isActive: [item.isActive || false]\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    // this.dialogRef.close(this.itemForm.value)\r\n    if(this.itemForm.invalid){\r\n      return;\r\n    }else{\r\n      this.tillData = this.till.find(x => x.tillVaultCode == this.itemForm.value.tillId);\r\n      this.itemForm.value.tillId = this.tillData.id;\r\n      this.itemForm.value.loggedInUser=this.loggedInUser;\r\n      this.apiService.saveTellerVaultDenomination(this.itemForm.value).subscribe((resp) => {\r\n     \r\n      this.router.navigate([`/maintenance/main/tillVaultDenom`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n        });\r\n      },(err:any) =>{\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n    }  \r\n  }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.deleteTellerVaultDenomination(this.auditData.id)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsFortillvaultdenomination(payload).subscribe((data) => {\r\n         \r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n  \r\n  }\r\n\r\n  getCurrency() {\r\n    // this.apiService.getCountryValues().subscribe((resp) => {\r\n     \r\n    //   this.currency = resp;\r\n    // });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i])\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n   //   this.bankCode = resp;\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.bankCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n     // this.branchCode = resp;\r\n        for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.branchCode.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n     \r\n      this.till = resp;\r\n    });\r\n  }\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n     \r\n     // this.entity = resp;\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'A'){\r\n          this.entity.push(resp[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getDenomCode() {\r\n    this.apiService.fetchDenomMasterAuthRecs().subscribe((resp: any) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.denom.push(resp[i]);\r\n        }\r\n      }\r\n      console.log(this.denom);\r\n    });\r\n  }\r\n  alhanumericValidation(event){\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  goBack() {\r\n    localStorage.removeItem('fetchVaultDenom');\r\n  \r\n\r\n    this.router.navigate([\"/maintenance/main/tillVaultDenom\"]);\r\n  }\r\n  dataByEntityCode(index,data){\r\n    return data.bankCode;\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Denomination Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Till Vault Denomination Details</small>\r\n</h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Till Vault Denomination Details</h1>\r\n    <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Till Vault Denomination Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 *ngIf=\"!isEdit\" matDialogTitle>Add Denomination Details</h1>\r\n    <h1 *ngIf=\"isEdit\" matDialogTitle>Edit Denomination Details</h1> -->\r\n    <form [formGroup]=\"itemForm\" *ngIf=\"itemForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <!-- <mat-select name=\"entityCode\"  (keypress)=\"alhanumericValidation($event)\" [formControl]=\"itemForm.controls['entityCode']\" class=\"selectOption\"> -->\r\n              <mat-select name=\"entityCode\" formControlName=\"entityCode\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of entity\"  [value]=\"data.entityCode\">\r\n              {{data?.entityCode}}\r\n              </mat-option>\r\n          </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('entityCode').touched && !itemForm.get('entityCode').valid\">\r\n            Entity Code is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Entity Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"entityCode\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">       \r\n            <!-- <mat-select name=\"bankCode\" [formControl]=\"itemForm.controls['bankCode']\" class=\"selectOption\"> -->\r\n              <mat-select name=\"bankCode\" formControlName=\"bankCode\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of bankCode; trackBy:dataByBank\" [value]=\"data.bankCode\">\r\n                {{data?.bankCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('bankCode').touched && !itemForm.get('bankCode').valid\">\r\n           Bank code is Required\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Bank Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"bankCode\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">           \r\n            <!-- <mat-select name=\"branchCode\" [formControl]=\"itemForm.controls['branchCode']\" class=\"selectOption\"> -->\r\n              <mat-select name=\"branchCode\" formControlName=\"branchCode\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of branchCode\" [value]=\"data.branchCode\">\r\n                {{data?.branchCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('branchCode').touched && !itemForm.get('branchCode').valid\">\r\n           Branch code is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Branch Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"branchCode\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\" >\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">          \r\n            <!-- <mat-select name=\"tillId\" [formControl]=\"itemForm.controls['tillId']\" class=\"selectOption\"> -->\r\n              <mat-select name=\"tillId\" formControlName=\"tillId\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of till\" [value]=\"data.tillVaultCode\">\r\n                {{data?.tillVaultCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n              *ngIf=\"itemForm.get('tillId').touched && !itemForm.get('tillId').valid\">\r\n              Till Id is Required!\r\n          </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Till Id *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"tillId\">\r\n          </mat-form-field>\r\n        </div>\r\n       \r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">            \r\n            <!-- <mat-select name=\"currency\" [formControl]=\"itemForm.controls['currency']\" class=\"selectOption\"> -->\r\n              <mat-select name=\"currency\" formControlName=\"currency\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of currency\" [value]=\"data.currencyCode\">\r\n                {{data?.currencyCode}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error\r\n            *ngIf=\"itemForm.get('currency').touched && !itemForm.get('currency').valid\">\r\n            Currency is Required!\r\n        </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"currency\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"33.33\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Denomination Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <!-- <input matInput name=\"denomCode\" [formControl]=\"itemForm.controls['denomCode']\"> -->\r\n            <mat-select name=\"denomCode\"  formControlName=\"denomCode\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option *ngFor=\"let data of denom;\"  [value]=\"data.denomValue\">\r\n            {{data?.denomValue}}\r\n            </mat-option>\r\n            </mat-select>\r\n              <mat-error\r\n              *ngIf=\"itemForm.get('denomCode').touched && !itemForm.get('denomCode').valid\">\r\n              Denomination Code is Required\r\n          </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"33.33\" *ngIf=\"readorWrite\">\r\n          <mat-label>Denomination Code *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput readonly\r\n            formControlName=\"denomCode\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" >\r\n          <mat-label>Units *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput type=\"number\" [readonly]=\"readorWrite\" name=\"units\" min=\"0\" [formControl]=\"itemForm.controls['units']\">\r\n            <mat-error\r\n              *ngIf=\"itemForm.get('units').touched && !itemForm.get('units').valid\">\r\n              Units is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n          \r\n        </div>\r\n\r\n      </div>\r\n\r\n     \r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"itemForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(itemForm.invalid || itemForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { BaseDenominationSummaryComponent } from './base-denomination/base-denomination-summary/base-denomination-summary.component';\r\nimport { AccountTypeCrudTableComponent } from './account-type/account-type-crud-table/account-type-crud-table.component';\r\n\r\nimport { DemonMasterCrudNgxTableComponent } from './denominationMaster/demon-master-crud-ngx-table/demon-master-crud-ngx-table.component';\r\nimport { MaintenanceHomeComponent } from './maintenance-home.component';\r\nimport { TillVaultCcySummryComponent } from './till-vault-ccy-bal/till-vault-ccy-summry/till-vault-ccy-summry.component';\r\nimport { TillVaultSummaryComponent } from './till-vault-config/till-vault-summary/till-vault-summary.component';\r\nimport { TillVaultMasterSummaryComponent } from './till-vault-master/till-vault-master-summary/till-vault-master-summary/till-vault-master-summary.component';\r\nimport { TillVaultDenominationSummaryComponent } from './tillVaultDenomination/till-vault-denomination-summary/till-vault-denomination-summary.component';\r\nimport { TxnCashMasterCrudTableComponent } from './transaction-cash-master/txn-cash-master-crud-table/txn-cash-master-crud-table.component';\r\nimport { TransactionDenominationSummaryComponent } from './TransactionDenominationHistory/transaction-denomination-summary/transaction-denomination-summary.component';\r\nimport { TransactionTypeCrudTableComponent } from './transaction-type/transaction-type-crud-table/transaction-type-crud-table.component';\r\nimport { TillVaultStatusSummaryComponent } from './till-vault-status/till-vault-status-summary/till-vault-status-summary.component';\r\nimport { CrudNgxTableComponent } from './branch/crud-ngx-table.component';\r\nimport { TillVaultBranchMapSummaryComponent } from './tillVaultBranchMap/till-vault-branch-map-summary/till-vault-branch-map-summary.component';\r\nimport { TillVaultCcybalHispopupComponent } from './till-vault-ccy-bal-history/till-vault-ccybal-hispopup/till-vault-ccybal-hispopup.component';\r\nimport { TillVaultCcybalHisSummaryComponent } from './till-vault-ccy-bal-history/till-vault-ccybal-his-summary/till-vault-ccybal-his-summary.component';\r\nimport { BankDetailsComponent } from './bank/bank-details/bank-details.component';\r\nimport { BankListComponent } from './bank/bank-list/bank-list.component';\r\nimport { MainHomeComponent } from './main-home/main-home.component';\r\nimport { NgxTablePopupComponent } from './branch/ngx-table-popup/ngx-table-popup.component';\r\nimport { CountryStateMaintenanceComponent } from './country-state-maintenance/country-state-maintenance.component';\r\nimport { CountryStatePopupComponent } from './country-state-maintenance/country-state-popup/country-state-popup.component';\r\n\r\nimport { HolidayMaintenanceComponent } from './holiday-maintenance/holiday-maintenance.component';\r\nimport { BranchHolidayComponent } from './holiday-maintenance/branch-holiday/branch-holiday.component';\r\nimport { CurrencyHolidayComponent } from './holiday-maintenance/currency-holiday/currency-holiday.component';\r\nimport { ClearingHolidayComponent } from './holiday-maintenance/clearing-holiday/clearing-holiday.component';\r\nimport { AddHolidayComponent } from './holiday-maintenance/branch-holiday/add-holiday/add-holiday.component';\r\nimport { EntityMaintenanceComponent } from './entity-maintenance/entity-maintenance.component';\r\nimport { StateMaintenanceComponent } from './state-maintenance/state-maintenance.component';\r\nimport { StatePopupComponent } from './state-maintenance/state-popup/state-popup.component';\r\nimport { AddEntityDetailsComponent } from './entity-maintenance/add-entity-details/add-entity-details.component';\r\nimport { BranchHolidayPopupComponent } from './holiday-maintenance/branch-holiday/branch-holiday-popup/branch-holiday-popup.component';\r\nimport { SubMenuComponent } from './main-home/sub-menu/sub-menu.component';\r\nimport { CommonHolidayComponent } from './holiday-maintenance/branch-holiday/common-holiday/common-holiday.component';\r\nimport { TransactionTypePopupTableComponent } from './transaction-type/transaction-type-table-popup/transaction-type-popup-table/transaction-type-popup-table.component';\r\nimport { AccountTypeTablePopupComponent } from './account-type/account-type-table-popup/account-type-table-popup.component';\r\nimport { TillVaultBranchMapComponent } from './tillVaultBranchMap/till-vault-branch-map/till-vault-branch-map.component';\r\nimport { TillVaultStatusComponent } from './till-vault-status/till-vault-status/till-vault-status.component';\r\nimport { AddBranchComponent } from './holiday-maintenance/branch-holiday/add-branch/add-branch.component';\r\nimport { DenomMasterTablePopupComponent } from './denominationMaster/demon-master-crud-ngx-table/denom-master-table-popup/denom-master-table-popup.component';\r\nimport { TillVaultCcyPopupComponent } from './till-vault-ccy-bal/till-vault-ccy-popup/till-vault-ccy-popup.component';\r\nimport { TxnCashMasterTablePopupComponent } from './transaction-cash-master/txn-cash-master-table-popup/txn-cash-master-table-popup.component';\r\nimport { TillVaultDenominationComponent } from './tillVaultDenomination/till-vault-denomination/till-vault-denomination.component';\r\nimport { TillVaultPopupComponent } from './till-vault-config/till-vault-popup/till-vault-popup.component';\r\nimport { BillerInfoMaintenanceComponent } from './biller-info-maintenance/biller-info-maintenance.component';\r\nimport { AddOrEditBillerInfoComponent } from './biller-info-maintenance/add-or-edit-biller-info/add-or-edit-biller-info.component';\r\nimport { BaseDenominationPopupComponent } from './base-denomination/base-denomination-popup/base-denomination-popup.component';\r\nimport { TillVaultMasterPopupComponent } from './till-vault-master/till-vault-master-popup/till-vault-master-popup/till-vault-master-popup.component';\r\nimport { TxnchargesMaintenanceComponent } from './txncharges-maintenance/txncharges-maintenance.component';\r\nimport { AddTxnchargesComponent } from './txncharges-maintenance/add-txncharges/add-txncharges.component';\r\nimport { TillVaultCcyDemonBalComponent } from './till-vault-ccy-demon-bal/till-vault-ccy-demon-bal.component';\r\nimport { AddTillvaultCcyDemonbalComponent } from './till-vault-ccy-demon-bal/add-tillvault-ccy-demonbal/add-tillvault-ccy-demonbal.component';\r\nimport { ProductMaintenanceComponent } from './product-maintenance/product-maintenance.component';\r\nimport { AddProductMaintenanceComponent } from './product-maintenance/add-product-maintenance/add-product-maintenance.component';\r\nimport { CurrencyMaintSummaryComponent } from './currency-maint-summary/currency-maint-summary.component';\r\nimport { AddCurrencyMaintComponent } from './currency-maint-summary/add-currency-maint/add-currency-maint.component';\r\nimport { CurrencyPairMaintenanceComponent } from './currency-pair-maintenance/currency-pair-maintenance.component';\r\nimport { AddCurrencyPairMaintanenceComponent } from './currency-pair-maintenance/add-currency-pair-maintanence/add-currency-pair-maintanence.component';\r\nimport { CustomCalendarArrTypeComponent } from './holiday-maintenance/branch-holiday/custom-calendar-arr-type/custom-calendar-arr-type.component';\r\nimport { CurrencyPairaRatesMaintenanceComponent } from './currency-paira-rates-maintenance/currency-paira-rates-maintenance.component';\r\nimport { AddCurrencyPairRatesMaintenanceComponent } from './currency-paira-rates-maintenance/add-currency-pair-rates-maintenance/add-currency-pair-rates-maintenance.component';\r\nimport { MenusComponent } from './menus/menus.component';\r\nimport { MenuDetailsComponent } from './menus/menu-details/menu-details.component';\r\nimport { UserMaintenanceComponent } from './user-maintenance/user-maintenance.component';\r\nimport { AddUserMaintenanceComponent } from './user-maintenance/add-user-maintenance/add-user-maintenance.component';\r\nimport { MenuDialogComponent } from './menus/menu-dialog/menu-dialog.component';\r\nimport { AddEditMenuDetailsComponent } from './menus/add-edit-menu-details/add-edit-menu-details.component';\r\nimport { RoleMaintenanceSummaryComponent } from './role-maintenance-summary/role-maintenance-summary.component';\r\nimport { RoleMaintenanceComponent } from './role-maintenance/role-maintenance.component';\r\nimport { SecurityPolicyComponent } from './security-policy/security-policy.component';\r\nimport { AddSecuritypolicyComponent } from './add-securitypolicy/add-securitypolicy.component';\r\nimport { AddEditSecurityPolicyComponent } from './add-edit-security-policy/add-edit-security-policy.component';\r\nimport { CustomerCategoryComponent } from './customer-category/customer-category.component';\r\nimport { CustomerChargeCategoryComponent } from './customer-charge-category/customer-charge-category.component';\r\nimport { CutomerCategoryCreateComponent } from './customer-category/cutomer-category-create/cutomer-category-create.component';\r\nimport { CutomerChargeCategoryCreateComponent } from './customer-charge-category/cutomer-charge-category-create/cutomer-charge-category-create.component';\r\nimport { CityMaintenanceComponent } from './city-maintenance/city-maintenance.component';\r\nimport { AddEditCityComponent } from './city-maintenance/add-edit-city/add-edit-city.component';\r\nimport { AddKioskLoginMaintenanceComponent } from './kiosk-login/add-kiosk-login-maintenance/add-kiosk-login-maintenance.component';\r\nimport { KioskLoginComponent } from './kiosk-login/kiosk-login.component';\r\nimport { WorkflowMaintenanceComponent } from './workflow-maintenance/workflow-maintenance.component';\r\nimport { ChargeMaintSummaryComponent } from './charge-maint-summary/charge-maint-summary.component';\r\nimport { AddChargeMantComponent } from './charge-maint-summary/add-charge-mant/add-charge-mant.component';\r\nexport const maintenanceRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MaintenanceHomeComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'main',\r\n        pathMatch: 'full'\r\n      }, {\r\n        path: 'main',\r\n        component: MainHomeComponent,\r\n        data: { title: 'Branch Maintenance', breadcrumb: '' }\r\n      }, {\r\n        path: 'main/sub/:id',\r\n        component: SubMenuComponent,\r\n        data: { title: 'Sub Menu', breadcrumb: '' }\r\n      }, {\r\n        path: 'main/branch',\r\n        component: CrudNgxTableComponent,\r\n        data: { title: 'Branch Summary', breadcrumb: '' }\r\n      }, \r\n      {\r\n        path: 'main/securityPolicy',\r\n        component: SecurityPolicyComponent,\r\n        data: { title: 'Security Policy', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/workflow',\r\n        component: WorkflowMaintenanceComponent,\r\n        data: { title: 'Work Flow', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/addEditsecurityPolicy',\r\n        component: AddEditSecurityPolicyComponent,\r\n        data: { title: 'Add Security Policy', breadcrumb: '' }\r\n      },\r\n     {\r\n        path: 'main/branch/add',\r\n        component: NgxTablePopupComponent,\r\n        data: { title: 'Branch New', breadcrumb: '' }\r\n      },\r\n      //  {\r\n      //   path: 'main/branch/edit/:id',\r\n      //   component: NgxTablePopupComponent,\r\n      //   data: { title: 'Branch Edit', breadcrumb: '' }\r\n      // },\r\n      {\r\n        path: 'main/countryState',\r\n        component: CountryStateMaintenanceComponent,\r\n        data: { title: 'CountryState Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/countryStatepopup',\r\n        component: CountryStatePopupComponent,\r\n        data: { title: 'CountryState popup', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/State',\r\n        component: StateMaintenanceComponent,\r\n        data: { title: 'StateMaintenance', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/statepopup',\r\n        component: StatePopupComponent,\r\n        data: { title: 'statePopup', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/cityMaintenance',\r\n        component: CityMaintenanceComponent,\r\n        data: { title: 'City Maintenance', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/addEditCity',\r\n        component: AddEditCityComponent,\r\n        data: { title: 'Add/Edit City', breadcrumb: '' }\r\n      },\r\n\r\n      {\r\n        path: 'till-vault-config',\r\n        component: TillVaultSummaryComponent,\r\n        data: { title: 'Till Vault Configuration Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/till-Vault',\r\n        component: TillVaultDenominationSummaryComponent,\r\n        data: { title: 'Till Vault Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/till-vault-ccy-bal',\r\n        component: TillVaultCcySummryComponent,\r\n        data: { title: 'Till Vault Currency Balance Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/till-vault-ccybal-history',\r\n        component: TillVaultCcybalHisSummaryComponent,\r\n        data: { title: 'Till Vault Currency Balance History Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/till-Vault-branch-map',\r\n        component: TillVaultBranchMapSummaryComponent,\r\n        data: { title: 'Till Vault Branch Map Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'transaction-denom',\r\n        component: TransactionDenominationSummaryComponent,\r\n        data: { title: 'Transaction Denomination Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/base-denom-summary',\r\n        component: BaseDenominationSummaryComponent,\r\n        data: { title: 'Base Denomination Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'denomMaster',\r\n        component: DemonMasterCrudNgxTableComponent,\r\n        data: { title: 'Denom Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'transaction-type',\r\n        component: TransactionTypeCrudTableComponent,\r\n        data: { title: 'Transaction Type Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'account-type',\r\n        component: AccountTypeCrudTableComponent,\r\n        data: { title: 'Account Type Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'till-vault-master',\r\n        component: TillVaultMasterSummaryComponent,\r\n        data: { title: 'Account Type Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'home/till-vault-status',\r\n        component: TillVaultStatusSummaryComponent,\r\n        data: { title: 'Till Vault Status', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'txn-cash-master',\r\n        component: TxnCashMasterCrudTableComponent,\r\n        data: { title: 'Transaction Cash Master Summary', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday',\r\n        component: HolidayMaintenanceComponent,\r\n        data: { title: 'Holiday Maintenance', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/BranchHoliday',\r\n        component: BranchHolidayComponent,\r\n        data: { title: 'Branch Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/BranchHoliday/branchPopup',\r\n        component: BranchHolidayPopupComponent,\r\n        data: { title: 'Update Branch Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/currencyholiday',\r\n        component: CurrencyHolidayComponent,\r\n        data: { title: 'Currency Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/clearingholiday',\r\n        component: ClearingHolidayComponent,\r\n        data: { title: 'Clearing Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/BranchHoliday/addHoliday',\r\n        component: AddHolidayComponent,\r\n        data: { title: 'New Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/BranchHoliday/commonHoliday',\r\n        component: CommonHolidayComponent,\r\n        data: { title: 'Common Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/holiday/BranchHoliday/addBranch',\r\n        component: AddBranchComponent,\r\n        data: { title: 'Add Branch Holiday', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/bank/list',\r\n        component: BankListComponent\r\n      },\r\n      {\r\n        path: 'main/bank/add',\r\n        component: BankDetailsComponent\r\n      },\r\n      {\r\n        path: 'bank/:id',\r\n        component: BankDetailsComponent\r\n      },\r\n      {\r\n        path: 'main/entity/list',\r\n        component: EntityMaintenanceComponent\r\n      },\r\n      {\r\n        path: 'main/entity/add',\r\n        component: AddEntityDetailsComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultltMaster',\r\n        component: TillVaultMasterSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultltMaster/add',\r\n        component: TillVaultMasterPopupComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultltBranchMap/add',\r\n        component: TillVaultBranchMapComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultltBranchMap/:id',\r\n        component: TillVaultBranchMapComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultltBranch',\r\n        component: TillVaultBranchMapSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultConfig',\r\n        component: TillVaultSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultConfig/add',\r\n        component: TillVaultPopupComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultConfig/:id',\r\n        component: TillVaultPopupComponent\r\n      },\r\n      {\r\n        path: 'main/denominationMaster',\r\n        component: DemonMasterCrudNgxTableComponent\r\n      },\r\n      {\r\n        path: 'main/denominationMaster/add',\r\n        component: DenomMasterTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/denominationMaster/:id',\r\n        component: DenomMasterTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultCcyBal',\r\n        component: TillVaultCcySummryComponent\r\n      },\r\n\r\n      {\r\n        path: 'main/tillVaultCcyBal/add',\r\n        component: TillVaultCcyPopupComponent,\r\n      },\r\n      {\r\n        path: 'main/tillVaultCcyBal/:id',\r\n        component: TillVaultCcyPopupComponent,\r\n      },\r\n      {\r\n        path: 'main/tillVaultStatus',\r\n        component: TillVaultStatusSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultStatus/:id',\r\n        component: TillVaultStatusComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultStatus/add',\r\n        component: TillVaultStatusComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultDenom',\r\n        component: TillVaultDenominationSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultDenom/add',\r\n        component: TillVaultDenominationComponent\r\n      },\r\n      {\r\n        path: 'main/tillVaultDenom/:id',\r\n        component: TillVaultDenominationComponent\r\n      },\r\n      {\r\n        path: 'main/transactionCashMaster',\r\n        component: TxnCashMasterCrudTableComponent\r\n      },\r\n      {\r\n        path: 'main/transactionCashMaster/add',\r\n        component: TxnCashMasterTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/transactionCashMaster/:id',\r\n        component: TxnCashMasterTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/accountType',\r\n        component: AccountTypeCrudTableComponent\r\n      },\r\n      {\r\n        path: 'main/accountType/add',\r\n        component: AccountTypeTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/accountType/:id',\r\n        component: AccountTypeTablePopupComponent\r\n      },\r\n      {\r\n        path: 'main/baseDenomination',\r\n        component: BaseDenominationSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/billerInfoMaint',\r\n        component: BillerInfoMaintenanceComponent\r\n      },\r\n      {\r\n        path: 'main/addOrEditBillerInfo',\r\n        component: AddOrEditBillerInfoComponent\r\n      },\r\n      {\r\n        path: 'main/baseDenomination/add',\r\n        component: BaseDenominationPopupComponent\r\n      },\r\n      {\r\n        path: 'main/baseDenomination/:id',\r\n        component: BaseDenominationPopupComponent\r\n      },\r\n      {\r\n        path: 'main/transactionCharges',\r\n        component: TxnchargesMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/transactionCharges/addtxnCharges',\r\n        component: AddTxnchargesComponent,\r\n      },\r\n      {\r\n        path: 'main/tillVaultCcyDenomBal/addTillVaultCcyDenomBal',\r\n        component: AddTillvaultCcyDemonbalComponent,\r\n      }\r\n      ,\r\n      {\r\n        path: 'main/tillVaultCcyDenomBal',\r\n        component: TillVaultCcyDemonBalComponent,\r\n      },\r\n      {\r\n        path: 'main/product',\r\n        component: ProductMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/product/addProduct',\r\n        component: AddProductMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/kioskLogin',\r\n        component: KioskLoginComponent,\r\n        data: { title: 'Kiosk Login Maintenance', breadcrumb: '' }\r\n      },\r\n      {\r\n        path: 'main/kioskLogin/addKioskLogin',\r\n        component: AddKioskLoginMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/currencyMaint',\r\n        component: CurrencyMaintSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/currencyMaint/add',\r\n        component: AddCurrencyMaintComponent\r\n      },\r\n      {\r\n        path: 'main/chargeMaint',\r\n        component: ChargeMaintSummaryComponent\r\n      },\r\n      {\r\n        path: 'main/chargeMaint/add',\r\n        component: AddChargeMantComponent\r\n      },\r\n      {\r\n        path: 'main/currencyPairMaintenance',\r\n        component: CurrencyPairMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/currencyPairMaintenance/addCurrencyPair',\r\n        component: AddCurrencyPairMaintanenceComponent,\r\n      },\r\n      {\r\n        path: 'main/currencyPairRateMaintenance',\r\n        component: CurrencyPairaRatesMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/addCurrencyPairRates',\r\n        component: AddCurrencyPairRatesMaintenanceComponent,\r\n      },\r\n      {\r\n        path: 'main/holiday/addHolidayNew',\r\n        component: CustomCalendarArrTypeComponent,\r\n      }, {\r\n        path: \"main/menu-config\",\r\n        component: MenusComponent,\r\n        data: { title: \"Menu List\" }\r\n      },\r\n      {\r\n        path: \"main/menu-config/:id\",\r\n        component: MenuDetailsComponent,\r\n        data: { title: \"Menu Modification\" }\r\n      },\r\n      {\r\n        path: 'main/userMaintenance',\r\n        component: UserMaintenanceComponent\r\n      },\r\n      {\r\n        path: 'main/customerCategory',\r\n        component: CustomerCategoryComponent\r\n      },\r\n      {\r\n        path: 'main/customerCreateCategory',\r\n        component: CutomerCategoryCreateComponent\r\n      },\r\n      {\r\n        path: 'main/customerChargeCategory',\r\n        component: CustomerChargeCategoryComponent\r\n      },\r\n      {\r\n        path: 'main/customerChargeCategoryCreate',\r\n        component: CutomerChargeCategoryCreateComponent\r\n      },\r\n      {\r\n        path: 'main/userMaintenance/addUserMaintenance',\r\n        component: AddUserMaintenanceComponent\r\n      },\r\n      {\r\n        path: 'main/addEditMenu/menuDialog',\r\n        component: MenuDialogComponent\r\n      },\r\n      {\r\n        path: 'main/addEditMenu',\r\n        component: AddEditMenuDetailsComponent\r\n      },\r\n      {\r\n        path: 'main/roleMaintenance',\r\n        component: RoleMaintenanceSummaryComponent,\r\n      },\r\n      {\r\n        path: 'main/addRoleMaintenance',\r\n        component:RoleMaintenanceComponent,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { baseDenom } from 'app/shared/models/auditlogs';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-base-denomination-popup',\r\n  templateUrl: './base-denomination-popup.component.html',\r\n  styleUrls: ['./base-denomination-popup.component.scss']\r\n})\r\n\r\nexport class BaseDenominationPopupComponent implements OnInit {\r\n  arrayCurrency: string[] = [];\r\n  public baseDenomForm: FormGroup;\r\n  baseDenominationId: number;\r\n  baseDenomStatus: any = {};\r\n  id: number;\r\n  loggedInUser : string;\r\n  auditData : baseDenom;\r\n  isAuditData : boolean = false;\r\n  show = false;\r\n  isEdit: boolean = false;\r\n  currency: string[] = [];\r\n  readorWrite: boolean=true;\r\n  denom: string[] = [];\r\n  \r\n  constructor(\r\n    // @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // public dialogRef: MatDialogRef<BaseDenominationPopupComponent>,\r\n    private fb: FormBuilder,\r\n    private apiService: ApiService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private dataService:DataService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    // this.dataService.getBaseDenom.subscribe(data =>{\r\n    //   this.baseDenomStatus = typeof this.baseDenomStatus === 'object' ? data : {};\r\n    // });\r\n    \r\n    setTimeout(() => {  \r\n      this.baseDenomStatus = JSON.parse(localStorage.getItem('fetchBaseDenomValue'));\r\n      if(this.baseDenomStatus == null || this.baseDenomStatus == undefined){\r\n        this.readorWrite=false;\r\n        this.buildItemForm({})\r\n      }       \r\n      else if(this.baseDenomStatus.baseDenominationId != null || this.baseDenomStatus.baseDenominationId != undefined) {\r\n        this.loader.open();\r\n        this.isEdit = true;\r\n      this.id = this.baseDenomStatus.baseDenominationId;\r\n      this.buildItemForm(this.baseDenomStatus)\r\n      this.auditData = this.baseDenomStatus;\r\n      this.isAuditData = true;\r\n      this.dataService.setAuditLogData(this.auditData);\r\n      this.loader.close();\r\n      }\r\n    }, 1000)\r\n    this.getDenomCode();\r\n    this.getCurrencyValue();\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER').userName;\r\n  }\r\n  getCurrencyValue(){\r\n    // this.apiService.getCountryValues().subscribe((currencyValues : any)=> {\r\n    //   this.currency=currencyValues;\r\n    //   });\r\n    this.apiService.getCurrencyDetails().subscribe(data=>{\r\n      console.log(\"Auth currecy details\", data)\r\n      for(let i=0; i<data.length;i++){\r\n        this.currency.push(data[i].currencyId)\r\n      }\r\n      console.log(this.currency);\r\n    })\r\n  }\r\n  getDenomCode() {\r\n    this.apiService.fetchDenomMasterAuthRecs().subscribe((resp: any) => {\r\n      console.log(resp);\r\n      for(let i=0; i<resp.length;i++){\r\n        if(resp[i].authStatus==='A'){\r\n          this.denom.push(resp[i].denomCode);\r\n        }\r\n      }\r\n      console.log(this.denom);\r\n    });\r\n  }\r\n  buildItemForm(item) {\r\n    this.baseDenomForm = this.fb.group({\r\n      denomination: [item?.denomination || '', [Validators.required, Validators.minLength(1), Validators.maxLength(5)]],\r\n      currency: [item?.currency || '', [Validators.required]],\r\n      isActive: [item?.isActive || false],\r\n      baseDenominationId: [item?.baseDenominationId || null],\r\n      loggedInuser : [item.loggedInUser || '']\r\n    })\r\n  }\r\n\r\n  // alphakeyPress(event: any) {\r\n  //   const pattern = /[0-9a-zA-Z]/;\r\n  //   let inputChar = String.fromCharCode(event.charCode);\r\n  //   if (!pattern.test(inputChar)) {\r\n  //     event.preventDefault();\r\n  //   }\r\n  // }\r\n  deleteRecord(operation){\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        this.apiService.removeBaseDenominationById(this.auditData.baseDenominationId)\r\n        .subscribe(data => {\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        },\r\n        err=>{\r\n          if (err.status == 200) {\r\n            this.snack.open('Record Deleted Successfully', 'OK', {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right'\r\n            });\r\n          }\r\n          this.router.navigate([`/maintenance/main/tillVaultStatus`]);\r\n        \r\n      })\r\n      }}))\r\n   \r\n         \r\n       \r\n  }\r\n  editRecord(){\r\n    this.readorWrite=false;\r\n  }\r\n\r\n  updateRecord(operation) {\r\n    Swal.fire(\r\n      {\r\n        //text: 'Unable to process' + 'Error ' + this.responseforfileupload.errorMessage + 'Do you want to Proceed??',\r\n        text: 'You are trying to '+ operation +' record.' + ' Do you want to proceed?',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        // confirmButtonText: 'PROCEED.'\r\n        cancelButtonText: 'NO',\r\n        confirmButtonText: 'YES', 'icon': 'info'\r\n      }\r\n    ).then((result => {\r\n      if(result.isConfirmed==true){\r\n        let payload: any = {};\r\n        payload.id = this.id;\r\n        payload.operation = operation;\r\n        payload.loggedInUser = this.loggedInUser;\r\n        this.apiService.getAuditLogsForBaseDenomination(payload).subscribe((data) => {\r\n          this.auditData = data;\r\n          this.dataService.setAuditLogData(this.auditData);\r\n          this.isAuditData = true;\r\n          this.dataService.sendClickEvent();\r\n          let message = '';\r\n          switch (operation) {\r\n            case 'open':\r\n              message = 'opened'\r\n              break;\r\n            case 'close':\r\n              message = 'closed'\r\n              break;\r\n            case 'auth':\r\n              message = 'authorized'\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          this.snack.open(`Record ${message} successfully!'`, \"OK\", {\r\n            duration: 2000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        });\r\n      }}))\r\n   \r\n  }\r\n\r\n  submit() {\r\n    if(this.baseDenomForm.invalid){\r\n      return;\r\n    }else{\r\n      this.loader.open();\r\n      this.baseDenomForm.value.loggedInUser = this.loggedInUser;\r\n      this.apiService.saveBaseDenomination(this.baseDenomForm.value).subscribe((resp) => {\r\n      this.loader.close();\r\n      this.router.navigate([`/maintenance/main/baseDenomination`]).then(_=>{\r\n          this.snack.open('Data Saved Successfully!', 'OK', \r\n          { duration: 4000 , \r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",});\r\n        });\r\n      },(err:any) =>{\r\n        this.loader.close();\r\n        this.snack.open(`Error!`, 'OK', { duration: 4000,  \r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",});\r\n        }\r\n      )\r\n    }\r\n    \r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  goBack(){\r\n    localStorage.removeItem('fetchBaseDenomValue');\r\n    this.router.navigate([`/maintenance/main/baseDenomination`]);\r\n  }\r\n \r\n\r\n  dataByCurrency(index,data){\r\n    return data.currencyCode;\r\n  }\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Base Denomination Maintenance > <span *ngIf=\"!isEdit\">Add</span><span *ngIf=\"isEdit\">Edit</span> Base Denomination Details</small>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <h1 *ngIf=\"!isEdit\" class=\"add-text\">Add Base Denomination Details</h1>\r\n  <h1 *ngIf=\"isEdit\" class=\"add-text\">Edit Base Denomination Details</h1>\r\n</div>\r\n\r\n<mat-card>\r\n  <mat-card-content>\r\n    <!-- <h1 *ngIf=\"!isEdit\" matDialogTitle>Add Base Denomination Details</h1>\r\n    <h1 *ngIf=\"isEdit\" matDialogTitle>Edit Base Denomination Details</h1> -->\r\n    <form [formGroup]=\"baseDenomForm\" *ngIf=\"baseDenomForm\" class=\"m-333\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"50\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Denomination *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n              \r\n              <mat-select name=\"denomination\" [formControl]=\"baseDenomForm.controls['denomination']\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n                <mat-option *ngFor=\"let data of denom;\"  [value]=\"data\">\r\n              {{data}}\r\n              </mat-option>\r\n          </mat-select>\r\n            <mat-error *ngIf=\"baseDenomForm.get('denomination').touched && !baseDenomForm.get('denomination').valid\">\r\n              Denomination is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"50\" *ngIf=\"readorWrite\">\r\n         <mat-label>Denomination *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n         <input readonly matInput name=\"denomination\"  maxlength=\"3\" (keypress)=_keyPress($event)\r\n              [formControl]=\"baseDenomForm.controls['denomination']\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"50\" *ngIf=\"!readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <!--<input matInput name=\"currency\" minlength=\"3\" maxlength=\"3\" (keypress)=alphakeyPress($event)\r\n              [formControl]=\"baseDenomForm.controls['currency']\">-->\r\n              <mat-select name=\"currency\" [formControl]=\"baseDenomForm.controls['currency']\" class=\"full-width\"\r\n               >\r\n                <mat-option *ngFor=\"let data of currency; trackBy:dataByCurrency\"  [value]=\"data.currencyCode\">\r\n                {{data?.currencyCode}}\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"baseDenomForm.get('currency').touched && !baseDenomForm.get('currency').valid\">\r\n              Currency is Required!\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"50\" *ngIf=\"readorWrite\">\r\n          <mat-label>Currency *</mat-label>\r\n          <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n            <input matInput name=\"currency\" readonly\r\n              [formControl]=\"baseDenomForm.controls['currency']\">\r\n              \r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\r\n        <div fxFlex=\"33.33\" appearance=\"fill\">\r\n          <mat-slide-toggle [formControl]=\"baseDenomForm.controls['isActive']\" [disabled]=\"readorWrite\">Active Customer</mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n        <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n          <button mat-raised-button *ngIf=\"!isEdit\" color=\"primary\" [disabled]=\"baseDenomForm.invalid\" (click)=\"submit()\">SAVE</button>\r\n          &nbsp;\r\n          <div [hidden]=\"readorWrite\" >\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\"  [disabled]= \"!(baseDenomForm.invalid || baseDenomForm.dirty)\"(click)=\"submit()\">\r\n               Save\r\n              </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div [hidden]=\"!readorWrite || auditData?.recordStatus == 'Close'\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"editRecord()\">\r\n              Edit\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.authStatus == 'Unauthorized' && readorWrite\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\"  mat-raised-button color=\"primary\" (click)=\"updateRecord('auth')\">\r\n              Authorize\r\n            </button>&nbsp;&nbsp;\r\n          </div> \r\n          <div *ngIf=\"auditData?.recordStatus == 'Close' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('open')\">\r\n              Reopen\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.recordStatus == 'Open' && auditData?.oneTimeAuth != 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateRecord('close')\">\r\n              Close\r\n            </button>&nbsp;&nbsp;\r\n          </div>\r\n          <div *ngIf=\"auditData?.oneTimeAuth == 'No'\" [hidden]=\"!readorWrite\">\r\n            <button *ngIf=\"isEdit\" type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteRecord('delete')\">\r\n              Delete\r\n            </button> &nbsp;&nbsp;\r\n          </div>\r\n         \r\n          <button\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Exit\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<div class=\"mt-32\">\r\n  <app-audit-log *ngIf=\"isAuditData\" #auditLog></app-audit-log>\r\n</div>","import { Component, OnInit,ElementRef, ViewChild } from '@angular/core';\r\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-currency-pair-maintenance',\r\n  templateUrl: './currency-pair-maintenance.component.html',\r\n  styleUrls: ['./currency-pair-maintenance.component.scss']\r\n})\r\nexport class CurrencyPairMaintenanceComponent implements OnInit {\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['id','bankCode', 'entityCode', 'currency1', 'currency2',  'oneTimeAuth', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n    { key: 'currency1', value: 'Currency 1' },\r\n    { key: 'currency2', value: 'Currency 2'}\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  // bankCode: any;\r\n  // entityCode: any;\r\n  // currencies: any;\r\n  currencies: string[] = [];\r\n  bankCode: string[] = [];\r\n  entityCode:string[] = [];\r\n  users: any[] = [];\r\n  public items: any[];\r\n  entity: any;\r\n  tillVaultMasterValues: any;\r\n  fetchTillVault: any;\r\n  fetchCurrencyPair:any;\r\n  currencyPairMaintValues:any;\r\n  public getItemSub: Subscription;\r\n  id:any;\r\n  constructor(private router: Router, private _liveAnnouncer: LiveAnnouncer, private confirmService: AppConfirmService, \r\n    private apiService: ApiService, private snack: MatSnackBar,private dataService:DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getBranchCurrency();\r\n    this.getBankCode();\r\n    this.getEntityDropdown();\r\n    this.getItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n\r\n\r\n  getItems() {\r\n    this.apiService.getCurrencyPair().subscribe((currencyPairInfo : any)=> {\r\n      if(currencyPairInfo){  \r\n        for(let i=0;i<currencyPairInfo.length;i++){\r\n          if(currencyPairInfo[i].authStatus == 'U'){\r\n            currencyPairInfo[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(currencyPairInfo[i].authStatus == 'A') {\r\n            currencyPairInfo[i].authStatus = 'Authorized'\r\n          } \r\n          if(currencyPairInfo[i].recordStatus == 'O'){\r\n            currencyPairInfo[i].recordStatus = 'Open'\r\n          } \r\n          if(currencyPairInfo[i].recordStatus == 'C'){\r\n            currencyPairInfo[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n      this.currencyPairMaintValues = currencyPairInfo;\r\n        this.items =  this.currencyPairMaintValues;\r\n        console.log(\"items4::\", this.items);\r\n        this.dataSource = new MatTableDataSource(currencyPairInfo);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      });\r\n  \r\n  }\r\n\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'currencyPair');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      this.getItems();\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n    \r\n  }\r\n  fetchCurrencyPairById(){\r\n    this.apiService.getCurrencyPairById(this.id).subscribe((resp) =>{\r\n     console.log(\"currencyPairById\",resp);\r\n     this.fetchCurrencyPair=resp;\r\n    })\r\n    console.log(this.fetchCurrencyPair)\r\n    this.dataService.sendNavParam(this.fetchCurrencyPair);\r\n    this.router.navigate([`/maintenance/main/currencyPairMaintenance/addCurrencyPair/${this.id}`]);\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getEntityDropdown(){\r\n    this.apiService.getEntityDropdown().subscribe((data) => {\r\n      this.entityCode = data;\r\n      console.log(\"Entity Code\",this.entityCode)  \r\n    });\r\n    \r\n  }\r\n\r\n  getBranchCurrency(){\r\n    this.apiService.getCountryValues().subscribe(_list =>{\r\n      this.currencies = _list;\r\n    },(err:any) =>{\r\n      console.error(\"Error\", err);\r\n    })\r\n  }\r\n  \r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/currencyPairMaintenance/addCurrencyPair\"]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    console.log(filterBy,e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n  applyFilter(event: Event) {\r\n     \r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    console.log(\"filterValue\",filterValue)\r\n    this.dataSource.filter = filterValue.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  clearFilter(){\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n   }\r\n\r\n   filterTable(filterBy) {\r\n   \r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      console.log('data :: ',data[filterBy]);\r\n      if(data[filterBy] !=null){\r\n      return (\r\n        data[filterBy].trim().toLocaleLowerCase().includes(filter)\r\n      )}\r\n    }\r\n  }\r\n\r\n   announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  openEdit(data: any = {},isEdit : string) {\r\n    console.log(\"data\",isEdit);\r\n    console.log(\".id\",data.id);\r\n    console.log(\"item1::\",data);\r\n    \r\n    this.router.navigate([\"/maintenance/main/currencyPairMaintenance/addCurrencyPair\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  deleteItem(element) {\r\n    console.log(\"element\",element.id);\r\n    this.confirmService.confirm({message: `Delete  ${element.id}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteCurrencyPair(element.id)\r\n            .subscribe(data => {\r\n              this.getItems();\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                 \r\n                }\r\n            })  \r\n        } \r\n      });\r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n \r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Currency Pair Maintenance  </small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button> \r\n      <span class=\"text-large\">\r\n        Currency Pair Maintenance\r\n      </span>\r\n  </div>\r\n  \r\n  <mat-card class=\"mt-32\">\r\n   <div >\r\n    <table>\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Currency Pairs\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n       <span fxFlex></span>\r\n       <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n         <mat-icon>more_vert</mat-icon>\r\n       </button>\r\n       <mat-menu #menu=\"matMenu\">\r\n         <div class=\"upload_botton\">\r\n          <button type=\"button\" mat-menu-item>Upload</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            class=\"btn btn-success\"\r\n            (change)=\"onFileChange($event)\"\r\n          />\r\n        </div>\r\n         <button mat-menu-item>\r\n           <span>Download</span>\r\n         </button>\r\n       </mat-menu>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Filter By</mat-label>\r\n           <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n             <mat-option value=\"0\" disabled>Select</mat-option>\r\n             <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n               {{filter.value}}\r\n             </mat-option>\r\n           </mat-select>\r\n         </mat-form-field>\r\n       </div>\r\n       <div>\r\n         <mat-form-field appearance=\"fill\">\r\n           <mat-label>Search</mat-label>\r\n           <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n           <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n           <mat-icon matSuffix>search</mat-icon>\r\n         </mat-form-field>\r\n       </div>\r\n       <div style=\"padding-top: 3px;\">\r\n        <button mat-flat-button color=\"warn\" (click)=\"clearFilter()\" style=\"height: 45px;\">Clear Filter</button>\r\n      </div>\r\n       <div>\r\n        <button mat-flat-button color=\"primary\" class=\"mr-38\" (click)=\"addNew()\"  style=\"height: 45px; margin-left: 12cm;\" >ADD NEW\r\n\r\n            </button>\r\n      </div>\r\n     </div>\r\n   </div>\r\n   <div class=\"mat-elevation-z0\">\r\n     <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n  \r\n      <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency Pair Id\"> Currency Pair Id\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"bankCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"entityCode\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity Code\"> Entity Code\r\n         </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"currency1\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency 1\">Currency 1\r\n            </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.currency1}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"currency2\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Currency 2\">Currency 2\r\n           </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element.currency2}} </mat-cell>\r\n      </ng-container>\r\n       <ng-container matColumnDef=\"oneTimeAuth\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by One Time Auth\"> One Time Auth\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.oneTimeAuth}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"authStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n       </ng-container>\r\n       <ng-container matColumnDef=\"recordStatus\">\r\n         <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n          </mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n       </ng-container>\r\n  \r\n       <ng-container matColumnDef=\"action\">\r\n         <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n         <mat-cell *matCellDef=\"let element\">\r\n           <div>\r\n            <mat-icon color=\"primary\" style=\"cursor: pointer;\"  (click)=\"openEdit(element)\" >edit</mat-icon>\r\n         </div>&nbsp;&nbsp;\r\n         <div>\r\n          <mat-icon color=\"warn\" style=\"cursor: pointer;\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n         </div>\r\n         </mat-cell>\r\n       </ng-container>\r\n  \r\n       <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n       <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n     </mat-table>\r\n     <mat-paginator [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator>\r\n   </div>\r\n  </mat-card>\r\n     \r\n  \r\n\r\n\r\n\r\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { TransactionTypeCrudTableComponent } from '../../transaction-type/transaction-type-crud-table/transaction-type-crud-table.component';\r\n\r\n@Component({\r\n  selector: 'app-menu-dialog',\r\n  templateUrl: './menu-dialog.component.html',\r\n  styleUrls: ['./menu-dialog.component.scss']\r\n})\r\nexport class MenuDialogComponent implements OnInit {\r\n  menuForm: FormGroup;\r\n  parentMenus: any = [];\r\n  loggedInUser: any;\r\n  isEdit:boolean=false;\r\n  parentId: number;\r\n\r\n  constructor(private cdr: ChangeDetectorRef,\r\n    private apiService: ApiService,\r\n    private fb: FormBuilder,\r\n    private dialogue: MatDialog,\r\n    private dataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private snack: MatSnackBar,\r\n    private router: Router,\r\n    private route: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.dataService.getchildMenuDetails().subscribe((data: any)=>{\r\n      console.log(data);\r\n      if(data){\r\n        this.isEdit=true;\r\n        this.buildMenuForm(data);\r\n      }else{\r\n        this.isEdit=false;\r\n        this.buildMenuForm({});\r\n      }     \r\n    })\r\n    this.route.queryParamMap.subscribe((params: any) => {\r\n      this.parentId=params.get('parenId');\r\n      console.log(\"param\",params)\r\n     \r\n    })\r\n    // this.buildMenuForm(this.data);\r\n   \r\n    this.getParentMenus();\r\n  }\r\n\r\n  buildMenuForm(item: any) {\r\n    this.menuForm = this.fb.group({\r\n      id: [item.id || null],\r\n      screenCode: [item.screenCode || \"\", Validators.required],\r\n      screenName: [item.screenName || \"\", Validators.required],\r\n      parentId: [item.parentId || 0, Validators.required],\r\n      routing: [item.routing || \"\", Validators.required],\r\n      status: true,\r\n    });\r\n  }\r\n\r\n  getParentMenus() {\r\n    this.apiService.getMaintenanceParentMenu().subscribe((res: any) => {\r\n      this.parentMenus = res;\r\n    }, (err: any) => {\r\n\r\n    })\r\n  }\r\n  save() {\r\n    if (this.menuForm.invalid) {\r\n      return;\r\n    }\r\n    let payload: any = {};\r\n    payload = this.menuForm.value;\r\n    payload.loggedInUser = this.loggedInUser.userName;\r\n    this.loader.open();\r\n    this.apiService.upsertMenu(this.menuForm.value).subscribe(res => {\r\n      this.loader.close();\r\n      this.snack.open('Data Saved Successfully!', 'OK',\r\n        {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n\r\n    }, err => {\r\n      this.loader.close();\r\n      this.snack.open('Unable to Save!', 'Error',\r\n        {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n     \r\n    })\r\n  }\r\n\r\n  close() {\r\n   \r\n  }\r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main/menu-config/:id`],{ queryParams: { id: this.parentId } });\r\n  }\r\n\r\n}\r\n","\r\n  <h1 class=\"main-head\"><small class=\"small-head\">Home >  Maintenance Summary > Menu Maintenance > Edit Menu Information</small></h1>\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-16\">\r\n    <button mat-icon-button (click)=\"goBack()\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    <h1>Edit Menu Information</h1>\r\n</div>\r\n  <form class=\"mt-32\" [formGroup]=\"menuForm\">\r\n    <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>ScreenName </mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"name\" formControlName=\"screenName\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>ScreenCode </mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"code\" formControlName=\"screenCode\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-label>Route *</mat-label>\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <input matInput name=\"route\" formControlName=\"routing\" />\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxLayout=\"row wrap\">\r\n      <div fxFlex=\"33.33\" class=\"pr-16\">\r\n        <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n          <mat-label>Parent Menu</mat-label>\r\n          <mat-select formControlName=\"parentId\">\r\n            <mat-option [value]=\"'0'\">Main Menu</mat-option>\r\n            <mat-option *ngFor=\"let item of parentMenus\" [value]=\"item.id\">\r\n              {{ item.screenName }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\">\r\n    <div fxFlex=\"100\" class=\"mt-16\" fxLayoutAlign=\"end center\">\r\n      <div *ngIf=\"!isEdit\">\r\n        <button  mat-raised-button   color=\"primary\" (click)=\"save()\" [disabled]=\"menuForm.invalid\">\r\n          Save\r\n        </button>&nbsp;&nbsp;\r\n      </div> \r\n      <div *ngIf=\"isEdit\">\r\n        <button mat-raised-button   color=\"primary\" (click)=\"save()\" [disabled]=\"!(menuForm.invalid || menuForm.dirty)\">\r\n          Save\r\n        </button>&nbsp;&nbsp;\r\n      </div>\r\n     \r\n      <button  mat-raised-button\r\n      color=\"warn\"\r\n      type=\"button\" (click)=\"goBack()\">Close</button>\r\n    </div>\r\n  </div>\r\n  \r\n\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n//import * as XLSX from 'xlsx';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { denomMaster } from 'app/shared/models/denomMaster';\r\n\r\n\r\n@Component({\r\n  selector: 'app-demon-master-crud-ngx-table',\r\n  templateUrl: './demon-master-crud-ngx-table.component.html',\r\n  styleUrls: ['./demon-master-crud-ngx-table.component.scss'],\r\n  animations: rumangoAnimations,\r\n})\r\nexport class DemonMasterCrudNgxTableComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = [\r\n    'entityCode',\r\n    'bankCode',\r\n    'denomCode',\r\n    'denomValue',\r\n    'currency',\r\n    'authStatus',\r\n    'recordStatus',\r\n    'action',\r\n  ];\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: 'entityCode', value: 'Entity Code' },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource = new MatTableDataSource();\r\n  public items: any[];\r\n  public users: any[];\r\n  public getItemSub: Subscription;\r\n  denomvalues:string[] = [];\r\n  currency:string[] = [];\r\n  denomCode: string[] = [];\r\n  denomValue: string[] = [];\r\n  bankCode: string[] = [];\r\n  currentUser: string;\r\n  loading: boolean;\r\n  fetchdenomValue: denomMaster;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private api:ApiService,\r\n    private dataService:DataService,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem('ICUST_USER');\r\n    this.getBankCode();\r\n    this.getCurrencyValue();\r\n    this.getItems();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.loading = true;\r\n    this.api.getDenomMaster().subscribe((allCountryValues: any) => {\r\n      if (allCountryValues) {\r\n        for(let i=0;i<allCountryValues.length;i++){\r\n          if(allCountryValues[i].authStatus == 'U'){\r\n            allCountryValues[i].authStatus = 'Unauthorized'\r\n          }\r\n          if(allCountryValues[i].authStatus == 'A') {\r\n            allCountryValues[i].authStatus = 'Authorized'\r\n          } \r\n          if(allCountryValues[i].recordStatus == 'O'){\r\n            allCountryValues[i].recordStatus = 'Open'\r\n          } \r\n          if(allCountryValues[i].recordStatus == 'C'){\r\n            allCountryValues[i].recordStatus = 'Closed'\r\n          }\r\n        }\r\n        this.dataSource = new MatTableDataSource(allCountryValues);\r\n        this.users = allCountryValues;\r\n        console.log(this.dataSource);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n  getCurrencyValue() {\r\n    this.api.getCountryValues().subscribe((currencyValues: any) => {\r\n      this.currency = currencyValues;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.api.getBankCode().subscribe((bnkCode: any) => {\r\n      this.bankCode = bnkCode;\r\n    });\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = '';\r\n    this.searchVal.nativeElement.value = '';\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n  uploadCollateralType(event) {\r\n    console.log(\"event\",event);\r\n  }\r\n\r\n  denominationMaster(){\r\n   this.downloadService.downloadFiles(\"denominationMaster\", this.users);\r\n   \r\n\r\n}\r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.entityCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n\r\n          \r\n          this.api.deleteDenomMaster(row.id).subscribe(\r\n            (res: any) => {},\r\n            (err: any) => {\r\n              ('');\r\n\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getItems();\r\n                this.snack.open('Member deleted!', 'OK', { duration: 4000 });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate(['/maintenance/main/denominationMaster/add']);\r\n  }\r\n\r\n  openPopUp(row) {\r\n\r\n    this.getDenomMasterId(row)\r\n\r\n    // this.dataService.sendNavParam(this.fetchdenomValue);\r\n    this.router.navigate([`/maintenance/main/denominationMaster/${row.id}`]);\r\n  }\r\n\r\n  getDenomMasterId(row) {\r\n    this.loader.open();\r\n\r\n    this.api.fetchDenomMasterById(row.id).subscribe((data : any)=> {\r\n      this.fetchdenomValue=data\r\n\r\n      if(this.fetchdenomValue != null){\r\n        localStorage.setItem('fetchdenomValue',JSON.stringify(this.fetchdenomValue));\r\n         this.loader.close();\r\n       }\r\n      });\r\n\r\n  }\r\n  goBack() {\r\n    this.router.navigate(['/maintenance/main/']);\r\n  }\r\n\r\n\r\n  dataByFilter(index,filter){\r\n    return filter.key;\r\n  }\r\n\r\n\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary  > Denomination Master Maintenance </small></h1>\r\n<!-- <div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div> -->\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\"> Denomination Master Maintenance </span>\r\n  </div>\r\n<mat-card  class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Denomination Master\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item>\r\n      <span><input style=\"display: none;\"\r\n        type=\"file\" name=\"documentUrl\"\r\n        #documentUrl \r\n        (change)=\"uploadCollateralType($event)\">\r\n        <a \r\n        (click)=\"documentUrl.click()\"\r\n        [routerLink]=\"\">Export</a></span>\r\n    </button>\r\n    <button  (click)=\"denominationMaster()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select\r\n              name=\"filterBy\"\r\n              #filterBy\r\n              [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\"\r\n            >\r\n            <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n\r\n              <mat-option *ngFor=\"let filter of filterByOption; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value, $event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value, $event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>   \r\n       <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n       <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n       </button>\r\n     </div>\r\n       \r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table\r\n        class=\"w-full\"\r\n        [dataSource]=\"dataSource\"\r\n        matSort\r\n        (matSortChange)=\"announceSortChange($event)\"\r\n      >\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Entity code\"\r\n          >\r\n            Entity Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.entityCode }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"bankCode\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Bank Code\"\r\n            >Bank Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.bankCode }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"denomCode\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Denom Code\"\r\n            >Denom Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.denomCode }}\r\n          </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"denomValue\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Denom Value\"\r\n            >Denom Value\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.denomValue }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"currency\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by currency\"\r\n          >\r\n            Currency\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.currency }}\r\n          </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Auth Status\"\r\n          >\r\n            Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.authStatus }}\r\n          </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell\r\n            *matHeaderCellDef\r\n            mat-sort-header\r\n            sortActionDescription=\"Sort by Record Status\"\r\n          >\r\n            Record Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            {{ element.recordStatus }}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\" >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n         \r\n          <div  [hidden]=\"element.authStatus == 'Authorized'\" >\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\"   (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container> -->\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <button\r\n              mat-icon-button\r\n              mat-sm-button\r\n              color=\"primary\"\r\n              class=\"mr-16\"\r\n              (click)=\"openPopUp(element,'Yes')\"\r\n            >\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n            <button\r\n              mat-icon-button\r\n              mat-sm-button\r\n              color=\"warn\"\r\n              [disabled]=\"element.authStatus == 'Authorized'\"\r\n              (click)=\"deleteItem(element)\"\r\n            >\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\"\r\n        [pageSizeOptions]=\"[5, 10, 20]\"\r\n        aria-label=\"Select page of users\"\r\n      ></mat-paginator>\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> -->\r\n  </mat-card-content>\r\n</mat-card>\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\nimport { tillInterface } from \"./till-vault-ccy-summry\";\r\n\r\n@Component({\r\n  selector: 'app-till-vault-ccy-summry',\r\n  templateUrl: './till-vault-ccy-summry.component.html',\r\n  styleUrls: ['./till-vault-ccy-summry.component.scss'],\r\n  animations: rumangoAnimations\r\n})\r\nexport class TillVaultCcySummryComponent implements OnInit {\r\n\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"entityCode\", value: \"Entity Code\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['entityCode', 'authStatus', 'recordStatus','action' ];\r\n  dataSource = new MatTableDataSource();\r\n\r\n  public items: string[];\r\n  users: string[]=[];\r\n  currency: string[] = [];\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  public getItemSub: Subscription;\r\n  currentUser: string;\r\n  fetchCcyBalValue: object;\r\n  loading: boolean;\r\n  entity: string;\r\n  tillData: tillInterface;\r\n\r\n  till: tillInterface[]=[];\r\n  data: tillInterface;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private dataService:DataService,\r\n    private router:Router,\r\n    private ls:LocalStoreService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.ls.getItem(\"ICUST_USER\");\r\n    this.getTillId();\r\n    this.getItems();\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getEntityCode();\r\n    this.getvaulCurrencyBal();\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n  \r\n  doFilter(filterBy, e) {\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (resp: any, filter: string): boolean => {\r\n      return resp[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n\r\n  tillVaultCurrrencyBalance(){\r\n    this.downloadService.downloadFiles(\"tillVaultCurrrencyBalance\" , this.users);\r\n  }\r\n\r\n\r\n  deleteItem(element) {\r\n    \r\n    this.confirmService.confirm({message: `Delete ${element.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.removetillVaultCurrencyBal(element.id)\r\n            .subscribe((res: any) => {        \r\n                }, (err: any) => {''\r\n              if (err.status == 200) {\r\n                this.loader.close();\r\n                this.getvaulCurrencyBal();\r\n                this.snack.open('Record deleted!', 'OK', { \r\n                  duration: 2000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                });\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  openPopUp(element) {\r\n    this.getCurrencyBalId(element)\r\n    this.dataService.sendNavParam(this.fetchCcyBalValue);\r\n    this.router.navigate([`/maintenance/main/tillVaultCcyBal/${element.id}`]);\r\n  }\r\n\r\n  getCurrencyBalId(element){\r\n    this.loader.open();\r\n    this.apiService.fetchCurrencyBalId(element.id).subscribe((result : any)=> {\r\n      this.data = result;\r\n      this.tillData = this.till.find(x => x.id == this.data.tillId);\r\n      this.data.tillId = this.tillData.tillVaultCode;\r\n      this.fetchCcyBalValue=this.data\r\n\r\n      if(this.fetchCcyBalValue != null){\r\n        localStorage.setItem('fetchCcyBalValue',JSON.stringify(this.fetchCcyBalValue));\r\n         this.loader.close();\r\n       \r\n       }\r\n      });\r\n  }\r\n\r\n  addNew(){\r\n    this.router.navigate([\"/maintenance/main/tillVaultCcyBal/add\"]);\r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/maintenance/main\"]);\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'tillVaultCcyBal');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n    this.getvaulCurrencyBal();\r\n  }\r\n  getvaulCurrencyBal() {\r\n    this.loading = true;\r\n    this.apiService.gettillCurrencyBalResp().subscribe((resp:any) => {\r\n\r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'U'){\r\n          resp[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(resp[i].authStatus == 'A') {\r\n          resp[i].authStatus = 'Authorized'\r\n        } \r\n        if(resp[i].recordStatus == 'O'){\r\n          resp[i].recordStatus = 'Open'\r\n        } \r\n        if(resp[i].recordStatus == 'C'){\r\n          resp[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = resp;\r\n      this.dataSource = new MatTableDataSource(resp);\r\n        this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.items = this.users;\r\n      this.loading = false;\r\n    });\r\n  }\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault =\"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      this.till = resp;\r\n    });\r\n  }\r\n\r\n  getEntityCode() {\r\n    this.apiService.getEntityCode().subscribe((resp) => {\r\n      this.entity = resp;\r\n    });\r\n  }\r\n  dataByFilter(index,item){\r\n    return item.key\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Currency Balance Maintenance </small></h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Till Vault Currency Balance Maintenance\r\n  </span>\r\n  </div>\r\n\r\n<mat-card class=\"mt-32\">\r\n  <div>\r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Currencies\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>  \r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"tillVaultCurrrencyBalance()\" mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content>\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption ; trackBy:dataByFilter\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n        <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n        </button>\r\n      </div>\r\n      <div class=\"filterDiv\">\r\n       <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n       </button>\r\n     </div>\r\n      \r\n    </div>\r\n    </div>\r\n\r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by EntityCode\"> Entity Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.entityCode}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by authStatus\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.authStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by recordStatus\"> Record Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element?.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Status \"> Status\r\n          </mat-header-cell>\r\n          <ng-template let-row=\"element\" ngx-datatable-cell-template>\r\n            <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"element.isActive\">{{element.isActive ? 'active' : 'inactive'}}</mat-chip>\r\n          </ng-template>\r\n        </ng-container>\r\n       \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n  \r\n\r\n","import { Component, ElementRef, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ViewChild } from '@angular/core';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport {AfterViewInit} from '@angular/core';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BranchHolidayPopupComponent } from '../branch-holiday/branch-holiday-popup/branch-holiday-popup.component';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { SendHolidayScreenService } from 'app/shared/services/send-holiday-screen.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DownloadService } from 'app/shared/services/download.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-branch-holiday',\r\n  templateUrl: './branch-holiday.component.html',\r\n  styleUrls: ['./branch-holiday.component.scss']\r\n})\r\nexport class BranchHolidayComponent implements OnInit {\r\n\r\n  @ViewChild('searchVal') searchVal: ElementRef;\r\n  selectedFilterIndex : number = 0;\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: string[] = ['entityCode', 'bankCode', 'branchCode', 'calenderYear', 'authStatus', 'recordStatus', 'action'];\r\n\r\n  filterByOption: { key: string, value: string }[] = [\r\n    { key: 'entityCode', value: 'entityCode' },\r\n    { key: 'bankCode', value: 'Bank Code' },\r\n    { key: 'branchCode', value: 'Branch Code' }\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  entityCode:string[]=[];\r\n  public items: any[];\r\n  users: any[] = [];\r\n  public getItemSub: Subscription;\r\n  screen: any;\r\n  userdata: any;\r\n  // screen: string;\r\n\r\n  constructor(private router:Router,private snack: MatSnackBar,private loader: AppLoaderService, private screenService: SendHolidayScreenService, \r\n    private dialog: MatDialog,private apiService:ApiService,private confirmService: AppConfirmService,private _liveAnnouncer: LiveAnnouncer,\r\n    private ls:LocalStoreService,private downloadService: DownloadService) { }\r\n\r\n  ngOnInit(): void {\r\n   this.getBrancheHoliday(); \r\n   this.getItems();\r\n  //  this.screenService.holidayScr.subscribe(res=>{\r\n  //   console.log(res);\r\n  //   this.screen=res;\r\n  //   console.log(this.screen)\r\n  //  });\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe()\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  addNew(res){\r\n    this.screenService.holidayScr.next(res);\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"]);\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'BranchHoliday');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n    this.getBrancheHoliday();\r\n  }\r\n\r\n  getBrancheHoliday() {\r\n    this.apiService.getBranchHolidayInfo().subscribe((data: any) => {\r\n      for(let i=0;i<data.length;i++){\r\n        if(data[i].authStatus == 'U'){\r\n          data[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(data[i].authStatus == 'A') {\r\n          data[i].authStatus = 'Authorized'\r\n        } \r\n        if(data[i].recordStatus == 'O'){\r\n          data[i].recordStatus = 'Open'\r\n        } \r\n        if(data[i].recordStatus == 'C'){\r\n          data[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = data;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      this.userdata=data;\r\n    });\r\n  }\r\n\r\n  branchHolidayMaintenance(){\r\n    console.log(\"inside downlaod \");\r\n    console.log(this.userdata);\r\n\r\n    this.downloadService.downloadFiles(\"branchHolidayMaintenance\", this.userdata);\r\n\r\n  }\r\n\r\n  \r\n  goBack(){\r\n    this.router.navigate([`/maintenance/main/holiday`]);\r\n  }\r\n\r\n  doFilter(filterBy, e){\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n \r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return (\r\n        data[filterBy]?.toLocaleLowerCase().includes(filter)\r\n      )\r\n    }\r\n  }\r\n\r\n  clearFilter(){\r\n   this.dataSource.filter = '';\r\n   this.searchVal.nativeElement.value = '';\r\n   this.selectedFilterIndex = 0;\r\n  }\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  openPopUp(data: any = {}, isNew?){\r\n    let title = isNew ? 'Add Branch Specific Holiday' : 'Edit Branch Specific Holiday';\r\n    let dialogRef: MatDialogRef<any> = this.dialog.open(BranchHolidayPopupComponent, {\r\n      width: '400px',\r\n      disableClose: true,\r\n      data: {\r\n        title: title, \r\n        payload: data,\r\n        branchCode: this.branchCode,\r\n        \r\n      }\r\n    })\r\n    dialogRef.afterClosed()\r\n      .subscribe(res => {\r\n        if(!res) {\r\n          return;\r\n        }\r\n        \r\n        if (isNew) {\r\n           this.apiService.updateBranchHolidayDetails(res,false).subscribe(response => {\r\n            \r\n            this.getBrancheHoliday();\r\n            this.snack.open(`Record Added!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        } else {\r\n          this.apiService.updateBranchHolidayDetails(res,false).subscribe(response => {\r\n            \r\n            this.items = response;\r\n            this.loader.close();\r\n            this.getBrancheHoliday();\r\n            this.snack.open(`Record Updated!'`, \"OK\", {\r\n              duration: 2000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          });\r\n        }\r\n      })\r\n\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  \r\n  deleteItem(element) {\r\n    this.confirmService.confirm({message: `Delete ${element.entityCode}?`})\r\n      .subscribe(res => {\r\n        if (res) {\r\n          this.apiService.deleteBranchHoliday(element.id)\r\n            .subscribe(data => {\r\n            },\r\n              err=>{\r\n                if (err.status == 200) {\r\n                  this.snack.open('Record Deleted Successfully', 'OK', {\r\n                    duration: 4000,\r\n                    verticalPosition: 'top',\r\n                    horizontalPosition: 'right'\r\n                  });\r\n                }\r\n      \r\n              \r\n              this.getBrancheHoliday();\r\n              \r\n            })\r\n        }\r\n        \r\n      });\r\n  }\r\n  commonHoliday(){\r\n    this.ls.setItem('SCREEN_NAME','Branch');\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/commonHoliday\"]);\r\n  }\r\n  addBranch(){\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addBranch\"]);\r\n    \r\n  }\r\n  openEdit(data: any = {},res,isEdit : string) {\r\n    console.log(res);\r\n    this.screenService.holidayScr.next(res);\r\n    this.router.navigate([\"/maintenance/main/holiday/BranchHoliday/addHoliday\"],{ queryParams: { id: data.id, isEdit : isEdit } });\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > \r\n  Holiday Maintenance > Branch Holiday</small></h1>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button> \r\n    <span class=\"text-large\">\r\n      Branch Holidays\r\n    </span>\r\n    <span fxFlex></span>\r\n    <mat-button-toggle-group value=\"table\" appearance=\"legacy\" name=\"fontStyle\" aria-label=\"Font Style\" >\r\n      <mat-button-toggle value=\"table\"><span >TABLE</span></mat-button-toggle>\r\n      <mat-button-toggle value=\"calendar\" (click)=\"addNew('Branch')\" ><span >CALENDAR</span></mat-button-toggle>\r\n    </mat-button-toggle-group>\r\n</div>\r\n\r\n\r\n\r\n<mat-card class=\"mt-32\">\r\n <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  \r\n  <table>\r\n    <tr>\r\n      <td>\r\n        <h2>\r\n          Branch Holidays\r\n        </h2>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <div class=\"highlight\">\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n     <span fxFlex></span>\r\n     <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n       <mat-icon>more_vert</mat-icon>\r\n     </button>\r\n     <mat-menu #menu=\"matMenu\">\r\n       <div class=\"upload_botton\">\r\n        <button type=\"button\" mat-menu-item>Upload</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          class=\"btn btn-success\"\r\n          (change)=\"onFileChange($event)\"\r\n        />\r\n      </div>\r\n      <button (click)=\"branchHolidayMaintenance()\" mat-menu-item>\r\n        <span>Download</span>\r\n      </button>\r\n     </mat-menu>\r\n  </div>\r\n <div class=\"w-full\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n   <div class=\"w-full\" fxLayout=\"row\" fxLayoutGap='20px'>\r\n     <div>\r\n       <mat-form-field appearance=\"outline\">\r\n        <mat-label>Filter By</mat-label>\r\n         <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n          <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n           <mat-option value=\"0\">Select</mat-option>\r\n           <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n             {{filter.value}}\r\n           </mat-option>\r\n         </mat-select>\r\n       </mat-form-field>\r\n     </div>\r\n     <div>\r\n       <mat-form-field appearance=\"outline\">\r\n        <mat-label>Search</mat-label>\r\n         <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n         <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n         <mat-icon matSuffix>search</mat-icon>\r\n       </mat-form-field>\r\n     </div>\r\n     <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n      <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n      </button>\r\n    </div>\r\n   </div>\r\n   <div>\r\n     <button mat-flat-button color=\"primary\" class=\"filterDiv\"  class=\"mr-38\" style=\"height: 45px;\" >ADD NEW\r\n         <button mat-icon-button>\r\n           <mat-icon [matMenuTriggerFor]=\"accountMenu\"\r\n             >keyboard_arrow_down</mat-icon>\r\n         <mat-menu #accountMenu=\"matMenu\" style=\"width: 50ox;\" >\r\n           <mat-nav-list role=\"list\" class=\"notification-list branch_holiday\" >\r\n             <mat-list-item\r\n             role=\"listitem\"\r\n             class=\"notific-item branch_item\">\r\n             <div (click)=\"commonHoliday()\">\r\n               <small>\r\n                Common Holiday\r\n              </small>\r\n             </div>\r\n             </mat-list-item>\r\n             <mat-list-item\r\n             role=\"listitem\"\r\n             class=\"notific-item branch_item\">\r\n             <div (click)=\"addBranch()\">\r\n               <small >\r\n                 Branch Specific Holiday\r\n               </small>\r\n             </div>\r\n \r\n             </mat-list-item>\r\n \r\n           </mat-nav-list>\r\n         </mat-menu>\r\n         </button>\r\n         </button>\r\n   </div>\r\n </div>\r\n <div class=\"mat-elevation-z0\">\r\n   <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n     <ng-container matColumnDef=\"entityCode\">\r\n       <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Entity Code\"> Entity Code\r\n       </mat-header-cell>\r\n       <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n     </ng-container>\r\n\r\n     <ng-container matColumnDef=\"bankCode\">\r\n       <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bank Code\"> Bank Code\r\n       </mat-header-cell>\r\n       <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n     </ng-container>\r\n\r\n     <ng-container matColumnDef=\"branchCode\">\r\n       <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Branch Code\"> Branch Code\r\n          </mat-header-cell>\r\n       <mat-cell *matCellDef=\"let element\"> {{element.branchCode}} </mat-cell>\r\n     </ng-container>\r\n\r\n     <ng-container matColumnDef=\"calenderYear\">\r\n       <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Year\"> Year\r\n       </mat-header-cell>\r\n       <mat-cell *matCellDef=\"let element\"> {{element.calenderYear}} </mat-cell>\r\n     </ng-container>\r\n     <ng-container matColumnDef=\"authStatus\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"recordStatus\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record Status\r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n    </ng-container>\r\n     <!-- <ng-container matColumnDef=\"action\">\r\n      <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">\r\n        <div>\r\n         <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openEdit(element,'Branch')\">edit</mat-icon>\r\n      </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n      <div>\r\n       <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\"  (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n      </div>\r\n      </mat-cell>\r\n    </ng-container> -->\r\n    <ng-container matColumnDef=\"action\">\r\n      <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">\r\n        <button\r\n          mat-icon-button\r\n          mat-sm-button\r\n          color=\"primary\"\r\n          class=\"mr-16\"\r\n          (click)=\"openEdit(element,'Branch')\"\r\n        >\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button\r\n          mat-icon-button\r\n          mat-sm-button\r\n          color=\"warn\"\r\n          [disabled]=\"element.authStatus == 'Authorized'\"\r\n          (click)=\"deleteItem(element)\"\r\n        >\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n     <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n     <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n   </mat-table>\r\n   <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[10,20,30]\" showFirstLastButtons></mat-paginator>\r\n </div>\r\n</mat-card>\r\n   \r\n","import { ChangeDetectorRef, Component, Inject, OnInit, OnDestroy, Input, ViewChild, HostListener, ElementRef } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { Data, Router } from '@angular/router';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { BranchHolidayComponent } from '../branch-holiday.component';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-branch-holiday-popup',\r\n  templateUrl: './branch-holiday-popup.component.html',\r\n  styleUrls: ['./branch-holiday-popup.component.scss']\r\n})\r\nexport class BranchHolidayPopupComponent implements OnInit {\r\n  holidaypopupForm: FormGroup;\r\n  holidaypopupResponse: any;\r\n  branchCodeArr: string[] = ['SBIN123', 'SBIN231', 'SBIN212', 'SBIN235', 'SBIN879'];\r\n  bankCodeArr: string[] = ['BRDS1NCH', 'SBI2NJ', 'BOB66SS', 'SBI44GH', 'SBI21SJ'];\r\n  entityCodeArr: string[] = ['BRDS1NCH', 'SBI2NJ', 'BOB66SS', 'SBI44GH', 'SBI21SJ'];\r\n  month: string;\r\n  public getItemSub: Subscription;\r\n  public items: string[] = [];\r\n  branchCode:string[]=[];\r\n  bankCode:string[]=[];\r\n  entityCode:string[]=[];\r\n  branchHolidayDetails:string[] = [];\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<BranchHolidayComponent>,\r\n    private formBuilder: FormBuilder, private apiService: ApiService,\r\n    private router: Router,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.buildItemForm(this.data.payload);\r\n    this.branchCode = this.data.branchCode;\r\n    this.bankCode = this.data.bankCode;\r\n    this.entityCode = this.data.entityCode;\r\n\r\n    this.getBranchCode();\r\n\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  buildItemForm(item) {\r\n    this.holidaypopupForm = this.formBuilder.group({\r\n      branchCode: [item.branchCode || '', [Validators.required]],\r\n      transactionDate: [item.transactionDate || '', [Validators.required]],\r\n      bankCode: [item.bankCode || '', [Validators.required]],\r\n      year: [''],\r\n      id: [item.id || ''],\r\n      entityCode: [item.entityCode || '', [Validators.required]],\r\n\r\n    })\r\n  }\r\n\r\n  trackByFnEntityCodeArr(index, item) {\r\n    return index; \r\n  }\r\n\r\n  trackByFnBankCodeArr(index, item) {\r\n    return index; \r\n  }\r\n\r\n  trackByFnBranchCode(index, item) {\r\n    return index; \r\n  }\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate([`/maintenance/main/holiday/BranchHoliday`]);\r\n  }\r\n\r\n  saveHoliday() {\r\n    let now = new Date();\r\n    now = this.holidaypopupForm.value.transactionDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MM-DD HH:MM:SS');\r\n    var convertedyear = dateStringWithTime.slice(0, 4);\r\n    var convertMonth = dateStringWithTime.slice(5, 7);\r\n    var conv1Month = parseInt(convertMonth);\r\n    var convertCalender = dateStringWithTime.slice(8, 10);\r\n    var conv1Calender = parseInt(convertCalender);\r\n\r\n    let payload = [{\r\n      entityCode: this.holidaypopupForm.value.entityCode,\r\n      bankCode: this.holidaypopupForm.value.bankCode,\r\n      branchCode: this.holidaypopupForm.value.branchCode,\r\n      transactionDate: this.holidaypopupForm.value.transactionDate,\r\n      year: convertedyear,\r\n      id: this.holidaypopupForm.value.id,\r\n      month: conv1Month,\r\n      // calendar:calendar\r\n      calendar: conv1Calender.toString()\r\n\r\n    }\r\n    ]\r\n    this.dialogRef.close(payload);\r\n\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" >\r\n  <h1 matDialogTitle>{{data.title}}</h1>\r\n  <div  fxLayout=\"row\" fxLayoutAlign=\"end stretch\">\r\n    <mat-icon  class=\"mat-18\" (click)=\"dialogRef.close(false)\"  style=\"cursor: pointer;\">\r\n      close</mat-icon>\r\n  </div>\r\n\r\n \r\n</div>\r\n  <form [formGroup]=\"holidaypopupForm\" (ngSubmit)=\"saveHoliday()\" >\r\n  <div fxLayout=\"column wrap\" >\r\n    <mat-hint><small>Entity Code *</small></mat-hint>\r\n    <mat-form-field   appearance=\"outline\" >\r\n      <mat-select [formControl]=\"holidaypopupForm.controls['entityCode']\"\r\n      required >\r\n\r\n        <mat-option *ngFor=\"let entityCode of entityCodeArr; trackBy: trackByFnEntityCodeArr\" [value]=\"entityCode\"  >\r\n          {{entityCode}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"holidaypopupForm.get('entityCode').touched && !holidaypopupForm.get('entityCode').valid\">\r\n      <small>Entity Code is Required!</small>\r\n   </mat-error>\r\n\r\n    <mat-hint><small>Bank Code *</small></mat-hint>\r\n      <mat-form-field  appearance=\"outline\">\r\n        <mat-select [formControl]=\"holidaypopupForm.controls['bankCode']\"\r\n        required >\r\n\r\n          <mat-option *ngFor=\"let bankCode of bankCodeArr; trackBy: trackByFnBankCodeArr\" [value]=\"bankCode\"  >\r\n            {{bankCode}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-error *ngIf=\"holidaypopupForm.get('bankCode').touched && !holidaypopupForm.get('bankCode').valid\">\r\n       <small>branchCode is Required!</small> \r\n     </mat-error>\r\n\r\n     <mat-hint>Branch Code *</mat-hint>\r\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n          <mat-select [formControl]=\"holidaypopupForm.controls['branchCode']\"\r\n          required >\r\n\r\n          <mat-option *ngFor=\"let data of branchCode; trackBy: trackByFnBranchCode\" [value]=\"data.branchCode\">\r\n            {{data.branchCode}}\r\n          </mat-option>\r\n          </mat-select>\r\n         \r\n        </mat-form-field>\r\n        <mat-error *ngIf=\"holidaypopupForm.get('branchCode').touched && !holidaypopupForm.get('branchCode').valid\">\r\n          branchCode is Required!\r\n       </mat-error>\r\n    \r\n\r\n       <mat-hint>Calendar *</mat-hint>\r\n       <mat-form-field appearance=\"fill\">\r\n        <input matInput [matDatepicker]=\"appDatepicker\"   name=\"date\" readonly formControlName=\"transactionDate\" placeholder=\"DD/MM/YYYY\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" ></mat-datepicker-toggle>\r\n        <mat-datepicker #appDatepicker></mat-datepicker>\r\n      </mat-form-field>\r\n      \r\n          \r\n     <div>\r\n       <button mat-raised-button color=\"primary\" [disabled]=\"!(holidaypopupForm.valid && holidaypopupForm.dirty)\" click=\"save()\">{{\"SAVE\" }}</button>\r\n       <button mat-button color=\"warn\" type=\"button\" (click)=\"dialogRef.close(false)\">Cancel</button>\r\n      </div>\r\n\r\n\r\n\r\n    \r\n  </div>\r\n  </form>\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort, Sort } from \"@angular/material/sort\";\r\nimport { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\n\r\nimport { BaseDenominationPopupComponent } from \"../../base-denomination/base-denomination-popup/base-denomination-popup.component\";\r\nimport { DownloadService } from \"app/shared/services/download.service\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: \"app-till-vault-denomination-summary\",\r\n  templateUrl: \"./till-vault-denomination-summary.component.html\",\r\n  styleUrls: [\"./till-vault-denomination-summary.component.scss\"],\r\n  animations: rumangoAnimations,\r\n})\r\nexport class TillVaultDenominationSummaryComponent implements OnInit {\r\n  @ViewChild(\"searchVal\") searchVal: ElementRef;\r\n  selectedFilterIndex: number = 0;\r\n  displayedColumns: string[] = [ 'bankCode', 'entityCode', 'authStatus','recordStatus',  'action'];\r\n\r\n  filterByOption: { key: string; value: string }[] = [\r\n    { key: \"entityCode\", value: \"Entity Code\" },\r\n  ];\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  dataSource = new MatTableDataSource();\r\n\r\n\r\n  public items: any[];\r\n  public getItemSub: Subscription;\r\n  users: any[] = [];\r\n  currency: string[] = [];\r\n  till: any;\r\n  branchCode: string[] = [];\r\n  bankCode: string[] = [];\r\n  fetchVaultDenom: object;\r\n  loading: boolean;\r\n  data: any;\r\n  tillData: any;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private snack: MatSnackBar,\r\n    private confirmService: AppConfirmService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private _liveAnnouncer: LiveAnnouncer,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getItems();\r\n    this.getTellVaultDenomination();\r\n\r\n    this.getCurrency();\r\n    this.getBankCode();\r\n    this.getBranchCode();\r\n    this.getTillId();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.getItemSub) {\r\n      this.getItemSub.unsubscribe();\r\n    }\r\n  }\r\n  getItems() {\r\n    this.items = this.users;\r\n  }\r\n\r\n  doFilter(filterBy, e) {\r\n    console.log(filterBy, e);\r\n    this.filterTable(filterBy);\r\n    this.applyFilter(e);\r\n  }\r\n\r\n  filterTable(filterBy) {\r\n    this.dataSource.filterPredicate = (data: any, filter: string): boolean => {\r\n      return data[filterBy].toLocaleLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  clearFilter() {\r\n    this.dataSource.filter = \"\";\r\n    this.searchVal.nativeElement.value = \"\";\r\n    this.selectedFilterIndex = 0;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  announceSortChange(sortState: Sort) {\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce(\"Sorting cleared\");\r\n    }\r\n  }\r\n  onFileChange(event) {\r\n    console.log('event', event.path[0].files[0]);\r\n    const file: File = event.path[0].files[0];\r\n    const uploadData = new FormData();\r\n    uploadData.append('screenType', 'tillVaultDenom');\r\n    uploadData.append('file', file);\r\n    this.apiService.uploadExelFile(uploadData).subscribe((response) => {\r\n      console.log(response);\r\n      this.getTellVaultDenomination();\r\n      this.snack.open(`File Uploaded Successfully`, \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    });\r\n  }\r\n \r\n  tillVaultDenomination(){\r\n    \r\n    this.downloadService.downloadFiles(\"tillVaultDenomination\", this.users );\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n\r\n     \r\n\r\n  deleteItem(row) {\r\n    this.confirmService\r\n      .confirm({ message: `Delete ${row.bankCode}?` })\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.loader.open();\r\n          this.apiService.deleteTellerVaultDenomination(row.id).subscribe(\r\n            (data) => {},\r\n            (err) => {\r\n              if (err.status === 200) {\r\n                this.loader.close();\r\n                this.snack.open(`Record Deleted!'`, \"OK\", {\r\n                  duration: 2000,\r\n                  verticalPosition: \"top\",\r\n                  horizontalPosition: \"right\",\r\n                });\r\n                this.getTellVaultDenomination();\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  addNew() {\r\n    this.router.navigate([\"/maintenance/main/tillVaultDenom/add\"]);\r\n  }\r\n\r\n  openPopUp(row) {\r\n    console.log(row);\r\n    this.fetchTellVaultDenomination(row);\r\n    // this.dataService.sendNavParam(this.fetchVaultDenom);\r\n    this.router.navigate([`/maintenance/main/tillVaultDenom/${row.id}`]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/maintenance/main/\"]);\r\n  }\r\n\r\n  getTellVaultDenomination() {\r\n    this.loading = true;\r\n    this.apiService.getTellerVaultDenomination().subscribe((resp) => {\r\n     \r\n      for(let i=0;i<resp.length;i++){\r\n        if(resp[i].authStatus == 'U'){\r\n          resp[i].authStatus = 'Unauthorized'\r\n        }\r\n        if(resp[i].authStatus == 'A') {\r\n          resp[i].authStatus = 'Authorized'\r\n        } \r\n        if(resp[i].recordStatus == 'O'){\r\n          resp[i].recordStatus = 'Open'\r\n        } \r\n        if(resp[i].recordStatus == 'C'){\r\n          resp[i].recordStatus = 'Closed'\r\n        }\r\n      }\r\n      this.users = resp;\r\n      this.items = this.users;\r\n      this.dataSource = new MatTableDataSource(resp);\r\n      console.log(this.dataSource);\r\n      this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  fetchTellVaultDenomination(row) {\r\n    this.loader.open();\r\n    this.apiService.getTellerVaultDenomById(row.id).subscribe((resp) => {\r\n      this.data = resp;\r\n      console.log(\"this.till::\", this.till);\r\n      console.log(\"this.data::\", this.data);\r\n      this.tillData = this.till.find((x) => x.id == this.data.tillId);\r\n      console.log(\"this.data::\", this.tillData);\r\n     // this.data.tillId = this.tillData.tillVaultCode;\r\n      this.fetchVaultDenom = this.data;\r\n      // console.log(resp);\r\n      // this.fetchVaultDenom = resp;\r\n\r\n      if (this.fetchVaultDenom != null) {\r\n        localStorage.setItem(\r\n          \"fetchVaultDenom\",\r\n          JSON.stringify(this.fetchVaultDenom)\r\n        );\r\n        console.log(this.fetchVaultDenom);\r\n        this.loader.close();\r\n        // this.dataService.shareAccTypeItem(JSON.stringify(this.fetchAccTypeValue));\r\n      }\r\n    });\r\n  }\r\n\r\n  getCurrency() {\r\n    this.apiService.getCountryValues().subscribe((resp) => {\r\n      this.currency = resp;\r\n    });\r\n  }\r\n  getBankCode() {\r\n    this.apiService.getBankCode().subscribe((resp) => {\r\n      this.bankCode = resp;\r\n    });\r\n  }\r\n  getBranchCode() {\r\n    this.apiService.getBranchCode().subscribe((resp) => {\r\n      this.branchCode = resp;\r\n    });\r\n  }\r\n  getTillId() {\r\n    let tillOrVault = \"T\";\r\n    this.apiService.getTillData(tillOrVault).subscribe((resp) => {\r\n      console.log(\"tillData\", resp);\r\n      this.till = resp;\r\n    });\r\n  }\r\n}\r\n","<h1 class=\"main-head\"><small class=\"small-head\">Home > Maintenance Summary > Till Vault Denomination Maintenance </small>\r\n</h1>\r\n<div fxLayoutAlign=\"center\">\r\n  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n</div>\r\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-24\">\r\n  <button mat-icon-button (click)=\"goBack()\">\r\n    <mat-icon>arrow_back</mat-icon>\r\n  </button>\r\n  <span class=\"text-large\">\r\n    Till Vault Denomination Maintenance\r\n  </span>\r\n  </div>\r\n<mat-card class=\"mt-32\">\r\n  <div >    \r\n    <table style=\"margin: 18px;\">\r\n      <tr>\r\n        <td>\r\n          <h2>\r\n            Denominations\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <div class=\"highlight\">\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <span fxFlex></span>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>more_vert</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <div class=\"upload_botton\">\r\n      <button type=\"button\" mat-menu-item>Upload</button>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n        class=\"btn btn-success\"\r\n        (change)=\"onFileChange($event)\"\r\n      />\r\n    </div>\r\n    <button (click)=\"tillVaultDenomination()\"  mat-menu-item>\r\n      <span>Download</span>\r\n    </button>\r\n  </mat-menu>\r\n  </div>\r\n  <mat-card-content class=\"p-0\">\r\n    <div fxLayout=\"row\" class=\"w-full\" fxLayoutAlign=\"space-arround center\" class=\"ml-16 mt-32\">\r\n      <div fxLayout=\"row\" class=\"w-full\" fxLayoutGap=\"10px\">\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Filter By</mat-label>\r\n            <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\" placeholder=\"Filter By\">\r\n              <!-- <mat-select name=\"filterBy\" #filterBy [(ngModel)]=\"selectedFilterIndex\"> -->\r\n              <mat-option value=\"0\">Select</mat-option>\r\n              <mat-option *ngFor=\"let filter of filterByOption\" value=\"{{filter.key}}\">\r\n                {{filter.value}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Search</mat-label>\r\n            <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\" placeholder=\"Search\">\r\n            <!-- <input matInput #searchVal (keyup)=\"doFilter(filterBy.value,$event)\"> -->\r\n            <mat-icon matSuffix>search</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n        <div *ngIf=\"searchVal.value || filterBy.value\" class=\"resetDiv\">\r\n          <button mat-stroked-button class=\"clearBtn\" (click)=\"clearFilter()\">RESET\r\n          </button>\r\n        </div>\r\n        <div class=\"filterDiv\">\r\n         <button mat-flat-button color=\"primary\" class=\"addNewBtn\" (click)=\"addNew()\" >ADD NEW\r\n         </button>\r\n       </div>    \r\n    </div>\r\n    </div>\r\n \r\n    <div class=\"mat-elevation-z0\">\r\n      <mat-table class=\"w-full\" [dataSource]=\"dataSource\" matSort (matSortChange)=\"announceSortChange($event)\">\r\n\r\n        <ng-container matColumnDef=\"bankCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Bannk Code \"> Bank Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.bankCode}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"entityCode\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by state code\"> Entity\r\n            Code\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.entityCode}} </mat-cell>\r\n        </ng-container>\r\n        \r\n        <ng-container matColumnDef=\"authStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Auth Status\"> Auth Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.authStatus}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"recordStatus\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by Record Status\"> Record\r\n            Status\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\"> {{element.recordStatus}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by status\"> Status         \r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">  <mat-chip mat-sm-chip [color]=\"'primary'\" [selected]=\"element.isActive\">{{element.isActive ? 'active' : 'inactive'}}\r\n          </mat-chip> </mat-cell>\r\n        </ng-container> -->\r\n        \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\">\r\n            <div>\r\n             <mat-icon class=\"actionIcons\" matTooltip=\"Edit\" (click)=\"openPopUp(element,'Yes')\"  >edit</mat-icon>\r\n          </div>&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <div>\r\n           <mat-icon class=\"actionIcons\" matTooltip=\"Delete\" [disabled]=\"element.oneTimeAuth =='Y'\" (click)=\"deleteItem(element)\" >delete</mat-icon>\r\n          </div>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n      <mat-paginator class=\"mt-16\" [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator>\r\n    </div>\r\n    <!-- <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" aria-label=\"Select page of users\"></mat-paginator> -->\r\n  </mat-card-content>\r\n</mat-card>"]}