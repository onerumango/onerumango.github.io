{"version":3,"sources":["webpack:///src/app/shared/models/cardPrefrences.ts","webpack:///src/app/views/card-account/application-entry-stage/card-customer-information/card-customer-information.component.ts","webpack:///src/app/views/card-account/application-entry-stage/card-customer-information/card-customer-information.component.html","webpack:///src/app/views/card-account/underwriting-stage/underwriting-stage.component.ts","webpack:///src/app/views/card-account/underwriting-stage/underwriting-stage.component.html","webpack:///src/app/views/card-account/application-entry-stage/application-entry-stage.component.ts","webpack:///src/app/views/card-account/application-entry-stage/application-entry-stage.component.html","webpack:///src/app/views/card-account/underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component.ts","webpack:///src/app/views/card-account/underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component.html","webpack:///src/app/views/card-account/supervisor-approval-stage/supervisor-approval-stage.component.ts","webpack:///src/app/views/card-account/supervisor-approval-stage/supervisor-approval-stage.component.html","webpack:///src/app/views/card-account/application-entry-stage/card-prefrences/card-prefrences.component.ts","webpack:///src/app/views/card-account/application-entry-stage/card-prefrences/card-prefrences.component.html","webpack:///src/app/views/card-account/underwriting-stage/underwriting-credit-rating/underwriting-credit-rating.component.ts","webpack:///src/app/views/card-account/underwriting-stage/underwriting-credit-rating/underwriting-credit-rating.component.html","webpack:///src/app/views/card-account/application-enrichment/enrichment-summary/enrichment-summary.component.ts","webpack:///src/app/views/card-account/application-enrichment/enrichment-summary/enrichment-summary.component.html","webpack:///src/app/views/card-account/card-account.component.ts","webpack:///src/app/views/card-account/card-account.component.html","webpack:///src/app/views/card-account/application-enrichment/charge-details/charge-details.component.ts","webpack:///src/app/views/card-account/application-enrichment/charge-details/charge-details.component.html","webpack:///src/app/views/card-account/assessment-stage/assessment-stage.component.ts","webpack:///src/app/views/card-account/assessment-stage/assessment-stage.component.html","webpack:///src/app/views/card-account/card-account.routing.ts","webpack:///src/app/views/card-account/application-enrichment/charge-details/card-acc-charge-det-sum/card-acc-charge-det-sum.component.ts","webpack:///src/app/views/card-account/application-enrichment/charge-details/card-acc-charge-det-sum/card-acc-charge-det-sum.component.html","webpack:///src/app/views/card-account/digital-signing/digital-view-summary/digital-view-summary.component.ts","webpack:///src/app/views/card-account/digital-signing/digital-view-summary/digital-view-summary.component.html","webpack:///src/app/views/card-account/digital-signing/digitalsign-summary/digitalsign-summary.component.ts","webpack:///src/app/views/card-account/digital-signing/digitalsign-summary/digitalsign-summary.component.html","webpack:///src/app/views/card-account/cardaccount-application-assessment/cardaccount-application-assessment.component.ts","webpack:///src/app/views/card-account/cardaccount-application-assessment/cardaccount-application-assessment.component.html","webpack:///src/app/views/card-account/application-enrichment/intrest-details/intrest-details.component.ts","webpack:///src/app/views/card-account/application-enrichment/intrest-details/intrest-details.component.html","webpack:///src/app/views/card-account/digital-signing/digital-signing.component.ts","webpack:///src/app/views/card-account/digital-signing/digital-signing.component.html","webpack:///src/app/views/card-account/document-upload/document-details/document-details.component.html","webpack:///src/app/views/card-account/document-upload/document-details/document-details.component.ts","webpack:///src/app/views/card-account/application-entry-stage/financial-details/financial-details.component.ts","webpack:///src/app/views/card-account/application-entry-stage/financial-details/financial-details.component.html","webpack:///src/app/views/card-account/application-entry-stage/card-account-services/card-account-services.component.ts","webpack:///src/app/views/card-account/application-entry-stage/card-account-services/card-account-services.component.html","webpack:///src/app/views/card-account/digital-signing/digital-sign-now-or-later/digital-sign-now-or-later.component.ts","webpack:///src/app/views/card-account/digital-signing/digital-sign-now-or-later/digital-sign-now-or-later.component.html","webpack:///src/app/views/card-account/application-entry-stage/card-initiation/card-initiation.component.ts","webpack:///src/app/views/card-account/application-entry-stage/card-initiation/card-initiation.component.html","webpack:///src/app/views/card-account/supervisor-approval-stage/approval-details/approval-details.component.ts","webpack:///src/app/views/card-account/supervisor-approval-stage/approval-details/approval-details.component.html","webpack:///src/app/views/card-account/application-enrichment/intrest-details/intrest-details-summary/intrest-details-summary.component.ts","webpack:///src/app/views/card-account/application-enrichment/intrest-details/intrest-details-summary/intrest-details-summary.component.html","webpack:///src/app/views/card-account/application-enrichment/application-enrichment.component.ts","webpack:///src/app/views/card-account/application-enrichment/application-enrichment.component.html","webpack:///src/app/views/card-account/document-upload/document-upload.component.ts","webpack:///src/app/views/card-account/document-upload/document-upload.component.html","webpack:///src/app/views/card-account/card-account.module.ts","webpack:///src/app/views/card-account/underwriting-stage/cardaccount-qualitative-scoreboard/cardaccount-qualitative-scoreboard.component.ts","webpack:///src/app/views/card-account/underwriting-stage/cardaccount-qualitative-scoreboard/cardaccount-qualitative-scoreboard.component.html"],"names":["home","applicant","value","CardCustomerInformationComponent","router","dialog","route","accountService","elRef","renderer","ls","apiService","formBuilder","confirmService","cdr","appApiService","snack","dataService","urlService","loader","cifNumberForm","listOfCustByCif","submitted","formData","console","customerIdProofs","selfNextBtnDisabled","arrayPrefix","arrayGender","arrayCountry","arrayState","arrayCity","arrayResidence","arrayDocumentType","arrayAddressType","applicantDetailsArray","toggle","customerDetails","applicantDetails","showEditOption","tomorrow","Date","maxDate","minDate","validDate","showNewForm","isCifValid","toggleClick","isCustomerDone","previousUrl","addOnCard","addFunc","removedButton","selectedApplicant","listOfAccounts","isAllSameDigitVal","isResidency","isCurrency","addonCardValue","isBirthCountry","isCountry","pinCodeErr","prefixFlag","selectedOwnership","citizenshipFflag","setDate","getDate","log","i","isDuplicateCIF","disableSaveBtn","cardId","getItem","applicantId","snapshot","params","JSON","parse","cifNumberPrimary","buildCustomerForm","getListOfAccounts","getOwnershipValue","getPrefixValue","getGenderValue","getResidenceDetails","getCountryName","getAdressType","getAllAuthCities","getDocumentType","getMaritalStatus","isChecked","disabled","disabledToggle","goToggle","fetchCardCustomersByCardId","subscribe","resp","err","dataExtracted","subscription","getaccParam","data","dispResponse","custIdProofs","cardCustomerForm","get","valueChanges","val","patchValue","setItem","onlySelf","emitEvent","reset","ownershipStatus","setValue","noOfapplicants","pipe","prev","next","previousUrl$","refresh","res","markForCheck","cifNumber","getStateName","country","applicantData","prefix","existingCustomer","primaryCustomer","customerId","firstName","middleName","lastName","gender","dateOfBirth","convertDate","placeOfBirth","residenceStatus","nationality","countryOfResidence","occupationType","idType","idNumber","expiryDate","addressType","address1","address2","city","state","zipCode","phoneNumber","landlineNumber","primaryEmailAdress","maritalStatus","birthCountry","doc","showExpiryDate","setValidators","nullValidator","updateValueAndValidity","idProofs","filter","item","length","Object","prototype","toString","call","stringify","event","charCode","keyCode","open","duration","verticalPosition","horizontalPosition","account","disable","address","userAddress","find","idName","controls","payLoadModel","dependentId","onSelectionBirthCountry","onSelectionResidance","onSelectionCitizionship","getCountrySelection1","onBirthCountry","cifNumValidity","required","closeDetails","enable","status","map","_id","Math","round","random","requiredFields","acc","field","id","index","element","numOfApplicants","toggleChanges","confirm","title","message","ok","cancel","deleteApplicant","error","text","isExistingCustomer","some","currency","birthCountryFlag","fetchByCif","clearValidators","customerInfoList","policyRenewalDate","format","onSelectionCitizionship1","onOtherSelectionResidance","getCountrySelection","customerName","date","group","productAccountId","accountId","ownership","addCustFormGroup","pattern","minLength","maxLength","email","inputChar","String","fromCharCode","test","preventDefault","inp","excludedKeys","includes","f","key","getDropDownValues","maritalStatusList","arrayOwnership","getAllCountries","authStatus","push","countryName","isAdd","getStateByCountryId","getAuthorizedCityInfo","r","cityName","countryFlaglists","currencyCode","toLowerCase","countryCode","editCountryCode","Currency1","Currency","ResideceCurrency","payloadObj","control","addressObj","custIdProofsArray","addressObjArray","accountType","createAndUpdateCardAccountants","close","custDependentModel","o1","o2","navigate","localStorage","target","clearTimeout","timer","setTimeout","count","number","unsubscribe","sendNavParam","checked","zipcode","fetchStateCityByZipcode","stateName","evt","selector","templateUrl","styleUrls","progressBar","UnderwritingStageComponent","dialogService","isCardCreditRatingDetails","isCardQualitativeScoreboard","cardAccountcreditRatingSummaryDialog","CardQualitativeSummaryDialog","ApplicationEntryStageComponent","isCardPrefrenceDone","CardInitiationScreenDone","isCardInitiationDone","isCardCustomerInformationScreen","isCardFinancialDetailsScreen","isCardAccountService","isCardApplicationStageDone","CardInitiationSummary","CardFinancialDetailsSummary","CardCustomerInfoSummary","cardAccountServiceViewSummary","cardPrefrenceSummary","cardAppEntryStageViewSummary","UnderwritingStageSummaryComponent","imagePath","getAllData","getCardQualitativeScorecardDetails","response","qualitativeScoreboardSummary","scoreCardMapping","getCardCreditRatingDetails","creditDetails","creditRatingValues","goBack","done","SupervisorApprovalStageComponent","isApprovalDetails","isCardSupervisorApprovalDone","CardApprovalSummary","CardApprovalViewSummary","CardPrefrencesComponent","fb","arraylimitType","selectedOptions2","cardDetails","isdailylimit","isLimitTransaction","isGreaterValue","selectedDocumentTypes2","cardPrefrenceOnLoad","isRowEnds","islimitType","isDLReadOnly","isLPTReadOnly","isDocumentOptionDisabled2","buildCardPrefrenceForm","cardPrefrenceScreen","gettingCardPrefrenceDetail","getCardPrefrence","limitType","isResponse","cardPrefrenceForm","cardPrefrences","array","addMFormGroup","addMandateToFormGroup","dailyLimit","addComa","limitPerTransaction","m","numberOfItems","num1","finalNum","replace","split","final","join","flag","k","limiPrTrn","dailyNum","removeComma","LimitTxn","Number","payload","limitDaily","removeAt","undefined","preferenceId","deleteCardPrefrence","splice","newTransaction","assign","parseInt","uploadCardPrefrence","num","numb","addMandate","onSubmit","UnderwritingCreditRatingComponent","api","customerNames","getCustomerInformationDetails","buildCreditForm","gettingCreditRatingDetail","creditDetailsForm","agencyRating","addModFormGroup","c","agencyId","agencyName","ratings","deletecount","compose","max","remarks","fetchCustomersByCardAccId","saveCreditDetails","disableTest","disableUjjivan","disableFastTrack","disableAddAgency","EnrichmentSummaryComponent","appEntrySummaryView","getCardEnrichmentDetails","interestForm","interest","savingForm","saving","chargeFormIT","chargeIT","loanForm","loan","getCardEnrichmentSummmary","summaryInfo","intererstInfo","onCardintrest","chargeInfo","onCardCharge","in2","e","intrestType","intrestRateApplicable","marginIn","effectiveRate","createdDate","createdBy","lastModifiedDate","lastModifiedBy","amount","waiver","chargeDetailsId","f2","floan","Back","Done","CardAccountComponent","isAddOnCardHolderDetails","isDocumentUploadDone","isDocumentUpload","isCardApplicationEnrichmentDone","isCardInterestDetails","isCardChargeDetails","isApplicationUnderWritingStageDone","isQualitativeScoreboard","isCardAssessmentStageDone","isAssessmentReport","isApprovedDetails","isCardDigitalSigningDone","isCardDigitalSigning","accountItemsSub","accountItems$","menuItem","accountItems","ChargeDetailsComponent","history","currencytype","currencySymbol","cardInfo","loanaccountID","loanAccountId","getFlexcubeDetails","onChangeInterest","cardChargeFetchById","slice","form","cardChargeDetailsSave","inputCharacter","AssessmentStageComponent","cardAccountAssessmentSummaryDialog","cardAccAssessmentSummaryDialog","loanQualitativeSummaryDialog","CardAccountRoutes","path","component","children","redirectTo","pathMatch","CardAccChargeDetSumComponent","dialogRef","craetedBy","edit","DigitalViewSummaryComponent","getDigitalsignByCardId","fileUrl","imageUrl","DigitalsignSummaryComponent","CardaccountApplicationAssessmentComponent","_location","currencyPipe","arrayUserRecommendation","arraySystemRecommendation","curr","currencySymbols","symbol","buildAssessmentForm","getCardAssessmentDetails","assessmentForm","assessmentId","requestedCardLimit","systemRecommendation","approvedCardLimit","userRecommendation","recommendedCardLimit","remark","currencyArr","fltered","currencySymboll","reccommendedCardLimit","transform","input","which","fetchcardAssessmentDetailsById","cardAssessmentDetails","_keyPress1","transformAmount","goNext","IntrestDetailsComponent","getInterestDetails","interestInfo","cardInterestFetchById","min","cardInterestId","cardintrestDetailsSave","DigitalSigningComponent","informations","isEsignScreen","height","width","disableClose","afterClosed","submit","navigateByUrl","DocumentDetailsComponent","http","tokenService","shareDataService","doOcrService","webcamImage","webcamImage1","scan1Array","scan2Array","scan3Array","frontImageArray","backImageArray","otherImageArray","otherDocumentArray","boxArray","document_type","custDocExist","documentSide","frontImage","backImage","otherImage","secondBoxArray","thirdBoxArray","ocrResult","nameOnCard","dobArray","idNumberArray","docarr","addressArray","dataFetched","boxArray2","boxArray3","doc_name","docholder","docuNameArray","arrayOfImageArrays0","arrayOfImageArrays1","arrayOfImageArrays2","docValArray","docarray1","newOtherPage","disableNextAtIndex1","otherDocPages","otherDocumentArray2","screenInfo","ff","bf","docName","progressValFrontArray","progressValBackArray","progressValOthersArray","progressValOtherDocumentArray","customerDocs","trigger","aadharParser","str","adharNumber","dob","name","nameLineIndex","asciiStr","trim","lines","startIndex","j","substr","docString","dobIndex","indexOf","pop","names","x","fullName","panCardParser","nameIndex","panNumber","match","fatherNameIndex","nameString","displayName","dobString","passportParser","dateOfIssue","dateOfExpiry","doIssueIndex","findIndex","line","dates","nationalityIndex","issueNoString","issueNoStringArray","screen","screenName","sessionStorage","customer_Id","addCustomer","documentForm","documentName","frontSide","backSide","others","items","inititemrows","document_name","documentTypeArr","getName","assignName","getOCR","getCustomerId","cId","assignOCRValues","getenableNext","doc_list","forEach","documentType","getKycDataFetchedInfo","documentsList","createItem","createDocItem","upload","dataFetchedValue","disableNext","namePancard","imageOCR","imageOCRBack","addressDisplay","hasNonEmptyFields","values","Boolean","pancard","report","docum_name","backSelected","document_side","deleteCustDoc","othersSelected","getCustomerDocuments","addDocumentlist","newDocumentSide","a","otherArray","fileData","img","docVal","selectedFile","docSideEnum","worker","logger","load","loadLanguage","initialize","recognize","uploadDoc","panCardDetails","nameDoc","passbookDetails","shotToast","aadharDetails","result","ocrFlag","confirmationDialog","changeValue2_Ocr","terminate","fun","fun1","frontSelected","arg0","Error","webcamImage2","function2","uploadData2","FormData","refreshCustomerId","fileType","_mimeType","fileName","verificationType","imageAsDataUrl","displayVal2","file","dataURLtoFile","append","type","body","assignIdValues","asObservable","tab","textLabel","setIndex","setFinishFlag","finishFlag","updateKycStatus","hasOwnProperty","fetchChildIndex","page_id","element2","document","getElementById","click","element3","custId","docImage","objectURL","source","sanitizer","bypassSecurityTrustUrl","updateKycStatusByCustId","uploadData","displayVal","uploadData1","displayVal1","dataurl","filename","arr","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","childindex","selectedFiles","files","size","formatBytes","reader","FileReader","readAsDataURL","onload","image","doOCR","otherDocumentSelected","bytes","decimals","dm","sizes","floor","parseFloat","pow","toFixed","url","documnetSideValue","docType","uploadSub","UploadProgress","loaded","total","backSideId","otherSideId","otherDocumentSideId","shareCustomerId","sideType","msg","deleteRecord","delCustDoc","uploadDocLink","backdropClass","FinancialDetailsComponent","lastData","toISOString","applicantName","isFinancialScreen","getEmploymentType","getEmploymentCategory","getCardFinancialDetailsSummary","buildFinacialFormGroup","getCardFinancialDetails","arrayEmploymentType","arrayEmploymentCategory","cardFinancialDetailsForm","currentlyWorking","applicantTotalIncome","applicantTotalExpense","lastUpdatedon","employmentType","employmentCategory","employeeNumber","officeName","designation","employmentStartDate","employmentEndDate","salary","interestIncome","bonus","cashGifts","business","pension","monthlyIncomeRentals","monthlyIncomeOthers","monthlyIncomeTotal","household","education","vehicleMaintenance","monthlyExpenseRentals","monthlyExpenseOthers","medical","travel","monthlyExpenseTotal","propertyLoan","vehicleLoan","personalLoans","overdraft","cardOutstandings","liabilityOthers","liabilityTotal","savingDeposits","properties","automobiles","fixedDeposits","lands","assetOthers","stocks","assetTotal","validator","formGroup","validateInputGroups","formgroup","incomeErrMsg","ExpensesErrMsg","LiabilitiesErrMsg","assetErrMsg","startDate","converDate","endDate","upsertCardFinancialDetails","fincialResp","income","detectChanges","calculateTotalIncomeAndExpense","expense","liability","asset","totalIncome","totalExpense","CardAccountServicesComponent","show","selectedRow","statementList","communicationList","commChannelPreferencesArray","AccStatementPreferenceArray","enableFinish","isAccountServiceDone","gettingAccountService","buildServiceForm","accountServiceForm","gettingCardAccountServiceDetails","statementPref","commChannelPref","statementFrequency","statementFrncy","accServiceId","flattenValues","checkbox","checklist","checkboxes","flattenedValues","accountPayload","invalid","updateAccountService","createAccountService","goToNext","DigitalSignNowOrLaterComponent","isDone","show1","isSignLater","accountID","getByAccountId","getCardInitiationDetails","accountdetailsForStatusUpdate","updateCardAccountStatus","alertForCardFinishButton","statusModel","updateCardStatus","updateResp","removeItem","clear","esignLink","subject","signInLater","alertForcardSignLater","openPopUp","onDone","animations","cardInitiationForm","CardInitiationComponent","arrayofEmployment","onbackSpace","isAddOnCard","localCurrencyArr","selectedCurrency","iskycStatus","isGoForKyc","isKycForCardDone","accountNoArr","buildInitiationForm","isCardDetails","getCardInitiation","kycRefrence","kycNum","getPrimaryInfo","kycStatus","customerAdditionalInfo","getProfileDetails","signatures","accountCurrency","cardType","customerAccount","affinityProgram","kycReference","userName","uploadCardInitiation","fetchAccountIdByCustId","accountNo","formControlValueChanged","cifNumberControl","valid","showSpinn","custStatus","queryParams","swiftCode","swiftCodeEnable","sendCIF","getAccountData","changeEvent","ApprovalDetailsComponent","getUserRecomendation","getAccountType","getAccountBranchDetails","buildformGroup","approvalForm","getApprovalDetails","productCode","accountBranch","productName","existingValues","upsertApprovalDetails","arrayAccountCurrency","arrayAccountType","arrayUserRecomendation","getAccountBranch","arrayAccountBranch","keyPressAlphanumeric","onKeyPress","IntrestDetailsSummaryComponent","is","interestRateApplicable","iloan","fs","setFlag","ApplicationEnrichmentComponent","DocumentUploadComponent","isLoanApplicationEntryDone","isLoanDetailScreen","CardAccountModule","forChild","declarations","imports","providers","schemas","CardaccountQualitativeScoreboardComponent","sbMultiSelectAnswer","scoreboardQuestionsArray","scoreCardMappingArray","numberOfApplicant","scoreCardId","isDataSaved","disableDoneBtn","anyErrorExist","isQualitativeScreen","sbSelectAnswer","loggedInUser","isScoreCardScreen","getAllQualitative","loadData","Array","getScorecardQuestions","attributeType","scorecardQuestion","scoreCardDetails","mapDataAns","p","scoreCardQuestionId","scorecardAnswer","scoreCardMappingId","scAns","sbSwlwctAnswer","sbSelectAnswer1","answer","qtype","mapId","applcantId","dataUpdated","aplcntExists","dataOject","idx","answerIs","inputValue","validationName","eleid","setStyle","nativeElement","querySelector","isNaN","selectValue","getAssessmentReportDetails","submitData","saveQualitativeScorecard","saveQualitativeScore"],"mappings":"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","file":"views-card-account-card-account-module-es5.js","sourcesContent":["export class home\r\n{\r\n    limitType:any;\r\n    dailyLimit:number;\r\n    limitPerTransaction:number;\r\n   \r\n}","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatProgressBar } from '@angular/material/progress-bar';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n// import { AccountService } from 'app/views/home/account.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\nimport { UrlService } from 'app/views/home/url.service';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\nimport { pairwise } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-card-customer-information',\r\n  templateUrl: './card-customer-information.component.html',\r\n  styleUrls: ['./card-customer-information.component.scss']\r\n})\r\nexport class CardCustomerInformationComponent implements OnInit {\r\n  cifNumberForm = new FormControl()\r\n  timer: any;\r\n  listOfCustByCif: any = [];\r\n\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  submitted = false;\r\n  formData = {}\r\n  console = console;\r\n  cardCustomerForm: FormGroup;\r\n  accountId: string;\r\n  data: any;\r\n  customerIdProofs: any = [];\r\n  selfNextBtnDisabled: boolean = true;\r\n  arrayPrefix: any[] = [];\r\n  arrayGender: any[] = [];\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n  arrayResidence: any[] = [];\r\n  arrayDocumentType: any[] = [];\r\n  arrayAddressType: any[] = [];\r\n  applicantDetailsArray: any[] = [];\r\n  toggle: boolean = false;\r\n  maritalStatusList: string[];\r\n  // customerDetails: IcustProductCustomerInfo = new IcustProductCustomerInfo();\r\n  customerDetails: any = {};\r\n  applicantDetails = [];\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  custInfo: string[];\r\n  tomorrow = new Date();\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  validDate = new Date();\r\n  showNewForm: boolean = true;\r\n  isCifValid: boolean = false;\r\n  toggleClick: boolean = false;\r\n  existingCustomer: boolean;\r\n  productCustomerId: any;\r\n  isCustomerDone: boolean = false;\r\n  previousUrl: string = '';\r\n  addOnCard: boolean = false;\r\n  addFunc: boolean = true;\r\n  index: any;\r\n  entityName: string;\r\n  removedButton: boolean = false;\r\n  selectedApplicant: any = null;\r\n  cifNumberPrimary: any;\r\n  listOfAccounts: any = [];\r\n  subscription: Subscription;\r\n  dispResponse: any;\r\n  arrayOwnership: string[];\r\n  cifNumber: any;\r\n  isAllSameDigitVal: boolean = false;\r\n  loanaccountID: any;\r\n  noOfapplicants: any;\r\n  ownershipStatus: any;\r\n  isChecked: boolean;\r\n  disabled: boolean;\r\n  disabledToggle: boolean;\r\n  @Input() i: any;\r\n  customerId: any;\r\n  currencyCode: any;\r\n  Currency: any;\r\n  Currency1: any;\r\n  cardId: any;\r\n  customerName: any;\r\n  currency: any;\r\n  ResideceCurrency: any;\r\n  isResidency: boolean = false;\r\n  isCurrency: boolean = false;\r\n  addonCardValue: boolean = false;\r\n  countryCode: any;\r\n  editCountryCode: any;\r\n  birthCountryFlag: any;\r\n  isBirthCountry: boolean = false;\r\n  isCountry: boolean = false;\r\n  form: FormGroup;\r\n  isDuplicateCIF: boolean;\r\n  disableSaveBtn: boolean;\r\n  showExpiryDate: boolean;\r\n  pinCodeErr: boolean = false;\r\n  prefixFlag: boolean=false;\r\n  selectedOwnership: any = 'Self';\r\n  citizenshipFflag:boolean = false;\r\n\r\n\r\n  constructor(private router: Router, private dialog: MatDialog, private route: ActivatedRoute, private accountService: AccountService, private elRef: ElementRef,\r\n    private renderer: Renderer2, private ls: LocalStoreService, private apiService: ApiService, private formBuilder: FormBuilder, private confirmService: AppConfirmService, private cdr: ChangeDetectorRef, private appApiService: ApplicationEntryStageService,\r\n    private snack: MatSnackBar, private dataService: DataService, private urlService: UrlService, private loader: AppLoaderService) {\r\n    this.tomorrow.setDate(this.tomorrow.getDate()),\r\n      this.validDate.setDate(this.validDate.getDate());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.console.log(this.i);\r\n    this.isDuplicateCIF = false;\r\n    this.disableSaveBtn = false;\r\n    // this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.cardId = this.ls.getItem('cardId');\r\n    console.log(this.cardId)\r\n    let applicantId = this.route.snapshot.params['id'];\r\n    //console.log(\"applicantId\", applicantId);\r\n    this.isCustomerDone = JSON.parse(this.ls.getItem('Card_Customer_Done'));\r\n    this.addOnCard = this.ls.getItem('ADD_ON_CARD') || false;\r\n    console.log('ADD_ON_CARD', this.addOnCard);\r\n\r\n    this.cifNumberPrimary = this.ls.getItem(\"Card_CIF_NUM_PRIMARY\");\r\n    console.log(this.cifNumberPrimary);\r\n    \r\n    //console.log(\"check if\", this.loanaccountID, this.isCustomerDone);\r\n    this.buildCustomerForm();\r\n    this.getListOfAccounts();\r\n    this.getOwnershipValue(\"ownership\");\r\n    this.getPrefixValue(\"prefix\");\r\n    this.getGenderValue(\"gender\");\r\n    this.getResidenceDetails(\"residence\");\r\n    this.getCountryName(\"country\");\r\n    this.getAdressType(\"address_type\");\r\n    this.getAllAuthCities();\r\n    // this.getStateName(\"state\");\r\n    // this.getCityName(\"city\");\r\n    this.prefixFlag=true;\r\n    this.getDocumentType(\"document_type\");\r\n    this.getMaritalStatus(\"maritial_Status\");\r\n    // this.onFocusOutEvent('783',0);\r\n    this.isChecked = true;\r\n    this.disabled = false;\r\n    this.disabledToggle = true;\r\n\r\n    if (this.addOnCard == true) {\r\n      this.goToggle(\"event\");\r\n    }\r\n    if (this.cardId != null && this.isCustomerDone) {\r\n      this.showEditOption = true;\r\n      this.appApiService.fetchCardCustomersByCardId(this.cardId, 'cardOrigin')\r\n        .subscribe((resp: any) => {\r\n          this.buildCustomerForm(resp);\r\n        }, (err: any) => {\r\n        });\r\n      this.getListOfAccounts();\r\n      this.dataExtracted();\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.subscription = this.apiService.getaccParam.subscribe((data: any) => {\r\n        console.log(\"data::\", data);\r\n        this.dispResponse = data;\r\n        this.customerIdProofs = data.custIdProofs;\r\n        // Not Required THIS\r\n        // Comment Added By Sakthi\r\n        // If any issue reach me \r\n        // if (this.listOfAccounts.length == 0) {\r\n        //   this.populatePrimaryApplicant(data);\r\n        // } else {\r\n        //   this.fetchByCif(this.cifNumberPrimary, true);\r\n        // }\r\n      });\r\n    }\r\n    this.cardCustomerForm.get('ownership').valueChanges.subscribe(val => {\r\n      console.log(\"ownership ?\", val);\r\n      \r\n      if (val == 'Joint') {\r\n        this.cardCustomerForm.get('addOnCard').patchValue(true);\r\n        this.ls.setItem('ADD_ON_CARD', true);\r\n        this.cardCustomerForm.get('numOfApplicants').patchValue(2, { onlySelf: true, emitEvent: false });\r\n        this.cardCustomerForm.get('applicantDetails').reset();\r\n        // this.cardCustomerForm.controls['applicantDetails'].get('nationality').patchValue('')\r\n        this.disabled = false;\r\n        console.log(\"this.cardCustomerForm.get('numOfApplicants')\", this.cardCustomerForm.get('numOfApplicants'));\r\n      } else {\r\n        this.cardCustomerForm.get('addOnCard').patchValue(false);\r\n        this.ls.setItem('ADD_ON_CARD', false);\r\n        this.cardCustomerForm.get('numOfApplicants').patchValue(1, { onlySelf: true, emitEvent: false });\r\n      }\r\n    });\r\n    this.cardCustomerForm.get('numOfApplicants').valueChanges.subscribe(val => {\r\n      console.log(\"ownership ?\", val);\r\n      if (val == 1) {\r\n        this.console.log('if')\r\n        this.cardCustomerForm.get('ownership').patchValue('Self', { onlySelf: true, emitEvent: false });\r\n        this.applicant.get('existingCustomer').patchValue(true);\r\n        this.applicant.get('primaryCustomer').patchValue(true);\r\n      } else {\r\n        this.cardCustomerForm.get('ownership').patchValue('Joint', { onlySelf: true, emitEvent: false });\r\n        this.applicant.get('existingCustomer').patchValue(true);\r\n        this.applicant.get('primaryCustomer').patchValue(false);\r\n        this.disabled = false;\r\n      }\r\n    });\r\n    console.log(this.cardCustomerForm);\r\n    console.log(this.listOfAccounts);\r\n    console.log(this.selectedApplicant);\r\n    \r\n    \r\n\r\n  }\r\n\r\n  dataExtracted() {\r\n    this.ownershipStatus = this.ls.getItem('cardownership_value');\r\n    console.log(\"ownership ?\", this.ownershipStatus);\r\n    if (this.ownershipStatus == \"Self\") {\r\n      console.log(\"calling\")\r\n      this.cardCustomerForm.get('numOfApplicants').setValue(1);\r\n    } else {\r\n      this.cardCustomerForm.get('numOfApplicants').setValue(2);\r\n    }\r\n\r\n    this.noOfapplicants = this.ls.getItem('CardNoOfApplicants');\r\n    this.console.log(this.noOfapplicants)\r\n    if (this.noOfapplicants == 1) {\r\n      this.cardCustomerForm.get('ownership').setValue('Self');\r\n    } else {\r\n      this.cardCustomerForm.get('ownership').setValue('Joint');\r\n    }\r\n\r\n\r\n    this.applicant.get('idType')\r\n      .valueChanges\r\n      .pipe(pairwise())\r\n      .subscribe(([prev, next]: [any, any]) => {\r\n        this.applicant.get('idNumber').patchValue('');\r\n        this.applicant.get('expiryDate').patchValue('');\r\n      });\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.isCustomerDone = JSON.parse(this.ls.getItem('Card_Customer_Done'));\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.cifNumber = this.ls.getItem('CIF_NUM_PRIMARY');\r\n    this.console.log(\"cifNumber=\", this.cifNumber);\r\n\r\n  }\r\n  populatePrimaryApplicant(data: any) {\r\n    this.getStateName(data.country);\r\n    // this.getCityName(data.state,true);\r\n    let applicantData = {\r\n      cifNumber: this.cifNumberPrimary,\r\n      prefix: data.prefix,\r\n      existingCustomer: true,\r\n      primaryCustomer: true,\r\n      customerId: data.customerId,\r\n      firstName: data.firstName,\r\n      middleName: data.middleName,\r\n      lastName: data.lastName,\r\n      gender: data.gender,\r\n      dateOfBirth: this.convertDate(data.dateOfBirth),\r\n      placeOfBirth: data.placeOfBirth,\r\n      residenceStatus: data.residenceStatus,\r\n      nationality: data.nationality,\r\n      countryOfResidence: data.countryOfResidence,\r\n      occupationType: data.occupationType,\r\n      idType: data.idType,\r\n      idNumber: data.idNumber,\r\n      expiryDate: this.convertDate(data?.expiryDate) || '',\r\n      addressType: data.addressType,\r\n      address1: data.address1,\r\n      address2: data.address2,\r\n      city: data.city,\r\n      country: data.country,\r\n      state: data.state,\r\n      zipCode: data.zipCode,\r\n      phoneNumber: data.phoneNumber,\r\n      landlineNumber: data.landlineNumber,\r\n      primaryEmailAdress: data.primaryEmailAdress,\r\n      maritalStatus: data.maritalStatus,\r\n      birthCountry: data.birthCountry\r\n\r\n    }\r\n\r\n    this.applicant.patchValue(applicantData);\r\n  }\r\n\r\n\r\n  changeIdType(doc) {\r\n    console.log(\"doc::\", doc)\r\n    console.log(\"this.customerIdProofs::\", this.customerIdProofs)\r\n    this.showExpiryDate = true;\r\n    if (doc === 'Aadhar card') {\r\n      // this.applicant.get('expiryDate').setValue('')\r\n      console.log('if');\r\n      console.log(this.applicant.get('expiryDate'));\r\n      \r\n      \r\n      // this.applicant.get('expiryDate').clearAsyncValidators();\r\n      // this.applicant.get('expiryDate').clearValidators();\r\n      this.applicant.get('expiryDate').setValidators([Validators.nullValidator]);\r\n      this.applicant.get('expiryDate').updateValueAndValidity();\r\n      console.log( this.applicant.get('expiryDate'));\r\n      \r\n      this.showExpiryDate = false;\r\n    }\r\n    let idProofs: any = this.customerIdProofs.filter(item => {\r\n      return item.idType == doc;\r\n    })\r\n    console.log(\"idProofs::\", idProofs)\r\n    if (idProofs.length > 0) {\r\n      this.applicant.get('idNumber').patchValue(idProofs[0].idNumber);\r\n      this.applicant.get('expiryDate').patchValue(this.convertDate(idProofs[0]?.expiryDate) || '');\r\n    } else {\r\n      this.applicant.get('idNumber').patchValue('');\r\n      this.applicant.get('expiryDate').patchValue('');\r\n    }\r\n  }\r\n\r\n  isObjectEmpty(value) {\r\n    return (\r\n      Object.prototype.toString.call(value) === '[object Object]' &&\r\n      JSON.stringify(value) === '{}'\r\n    );\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  onChangeData(gender){\r\n    let prefix = this.applicant.value.prefix;\r\n    if(prefix && this.applicant.value.gender){\r\n      if ((prefix == \"Mr\" && (gender == \"Male\")) || ((prefix==\"Ms\" || prefix==\"Mrs\") && (gender == \"Female\"))) {\r\n        this.prefixFlag=true;\r\n      }  else {\r\n        this.prefixFlag=false;\r\n        this.snack.open(\"Prefix and Gender does not match!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleDetails(account) {\r\n    console.log(this.cardCustomerForm);\r\n\r\n    console.log(\"customerId incomming\", account);\r\n    this.cardCustomerForm.get('numOfApplicants').disable({ onlySelf: true, emitEvent: false });\r\n    // if (this.selectedApplicant && this.selectedApplicant._id === account._id) {\r\n    //   // Close the details\r\n    //   this.closeDetails();\r\n    //   return;\r\n    // }\r\n    let address: any;\r\n    this.console.log(account.userAddress.length);\r\n    if (account.userAddress.length > 1) {\r\n      address = account.userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n    } else {\r\n      address = account.userAddress[0];\r\n    }\r\n    this.getStateName(address.country);\r\n    \r\n\r\n     \r\n   \r\n    var idName = this.cardCustomerForm.controls['applicantDetails'].get('idType').value;\r\n    if(idName == 'Aadhar card'){\r\n      this.cardCustomerForm.controls['applicantDetails'].get('expiryDate').setValidators([Validators.nullValidator]);\r\n      this.cardCustomerForm.controls['applicantDetails'].updateValueAndValidity();\r\n    }\r\n    // this.getCityName(address.state,true);\r\n    // if(account.countryOfResidence!=null){\r\n    //   this.onSelectionCitizionship( account.countryOfResidence);\r\n    // }\r\n    // if(account.nationality!=null){\r\n    //   this.onSelectionResidance(account.nationality);\r\n    // }\r\n\r\n    let payLoadModel = {\r\n      existingCustomer: account.existingCustomer,\r\n      dependentId: account.dependentId,\r\n      primaryCustomer: account.primaryCustomer,\r\n      cifNumber: account.cifNumber,\r\n      prefix: account.prefix,\r\n      firstName: account.firstName,\r\n\r\n      middleName: account.middleName,\r\n      lastName: account.lastName,\r\n      gender: account.gender,\r\n      dateOfBirth: account.dateOfBirth,\r\n      placeOfBirth: account.placeOfBirth,\r\n      residenceStatus: account.residenceStatus,\r\n      nationality: account.nationality,\r\n      countryOfResidence: account.countryOfResidence,\r\n      occupationType: account.occupationType,\r\n      idType: account.custIdProofs[0].idType,\r\n      idNumber: account.custIdProofs[0].idNumber,\r\n      expiryDate: account.custIdProofs[0]?.expiryDate || '',\r\n      addressType: address.addressType,\r\n      address1: address.address1,\r\n      address2: address.address2,\r\n      city: address.city,\r\n      state: address.state,\r\n      country: address.country,\r\n      zipCode: address.zipCode,\r\n      phoneNumber: account.phoneNumber,\r\n      landlineNumber: account.landlineNumber,\r\n      primaryEmailAdress: account.primaryEmailAdress,\r\n      maritalStatus: account.maritalStatus,\r\n      birthCountry: account.birthCountry\r\n    };\r\n    console.log(\"account.firstName=\", account.firstName);\r\n    //console.log(\"firstName=\",this.firstName);\r\n    this.selectedApplicant = account;\r\n    console.log(\"payLoadModel\", payLoadModel);\r\n    this.applicant.patchValue(payLoadModel, { onlySelf: false, emitEvent: false });\r\n    this.onSelectionBirthCountry(payLoadModel.birthCountry)\r\n    this.onSelectionResidance(payLoadModel.countryOfResidence);\r\n    this.onSelectionCitizionship(payLoadModel.nationality);\r\n    this.getCountrySelection1(payLoadModel.country);\r\n    this.onBirthCountry(payLoadModel.birthCountry);\r\n    //this.applicant.patchValue(payLoadModel);\r\n    this.cdr.markForCheck();\r\n    console.log(this.selectedApplicant);\r\n    var cifNumValidity = this.selectedApplicant.existingCustomer;\r\n    if(cifNumValidity == true){\r\n      this.applicant.get('cifNumber').setValidators([Validators.required]);\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n     }else{\r\n      this.applicant.get('cifNumber').setValidators([Validators.nullValidator]);\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n     }\r\n  }\r\n\r\n  resetAndClose() {\r\n    this.closeDetails();\r\n  }\r\n\r\n  /**\r\n   * Close the details\r\n   */\r\n  closeDetails(): void {\r\n    this.selectedApplicant = null;\r\n    this.applicant.reset();\r\n    this.cardCustomerForm.get('numOfApplicants').enable({ onlySelf: true });\r\n\r\n  }\r\n\r\n  getListOfAccounts() {\r\n    this.isResidency = false;\r\n    this.isCurrency = false;\r\n    this.isBirthCountry = false;\r\n    this.citizenshipFflag = false;\r\n    this.isCountry = false;\r\n    this.appApiService.fetchCardCustomersByCardId(this.cardId, 'cardOrigin')\r\n      .subscribe((resp: any) => {\r\n        this.listOfAccounts = resp.status == 200 ? resp.data.map(value => ({ ...value, _id: Math.round(Math.random() * 10000000000) })) : [];\r\n        this.console.log(\" this.listOfAccounts\", this.listOfAccounts)\r\n        console.log(\"All Customer Details\", this.listOfAccounts.length);\r\n        resp.status == 200 ? this.ls.setItem(\"cId\", resp.data[0].customerId) : null;\r\n        console.log(\"Length check??\", this.listOfAccounts.length);\r\n        const requiredFields = ['prefix', 'firstName', 'lastName', 'dateOfBirth', 'gender', 'birthCountry', 'placeOfBirth', 'residenceStatus', 'countryOfResidence', 'nationality', 'maritalStatus', 'occupationType', 'phoneNumber', 'primaryEmailAdress']\r\n        const custIdProofs = ['idType', 'expiryDate', 'idNumber']\r\n        const userAddress = ['address1', 'address2', 'addressType', 'country', 'state', 'city', 'zipCode']\r\n        this.listOfAccounts.map((acc: { [x: string]: any; custIdProofs: { [x: string]: any; }; userAddress: { [x: string]: any; }; }) => {\r\n          requiredFields.map(field => {\r\n            if (acc[field] != null) {\r\n              custIdProofs.map(id => {\r\n                if (acc.custIdProofs[id] != null) {\r\n                  userAddress.map(address => {\r\n                    if (acc.userAddress[address] != null) {\r\n                      return this.selfNextBtnDisabled = false;\r\n                    } else {\r\n                      return this.selfNextBtnDisabled = true;\r\n                    }\r\n                  })\r\n                } else {\r\n                  return this.selfNextBtnDisabled = true;\r\n                }\r\n              })\r\n            } else {\r\n              return this.selfNextBtnDisabled = true\r\n            }\r\n          })\r\n          console.log('selfNextBtnDisabled ', this.selfNextBtnDisabled);\r\n\r\n        })\r\n\r\n        if (this.listOfAccounts.length == 0) {\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(true);\r\n        } else if (this.listOfAccounts.length == 1) {\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(false);\r\n        } else if (this.listOfAccounts.length >= 2) {\r\n          this.cardCustomerForm.get('ownership').patchValue('Joint');\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(false);\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            const element = resp.data[index];\r\n            console.log(\"number calling\", element)\r\n            this.cardCustomerForm.get('numOfApplicants').patchValue(resp.data[index].numOfApplicants);\r\n          }\r\n        }\r\n\r\n        this.cdr.markForCheck();\r\n\r\n        this.toggleChanges();\r\n      }, (err: any) => {\r\n\r\n      });\r\n  }\r\n\r\n  removeApplicant(account) {\r\n    this.confirmService\r\n      .confirm({ title: \"Confirm\", message: \"Are you sure want to delete?\", ok: \"Yes\", cancel: \"No\" })\r\n      .subscribe(res => {\r\n        console.log(\"res:: removed \", res);\r\n        if (res) {\r\n          this.appApiService.deleteApplicant(account.customerId, account.dependentId)\r\n            .subscribe((res: any) => {\r\n            }, (err: any) => {\r\n              console.log(err);\r\n              if (err.status == 200) {\r\n                this.snack.open(`Dependent ${account.firstName} ${err.error.text}!`, 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n                this.getListOfAccounts();\r\n              }\r\n            })\r\n        } else return;\r\n      });\r\n  }\r\n\r\n  fetchByCif(cifNumber, isExistingCustomer) {\r\n    if (this.listOfAccounts.some(acc => acc.cifNumber == cifNumber)) {\r\n      this.isDuplicateCIF = true;\r\n      this.disableSaveBtn = true;\r\n      this.snack.open('Duplicate CIF Number', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    } else {\r\n      this.isDuplicateCIF = false;\r\n      this.disableSaveBtn = false;\r\n      this.currency = null;\r\n      this.birthCountryFlag = null;\r\n      cifNumber && this.appApiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n        console.log(res)\r\n        // console.log(res.customerInfoList[0].custIdProofs[0]?.expiryDate);\r\n        if (!res) {\r\n          this.isCifValid = false;\r\n          this.snack.open('Invalid CIF Number', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.applicant.get('cifNumber').patchValue('');\r\n          return;\r\n        } else {\r\n          this.applicant.get('expiryDate').clearValidators()\r\n          this.isCifValid = true;\r\n          this.ls.setItem(\"cId\", res.customerInfoList[0].customerId);\r\n          let address: any;\r\n          this.console.log(res.customerInfoList[0].userAddress.length);\r\n          if (res.customerInfoList[0].userAddress.length > 1) {\r\n            address = res.customerInfoList[0].userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n            console.log(address)\r\n          } else {\r\n            address = res.customerInfoList[0].userAddress[0];\r\n            console.log(address)\r\n          }\r\n          let policyRenewalDate = moment(res.customerInfoList[0].custIdProofs[0]?.expiryDate).format();\r\n          this.console.log(policyRenewalDate)\r\n          this.getStateName(address.country);\r\n          // this.getCityName(address.state,true);\r\n          //display flag\r\n          this.onSelectionCitizionship1(res.customerInfoList[0].nationality);\r\n\r\n          this.onOtherSelectionResidance(res.customerInfoList[0].countryOfResidence);\r\n          console.log(res.customerInfoList[0].birthCountry);\r\n\r\n          this.onBirthCountry(res.customerInfoList[0].birthCountry);\r\n          this.getCountrySelection(address.country);\r\n\r\n\r\n\r\n          let applicantData = {\r\n            prefix: res.customerInfoList[0].prefix,\r\n            cifNumber: res.customerInfoList[0].cifNumber,\r\n            existingCustomer: isExistingCustomer,\r\n            customerId: res.customerInfoList[0].customerId,\r\n            firstName: res.customerInfoList[0].firstName,\r\n            middleName: res.customerInfoList[0].middleName,\r\n            lastName: res.customerInfoList[0].lastName,\r\n            gender: res.customerInfoList[0].gender,\r\n            dateOfBirth: this.convertDate(res.customerInfoList[0].dateOfBirth),\r\n            placeOfBirth: res.customerInfoList[0].placeOfBirth,\r\n            residenceStatus: res.customerInfoList[0].residenceStatus,\r\n            nationality: res.customerInfoList[0].nationality,\r\n            countryOfResidence: res.customerInfoList[0].countryOfResidence,\r\n            occupationType: res.customerInfoList[0].occupationType,\r\n            idType: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idType : '',\r\n            idNumber: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idNumber : '',\r\n            expiryDate: policyRenewalDate,\r\n            addressType: address.addressType,\r\n            address1: address.address1,\r\n            address2: address.address2,\r\n            city: address.city,\r\n            country: address.country,\r\n            state: address.state,\r\n            zipCode: address.zipCode,\r\n            phoneNumber: res.customerInfoList[0].phoneNumber,\r\n            landlineNumber: res.customerInfoList[0].landlineNumber,\r\n            primaryEmailAdress: res.customerInfoList[0].primaryEmailAdress,\r\n            maritalStatus: res.customerInfoList[0].maritalStatus,\r\n            birthCountry: res.customerInfoList[0].birthCountry\r\n          }\r\n          this.console.log(\"res.customerInfoList[0].firstName=\", res.customerInfoList[0].firstName);\r\n          this.customerName = res.customerInfoList[0].firstName + ' ' + res.customerInfoList[0].lastName;\r\n          // this.console.log(\"customerName:\",this.customerName);\r\n          // this.ls.setItem(\"customerName\", this.customerName);\r\n          this.applicant.patchValue(applicantData);\r\n          console.log(this.applicant);\r\n        }\r\n        this.cdr.markForCheck();\r\n      }, (err: any) => {\r\n        console.error(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  getCustomerInformationDetails() {\r\n    this.appApiService.fetchCardCustomersByCardId(this.cardId, 'cardOrigin')\r\n      .subscribe((resp: any) => {\r\n        this.buildCustomerForm(resp);\r\n      }, (err: any) => {\r\n      });\r\n  }\r\n\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DD') || null; // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n\r\n  buildCustomerForm(data?) {\r\n    this.console.log('buildCustomerForm--', data)\r\n\r\n    // this.cardCustomerForm = this.formBuilder.group({\r\n    //   productAccountId: data ? data.productAccountId : this.accountId,\r\n    //   ownership: data ? data.data[0]?.ownership || 'Self' : 'Self',\r\n    //   numOfApplicants: data ? data.data[0].numOfApplicants : 1,\r\n    //   addOnCard: data ? data.data[0].addOnCard : this.addOnCard,\r\n    //   applicantDetails: this.addCustFormGroup()\r\n    // });\r\n    this.cardCustomerForm = this.formBuilder.group({\r\n      productAccountId: [data ? data.productAccountId : this.accountId],\r\n      ownership: [data ? data.data[0]?.ownership || 'Self' : 'Self'],\r\n      numOfApplicants: [data ? data.data[0].numOfApplicants || 1 : 1],\r\n      addOnCard: [data ? data.data[0].addOnCard : this.addOnCard],\r\n      applicantDetails: this.addCustFormGroup()\r\n    });\r\n  }\r\n\r\n  toggleChanges() {\r\n    if (this.applicant.get('existingCustomer').value == true) {\r\n      this.applicant.get('cifNumber').enable();\r\n      this.applicant.get('cifNumber').setValidators([Validators.required]);\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n    }\r\n    else {\r\n      this.applicant.patchValue({ cifNumber: '' })\r\n      this.isDuplicateCIF = false;\r\n      this.applicant.get('cifNumber').disable();\r\n      this.applicant.get('cifNumber').clearValidators();\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  toggleAddForm() {\r\n    this.showNewForm = !this.showNewForm;\r\n  }\r\n\r\n  addCustFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      existingCustomer: [null, []],\r\n      primaryCustomer: [null, []],\r\n      cifNumber: [''],\r\n      customerId: [''],\r\n      dependentId: [null],\r\n      prefix: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      middleName: [''],\r\n      maritalStatus: ['', Validators.required],\r\n      birthCountry: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      placeOfBirth: ['', Validators.required],\r\n      residenceStatus: ['', Validators.required],\r\n      nationality: ['', Validators.required],\r\n      countryOfResidence: ['', Validators.required],\r\n      occupationType: ['', Validators.required],\r\n      idType: ['', Validators.required],\r\n      idNumber: ['', Validators.required],\r\n      expiryDate: [''],\r\n      addressType: ['', Validators.required],\r\n      address1: ['', [Validators.required, Validators.pattern('.*[a-zA-Z].*')]],\r\n      address2: ['', [Validators.required, Validators.pattern('.*[a-zA-Z].*')]],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      zipCode: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(10), Validators.pattern('^[0-9]{5,10}$')]],\r\n      phoneNumber: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10), Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      landlineNumber: ['', [Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      primaryEmailAdress: ['', [Validators.required, Validators.email, Validators.pattern('^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n    })\r\n  }\r\n\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  validateNumber(event) {\r\n    const keyCode = event.keyCode;\r\n\r\n    const excludedKeys = [8, 37, 39, 46];\r\n\r\n    if (!((keyCode >= 48 && keyCode <= 57) ||\r\n      (keyCode >= 96 && keyCode <= 105) ||\r\n      (excludedKeys.includes(keyCode)))) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() { return this.cardCustomerForm.controls; }\r\n  get applicantCount() { return this.f.numOfApplicants; }\r\n  get applicant() { return this.f.applicantDetails; }\r\n\r\n\r\n\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n  getMaritalStatus(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.maritalStatusList = data;\r\n    });\r\n  }\r\n\r\n  getOwnershipValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayOwnership = data;\r\n    });\r\n  }\r\n\r\n  getGenderValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayGender = data;\r\n    });\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus === 'A') {\r\n          this.arrayCountry.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getAdressType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAddressType = data;\r\n    });\r\n  }\r\n\r\n\r\n  getStateName(country,isAdd?) {\r\n\r\n    if(isAdd){\r\n      this.applicant.get('zipCode').setValue('');\r\n      this.applicant.get('state').setValue('');\r\n      this.applicant.get('city').setValue('');\r\n    }\r\n    this.applicant.get('city').setValue('');\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].countryName == country) {\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n            this.arrayState = resp\r\n          })\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  // getCityName(state: any,isEdit?) {\r\n  //   if(!isEdit){\r\n  //   this.applicant.get('city').setValue('');\r\n  //   this.applicant.get('zipCode').setValue('');\r\n  //   }\r\n  //   this.entityName = \"city\";\r\n  //   console.log(state)\r\n  //   this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n  //     this.arrayCity = data;\r\n  //     console.log(\"-->\", this.arrayCity)\r\n  //     // this.applicant.valueChanges.subscribe(data=>{\r\n  //     //   console.log('data :: before ',data.city)\r\n  //     //   data.city='';\r\n  //     //   console.log('data :: after ',data.city)\r\n  //     // })\r\n  //     // this.applicant.value.city='';\r\n  //     // this.applicant.get('city').reset();\r\n  //     console.log('this.applicant', this.applicant)\r\n  //   });\r\n  // }\r\n  getAllAuthCities(){\r\n    this.apiService.getAuthorizedCityInfo().subscribe(res => res.map(r => this.arrayCity.push(r.cityName)))\r\n    console.log(this.arrayCity);\r\n    \r\n  }\r\n  onStateChange(){\r\n    this.applicant.get('zipCode').setValue('')\r\n    this.applicant.get('city').setValue('')\r\n  }\r\n  onCityChange(){\r\n    this.applicant.get('zipCode').setValue('')\r\n  }\r\n  onBirthCountry(data: any) {\r\n    this.console.log(\"data ::\", data)\r\n    this.isBirthCountry = true;\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.birthCountryFlag = value.currencyCode.toLowerCase();\r\n      })\r\n    }\r\n  }\r\n  getCountrySelection(data: any) {\r\n    this.console.log(\"data ::\", data)\r\n    this.isCountry = true;\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.countryCode = value.currencyCode.toLowerCase();\r\n      })\r\n    }\r\n  }\r\n  getCountrySelection1(data: any) {\r\n    this.console.log(\"data ::\", data)\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.editCountryCode = value.currencyCode.toLowerCase();\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  getResidenceDetails(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayResidence = data;\r\n    });\r\n  }\r\n\r\n  getDocumentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayDocumentType = data;\r\n    });\r\n  }\r\n  onSelectionCitizionship(data: any) {\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.currencyCode = value.currencyCode.toLowerCase();\r\n        console.log(this.currencyCode);\r\n      })\r\n    }\r\n  }\r\n  onSelectionCitizionship1(data: any) {\r\n    this.citizenshipFflag = true;\r\n    console.log(\"data ::\", data)\r\n    console.log(data);\r\n    this.isCurrency = true;\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        console.log(value);\r\n\r\n        this.currency = value.currencyCode.toLowerCase();\r\n        console.log(this.currency);\r\n\r\n        console.log(this.currencyCode);\r\n      })\r\n    }\r\n  }\r\n  onSelectionBirthCountry(data: any) {\r\n    console.log('Birth Country : ', data);\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe(value => {\r\n        console.log(value.currencyCode);\r\n        this.Currency1 = value.currencyCode.toLowerCase()\r\n      })\r\n    }\r\n\r\n  }\r\n  onSelectionResidance(data: any) {\r\n    this.console.log(\"data ::\", data)\r\n    console.log(data);\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.Currency = value.currencyCode.toLowerCase();\r\n        console.log(this.Currency);\r\n\r\n      })\r\n    }\r\n  }\r\n  onOtherSelectionResidance(data: any) {\r\n    this.console.log(\"data ::\", data)\r\n    console.log(data);\r\n    this.isResidency = true;\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.ResideceCurrency = value.currencyCode.toLowerCase();\r\n\r\n        console.log(this.ResideceCurrency);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log('saveapplicant')\r\n    this.isCifValid = false;\r\n    // if (this.cardCustomerForm.invalid) {\r\n    //   console.log(\"test\");\r\n\r\n    //   return;\r\n    // }\r\n    // this.loader.open();\r\n\r\n    let payloadObj: any = {};\r\n    const control = this.cardCustomerForm.controls['applicantDetails'].value;\r\n    console.log(control);\r\n    let addressObj: any = {};\r\n    let custIdProofs: any = {};\r\n    let custIdProofsArray: any[] = [];\r\n    let addressObjArray: any[] = [];\r\n\r\n    payloadObj.customerId = this.ls.getItem(\"cId\");\r\n    payloadObj.cifNumber = control.cifNumber;\r\n    payloadObj.dependentId = control.dependentId;\r\n    payloadObj.existingCustomer = control.existingCustomer;\r\n    payloadObj.primaryCustomer = control.primaryCustomer;\r\n    payloadObj.residenceStatus = control.residenceStatus;\r\n    payloadObj.placeOfBirth = control.placeOfBirth;\r\n    payloadObj.countryOfResidence = control.countryOfResidence;\r\n    payloadObj.occupationType = control.occupationType;\r\n    payloadObj.phoneNumber = control.phoneNumber;\r\n    payloadObj.maritalStatus = control.maritalStatus;\r\n    payloadObj.birthCountry = control.birthCountry;\r\n    payloadObj.primaryEmailAdress = control.primaryEmailAdress;\r\n    payloadObj.prefix = control.prefix;\r\n    payloadObj.firstName = control.firstName;\r\n    payloadObj.middleName = control.middleName;\r\n    payloadObj.lastName = control.lastName;\r\n    payloadObj.cifNumber = control.cifNumber;\r\n    payloadObj.gender = control.gender;\r\n    payloadObj.dateOfBirth = this.convertDate(control.dateOfBirth);\r\n    payloadObj.nationality = control.nationality;\r\n    // payloadObj.customerId = 170053;\r\n    payloadObj.cardId = this.cardId;\r\n    payloadObj.accountType = \"cardOrigin\";\r\n    payloadObj.landlineNumber = control.landlineNumber;\r\n    payloadObj.ownership = this.cardCustomerForm.get('ownership').value;\r\n    payloadObj.numOfApplicants = this.cardCustomerForm.get('numOfApplicants').value;\r\n    payloadObj.addOnCard = this.addonCardValue\r\n    addressObj.address1 = control.address1;\r\n    addressObj.address2 = control.address2;\r\n    addressObj.country = control.country;\r\n    addressObj.state = control.state;\r\n    addressObj.city = control.city;\r\n    addressObj.zipCode = control.zipCode;\r\n    addressObj.addressType = control.addressType;\r\n    addressObjArray.push(addressObj);\r\n    \r\n    if(control?.expiryDate==\"Invalid date\"){\r\n      custIdProofs.expiryDate=null;\r\n    }else{\r\n      custIdProofs.expiryDate = control?.expiryDate != \"\" ? this.convertDate(control?.expiryDate) : \"\" || '';\r\n    }\r\n    \r\n    custIdProofs.idType = control.idType;\r\n    custIdProofs.idNumber = control.idNumber;\r\n    custIdProofsArray.push(custIdProofs);\r\n\r\n    payloadObj.userAddress = addressObjArray;\r\n    payloadObj.custIdProofs = custIdProofsArray;\r\n\r\n    console.log(\"payloadObj\", payloadObj);\r\n    this.isChecked = false;\r\n    this.disabled = false;\r\n    this.appApiService.createAndUpdateCardAccountants(payloadObj)\r\n      .subscribe((data: any) => {\r\n        console.log(\"data::\", data)\r\n        this.closeDetails();\r\n        this.loader.close();\r\n        console.log(\"Response of service 2 ---> \", data)\r\n        if (data.status === 200) {\r\n\r\n          this.getListOfAccounts();\r\n          this.snack.open('Customer Information Details Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          if (data.custDependentModel.primaryCustomer == true) {\r\n            if (data.custDependentModel.middleName == null) {\r\n              this.ls.setItem('primaryCustomerName', data.custDependentModel.firstName + ' ' + data.custDependentModel.lastName);\r\n            }\r\n            else {\r\n              this.ls.setItem('primaryCustomerName', data.custDependentModel.firstName + ' ' + data.custDependentModel.middleName + ' ' + data.custDependentModel.lastName);\r\n            }\r\n\r\n          }\r\n          this.cardCustomerForm.get('ownership').patchValue(data.custDependentModel.ownership);\r\n          this.cardCustomerForm.get('numOfApplicants').patchValue(data.custDependentModel.numOfApplicants);\r\n\r\n          // if (this.cardCustomerForm.get('ownership').value == 'Self') {\r\n          //   this.goToNext();\r\n          // }\r\n        }\r\n      }, (err: any) => {\r\n        console.log(err);\r\n        this.loader.close();\r\n        this.snack.open('Error', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      })\r\n  }\r\n\r\n  selectOwnershipChange(event) {\r\n    console.log(event);\r\n    this.selectedOwnership = event.value;\r\n  }\r\n\r\n  compareObjects(o1: any, o2: any): boolean {\r\n    return o1 === o2;\r\n  }\r\n\r\n  uploadImage() {\r\n    console.log(\"Upload Image\");\r\n  }\r\n\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.submitted = false;\r\n    this.cardCustomerForm.reset({});\r\n  }\r\n\r\n  onClear() {\r\n    // clear errors and reset ticket fields\r\n    this.submitted = false;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/cardInitiation`]);\r\n  }\r\n\r\n\r\n  goToNext() {\r\n    \r\n    this.ls.setItem('Card_Customer_Done', true);\r\n    console.log(this.cardCustomerForm.get('numOfApplicants').value);\r\n    \r\n    localStorage.setItem('CardNoOfApplicants', this.cardCustomerForm.get('numOfApplicants').value);\r\n    this.ls.setItem('cardownership_value', this.cardCustomerForm.get('ownership').value);\r\n    \r\n    // //  if(this.ls.getItem.accountType!=)\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/financialDetails`]);\r\n   \r\n    // this.router.navigate([`/cardaccount/applicationEntryStage/list/financialDetails`]);\r\n  }\r\n\r\n  onKeyPress1(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    } console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.listOfCustByCif = []\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.isCifValid = false;\r\n      this.applicant.reset();\r\n      this.applicant.get('cifNumber').clearValidators();\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n      this.applicant.get('existingCustomer').patchValue(true);\r\n      this.applicant.get('primaryCustomer').patchValue(true);\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => {\r\n          console.log(res);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count, number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.dataService.sendNavParam({});\r\n  }\r\n  goToggle(event: any) {\r\n    console.log(\"event\", event.checked);\r\n    this.addonCardValue = event.checked\r\n    // if(event.checked==true){\r\n    // this.ls.setItem('addonCardApplicant', 2);\r\n    // }\r\n    if (event.checked == true || this.addOnCard) {\r\n      this.ls.setItem('ADD_ON_CARD', true);\r\n      this.cardCustomerForm.get('ownership').setValue('Joint');\r\n      this.cardCustomerForm.get('numOfApplicants').patchValue(2);\r\n      this.disabled = false;\r\n    }\r\n    else if (event.checked == false) {\r\n      this.ls.setItem('ADD_ON_CARD', false);\r\n      this.cardCustomerForm.get('ownership').patchValue('Self', { onlySelf: true, emitEvent: false });\r\n      this.cardCustomerForm.get('numOfApplicants').patchValue(1, { onlySelf: true, emitEvent: false });\r\n    }\r\n\r\n  }\r\n\r\n  getCityandStateByZipcode(countryName, zipcode) {\r\n    if (countryName && zipcode.length >= 6) {\r\n      this.apiService.fetchStateCityByZipcode(countryName, zipcode).subscribe((res: any) => {\r\n        if(res){\r\n          this.applicant.get('state').setValue(res.stateName);\r\n          this.applicant.get('city').setValue(res.cityName)\r\n        }\r\n        else{\r\n          this.snack.open(\"Entered Zipcode does not exists\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n  Checkout(evt){\r\n    console.log(evt);\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/undraw_personal_information_re_vw8a.svg\" alt=\"\" class=\"w-90\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Customer Information Details</b></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <mat-progress-bar [mode]=\"determinate\" class=\"session-progress\"></mat-progress-bar> -->\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title>\r\n          <fieldset>\r\n          <legend visible=\"true\">Customer Information</legend>\r\n          </fieldset>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form *ngIf=\"cardCustomerForm\" [formGroup]=\"cardCustomerForm\" novalidate>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Ownership</mat-label>\r\n                    <mat-select formControlName=\"ownership\" [(value)]=\"selectedOwnership\" (selectionChange)=\"selectOwnershipChange($event)\" name=\"owner\"class=\"graycolor\" required>\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let ownership of arrayOwnership\" [value]=\"ownership\">\r\n                        {{ownership}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"cardCustomerForm.get('ownership').hasError('required')\">\r\n                      Ownership is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                <div class=\"pb-1\">\r\n                  <ng-container >\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Number of Applicants *</mat-label>\r\n                      <mat-select formControlName=\"numOfApplicants\" name=\"account\">\r\n                        <mat-option [value]=\"1\">1</mat-option>\r\n                        <mat-option [value]=\"2\">2</mat-option>\r\n                        <mat-option [value]=\"3\">3</mat-option>\r\n                        <mat-option [value]=\"4\">4</mat-option>\r\n                        <mat-option [value]=\"5\">5</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </ng-container>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" >\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                    <div class=\"mb-1\">\r\n                      \r\n                        <h2>Details Of the Applicant</h2>\r\n                      \r\n                    </div>\r\n              </div>\r\n             \r\n              <div fxFlex=\"100\"  fxLayoutGap=\"16px\" fxLayoutAlign=\"end end\"style=\"padding-right:15px\">\r\n              <div class=\"mb-1\">\r\n                <p class=\"m-0 text-right\">Completed {{ listOfAccounts.length }} /\r\n                  {{ cardCustomerForm.get('numOfApplicants').value }}</p>\r\n                <mat-progress-bar\r\n                  [color]=\"cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? 'primary' : 'accent'\"\r\n                  mode=\"determinate\"\r\n                  [value]=\"cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? 100 : 50\"\r\n                  class=\"rounded\" style=\"height: 5px\">\r\n                </mat-progress-bar>\r\n                <mat-hint><small> completed / total applicants </small></mat-hint>\r\n              </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                    <div class=\"pb-1\">\r\n                        <label  class=\"hint\">Add on CardHolder</label>\r\n                        \r\n                        <mat-slide-toggle  style=\"margin-left: 1cm;\" formControlName=\"addOnCard\"\r\n                        (change)=\"goToggle($event)\"\r\n                            >\r\n                        </mat-slide-toggle>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n            </div>\r\n\r\n            \r\n        \r\n            <!-- *ngIf=\"!showNewForm\" -->\r\n            <div class=\"mt-12\">\r\n              <mat-accordion multi=\"true\">\r\n                <mat-expansion-panel class=\"mb-8\" *ngFor=\"let account of listOfAccounts; let i=index\" expanded=\"true\">\r\n                  <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                      <mat-icon class=\"check-circle\">check_circle</mat-icon> <span class=\"ml-8\">Applicant {{ i+1 }}</span>\r\n                    </mat-panel-title>\r\n                  </mat-expansion-panel-header>\r\n                  <mat-card>\r\n                    <mat-card-header style=\"margin-bottom: -16px !important;\">\r\n                        <div mat-card-avatar>\r\n                          <app-avatar-photo [name]=\"account.firstName + ' ' + account.lastName\"></app-avatar-photo>\r\n                        </div>\r\n                        <mat-card-title>\r\n                          <div fxLayout=\"row\">\r\n                            <h6 class=\"m-0 mr-16\">{{ account.firstName + ' ' + account.lastName }}</h6>\r\n                            <span fxFlex></span>\r\n                            <mat-chip mat-sm-chip [color]=\"'warn'\" *ngIf=\"account.primaryCustomer\"\r\n                              [selected]=\"account.primaryCustomer\">{{account.primaryCustomer ? 'primary' : ''}}</mat-chip>\r\n                          </div>\r\n    \r\n                        </mat-card-title>\r\n                        <mat-card-subtitle><span class=\"mat-caption\">CIF\r\n                            {{ account.cifNumber != null ? '#' + account.cifNumber : '- n/a' }}</span></mat-card-subtitle>\r\n                        <div fxLayout=\"row\" fxFlex=\"1 1 0%\" fxLayoutAlign=\"end end\">\r\n                          <span class=\"group-btn-bg\">\r\n                            <ng-container *ngIf=\"selectedApplicant?._id === account._id; else showEdit\">\r\n                              <a type=\"reset\" mat-icon-button color=\"primary\" (click)=\"resetAndClose()\">\r\n                                <mat-icon>close</mat-icon>\r\n                              </a>\r\n                            </ng-container>\r\n                            <ng-template #showEdit>\r\n                              <a type=\"submit\" mat-icon-button color=\"primary\" (click)=\"toggleDetails(account)\">\r\n                                <mat-icon>edit</mat-icon>\r\n                              </a>\r\n                            </ng-template>\r\n    \r\n                            <a *ngIf=\"account.dependentId\" mat-icon-button color=\"warn\" (click)=\"removeApplicant(account)\">\r\n                              <mat-icon>delete</mat-icon>\r\n                            </a>\r\n                          </span>\r\n                        </div>\r\n                      </mat-card-header>\r\n                      <mat-card-container>\r\n                        <ng-container *ngIf=\"selectedApplicant?._id === account._id\">\r\n                          <ng-container *ngTemplateOutlet=\"detailApplicant; context: {$implicit: account}\"></ng-container>\r\n                        </ng-container>\r\n                     \r\n  \r\n                      <ng-template #detailApplicant let-account>\r\n                        <form [formGroup]=\"cardCustomerForm\" class=\"mt-32\">\r\n                          <div formGroupName=\"applicantDetails\">\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                <div class=\"pb-1\">\r\n                                  <label>Is the applicant an existing customer?</label>\r\n                                  &nbsp;&nbsp;\r\n                                  <mat-slide-toggle (change)=\"toggleChanges($event)\" formControlName=\"existingCustomer\">\r\n                                  </mat-slide-toggle>\r\n                                  <div class=\"mb-16\"></div>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Prefix *</mat-label>\r\n                                    <mat-select name=\"prefix\" formControlName=\"prefix\"\r\n                                    (selectionChange)=\"onChangeData(applicant.get('gender').value)\">\r\n                                      <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                        {{prefix}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"applicant.get('prefix').hasError('required')\">\r\n                                      Prefix is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Middle Name</mat-label>\r\n                                    <input matInput name=\"mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                                      (keypress)=\"letterOnly($event)\" />\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Date of Birth *</mat-label>\r\n                                    <input matInput name=\"date\" readonly formControlName=\"dateOfBirth\"\r\n                                      placeholder=\"Date of birth\" [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\"\r\n                                      [max]=\"maxDate\" />\r\n  \r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                    <mat-error *ngIf=\"applicant.get('dateOfBirth').hasError('required')\">\r\n                                      Date of Birth is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                  <mat-datepicker #appDatepicker></mat-datepicker>\r\n                                </div>\r\n                                <div  class=\"p-1\" >\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Birth Country</mat-label>\r\n                                        <div fxFlex=\"20\">\r\n                                          <div matPrefix>\r\n                                            <div *ngIf=\"Currency1\" class=\"currency-flag currency-flag-{{Currency1}}\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <mat-select name=\"birthCountry\" formControlName=\"birthCountry\" required\r\n                                        (selectionChange)=\"onSelectionBirthCountry($event.value)\">\r\n                                             <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                                {{country}}\r\n                                              </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Resident Status *</mat-label>\r\n                                    <mat-select name=\"residenceType\" formControlName=\"residenceStatus\">\r\n                                      <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\">\r\n                                        {{residence}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"applicant.get('residenceStatus').hasError('required')\">\r\n                                      Resident Status is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n  \r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Country of Residence</mat-label>\r\n                                    <div fxFlex=\"20\">\r\n                                      <div matPrefix>\r\n                                        <div *ngIf=\"Currency\" class=\"currency-flag currency-flag-{{Currency}}\"></div>\r\n                                      </div>\r\n                                    </div>\r\n                                    <mat-select formControlName=\"countryOfResidence\" id=\"forcitizenship\"\r\n                                    (selectionChange)=\"onSelectionResidance($event.value)\" required>\r\n                                    <mat-option disabled>--Select--</mat-option>\r\n                                    <mat-option *ngFor=\"let country of arrayCountry\"\r\n                                      [value]=\"country\">\r\n                                      {{country}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                    <mat-error *ngIf=\"applicant.get('countryOfResidence').hasError('required')\">\r\n                                      Country of Residence is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>ID Type *</mat-label>\r\n                                    <mat-select name=\"idtype\" formControlName=\"idType\"\r\n                                      (selectionChange)=\"changeIdType(applicant.get('idType').value)\">\r\n                                      <mat-option *ngFor=\"let doc of arrayDocumentType\" [value]=\"doc\">\r\n                                        {{doc}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"applicant.get('idType').hasError('required')\">\r\n                                      ID Type is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\" *ngIf=\"showExpiryDate\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>ID Type Valid Till</mat-label>\r\n                                    <input matInput name=\"date\" readonly formControlName=\"expiryDate\" [required]=\"applicant.get('idType').value != 'Aadhar card'\"\r\n                                      placeholder=\"ID Type Valid Till\" [matDatepicker]=\"appDatepicker1\" [min]=\"validDate\"/>\r\n  \r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                                    <mat-error *ngIf=\"applicant.get('expiryDate').hasError('required')\">\r\n                                      ID Type Valid Till is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                  <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                                </div>\r\n                              </div>\r\n                              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                <div class=\"pb-1\">\r\n                                  <label>Is the applicant a primary customer?</label>\r\n                                  &nbsp;&nbsp;\r\n                                  <mat-slide-toggle formControlName=\"primaryCustomer\">\r\n                                  </mat-slide-toggle>\r\n  \r\n                                  <div class=\"mb-16\"></div>\r\n                                </div>\r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>First Name *</mat-label>\r\n                                    <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                                      (keypress)=\"letterOnly($event)\" />\r\n                                    <mat-error *ngIf=\"applicant.get('firstName').hasError('required')\">\r\n                                      First Name is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Last Name *</mat-label>\r\n                                    <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                                      (keypress)=\"letterOnly($event)\" />\r\n                                    <mat-error *ngIf=\"applicant.get('lastName').hasError('required')\">\r\n                                      Last Name is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Gender *</mat-label>\r\n                                    <mat-select name=\"gender\" formControlName=\"gender\" (selectionChange)=\"onChangeData($event.value)\">\r\n                                      <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\">\r\n                                        {{gender}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"applicant.get('gender').hasError('required')\">\r\n                                      Gender is Required!\r\n                                    </mat-error>\r\n                                    <mat-hint class=\"err-msg\" *ngIf=\" !prefixFlag\">\r\n                                      &nbsp; Prefix and Gender does not match!\r\n                                   </mat-hint>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Birth Place *</mat-label>\r\n                                    <input matInput name=\"bplace\" formControlName=\"placeOfBirth\"\r\n                                      placeholder=\"Birth Place\" />\r\n                                    <mat-error *ngIf=\"applicant.get('placeOfBirth').hasError('required')\">\r\n                                      Birth Place is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1 info\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Citizenship By</mat-label>\r\n                                     <div fxFlex=\"20\">\r\n                                        <div matPrefix>\r\n                                          <div *ngIf=\"currencyCode\"\r\n                                            class=\"currency-flag currency-flag-{{currencyCode}}\"></div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div fxFlex=\"100\">\r\n                                        <mat-select formControlName=\"nationality\" id=\"forcitizenship\"\r\n                                          (selectionChange)=\"onSelectionCitizionship($event.value)\" required>\r\n                                          <mat-option disabled>--Select--</mat-option>\r\n                                          <mat-option *ngFor=\"let citizenship of arrayCountry\"\r\n                                            [value]=\"citizenship\">\r\n                                            {{citizenship}}\r\n                                          </mat-option>\r\n                                        </mat-select>\r\n                                      </div>\r\n                                    <mat-error *ngIf=\"applicant.get('nationality').hasError('required')\">\r\n                                    Citizenship By is Required!\r\n                                  </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n\r\n                                <div  class=\"p-1\" >\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Marital Status</mat-label>\r\n                                        <mat-select name=\"maritalStatus\" formControlName=\"maritalStatus\" required>\r\n                                            <mat-option *ngFor=\"let status of maritalStatusList\" [value]=\"status\">{{ status }}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Occupation Type *</mat-label>\r\n                                    <input matInput name=\"occupation\" (keypress)=\"letterOnly($event)\" formControlName=\"occupationType\"\r\n                                      placeholder=\"Occupation Type\" />\r\n                                    <mat-error *ngIf=\"applicant.get('occupationType').hasError('required')\">\r\n                                      Occupation Type is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1 info3\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Unique ID Number *</mat-label>\r\n                                    <input matInput name=\"uniqueidentity\" formControlName=\"idNumber\"\r\n                                      placeholder=\"Unique ID Number\" maxlength=\"12\"\r\n                                      pattern=\"^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$\" />\r\n                                    <mat-error\r\n                                      *ngIf=\"applicant.get('idNumber').touched && !applicant.get('idNumber').valid\">\r\n                                      <div *ngIf=\"applicant.get('idNumber').hasError('required')\">Unique ID Number is\r\n                                        Required!</div>\r\n                                      <div *ngIf=\"applicant.get('idNumber').hasError('pattern')\">This is a numeric field\r\n                                      </div>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                              </div>\r\n                            </div>\r\n                            <!-- Address Section start-->\r\n                            <mat-accordion>\r\n                              <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                                <mat-expansion-panel-header>\r\n                                  <mat-panel-title>Communication Address </mat-panel-title>\r\n                                </mat-expansion-panel-header>\r\n  \r\n                                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Address Line 1 *</mat-label>\r\n                                        <textarea matInput formControlName=\"address1\" placeholder=\"Address 1\"></textarea>\r\n                                        <mat-error *ngIf=\"applicant.get('address1').hasError('required')\">\r\n                                          Address Line 1 is Required!\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\" applicant.get('address1').touched && applicant.get('address1').hasError('pattern')\">\r\n                                          Please Enter Valid Address \r\n                                         </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Residence Type *</mat-label>\r\n                                        <mat-select name=\"addressType\" formControlName=\"addressType\">\r\n                                          <mat-option *ngFor=\"let addressType of arrayAddressType\" [value]=\"addressType\">\r\n                                            {{addressType}}\r\n                                          </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"applicant.get('addressType').hasError('required')\">\r\n                                          Residence Type is Required!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n                                    \r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Zip Code *</mat-label>\r\n                                        <input minlength=\"5\" maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"a_zip\"\r\n                                          formControlName=\"zipCode\" onlyNumber placeholder=\"Zip Code\"\r\n                                          (keyup)=\"isAllSameDigit($event)\"\r\n                                          (change)=\"getCityandStateByZipcode(applicant.get('country').value,$event.target.value)\" />\r\n                                        <mat-error *ngIf=\"applicant.get('zipCode').hasError('required') &&\r\n                                          !applicant.controls['zipCode'].valid && applicant.controls['zipCode']?.touched\">\r\n                                          Please enter valid Zip Code!(5-10 digits)\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                      <h5 *ngIf=\"isAllSameDigitVal\" style=\"color: #E74C3C;\">Please enter valid Zip Code!(5-10 digits)\r\n                                      </h5>\r\n  \r\n                                    </div>\r\n\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>City *</mat-label>\r\n                                        <mat-select name=\"city\" formControlName=\"city\" (selectionChange)=\"onCityChange()\">\r\n                                          <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city\">{{city}}\r\n                                          </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"applicant.get('city').hasError('required')\">\r\n                                          City is Required!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n  \r\n                                   \r\n  \r\n                                  </div>\r\n                                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Address Line 2 *</mat-label>\r\n                                        <textarea matInput formControlName=\"address2\" placeholder=\"Address 2\"></textarea>\r\n                                        <mat-error *ngIf=\"applicant.get('address2').hasError('required')\">\r\n                                          Address Line 2 is Required!\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\" applicant.get('address2').touched && applicant.get('address2').hasError('pattern')\">\r\n                                          Please Enter Valid Address \r\n                                         </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n  \r\n                                \r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Country *</mat-label>\r\n                                        <div fxFlex=\"20\">\r\n                                          <div matPrefix>\r\n                                            <div *ngIf=\"editCountryCode\"\r\n                                              class=\"currency-flag currency-flag-{{editCountryCode}}\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <mat-select name=\"country\" formControlName=\"country\"\r\n                                          (selectionChange)=\"getStateName($event.value,true)\"\r\n                                          (selectionChange)=\"getCountrySelection1($event.value)\">\r\n                                          <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                            {{country}}\r\n                                          </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"applicant.get('country').hasError('required')\">\r\n                                          Country is Required!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>State *</mat-label>\r\n                                        <mat-select name=\"state\" formControlName=\"state\"(selectionChange)=\"onStateChange()\"\r\n                                          >\r\n                                          <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n                                            {{state.stateName}}</mat-option>\r\n  \r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"applicant.get('state').hasError('required')\">\r\n                                          State is Required!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n  \r\n                                  \r\n  \r\n  \r\n                                  </div>\r\n                                </div>\r\n                              </mat-expansion-panel>\r\n                            </mat-accordion>\r\n                            <!-- Address Section end -->\r\n                            <!-- Contact Information -->\r\n                            <mat-accordion>\r\n                              <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                                <mat-expansion-panel-header>\r\n                                  <mat-panel-title>Contact Information </mat-panel-title>\r\n                                </mat-expansion-panel-header>\r\n  \r\n                                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Mobile Number *</mat-label>\r\n                                        <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput\r\n                                          formControlName=\"phoneNumber\" name=\"phone\" placeholder=\"Mobile Number\" />\r\n                                        <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('required')\">\r\n                                          Mobile Number is Required!\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('pattern')\">\r\n                                          Please, Enter 10 digit Mobile Number!\r\n                                        </mat-error>\r\n  \r\n                                      </mat-form-field>\r\n                                      <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('phoneNumber').value == '0000000000'\">\r\n                                        &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                                     </mat-error>\r\n                                    </div>\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>E-mail *</mat-label>\r\n                                        <input matInput name=\"email\" formControlName=\"primaryEmailAdress\"  (keypress)=\"Checkout(applicant)\"\r\n                                          placeholder=\"e-mail\" />\r\n                                        <mat-error *ngIf=\"applicant.get('primaryEmailAdress').hasError('required')\">\r\n                                          E-mail is Required!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Landline Number </mat-label>\r\n                                        <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"mobile\"\r\n                                          formControlName=\"landlineNumber\" placeholder=\"Landline Number\" />\r\n                                        <!-- <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('required')\">\r\n                                          Landline Number is Required!\r\n                                        </mat-error> -->\r\n                                        <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('pattern')\">\r\n                                          Please, Enter 10 digit Landline Number!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                      <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('landlineNumber').value == '0000000000'\">\r\n                                        &nbsp; &nbsp; Please Enter Correct Landline Number\r\n                                     </mat-error>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n  \r\n                              </mat-expansion-panel>\r\n                              <div class=\"pb-1\">\r\n                                <button mat-button color=\"primary\" [disabled]=\"applicant.invalid \" (click)=\"onSubmit()\">\r\n                                  <mat-icon></mat-icon> UPDATE APPLICANT\r\n                                </button>\r\n  \r\n                              </div>\r\n                            </mat-accordion>\r\n                            <!-- Contact Information -->\r\n                          </div>\r\n                        </form>\r\n                      </ng-template>\r\n                    </mat-card-container>\r\n                  </mat-card>\r\n                </mat-expansion-panel>\r\n              </mat-accordion>\r\n  \r\n            </div>\r\n            <!-- <h1>591 -selapp {{selectedApplicant}} -get {{cardCustomerForm.get('numOfApplicants').value}} -listacc {{listOfAccounts.length}}</h1> -->\r\n            <!-- *ngIf=\"showNewForm\" -->\r\n            <div class=\"mt-16\"\r\n              *ngIf=\"selectedApplicant == null && cardCustomerForm.get('numOfApplicants').value !== listOfAccounts.length\">\r\n              <!-- *ngIf=\"cardCustomerForm.get('numOfApplicants').value && selectedApplicant == null && cardCustomerForm.get('numOfApplicants').value !== listOfAccounts.length\"> -->\r\n              <mat-accordion>\r\n                <mat-expansion-panel class=\"mb-8 borderStyle\"\r\n                  [expanded]=\"cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? false : true\">\r\n                  <!-- [expanded]=\"cardCustomerForm.get('numOfApplicants').value && cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? false : true\"> -->\r\n                  <mat-expansion-panel-header class=\"marginData\">\r\n                    <mat-panel-title class=\"textDesign\">Create Applicant  </mat-panel-title>\r\n                  </mat-expansion-panel-header>\r\n                  <mat-divider class=\"design\"></mat-divider> \r\n                  <div formGroupName=\"applicantDetails\">\r\n                    <div class=\"pb-1\">\r\n                      <label>Is the applicant an existing customer? </label>\r\n                      &nbsp;&nbsp;\r\n                      <!-- {{ listOfAccounts.length }} -->\r\n                      <mat-slide-toggle (change)=\"toggleChanges($event)\" formControlName=\"existingCustomer\"\r\n                          ></mat-slide-toggle>\r\n                      <div class=\"mb-16\"></div>\r\n                    </div>\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                       \r\n                        <div class=\"pb-1\" >\r\n                          <div fxLayout=\"row\" fxLayoutGap=\"2px\" fxLayoutAlign=\"space-between\">\r\n                            <div fxFlex=\"100\" fxFlexAlign=\"center\"class=\"boxsize\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>CIF Number</mat-label>\r\n                                <input matInput (keypress)=\"_keyPress($event)\"\r\n                                  (change)=\"fetchByCif(applicant.get('cifNumber').value,applicant.get('existingCustomer').value)\"\r\n                                  formControlName=\"cifNumber\" name=\"cif\"\r\n                                  placeholder=\"CIF Number\"\r\n                                  (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\"\r\n                                  [readonly]=\"applicant.get('existingCustomer').value == true ? false : true\" />\r\n                                <mat-icon *ngIf=\"isCifValid\" matSuffix color=\"primary\">check_circle</mat-icon>\r\n                                <!-- <mat-icon *ngIf=\"applicant.get('existingCustomer').value && !isCifValid\" matSuffix color=\"warn\">report_problem</mat-icon> -->\r\n                                <mat-error *ngIf=\"applicant.get('cifNumber').hasError('required')  && !isCifValid\">\r\n                                  CIF Number is Required!\r\n                                </mat-error>\r\n                                <mat-hint class=\"err-msg\" *ngIf=\"isDuplicateCIF\">Duplicate CIF Number</mat-hint>\r\n                                <mat-hint class=\"hintColor\" *ngIf=\"!isCifValid && onbackSpace\">\r\n                                  Enter valid CIF Number!</mat-hint>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div>\r\n                              <mat-autocomplete class=\"card-cust-auto-cif\" #auto=\"matAutocomplete\">\r\n                                <mat-option *ngFor=\"let option of listOfCustByCif\" [value]=\"option.customerId\">\r\n                                  <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                                    <div fxFlex=\" 100\">\r\n                                      <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\" class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                                        <h3 align=\"center\" style=\"margin-top: 5px;font-size: large; color: white;\">\r\n                                          {{option?.firstName | slice:0:1 | uppercase}}\r\n                                        </h3>\r\n                                      </div>\r\n                                      <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar fxFlex=\"10\">\r\n                                        <img matListAvatar\r\n                                          style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 100%;margin-bottom: 50px;\" align=\"center\"\r\n                                          [src]=\"option?.profileImage\" alt=\"...\">\r\n                                      </div>\r\n                                      <div fxFlex=\"80\">\r\n                                        <h5 style=\"margin-bottom: 0px;\">\r\n                                          {{option?.firstName | uppercase}}\r\n                                          {{option?.middleName | uppercase}}\r\n                                          {{option?.lastName | uppercase}}\r\n                                        </h5>\r\n                                        <h6 style=\"margin-top: 0px;\" class=\"cif-0\">#{{option?.cifNumber}}</h6>\r\n                                      </div>\r\n                                      <mat-icon class=\"right-arrow1\">keyboard_arrow_right</mat-icon>\r\n                                    </div>\r\n                                  </div>\r\n                                </mat-option>\r\n                              </mat-autocomplete>\r\n                            </div>\r\n                            <!-- <div fxFlex=\"15\" fxFlexAlign=\"center\">\r\n                                <a class=\"mb-16\" mat-flat-button color=\"primary\" (click)=\"fetchByCif(applicant.get('cifNumber').value)\">fetch</a>\r\n                              </div> -->\r\n                          </div>\r\n                        </div>\r\n  \r\n     \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>First Name *</mat-label>\r\n                            <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                              (keypress)=\"letterOnly($event)\" />\r\n                            <mat-error *ngIf=\"applicant.get('firstName').hasError('required')\">\r\n                              First Name is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Last Name *</mat-label>\r\n                            <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                              (keypress)=\"letterOnly($event)\" />\r\n                            <mat-error *ngIf=\"applicant.get('lastName').hasError('required')\">\r\n                              Last Name is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Date of Birth *</mat-label>\r\n                            <input matInput name=\"date\" readonly formControlName=\"dateOfBirth\" placeholder=\"Date of birth\"\r\n                              [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\" [max]=\"maxDate\" />\r\n  \r\n                            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                            <mat-error *ngIf=\"applicant.get('dateOfBirth').hasError('required')\">\r\n                              Date of Birth is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                          <mat-datepicker #appDatepicker></mat-datepicker>\r\n                        </div>\r\n                        <div class=\"pb-1\" >\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Birth Country</mat-label>\r\n                                <div fxFlex=\"20\" [style.display]=\"birthCountryFlag == null ? 'none': ''\">\r\n                                  <div matPrefix>\r\n                                    <div *ngIf=\"isBirthCountry\" class=\"currency-flag currency-flag-{{birthCountryFlag}}\"></div>\r\n                                  </div>\r\n                                </div>\r\n                                <mat-select name=\"birthCountry\"  (selectionChange)=\"onBirthCountry($event.value)\" formControlName=\"birthCountry\" required>\r\n                                     <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                        {{country}}\r\n                                      </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Resident Status *</mat-label>\r\n                            <mat-select name=\"residenceType\" formControlName=\"residenceStatus\">\r\n                              <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\">\r\n                                {{residence}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"applicant.get('residenceStatus').hasError('required')\">\r\n                              Resident Status is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n  \r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Country of Residence</mat-label>\r\n                            <div fxFlex=\"20\">\r\n                              <div matPrefix>\r\n                                <div *ngIf=\"isResidency\" class=\"currency-flag currency-flag-{{ResideceCurrency}}\"></div>\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            <mat-select formControlName=\"countryOfResidence\" id=\"forcitizenship\"\r\n                                (selectionChange)=\"onOtherSelectionResidance($event.value)\" required>\r\n                               <mat-option disabled>--Select--</mat-option>\r\n                              <mat-option *ngFor=\"let country of arrayCountry\"\r\n                              [value]=\"country\">\r\n                              {{country}}\r\n                              </mat-option>\r\n                           </mat-select>\r\n                            <mat-error *ngIf=\"applicant.get('countryOfResidence').hasError('required')\">\r\n                              Country of Residence is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>ID Type *</mat-label>\r\n                            <mat-select name=\"idtype\" formControlName=\"idType\"\r\n                              (selectionChange)=\"changeIdType(applicant.get('idType').value)\">\r\n                              <mat-option *ngFor=\"let doc of arrayDocumentType\" [value]=\"doc\">\r\n                                {{doc}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"applicant.get('idType').hasError('required')\">\r\n                              ID Type is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                        \r\n                        <div class=\"pb-1\" *ngIf=\"showExpiryDate && applicant.get('idType').value !== 'Aadhar card'\" >\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>ID Type Valid Till </mat-label>\r\n                            <input matInput name=\"date\" readonly formControlName=\"expiryDate\"[required]=\"applicant.get('idType').value !== 'Aadhar card'\"\r\n                              placeholder=\"ID Type Valid Till\" [matDatepicker]=\"appDatepicker1\" [min]=\"validDate\"/>\r\n  \r\n                            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                            <mat-error *ngIf=\"applicant.get('expiryDate').hasError('required')\">\r\n                              ID Type Valid Till is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                          <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                        </div>\r\n                      </div>\r\n                      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                        <div class=\"pb-1\" *ngIf=\"listOfAccounts.length == 0\">\r\n                          <label>Is the applicant a primary customer?</label>\r\n                          &nbsp;&nbsp;\r\n                          <mat-slide-toggle formControlName=\"primaryCustomer\" [(ngModel)]=\"isChecked\"\r\n                            [disabled]=\"listOfAccounts.length == 0 ? true : false\">\r\n                          </mat-slide-toggle>\r\n  \r\n                          <div class=\"mb-16\"></div>\r\n                        </div>\r\n                        <div  #show>\r\n                          <label>&nbsp;</label>\r\n                        </div>\r\n                        <div>\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Customer Prefix *</mat-label>\r\n                            <mat-select name=\"prefix\" formControlName=\"prefix\"\r\n                            (selectionChange)=\"onChangeData(applicant.get('gender').value)\">\r\n                              <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                {{prefix}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"applicant.get('prefix').hasError('required')\">\r\n                              Prefix is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n         \r\n                        <div class=\"pb-1 info1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Middle Name</mat-label>\r\n                            <input matInput name=\"mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                              (keypress)=\"letterOnly($event)\" />\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Gender *</mat-label>\r\n                            <mat-select name=\"gender\" formControlName=\"gender\" (selectionChange)=\"onChangeData($event.value)\">\r\n                              <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\">\r\n                                {{gender}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"applicant.get('gender').hasError('required')\">\r\n                              Gender is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Birth Place *</mat-label>\r\n                            <input matInput name=\"bplace\" formControlName=\"placeOfBirth\" placeholder=\"Birth Place\" />\r\n                            <mat-error *ngIf=\"applicant.get('placeOfBirth').hasError('required')\">\r\n                              Birth Place is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Citizenship By</mat-label>\r\n                             <div fxFlex=\"20\" [style.display]=\"currency == null ? 'none': ''\">\r\n                                <div matPrefix >\r\n                                  <div *ngIf=\"citizenshipFflag\"\r\n                                    class=\"currency-flag currency-flag-{{currency}}\"></div>\r\n                                </div>\r\n                              </div>\r\n                              <div fxFlex=\"100\">\r\n                                <mat-select formControlName=\"nationality\" id=\"forcitizenship\"\r\n                                (selectionChange)=\"onSelectionCitizionship1($event.value)\"\r\n                                  required>\r\n                                  <mat-option disabled>--Select--</mat-option>\r\n                                  <mat-option *ngFor=\"let citizenship of arrayCountry\"\r\n                                    [value]=\"citizenship\">\r\n                                    {{citizenship}}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                              </div>\r\n                            <mat-error *ngIf=\"applicant.get('nationality').hasError('required')\">\r\n                            Citizenship By is Required!\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                        \r\n\r\n                        <div class=\"pb-1\" >\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Marital Status</mat-label>\r\n                                <mat-select name=\"maritalStatus\" formControlName=\"maritalStatus\" required>\r\n                                    <mat-option *ngFor=\"let status of maritalStatusList\" [value]=\"status\">{{ status }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Occupation Type *</mat-label>\r\n                            <input matInput name=\"occupation\"  (keypress)=\"letterOnly($event)\" formControlName=\"occupationType\"\r\n                              placeholder=\"Occupation Type\" />\r\n                            <mat-error *ngIf=\"applicant.get('occupationType').hasError('required')\">\r\n                              Occupation Type is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Unique ID *</mat-label>\r\n                            <input matInput name=\"uniqueidentity\" formControlName=\"idNumber\" placeholder=\"Unique ID\"\r\n                              maxlength=\"12\" (keypress)=\"keyPressAlphanumeric($event)\" />\r\n                            <mat-error *ngIf=\"applicant.get('idNumber').touched && !applicant.get('idNumber').valid\">\r\n                              <div *ngIf=\"applicant.get('idNumber').hasError('required')\">Unique ID is Required!</div>\r\n                              <div *ngIf=\"applicant.get('idNumber').hasError('pattern')\">This is a alphanumeric field\r\n                              </div>\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n  \r\n  \r\n                      </div>\r\n                    </div>\r\n                    <!-- Address Section start-->\r\n                    <mat-accordion>\r\n                      <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                        <mat-expansion-panel-header>\r\n                          <mat-panel-title>Communication Address </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n  \r\n                        <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Address Line 1 *</mat-label>\r\n                                <textarea matInput formControlName=\"address1\" placeholder=\"Address 1\"></textarea>\r\n                                <mat-error *ngIf=\"applicant.get('address1').hasError('required')\">\r\n                                  Address Line 1 is Required!\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\" applicant.get('address1').touched && applicant.get('address1').hasError('pattern')\">\r\n                                  Please Enter Valid Address\r\n                                 </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                           \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Residence Type *</mat-label>\r\n                                <mat-select name=\"addressType\" formControlName=\"addressType\">\r\n                                  <mat-option *ngFor=\"let addressType of arrayAddressType\" [value]=\"addressType\">\r\n                                    {{addressType}}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"applicant.get('addressType').hasError('required')\">\r\n                                  Residence Type is Required!\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                          \r\n                            \r\n                            \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Zip Code *</mat-label>\r\n                                <input minlength=\"5\" maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"a_zip\"\r\n                                  formControlName=\"zipCode\" onlyNumber placeholder=\"Zip Code\"\r\n                                  (keyup)=\"isAllSameDigit($event)\"\r\n                                   (change)=\"getCityandStateByZipcode(applicant.get('country').value,$event.target.value)\"/>\r\n                              </mat-form-field>\r\n                              <mat-error *ngIf=\"applicant.get('zipCode').hasError('required') &&\r\n                                !applicant.controls['zipCode'].valid && \r\n                                applicant.controls['zipCode']?.touched\">\r\n                                Zip code is required!\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\"applicant.get('zipCode').errors?.pattern\">Please enter valid Zip Code!(5-10 digits)</mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>City * </mat-label>\r\n                                <mat-select name=\"city\" formControlName=\"city\" (selectionChange)=\"onCityChange()\">\r\n                                  <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city\">{{city}}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"applicant.get('city').hasError('required')\">\r\n                                  City is Required!\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n \r\n  \r\n                          </div>\r\n                          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Address Line 2 *</mat-label>\r\n                                <textarea matInput formControlName=\"address2\" placeholder=\"Address 2\"></textarea>\r\n                                <mat-error *ngIf=\"applicant.get('address2').hasError('required')\">\r\n                                  Address Line 2 is Required!\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\" applicant.get('address2').touched && applicant.get('address2').hasError('pattern')\">\r\n                                  Please Enter Valid Address \r\n                                 </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Country *</mat-label>\r\n                                <div fxFlex=\"20\">\r\n                                  <div matPrefix>\r\n                                    <div *ngIf=\"isCountry\"\r\n                                      class=\"currency-flag currency-flag-{{countryCode}}\"></div>\r\n                                  </div>\r\n                                </div>\r\n                                <mat-select name=\"country\" formControlName=\"country\"\r\n                                  (selectionChange)=\"getStateName($event.value,true)\"\r\n                                  (selectionChange)=\"getCountrySelection($event.value)\">\r\n                                  <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                    {{country}}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"applicant.get('country').hasError('required')\">\r\n                                  Country is Required!\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>State *</mat-label>\r\n                                <mat-select name=\"state\" formControlName=\"state\" (selectionChange)=\"onStateChange()\"\r\n                                  >\r\n                                  <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">{{state.stateName}}\r\n                                  </mat-option>\r\n  \r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"applicant.get('state').hasError('required')\">\r\n                                  State is Required!\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n\r\n                            \r\n        \r\n  \r\n                          </div>\r\n                        </div>\r\n                      </mat-expansion-panel>\r\n                    </mat-accordion>\r\n                    <!-- Address Section end -->\r\n                    <!-- Contact Information -->\r\n                    <mat-accordion>\r\n                      <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                        <mat-expansion-panel-header>\r\n                          <mat-panel-title>Contact Information </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n  \r\n                        <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Mobile Number *</mat-label>\r\n                                <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput\r\n                                  formControlName=\"phoneNumber\" name=\"phone\" placeholder=\"Mobile Number\" />\r\n                                <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('required')\">\r\n                                  Mobile Number is Required!\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('pattern')\">\r\n                                  Please, Enter 10 digit Mobile Number!\r\n                                </mat-error>\r\n  \r\n                              </mat-form-field>\r\n                              <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('phoneNumber').value == '0000000000'\">\r\n                                &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                             </mat-error>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>E-mail *</mat-label>\r\n                                <input matInput name=\"email\" formControlName=\"primaryEmailAdress\" placeholder=\"e-mail\" (keypress)=\"Checkout(applicant)\"  />\r\n                                <mat-error *ngIf=\"applicant.get('primaryEmailAdress').hasError('required')\">\r\n                                  E-mail is Required!\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"applicant.get('primaryEmailAdress').errors?.email || applicant.get('primaryEmailAdress').errors?.pattern\">\r\n                                  \"Please Enter Valid Email\"\r\n                                </mat-error>\r\n                                <!-- <mat-error *ngIf=\"form.controls['email'].touched && form.controls['email'].errors?.required || form.controls['email'].errors?.email\">\r\n                                  \"Please Enter Valid Email\"\r\n                                </mat-error> -->\r\n                              </mat-form-field>\r\n                            </div>\r\n                          </div>\r\n                          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Landline Number </mat-label>\r\n                                <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"mobile\"\r\n                                  formControlName=\"landlineNumber\" placeholder=\"Landline Number\" />\r\n                                <!-- <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('required')\">\r\n                                  Landline Number is Required!\r\n                                </mat-error> -->\r\n                                <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('pattern')\">\r\n                                  Please, Enter 10 digit Landline Number!\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                              <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('landlineNumber').value == '0000000000'\">\r\n                                &nbsp; &nbsp; Please Enter Correct Landline Number\r\n                             </mat-error>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n  \r\n                      </mat-expansion-panel>\r\n                      <div class=\"pb-1\">\r\n  \r\n                        <!-- <button\r\n                        mat-button\r\n                        color=\"warn\"\r\n                        (click)=\"removeApplicant()\"\r\n                      >\r\n                        <mat-icon></mat-icon> RESET APPLICANT\r\n                      </button> -->\r\n                      </div>\r\n                      <div class=\"pb-1\">\r\n                        <a mat-button color=\"primary\" *ngIf=\"applicant.invalid ||isDuplicateCIF || disableSaveBtn; else openSave\" [disabled]=\"applicant.invalid||isDuplicateCIF\" >\r\n                          <mat-icon></mat-icon> SAVE APPLICANT\r\n                        </a>\r\n                        <ng-template #openSave>\r\n                          <a mat-button color=\"primary\" (click)=\"onSubmit()\">\r\n                            <mat-icon></mat-icon> SAVE APPLICANT\r\n                          </a>\r\n                        </ng-template>\r\n  \r\n                        <!-- <button\r\n                        mat-button\r\n                        color=\"warn\"\r\n                        (click)=\"removeApplicant()\"\r\n                      >\r\n                        <mat-icon></mat-icon> RESET APPLICANT\r\n                      </button> -->\r\n                      </div>\r\n  \r\n                    </mat-accordion>\r\n                    <!-- Contact Information -->\r\n                  </div>\r\n                </mat-expansion-panel>\r\n              </mat-accordion>\r\n  \r\n            </div>\r\n  \r\n            <!-- <pre><code>{{applicant.getRawValue() | json}}</code></pre> -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n              <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n                Back\r\n              </button>\r\n              <ng-container *ngIf=\"cardCustomerForm.get('ownership').value == 'Joint'; else hideBtn\">\r\n                <button mat-raised-button color=\"primary\" class=\"Nextbtn\" (click)=\"goToNext()\"\r\n                [disabled]=\"cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? 'false' : 'true'\">\r\n                <!-- [disabled]=\"cardCustomerForm.get('numOfApplicants').value && !!listOfAccounts.length && cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? 'false' : 'true'\"> -->\r\n                  Next\r\n                </button>\r\n              </ng-container>\r\n              <ng-template #hideBtn>\r\n                <button class=\"Nextbtn\" mat-raised-button color=\"primary\" (click)=\"goToNext()\"\r\n                [disabled]=\"cardCustomerForm.get('numOfApplicants').value !== listOfAccounts.length || (cardCustomerForm.invalid && (selectedApplicant !== null)) \">\r\n                <!-- [disabled]=\"cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? 'false' : 'true'\"> -->\r\n                <!-- [disabled]=\"(cardCustomerForm.get('numOfApplicants').value && !!listOfAccounts.length && (cardCustomerForm.get('numOfApplicants').value !== listOfAccounts.length)) || ((listOfAccounts.length ? (cardCustomerForm.touched && cardCustomerForm.invalid) : cardCustomerForm.invalid) && (selectedApplicant !== null))\"> -->\r\n                  Next\r\n                </button>\r\n              </ng-template>\r\n            </div>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n@Component({\r\n\r\n\r\n  selector: 'app-underwriting-stage',\r\n  templateUrl: './underwriting-stage.component.html',\r\n  styleUrls: ['./underwriting-stage.component.scss']\r\n})\r\nexport class UnderwritingStageComponent implements OnInit {\r\n  isCardCreditRatingDetails: boolean = false;\r\n  isCardQualitativeScoreboard:boolean=false;\r\n  cardId :any;\r\n  constructor(private router:Router, private ls: LocalStoreService,private dialogService : DialogService,\r\n  private accountService: AccountService,private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isCardQualitativeScoreboard=this.ls.getItem('CARD_QUALITATIVE_SCOREBOARD_DONE');\r\n    this.isCardCreditRatingDetails = this.ls.getItem('CARD_CREDIT_RATING_DONE');\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n        this.cardId = this.ls.getItem('cardId');\r\n      //  this.loanAccountId = this.ls.getItem('loanAccountId');\r\n        this.isCardQualitativeScoreboard=this.ls.getItem('CARD_QUALITATIVE_SCOREBOARD_DONE');\r\n        this.isCardCreditRatingDetails = this.ls.getItem('CARD_CREDIT_RATING_DONE');\r\n        this.cdr.markForCheck();\r\n      });\r\n  }\r\n\r\n  viewSummary(){\r\n    this.router.navigate([`cardaccount/underwritingStage/summary`]);\r\n  }\r\n\r\n  goToCreditRatingSummary(){\r\n    this.dialogService.cardAccountcreditRatingSummaryDialog();\r\n  }\r\n  openCardQualitativeDialog(){\r\n    this.dialogService.CardQualitativeSummaryDialog();\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-8\" *ngIf=\"isCardCreditRatingDetails && isCardQualitativeScoreboard;\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Underwriting Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\" (click)=\"viewSummary()\">\r\n                    View Summary\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card [ngClass]=\"{'border-size': isCardCreditRatingDetails || !isCardCreditRatingDetails  }\">\r\n        <mat-card-header>\r\n          <mat-card-title>1. Credit Rating Details</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\">\r\n            <div fxFlex=\"50%\"style=\"padding-left:17px\" class=\"txtclr\">\r\n              <p>\r\n                Credit rating details are captured here.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/Mask_Group_9.svg'\" class=\"card-img\" /> \r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\" *ngIf=\"isCardCreditRatingDetails\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\">\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n            <ng-container *ngIf=\"isCardCreditRatingDetails; else showCredit\">\r\n                <button mat-button (click)=\"goToCreditRatingSummary()\" color=\"primary\">\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n            </ng-container>\r\n            \r\n            <ng-template #showCredit>\r\n                <button mat-button [routerLink]=\"['/cardaccount/underwritingStage/credit-rating']\" color=\"primary\">\r\n                   Add Details <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n            </ng-template>\r\n          </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card [ngClass]=\"{'border-size': isCardCreditRatingDetails || !isCardCreditRatingDetails && isCardQualitativeScoreboard  }\">\r\n        <mat-card-header>\r\n          <mat-card-title>2. Qualitative Scorecard</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n            <div fxFlex=\"50%\" style=\"padding-left:17px\"class=\"txtclr\">\r\n              <p>\r\n                Charge Details are displayed.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/undraw_Scrum_board_re_wk7v.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\"  *ngIf=\"isCardQualitativeScoreboard\">\r\n            <mat-progress-bar\r\n             [color]=\"'primary'\" \r\n              mode=\"determinate\"\r\n             [value]=\"100\" class=\"rounded\" \r\n             style=\"height: 6px\">\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"isCardQualitativeScoreboard; else showQualitative\">\r\n              <button mat-button (click)=\"openCardQualitativeDialog()\" color=\"primary\">\r\n                 View Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-container>\r\n\r\n          <ng-template #showQualitative>\r\n              <!-- <button mat-button [routerLink]=\"['/cardaccount/underwritingStage/qualitative']\" \r\n              color=\"primary\" [disabled]=\"!isCardQualitativeScoreboard\"> -->\r\n              <button mat-button [routerLink]=\"['/cardaccount/underwritingStage/qualitative']\" \r\n              color=\"primary\" [disabled]=\"!isCardCreditRatingDetails\" >\r\n                Add Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-template>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>\r\n  </div>\r\n  \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { CardInitiationSummaryComponent } from './card-initiation/card-initiation-summary/card-initiation-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-application-entry-stage',\r\n  templateUrl: './application-entry-stage.component.html',\r\n  styleUrls: ['./application-entry-stage.component.scss']\r\n})\r\nexport class ApplicationEntryStageComponent implements OnInit {\r\n  isCardPrefrenceDone:boolean=false\r\n  CardInitiationScreenDone:boolean=false;\r\n  isCardInitiationDone:boolean=false;\r\n  isCardCustomerInformationScreen:boolean=false;\r\n  isCardFinancialDetailsScreen:boolean=false;\r\n  isCardAccountService:boolean=false;\r\n  isCardApplicationStageDone:boolean=false;\r\n\r\n\r\n  constructor(private router:Router,private dialogService : DialogService,private ls: LocalStoreService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isCardApplicationStageDone=this.ls.getItem('CARD_APPLICATION_ENTRY_DONE');\r\n    this.isCardPrefrenceDone=this.ls.getItem('card_prefrence_done');\r\n    this.isCardInitiationDone=this.ls.getItem('CARD_INITIATION_DONE');\r\n    this.isCardCustomerInformationScreen=this.ls.getItem('Card_Customer_Done');\r\n    this.isCardFinancialDetailsScreen=this.ls.getItem('CARD_FINANCIAL_DONE');\r\n    this.isCardAccountService=this.ls.getItem('CARD_ACC_SERVICE_DONE')\r\n  }\r\n  openCardInitiationSummary(){\r\n    this.dialogService.CardInitiationSummary();\r\n  }\r\n  goToFinancialSummarry(){\r\n    this.dialogService.CardFinancialDetailsSummary();\r\n  }\r\n  goToCustomerInfo(){\r\n    this.dialogService.CardCustomerInfoSummary();\r\n  }\r\n\r\n  goToCradAccountService(){\r\n    this.dialogService.cardAccountServiceViewSummary();\r\n  }\r\n  cardPrefrenceSummary(){\r\n    this.dialogService.cardPrefrenceSummary();\r\n  }\r\n\r\n  openCardEntryStageViewSummary(){\r\n    this.dialogService.cardAppEntryStageViewSummary();\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size1\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" *ngIf=\"isCardApplicationStageDone\" class=\"mt-8\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Entry Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button class=\"btn-color\"\r\n                 (click)=\"openCardEntryStageViewSummary()\">\r\n                    View Summary\r\n                    <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n        <!-- Card 1 start-->\r\n        <mat-card [ngClass]=\"{'border-size':isCardInitiationDone || !isCardInitiationDone }\">\r\n            <mat-card-header>\r\n                <mat-card-title style=\"font-size: 16px\">1. Card Initiation</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" style=\"font-size: 11px\">\r\n                    <div fxFlex=\"50%\" class=\"notActive\" >\r\n                        <p class=\"text-align\">\r\n                            All the primary information about the customer is captured.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img src=\"assets/images/cardInitiation.png\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n                <div class=\"mb-1\" *ngIf=\"isCardInitiationDone\">\r\n                    <mat-progress-bar\r\n                      [color]=\"'primary'\"\r\n                      mode=\"determinate\"\r\n                      [value]=\"100\"\r\n                      class=\"rounded\"\r\n                      style=\"height: 6px\">\r\n                    </mat-progress-bar>\r\n                    <p class=\"m-0 text-right\">Completed</p>\r\n                    <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n                  </div>\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            \r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardInitiationDone\">\r\n                    <button\r\n                  mat-button\r\n                  (click)=\"openCardInitiationSummary()\"\r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n      \r\n                <ng-container *ngIf=\"!isCardInitiationDone\" >\r\n                    <button \r\n                  mat-button\r\n                  [routerLink]=\"['/cardaccount/applicationEntryStage/list/cardInitiation']\" \r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container >\r\n            \r\n                \r\n              </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n    \r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n        <!-- Card 1 start-->\r\n        <mat-card [ngClass]=\"{'border-size':isCardCustomerInformationScreen || !isCardCustomerInformationScreen && isCardInitiationDone }\">\r\n            <mat-card-header>\r\n                <mat-card-title style=\"font-size: 16px\">2. Customer Information Details</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" style=\"font-size: 11px\">\r\n                    <div fxFlex=\"50%\" class=\"notActive\" >\r\n                        <p class=\"text-align\">\r\n                            All the primary information about the customer is captured.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/undraw_personal_information_re_vw8a.svg.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n                <div class=\"mb-1\" *ngIf=\"isCardCustomerInformationScreen\">\r\n                    <mat-progress-bar\r\n                      [color]=\"'primary'\"\r\n                      mode=\"determinate\"\r\n                      [value]=\"100\"\r\n                      class=\"rounded\"\r\n                      style=\"height: 6px\">\r\n                    </mat-progress-bar>\r\n                    <p class=\"m-0 text-right\">Completed</p>\r\n                    <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n                  </div>\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n          \r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardCustomerInformationScreen; else showCustomer\">\r\n                    <button\r\n                  mat-button\r\n                 (click)=\"goToCustomerInfo()\"\r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n      \r\n                <ng-template #showCustomer>\r\n                    <button \r\n                  mat-button\r\n                  [routerLink]=\"['/cardaccount/applicationEntryStage/list/customerInformation']\"\r\n                  color=\"primary\"\r\n                  [disabled]=\"!isCardInitiationDone\"\r\n                  class=\"add-align\"\r\n                >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template>\r\n            \r\n                \r\n              </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- card 2 start-->\r\n        <mat-card [ngClass]=\"{'border-size':isCardFinancialDetailsScreen || !isCardFinancialDetailsScreen && isCardCustomerInformationScreen }\">\r\n            <mat-card-header>\r\n                <mat-card-title style=\"font-size: 16px\">3. Financial Details</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" style=\"font-size: 11px\">\r\n                    <div fxFlex=\"50%\" class=\"notActive\" >\r\n                        <p class=\"text-align\">\r\n                            Financial Details such as Monthly Income, Monthly Expenses, Liabilities are captured.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"\r\n                  'assets/images/svg/undraw_Finance_re_gnv2.svg'\r\n                \" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n                <div class=\"mb-1\" *ngIf=\"isCardFinancialDetailsScreen\">\r\n                    <mat-progress-bar\r\n                      [color]=\"'primary'\"\r\n                      mode=\"determinate\"\r\n                      [value]=\"100\"\r\n                      class=\"rounded\"\r\n                      style=\"height: 6px\">\r\n                    </mat-progress-bar>\r\n                    <p class=\"m-0 text-right\">Completed</p>\r\n                    <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n                  </div>\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardFinancialDetailsScreen; else showFinancial\">\r\n                    <button\r\n                  mat-button\r\n                  (click)=\"goToFinancialSummarry()\"\r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n      \r\n                <ng-template #showFinancial>\r\n                    <button \r\n                  mat-button\r\n                  [routerLink]=\"['/cardaccount/applicationEntryStage/list/financialDetails']\"\r\n                  color=\"primary\"\r\n                  [disabled]=\"!isCardCustomerInformationScreen\"\r\n                  class=\"add-align\"\r\n                >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template>\r\n            \r\n                \r\n              </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 2 end-->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- card 2 start-->\r\n        <mat-card [ngClass]=\"{'border-size':isCardPrefrenceDone || !isCardPrefrenceDone && isCardFinancialDetailsScreen }\">\r\n            <mat-card-header>\r\n                <mat-card-title style=\"font-size: 16px\">4. Card Preferences</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" style=\"font-size: 11px\">\r\n                    <div fxFlex=\"50%\" class=\"notActive\" >\r\n                        <p class=\"text-align\">\r\n                            Card related information are added.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"\r\n                  'assets/images/svg/Mask_Group_1.svg'\r\n                \" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n                <div class=\"mb-1\" *ngIf=\"isCardPrefrenceDone\">\r\n                    <mat-progress-bar\r\n                      [color]=\"'primary'\"\r\n                      mode=\"determinate\"\r\n                      [value]=\"100\"\r\n                      class=\"rounded\"\r\n                      style=\"height: 6px\">\r\n                    </mat-progress-bar>\r\n                    <p class=\"m-0 text-right\">Completed</p>\r\n                    <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n                  </div>\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardPrefrenceDone; else showCardPrefrence\">\r\n                    <button\r\n                  mat-button\r\n                  (click)=\"cardPrefrenceSummary()\"\r\n              \r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n      \r\n                <ng-template #showCardPrefrence>\r\n                    <button \r\n                  mat-button\r\n                  [routerLink]=\"[ '/cardaccount/applicationEntryStage/list/cardPrefrence' ]\"\r\n                  color=\"primary\"\r\n                  [disabled]=\"!isCardFinancialDetailsScreen\"\r\n                  class=\"add-align\"\r\n                >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template>\r\n            \r\n                \r\n              </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 2 end-->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- card 2 start-->\r\n        <mat-card [ngClass]=\"{'border-size':isCardAccountService || !isCardAccountService && isCardPrefrenceDone }\">\r\n            <mat-card-header>\r\n                <mat-card-title style=\"font-size: 16px\">5. Account Services</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" style=\"font-size: 11px\">\r\n\r\n                    <div fxFlex=\"50%\" class=\"notActive\" >\r\n\r\n                        <p class=\"text-align\">\r\n                            Account services preferences like account statement frequency and mode are captured.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"\r\n                  'assets/images/svg/undraw_opinion_dxp8.svg'\r\n                \" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n                <div class=\"mb-1\" *ngIf=\"isCardAccountService\">\r\n                    <mat-progress-bar\r\n                      [color]=\"'primary'\"\r\n                      mode=\"determinate\"\r\n                      [value]=\"100\"\r\n                      class=\"rounded\"\r\n                      style=\"height: 6px\">\r\n                    </mat-progress-bar>\r\n                    <p class=\"m-0 text-right\">Completed</p>\r\n                    <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n                  </div>\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n\r\n                <ng-container *ngIf=\"isCardAccountService; else showService\">\r\n                    <button\r\n                  mat-button\r\n                  (click)=\"goToCradAccountService()\"\r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n      \r\n                <ng-template #showService>\r\n                    <button \r\n                  mat-button\r\n                  [routerLink]=\"['/cardaccount/applicationEntryStage/list/accountServices']\"\r\n                  color=\"primary\"\r\n                  [disabled]=\"!isCardPrefrenceDone\"\r\n                  class=\"add-align\"\r\n                >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template>\r\n            \r\n                \r\n              </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 2 end-->\r\n    </div>\r\n    <!-- <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <mat-card>\r\n            <mat-card-header>\r\n                <mat-card-title>5. Add on Card Holder Details</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> \r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                    <div fxFlex=\"50%\">\r\n                        <p>Details such as name, relation, address of the add on card holder is captured.</p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/Mask Group 5.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n                <!--end::Progress\r\n            </mat-card-content>\r\n            <!--begin:: Card body\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n\r\n                <button mat-button color=\"primary\" [routerLink]=\"[ '/loan/account/customer-information' ]\">\r\n                    View Details <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div> -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { QualitativeScoreboardSummary } from 'app/shared/models/qualitativeScoreboardSummary';\r\nimport { AssessmentReportSummary } from 'app/shared/models/AssessmentReportSummary';\r\nimport { UrlService } from 'app/views/home/url.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-underwriting-stage-summary',\r\n  templateUrl: './underwriting-stage-summary.component.html',\r\n  styleUrls: ['./underwriting-stage-summary.component.scss']\r\n})\r\nexport class UnderwritingStageSummaryComponent implements OnInit {\r\n\r\n  previousUrl: string = '';\r\n  accountId: any;\r\n  qualitativeScoreboardSummary: QualitativeScoreboardSummary;\r\n  assessmentReportSummary: AssessmentReportSummary;\r\n  imagePath = \"assets/images/assesment.png\";\r\n  cardId: any;\r\n  customerName: any;\r\n  creditRatingValues: any;\r\n  constructor(\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService,\r\n    private urlService: UrlService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem('cardId');\r\n    \r\n    this.getAllData(this.cardId);\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n\r\n  }\r\n\r\n  getAllData(id) {\r\n    this.apiService.getCardQualitativeScorecardDetails(this.cardId).subscribe((response) => {\r\n      this.qualitativeScoreboardSummary = response;\r\n      console.log(this.qualitativeScoreboardSummary);\r\n       console.log(this.qualitativeScoreboardSummary.scoreCardMapping);\r\n    });\r\n   \r\n    this.apiService.getCardCreditRatingDetails(id).subscribe((creditDetails: any) => {\r\n      console.log(creditDetails.customerName);\r\n      this.customerName=creditDetails.customerName;\r\n      this.creditRatingValues=creditDetails;\r\n      });\r\n    }\r\n  \r\n    goBack() {\r\n      this.router.navigate([`cardaccount/underwritingStage/list`]);\r\n    }\r\n  \r\n    done() {\r\n      // this.router.navigate([`/cardaccount/assessmentStage/list/${this.cardId}`]);\r\n      this.router.navigate([\"/cardaccount/assessmentStage/list\"]);\r\n    }\r\n  \r\n\r\n}\r\n","<div fxLayout=\"column\" style=\"padding: 3rem 0rem;\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\"\r\n    class=\"full-width\">\r\n    <div>\r\n        <img [src]=\"imagePath\">\r\n    </div>\r\n    <div>\r\n        <h2 style=\"font-size: 24px;\">Application Underwriting stage Summary</h2>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row\">\r\n    <h4 class=\"paraFont\">Credit Score Details</h4>\r\n</div>\r\n<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" >\r\n                         <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                <ng-container>\r\n                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint class=\"headingText\">CustomerName</mat-hint>\r\n                                                <br>\r\n                                         <mat-hint class=\"valueText\">{{customerName}}</mat-hint>\r\n                                    </div>\r\n                                 </ng-container>\r\n                            </div>\r\n                         </div>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <div *ngFor=\"let credit of creditRatingValues.agencyRating\">\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\" >\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                     <ng-container>\r\n                                            <div fxFlex=\"5%\" fxFlex.xs=\"100%\" class=\"inputCardclass\" fxLayoutAlign=\"end start\">\r\n                                                <!-- <div >\r\n                                                    <app-avatar-photo [name]=\"customer?.firstName + ' ' + customer?.lastName\"></app-avatar-photo> \r\n                                                </div> -->\r\n                                             </div>\r\n                                            <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <h3>Score</h3><br>\r\n                                                        <div fxLayout=\"column\" fxLayoutGap=\"10%\" fxLayoutAlign=\"space-between none\">\r\n                                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                            <ng-container>\r\n                                                                <div fxFlex=\"20%\" fxFlex.xs=\"50%\">\r\n                                                                    <mat-hint class=\"headingText\">Agency</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{credit.agencyName}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"20%\" fxFlex.xs=\"50%\">\r\n                                                                    <mat-hint class=\"headingText\">Score</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{credit.ratings}}</mat-hint>\r\n                                                                </div>   \r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                        </div><br>\r\n                                                        <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                                <ng-container>\r\n                                                                    <div fxFlex=\"20%\" fxFlex.xs=\"50%\">\r\n                                                                        <mat-hint class=\"headingText\">Remarks</mat-hint><br>\r\n                                                                        <mat-hint class=\"valueText\">{{credit.remarks}} </mat-hint>\r\n                                                                    </div>\r\n                                                                </ng-container>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                    </ng-container>\r\n                                </div>    \r\n                            </div>\r\n                        </div>\r\n                     </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> \r\n<br>\r\n\r\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"10px\" class=\"full-width\">\r\n   \r\n    <div fxFlex=\"100%\" fxFlex.xs=\"100%\" class=\"full-width\"\r\n        style=\"border:1px solid rgb(249 245 245);border-radius: 5px;\"><!--- *ngIf=\"qualitativeScoreboardSummary !=null\"-->\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"space-evenly start\" class=\"full-width\">\r\n            <div class=\"full-width\">\r\n                <div fxLayout=\"row wrap\" class=\"full-width\" style=\"padding:2rem;\">\r\n                    <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                        <div>\r\n                            <span style=\"color: #102245;opacity: 64%; font-size:medium;font-family: sans-serif;\">ScoreCard Id</span><br>\r\n                            <div style=\"padding-top: 5px;\">\r\n                                <span style=\"font-size: medium;\">ID #{{qualitativeScoreboardSummary?.scoreCardId}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                        <div class=\"mt-32\">\r\n                            <span style=\"color: #102245;opacity: 64%; font-size: medium;font-family: sans-serif;\">Number Of Applicants</span><br>\r\n                            <div style=\"padding-top: 5px;\">\r\n                                <span style=\"font-size: medium;\">{{qualitativeScoreboardSummary?.numberOfApplicant}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         \r\n            <div class=\"full-width\">\r\n                <mat-divider style=\"background-color: white\"></mat-divider>\r\n            </div>\r\n          \r\n           \r\n            <div fxLayout=\"row wrap\" style=\"color: #102245;opacity: 64%; font-size: medium;font-family: sans-serif; padding: 0rem 1rem;\" \r\n            class='qtnhd'>Questions</div> \r\n          \r\n            <div class=\"full-width\" style=\"padding: 0rem 2rem;\">             \r\n              <div fxLayout=\"row wrap\" class=\"full-width\" >\r\n                <div *ngFor='let item of qualitativeScoreboardSummary?.scoreCardMapping;let k=index'>  \r\n                  <div class=\"applicanthd\" \r\n                    style=\"font-weight: bold;font-family: sans-serif;\">Applicant {{item.applicantId}}</div>\r\n                    <div class=\"row wrap\">\r\n                      <div fxLayout=\"row wrap\" class=\"qtncard row\"\r\n                       fxLayoutGap=\"30px\" fxFlex=\"50%\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\" class=\"full-width\"\r\n                       *ngFor='let item of qualitativeScoreboardSummary?.scoreCardMapping[k].scoreCardDetails;let i=index'>\r\n                       <mat-card class=\"qtncard1 row\" style=\" justify-content:space-evenly;\">\r\n                       <div>{{i+1}}.{{item.scorecardQuestion}}</div>\r\n                       <div class='qtnval' style=\"opacity: 80%\">{{item.scorecardAnswer}}</div>\r\n                       </mat-card>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          \r\n        </div>\r\n    </div>\r\n   \r\n</div>\r\n\r\n<div >\r\n    <button mat-stroked-button color=\"primary\"\r\n            style=\"border-radius: 20px;width: 10rem;height: 2.5rem;font-family: sans-serif;\"\r\n            (click)=\"goBack()\"\r\n    >\r\n        Back\r\n    </button>\r\n    <span fxFlex></span>\r\n    <button\r\n        style=\"border-radius: 20px;width: 10rem;height: 2.5rem;background-color: #456EFE; float: right; color: white; font-family: sans-serif;\"\r\n        mat-raised-button type=\"button\" (click)=\"done()\"\r\n    >\r\n        Done\r\n    </button>   \r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-supervisor-approval-stage',\r\n  templateUrl: './supervisor-approval-stage.component.html',\r\n  styleUrls: ['./supervisor-approval-stage.component.scss']\r\n})\r\nexport class SupervisorApprovalStageComponent implements OnInit {\r\n  isApprovalDetails: boolean= false;\r\n  isCardSupervisorApprovalDone:boolean=false;\r\n\r\n  constructor(private router: Router,private dialogService : DialogService,private ls: LocalStoreService,\r\n   ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isApprovalDetails = this.ls.getItem('CARD_APPROVAL_DONE');\r\n    this.isCardSupervisorApprovalDone=this.ls.getItem('CARD_SUPERVISOR_DONE');\r\n    console.log(\"\", this.isApprovalDetails)\r\n  }\r\n\r\n  addDetails(){\r\n    console.log(\"calling\")\r\n    this.router.navigate([\"/cardaccount/SupervisorApprovalStage/list/approvalDetails\"]);\r\n  }\r\n  openApprovalSummary(){\r\n    this.dialogService.CardApprovalSummary();\r\n  }\r\n  openViewApprovalSummary(){\r\n    this.dialogService.CardApprovalViewSummary();\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size1\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-8\" *ngIf=\"isCardSupervisorApprovalDone\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Entry Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\"(click)=\"openViewApprovalSummary()\">\r\n                    View Summary\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n        <!-- Card 1 start-->\r\n        <mat-card>\r\n            <mat-card-header>\r\n                <mat-card-title>1.Approval Details</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                    <div fxFlex=\"50%\"class=\"txtclr\">\r\n                        <p>\r\n                            Approval Details are captured.</p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/MaskGroup_16.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n                <div class=\"mb-1\" *ngIf=\"isApprovalDetails\">\r\n                    <mat-progress-bar\r\n                      [color]=\"'primary'\"\r\n                      mode=\"determinate\"\r\n                      [value]=\"100\"\r\n                      class=\"rounded\"\r\n                      style=\"height: 6px\">\r\n                    </mat-progress-bar>\r\n                    <p class=\"m-0 text-right\">Completed</p>\r\n                    <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n                  </div>\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container>\r\n                    <button mat-button color=\"primary\" *ngIf=\"!isApprovalDetails\"  (click)=\"addDetails()\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n                <ng-container>\r\n                    <button mat-button color=\"primary\" *ngIf=\"isApprovalDetails\" (click)=\"openApprovalSummary()\">\r\n                        View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n\r\n                <!-- <ng-template #showLoan>\r\n                    <button mat-button color=\"primary\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template> -->\r\n\r\n\r\n            </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n\r\n","import { Component, ElementRef, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { home } from 'app/shared/models/cardPrefrences';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-prefrences',\r\n  templateUrl: './card-prefrences.component.html',\r\n  styleUrls: ['./card-prefrences.component.scss']\r\n})\r\nexport class CardPrefrencesComponent implements OnInit {\r\n  //@ViewChildren(\"selectLang\") langSelects: QueryList<ElementRef<HTMLSelectElement>>;\r\n  \r\n  home=new home();\r\n  cardPrefrenceForm: FormGroup;\r\n  arraylimitType: string[] = [];\r\n  selectedOptions2: string[] = [];\r\n  cardId:number;\r\n  cardDetails: string[]=[];\r\n  isdailylimit:boolean=false;\r\n  isLimitTransaction:boolean=false;\r\n  limiPrTrn: Number;\r\n  limitDaily: number;\r\n  isGreaterValue:boolean=false;\r\n  selectedDocumentTypes2: string[] = [];\r\n  cardPrefrenceOnLoad:any = [];\r\n  isRowEnds:boolean=false;\r\n  islimitType:boolean=false;\r\n  isDLReadOnly: boolean = true;\r\n  isLPTReadOnly:boolean=true;\r\n\r\n  \r\n  constructor(  private fb: FormBuilder, private router: Router, private apiService:ApiService, private snack: MatSnackBar, private ls: LocalStoreService,\r\n    private accountService : AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.arraylimitType=[\"Domestic Limit\",\"International Limit\",\"Daily Limit\",\"ATM limit\",\"POS Limit\",\"Internet Limit\"];\r\n    //this.newArray=this.arraylimitType\r\n    this.buildCardPrefrenceForm();\r\n    let cardPrefrenceScreen: boolean = JSON.parse(this.ls.getItem('card_prefrence_done'));\r\n    if (this.cardId!=null && cardPrefrenceScreen) {\r\n      this.gettingCardPrefrenceDetail();\r\n    }\r\n    else{\r\n      console.log(\"\");\r\n      //this.buildMandateForm();\r\n    }\r\n    \r\n   \r\n  }\r\n  gettingCardPrefrenceDetail() {\r\n    this.apiService.getCardPrefrence(this.cardId).subscribe((cardDetails) => {\r\n      console.log(cardDetails);\r\n      \r\n        this.cardPrefrenceOnLoad = cardDetails;\r\n        if(cardDetails){\r\n          this.isdailylimit=true;\r\n          this.isLimitTransaction=true;\r\n          this.islimitType=true;\r\n        }\r\n        else{\r\n          this.isdailylimit=false;\r\n          this.isLimitTransaction=false;\r\n        }\r\n        for(let i=0; i<=this.cardPrefrenceOnLoad.length-1;i++){\r\n          this.selectedOptions2.push(this.cardPrefrenceOnLoad[i].limitType);\r\n        }\r\n        console.log(\"All Transaction Details\", cardDetails);\r\n        this.buildCardPrefrenceForm(cardDetails, true);\r\n      });\r\n  }\r\n  buildCardPrefrenceForm(data?, isResponse?:boolean) {\r\n    this.cardPrefrenceForm = this.fb.group({\r\n      cardPrefrences: this.fb.array([this.addMFormGroup()])\r\n    });\r\n    if(isResponse){\r\n      this.addMandateToFormGroup(data);\r\n      console.log(data);\r\n      for(let i=0;i<=data.length-1;i++){\r\n        data[i].dailyLimit=this.addComa(data[i].dailyLimit);\r\n        data[i].limitPerTransaction=this.addComa(data[i].limitPerTransaction);\r\n      }\r\n      this.m.patchValue(data);\r\n    }\r\n  }\r\n  addMandateToFormGroup(data?) {\r\n    const numberOfItems = data.length;\r\n    for (let index = 1; index < numberOfItems; index++) {\r\n      this.m.push(this.fb.group({\r\n        limitType: [''],\r\n      dailyLimit: [''],\r\n      limitPerTransaction: [''],\r\n      }));\r\n    }\r\n    this.isdailylimit=true;\r\n  }\r\n  get f() { return this.cardPrefrenceForm.controls; }\r\n  get m() { return this.f.cardPrefrences as FormArray; }\r\n  newcard(){\r\n\r\n  }\r\n  addMFormGroup(): FormGroup {\r\n    \r\n    return this.fb.group({\r\n      limitType: [''],\r\n      dailyLimit: ['',[ Validators.maxLength(18),Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      limitPerTransaction: ['', [ Validators.maxLength(18),Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n    });\r\n    \r\n  }\r\n \r\n  addMandate(){\r\n    this.isdailylimit=false;\r\n    this.islimitType=false;\r\n    this.isLimitTransaction=false;\r\n    this.isLPTReadOnly=true;\r\n    this.isDLReadOnly=true;\r\n console.log(\"this.selectedOptions2\",this.selectedOptions2);\r\nthis.m.push(this.fb.group({\r\n limitType: [''],\r\n dailyLimit: [''],\r\n limitPerTransaction: [''],\r\n}));\r\n  }\r\n  \r\n  addComa(num1){\r\n    console.log(num1)\r\n  \r\n    let finalNum = num1.toString().replace(/,/g, '').split(\".\");\r\n    finalNum[0] = finalNum[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    let final = finalNum.join(\".\");\r\n    return final;\r\n\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n    this.isdailylimit=true;\r\n    this.isLPTReadOnly=false\r\n   }\r\n   keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n    this.isLimitTransaction=true;\r\n   }\r\n   OnInput(event: any, flag,k) {\r\n      this.limiPrTrn = event.target.value;\r\n      var dailyNum=this.removeComma(this.cardPrefrenceForm.value.cardPrefrences[k].dailyLimit);\r\n      var LimitTxn=this.removeComma(this.limiPrTrn);\r\n      if(!this.limiPrTrn){\r\n        this.isLimitTransaction=false;\r\n      }else{\r\n        this.isLimitTransaction=true;\r\n      }\r\n    \r\n    if( Number(LimitTxn) > Number(dailyNum)){\r\n      this.isGreaterValue=true;\r\n    }\r\n    else if( Number(LimitTxn) < Number(dailyNum)){\r\n      this.isGreaterValue=false;\r\n    }\r\n    else{\r\n      this.isGreaterValue=false;\r\n    }\r\n    let payload={\r\n      limitPerTransaction:this.addComa(this.limiPrTrn)\r\n    }\r\n    this.m.controls[k].patchValue(payload);\r\n\r\n\r\n  //  this.cardPrefrenceForm.get('limitPerTransaction').setValue(this.addComa( this.limiPrTrn ));\r\n  //console.log( this.addComa( this.limiPrTrn ));\r\n  //this.m.controls[k].value.limitPerTransaction.setValue( this.addComa( this.limiPrTrn ))\r\n\r\n  }\r\n  \r\n  OnInput1(event: any, flag,k) {\r\n      this.limitDaily = event.target.value;\r\n      if(!this.limitDaily){\r\n        this.isdailylimit=false;\r\n      }else{\r\n        this.isdailylimit=true;\r\n      }\r\n      let payload=\r\n      {\r\n        dailyLimit:this.addComa(this.limitDaily)\r\n      }\r\n      this.m.controls[k].patchValue(payload);\r\n  }\r\n  onclick1(k){\r\n    this.islimitType=true;\r\n    this.isLimitTransaction=true;\r\n    this.isdailylimit=true;\r\n    this.isRowEnds=false;\r\n    this.isLPTReadOnly=false;\r\n    this.isDLReadOnly=false;\r\n    const control = <FormArray>this.cardPrefrenceForm.controls['cardPrefrences'];\r\n    control.removeAt(k);\r\n    if(this.cardPrefrenceOnLoad==undefined){\r\n      console.log(\"deleted\")\r\n    }\r\n    else if(this.cardPrefrenceOnLoad[k]!=undefined){\r\n    let id = this.cardPrefrenceOnLoad[k].preferenceId;\r\n    this.apiService.deleteCardPrefrence(id)\r\n    .subscribe(data => { \r\n      \r\n    },\r\n    \r\n      err=>{\r\n        if (err.status == 200) {\r\n          this.snack.open('Record Deleted Successfully', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n\r\n\r\n    }\r\n    )}\r\n\r\n      this.selectedOptions2.splice(k,1);\r\n      console.log(\"console.log(this.selectedOptions2);\",this.selectedOptions2);\r\n      this.isdailylimit=true;\r\n   \r\n  }\r\n\r\n  onSubmit(){\r\n    var data :any;\r\n   var payload:any[]=[];\r\n   this.cardPrefrenceForm.value.cardPrefrences.cardId=this.cardId;\r\n   if(this.cardPrefrenceOnLoad){\r\n    for(let i =this.cardPrefrenceOnLoad.length;i<=this.cardPrefrenceForm.value.cardPrefrences.length-1;i++){\r\n      data=this.cardPrefrenceForm.value.cardPrefrences[i];\r\n      let newTransaction=Object.assign({},data,{cardId: this.cardId});\r\n      newTransaction.dailyLimit=parseInt(this.removeComma(newTransaction.dailyLimit));\r\n      newTransaction.limitPerTransaction=parseInt(this.removeComma(newTransaction.limitPerTransaction));\r\n      payload.push(newTransaction);\r\n      \r\n    }\r\n   }else{\r\n    for(let i =0;i<this.cardPrefrenceForm.value.cardPrefrences.length;i++){\r\n      data=this.cardPrefrenceForm.value.cardPrefrences[i];\r\n      let newTransaction=Object.assign({},data,{cardId: this.cardId});\r\n      newTransaction.dailyLimit=parseInt(this.removeComma(newTransaction.dailyLimit));\r\n      newTransaction.limitPerTransaction=parseInt(this.removeComma(newTransaction.limitPerTransaction));\r\n      payload.push(newTransaction);\r\n      \r\n    }\r\n   }\r\n    \r\n    this.apiService.uploadCardPrefrence(payload).subscribe(data => {\r\n      console.log(\"data\", data);\r\n      if (data != null) {\r\n        this.snack.open('Card Preferences Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        // this.ls.setItem('card_prefrence_done', true);\r\n        // this.accountService.refresh.next();\r\n        this.next();\r\n      }\r\n    });\r\n    \r\n  }\r\n  removeComma(num:any){\r\n    var numb =num.replace(/,/g, \"\");\r\n    console.log(\"numb\",numb)\r\n    return numb;\r\n\r\n  }\r\n  goBack(){\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/financialDetails`]);\r\n  }\r\n  next(){\r\n     this.ls.setItem('card_prefrence_done', true);\r\n      this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/accountServices`]);\r\n  }\r\n  isDocumentOptionDisabled2 = (value) => {\r\n    return this.selectedOptions2.includes(value);\r\n  };\r\n\r\n  changeValue2(event:any, i) {\r\n    this.islimitType=true;\r\n    if (this.selectedDocumentTypes2[i]) {\r\n      this.selectedOptions2 = this.selectedOptions2.filter(\r\n        (val) => val !== this.selectedDocumentTypes2[i]\r\n      );\r\n    }\r\n    \r\n    this.selectedDocumentTypes2[i] = event;\r\n    this.selectedOptions2.push(event);\r\n    if(this.selectedDocumentTypes2.length==this.arraylimitType.length){\r\n      this.isRowEnds=true;\r\n     \r\n      console.log(\"isRowends\",this.isRowEnds);\r\n    }\r\n    else{\r\n      this.isRowEnds=false;\r\n      console.log(\"isRowends\",this.isRowEnds);\r\n    }\r\n    this.isDLReadOnly=false\r\n  }\r\n \r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/Mask_Group_1.svg\"\r\n          alt=\"\"\r\n          class=\"w-90\"\r\n        />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Card Preferences</b></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title>\r\n          <fieldset class=\"height\">\r\n          <legend visible=\"true\">Card Preferences</legend>\r\n          </fieldset>\r\n        </mat-card-title>\r\n<form [formGroup]=\"cardPrefrenceForm\" >\r\n   <div class=\"table-container\">\r\n   <table class=\"table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Limit Type\r\n               </th>\r\n            <th>Daily Limit</th>\r\n            <th>Limit per transaction</th>\r\n        </tr>\r\n    </thead>\r\n    \r\n    <tbody >\r\n        <tr [formGroup]=\"cardPrefrence\" *ngFor=\"let cardPrefrence of m.controls; let k = index;\">\r\n          <!-- [disabled]=isDocumentOptionDisabled2(limitType)  -->\r\n            \r\n            <td style=\"width: 5cm;\">\r\n              \r\n                \r\n               \r\n           <mat-select class=\"inputMatcard1\" formControlName=\"limitType\" \r\n              placeholder=\"Select Type\" name=\"limitType\"   (valueChange)=\"changeValue2($event, k)\">\r\n   \r\n             <mat-option *ngFor=\"let limitType of arraylimitType\" [value]=\"limitType\" [hidden]=isDocumentOptionDisabled2(limitType) >\r\n              {{limitType}}\r\n             </mat-option>\r\n            </mat-select>\r\n           \r\n                \r\n            </td>\r\n            <td>\r\n                <div>\r\n                    <input type=\"text\" class=\"alignment\" maxlength=\"18\"   formControlName=\"dailyLimit\" (keyup)=\"OnInput1($event,true,k)\"  [readonly]=\"isDLReadOnly\" \r\n                    (keypress)=_keyPress($event) >\r\n\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div>\r\n\r\n                    <input type=\"text\" class=\"alignment\" maxlength=\"18\"   formControlName=\"limitPerTransaction\" (keyup)=\"OnInput($event,true,k)\" [readonly]=\"isLPTReadOnly\" \r\n                    (keypress)=keyPress($event) >\r\n\r\n                </div>\r\n            </td>\r\n            <td class=\"deletebutton\">\r\n                <div >\r\n                    <!-- <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"onclick(mandate,k)\"> -->\r\n                      <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"onclick1(k)\">\r\n                        <mat-icon>delete</mat-icon>\r\n                      </button>\r\n                </div>\r\n            </td>\r\n           \r\n        \r\n\r\n        </tr>\r\n        \r\n    </tbody>\r\n\r\n\r\n\r\n\r\n</table>\r\n<div\r\nfxLayout=\"row\"\r\n\r\nfxLayoutGap=\"335px\"\r\n>\r\n  <button mat-button color=\"primary\"  [disabled]=\"!(isdailylimit && isLimitTransaction && islimitType && !isRowEnds) || isGreaterValue   \"  (click)=\"addMandate()\" ><mat-icon>add</mat-icon> </button>\r\n  <mat-error *ngIf=\"isGreaterValue\">\r\n    <small >Limit per transaction should be less </small><br>\r\n    <small>than daily limit</small>\r\n  </mat-error>\r\n</div>\r\n \r\n\r\n\r\n\r\n<!-- <div style=\"margin-left: 20cm;\">\r\n    \r\n    <button mat-raised-button type=\"button\" color=\"primary\"\r\n    [disabled]=\"!(isdailylimit && isLimitTransaction)\"  (click)=\"onSubmit()\" >Next </button>\r\n</div> -->\r\n\r\n<div\r\nfxLayout=\"row\"\r\nfxLayoutAlign=\"space-between center\"\r\nfxLayoutGap=\"16px\"\r\nclass=\"mt-32\"\r\n>\r\n<button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\" >\r\n  Back\r\n</button>\r\n<button class=\"Nextbtn\" mat-raised-button type=\"button\" color=\"primary\"\r\n    [disabled]=\"!(isdailylimit && isLimitTransaction && islimitType) || isGreaterValue || m.controls.length==0\"  (click)=\"onSubmit()\" >Next </button>\r\n\r\n</div>  \r\n\r\n</div>\r\n</form>\r\n        \r\n        \r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\nimport { number } from 'ngx-custom-validators/src/app/number/validator';\r\n\r\n@Component({\r\n  selector: 'app-underwriting-credit-rating',\r\n  templateUrl: './underwriting-credit-rating.component.html',\r\n  styleUrls: ['./underwriting-credit-rating.component.scss'],\r\n})\r\nexport class UnderwritingCreditRatingComponent implements OnInit {\r\n  creditDetailsForm: FormGroup;\r\n  customerNames: any[] = [];\r\n  cardId: any;\r\n  isCardCreditRatingDetails: any;\r\n  customerName: any;\r\n  disableTest: boolean;\r\n  disableUjjivan: boolean;\r\n  disableFastTrack: boolean;\r\n  disableAddAgency: boolean;\r\n  deletecount:number;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private snack: MatSnackBar,\r\n    private api: ApiService,\r\n    private accountService: AccountService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem('cardId');\r\n\r\n    this.customerName = this.ls.getItem('primaryCustomerName');\r\n    this.isCardCreditRatingDetails = this.ls.getItem('CARD_CREDIT_RATING_DONE');\r\n    this.getCustomerInformationDetails();\r\n    this.buildCreditForm();\r\n\r\n    if (this.isCardCreditRatingDetails == false) {\r\n      this.buildCreditForm();\r\n    } else {\r\n      this.gettingCreditRatingDetail();\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.creditDetailsForm.controls;\r\n  }\r\n  get c() {\r\n    return this.f.agencyRating as FormArray;\r\n  }\r\n\r\n  buildCreditForm(data?, isResponse?: boolean) {\r\n    console.log(data);\r\n\r\n    this.creditDetailsForm = this.formBuilder.group({\r\n      //   customerName:[data && data.customerName? data.customerName:'',Validators.required],\r\n      // loanAccountId:this.loanaccountID,\r\n      cardId: this.cardId,\r\n      //cardId:data?data.cardId:'952',\r\n      // customerName:data? data.customerName:'',\r\n      customerName: data ? data.customerName : this.customerNames[0],\r\n      // customerName:data?data.customerName:this.customerName,\r\n      agencyRating: this.formBuilder.array([this.addModFormGroup(data)]),\r\n    });\r\n\r\n    console.log(this.creditDetailsForm);\r\n  }\r\n  addFormGroup() {\r\n    this.c.push(\r\n      this.formBuilder.group({\r\n        agencyId: [0],\r\n        agencyName: ['', Validators.required],\r\n        ratings: ['', Validators.required],\r\n        // remarks: ['',Validators.required],\r\n        // agencyName: [''],\r\n        // ratings: [''],\r\n        // remarks: [''],\r\n      })\r\n    );\r\n    for (let i=0;i<this.c.length;i++){\r\n      this.deletecount=i\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/cardaccount/applicationEnrichment/list']);\r\n  }\r\n\r\n  addModFormGroup(data): FormGroup {\r\n    console.log(data, 'inside addModeFormGrp');\r\n    return this.formBuilder.group({\r\n      // cardId:[data?data.cardId:'952'],\r\n      cardId: [this.cardId],\r\n      agencyId: [data ? data.agencyId : 0],\r\n      agencyName: [\r\n        data ? data.agencyRating[0].agencyName : '',\r\n        Validators.required,\r\n      ],\r\n      ratings: [data ? data.agencyRating[0].ratings : '',Validators.compose(\r\n        [Validators.required,Validators.max(5)])],\r\n      remarks: [data ? data.agencyRating[0].remarks : ''],\r\n      // agencyName: [data?data.agencyRating[0].agencyName : ''],\r\n      // ratings: [data?data.agencyRating[0].ratings : ''],\r\n      // remarks: [data?data.agencyRating[0].remarks : ''],\r\n    });\r\n  }\r\n\r\n  getCustomerInformationDetails() {\r\n    this.appApiService\r\n      .fetchCustomersByCardAccId(this.cardId, 'cardOrigin')\r\n      .subscribe(\r\n        (resp: any) => {\r\n          console.log('resp for customer information names ', resp.data);\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            if (resp.data[index].middleName == null) {\r\n              this.customerNames[index] =\r\n                resp.data[index].firstName + ' ' + resp.data[index].lastName;\r\n            } else {\r\n              this.customerNames[index] =\r\n                resp.data[index].firstName +\r\n                ' ' +\r\n                resp.data[index].middleName +\r\n                ' ' +\r\n                resp.data[index].lastName;\r\n            }\r\n          }\r\n          console.log('customer name ', this.customerNames);\r\n          if (this.customerNames) {\r\n            console.log('If condtion');\r\n            this.creditDetailsForm\r\n              .get('customerName')\r\n              .setValue(this.customerNames[0]);\r\n          }\r\n        },\r\n        (err: any) => {}\r\n      );\r\n  }\r\n  gettingCreditRatingDetail() {\r\n    this.api.getCardCreditRatingDetails(this.cardId).subscribe((resp: any) => {\r\n      console.log(resp);\r\n      this.buildCreditForm(resp, true);\r\n    });\r\n  }\r\n  removeAgency(i:number) {\r\n    \r\n    this.c.removeAt(this.deletecount);\r\n    this.deletecount=this.c.length-1\r\n  }\r\n\r\n  OnSubmit(val) {\r\n    console.log('val', val);\r\n    val.accountType = 'cardOrigin';\r\n    this.api.saveCreditDetails(val).subscribe(\r\n      (data: any) => {\r\n        console.log(data);\r\n        if (data === 200 || data !== null) {\r\n          this.snack.open(' Credit Details Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          });\r\n          this.ls.setItem('CARD_CREDIT_RATING_DONE', true);\r\n          this.accountService.refresh.next();\r\n          this.router.navigate([`/cardaccount/underwritingStage/qualitative`]);\r\n        } else if (data === 500) {\r\n          this.snack.open(\r\n            'Not able to connect to server!',\r\n            'INTERNAL SERVER ERROR',\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right',\r\n            }\r\n          );\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n    this.router.navigate([`/cardaccount/underwritingStage/qualitative/`]);\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onClick() {\r\n   for(let i=0; i<3; i++) {     \r\n     if(this.creditDetailsForm.value.agencyRating[i].agencyName==\"Test Agency\") {\r\n       this.disableTest=true;\r\n       this.disableUjjivan=false;\r\n       this.disableFastTrack=false;\r\n      }    \r\n     if(this.creditDetailsForm.value.agencyRating[i].agencyName==\"Ujjivan Agency\") {\r\n       this.disableUjjivan=true;\r\n       this.disableFastTrack=false;\r\n       this.disableTest=false;\r\n      }    \r\n     if(this.creditDetailsForm.value.agencyRating[i].agencyName==\"Fast Track Agency\") {\r\n       this.disableFastTrack=true;\r\n       this.disableUjjivan=false;\r\n       this.disableTest=false;\r\n\r\n\r\n      }\r\n    }\r\n    if(this.creditDetailsForm.value.agencyRating.length==3) {\r\n      this.disableAddAgency=true;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/Mask_Group_9.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8 \">\r\n      <div class=\"main-title1\"><b>Credit Score Details</b></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <mat-progress-bar [mode]=\"determinate\" class=\"session-progress\"></mat-progress-bar> -->\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Credit Score Details</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"creditDetailsForm\" [formGroup]=\"creditDetailsForm\">\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div class=\"flex-grow-2\" style=\"padding-left: 10px;\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <!-- <mat-hint>Customer Name*</mat-hint> -->\r\n              <mat-label>Customer Name*</mat-label>\r\n              <!-- <mat-card class=\"widthCard inputMatcard\"> -->\r\n                <div *ngIf=\"customerNames.length > 1\">\r\n                  <mat-select\r\n                    name=\"customerName\"\r\n                    formControlName=\"customerName\"\r\n                  >\r\n                    <mat-option\r\n                      *ngFor=\"let customerName of customerNames\"\r\n                      [value]=\"customerName\"\r\n                    >\r\n                      {{ customerName }}\r\n                    </mat-option>\r\n                    <!-- <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option value=\"GayathriR\">GayathriR</mat-option>  -->\r\n                  </mat-select>\r\n                </div>\r\n\r\n                <div *ngIf=\"customerNames.length == 1\">\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"customerName\"\r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                    readonly\r\n                  />\r\n                </div>\r\n              <!-- </mat-card> -->\r\n              <mat-error\r\n                *ngIf=\"\r\n                  !creditDetailsForm.get('customerName').valid &&\r\n                  creditDetailsForm.get('customerName').touched\r\n                \"\r\n              >\r\n                Customer Name is Required!\r\n              </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mt-16\" *ngFor=\"let mandate of c.controls; let i = index\">\r\n            <mat-accordion [formGroup]=\"mandate\">\r\n              <mat-card class=\"border1\">\r\n                <h3>Score </h3>\r\n                <mat-divider class=\"design\"></mat-divider><br>\r\n                <div [formGroup]=\"mandate\">\r\n                  <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                      <div class=\"flex-grow-2\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <!-- <mat-hint>Select Agency*</mat-hint> -->\r\n                        <mat-label>Select Agency*</mat-label>\r\n                        <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                          <mat-select\r\n                            name=\"agencyName\"\r\n                            formControlName=\"agencyName\">\r\n                            <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                            <mat-option (click)=\"onClick()\" [disabled]=disableTest \r\n                                value=\"Test Agency\">Test Agency</mat-option>\r\n                            <mat-option (click)=\"onClick()\" [disabled]=disableUjjivan \r\n                                value=\"Ujjivan Agency\">Ujjivan Agency</mat-option>\r\n                            <mat-option (click)=\"onClick()\" [disabled]=disableFastTrack \r\n                                value=\"Fast Track Agency\">Fast Track Agency</mat-option>\r\n                          </mat-select>\r\n                        <!-- </mat-card> -->\r\n                        <mat-error\r\n                          *ngIf=\"\r\n                            !mandate.controls['agencyName'].valid &&\r\n                            mandate.controls['agencyName'].touched\r\n                          \"\r\n                        >\r\n                          Agency is Required!\r\n                        </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div class=\"flex-grow-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <mat-label> Remarks</mat-label>\r\n                        <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input\r\n                            matInput\r\n                            placeholder=\"Remarks\"\r\n                            formControlName=\"remarks\"\r\n                            class=\"alignment\"\r\n                            type=\"text\"\r\n                            name=\"remarks\"\r\n                          />\r\n                        <!-- </mat-card> -->\r\n                        <!-- <mat-error\r\n                          *ngIf=\"\r\n                            !mandate.controls['remarks'].valid &&\r\n                            mandate.controls['remarks'].touched\r\n                          \"\r\n                        >\r\n                          Remarks is Required!\r\n                        </mat-error> -->\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                      <div class=\"flex-grow-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <!-- <mat-hint>Ratings*</mat-hint> -->\r\n                        <mat-label>Ratings*</mat-label>\r\n                        <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input\r\n                            matInput\r\n                            formControlName=\"ratings\"\r\n                            class=\"alignment\"\r\n                            (keypress)=\"_keyPress($event)\"\r\n                            type=\"text\"\r\n                            name=\"ratings\"\r\n                          />\r\n                        <!-- </mat-card> -->\r\n                        <mat-error\r\n                          *ngIf=\"\r\n                            mandate.controls['ratings'].value == 0 &&\r\n                            mandate.controls['ratings'].touched\r\n                          \"\r\n                        >\r\n                       \r\n                          Ratings is Required!\r\n                        </mat-error>\r\n                        <mat-error\r\n                          *ngIf=\"\r\n                            mandate.controls['ratings'].value>5\r\n                          \"\r\n                        >\r\n                          maximum rating is 5\r\n                        </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </div>\r\n              </mat-card>\r\n            </mat-accordion>\r\n          </div>\r\n          <button mat-button color=\"primary\" [disabled]=disableAddAgency (click)=\"addFormGroup()\">\r\n            <mat-icon>add</mat-icon> ADD AGENCY\r\n          </button>\r\n          <button mat-button class=\"dltbtn\"  (click)=\"removeAgency()\">\r\n            DELETE\r\n          </button>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n            fxLayoutGap=\"16px\"\r\n            class=\"mt-32\"\r\n          >\r\n            <a mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n              Back\r\n            </a>\r\n            <button class=\"Nextbtn\" mat-raised-button color=\"primary\" [disabled]=\"!creditDetailsForm.valid\" (click)=\"OnSubmit(creditDetailsForm.value)\">\r\n              Next\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n</div>","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n\r\n@Component({\r\n  selector: \"app-enrichment-summary\",\r\n  templateUrl: \"./enrichment-summary.component.html\",\r\n  styleUrls: [\"./enrichment-summary.component.scss\"],\r\n})\r\nexport class EnrichmentSummaryComponent implements OnInit {\r\n  appEntrySummaryView: boolean = false;\r\n  accountDetails: any;\r\n  interestForm: FormGroup;\r\n  chargeFormIT: FormGroup;\r\n  savingForm: FormGroup;\r\n  loanForm: FormGroup;\r\n  interestForm1: FormGroup;\r\n  accountId: any;\r\n  //for loan interest details\r\n  loanInterestResp: {\r\n    intrestType: string;\r\n    interestRateApplicable: string;\r\n    marginIn: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  intererstInfo: {\r\n    intrestType: string;\r\n    interestRateApplicable: string;\r\n    margin: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  accountType: String = \"Home Loan\";\r\n  cardId:any;\r\n  chargeInfo: any;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private api: ApiService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    // this.api.getApprovedStatus().subscribe((resp)=>{\r\n    //   console.log(\"message\",resp);\r\n    //   this.isApprovedSreen=resp;\r\n\r\n    // })\r\n    // this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    this.getCardEnrichmentDetails(this.cardId);\r\n    this.interestForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    this.savingForm = this.formBuilder.group({\r\n      saving: new FormArray([]),\r\n    });\r\n    this.chargeFormIT = this.formBuilder.group({\r\n      chargeIT: new FormArray([]),\r\n    });\r\n    this.loanForm = this.formBuilder.group({\r\n      loan: new FormArray([]),\r\n    });\r\n    \r\n   \r\n\r\n    //for Charge Details\r\n    // this.api\r\n    //   .getFlexcubeDetails(\"chargeDetails\", this.accountType)\r\n    //   .subscribe((response) => {\r\n    //     this.onCardCharge(response.length);\r\n    //     this.in2.patchValue(response);\r\n    //   });\r\n  }\r\n\r\n  getCardEnrichmentDetails(cardId:any){\r\n    \r\n    this.api.getCardEnrichmentSummmary(cardId)\r\n      .subscribe((summaryInfo: any) => {\r\n       console.log(summaryInfo);\r\n       this.intererstInfo=summaryInfo.intererstInfo;\r\n       console.log(this.intererstInfo);\r\n       this.onCardintrest(this.intererstInfo.length);\r\n       this.in.patchValue(this.intererstInfo);\r\n       \r\n       this.chargeInfo = summaryInfo.chargeInfo;\r\n       this.onCardCharge(this.chargeInfo.length);\r\n       this.in2.patchValue(this.chargeInfo);\r\n      });\r\n  }\r\n\r\n  onCardintrest(e) {\r\n    // this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            //accountId: [this.accountId],\r\n            cardId: [this.cardId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  onCardCharge(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in2.length < numberOfItems) {\r\n      for (let i = this.in2.length; i < numberOfItems; i++) {\r\n        this.in2.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            amount: [\"\"],\r\n            waiver: [true],\r\n            cardId: [this.cardId],\r\n            chargeDetailsId: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in2.length; i >= numberOfItems; i--) {\r\n        this.in2.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f2() {\r\n    return this.chargeFormIT.controls;\r\n  }\r\n  get in2() {\r\n    return this.f2.chargeIT as FormArray;\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n\r\n  get iloan() {\r\n    return this.floan.loan as FormArray;\r\n  }\r\n\r\n  get floan() {\r\n    return this.loanForm.controls;\r\n  }\r\n\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"chargeInfo detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  checkbox(event) {\r\n    console.log(event.checked);\r\n  }\r\n\r\n  assignAccountType(accountType) {\r\n    this.accountType = accountType;\r\n  }\r\n\r\n  Done() {\r\n    this.router.navigate([`/cardaccount/underwritingStage/list`]);\r\n  }\r\n  Back() {\r\n    this.router.navigate([`/cardaccount/applicationEnrichment/list`]);\r\n  }\r\n}\r\n","<div class=\"propic text-center\">\r\n    <img class=\"entryImg\" src=\"assets/images/svg/undraw_statistic_chart_38b6.svg\" alt=\"\" />\r\n</div>\r\n<div class=\"profile-title text-center mt-8\">\r\n    <div class=\"main-title\"><b>Application Enrichment</b></div>\r\n</div>\r\n\r\n<!--Interest Details Summary-->\r\n<div class=\"spanDiv1\">\r\n    \r\n    <h4 class=\"paraFont\">Interest Details</h4>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"main\">\r\n\r\n    <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n        <div class=\"mt-24\"></div>\r\n        <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\">\r\n           \r\n            <table>\r\n\r\n                <tbody>\r\n                    <tr class=\"mt-4\" *ngFor=\"let interest of in.controls; let i = index\"\r\n                        style=\"display: flex;flex-wrap: wrap;\">\r\n                        <div class=\"row\">\r\n                            <ng-container [formGroup]=\"interest\">\r\n                                <div class=\"heading\">\r\n                                    <input matInput formControlName=\"intrestType\" name=\"account_branch\"\r\n                                        id=\"headingInput\" readonly />\r\n                                </div>\r\n                                <td>\r\n                                    <mat-card class=\"matCardBox\">\r\n                                        <mat-label class=\"label\">Interest Rate Applicable</mat-label>\r\n                                        <input matInput formControlName=\"intrestRateApplicable\" name=\"account_branch\"\r\n                                            class=\"input\" readonly />\r\n                                    </mat-card>\r\n                                </td>\r\n                                <td>\r\n                                    <mat-card class=\"matCardBox\">\r\n                                        <mat-label class=\"label\">Margin in %</mat-label>\r\n                                        <input matInput formControlName=\"marginIn\" name=\"account_branch\" class=\"input\"\r\n                                            readonly />\r\n\r\n                                    </mat-card>\r\n                                </td>\r\n                                <td>\r\n                                    <mat-card class=\"matCardBox\">\r\n                                        <mat-label class=\"label\">Effective Rate %</mat-label>\r\n                                        <input matInput formControlName=\"effectiveRate\" name=\"account_branch\" value=\"\"\r\n                                            class=\"input\" readonly />\r\n                                    </mat-card>\r\n                                </td>\r\n                            </ng-container>\r\n                        </div>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n\r\n\r\n        <br>\r\n\r\n        <!--Charge Details Summary-->\r\n        <div>\r\n            <h4 class=\"paraFont\">Card Account Charge Details</h4>\r\n        </div>\r\n        <mat-card class=\"matCard\">\r\n\r\n            <div fxLayout=\"row wrap\" class=\"main\">\r\n                <div fxFlex=\"100\">\r\n                </div>\r\n                <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n                    <div class=\"mt-24\"></div>\r\n                    <form *ngIf=\"chargeFormIT\" [formGroup]=\"chargeFormIT\">\r\n                        <table class=\"cart-table default-bg mat-elevation-z0\">\r\n                            <tbody>\r\n                                <tr class=\"mt-4\" *ngFor=\"let chargeIT of in2.controls; let i = index\"\r\n                                    class=\"chargeTable\">\r\n                                    <div class=\"row\" class=\"chargeLeft\">\r\n                                        <ng-container [formGroup]=\"chargeIT\">\r\n                                            <div class=\"heading\">\r\n                                              <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />\r\n                                            </div>\r\n                                            <td>\r\n                                              <mat-card class=\"matCardBox\">\r\n                                                <mat-label class=\"label\">Amount</mat-label>\r\n                                                <input matInput formControlName=\"amount\" [value]=\"amount\" name=\"amount\" class=\"input\" readonly />\r\n                                              </mat-card>\r\n                                            </td>\r\n                                            <td>\r\n                                              <mat-card class=\"matCardBox\">\r\n                                                <mat-label class=\"label\">waiver</mat-label>\r\n                                                <input matInput formControlName=\"waiver\" #waiver name=\"account_branch\" class=\"input\" readonly />\r\n                                              </mat-card>\r\n                                            </td>\r\n                                          </ng-container>\r\n                                    </div>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n    <button mat-button rounded color=\"primary\" (click)=\"Back()\">\r\n        Back\r\n    </button>\r\n    <button mat-raised-button class=\"Next\" color=\"primary\" (click)=\"Done()\">\r\n        Done\r\n    </button>\r\n</div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\n// import { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n@Component({\r\n  selector: 'app-card-account',\r\n  templateUrl: './card-account.component.html',\r\n  styleUrls: ['./card-account.component.scss']\r\n})\r\nexport class CardAccountComponent implements OnInit {\r\n  public accountItems: any[];\r\n  private accountItemsSub: Subscription;\r\n  isCardApplicationStageDone : boolean = false;\r\n  isCardInitiationDone : boolean = false;\r\n  isCardCustomerInformationScreen: boolean = false;\r\n  isCardFinancialDetailsScreen : boolean = false;\r\n  //isCardPreferencesScreen : boolean = true;\r\n  isCardPrefrenceDone:boolean = false;\r\n  // isAccountServices : boolean = true;\r\n  isCardAccountService:boolean=false;\r\n  isAddOnCardHolderDetails : boolean = true;\r\n\r\n  isDocumentUploadDone : boolean = false;\r\n  isDocumentUpload : boolean = false;\r\n\r\n  isCardApplicationEnrichmentDone:boolean=false\r\n // isEnrichmentDone : boolean = true;\r\n isCardInterestDetails : boolean = false;\r\n isCardChargeDetails : boolean = false;\r\n\r\n  isApplicationUnderWritingStageDone : boolean = true;\r\n // isCardCreditRatingDetails : boolean = true;\r\n  isQualitativeScoreboard : boolean = true;\r\n  isCardCreditRatingDetails: boolean = false;\r\n  isCardQualitativeScoreboard: boolean=false;\r\n\r\n  isCardAssessmentStageDone : boolean = false;\r\n  isAssessmentReport : boolean = false;\r\n\r\n\r\n  isCardSupervisorApprovalDone : boolean = true;\r\n  isApprovedDetails : boolean = true;\r\n\r\n  isCardDigitalSigningDone : boolean = true;\r\n  isCardDigitalSigning : boolean = true;\r\n  cardId: any;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  constructor(\r\n    private ls: LocalStoreService,private api: ApiService, private router: Router,private cdr:ChangeDetectorRef ,private accountService:AccountService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountItemsSub = this.accountService.accountItems$.subscribe(menuItem => {\r\n      this.accountItems = menuItem;\r\n    });\r\n    console.log(\"reset\")\r\n    this.cardId = this.ls.getItem('cardId');\r\n    this.isCardApplicationStageDone=this.ls.getItem('CARD_APPLICATION_ENTRY_DONE');\r\n    this.isCardInitiationDone=this.ls.getItem('CARD_INITIATION_DONE');\r\n    this.isCardCustomerInformationScreen=this.ls.getItem('Card_Customer_Done');\r\n    this.isCardFinancialDetailsScreen = this.ls.getItem('CARD_FINANCIAL_DONE');\r\n    // this.isCardPreferencesScreen = this.ls.getItem('CARD_PREFERENCE_DONE');\r\n    this.isCardPrefrenceDone=this.ls.getItem('card_prefrence_done');\r\n    // this.isAccountServices = this.ls.getItem('CARD_ACCOUNT_SERVICES_DONE');\r\n    this.isCardAccountService=this.ls.getItem('CARD_ACC_SERVICE_DONE');\r\n\r\n    this.isDocumentUploadDone = this.ls.getItem('CARD_DOCUMENT_STAGE_DONE');\r\n    this.isDocumentUpload=this.ls.getItem('CARD_DOCUMENT_DONE');\r\n\r\n\r\n    this.isCardApplicationEnrichmentDone=this.ls.getItem('CARD_ENRICHMENT_DONE');\r\n    console.log('isCardApplicationEnrichmentDone', this.isCardApplicationEnrichmentDone);\r\n    \r\n   // this.isEnrichmentDone= this.ls.getItem('LOAN_ENRICHMENT_DONE');\r\n    this.isCardInterestDetails=this.ls.getItem('CARD_INTEREST_DETAILS_DONE');\r\n    this.isCardChargeDetails=this.ls.getItem('CARD_CHARGE_DETAILS_DONE');\r\n    \r\n    this.isApplicationUnderWritingStageDone= this.ls.getItem('CARD_UNDERWRITING_DONE');\r\n    this.isCardCreditRatingDetails = this.ls.getItem('CARD_CREDIT_RATING_DONE');\r\n    this.isCardQualitativeScoreboard=this.ls.getItem('CARD_QUALITATIVE_SCOREBOARD_DONE');\r\n\r\n    this.isCardAssessmentStageDone=this.ls.getItem('CARD_ASSESSMENT_STAGE_DONE');\r\n    this.isAssessmentReport=this.ls.getItem('CARD_ASSESSMENT_DONE');\r\n\r\n    this.isCardSupervisorApprovalDone=this.ls.getItem('CARD_SUPERVISOR_DONE');\r\n    this.isApprovedDetails=this.ls.getItem('CARD_APPROVAL_DONE');\r\n\r\n    this.isCardDigitalSigningDone=this.ls.getItem('CARD_DIGITAL_STAGE_DONE');\r\n    this.isCardDigitalSigning=this.ls.getItem('CARD_DIGITAL_SIGN_DONE');\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n     \r\n    this.cardId = this.ls.getItem('cardId');\r\n\r\n    this.isCardApplicationStageDone=this.ls.getItem('CARD_APPLICATION_ENTRY_DONE');\r\n    this.isCardInitiationDone=this.ls.getItem('CARD_INITIATION_DONE');\r\n    this.isCardCustomerInformationScreen=this.ls.getItem('Card_Customer_Done');\r\n    this.isCardFinancialDetailsScreen = this.ls.getItem('CARD_FINANCIAL_DONE');\r\n    // this.isCardPreferencesScreen = this.ls.getItem('CARD_PREFERENCE_DONE');\r\n    this.isCardPrefrenceDone=this.ls.getItem('card_prefrence_done');\r\n    this.isCardAccountService=this.ls.getItem('CARD_ACC_SERVICE_DONE')\r\n    // this.isAccountServices = this.ls.getItem('CARD_ACCOUNT_SERVICES_DONE');\r\n\r\n    \r\n    this.isDocumentUploadDone = this.ls.getItem('CARD_DOCUMENT_STAGE_DONE');\r\n    this.isDocumentUpload=this.ls.getItem('CARD_DOCUMENT_DONE');\r\n    \r\n   // this.isEnrichmentDone= this.ls.getItem('LOAN_ENRICHMENT_DONE');\r\n   this.isCardApplicationEnrichmentDone=this.ls.getItem('CARD_ENRICHMENT_DONE');\r\n    this.isCardInterestDetails=this.ls.getItem('CARD_INTEREST_DETAILS_DONE');\r\n    this.isCardChargeDetails=this.ls.getItem('CARD_CHARGE_DETAILS_DONE');\r\n    \r\n    this.isApplicationUnderWritingStageDone= this.ls.getItem('CARD_UNDERWRITING_DONE');\r\n    this.isCardCreditRatingDetails = this.ls.getItem('CARD_CREDIT_RATING_DONE');\r\n    this.isCardQualitativeScoreboard=this.ls.getItem('CARD_QUALITATIVE_SCOREBOARD_DONE');\r\n\r\n    this.isCardAssessmentStageDone=this.ls.getItem('CARD_ASSESSMENT_STAGE_DONE');\r\n    this.isAssessmentReport=this.ls.getItem('CARD_ASSESSMENT_DONE');\r\n\r\n    this.isCardSupervisorApprovalDone=this.ls.getItem('CARD_SUPERVISOR_DONE');\r\n    this.isApprovedDetails=this.ls.getItem('CARD_APPROVAL_DONE');\r\n\r\n    this.isCardDigitalSigningDone=this.ls.getItem('CARD_DIGITAL_STAGE_DONE');\r\n    this.isCardDigitalSigning=this.ls.getItem('CARD_DIGITAL_SIGN_DONE');\r\n \r\n     })\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.accountItemsSub) {\r\n      this.accountItemsSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div class=\"m-333\">\r\n    <mat-sidenav-container class=\"topSection\" style=\"background-color: white !important;\">\r\n        <mat-sidenav EgretSideNavToggle class=\"app-sidebar\" style=\"width: 300px;\">\r\n      <span class=\"sidenav-header\">Home > Create Card Account</span>\r\n            <!-- <div class=\"app-filters-wrap\"> -->\r\n            <div class=\"sidenav-hold\">\r\n                <ul appDropdown class=\"sidenav mt-32\">\r\n\r\n                    <!-- Application satge start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isCardApplicationStageDone ? 'active' : 'notActive'\">\r\n                                <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isCardApplicationStageDone ? 'active' : 'notActive'\">\r\n                                    account_balance_wallet\r\n                                </mat-icon>\r\n                                <span class=\"item-name lvl1\">Application Entry Stage</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list']\"\r\n                                    [ngClass]=\"isCardApplicationStageDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list/cardInitiation']\"\r\n                                    [ngClass]=\"isCardInitiationDone ? 'enable' : 'disable'\">\r\n\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Card Initiation</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  \r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list/customerInformation']\"\r\n                                    [ngClass]=\"isCardCustomerInformationScreen ? 'enable' : 'disable'\">\r\n\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Customer Information\r\n                                            Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n             \r\n                                <!--*ngIf=\"isHomeLoan; else hideNav\"-->\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a \r\n                                    class=\"side-menu\"\r\n                                    [ngClass]=\"isCardFinancialDetailsScreen ? 'enable' : 'disable'\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list/financialDetails']\"\r\n                                    >\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Financial Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  \r\n                                    class=\"side-menu\"\r\n                                    [ngClass]=\"isCardPrefrenceDone ? 'enable' : 'disable'\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list/cardPrefrence']\"\r\n                                    >\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Card Preferences</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  \r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list/accountServices']\"\r\n                                    [ngClass]=\"isCardAccountService ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Account Services</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <!-- <li routerLinkActive=\"open\">\r\n                                    <a \r\n                                        style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                                        [ngClass]=\"isAddOnCardHolderDetails ? 'enable' : 'disable'\">\r\n                                         <a \r\n                                        style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                                       > -->\r\n                                      <!--  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Add on Card Holder\r\n                                            Details</span>\r\n                                        <span fxFlex></span> -->\r\n                                 <!--   </a> \r\n                                </li> -->\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Application satge end -->\r\n\r\n                    <!-- Document Upload start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isDocumentUploadDone ? 'active' : 'notActive'\"\r\n                            [routerLink]=\"['/cardaccount/documentupload/list']\">\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isDocumentUploadDone ? 'active' : 'notActive'\">file_upload</mat-icon>\r\n                                <span class=\"item-name lvl1\">Document Upload</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/documentupload/list']\"\r\n                                    [ngClass]=\"isCardApplicationStageDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  [ngClass]=\"isDocumentUpload? 'enable' : 'disable'\"\r\n                                    [routerLink]=\"['/cardaccount/documentupload/list/document-details']\"\r\n                                    class=\"side-menu\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Document Upload</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Document Upload end -->\r\n\r\n                    <!-- Enrichment satge start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isCardApplicationEnrichmentDone ? 'active' : 'notActive'\"\r\n                            [routerLink]=\"['/cardaccount/applicationEnrichment/list']\">\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isCardApplicationEnrichmentDone ? 'active' : 'notActive'\">border_color</mat-icon>\r\n                                <span class=\"item-name lvl1\">Application Enrichment</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a class=\"side-menu\"\r\n                                       [routerLink]=\"['/cardaccount/applicationEnrichment/list']\"\r\n                                       [ngClass]=\"isCardApplicationEnrichmentDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                \r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                        [routerLink]=\"['/cardaccount/applicationEnrichment/intrest-details']\"\r\n                                        [ngClass]=\"isCardInterestDetails ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Interest\r\n                                            Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                        [routerLink]=\"['/cardaccount/applicationEnrichment/charge-details']\"\r\n                                        [ngClass]=\"isCardChargeDetails ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Charge Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Enrichment satge end -->\r\n\r\n                    <!-- Underwriting start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle\r\n                                [ngClass]=\"isApplicationUnderWritingStageDone ? 'active' : 'notActive'\"\r\n                                [routerLink]=\"['/cardaccount/underwritingStage/list']\">\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isApplicationUnderWritingStageDone ? 'active' : 'notActive'\">border_color\r\n                                </mat-icon>\r\n                                <span class=\"item-name lvl1\">Application Underwriting</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/underwritingStage/list']\"\r\n                                    [ngClass]=\"isCardApplicationStageDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                        [ngClass]=\"isCardCreditRatingDetails ? 'enable' : 'disable'\"\r\n                                        [routerLink]=\"['/cardaccount/underwritingStage/credit-rating']\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Credit Score\r\n                                            Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                        [ngClass]=\"isCardQualitativeScoreboard ? 'enable' : 'disable'\"\r\n                                        [routerLink]=\"['/cardaccount/underwritingStage/qualitative']\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Qualitative\r\n                                            Scoreboard</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Underwriting end -->\r\n\r\n                    <!-- assesment start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isCardAssessmentStageDone ? 'active' : 'notActive'\"\r\n                                [routerLink]=\"['/cardaccount/assessmentStage/list']\"\r\n                               >\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isCardAssessmentStageDone ? 'active' : 'notActive'\">assessment</mat-icon>\r\n                                <span class=\"item-name lvl1\">Application Assessment</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/assessmentStage/list']\"\r\n                                    [ngClass]=\"isCardApplicationStageDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                         [routerLink]=\"['/cardaccount/assessmentStage/application-assessment/list']\"\r\n                                         [ngClass]=\"isAssessmentReport ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Assessment Report</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- assesment end -->\r\n\r\n                    <!-- Supervisor Approval start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isCardSupervisorApprovalDone ? 'active' : 'notActive'\"\r\n                            [routerLink]=\"['/cardaccount/SupervisorApprovalStage/list']\">\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isCardSupervisorApprovalDone ? 'active' : 'notActive'\">done_all</mat-icon>\r\n                                <span class=\"item-name lvl1\">Supervisor Approval Stage</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/SupervisorApprovalStage/list']\"\r\n                                    [ngClass]=\"isCardApplicationStageDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/SupervisorApprovalStage/list/approvalDetails']\"\r\n                                        [ngClass]=\"isApprovedDetails ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Approved Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Supervisor Approval end -->\r\n\r\n                    <!-- Digital Signing start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isCardDigitalSigningDone ? 'active' : 'notActive'\"\r\n                                [routerLink]=\"['/cardaccount/DigitalSigning/list']\">\r\n                                <!--<mat-icon class=\"sidenav-mat-icon\">style</mat-icon>-->\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isCardDigitalSigningDone ? 'active' : 'notActive'\">web_asset</mat-icon>\r\n                                <span class=\"item-name lvl1\">Digital Signing</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                        [routerLink]=\"['/cardaccount/DigitalSigning/list']\"\r\n                                        [ngClass]=\"isCardDigitalSigningDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                     class=\"side-menu\"\r\n                                     [routerLink]=\"['/cardaccount/digitalsigning/options']\"\r\n                                     [ngClass]=\"isCardDigitalSigning ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Digital Signing</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Digital Signing end -->\r\n                </ul>\r\n            </div>\r\n\r\n        </mat-sidenav>\r\n        <div class=\"app-wrap\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n            <!-- Right side -->\r\n            <div class=\"full-width mt-32\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n\r\n        </div>\r\n    </mat-sidenav-container>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n// import { AccountService } from \"app/views/loan-account/account.service\";\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n\r\n@Component({\r\n  selector: \"app-charge-details\",\r\n  templateUrl: \"./charge-details.component.html\",\r\n  styleUrls: [\"./charge-details.component.scss\"],\r\n})\r\nexport class ChargeDetailsComponent implements OnInit {\r\n  interestForm: FormGroup;\r\n  accountId: any;\r\n  intrestFlag: Boolean;\r\n  interestResp: any;\r\n  accountType: String = \"Card Origin\";\r\n  resp: { intrestType: string; amount: string; waiver: string }[];\r\n  loanaccountID: any;\r\n  cardId: number;\r\n  currencytype:any;\r\n  currencySymbol: string;\r\n  cardInfo: any;\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    console.log(history.state.amount);\r\n    \r\n    this.cardId = this.ls.getItem('cardId');\r\n    this.currencytype=localStorage.getItem('Currency Type');\r\n    if(this.currencytype===\"INR\"){\r\n      this.currencySymbol=\"₹\"\r\n    }else if(this.currencytype===\"USD\"){\r\n      this.currencySymbol=\"$\"\r\n    }else if(this.currencytype===\"CNY\"){\r\n      this.currencySymbol=\"¥\"\r\n    }else if(this.currencytype===\"GBP\"){\r\n      this.currencySymbol=\"£\"\r\n    }else if(this.currencytype===\"ZAR\"){\r\n      this.currencySymbol=\"R\"\r\n    }\r\n\r\n    if(this.cardInfo){\r\n      this.loanaccountID = this.cardInfo.loanAccountId;\r\n    }\r\n    this.interestForm = this.formBuilder.group({\r\n      chargeInfo: new FormArray([]),\r\n    });\r\n    this.api\r\n      .getFlexcubeDetails(\"chargeDetails\", this.accountType)\r\n      .subscribe((response) => {\r\n        this.onChangeInterest(response.length);\r\n        this.in.patchValue([{...response[0], amount: history.state.amount ? history.state.amount : ''}]);\r\n      });    \r\nsetTimeout(()=>{\r\n  this.api.cardChargeFetchById(this.cardId).subscribe((resp) => {\r\n    console.log(\"resp from backend \", this.resp);\r\n    this.resp = resp;\r\n    this.onChangeInterest(this.resp.length);\r\n    this.in.patchValue(this.resp);\r\n  });\r\n},10);\r\n    \r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            amount: [\"\",Validators.required],\r\n            waiver: [false],\r\n            cardId: [this.cardId],\r\n            chargeDetailsId: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.chargeInfo as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\r\n      `/cardaccount/applicationEnrichment/intrest-details`,\r\n    ]);\r\n  }\r\n  appendPercentage(event) {\r\n    // console.log(event.key)\r\n    console.log(event.target.value);\r\n\r\n    if (!event.target.value.length) return;\r\n\r\n    if (event.target.value.length === 1) {\r\n      event.target.value = `${event.target.value}%`;\r\n    }\r\n    if (event.target.value.length > 1) {\r\n      event.target.value = `${event.target.value.slice(0, -1)}%`;\r\n    }\r\n  }\r\n\r\n  onSubmit(form) {\r\n    console.log(\"form\", form);\r\n    form.chargeInfo = form.chargeInfo.map((chargeInfo) => ({\r\n      ...chargeInfo,\r\n      // loanAccountId: this.loanaccountID,\r\n    }));\r\n\r\n    this.api.cardChargeDetailsSave(form).subscribe(\r\n      (resp) => {\r\n        this.snack.open(\"Charge Details Saved!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.next();\r\n        console.log(\"backend response from intrest saving\", resp);\r\n      },\r\n      (err) => {\r\n        this.snack.open(\r\n          \"Not able to connect to server!\",\r\n          \"INTERNAL SERVER ERROR\",\r\n          {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"chargeInfo detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n  checkbox(event) {\r\n    console.log(event.checked);\r\n  }\r\n  next() {\r\n    this.ls.setItem(\"CARD_CHARGE_DETAILS_DONE\", true);\r\n    this.ls.setItem('CARD_ENRICHMENT_DONE',true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/underwritingStage/list`]);\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/chargeDetails.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Charge Details</b></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\" class=\"m-333\">\r\n    <div class=\"mt-24\"></div>\r\n    <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\" class=\"chargeForm\">\r\n      <div class=\"spanDiv1\">\r\n        <span class=\"span\">Charge Details\r\n        </span>\r\n        <mat-divider class=\"divider\"></mat-divider>\r\n      </div>\r\n      <table class=\"cart-table default-bg mat-elevation-z0\">\r\n        <thead class=\"tr\">\r\n          <tr class=\"theadClass\">\r\n            <th>Interest Type</th>\r\n            <th>Amount</th>\r\n            <th>waiever</th>\r\n\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let chargeInfo of in.controls; let i = index\" class=\"tableRow\">\r\n            <ng-container [formGroup]=\"chargeInfo\">\r\n              <td>\r\n                <mat-form-field >\r\n                  <input class=\"input\" matInput formControlName=\"intrestType\" name=\"account_branch\"\r\n                     readonly />\r\n                </mat-form-field>\r\n              </td>\r\n              <td>\r\n                <mat-form-field >\r\n                  <span class=\"currencySymbol\" matPrefix>{{currencySymbol}}&nbsp;</span>\r\n                  <input \r\n                    class=\"input\" \r\n                    maxlength=\"10\"\r\n                    formControlName=\"amount\" \r\n                    (keypress)=\"onKeyPress($event)\" \r\n                    oninput=\"this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null\" matInput formControlName=\"amount\" name=\"account_branch\" \r\n                  />\r\n                </mat-form-field>\r\n              </td>\r\n              <td>\r\n                <div class=\"waiver-pos\">\r\n                  <mat-checkbox formControlName=\"waiver\" (change)='checkbox($event)' color=\"primary\"></mat-checkbox>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <a mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">Back</a>\r\n    <span fxFlex></span>\r\n    <button class=\"Nextbtn\" mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"interestForm.invalid\"\r\n      (click)=\"onSubmit(interestForm.value)\">Next</button>\r\n  </div>\r\n\r\n</div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n@Component({\r\n  selector: 'app-assessment-stage',\r\n  templateUrl: './assessment-stage.component.html',\r\n  styleUrls: ['./assessment-stage.component.scss']\r\n})\r\nexport class AssessmentStageComponent implements OnInit {\r\n  isCardAssessmentStageDone:boolean=false;\r\n  isAssessmentReport:boolean=false;\r\n  cardId:any;\r\n\r\n  constructor(\r\n    private ls: LocalStoreService,private router: Router, private dialogService: DialogService, \r\n    private cdr: ChangeDetectorRef,\r\n     private accountService: AccountService, private apiService: ApiService\r\n  ) { }\r\n  \r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.isAssessmentReport=this.ls.getItem('CARD_ASSESSMENT_DONE');\r\n    this.isCardAssessmentStageDone=this.ls.getItem('CARD_ASSESSMENT_STAGE_DONE');\r\n  }\r\n\r\n  goToCardAssessmentSummary(){\r\n    this.dialogService.cardAccountAssessmentSummaryDialog();\r\n  }\r\n  goToCardAppAssessmentSummary(){\r\n    this.dialogService.cardAccAssessmentSummaryDialog();\r\n  }\r\n\r\n  openLoanQualitativeDialog(){\r\n    this.dialogService.loanQualitativeSummaryDialog();\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-8\" *ngIf=\"isCardAssessmentStageDone\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Entry Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\" (click)=\"goToCardAppAssessmentSummary()\">\r\n                    View Summary\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n  \r\n\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <mat-card-title>1. Assessment Report</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div\r\n              fxLayout=\"row\"\r\n              fxLayoutGap=\"10px\"\r\n              fxLayoutAlign=\"space-between start\">\r\n              <div fxFlex=\"50%\"class=font1>\r\n                <p>\r\n                 The recommendation will be displayed with Approval or Rejection recommendation.\r\n                </p>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                <img [src]=\"'assets/images/svg/MaskGroup_13.svg'\" class=\"card-img\" />\r\n              </div>\r\n            </div>\r\n        \r\n            <div class=\"mb-1\" *ngIf=\"isAssessmentReport\">\r\n              <mat-progress-bar\r\n                [color]=\"'primary'\"\r\n                mode=\"determinate\"\r\n                [value]=\"100\"\r\n                class=\"rounded\"\r\n                style=\"height: 6px\">\r\n              </mat-progress-bar>\r\n              <p class=\"m-0 text-right\">Completed</p>\r\n              <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n            </div>\r\n       \r\n          </mat-card-content>\r\n    \r\n          <mat-divider></mat-divider>\r\n          <mat-card-actions>\r\n              <ng-container *ngIf=\"isAssessmentReport; else showAssessment\">\r\n                  <button mat-button (click)=\"goToCardAssessmentSummary()\" color=\"primary\">\r\n                    View Details <mat-icon>chevron_right</mat-icon>\r\n                  </button>\r\n              </ng-container>\r\n              \r\n              <ng-template #showAssessment>\r\n                  <button mat-button [routerLink]=\"['/cardaccount/assessmentStage/application-assessment/list']\" color=\"primary\">\r\n                     Add Details <mat-icon>chevron_right</mat-icon>\r\n                  </button>\r\n              </ng-template>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n    \r\n\r\n\r\n\r\n</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ApplicationEnrichmentComponent } from './application-enrichment/application-enrichment.component';\r\nimport { ChargeDetailsComponent } from './application-enrichment/charge-details/charge-details.component';\r\nimport { EnrichmentSummaryComponent } from './application-enrichment/enrichment-summary/enrichment-summary.component';\r\nimport { IntrestDetailsComponent } from './application-enrichment/intrest-details/intrest-details.component';\r\nimport { ApplicationEntryStageComponent } from './application-entry-stage/application-entry-stage.component';\r\nimport { CardAccountServicesComponent } from './application-entry-stage/card-account-services/card-account-services.component';\r\nimport { CardCustomerInformationComponent } from './application-entry-stage/card-customer-information/card-customer-information.component';\r\nimport { CardPrefrencesComponent } from './application-entry-stage/card-prefrences/card-prefrences.component';\r\nimport { CardInitiationComponent } from './application-entry-stage/card-initiation/card-initiation.component';\r\nimport { FinancialDetailsComponent } from './application-entry-stage/financial-details/financial-details.component';\r\nimport { AssessmentStageComponent } from './assessment-stage/assessment-stage.component';\r\nimport { CardAccountComponent } from './card-account.component';\r\nimport { DigitalSignNowOrLaterComponent } from './digital-signing/digital-sign-now-or-later/digital-sign-now-or-later.component';\r\nimport { DigitalSigningComponent } from './digital-signing/digital-signing.component';\r\nimport { UploadSignatureOrEsignComponent } from './digital-signing/upload-signature-or-esign/upload-signature-or-esign.component';\r\nimport { CardaccountApplicationAssessmentComponent } from './cardaccount-application-assessment/cardaccount-application-assessment.component';\r\nimport { DocumentDetailsComponent } from './document-upload/document-details/document-details.component';\r\nimport { DocumentUploadComponent } from './document-upload/document-upload.component';\r\nimport { ApprovalDetailsComponent } from './supervisor-approval-stage/approval-details/approval-details.component';\r\nimport { SupervisorApprovalStageComponent } from './supervisor-approval-stage/supervisor-approval-stage.component';\r\nimport { CardaccountQualitativeScoreboardComponent } from './underwriting-stage/cardaccount-qualitative-scoreboard/cardaccount-qualitative-scoreboard.component';\r\nimport { UnderwritingCreditRatingComponent } from './underwriting-stage/underwriting-credit-rating/underwriting-credit-rating.component';\r\nimport { UnderwritingStageComponent } from './underwriting-stage/underwriting-stage.component';\r\n// import { UploadLinkToEmailComponent } from './document-upload/upload-link-to-email/upload-link-to-email.component';\r\nimport { UnderwritingStageSummaryComponent } from './underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component';\r\n\r\n\r\nexport const CardAccountRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CardAccountComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'applicationEntryStage/list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list',\r\n        component: ApplicationEntryStageComponent,\r\n      },\r\n      {\r\n        path: 'documentupload/list/document-details',\r\n        component: DocumentDetailsComponent,\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list/financialDetails',\r\n        component: FinancialDetailsComponent,\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list/customerInformation',\r\n        component: CardCustomerInformationComponent,\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list/accountServices',\r\n        component: CardAccountServicesComponent,\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list/cardPrefrence',\r\n        component: CardPrefrencesComponent,\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list/cardInitiation',\r\n        component: CardInitiationComponent,\r\n      },\r\n      {\r\n        path: 'documentupload/list',\r\n        component: DocumentUploadComponent,\r\n      },\r\n      // {\r\n      //   path: 'documentupload/link',\r\n      //   component: UploadLinkToEmailComponent,\r\n      // },\r\n      {\r\n        path: 'applicationEnrichment/list',\r\n        component: ApplicationEnrichmentComponent,\r\n      },\r\n      {\r\n        path: 'applicationEnrichment/intrest-details',\r\n        component: IntrestDetailsComponent,\r\n      },\r\n      {\r\n        path: 'applicationEnrichment/charge-details',\r\n        component: ChargeDetailsComponent,\r\n      },\r\n      {\r\n        path: 'applicationEnrichment/Summary',\r\n        component: EnrichmentSummaryComponent,\r\n      },\r\n      {\r\n        path: 'underwritingStage/list',\r\n        component: UnderwritingStageComponent,\r\n      },\r\n      {\r\n        path: 'underwritingStage/summary',\r\n        component: UnderwritingStageSummaryComponent,\r\n      },\r\n      {\r\n        path: 'underwritingStage/credit-rating',\r\n        component:UnderwritingCreditRatingComponent,\r\n      },\r\n      {\r\n        path:'underwritingStage/qualitative',\r\n        component:CardaccountQualitativeScoreboardComponent,\r\n      },\r\n      {\r\n        path: 'assessmentStage/list',\r\n        component: AssessmentStageComponent,\r\n      },\r\n      {\r\n        path:'assessmentStage/application-assessment/list',\r\n        component:CardaccountApplicationAssessmentComponent,\r\n      },\r\n      {\r\n        path: 'SupervisorApprovalStage/list',\r\n        component: SupervisorApprovalStageComponent,\r\n      },\r\n      {\r\n        path: 'SupervisorApprovalStage/list/approvalDetails',\r\n        component: ApprovalDetailsComponent,\r\n      },\r\n      {\r\n        path: 'DigitalSigning/list',\r\n        component: DigitalSigningComponent,\r\n      },\r\n      {\r\n        path: 'digitalsigning/options',\r\n        component: DigitalSignNowOrLaterComponent,\r\n      },\r\n      {\r\n        path: 'digitalsigning/upload',\r\n        component: UploadSignatureOrEsignComponent,\r\n      }\r\n  \r\n  \r\n    ]\r\n  }\r\n];","import { CUSTOM_ELEMENTS_SCHEMA, Component, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-acc-charge-det-sum',\r\n  templateUrl: './card-acc-charge-det-sum.component.html',\r\n  styleUrls: ['./card-acc-charge-det-sum.component.scss']\r\n})\r\nexport class CardAccChargeDetSumComponent implements OnInit {\r\n\r\n  form1: Boolean;\r\n  form2: Boolean;\r\n\r\n  chargeFormIT: FormGroup;\r\n  savingForm: FormGroup;\r\n  accountId: any;\r\n  // accountType: any;\r\n  resp: { intrestType: string; amount: string; waiver: string }[];\r\n  loanAccountId: any;\r\n  accountType: String = \"Home Loan\";\r\n  cardId: number;\r\n  cardInfo: any;\r\n\r\n  constructor(\r\n    private snack: MatSnackBar,\r\n    private dialogRef: MatDialogRef<CardAccChargeDetSumComponent>,\r\n    private ls: LocalStoreService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    console.log(this.cardId);\r\n    \r\n    if(this.cardInfo){\r\n      this.loanAccountId = this.cardInfo.loanAccountId;\r\n    }\r\n    this.chargeFormIT = this.formBuilder.group({\r\n      chargeIT: new FormArray([]),\r\n    });\r\n\r\n    // this.api\r\n    //   .getFlexcubeDetails(\"chargeDetails\", this.accountType)\r\n    //   .subscribe((response) => {\r\n    //     this.onChangeInterest(response.length);\r\n    //     this.in.patchValue(response);\r\n    //   });\r\n\r\n  this.api.cardChargeFetchById(this.cardId).subscribe((resp) => {\r\n    console.log(\"resp from backend \", resp);\r\n    this.resp = resp;\r\n    this.onChangeInterest(this.resp.length);\r\n    this.in.patchValue(this.resp);\r\n  });\r\n\r\n// setTimeout(() => {\r\n//   this.api.cardChargeFetchById(this.cardId).subscribe((resp) => {\r\n//     console.log(\"resp from backend \", this.resp);\r\n//     this.resp = resp;\r\n//     this.onChangeInterest(this.resp.length);\r\n//     this.in.patchValue(this.resp);\r\n//   });\r\n// },10);\r\n    \r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            amount: [\"\"],\r\n            waiver: [false],\r\n            cardId: [this.cardId],\r\n            createdDate: [\"\"],\r\n            craetedBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.chargeFormIT.controls;\r\n  }\r\n  get in() {\r\n    return this.f.chargeIT as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/cardaccount/applicationEnrichment/list\"]);\r\n  }\r\n\r\n  onSubmit(form) {}\r\n  edit() {\r\n    // const amount = this.chargeFormIT.controls['chargeIT'].value.at(-1)['amount']\r\n    // console.log({amount});\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/cardaccount/applicationEnrichment/charge-details`]);\r\n  }\r\n\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"charge detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  close(){\r\n    this.router.navigate([\"/cardaccount/applicationEnrichment/list\"]);\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<!-- <p>card-acc-charge-det-sum works!</p>\r\n<mat-card>\r\n\t<mat-card-header>\r\n\t\t<mat-card-title>Title</mat-card-title>\r\n\t\t<mat-card-subtitle>Subtitle</mat-card-subtitle>\r\n\t</mat-card-header>\r\n\t<img matCardImage src=\"Card wide image source\">\r\n\t<mat-card-content>\r\n\t\tText content\r\n\t</mat-card-content>\r\n\t<mat-card-actions align=\"start\">\r\n\t\t<button mat-button (click)=\"onAction1\">Action1</button>\r\n\t\t\r\n\t</mat-card-actions>\r\n\t<mat-card-footer>\r\n\t\tFooter\r\n\t</mat-card-footer>\r\n</mat-card> -->\r\n\r\n<mat-card class=\"matCard\">\r\n  <button mat-button id=\"close\" mat-dialog-close>\r\n    <mat-icon class=\"closeicon\">close</mat-icon>\r\n  </button>\r\n  <div class=\"spanDiv1\">\r\n    <span class=\"paraFont\">Charge Details Summary\r\n\r\n    </span>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"main\">\r\n    <div fxFlex=\"100\">\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"chargeFormIT\" [formGroup]=\"chargeFormIT\">\r\n        <table class=\"cart-table default-bg mat-elevation-z0\">\r\n          <tbody>\r\n            <tr class=\"mt-4\" *ngFor=\"let chargeIT of [in.controls[in.controls.length - 1]]; let i = index\" class=\"form\">\r\n              <div class=\"row\" >\r\n                <ng-container [formGroup]=\"chargeIT\">\r\n                  <div class=\"heading\">\r\n                    <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />\r\n                  </div>\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Amount</mat-label>\r\n                      <input matInput formControlName=\"amount\" #amount name=\"account_branch\" class=\"input\" readonly />\r\n                    </mat-card>\r\n                  </td>\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">waiver</mat-label>\r\n                      <input matInput formControlName=\"waiver\" #waiver name=\"account_branch\" class=\"input\" readonly />\r\n                    </mat-card>\r\n                  </td>\r\n                </ng-container>\r\n              </div>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <span class=\"spanDiv\" (click)=\"edit()\">Edit</span>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n@Component({\r\n  selector: 'app-digital-view-summary',\r\n  templateUrl: './digital-view-summary.component.html',\r\n  styleUrls: ['./digital-view-summary.component.scss']\r\n})\r\nexport class DigitalViewSummaryComponent implements OnInit {\r\n  cardId:any;\r\n  accountInfo: any;\r\n  imageUrl: any;\r\n\r\n  constructor( private router: Router,private ls: LocalStoreService, private api: ApiService, private loader: AppLoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.cardId)\r\n     this.cardId = this.ls.getItem('cardId');\r\n     console.log(this.cardId)\r\n     this.getDigitalsignByCardId(this.cardId);\r\n  }\r\n\r\n  getDigitalsignByCardId(cardId) {\r\n    this.api.getDigitalsignByCardId(cardId).subscribe((resp) => {\r\n      console.log(resp)\r\n        console.log(resp[0].fileUrl);\r\n       this.imageUrl = resp[resp.length-1].fileUrl\r\n      this.loader.close();\r\n    }, (err: any) => {\r\n      // this.loader.close();\r\n    }); \r\n  }\r\n}\r\n","<div fxLayoutAlign=\"end stretch\" mat-dialog-close class=\"close\"><mat-icon>close</mat-icon></div>\r\n<div class=\"approval-details\">\r\n <fieldset>\r\n  <legend visible=\"true\" clas=\"paraFont\">Digital Signing</legend>\r\n </fieldset>\r\n <mat-card class=\"card\">\r\n    <div>\r\n        <div>\r\n            <img [src]=\" this.imageUrl\" alt=\"No Image\">\r\n        </div>\r\n       \r\n    </div>\r\n </mat-card>\r\n<!-- <p class=\"editButton\" mat-dialog-close \r\n[routerLink]=\"['/cardaccount/digitalsigning/options']\"\r\n>Edit</p> -->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-digitalsign-summary',\r\n  templateUrl: './digitalsign-summary.component.html',\r\n  styleUrls: ['./digitalsign-summary.component.scss']\r\n})\r\nexport class DigitalsignSummaryComponent implements OnInit {\r\n  cardId:any;\r\n  accountInfo: any;\r\n  imageUrl: any;\r\n  constructor( private router: Router,private ls: LocalStoreService, private api: ApiService, private loader: AppLoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    console.log(this.cardId)\r\n     this.cardId = this.ls.getItem('cardId');\r\n     console.log(this.cardId)\r\n     this.getDigitalsignByCardId(this.cardId);\r\n    //  if(this.accountInfo){\r\n    //   this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    //   }\r\n    \r\n  }\r\n  getDigitalsignByCardId(cardId) {\r\n    this.api.getDigitalsignByCardId(cardId).subscribe((resp) => {\r\n      console.log(resp)\r\n        console.log(resp[0].fileUrl);\r\n       this.imageUrl = resp[resp.length-1].fileUrl\r\n      this.loader.close();\r\n    }, (err: any) => {\r\n      // this.loader.close();\r\n    }); \r\n  }\r\n\r\n  \r\n\r\n}\r\n","<div fxLayoutAlign=\"end stretch\" mat-dialog-close class=\"close\"><mat-icon>close</mat-icon></div>\r\n<div class=\"approval-details\">\r\n <fieldset>\r\n  <legend visible=\"true\" clas=\"paraFont\">Digital Signing</legend>\r\n </fieldset>\r\n <mat-card class=\"card\">\r\n    <div>\r\n        <div>\r\n            <img [src]=\" this.imageUrl\" alt=\"No Image\">\r\n        </div>\r\n       \r\n    </div>\r\n </mat-card>\r\n<p class=\"editButton\" mat-dialog-close \r\n[routerLink]=\"['/cardaccount/digitalsigning/options']\"\r\n>Edit</p>\r\n</div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CurrencyPipe, Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\nimport { Console } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-cardaccount-application-assessment',\r\n  templateUrl: './cardaccount-application-assessment.component.html',\r\n  styleUrls: ['./cardaccount-application-assessment.component.scss'],\r\n})\r\nexport class CardaccountApplicationAssessmentComponent implements OnInit {\r\n  currency: string;\r\n  public assessmentForm: FormGroup;\r\n  isAssessmentReport: boolean = false;\r\n  arrayUserRecommendation = [\r\n    'Recommended For Approval',\r\n    'Pending For Documents',\r\n    'Recommended for Review',\r\n  ];\r\n  arraySystemRecommendation = [\r\n    'Recomended For Approval',\r\n    'Recommended For Reject',\r\n  ];\r\n  cardId: any;\r\n  curr: string = '';\r\n  isCardAssessmentStageDone: boolean = false;\r\n  requestedCardLimit: any;\r\n  recommendedCardLimit: any;\r\n  approvedCardLimit: string;\r\n  currencySymboll: string;\r\n  currencySymbol: boolean = true;\r\n  //    currency_symbols = {\r\n  //     'USD': '$', // US Dollar\r\n  //     'EUR': '€', // Euro\r\n  //     'GBP': '£', // British Pound Sterling\r\n  //     'ILS': '₪', // Israeli New Sheqel\r\n  //     'INR': '₹', // Indian Rupee\r\n  //     'JPY': '¥', // Japanese Yen\r\n  //     'KRW': '₩', // South Korean Won\r\n  //     'NGN': '₦', // Nigerian Naira\r\n  //     'PHP': '₱', // Philippine Peso\r\n  //     'PLN': 'zł', // Polish Zloty\r\n  //     'PYG': '₲', // Paraguayan Guarani\r\n  //     'THB': '฿', // Thai Baht\r\n  //     'UAH': '₴', // Ukrainian Hryvnia\r\n  //     'VND': '₫', // Vietnamese Dong\r\n  //     'CNY': '¥', // Chinese Yuan Currency\r\n  //     'ZAR': 'R', // South Africa Rand\r\n  // };\r\n  //localCurrencyArr=['CNY','GBP','INR','USD','ZAR','GBP'];\r\n  currencySymbols=[\r\n    {currency:'USD', symbol:'$'},{currency:'EUR', symbol:'€'},\r\n    {currency:'JPY', symbol:'¥'},\r\n    {currency:'GBP', symbol:'£'},\r\n    {currency:'ILS', symbol:'₪'},\r\n    {currency:'KRW', symbol:'₩'},\r\n    {currency:'NGN', symbol:'₦'},\r\n    {currency:'PHP', symbol:'₱'},\r\n    {currency:'PLN', symbol:'zł'},\r\n    {currency:'THB', symbol:'฿'},\r\n    {currency:'UAH', symbol:'₴'},\r\n    {currency:'VND', symbol:'₫'},\r\n    {currency:'CNY', symbol:'¥'},\r\n    { currency: 'ZAR', symbol: 'R'},\r\n    {currency:'INR', symbol:'₹'},\r\n  ]\r\n  currencyArr: { currency: string; symbol: string; }[];\r\n  currencytype: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private apiService: ApiService,\r\n    private _location: Location,\r\n    private ls: LocalStoreService,\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private currencyPipe: CurrencyPipe\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.curr = localStorage.getItem('Currency Type');\r\n    this.cardId = this.ls.getItem('cardId');\r\n    this.isAssessmentReport = this.ls.getItem('CARD_ASSESSMENT_DONE');\r\n    this.isCardAssessmentStageDone = this.ls.getItem(\r\n      'CARD_ASSESSMENT_STAGE_DONE'\r\n    );\r\n    this.buildAssessmentForm({});\r\n    if (this.isAssessmentReport == false) {\r\n      this.buildAssessmentForm();\r\n    } else {\r\n      this.getCardAssessmentDetails();\r\n    }\r\n  }\r\n\r\n  buildAssessmentForm(item?, isResponse?: boolean) {\r\n    this.assessmentForm = this.fb.group({\r\n      // cardId:[data?data.cardId:'952'],\r\n      // agencyId:[data?data.agencyId : 0],\r\n      // cardId:[item?item.cardId:'1'],\r\n      // assessmentId:[item?item.assessmentId:'1'],\r\n\r\n      cardId: [this.cardId],\r\n      assessmentId: [(item.assessmentId = '1')],\r\n      requestedCardLimit: [(item.requestedCardLimit = '15000')],\r\n      systemRecommendation: [\r\n        // (item.systemRecommendation = 'Recommended for Approval'),[Validators.required]\r\n        item ? item.systemRecommendation : '',\r\n        [Validators.required],\r\n      ],\r\n      approvedCardLimit: [(item.approvedCardLimit = '10000')],\r\n      // requestedCardLimit: [item ? item.requestedCardLimit: ' ₹ 15000'],\r\n      // systemRecommendation:[item ? item.systemRecommendation:'Recommended for Approval'],\r\n      // approvedCardLimit:[item ? item.approvedCardLimit: '10000'],\r\n      userRecommendation: [\r\n        item ? item.userRecommendation : '',[Validators.required]\r\n      ],\r\n      recommendedCardLimit: [\r\n        item ? item.recommendedCardLimit : '',Validators.compose(\r\n          [Validators.required,Validators.max(10000)])\r\n       \r\n      ],\r\n      remark: [item ? item.remark : ''],\r\n    });\r\n    console.log('curr', this.curr);\r\n    if (item) {\r\n      // if (this.curr === 'INR') {\r\n      //   //this.recommendedCardLimit = \"₹\" + ' ' + this.assessmentForm.value.recommendedCardLimit;\r\n      //   this.approvedCardLimit =\r\n      //     '₹' + ' ' + this.assessmentForm.value.approvedCardLimit;\r\n      //   this.requestedCardLimit =\r\n      //     '₹' + ' ' + this.assessmentForm.value.requestedCardLimit;\r\n      //   this.currencySymboll = '₹' + ' ';\r\n      //   console.log('reccommendedCardLimit:', this.recommendedCardLimit);\r\n      // } else {\r\n      //   // this.recommendedCardLimit = \"$\" + ' ' + this.assessmentForm.value.recommendedCardLimit;\r\n      //   this.approvedCardLimit =\r\n      //     '$' + ' ' + this.assessmentForm.value.approvedCardLimit;\r\n      //   this.requestedCardLimit =\r\n      //     '$' + ' ' + this.assessmentForm.value.requestedCardLimit;\r\n      //   this.currencySymboll = '$' + ' ';\r\n      // }\r\n      for(let i=0;i<this.currencySymbols.length;i++){\r\n        this.currencyArr= this.currencySymbols.filter((fltered)=>{\r\n         return this.curr===fltered.currency;\r\n        })\r\n        console.log(\"this.currencyArr\",this.currencyArr);\r\n      }\r\n      this.currencySymboll = this.currencyArr[0].symbol;  \r\n      this.approvedCardLimit = this.currencySymboll + ' ' + this.assessmentForm.value.approvedCardLimit;\r\n      this.requestedCardLimit = this.currencySymboll + ' ' + this.assessmentForm.value.requestedCardLimit;\r\n      this.recommendedCardLimit = this.currencySymboll + ' '+ this.assessmentForm.value.reccommendedCardLimit;\r\n\r\n\r\n      //  this.assessmentForm.controls.recommendedCardLimit.setValue(this.curr);\r\n      this.assessmentForm.controls.approvedCardLimit.setValue(\r\n        this.approvedCardLimit\r\n      );\r\n      this.assessmentForm.controls.requestedCardLimit.setValue(\r\n        this.requestedCardLimit\r\n      );\r\n      // this.assessmentForm.controls.recommendedCardLimit.setValue(this.recommendedCardLimit);//editable field\r\n    }\r\n  }\r\n\r\n  transformAmount(element) {\r\n    if (this.curr === 'INR') {\r\n      console.log(this.currencySymbol);\r\n      this.currencySymboll = this.currencyPipe.transform(\r\n        this.currencySymboll,\r\n        '₹'\r\n      );\r\n      console.log(this.currencySymbol);\r\n      element.target.value = this.currencySymboll;\r\n    } else {\r\n      this.currencySymboll = this.currencyPipe.transform(\r\n        this.currencySymboll,\r\n        '$'\r\n      );\r\n      element.target.value = this.currencySymboll;\r\n    }\r\n    console.log(element.target.value);\r\n  }\r\n\r\n  keyUpEvent(event: any){\r\n    console.log('event', event.target.value);\r\n    // var final=event.target.value+ this.currencySymboll;\r\n    let finalNum = event.target.value.toString().replace(/,/g, '').split('.');\r\n    // finalNum[0] = finalNum[0].replace(\r\n    //   /\\B(?=(\\d{1})+(?!\\d))/g,\r\n    //   this.currencySymboll\r\n    // );\r\n    let final = finalNum.join('.');\r\n    // let final = finalNum.slice(0, 5);\r\n    console.log('final', final);\r\n    console.log('finalLength', final.length);\r\n    //this.assessmentForm.controls.recommendedCardLimit.setValue(this.currencySymboll);\r\n    this.assessmentForm.controls.recommendedCardLimit.setValue(final);\r\n  }\r\n\r\n  _keyPress1(event: any) {\r\n    const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    const input = event.target.value;\r\n    if (input.length === 0 && event.which === 48) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  getCardAssessmentDetails() {\r\n    this.apiService\r\n      .fetchcardAssessmentDetailsById(this.cardId)\r\n      //this.apiService.fetchcardAssessmentDetails()\r\n      .subscribe((resp: any) => {\r\n        console.log(resp);\r\n        this.buildAssessmentForm(resp, true);\r\n      });\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  goNext(val) {\r\n    console.log('val', val.approvedCardLimit);\r\n    console.log('val.approvedCardLimit', val.approvedCardLimit.length);\r\n    console.log('val', val.recommendedCardLimit);\r\n    console.log('val.recommendedCardLimit',val.recommendedCardLimit.length);\r\n    val.approvedCardLimit = val.approvedCardLimit.slice(\r\n      2,\r\n      val.approvedCardLimit.length - 1\r\n    );\r\n    val.requestedCardLimit = val.requestedCardLimit.slice(\r\n      2,\r\n      val.requestedCardLimit.length - 1\r\n    );\r\n    //let num = val.recommendedCardLimit.length;\r\n    //var final = val.recommendedCardLimit.slice(1, num - 1);\r\n   // console.log('final', final);\r\n   // final = this.removeComma(final);\r\n   // console.log('final', final);\r\n   // val.recommendedCardLimit = final;\r\n    this.apiService.cardAssessmentDetails(val).subscribe((data) => {\r\n      console.log('data', data);\r\n      if (data != null) {\r\n        this.snack.open('Assessment details saved successfully!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n    this.next();\r\n  }\r\n  removeComma(num: any) {\r\n    var numb = num.replace(/,/g, '');\r\n    console.log('numb', numb);\r\n    return numb;\r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem('CARD_ASSESSMENT_DONE', true);\r\n    this.ls.setItem('CARD_ASSESSMENT_STAGE_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/SupervisorApprovalStage/list`]);\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/cardaccount/assessmentStage/list`]);\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/MaskGroup_13.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Assessment Report</b></div>\r\n    </div>\r\n  </div>\r\n\r\n  <!--Assessment Details starts here-->\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Assessment Details</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n\r\n      <div>\r\n        <form [formGroup]=\"assessmentForm\">\r\n          <div fxLayout=\"column\">\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\"class=\"field\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\"style=\"margin-left: -5px;\">\r\n                <mat-label class=\"hint\">Requested Card Limit *</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"requestedCardLimit\"\r\n                    (keypress)=\"_keyPress1($event)\"\r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                    placeholder=\"Requested Card Limit\"\r\n                    readonly\r\n                  />\r\n                  <!-- {{curr }} {{requestedCardLimit }} -->\r\n                  <!--  {{curr }} {{requestedCardLimit | number: '1.' }} -->\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"48%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">System Recommendation *</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <mat-select\r\n                    formControlName=\"systemRecommendation\"\r\n                    placeholder=\"Select\"\r\n                  >\r\n                   <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"\r\n                        let systemRecommendation of arraySystemRecommendation\r\n                      \"\r\n                      [value]=\"systemRecommendation\"\r\n                    >\r\n                      {{ systemRecommendation }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <!-- <input matInput formControlName=\"loanTenure\" class=\"alignment\" type=\"text\" readonly/>{{accountDetails?.loanTenure}} -->\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\"class=\"field\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\"style=\"margin-left: -5px;\">\r\n                <mat-label class=\"hint\">User Recommendation *</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <mat-select\r\n                    formControlName=\"userRecommendation\"\r\n                    placeholder=\"Select\"\r\n                  >\r\n                   <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option\r\n                      *ngFor=\"let userRecommendation of arrayUserRecommendation\"\r\n                      [value]=\"userRecommendation\"\r\n                    >\r\n                      {{ userRecommendation }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !assessmentForm.get('userRecommendation').valid &&\r\n                    assessmentForm.get('userRecommendation').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Please select the User Recommendation\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"48%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Recommended Card Limit</mat-label>\r\n                \r\n                <!-- <mat-card fxLayout=\"row wrap\"> -->\r\n                  <span fxFlex=\"4\">{{currencySymboll}}</span>\r\n                  <input fxFlex=\"96\"\r\n                    matInput\r\n                    formControlName=\"recommendedCardLimit\"\r\n                    (keypress)=\"_keyPress1($event)\"\r\n                    (blur)=\"transformAmount($event)\"                  \r\n                    type=\"text\"\r\n                    required\r\n                  />\r\n                  <!-- < [ngClass]=\"{'currencySymbol' : true}\"\r\n                input type=\"text\" (blur)=\"transformAmount($event)\" [(ngModel)]=\"formattedAmount\"  /> \r\n                (blur)=\"transformAmount($event)\"  (keyup)=\"keyUpEvent($event,true)\" -->\r\n                  <!-- {{curr }} {{recommendedCardLimit | number: '1.' }} -->\r\n                <!-- </mat-card> -->\r\n                <!-- <mat-error\r\n                  *ngIf=\"assessmentForm.get('recommendedCardLimit').touched &&\r\n                  assessmentForm.get('recommendedCardLimit').value == 0\">\r\n                  &nbsp;&nbsp; Please enter valid Recommended Card Limit\r\n                </mat-error> -->\r\n                <mat-error class=\"colorRed\"*ngIf=\"assessmentForm.get('recommendedCardLimit').touched &&\r\n                assessmentForm.get('recommendedCardLimit').value == 0\" >\r\n                  Please enter valid Recommended Card Limit\r\n              </mat-error> \r\n              <mat-error class=\"colorRed\" *ngIf=\"assessmentForm.get('recommendedCardLimit').value > 10000\">\r\n                The recommendation card limit should not be greater than approved card limit\r\n              </mat-error> \r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\"class=\"field\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\"style=\"margin-left: -5px;\">\r\n                <mat-label class=\"hint\">Approved Card Limit</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"approvedCardLimit\"\r\n                    (keypress)=\"_keyPress1($event)\"\r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                    placeholder=\"Approved Card Limit\"\r\n                    readonly\r\n                    required\r\n                  />\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"48%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Remarks</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Remarks\"\r\n                    formControlName=\"remark\"\r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                  />\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n                <!-- <mat-error\r\n                  *ngIf=\"\r\n                    !assessmentForm.get('remark').valid &&\r\n                    assessmentForm.get('remark').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Please enter the remarks\r\n                </mat-error> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n         \r\n        </form>\r\n      </div>\r\n    </mat-card>\r\n    <div fxLayout=\"row\"\r\n    fxLayoutAlign=\"space-between center\"\r\n    fxLayoutGap=\"16px\"\r\n    class=\"mt-32\">\r\n      <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n        Back\r\n\r\n      </button>\r\n       \r\n      <button type=\"button\" class=\"Nextbtn\" (click)=\"goNext(assessmentForm.value)\" [disabled]=\"!assessmentForm.valid\" mat-raised-button color=\"primary\">\r\n\r\n        Next\r\n    </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n// import { AccountService } from 'app/views/loan-account/account.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-intrest-details',\r\n  templateUrl: './intrest-details.component.html',\r\n  styleUrls: ['./intrest-details.component.scss']\r\n})\r\nexport class IntrestDetailsComponent implements OnInit {\r\n\r\n  interestForm: FormGroup;\r\n  accountId: any;\r\n  intrestFlag: Boolean;\r\n  interestResp: any;\r\n  showEditOption: boolean = false;\r\n  resp: {\r\n    intrestType: string;\r\n    intrestRateApplicable: string;\r\n    marginIn: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  accountType: String = \"Card Origin\";\r\n  cardId: number;\r\n  \r\n  constructor(\r\n    private accountService: AccountService,\r\n    private snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private loader: AppLoaderService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    let isCardInterestDetails = this.ls.getItem('CARD_INTEREST_DETAILS_DONE');\r\n    this.getInterestDetails();\r\n    if (this.cardId != null && isCardInterestDetails) {\r\n      this.showEditOption = true;\r\n      \r\n      this.getInterestDetails();\r\n    } \r\n    else {\r\n      console.log(\"else\");\r\n      this.showEditOption = false;\r\n      this.api\r\n      .getFlexcubeDetails(\"intrestDetails\", this.accountType)\r\n      .subscribe((response) => {\r\n        if(response) {\r\n          this.onChangeInterest(response.length);\r\n          this.in.patchValue(response);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.interestForm = this.formBuilder.group({\r\n      interestInfo: new FormArray([]),\r\n    });\r\n  \r\n  }\r\n\r\n  getInterestDetails(){\r\n    // this.loader.open();\r\n    // this.cardId=this.ls.getItem('cardId');\r\n    // console.log(this.cardId)\r\n    this.cardId = this.cardId;\r\n    this.api.cardInterestFetchById(this.cardId).subscribe((resp) => {\r\n      this.loader.close();\r\n      console.log(\"resp from backend \", resp);\r\n      if(resp) {\r\n        this.resp = resp;\r\n        this.onChangeInterest(this.resp.length);\r\n        this.in.patchValue(this.resp);\r\n      }\r\n    }, (err: any) => {\r\n      // this.loader.close();\r\n    }); \r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"Fixed Rate\", Validators.required],\r\n            intrestRateApplicable: [5.0, Validators.required],\r\n            marginIn :[null,[Validators.required, Validators.max(100), Validators.min(0)],],\r\n            effectiveRate: [10.0,[Validators.required, Validators.max(100), Validators.min(0)],],\r\n            cardInterestId: [\"\"],\r\n            cardId: [this.cardId],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interestInfo as FormArray;\r\n  }\r\n\r\n  appendPercentage(event) {\r\n    // console.log(event.key)\r\n    console.log(event.target.value);\r\n\r\n    if (!event.target.value.length) return;\r\n\r\n    if (event.target.value.length === 1) {\r\n      event.target.value = `${event.target.value}%`;\r\n    }\r\n    if (event.target.value.length > 1) {\r\n      event.target.value = `${event.target.value.slice(0, -1)}%`;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.interestForm.value)\r\n    this.api.cardintrestDetailsSave(this.interestForm.value).subscribe(\r\n      (resp) => {\r\n        this.snack.open(\"Interest Details Saved!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.next();\r\n        console.log(\"backend response from intrest saving\", resp);\r\n      },\r\n      (err) => {\r\n        this.snack.open(\r\n          \"Not able to connect to server!\",\r\n          \"INTERNAL SERVER ERROR\",\r\n          {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          }\r\n        );\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem('CARD_INTEREST_DETAILS_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/applicationEnrichment/charge-details`]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\r\n      `/cardaccount/applicationEnrichment/list`,\r\n    ]);\r\n  }\r\n\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"Interest detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/loanInterest.svg\" alt=\"\" class=\"w-80\" />\r\n    </div>\r\n\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Interest Details</b></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"m-333\">\r\n\r\n    <div class=\"mt-24\"></div>\r\n    <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\" class=\"chargeForm\">\r\n      <div class=\"spanDiv1\">\r\n        <span class=\"span\">\r\n          Interest Details\r\n        </span>\r\n        <mat-divider class=\"divider\"></mat-divider>\r\n      </div>\r\n      <table class=\"cart-table default-bg mat-elevation-z0\">\r\n        <thead class=\"tr\">\r\n          <tr class=\"theadClass\">\r\n            <!-- <th>Rate Code</th> -->\r\n            <th>Interest Type</th>\r\n            <th>Interest Rate Applicable</th>\r\n            <th>Margin in %</th>\r\n            <th>Effective Rate %</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let interestInfo of in.controls; let i = index\" class=\"tableRow\">\r\n\r\n            <ng-container [formGroup]=\"interestInfo\">\r\n              <td>\r\n                <mat-card class=\"matCardBox-form\">\r\n                  <input class=\"input\" matInput formControlName=\"intrestType\" name=\"intrestType\"\r\n                    placeholder=\"Interest Type\" readonly />\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox-form box1\">\r\n                  <input class=\"inputPercent\" matInput formControlName=\"intrestRateApplicable\" name=\"intrestRateApplicable\"\r\n                    placeholder=\"Interest Rate Applicable\"readonly />\r\n                    <span matSuffix>%</span>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox-form box1\">\r\n                  <input class=\"inputPercent\" matInput formControlName=\"marginIn\" name=\"margin\" \r\n                    placeholder=\"Margin\" readonly />\r\n                    <span matSuffix>%</span>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox-form box1\">\r\n                  <input class=\"inputPercent\" matInput formControlName=\"effectiveRate\" name=\"effectiveRate\"\r\n                    placeholder=\"Effective Rate\" value=\"\" readonly />\r\n                    <span matSuffix>%</span>\r\n                </mat-card>\r\n              </td>\r\n            </ng-container>\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  </div>\r\n\r\n  <!-- <div fxFlex=\"100\" class=\"mt-16\">\r\n    <a mat-button rounded color=\"primary\" (click)=\"goBack()\">Back</a>\r\n    <span fxFlex></span>\r\n    <button mat-raised-button color=\"primary\" type=\"button\"\r\n      (click)=\"onSubmit()\">Next</button>\r\n  </div> -->\r\n\r\n  \r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <a mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">Back</a>\r\n    <span fxFlex></span>\r\n    <button class=\"Nextbtn\" mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"interestForm.invalid\"\r\n      (click)=\"onSubmit()\">Next</button>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\nimport { DigitalViewSummaryComponent } from './digital-view-summary/digital-view-summary.component';\r\n\r\nimport { AccountService } from '../account.service';\r\n\r\nimport { DigitalsignSummaryComponent } from './digitalsign-summary/digitalsign-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-digital-signing',\r\n  templateUrl: './digital-signing.component.html',\r\n  styleUrls: ['./digital-signing.component.scss']\r\n})\r\nexport class DigitalSigningComponent implements OnInit {\r\n\r\n  informations = [\r\n    {\r\n      'id':1,\r\n      'title': '1. Digital Signing',\r\n      'content':\"Customer can either sign now or sign later\",\r\n      'percentage':70,\r\n      'status':'Pending',\r\n      'state': 'application/digital-sign/options',\r\n      'avatar':\"assets/images/esign.jpg\"\r\n\r\n    }\r\n  ];\r\n\r\n  accountId:any;\r\n  isEsignScreen:boolean = false;\r\n  constructor(private router:Router,private ls: LocalStoreService,public dialog: MatDialog,private cdr:ChangeDetectorRef, private accountService: AccountService) { }\r\n\r\n  ngOnInit(){\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.isEsignScreen = this.ls.getItem('eSignStage');\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      this.isEsignScreen = this.ls.getItem('eSignStage');\r\n    \r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  goToDetail(item){\r\n    console.log(item);\r\n    this.router.navigate([`/home/${item.state}`]);\r\n  }\r\n  goToDigitalSign() {\r\n    const dialogRef = this.dialog.open(DigitalsignSummaryComponent, { \r\n      height: '55%',\r\n      width: '40%',\r\n      disableClose: true });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n    })\r\n\r\n  }\r\n  goToDigitalSignViewSummary() {\r\n    const dialogRef = this.dialog.open(DigitalViewSummaryComponent, { \r\n      height: '55%',\r\n      width: '40%',\r\n      disableClose: true });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n    })\r\n\r\n  }\r\n\r\n  goToDigitalSigningOptions() {\r\n    this.ls.setItem('CARD_DIGITAL_STAGE_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigateByUrl('/cardaccount/digitalsigning/options');\r\n  }\r\n\r\n}","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-8\"*ngIf=\"isEsignScreen\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Entry Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\"(click)=\"goToDigitalSignViewSummary()\">\r\n                    View Summary\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n        <!-- Card 1 start-->\r\n        <mat-card>\r\n            <mat-card-header>\r\n                <mat-card-title>1.Digital Signing</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                       <div fxFlex=\"50%\" class=\"txtclr\">\r\n                            <p> Customer can either sign now or sign later.</p>\r\n                       </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/Mask Group 55.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <div class=\"mb-1\" *ngIf=\"isEsignScreen\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div>\r\n                <!--end::Progress-->\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isEsignScreen\">\r\n                    <button mat-button (click)=\"goToDigitalSign()\" color=\"primary\" class=\"pl-27\">\r\n                      View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                  </ng-container>\r\n          \r\n                  <a mat-button\r\n                  (click)=\"goToDigitalSigningOptions()\"\r\n                       *ngIf=\"!isEsignScreen\" color=\"primary\" class=\"pl-27\">\r\n                    Add Details <mat-icon>chevron_right</mat-icon>\r\n                  </a>\r\n                <!-- <ng-container> -->\r\n                    <!-- <a\r\n                      mat-button\r\n                      [routerLink]=\"['/cardaccount/digitalsigning/options']\"\r\n                      color=\"primary\"\r\n                    >\r\n                    {{ isEsignScreen ? \"Show Details\" : \"Add Details\" }}\r\n                    <mat-icon>chevron_right</mat-icon>\r\n                    </a> -->\r\n                    <!-- <button mat-button color=\"primary\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button> -->\r\n                <!-- </ng-container> -->\r\n\r\n                <!-- <ng-template #showLoan>\r\n                    <button mat-button color=\"primary\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template> -->\r\n\r\n\r\n            </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n\r\n\r\n</div>","<div class=\"matcard-size\">\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/Mask Group 6.svg\" alt=\"\" class=\"w-90\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Document Upload</b></div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n        <h2 class=\"ml-16\">Document Details</h2>\r\n        <div class=\"mt-24\"></div>\r\n    <mat-card *ngFor=\"let item of docholder; let m=index;\">\r\n        <label><span style=\"font-size: 20px;\">Customer Name({{m+1}}/{{docholder.length}}) :</span>&nbsp;&nbsp; {{item.firstName}}&nbsp;{{item?.middleName}}&nbsp;{{item.lastName}}</label>\r\n        <div>\r\n             <app-genric-document-upload [screenInfo]=\"screenInfo[m]\"></app-genric-document-upload>\r\n            \r\n       \r\n        </div>\r\n  \r\n    </mat-card>\r\n    </div>\r\n    <!-- <div>\r\n        <table>\r\n            <tr>\r\n                <td>\r\n\r\n                    <button  mat-raised-button type=\"button\"\r\n                        id=\"auto_trigger\">\r\n                        <mat-icon color=\"primary\">add</mat-icon>DOCUMENT\r\n                    </button>\r\n\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div> -->\r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n        <button mat-stroked-button class=\"Backbtn\" (click)=\"goBack()\">BACK</button>\r\n        <span fxFlex></span>\r\n        <button class=\"Nextbtn\" mat-raised-button color=\"primary\" [disabled]=\"disableNextAtIndex1\" type=\"button\" (click)=\"goNext()\">Next</button>\r\n    \r\n    </div>\r\n</div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatTabChangeEvent } from \"@angular/material/tabs\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { WebcamImage } from \"ngx-webcam\";\r\nimport { Subject, Observable, Subscription } from \"rxjs\";\r\nimport Swal from 'sweetalert2'\r\nimport { HttpClient, HttpEventType } from \"@angular/common/http\";\r\nimport { ApiService, LINK_URL } from \"app/shared/services/api.service\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MatProgressBar } from \"@angular/material/progress-bar\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { createWorker } from 'tesseract.js';\r\nimport { Worker } from 'tesseract.js';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { CutomerFingerPrintComponent } from 'app/views/others/cutomer-finger-print/cutomer-finger-print.component';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { SucessMessageComponent } from '../sucess-message/sucess-message.component';\r\nimport { DocumentOcrService } from 'app/views/others/genric-document-upload/document-ocr.service';\r\n@Component({\r\n  selector: 'app-document-details',\r\n  templateUrl: './document-details.component.html',\r\n  styleUrls: ['./document-details.component.scss']\r\n})\r\nexport class DocumentDetailsComponent implements OnInit {\r\n  documentForm: FormGroup;\r\n  public webcamImage: WebcamImage = null;\r\n  public webcamImage1: WebcamImage = null;\r\n  scan1: boolean;\r\n  scan2: boolean;\r\n  scan3: boolean;\r\n  scan1Array: boolean[] = [];\r\n  scan2Array: boolean[] = [];\r\n  scan3Array: boolean[] = [];\r\n  public customerId: string = null;\r\n  selectedFiles: any;\r\n  fileUrl: string | ArrayBuffer;\r\n  backSelected: any;\r\n  frontSelected: any;\r\n  othersSelected: any;\r\n  image: any;\r\n  imageURL: any;\r\n  imageURL1: any;\r\n  imageURL2: any;\r\n  displayVal: boolean;\r\n  frontImageArray: any[] = [];\r\n  backImageArray: any[] = [];\r\n  otherImageArray: any[] = [];\r\n  otherDocumentArray: any[] = [];\r\n  boxArray: any[] = [];\r\n  documents_Type: string[];\r\n  documentsList: any;\r\n  displayVal1: boolean;\r\n  displayVal2: boolean;\r\n  customer_Id: string;\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  //document_type: string;\r\n  document_type: string[] = [\"6\", \"7\", \"8\"];\r\n  custDocExist: boolean = false;\r\n  sanitizer: any;\r\n  doc: any;\r\n  doc_list: any;\r\n  selectedOptions2: any[] = [];\r\n  documentSide: number = null;\r\n  frontImage: any = null;\r\n  backImage: any = null;\r\n  otherImage: any = null;\r\n  uploadSub: Subscription;\r\n  secondBoxArray: boolean[] = [];\r\n  disableNext: boolean;\r\n  thirdBoxArray: boolean[] = [];\r\n  webcamImage2: WebcamImage;\r\n  ocrResult = 'Recognizing...';\r\n  name: any;\r\n  ocrFlag: boolean;\r\n  selectedDocumentTypes2: any[] = [];\r\n  namePancard: string;\r\n  nameOnCard: any[] = [];\r\n  dob: any;\r\n  dobArray: any[] = [];\r\n  panNumber: any;\r\n  idNumberArray: any[] = [];\r\n  docarr: any[] = [];\r\n  pancard: boolean;\r\n  dateOfIssue: any;\r\n  dateOfExpiry: any;\r\n  backSideId: any;\r\n  frontSideId: any;\r\n  otherSideId: any;\r\n  enableAadharReadOnly: boolean;\r\n  nameDoc: string;\r\n  address: string;\r\n  addressArray: any[] = [];\r\n  undefinedCheck: boolean;\r\n  addressDisplay: boolean;\r\n  dataFetched: boolean = false;\r\n  dataFetchedValue: string;\r\n  boxArray2: any[] = [];\r\n  boxArray3: any[] = [];\r\n  x: any;\r\n  temp: any;\r\n  temp2: any;\r\n  doc_name: any[] = [];\r\n  docholder:any[]= [];\r\n  docuNameArray: any[] = [];\r\n  docuName: any;\r\n  arrayOfImageArrays0: any[] = [];\r\n  arrayOfImageArrays1: any[] = [];\r\n  arrayOfImageArrays2: any[] = [];\r\n  secondKey: any;\r\n  page_id: any;\r\n  docValArray: any[] = [];\r\n  docarray1:any=[];\r\n  docum_name: any;\r\n  document_side: any;\r\n  newOtherPage: boolean = false;\r\n  disableNextAtIndex1: boolean = true;\r\n  \r\n  OtherpageGroup: FormGroup;\r\n  otherpagerray: FormArray;\r\n  deleterecord:any;\r\n  otherDocumentSelected: any;\r\n  otherDocumentSideId: any;\r\n  childindex: any;\r\n  otherDocPages: any[]=[];\r\n  otherDocumentArray2: any[]=[];\r\n  newDocumentSide: any;\r\n  fetchChildIndex: number;\r\n  isDocumentUploadDone: boolean = false;\r\n  isDocumentUpload: boolean = false;\r\n  cardId: any;\r\n  link: Promise<boolean>;\r\n  custId: any;\r\n  screenInfo: any = [];\r\n  screen: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private tokenService: ApiService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    private shareDataService: DataService,\r\n    private cdr: ChangeDetectorRef,\r\n    private api: ApiService,\r\n    private dialogService: DialogService,\r\n    private loader: AppLoaderService,\r\n    private accountService:AccountService,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private doOcrService:DocumentOcrService,\r\n  ) {\r\n  }\r\n  loading: boolean;\r\n  ff: boolean = false;\r\n  bf: boolean = false;\r\n  index: string[];\r\n  document_name: string[];\r\n  documentTypeArr: string[];\r\n  docName: any = \"document_name\";\r\n  backSideValue: any;\r\n  progressValFrontArray:number[]=[];\r\n  progressValBackArray:number[]=[];\r\n  progressValOthersArray:number[]=[];\r\n  progressValOtherDocumentArray:any[]=[];\r\n  customerDocs: any = [];\r\n  // Refresh customer id issue\r\n  refreshCustomerId: any;\r\n  docType:any;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem('cardId');\r\n    this.appApiService.fetchCardCustomersByCardId(this.cardId ,'cardOrigin')\r\n      .subscribe((resp: any) => {\r\n        for(let i=0;i<=resp.data.length; i++){\r\n        this.screen= {\r\n          screenName: \"Cad Document Upload\",\r\n          name:resp.data[i].firstName,\r\n          data: \"\",\r\n          customerId: resp.data[i].customerId,\r\n          cifNumber:resp.data[i].cifNumber\r\n        }\r\n        this.screenInfo.push(this.screen);};\r\n})// )\r\nconsole.log(this.screenInfo);\r\n    //this.addotherpage(0,1);\r\n    this.customerId = sessionStorage.getItem(\"customer_id\");\r\n    this.customer_Id = sessionStorage.getItem('customer_id');\r\n //   this.cardId = this.ls.getItem('cardId');\r\n    this.addCustomer();\r\n    this.getCustomerInformationDetails();\r\n    \r\n    this.documentForm = this.fb.group({\r\n      documentName: [\"\", [Validators.required]],\r\n      frontSide: [\"\", [Validators.required]],\r\n      backSide: [\"\"],\r\n      others: [\"\"],\r\n      items:this.fb.array([this.inititemrows('')])\r\n    });\r\n    this.doc_name=[\"Aadhar card\",\"Pan card\",\"Passport\"];\r\n    this.docValArray=['frontSide','backSide','others'];\r\n    this.tokenService.getDropDownValues(this.docName).subscribe((resp) => {\r\n      this.document_name = resp;\r\n    });\r\n    this.tokenService.getDropDownValues('document_type').subscribe((resp) => {\r\n      this.documentTypeArr = resp;\r\n    });\r\n    this.api.getName().subscribe((resp) => {\r\n      this.assignName(resp.name);\r\n    })\r\n    this.api.getOCR().subscribe(resp => {\r\n    })\r\n    this.shareDataService.getCustomerId.subscribe(cId => {\r\n      this.api.getOCR().subscribe(resp => {\r\n        console.log(\"ocr resp from backend \", resp);\r\n        this.assignOCRValues(resp);\r\n      })\r\n      console.log(\"cId=\", cId);\r\n      // if (47953 !== null) {\r\n      //   this.refreshCustomerId = cId;\r\n      //   this.getCustomerDocuments(cId);\r\n      //   console.log(\"cId=\", cId);\r\n      // }\r\n     \r\n    })\r\n    this.doOcrService.getenableNext()\r\n    .subscribe(data=>{\r\n      console.log(\"data disableNextAtIndex1 :: \",data);\r\n      this.disableNextAtIndex1=data;\r\n    });\r\n\r\n    //this.customerId = this.ls.getItem('customer_id');\r\n    this.documentForm.valueChanges.subscribe(data => {\r\n      if (data.doc_list.length > 0) {\r\n        console.log(\"data.doc_list.length\", data.doc_list.length);\r\n        this.selectedOptions2 = [];\r\n        data.doc_list.forEach((element, index) => {\r\n          this.selectedOptions2.push(element.documentType);\r\n        });\r\n      }\r\n\r\n    })\r\n    this.api.getKycDataFetchedInfo()\r\n      .subscribe(data => {\r\n        this.documentForm = this.fb.group({\r\n          documentsList: this.fb.array([this.createItem()]),\r\n          doc_list: (data === 'DATA FETCH') ? this.fb.array([]) : this.fb.array([this.createDocItem()]),\r\n          id: [\"\"],\r\n          upload: [\"\", [Validators.required]],\r\n        });\r\n        if (data === 'DATA FETCH') {\r\n          this.dataFetched = true;\r\n          this.dataFetchedValue = data;\r\n        }\r\n        else {\r\n          this.dataFetched = false;\r\n        }\r\n      })\r\n      this.disableNext=true;\r\n      //console.log(item.value);\r\n  }\r\n  addCustomer(){\r\n    this.docarr.push(this.inititemrows(''));\r\n  }\r\n  addCust(){\r\n    this.docarr.push(this.inititemrows(''));\r\n  }\r\n  inititemrows(item){\r\n    return this.fb.group({\r\n      id: item ? item.id : [''],\r\n     \r\n      fileUrl: item ? item.fileUrl : [''],\r\n    })\r\n  }\r\n  addDocumentlist(data:any) {\r\n    this.newOtherPage=false;\r\n    this.disableNext=true;\r\n    for(let i=0;i<= data.data.length-1;i++){\r\n    //this.doc_list = this.documentForm.get('doc_list') as FormArray;\r\n    this.documentsList = this.documentForm.get('documentsList') as FormArray;\r\n    this.documentsList.push(this.createItem());\r\n    this.doc_list.push(this.createDocItem());\r\n    }\r\n  }\r\n\r\n  addDocuments() {\r\n    this.newOtherPage=false;\r\n    this.disableNext=true;\r\n    //this.doc_list = this.documentForm.get('doc_list') as FormArray;\r\n    this.documentsList = this.documentForm.get('documentsList') as FormArray;\r\n    this.documentsList.push(this.createItem());\r\n    this.doc_list.push(this.createDocItem());\r\n  }\r\n  \r\n  createDocItem() {\r\n    return this.fb.group({\r\n      documentName: [\"\", [Validators.required]],\r\n      frontSide: [\"\", [Validators.required]],\r\n      backSide: [\"\"],\r\n      others: [\"\"],\r\n      fileUrl: [\"\"]\r\n    });\r\n  }\r\n\r\n  createItem() {\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n      documentName: [\"\", Validators.required],\r\n      documentType: [\"\"],\r\n    });\r\n  }\r\n\r\n  assignOCRValues(resp) {\r\n    console.log(resp);\r\n    this.dob = resp.dob;\r\n    this.namePancard = resp.namePancard;\r\n    this.panNumber = resp.panNumber;\r\n    this.frontImageArray[0] = resp.imageOCR;\r\n    //added code\r\n    this.backImageArray[0] = resp.imageOCRBack;\r\n    //added code\r\n    if (resp.imageOCRBack) {\r\n      this.backImageArray[0] = resp.imageOCRBack;\r\n      this.secondBoxArray[0] = true;\r\n      this.address = resp.address;\r\n      this.addressDisplay = true;\r\n      this.progressValBackArray[0] = 100;\r\n    }\r\n    const hasNonEmptyFields = Object.values(resp).some((value) => Boolean(value))\r\n      console.log(\"hasNonEmptyFields\", hasNonEmptyFields)\r\n    if (hasNonEmptyFields) {\r\n      this.documentForm.get('documentName').patchValue('Aadhar card');\r\n      console.log(this.documentForm.get('documentName'));\r\n      this.progressValFrontArray[0] = 100;\r\n      //this.enableAadharReadOnly = true;\r\n      this.disableNext=true;\r\n      this.pancard = true;\r\n    }\r\n  }\r\n\r\n  delete(report, value, i) {\r\n    this.docum_name=report.documentName;\r\n    this.customerId = sessionStorage.getItem(\"customer_id\");\r\n    if (value == 2) {\r\n      this.secondBoxArray[i] = false;\r\n      this.addressDisplay = false;\r\n      this.progressValBackArray[i] = 0;\r\n      this.backImageArray[i] = null;\r\n      this.backSelected = null;\r\n      this.document_side=value;\r\n  \r\n        this.api.deleteCustDoc(this.customerId, this.docum_name, this.document_side).subscribe((data) => {\r\n      });\r\n    }\r\n    if (value == 3) {\r\n      this.thirdBoxArray[i] = false;\r\n      this.progressValOthersArray[i] = 0;\r\n      this.otherImageArray[i] = null;\r\n      this.othersSelected = null;\r\n      this.document_side=value;\r\n    \r\n        this.api.deleteCustDoc(this.customerId, this.docum_name, this.document_side).subscribe((data) => {\r\n      });\r\n    }\r\n    this.disableNext = false;\r\n  }\r\n  getCustomerInformationDetails() {\r\n    this.appApiService.fetchCardCustomersByCardId(this.cardId ,'cardOrigin')\r\n      .subscribe((resp: any) => {\r\n        console.log(resp.data);\r\n        console.log(resp.data.customerId);\r\n        this.docholder=resp.data;\r\n        \r\n        for(let i=0;i<= resp.data.length-1;i++){\r\n          this.getCustomerDocuments(resp.data[i].customerId); \r\n        }\r\n       \r\n        console.log(this.docholder);\r\n        this.addDocumentlist(resp);\r\n        //this.buildCustomerForm(resp);\r\n      }, (err: any) => {\r\n      });\r\n  }\r\n\r\n  deleteOtherDocument(report, i, k){\r\n    this.docum_name=report.documentName;\r\n    this.customerId = sessionStorage.getItem(\"customer_id\");\r\n   this.newDocumentSide=k+4;\r\n    if(this.docarray1[i][k]){\r\n      \r\n    this.docarray1[i].pop();\r\n    this.otherDocumentArray[i][k]=null;\r\n   }\r\n  else{\r\n   }\r\n   this.api.deleteCustDoc(this.customerId, this.docum_name, this.newDocumentSide).subscribe((data) => {\r\n    \r\n  });\r\n\r\n    \r\n  }\r\n\r\n  assignName(name: any) {\r\n    this.name = name.toLowerCase();\r\n  }\r\n  addotherpage(a){\r\n   if(this.docarray1[a]){\r\n    this.docarray1[a].push(this.inititemrows(''));\r\n  }\r\n  else{\r\n    var otherArray=[this.inititemrows('')];\r\nthis.docarray1[a] = otherArray;\r\n  this.otherDocumentArray[a] = [];\r\n  this.progressValOtherDocumentArray[a]=[];\r\n  }\r\n  }\r\n  createOtherForm(item): FormGroup{\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n     // documentType: [\"\", Validators.required],\r\n      fileData: item ? item.fileData : [''],\r\n      fileUrl: item ? item.fileUrl : [''],\r\n    })\r\n  }\r\n\r\n  goNext(){\r\n    this.ls.setItem('CARD_DOCUMENT_STAGE_DONE',true);\r\n    this.ls.setItem('CARD_DOCUMENT_DONE',true);\r\n    this.ls.setItem('CARD_ENRICHMENT_DONE',true);\r\n    this.accountService.refresh.next(); \r\n    this.router.navigate([`/cardaccount/applicationEnrichment/list`]);\r\n  }\r\n  goBack() {\r\n    this.router.navigate([\r\n      `/cardaccount/documentupload/list`,\r\n    ]);\r\n  }\r\n  private trigger: Subject<void> = new Subject<void>();\r\n\r\n  triggerSnapshot(i): void {\r\n    this.trigger.next();\r\n    this.scan1Array[i] = false;\r\n    this.scan2Array[i] = false;\r\n    this.scan3Array[i] = false;\r\n  }\r\n\r\n  callingBox2(i) {\r\n    this.secondBoxArray[i] = true;\r\n    this.disableNext = true;\r\n    //this.enableAadharReadOnly = false;\r\n    console.log(this.secondBoxArray[i]);\r\n  }\r\n\r\n  callingBox3(i) {\r\n    this.thirdBoxArray[i] = true;\r\n    this.disableNext = true;\r\n    this.newOtherPage=true;\r\n    //this.enableAadharReadOnly = false;\r\n  }\r\n\r\n   doOCR(img, docVal, selectedFile, docSideEnum, i) {\r\n    const worker = createWorker({\r\n      logger: m => console.log(m)\r\n    });\r\n    (async () => {\r\n      this.loader.open();\r\n      await worker.load();\r\n      await worker.loadLanguage('eng');\r\n      await worker.initialize('eng');\r\n      const { data: { text } } = await worker.recognize(img);\r\n      this.loader.close();\r\n      if (docSideEnum === 3) {\r\n        this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        return;\r\n      }if (docSideEnum > 3) {\r\n        this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        return;\r\n      }\r\n      if (this.documentForm.value.documentsList[i].documentName === 'Pan card') {\r\n        const panCardDetails = this.panCardParser(text);\r\n        this.nameDoc = panCardDetails.name.toLowerCase();\r\n      }\r\n      if (this.documentForm.value.documentsList[i].documentName == 'Passport') {\r\n        const passbookDetails = this.passportParser(text);\r\n        this.nameDoc = passbookDetails.name.toLowerCase();\r\n        if (!this.nameDoc) {\r\n          this.shotToast(\"The document is not a valid Passport\");\r\n          return;\r\n        }\r\n      }\r\n      if (this.documentForm.value.documentsList[i].documentName == 'Aadhar card' && docSideEnum == '1')\r\n      //if(docSideEnum == '1')\r\n      {\r\n        const aadharDetails = this.aadharParser(text);\r\n        this.nameDoc = aadharDetails.fullName.toLowerCase();\r\n        let result = /^([a-z]){2,30}$/.test(this.nameDoc.replace(/\\s/g, \"\"));\r\n        if (result === false) {\r\n          // this.shotToast(\"Name in the document: \" + aadharDetails.fullName + \" is invalid\");\r\n          this.shotToast(\"The document is not a valid Aadhar card\");\r\n          return;\r\n        }\r\n      }\r\n      if (this.documentForm.value.documentsList[i].documentName == 'Aadhar card' && docSideEnum == '2')\r\n      //if(docSideEnum == '2')\r\n      {\r\n        const aadharDetails = this.aadharParser(text);\r\n        \r\n        let address = text.split(\",\");\r\n        for (let index = 0; index < address.length; index++) {\r\n          address[index] = address[index].replace(/[^a-zA-Z ]/g, \"\");\r\n          console.log(\"array after removing special characters \", address[index])\r\n        }\r\n        // console.log(\"array after removing special characters \",address)\r\n        if (address[2] === undefined) {\r\n          address[2] = '';\r\n        }\r\n        if (address[5] === undefined) {\r\n          address[5] = '';\r\n        }\r\n        if (address[6] === undefined) {\r\n          address[6] = '';\r\n        }\r\n        if (address[7] === undefined) {\r\n          address[7] = '';\r\n        }\r\n        if (address[2] === undefined && address[5] === undefined && address[6] === undefined && address[7] === undefined) {\r\n          this.addressDisplay = false;\r\n          return;\r\n        }\r\n        if (address[2] === '' && address[5] === '' && address[6] === '' && address[7] === '') {\r\n          this.addressDisplay = false;\r\n          return;\r\n        }\r\n        // this.addressArray[i] = address[2] + \",\" + address[5] + \",\" + address[6] + \",\" + address[7];\r\n        this.addressArray[i] = address[3] + \",\" + address[5] + \",\" + address[7] ;\r\n        this.addressDisplay = true;\r\n        this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        // this.backImageArray[i] = img;\r\n      }\r\n    \r\n      console.log(text.includes(this.name));\r\n      this.ocrFlag = text.includes(this.name);\r\n\r\n      if (docSideEnum == '1' && (this.nameDoc.replace(/\\s/g, \"\") !== this.name.replace(/\\s/g, \"\"))) {\r\n       \r\n        this.dialogService.confirmationDialog(this.nameDoc, this.name).subscribe((response) => {\r\n          console.log(response)\r\n          if (response == \"No\") {\r\n            this.changeValue2_Ocr(docVal, i);\r\n          }\r\n          if (response == \"Yes\") {\r\n\r\n            if (this.documentForm.value.documentsList[i].documentName == 'Pan card') {\r\n              const panCardDetails = this.panCardParser(text);\r\n              this.nameOnCard[i] = panCardDetails.name.toLowerCase();\r\n              this.dobArray[i] = panCardDetails.dateOfBirth;\r\n              this.idNumberArray[i] = panCardDetails.panNumber;\r\n              this.pancard = true;\r\n              this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n            }\r\n            if (this.documentForm.value.documentsList[i].documentName == 'Passport') {\r\n              const passbookDetails = this.passportParser(text);\r\n              this.nameOnCard[i] = passbookDetails.name.toLowerCase();\r\n              this.dobArray[i] = passbookDetails.dob;\r\n              this.idNumberArray[i] = passbookDetails.issueNoString;\r\n              this.dateOfIssue = passbookDetails.dateOfIssue;\r\n              this.dateOfExpiry = passbookDetails.dateOfExpiry;\r\n              this.pancard = true;\r\n              this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n            }\r\n            if (this.documentForm.value.documentsList[i].documentName == 'Aadhar card') {\r\n              const aadharDetails = this.aadharParser(text);\r\n              this.nameOnCard[i] = aadharDetails.fullName.toLowerCase();\r\n              this.dobArray[i] = aadharDetails.dob;\r\n              this.idNumberArray[i] = aadharDetails.adharNumber;\r\n              this.pancard = true;\r\n              this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n            }\r\n            else{\r\n              this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n            }\r\n\r\n          }\r\n        });\r\n\r\n      }\r\n      else if (docSideEnum == '1' && (this.nameDoc.replace(/\\s/g, \"\") == this.name.replace(/\\s/g, \"\"))) {\r\n        if (this.documentForm.value.documentsList[i].documentName == 'Pan card') {\r\n          const panCardDetails = this.panCardParser(text);\r\n          this.nameOnCard[i] = panCardDetails.name.toLowerCase();\r\n          this.dobArray[i] = panCardDetails.dateOfBirth;\r\n          this.idNumberArray[i] = panCardDetails.panNumber;\r\n          this.pancard = true;\r\n          this.uploadDoc(img,selectedFile, docVal, docSideEnum, i);\r\n        }\r\n        if (this.documentForm.value.documentsList[i].documentName == 'Passport') {\r\n          const passbookDetails = this.passportParser(text);\r\n          this.nameOnCard[i] = passbookDetails.name.toLowerCase();\r\n          this.dobArray[i] = passbookDetails.dob;\r\n          this.idNumberArray[i] = passbookDetails.issueNoString;\r\n          this.dateOfIssue = passbookDetails.dateOfIssue;\r\n          this.dateOfExpiry = passbookDetails.dateOfExpiry;\r\n          this.pancard = true;\r\n          this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        }\r\n        if (this.documentForm.value.documentsList[i].documentName == 'Aadhar card') {\r\n          const aadharDetails = this.aadharParser(text);\r\n          this.nameOnCard[i] = aadharDetails.fullName.toLowerCase();\r\n          this.dobArray[i] = aadharDetails.dob;\r\n          this.idNumberArray[i] = aadharDetails.adharNumber;\r\n          this.pancard = true;\r\n          this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        }\r\n        else{\r\n          this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        }\r\n      }\r\n      await worker.terminate();\r\n    })();\r\n  }\r\n  aadharParser = (str) => {\r\n    try {\r\n      let adharNumber,\r\n        dob,\r\n        name,\r\n        nameLineIndex = 2;\r\n      const asciiStr = str.replace(/[^\\x00-\\x7F]/g, \"\").trim();\r\n      const lines = asciiStr.split(\"\\n\");\r\n\r\n      for (let i = lines.length - 1; i >= 0; i--) {\r\n        let count = 0,\r\n          startIndex = -1;\r\n        for (let j = 0; j < lines[i].length; j++) {\r\n          if (lines[i][j] >= \"0\" && lines[i][j] <= \"9\") {\r\n            count++;\r\n            if (startIndex === -1) startIndex = j;\r\n          }\r\n        }\r\n        if (count >= 12) {\r\n          adharNumber = lines[i].substr(startIndex, startIndex + 14);\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < lines.length; i++) {\r\n        [\"DOB\", \"Year of Birth\"].some((docString) => {\r\n          const dobIndex = lines[i].indexOf(docString);\r\n          if (dobIndex !== -1) {\r\n            dob = lines[i]\r\n              .trim()\r\n              .slice(dobIndex, lines[i].length)\r\n              .split(\" \")\r\n              .pop();\r\n            nameLineIndex = i - 1;\r\n            console.log(dob);\r\n          }\r\n        });\r\n      }\r\n\r\n      const names = lines[nameLineIndex]\r\n        .split(\" \")\r\n        .filter((x) => x.length > 1)\r\n        .join(\" \");\r\n      console.log(names);\r\n      return {\r\n        dob,\r\n        adharNumber,\r\n        fullName: names,\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.error(\"Unable to parse aadhar\");\r\n    }\r\n  };\r\n\r\n  handleImage(webcamImage: WebcamImage, i): void {\r\n    this.webcamImage = webcamImage;\r\n    this.fun(this.webcamImage, i);\r\n  }\r\n  handleImage1(webcamImage: WebcamImage, i): void {\r\n    this.webcamImage1 = webcamImage;\r\n    this.fun1(this.webcamImage1, i);\r\n  }\r\n\r\n  isDocumentOptionDisabled2 = (value) => {\r\n    return this.selectedOptions2.includes(value);\r\n  }\r\n\r\n  changeValue2(value:any, i) {\r\n    this.disableNext=true;\r\n    if (this.selectedDocumentTypes2[i]) {\r\n      this.selectedOptions2 = this.selectedOptions2.filter(val => val !== this.selectedDocumentTypes2[i])\r\n    }\r\n    this.selectedDocumentTypes2[i] = value;\r\n    this.selectedOptions2.push(value);\r\n\r\n    this.secondBoxArray[i] = false;\r\n    this.thirdBoxArray[i] = false;\r\n    this.frontImageArray[i] = '';\r\n    this.backImageArray[i] = '';\r\n    this.otherImageArray[i] = '';\r\n    this.backSelected = '';\r\n    this.frontSelected = '';\r\n    this.othersSelected = '';\r\n    this.progressValFrontArray[i] = 0;\r\n    this.progressValBackArray[i] = 0;\r\n    this.pancard = false;\r\n    console.log(\"i=\", i);\r\n  }\r\n  panCardParser = (str) => {\r\n    try {\r\n      const asciiStr = str.replace(/[^\\x00-\\x7F]/g, \"\");\r\n      const startIndex = asciiStr.indexOf(\"Permanent\");\r\n      const nameIndex = asciiStr.indexOf(\"Name\");\r\n\r\n      const panNumber = asciiStr.slice(startIndex, nameIndex).match(\"[A-Z]{5}[0-9]{4}[A-Z]{1}\")[0]; // Returns ain,ain,ain\r\n\r\n      const fatherNameIndex = asciiStr.indexOf(\"Father's Name :\");\r\n      //const slicedStr = asciiStr.slice(fatherNameIndex, str.length).split('\\n');\r\n\r\n      const nameString = asciiStr.slice(nameIndex, fatherNameIndex).split(\"\\n\"); // .find(str => str.length > 3);\r\n      const displayName = nameString[1].split(\" \");\r\n      const dobString = asciiStr.slice(asciiStr.indexOf(\"Date of Birth\"), asciiStr.length);\r\n      const dob = dobString.split(\"\\n\")[1].split(\" \")[0];\r\n      return {\r\n        panNumber,\r\n        name: `${displayName[0]} ${displayName[1]}`,\r\n        dateOfBirth: dob\r\n\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.error(\"Unable to parse pan card\");\r\n      this.snack.open('Please Upload Valid Document', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  };\r\n\r\n  passportParser = (str) => {\r\n    try {\r\n      let dateOfIssue, dateOfExpiry;\r\n      const asciiStr = str.replace(/[^\\x00-\\x7F]/g, \"\");\r\n      const nameIndex = asciiStr.indexOf(\"Given Name\");\r\n      const lines = asciiStr.slice(nameIndex, asciiStr.length).split(\"\\n\");\r\n      const doIssueIndex =\r\n        lines.findIndex((line) => line.indexOf(\"Date of Issue\") > -1) + 1;\r\n      if (doIssueIndex > 0) {\r\n        const dates = lines[doIssueIndex].split(\" \");\r\n        dateOfIssue = dates[dates.length - 2];\r\n        dateOfExpiry = dates[dates.length - 2];\r\n      }\r\n\r\n      const nationalityIndex = asciiStr.indexOf(\"Nationality\");\r\n      const dob = asciiStr\r\n        .slice(nationalityIndex, asciiStr.length)\r\n        ?.split(\"\\n\")[1]\r\n        .split(\" \")\r\n        .pop();\r\n\r\n      let issueNoString;\r\n      const issueNoStringArray = asciiStr.trim().split(\"\\n\");\r\n      for (let i = issueNoStringArray.length - 1; i >= 0; i--) {\r\n        if (issueNoStringArray[i].includes(\"<\")) {\r\n          issueNoString = issueNoStringArray[i].substr(\r\n            0,\r\n            issueNoStringArray[i].indexOf(\"<\")\r\n          );\r\n          break;\r\n        }\r\n      }\r\n\r\n      return {\r\n        dob,\r\n        name: lines[1],\r\n        issueNoString,\r\n        dateOfIssue,\r\n        dateOfExpiry,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Unable to parse passport\");\r\n    }\r\n  };\r\n\r\n\r\n  changeValue2_Ocr(docVal, i) {\r\n    if (docVal === 'frontSide') {\r\n      this.frontImageArray[i] = '';\r\n      this.frontSelected = '';\r\n      this.progressValFrontArray[i] = 0;\r\n    }\r\n    if (docVal === 'backSide') {\r\n      this.secondBoxArray[i] = false;\r\n      this.backImageArray[i] = '';\r\n      this.backSelected = '';\r\n      this.progressValBackArray[i] = 0;\r\n    }\r\n    if (docVal === 'others') {\r\n      this.thirdBoxArray[i] = false;\r\n      this.otherImageArray[i] = '';\r\n      this.othersSelected = '';\r\n      this.progressValOthersArray[i] = 0;\r\n      //this.enableAadharReadOnly = true;\r\n      this.disableNext=true;\r\n    }\r\n  }\r\n  j(arg0: string, j: any) {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  handleImage2(webcamImage: WebcamImage, i): void {\r\n    console.log(i);\r\n    this.webcamImage2 = webcamImage;\r\n    this.function2(this.webcamImage2, i);\r\n  }\r\n  function2(webcamImage, i) {\r\n    console.log(i);\r\n    const cId: string = this.customerId;\r\n    const uploadData2 = new FormData();\r\n    const data = {\r\n      customerId: this.refreshCustomerId,\r\n      documentName: this.documentForm.value.documentName,\r\n      documentType: \"3\",\r\n      fileType: webcamImage._mimeType,\r\n      fileName: \"doc\",\r\n      verificationType: \"KYC verification\",\r\n      documentSide: 3,\r\n      idNumber: this.panNumber\r\n    };\r\n    console.log(webcamImage.imageAsDataUrl);\r\n    this.otherImageArray[i] = webcamImage.imageAsDataUrl;\r\n    // this.doOCR(this.imageURL2);\r\n    this.displayVal2 = false;\r\n    let file = this.dataURLtoFile(webcamImage.imageAsDataUrl, \"Aadhar\");\r\n\r\n    uploadData2.append(\"data\", JSON.stringify(data));\r\n\r\n    uploadData2.append(\"file\", file);\r\n    this.tokenService.upload(uploadData2).subscribe(\r\n      (res: any) => {\r\n        this.progressValOthersArray[i] = 100;\r\n        if (res.type === 4) {\r\n          if (res.body) {\r\n            console.log(\"res.body.id\", res.body.id);\r\n            this.assignIdValues(\"others\", res.body.id);\r\n          }\r\n        }\r\n        this.documentForm.get(\"backSide\").patchValue(true);\r\n      }, (error) => {\r\n        if (error.status == 201) {\r\n          this.ff = true;\r\n          this.documentForm.get(\"backSide\").patchValue(true);\r\n          this.shotToast(\"Document Uploaded!\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  public get triggerObservable(): Observable<void> {\r\n    return this.trigger.asObservable();\r\n  }\r\n\r\n  tabClick(event: MatTabChangeEvent) {\r\n    const tab = event.tab.textLabel;\r\n\r\n    if (tab === \"Documents Upload\") {\r\n      this.router.navigateByUrl(\"/others/documents\");\r\n    }\r\n    if (tab === \"verification\") {\r\n      this.router.navigateByUrl(\"/others/verification\");\r\n    }\r\n    if (tab === \"Basic Information\") {\r\n      this.router.navigateByUrl(\"/others/kyc\");\r\n    }\r\n  }\r\n  onNext(documentForm) {\r\n   \r\n    this.documentForm.reset();\r\n    this.tokenService.setIndex({\r\n      index: 2,\r\n      // index: 0,\r\n    });\r\n    this.tokenService.setFinishFlag({\r\n    //finishFlag: false,\r\n    finishFlag: true,\r\n    });\r\n    //this.documentForm.reset();\r\n\r\n    this.updateKycStatus();\r\n    localStorage.setItem('page_id', '2');\r\n  }\r\n\r\n  getCustomerDocuments(cId) {\r\n    for (const key in this.document_type) {\r\n      if (Object.prototype.hasOwnProperty.call(this.document_type, key)) {\r\n        const element = this.document_type[key];\r\n        console.log(element, key, cId);\r\n      this.tokenService.getCustomerDocuments(cId, element)\r\n      .subscribe((data) => {\r\n        console.log(key, data, this.documentForm);\r\n        this.customerDocs = data;\r\n        this.docuNameArray=[\"Aadhar card\",\"Pan card\",\"Passport\"];\r\n        console.log(this.documentForm.controls.documentsList['controls']);\r\n        this.documentForm.controls.documentsList['controls'][0].controls.documentName.setValue(this.docuNameArray[0]); \r\n        //this.documentForm.get('documentName').patchValue(this.frontImage.documentName);\r\n\r\n   this.doc_name=[\"Aadhar card\",\"Pan card\",\"Passport\"];\r\n\r\n   for(let j=0; j<this.customerDocs.length; j++)  \r\n     {\r\n        if(this.customerDocs[j])\r\n        {\r\n          console.log(this.customerDocs[j].documentName);\r\n          for(let i=0; i<3; i++)\r\n          { \r\n            if(this.customerDocs[j].documentName==this.doc_name[i] && this.customerDocs[j].documentSide==1)\r\n               {  this.frontImageArray[i]=this.customerDocs[j].fileUrl;\r\n                this.progressValFrontArray[i]=100;\r\n                  console.log(\"index\",i)\r\n                 }  \r\n          }\r\n         for(let i=0; i<3; i++)\r\n          { \r\n           if(this.customerDocs[j].documentName==this.doc_name[i] && this.customerDocs[j].documentSide==2)\r\n             {  this.backImageArray[i]=this.customerDocs[j].fileUrl;\r\n              this.progressValBackArray[i] = 100;\r\n                this.secondBoxArray[i] = true; \r\n               }  \r\n          }\r\n         for(let i=0; i<3; i++)\r\n          {        \r\n          if(this.customerDocs[j].documentName==this.doc_name[i] && this.customerDocs[j].documentSide==3)\r\n             {  this.otherImageArray[i]=this.customerDocs[j].fileUrl;\r\n              this.progressValOthersArray[i] = 100;\r\n                this.thirdBoxArray[i] = true;\r\n               }  \r\n          }\r\n          for(let i=0; i<3; i++)\r\n          {        \r\n          if(this.customerDocs[j].documentName==this.doc_name[i] && this.customerDocs[j].documentSide>3)\r\n             { \r\n               \r\n               this.fetchChildIndex=this.customerDocs[j].documentSide-4;\r\n\r\n            this.newOtherPage=true;\r\n              if(this.docarray1[i]){\r\n               this.docarray1[i].push(this.inititemrows(''));\r\n               \r\n             }\r\n             else{\r\n               var otherArray=[this.inititemrows('')];\r\n           this.docarray1[i] = otherArray;\r\n             this.otherDocumentArray[i] = [];\r\n             }\r\n            this.otherDocumentArray[i][this.fetchChildIndex]=this.customerDocs[j].fileUrl;\r\n            console.log(\"this.otherDocumentArray\",this.otherDocumentArray);\r\n\r\n               }  \r\n          }\r\n        }\r\n        this.disableNext=false;\r\n      }\r\n\r\n     if (this.customerDocs.length > 0) \r\n     {\r\n     \r\n       \r\n        this.page_id=this.ls.getItem('page_id');\r\n        console.log(this.page_id);\r\n        if(this.customerDocs[0].documentName==\"Pan card\" && this.page_id !== 2)\r\n        {\r\n          let element2:HTMLElement = document.getElementById('auto_trigger') as HTMLElement;  \r\n          if(element2){\r\n            console.log(element2);\r\n            element2.click();\r\n            }\r\n            this.disableNext=false;\r\n        } \r\n        this.documentForm.controls.documentsList['controls'][1].controls.documentName.setValue(this.docuNameArray[1]);\r\n\r\n        if(this.customerDocs[0].documentName==\"Passport\" && this.page_id !== 2)\r\n        {\r\n          let element3:HTMLElement = document.getElementById('auto_trigger') as HTMLElement;  \r\n          if(element3){\r\n            console.log(element3);\r\n            element3.click();\r\n            } \r\n            this.disableNext=false;\r\n        }\r\n        this.documentForm.controls.documentsList['controls'][2].controls.documentName.setValue(this.docuNameArray[2]); \r\n\r\n          if (this.frontImage.documentName == 'Pan card') {\r\n            this.panNumber = this.customerDocs.find(item => item.documentSide == 2).idNumber\r\n          }\r\n\r\n          if(this.frontImage.documentName == 'Aadhar card'){\r\n            this.panNumber= this.customerDocs.find(item => item.documentSide == 1).idNumber\r\n          }\r\n          if(this.panNumber){\r\n            this.pancard=true;\r\n          }\r\n\r\n          if (this.frontImage != null) {\r\n            this.progressValFrontArray[0] = 100;\r\n          }\r\n          if (this.backImage != null) {\r\n\r\n            this.progressValBackArray[0] = 100;\r\n          }\r\n          if (this.otherImage != null) {\r\n\r\n            this.progressValOthersArray[0] = 100;\r\n          }\r\n          let payload = {\r\n            documentName: this.customerDocs[0].documentName,\r\n            frontSide: this.customerDocs[0].documentName,\r\n            backSide: this.customerDocs[0].documentName,\r\n          }\r\n          this.documentForm.patchValue(payload);\r\n          console.log(this.customerDocs[0].documentName);\r\n      }\r\n        this.cdr.markForCheck();\r\n        console.log(\"end of api\");\r\n     });\r\n   }\r\n  }\r\n  this.custId = cId\r\n}\r\n  convertBlob(docImage) {\r\n    let objectURL = 'data:image/jpeg;base64,' + docImage;\r\n    let source = this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n    return source;\r\n  }\r\n\r\n  updateKycStatus() {\r\n    this.tokenService.updateKycStatusByCustId(this.customer_Id, 'UNDER_PROCESS', \"\")\r\n      .subscribe(data => {\r\n        console.log('update response :: ', data)\r\n      })\r\n  }\r\n  previous() {\r\n    // this.documentForm.reset();\r\n    this.tokenService.setIndex({\r\n      index: 0,\r\n    });\r\n  }\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(CutomerFingerPrintComponent, {\r\n      data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      \r\n    });\r\n  }\r\n  scan(i) {\r\n    this.scan1Array[i] = true;\r\n    this.scan2Array[i] = false;\r\n    this.scan3Array[i] = false;\r\n    //this.enableAadharReadOnly = true;\r\n    this.disableNext=false;\r\n  }\r\n  scan12(i) {\r\n    this.scan1Array[i] = false;\r\n    this.scan2Array[i] = true;\r\n    this.scan3Array[i] = false\r\n    //this.enableAadharReadOnly = true;\r\n    this.disableNext=false;\r\n  }\r\n  scan13(i) {\r\n    this.scan1Array[i] = false;\r\n    this.scan2Array[i] = false;\r\n    this.scan3Array[i] = true;\r\n    //this.enableAadharReadOnly = true;\r\n    this.disableNext=false;\r\n  }\r\n\r\n  // webcam snapshot trigger\r\n  fun(webcamImage, i) {\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    const data = {\r\n      customerId: this.refreshCustomerId,\r\n      documentName: this.documentForm.value.documentName,\r\n      documentType: \"3\",\r\n      fileType: webcamImage._mimeType,\r\n      fileName: \"doc\",\r\n      verificationType: \"KYC verification\",\r\n      documentSide: 1,\r\n      idNumber: this.panNumber\r\n\r\n    };\r\n    this.frontImageArray[i] = webcamImage.imageAsDataUrl;\r\n    // this.doOCR(this.imageURL)\r\n    this.displayVal = false;\r\n    let file = this.dataURLtoFile(webcamImage.imageAsDataUrl, \"Aadhar\");\r\n\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n\r\n    uploadData.append(\"file\", file);\r\n\r\n    this.tokenService.upload(uploadData).subscribe(\r\n      (res) => {\r\n        this.progressValFrontArray[i] = 100;\r\n        this.documentForm.get(\"frontSide\").patchValue(true);\r\n      },\r\n      (error) => {\r\n        if (error.status == 201) {\r\n          this.bf = true;\r\n          this.documentForm.get(\"frontSide\").patchValue(true);\r\n          this.shotToast(\"Document Uploaded!\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  fun1(webcamImage, i) {\r\n    console.log(\"inside fun1\")\r\n    const cId: string = this.customerId;\r\n\r\n    const uploadData1 = new FormData();\r\n    const data = {\r\n      customerId: this.refreshCustomerId,\r\n      documentName: this.documentForm.value.documentName,\r\n      documentType: \"3\",\r\n      fileType: webcamImage._mimeType,\r\n      fileName: \"doc\",\r\n      verificationType: \"KYC verification\",\r\n      documentSide: 2,\r\n      idNumber: this.panNumber\r\n    };\r\n    this.backImageArray[i] = webcamImage.imageAsDataUrl;\r\n    // this.doOCR(this.imageURL1);\r\n    this.displayVal1 = false;\r\n    let file = this.dataURLtoFile(webcamImage.imageAsDataUrl, \"Aadhar\");\r\n\r\n    uploadData1.append(\"data\", JSON.stringify(data));\r\n\r\n    uploadData1.append(\"file\", file);\r\n\r\n    this.tokenService.upload(uploadData1).subscribe(\r\n      (res: any) => {\r\n        this.progressValBackArray[i] = 100;\r\n        if (res.type === 4) {\r\n          if (res.body) {\r\n            console.log(\"res.body.id\", res.body.id);\r\n            this.assignIdValues(\"backSide\", res.body.id);\r\n          }\r\n        }\r\n        this.documentForm.get(\"backSide\").patchValue(true);\r\n      }, (error) => {\r\n        if (error.status == 201) {\r\n          this.ff = true;\r\n          this.documentForm.get(\"backSide\").patchValue(true);\r\n          this.shotToast(\"Document Uploaded!\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  dataURLtoFile(dataurl, filename) {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, { type: mime });\r\n  }\r\n  assign(id) {\r\n    this.customerId = id;\r\n  }\r\n\r\n  onUpload(event, docVal, docSideEnum, i,customerId) {\r\n    console.log(customerId);\r\n    this.newDocumentSide=docSideEnum;\r\n    this.childindex=docSideEnum-4;\r\n    console.log(event, docVal, docSideEnum);\r\n    if (docVal === 'frontSide') {\r\n      this.progressValFrontArray[i] = 0;\r\n    }\r\n    if (docVal === 'backSide') {\r\n      this.progressValBackArray[i] = 0;\r\n    }\r\n    if (docVal === 'others') {\r\n      this.progressValOthersArray[i] = 0;\r\n    }\r\n    this.selectedFiles = event.target.files[0];\r\n    let size = event.target.files[0].size;\r\n    this.shotToast(`Your file size is ${this.formatBytes(size, 2)}`);\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        this.image = event.target.result;\r\n        if (docVal === 'backSide') {\r\n          this.backSelected = this.selectedFiles.name;\r\n          //this.backImageArray[i] = this.image;\r\n          this.doOCR(this.image, docVal, this.selectedFiles, docSideEnum, i);\r\n          this.displayVal1 = true;\r\n        }\r\n        if (docVal === 'frontSide') {\r\n          this.frontSelected = this.selectedFiles.name;\r\n          //this.frontImageArray[i] = this.image;\r\n          // this.doOCR(this.frontImageArray[i], docVal, this.selectedFiles, docSideEnum, i);\r\n          this.doOCR(this.image, docVal, this.selectedFiles, docSideEnum, i);\r\n          this.displayVal = true;\r\n        }\r\n        if (docVal === 'others') {\r\n          this.othersSelected = this.selectedFiles.name;\r\n          this.doOCR(this.image, docVal, this.selectedFiles, docSideEnum, i);\r\n          this.displayVal2 = true;\r\n          // this.documentSide = 1;\r\n        }\r\n        if(docVal === 'otherDocument'){\r\n          this.otherDocumentSelected = this.selectedFiles.name;\r\n         if(this.otherDocumentArray[i][this.childindex]){\r\n          \r\n        this.otherDocumentArray[i][this.childindex]=this.image;\r\n       }\r\n      else{\r\n      \r\n        var otherArray=[this.image];\r\n         this.otherDocumentArray[i][this.childindex] = this.image;\r\n        \r\n       }\r\n       console.log(\"final document\", this.docarray1)\r\n         \r\n          this.doOCR(this.otherDocumentArray[i][this.childindex], docVal, this.selectedFiles, docSideEnum, i);\r\n          //this.displayVal2 = true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.disableNext = false;\r\n  }\r\n\r\n\r\n  formatBytes(bytes, decimals) {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n\r\n  uploadDoc(img, url, docVal, documnetSideValue, i) {\r\n    this.childindex=documnetSideValue-4;\r\n    console.log(\"URL ---- \", url);\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    if(this.documentForm.value.documentsList[i].documentName==='Aadhar card')\r\n    { \r\n      this.docType='6';\r\n    }\r\n    if(this.documentForm.value.documentsList[i].documentName==='Pan card')\r\n    { \r\n      this.docType='7';\r\n    }\r\n    if(this.documentForm.value.documentsList[i].documentName==='Passport')\r\n    {\r\n      this.docType='8';\r\n    }\r\n\r\n    const data = {\r\n      // customerId: this.refreshCustomerId,\r\n      customerId: this.docholder[i].customerId,\r\n      //documentName: this.documentForm.value.documentName,\r\n      documentName: this.documentForm.value.documentsList[i].documentName,\r\n      documentType: this.docType,\r\n      fileType: url.type,\r\n      fileName: url.name,\r\n      verificationType: \"KYC verification\",\r\n      documentSide: documnetSideValue,\r\n      idNumber: this.panNumber,\r\n      name: this.namePancard,\r\n      dob: this.dob\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n    console.log(\"URL -- \", url.name, data, uploadData);\r\n    this.uploadSub = this.tokenService.upload(uploadData)\r\n      .subscribe((res: any) => {\r\n        console.log(\"Response -- \", res);\r\n        if (docVal === 'backSide') {\r\n          if (res.type) {\r\n            if (res.type == HttpEventType.UploadProgress) {\r\n              this.progressValBackArray[i] = Math.round(100 * (res.loaded / res.total));\r\n              this.backImageArray[i] = img;\r\n            }\r\n            // else if (res.type == HttpEventType.Response) {\r\n            //   this.progressValBack = 0;\r\n            // }\r\n          }\r\n        } else if ((docVal === 'frontSide')) {\r\n          if (res.type) {\r\n            if (res.type == HttpEventType.UploadProgress) {\r\n              this.progressValFrontArray[i] = Math.round(100 * (res.loaded / res.total));\r\n              this.frontImageArray[i] = img;\r\n            }\r\n            // else if (res.type == HttpEventType.Response) {\r\n            //   this.progressValFront = 0;\r\n            // }\r\n          }\r\n        }\r\n        else if ((docVal === 'others')) {\r\n          if (res.type) {\r\n            if (res.type == HttpEventType.UploadProgress) {\r\n              this.progressValOthersArray[i] = Math.round(100 * (res.loaded / res.total));\r\n              console.log(\"uploadProgress others\", this.progressValOthersArray[i]);\r\n              this.otherImageArray[i] = img;\r\n            }\r\n          }\r\n         \r\n        }\r\n        else{\r\n\r\n        }\r\n        if (res.body) {\r\n\r\n          console.log(\"res.body.id\", res.body.id);\r\n          this.assignIdValues(docVal, res.body.id);\r\n          this.documentForm.get(docVal).patchValue(true);\r\n          this.shotToast(\"Document Uploaded!\");\r\n        }\r\n      },\r\n        (error: any) => {\r\n          if (error.status == 201) {\r\n            this.documentForm.get(docVal).patchValue(true);\r\n            this.shotToast(\"Document Uploaded!\");\r\n          } else {\r\n            if (docVal === 'backSide') {\r\n              this.progressValBackArray[i] = 0;\r\n              this.backImageArray[i] = null;\r\n              this.backSelected = null;\r\n              this.shotToast(error.message);\r\n            } else {\r\n              this.progressValFrontArray[i] = 0;\r\n              this.frontImageArray[i] = null;\r\n              this.frontSelected = null;\r\n              this.shotToast(error.message);\r\n            }\r\n          }\r\n        }\r\n    );\r\n  }\r\n\r\n  assignIdValues(docVal: any, id: any) {\r\n    console.log(docVal);\r\n    if (docVal === 'backSide') {\r\n\r\n      this.backSideId = id;\r\n    }\r\n    if (docVal === 'others') {\r\n      this.otherSideId = id;\r\n    }\r\n    if (docVal === 'otherDocument') {\r\n      this.otherDocumentSideId = id;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.shareDataService.shareCustomerId(null);\r\n  }\r\n\r\n  cancelUpload(sideType: string) {\r\n    this.uploadSub.unsubscribe();\r\n    this.shotToast(\"Document Uploaded Cancelled!\");\r\n    if (sideType == 'backSide') {\r\n      this.progressValBackArray[0] = 0;\r\n      this.backImageArray[0] = null;\r\n      this.backSelected = null;\r\n    } else {\r\n      this.progressValFrontArray[0] = 0;\r\n      this.frontImageArray[0] = null;\r\n      this.frontSelected = null;\r\n    }\r\n  }\r\n  \r\n  shotToast(msg: string) {\r\n    this.snack.open(`${msg}`, \"OK\", {\r\n      duration: 6000,\r\n      verticalPosition: \"top\",\r\n      horizontalPosition: \"right\",\r\n    });\r\n  }\r\n\r\n  deleteDocument(report,index)\r\n  {\r\n    console.log(this.customerId, report, index);\r\n    this.customerId=this.ls.getItem('customerId');\r\n\r\n    const deleteRecord = this.documentForm.get('documentsList') as FormArray;\r\n    console.log(deleteRecord);\r\n    deleteRecord.removeAt(index);\r\n\r\n    this.api.delCustDoc(this.customerId, report.documentName).subscribe((data) => {\r\n    console.log(\"data after delete\",data);\r\n      });\r\n  }\r\n\r\nnext(){\r\n  this.router.navigate([`/cardaccount/applicationEnrichment/list`]);\r\n}\r\n\r\nuploadLink(){\r\n  \r\n  this.api.uploadDocLink(LINK_URL,this.custId).subscribe(\r\n    (res: any) => {\r\n      console.log(\"uploadDocLink\",res)\r\n      if(res != \"\" || res == undefined || res != null){\r\n        console.log(\"uploadDocLink\",res)\r\n        const dialogRef = this.dialog.open(SucessMessageComponent, {\r\n          width: \"35%\",\r\n          backdropClass: \"dialog-bg-trans\",\r\n          height: \"50%\",\r\n          disableClose: true,\r\n        });\r\n  \r\n        dialogRef.afterClosed().subscribe((result) => {\r\n          console.log(\"The dialog was closed\", result);\r\n        });\r\n      }\r\n  })\r\n}\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n@Component({\r\n  selector: 'app-financial-details',\r\n  templateUrl: './financial-details.component.html',\r\n  styleUrls: ['./financial-details.component.scss']\r\n})\r\nexport class FinancialDetailsComponent implements OnInit {\r\n  cardFinancialDetailsForm:FormGroup;\r\n  arrayEmploymentType: string[];\r\n  arrayEmploymentCategory: string[];\r\n  //formBuilder: any;\r\n  incomeErrMsg: string;\r\n  disableNext: boolean = false;\r\n  ExpensesErrMsg: any;\r\n  LiabilitiesErrMsg: any;\r\n  assetErrMsg: string;\r\n  liabilitiesErrMsg: string;\r\n  expensesErrMsg: string;\r\n  cardId: any;\r\n  showEditOption:boolean=false;\r\n  minDate = new Date();\r\n   maxDate = new Date();\r\n  applicant: any;\r\n  applicantName: any;\r\n  lastData:any;\r\n  currencySymbol: string;\r\n  currencytype: string;\r\n\r\n\r\n  constructor(   private formBuilder: FormBuilder, private api: ApiService,private snack: MatSnackBar, private accountService: AccountService,\r\n    private router: Router,private ls: LocalStoreService, private cdr:ChangeDetectorRef,\r\n   ) { \r\n    this.lastData = new Date().toISOString().slice(0,10);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    console.log(history.state.amount);\r\n    \r\n    this.cardId = this.ls.getItem('cardId');\r\n    this.currencytype=localStorage.getItem('Currency Type');\r\n    if(this.currencytype===\"INR\"){\r\n      this.currencySymbol=\"₹\"\r\n    }else if(this.currencytype===\"USD\"){\r\n      this.currencySymbol=\"$\"\r\n    }else if(this.currencytype===\"CNY\"){\r\n      this.currencySymbol=\"¥\"\r\n    }else if(this.currencytype===\"GBP\"){\r\n      this.currencySymbol=\"£\"\r\n    }else if(this.currencytype===\"ZAR\"){\r\n      this.currencySymbol=\"R\"\r\n    }\r\n    // this.cardId=this.ls.getItem(\"cardId\");\r\n   // this.applicant=this.ls.getItem('Card_Applicant_name');\r\n    this.applicantName=this.ls.getItem('primaryCustomerName');\r\n    let isFinancialScreen: boolean = JSON.parse(this.ls.getItem('CARD_FINANCIAL_DONE'));\r\n    this.getEmploymentType(\"fin_employment_type\");\r\n    this.getEmploymentCategory(\"employment_category\");\r\n    // setTimeout(() => {\r\n    //   this.buildFinacialFormGroup();\r\n    // },200);\r\n      \r\n  \r\n    if (this.cardId != null && isFinancialScreen) {\r\n      console.log(\"fggd\");\r\n      \r\n      this.showEditOption = true;\r\n      this.getCardFinancialDetailsSummary();\r\n    } else {\r\n      this.showEditOption = false;\r\n      setTimeout(() =>{\r\n        this.buildFinacialFormGroup();\r\n      },200)\r\n      \r\n    }\r\n\r\n\r\n    // this.createFinancialDetail();\r\n  }\r\n  getCardFinancialDetailsSummary(){\r\n    \r\n    this.api.getCardFinancialDetails(this.cardId)\r\n    .subscribe((result: any) => {\r\n\r\n      console.log(result);\r\n\r\n      let index = result.length-1;\r\n      console.log(result[index]);\r\n      \r\n      this.buildFinacialFormGroup(result[index]);\r\n\r\n    })\r\n  }\r\n  getEmploymentType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentType = data;\r\n    });\r\n  }\r\n  getEmploymentCategory(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentCategory = data;\r\n    });\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n   buildFinacialFormGroup(data?) {\r\n     console.log(data);\r\n    this.cardFinancialDetailsForm = this.formBuilder.group({\r\n      // Financial Details\r\n     // applicantName: [this.applicantName, Validators.required],\r\n      applicantName: [data ? data.applicantName : this.ls.getItem('Card_Applicant_name'), Validators.required],\r\n      currentlyWorking: [data ? data.currentlyWorking : ''],\r\n      applicantTotalIncome: [data ? data.applicantTotalIncome : 0, Validators.required],\r\n      applicantTotalExpense: [data ? data.applicantTotalExpense : 0, Validators.required],\r\n      lastUpdatedon: [data && data?.lastUpdatedon ? new Date(data.lastUpdatedon) : ''],\r\n      //limit_end_date: [data ? new Date(data.limit_end_date) : ''],\r\n      \r\n      // Employement Details\r\n      employmentType: [data ? data.employmentType : '', Validators.required],\r\n      employmentCategory: [data ? data.employmentCategory : '', Validators.required],\r\n      employeeNumber: [data ? data.employeeNumber : ''],\r\n      officeName: [data ? data.officeName : ''],\r\n      designation: [data ? data.designation : ''],\r\n      employmentStartDate: [data && data?.employmentStartDate ? new Date(data.employmentStartDate): '', Validators.required],\r\n      employmentEndDate: [data && data?.employmentEndDate ? new Date(data.employmentEndDate): '',],\r\n      \r\n      // Monthly Income\r\n      salary: [data ? data.salary : ''],\r\n      interestIncome: [data ? data.interestIncome : ''],\r\n      bonus: [data ? data.bonus : ''],\r\n      cashGifts: [data ? data.cashGifts : ''],\r\n      business: [data ? data.business : ''],\r\n      pension: [data ? data.pension : ''],\r\n      monthlyIncomeRentals: [data ? data.monthlyIncomeRentals : ''],\r\n      monthlyIncomeOthers: [data ? data.monthlyIncomeOthers : ''],\r\n      monthlyIncomeTotal: [data ? data.monthlyIncomeTotal : 0],\r\n            \r\n      // Monthly Expense\r\n      household: [data ? data.household : ''],\r\n      education: [data ? data.education : ''],\r\n      vehicleMaintenance: [data ? data.vehicleMaintenance : ''],\r\n      monthlyExpenseRentals: [data ? data.monthlyExpenseRentals : ''],\r\n      monthlyExpenseOthers: [data ? data.monthlyExpenseOthers : ''],\r\n      medical: [data ? data.medical : ''],\r\n      travel: [data ? data.travel : ''],\r\n      monthlyExpenseTotal: [data ? data.monthlyExpenseTotal : 0],\r\n      \r\n      // Annual Liability\r\n      propertyLoan: [data ? data.propertyLoan : ''],\r\n      vehicleLoan: [data ? data.vehicleLoan : ''],\r\n      personalLoans: [data ? data.personalLoans : ''],\r\n      overdraft: [data ? data.overdraft : ''],\r\n      cardOutstandings: [data ? data.cardOutstandings : ''],\r\n      liabilityOthers: [data ? data.liabilityOthers : ''],\r\n      liabilityTotal: [data ? data.liabilityTotal : 0],\r\n      \r\n      // Assets\r\n      savingDeposits: [data ? data.savingDeposits : ''],\r\n      properties: [data ? data.properties : ''],\r\n      automobiles: [data ? data.automobiles : ''],\r\n      fixedDeposits: [data ? data.fixedDeposits : ''],\r\n      lands: [data ? data.lands : ''],\r\n      assetOthers: [data ? data.assetOthers : ''],\r\n      stocks: [data ? data.stocks : ''],\r\n      assetTotal: [data ? data.assetTotal : 0],\r\n      \r\n      // accountId; -->need to get from other screens\r\n     // accountId: this.accountId != null ? this.accountId : '',\r\n    }, {validator:(formGroup:FormGroup)=>{\r\n      return this.validateInputGroups(formGroup)\r\n    }\r\n  });\r\n\r\n  }  \r\n  validateInputGroups(formgroup:FormGroup) {\r\n    if(formgroup.controls[\"salary\"].value || formgroup.controls[\"interestIncome\"].value || \r\n    formgroup.controls[\"bonus\"].value || formgroup.controls[\"cashGifts\"].value || \r\n    formgroup.controls[\"business\"].value || formgroup.controls[\"pension\"].value || \r\n    formgroup.controls[\"monthlyIncomeRentals\"].value || formgroup.controls[\"monthlyIncomeOthers\"].value) {\r\n     \r\n      this.incomeErrMsg = null\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.incomeErrMsg = \"Entering any one field is mandatory for Monthly Income Section\";\r\n      this.disableNext = false;\r\n    }\r\n    \r\n    if(formgroup.controls[\"household\"].value || formgroup.controls[\"education\"].value ||\r\n    formgroup.controls[\"vehicleMaintenance\"].value || formgroup.controls[\"monthlyExpenseRentals\"].value ||\r\n    formgroup.controls[\"monthlyExpenseOthers\"].value || formgroup.controls[\"medical\"].value || \r\n    formgroup.controls[\"travel\"].value) {\r\n\r\n      this.ExpensesErrMsg = null;\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.ExpensesErrMsg = \"Entering any one field is mandatory for Monthly Expenses Section\";\r\n      this.disableNext = false;\r\n    }\r\n    \r\n    if(formgroup.controls[\"propertyLoan\"].value || formgroup.controls[\"vehicleLoan\"].value ||\r\n    formgroup.controls[\"personalLoans\"].value || formgroup.controls[\"overdraft\"].value ||\r\n    formgroup.controls[\"cardOutstandings\"].value || formgroup.controls[\"liabilityOthers\"].value) {\r\n      \r\n      this.LiabilitiesErrMsg = null;\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.LiabilitiesErrMsg = \"Entering any one field is mandatory for Annual Liabilities Section\";\r\n      this.disableNext = false;\r\n    }\r\n    \r\n    if(formgroup.controls[\"savingDeposits\"].value || formgroup.controls[\"properties\"].value ||\r\n    formgroup.controls[\"automobiles\"].value || formgroup.controls[\"fixedDeposits\"].value ||\r\n    formgroup.controls[\"lands\"].value || formgroup.controls[\"assetOthers\"].value || \r\n    formgroup.controls[\"stocks\"].value) {\r\n\r\n      this.assetErrMsg = null;\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.assetErrMsg = \"Entering any one field is mandatory for Asset Section\";\r\n      this.disableNext = false;\r\n    }\r\n  }\r\n  \r\n  onSubmit() {\r\n    let startDate = this.converDate(this.cardFinancialDetailsForm.controls.employmentStartDate.value);\r\n    if(startDate && startDate!= \"Invalid date\"){\r\n    console.log(\"startDate\", startDate);\r\n    this.cardFinancialDetailsForm.value['employmentStartDate'] = startDate;\r\n    }else{\r\n      this.cardFinancialDetailsForm.value['employmentStartDate'] = null;\r\n    }\r\n    let endDate = this.converDate(this.cardFinancialDetailsForm.controls.employmentEndDate.value);\r\n    if(endDate && endDate!= \"Invalid date\"){\r\n      console.log(\"startDate\", endDate);\r\n      this.cardFinancialDetailsForm.value['employmentEndDate'] = endDate;\r\n    }else{\r\n      this.cardFinancialDetailsForm.value['employmentEndDate'] = null;\r\n    }\r\n    \r\n    //let lastUpdatedon = this.converDate(this.cardFinancialDetailsForm.controls.lastUpdatedon.value);\r\n    let lastUpdatedon =moment(this.cardFinancialDetailsForm.controls.lastUpdatedon.value).format('YYYY-MM-DD HH:MM:SS');\r\n    console.log(\"lastUpdatedon\",lastUpdatedon)\r\n    if(lastUpdatedon && lastUpdatedon!= \"Invalid date\"){\r\n      console.log(\"startDate\", lastUpdatedon);\r\n      this.cardFinancialDetailsForm.value['lastUpdatedon'] = lastUpdatedon;\r\n    }else{\r\n      this.cardFinancialDetailsForm.value['lastUpdatedon'] = null;\r\n    }\r\n\r\n    this.cardFinancialDetailsForm.value.accountType=\"cardOrigin\";\r\n    this.cardFinancialDetailsForm.value.cardId=this.cardId; \r\n    console.log(\"submit\", this.cardFinancialDetailsForm.value);\r\n    console.log(this.cardFinancialDetailsForm.value)\r\n    var payload: any[]=[];\r\n    payload.push(this.cardFinancialDetailsForm.value)\r\n    console.log(payload);\r\n    // if (!this.cardFinancialDetailsForm.value.applicantName || !this.cardFinancialDetailsForm.value.employmentType || !this.cardFinancialDetailsForm.value.employmentCategory) {\r\n    //   console.log(\"if--->\")\r\n    //   Swal.fire('Please Enter The Mandatory Fields !');\r\n    //   return false;\r\n    // }\r\n    this.api.upsertCardFinancialDetails(payload).subscribe(fincialResp => {\r\n\r\n      console.log(fincialResp);\r\n      this.snack.open('Financial Details Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n\r\n      // this.ls.setItem('limitEntryStage', 'true');\r\n      // this.ls.setItem('LIMIT_FIN_DONE', true);\r\n      //  this.accountService.refresh.next();\r\n       this.next();\r\n      // limit-entry-stage/view-summary\r\n      //this.router.navigate([`/home/application/enrichment/list`, this.accountId]);\r\n\r\n    }, err => {\r\n      this.snack.open('Error Unable to Save!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n\r\n  }\r\n  goBack(){\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/customerInformation`]);\r\n  }\r\n  next(){\r\n    this.ls.setItem('CARD_FINANCIAL_DONE', true)\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/cardPrefrence`]);\r\n   \r\n  }\r\n  converDate(value) {\r\n    // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n                return true;\r\n            else\r\n                return false;\r\n  }\r\n  // Total Monthly Income\r\n  calculateTotalMonthlyIncome(value) {\r\n    let income:number = Number(value.salary) + Number(value.business) + \r\n    Number(value.interestIncome) + Number(value.pension) + \r\n    Number(value.bonus) + Number(value.monthlyIncomeOthers) + \r\n    Number(value.monthlyIncomeRentals) + Number(value.cashGifts);\r\n    \r\n    // this.cardFinancialDetailsForm.controls.monthlyIncome.get('monthlyIncomeTotal').setValue(income);\r\n    this.cardFinancialDetailsForm.controls.monthlyIncomeTotal.setValue(income);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n\r\n    this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsForm.value);\r\n  }\r\n\r\n  // Total Monthly Expense\r\n  calculateTotalMonthlyExpenses(value) {\r\n    let expense:number = Number(value.household) + Number(value.education) + \r\n      Number(value.vehicleMaintenance) + Number(value.monthlyExpenseOthers) + \r\n      Number(value.medical) + Number(value.travel) + \r\n      Number(value.monthlyExpenseRentals);\r\n\r\n    // this.cardFinancialDetailsForm.controls.monthlyExpense.get('monthlyExpenseTotal').setValue(expense);\r\n    this.cardFinancialDetailsForm.controls.monthlyExpenseTotal.setValue(expense);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n\r\n    this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsForm.value);\r\n  }\r\n\r\n  // Total Liabilities\r\n  calculateTotalLiabilities(value) {\r\n    let liability:number = Number(value.propertyLoan) + Number(value.personalLoans) + \r\n    Number(value.overdraft) + Number(value.vehicleLoan) + \r\n    Number(value.cardOutstandings) + Number(value.liabilityOthers);\r\n\r\n    // this.cardFinancialDetailsForm.controls.annualLiability.get('liabilityTotal').setValue(liability);\r\n    this.cardFinancialDetailsForm.controls.liabilityTotal.setValue(liability);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n    \r\n    this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsForm.value);\r\n  }\r\n\r\n  // Total Assets\r\n  calculateTotalAssets(value) {\r\n    let asset:number = Number(value.savingDeposits) + Number(value.properties) + \r\n    Number(value.fixedDeposits) + Number(value.stocks) + \r\n    Number(value.automobiles) + Number(value.lands) + Number(value.assetOthers);\r\n\r\n    // this.cardFinancialDetailsForm.controls.assets.get('assetTotal').setValue(asset);\r\n    this.cardFinancialDetailsForm.controls.assetTotal.setValue(asset);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n    \r\n    this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsForm.value);\r\n  }\r\n\r\n  // Total Income, Expense and Final Total\r\n  calculateTotalIncomeAndExpense(value) {\r\n\r\n    let totalIncome:number = (value.monthlyIncomeTotal*12) + value.assetTotal;\r\n    let totalExpense:number =(value.monthlyExpenseTotal*12) + value.liabilityTotal;\r\n\r\n    this.cardFinancialDetailsForm.controls.applicantTotalIncome.setValue(totalIncome);\r\n    this.cardFinancialDetailsForm.controls.applicantTotalExpense.setValue(totalExpense);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n   }\r\n\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img\r\n        src=\"assets/images/svg/MaskGroup_2.svg\"\r\n        alt=\"\"\r\n        class=\"w-90\"\r\n      />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Financial Details</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div>\r\n  <form  *ngIf=\"cardFinancialDetailsForm\" [formGroup]=\"cardFinancialDetailsForm\">\r\n    <div fxLayout=\"row\">\r\n      <div fxFlex=\"100\">\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title>\r\n            <fieldset>\r\n            <legend visible=\"true\">Financial Details</legend>\r\n            </fieldset>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Applicant Name</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"applicantName\"\r\n                      \r\n                      placeholder=\"Applicant Name\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total Income*</mat-label>\r\n                    <span matPrefix>{{currencySymbol}}&nbsp;</span>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      \r\n                      formControlName=\"applicantTotalIncome\"\r\n                      placeholder=\"Total Income\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Last Update On</mat-label>\r\n                    <input\r\n                      matInput\r\n                      id=\"dob\"\r\n                      class=\"alignment\"\r\n                      readonly\r\n                      [matDatepicker]=\"picker\"\r\n                      [max]=\"lastData\"\r\n                      value=\"offerIssueDate\"\r\n                      placeholder=\"DD/MM/YYYY\"\r\n                      formControlName=\"lastUpdatedon\"\r\n                    />\r\n                   \r\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                      </mat-datepicker-toggle>\r\n\r\n                      <mat-datepicker #picker> </mat-datepicker>\r\n                   \r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Currently Working</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"currentlyWorking\"\r\n                      placeholder=\"Currently Working\"\r\n                    />\r\n                    <!-- <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('currentlyWorking')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please enter Currently Working\r\n                    </mat-error> -->\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total Expenses*</mat-label>\r\n                    <span class=\"curr_icon\" matPrefix>{{currencySymbol}}&nbsp;</span>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                     \r\n                      formControlName=\"applicantTotalExpense\"\r\n                      placeholder=\"Total  Expenses\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- <div class=\"pb-1\">\r\n                  <button mat-button color=\"primary\">Edit</button>\r\n                </div> -->\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">Employment Details</div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <!-- <form  [formGroup]=\"cardFinancialDetailsForm\"> -->\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Employment Type *</mat-label>\r\n                    <mat-select formControlName=\"employmentType\">\r\n                      <mat-option\r\n                        *ngFor=\"let employmentType of arrayEmploymentType\"\r\n                        [value]=\"employmentType\"\r\n                      >\r\n                        {{ employmentType }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('employmentType')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please select the Employment Type\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Employee number</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxLength=\"5\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      formControlName=\"employeeNumber\"\r\n                      placeholder=\"Employee Number\"\r\n                      [required]=\"cardFinancialDetailsForm\r\n                          .get('employmentType').value == 'Salaried'\"\r\n                      \r\n                    />\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('employeeNumber')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please enter the Employee Number\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Designation</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"20\"\r\n                      name=\"Designation\"\r\n                      formControlName=\"designation\"\r\n                      placeholder=\"Designation\"\r\n                      (keypress)=\"letterOnly($event)\"\r\n                      [required]=\"cardFinancialDetailsForm\r\n                          .get('employmentType').value == 'Salaried'\"\r\n                    />\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('designation')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please enter the Designation\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Employment Start Date *</mat-label>\r\n                    <input\r\n                      matInput\r\n                      id=\"dob\"\r\n                      class=\"alignment\"\r\n                      readonly\r\n                      [max]=\"maxDate\"\r\n                      [matDatepicker]=\"start\"\r\n                      value=\"offerIssueDate\"\r\n                      placeholder=\"DD/MM/YYYY\"\r\n                      formControlName=\"employmentStartDate\"\r\n                    />\r\n\r\n                    <mat-datepicker-toggle matSuffix [for]=\"start\">\r\n                    </mat-datepicker-toggle>\r\n\r\n                    <mat-datepicker #start> </mat-datepicker>\r\n\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('employmentStartDate')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Employment Start Date is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Employment Category *</mat-label>\r\n                    <mat-select\r\n                      name=\"employmentCategory\"\r\n                      formControlName=\"employmentCategory\"\r\n                    >\r\n                      <mat-option\r\n                        *ngFor=\"\r\n                          let employmentCategory of arrayEmploymentCategory\r\n                        \"\r\n                        [value]=\"employmentCategory\"\r\n                      >\r\n                        {{ employmentCategory }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('employmentCategory')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please select the Employment Category\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Office Name</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"20\"\r\n                      name=\"Office Name\"\r\n                      formControlName=\"officeName\"\r\n                      placeholder=\"Office Name\"\r\n                      (keypress)=\"letterOnly($event)\"\r\n                      [required]=\"cardFinancialDetailsForm\r\n                          .get('employmentType').value == 'Salaried'\"\r\n                    />\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('officeName')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please enter the Office Name\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Employment End Date</mat-label>\r\n\r\n                    <input\r\n                      matInput\r\n                      id=\"dob\"\r\n                      class=\"alignment\"\r\n                      readonly\r\n                      [matDatepicker]=\"end\"\r\n                      [min]=\"cardFinancialDetailsForm\r\n                      .get('employmentStartDate').value\"\r\n                      value=\"offerIssueDate\"\r\n                      placeholder=\"DD/MM/YYYY\"\r\n                      formControlName=\"employmentEndDate\"\r\n                    />\r\n\r\n                    <mat-datepicker-toggle matSuffix [for]=\"end\">\r\n                    </mat-datepicker-toggle>\r\n\r\n                    <mat-datepicker #end> </mat-datepicker>\r\n\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('employmentEndDate')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Employment End Date is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- </form> -->\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">\r\n              Monthly Income\r\n              <div class=\"ErrMsg\">{{ incomeErrMsg }}</div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Bonus</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"bonus\"\r\n                      name=\"bonus\"\r\n                      placeholder=\"Bonus\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Interest Income</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"interestIncome\"\r\n                      name=\"interestIncome\"\r\n                      placeholder=\"Interest Income\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Salary</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"salary\"\r\n                      name=\"salary\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      placeholder=\"Salary\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Cash Gifts</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"cashGifts\"\r\n                      name=\"cashGifts\"\r\n                      placeholder=\"Cash Gifts\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"monthlyIncomeTotal\"\r\n                      placeholder=\"Total\"\r\n                      readonly\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Business</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"business\"\r\n                      formControlName=\"business\"\r\n                      placeholder=\"Business\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Pension</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"pension\"\r\n                      formControlName=\"pension\"\r\n                      placeholder=\"Pension\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Rentals</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"monthlyIncomeRentals\"\r\n                      formControlName=\"monthlyIncomeRentals\"\r\n                      placeholder=\"Rentals\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Others</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"monthlyIncomeOthers\"\r\n                      formControlName=\"monthlyIncomeOthers\"\r\n                      placeholder=\"Others\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">\r\n              Monthly Expenses\r\n              <div class=\"ErrMsg\">{{ ExpensesErrMsg }}</div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Household</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"household\"\r\n                      name=\"household\"\r\n                      placeholder=\"Household\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Education</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"education\"\r\n                      name=\"mod\"\r\n                      placeholder=\"Education\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Vehicle Maintenance</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"vehicleMaintenance\"\r\n                      name=\"mod\"\r\n                      placeholder=\"Vehicle Maintenance\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Others</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"monthlyExpenseOthers\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                      placeholder=\"Others\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"monthlyExpenseTotal\"\r\n                      name=\"monthlyExpenseTotal\"\r\n                      placeholder=\"Total\" readonly\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Medical</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"medical\"\r\n                      formControlName=\"medical\"\r\n                      placeholder=\"Medical\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Travel</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"a_sig\"\r\n                      formControlName=\"travel\"\r\n                      placeholder=\"Travel\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Rentals</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"a_sig\"\r\n                      formControlName=\"monthlyExpenseRentals\"\r\n                      placeholder=\"Rentals\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">\r\n              Annual Liabilities\r\n              <div class=\"ErrMsg\">{{ LiabilitiesErrMsg }}</div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Property Loans</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"propertyLoan\"\r\n                      placeholder=\"Property Loan\"\r\n                      formControlName=\"propertyLoan\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Personal Loans</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"personalLoans\"\r\n                      formControlName=\"personalLoans\"\r\n                      placeholder=\"Personal Loans\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Overdrafts</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      name=\"overdraft\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"overdraft\"\r\n                      placeholder=\"Overdrafts\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"liabilityTotal\"\r\n                      placeholder=\"Total\"\r\n                      formControlName=\"liabilityTotal\" readonly\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Vehicle Loans</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"vehicleLoan\"\r\n                      name=\"vehicleLoan\"\r\n                      placeholder=\"Vehicle Loans\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Cards Outstanding's</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"cardOutstandings\"\r\n                      formControlName=\"cardOutstandings\"\r\n                      placeholder=\"Cards Outstanding's\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Others</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"liabilityOthers\"\r\n                      formControlName=\"liabilityOthers\"\r\n                      placeholder=\"Others\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">\r\n              Asset\r\n              <div class=\"ErrMsg\">{{ assetErrMsg }}</div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Savings Deposits</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"savingDeposits\"\r\n                      placeholder=\"Saving Deposits\"\r\n                      formControlName=\"savingDeposits\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Properties</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"properties\"\r\n                      formControlName=\"properties\"\r\n                      placeholder=\"Properties\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Fixed Deposits</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"fixedDeposits\"\r\n                      formControlName=\"fixedDeposits\"\r\n                      placeholder=\"Fixed Deposits\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Others</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"assetOthers\"\r\n                      placeholder=\"Others\"\r\n                      formControlName=\"assetOthers\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"assetTotal\"\r\n                      formControlName=\"assetTotal\"\r\n                      placeholder=\"Total\" readonly\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Stocks/Funds</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      placeholder=\"Stocks/Funds\"\r\n                      formControlName=\"stocks\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Automobiles</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"automobiles\"\r\n                      placeholder=\"Automobiles\"\r\n                      formControlName=\"automobiles\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Lands</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"lands\"\r\n                      placeholder=\"Lands\"\r\n                      formControlName=\"lands\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\">\r\n      <div fxFlex=\"100\">\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"space-between center\"\r\n          fxLayoutGap=\"16px\"\r\n          class=\"mt-32\"\r\n        >\r\n          <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n            Back\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"Nextbtn\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            [disabled]=\"\r\n              incomeErrMsg || ExpensesErrMsg || LiabilitiesErrMsg || assetErrMsg || !cardFinancialDetailsForm.valid\r\n            \"\r\n            (click)=\"onSubmit()\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n// import { AccountService } from 'app/views/home/account.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\nimport { UrlService } from 'app/views/home/url.service';\r\n\r\nimport { flow } from 'lodash';\r\nimport { flatMap, filter } from 'lodash/fp';\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-account-services',\r\n  templateUrl: './card-account-services.component.html',\r\n  styleUrls: ['./card-account-services.component.scss']\r\n})\r\nexport class CardAccountServicesComponent implements OnInit {\r\n\r\n  show: boolean = false;\r\n  selectedRow= false;\r\n  // selection = new SelectionModel<PeriodicElement>(true, []);\r\n  accountServiceForm: FormGroup;\r\n  statementList = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"EMAIL\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"POST\",\r\n      \"checked\": false\r\n    }\r\n  ];\r\n  communicationList = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"EMAIL\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"POST\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"SMS\",\r\n      \"checked\": false\r\n    }\r\n  ];\r\n\r\n  commChannelPreferencesArray : any[] = [];\r\n  AccStatementPreferenceArray : any[] = [];\r\n  accountId: any;\r\n  isNew: boolean;\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  previousUrl: string = '';\r\n  enableFinish: boolean=false;\r\n  statementFrncy: string;\r\n  bankChanlPref: string;\r\n  cardId:any;\r\n  constructor(private router: Router, private urlService: UrlService, private dataService: DataService, private route: ActivatedRoute, private snack: MatSnackBar, private ls: LocalStoreService, private accountService: AccountService, private formBuilder: FormBuilder, private apiService: ApiService, private cdr:ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem('cardId');\r\n    let isAccountServiceDone:boolean = JSON.parse(this.ls.getItem('CARD_ACC_SERVICE_DONE'));\r\n\r\n    if(this.cardId != null && isAccountServiceDone){\r\n      console.log(\"editform is true\");\r\n      this.showEditOption = true;\r\n      this.gettingAccountService();\r\n      // call api service and build data with response\r\n    }else{\r\n      this.showEditOption = false;\r\n      this.buildServiceForm();\r\n      console.log(\"editform is false\");\r\n      this.accountServiceForm.controls['statementPref'].patchValue(this.statementList);\r\n      this.accountServiceForm.controls['commChannelPref'].patchValue(this.communicationList);\r\n      // build form without data for capturing\r\n    }\r\n  \r\n    console.log(\"showEditOption\", this.showEditOption);\r\n    this.urlService.previousUrl$\r\n    .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n    });\r\n\r\n  }\r\n\r\n  gettingAccountService() {\r\n    this.apiService.gettingCardAccountServiceDetails(this.cardId)\r\n    .subscribe((resp: any) => {\r\n      console.log(\"All Account Service\", resp);\r\n      this.buildServiceForm(resp);\r\n      this.statementList = resp.statementPref;\r\n      this.communicationList = resp.commChannelPref;\r\n     \r\n      // console.log(\"showEditOption\", this.showEditOption);\r\n      this.cdr.markForCheck();\r\n\r\n      for(var i =0 ;i< this.communicationList.length;i++){\r\n      \r\n        if(this.communicationList[i].checked){\r\n          this.commChannelPreferencesArray.push(this.communicationList[i].name);\r\n        }\r\n      }\r\n      for(var i =0 ;i< this.statementList.length;i++){\r\n        if(this.statementList[i].checked){\r\n          this.AccStatementPreferenceArray.push(this.statementList[i].name);\r\n        }\r\n      }\r\n      \r\n      localStorage.setItem('statementFrequency', resp.statementFrequency);\r\n      this.enableFinish=true;\r\n     \r\n    });\r\n  }\r\n  statementFrequency(e){\r\n    this.statementFrncy=localStorage.getItem('statementFrequency');\r\n    if(e!=this.statementFrncy){\r\n      this.enableFinish=true;\r\n    }\r\n  }\r\n  \r\n\r\n  buildServiceForm(data?) {\r\n    this.accountServiceForm = this.formBuilder.group({\r\n      accServiceId: [data ? data.accServiceId : null],\r\n      productAccountId: [this.accountId != null ? this.accountId : null],\r\n      statementFrequency: [data ? data.statementFrequency : ''],\r\n      statementPref: [data ? this.flattenValues(data.statementPref) : ''],\r\n    \r\n      commChannelPref: [data ? this.flattenValues(data.commChannelPref) : ''],\r\n     \r\n    });\r\n  }\r\n\r\n  onChecklistChange(checked, checkbox) {\r\n    checkbox.checked = checked;\r\n    this.enableFinish=true;\r\n    const checklist = this.accountServiceForm.get('statementPref');\r\n    checklist.setValue(this.flattenValues(this.statementList));\r\n    if(checked){\r\n      this.AccStatementPreferenceArray.push(checkbox.name);\r\n    }\r\n    else{\r\n      this.AccStatementPreferenceArray.forEach( (item, index) => {\r\n        if(item === checkbox.name){\r\n          this.AccStatementPreferenceArray.splice(index,1);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onCheckComChange(checked, checkbox) {\r\n    console.log(checked);\r\n    console.log(checkbox);\r\n    checkbox.checked = checked;\r\n    const checklist = this.accountServiceForm.get('commChannelPref');\r\n    checklist.setValue(this.flattenValues(this.communicationList));\r\n    if(checked){\r\n      this.commChannelPreferencesArray.push(checkbox.name);\r\n      console.log(\"checked\",checkbox.name);\r\n      this.enableFinish=true;\r\n    }\r\n    else{\r\n      this.commChannelPreferencesArray.forEach( (item, index) => {\r\n        if(item === checkbox.name){\r\n          this.commChannelPreferencesArray.splice(index,1);\r\n          console.log(\"checked\",checkbox.name);\r\n          this.enableFinish=true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  flattenValues(checkboxes) {\r\n    const flattenedValues = flow([\r\n      filter(checkbox => checkbox.checked),\r\n      flatMap(checkbox => checkbox.name)\r\n    ])(checkboxes);\r\n    return flattenedValues.join(',');\r\n  }\r\n\r\n  isObjectEmpty(value) {\r\n    return (\r\n      Object.prototype.toString.call(value) === '[object Object]' &&\r\n      JSON.stringify(value) === '{}'\r\n    );\r\n  }\r\n\r\n  togglePreference() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/cardPrefrence`]);\r\n  }\r\n\r\n  onSubmit() {\r\n  \r\n    let accountPayload = {\r\n     // \"productAccountId\": this.accountId,\r\n      // \"cardId\":this.accountServiceForm.value.accServiceId,\r\n      \"cardId\":this.cardId,\r\n      \"statementFrequency\": this.accountServiceForm.value.statementFrequency,\r\n      \"statementPref\": this.statementList,\r\n     \r\n      \"commChannelPref\": this.communicationList,\r\n     \r\n      \"accountType\": \"cardOrigin\"\r\n    };\r\n\r\n    if (this.accountServiceForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.showEditOption) {\r\n      this.apiService.updateAccountService(this.cardId, accountPayload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n          //this.accountService.refresh.next();\r\n          //this.router.navigate([`/home/application/nominee/add/${this.accountId}`]);\r\n          this.snack.open('Account Service Updated!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n          //this.router.navigate([`/cardaccount/documentupload/list`]);\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      this.apiService.createAccountService(this.cardId, accountPayload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n         // this.ls.setItem('CARD_ACC_SERVICE_DONE', true);\r\n        //  this.accountService.refresh.next();\r\n         // this.router.navigate([`/home/application/nominee/add/${this.accountId}`]);\r\n          this.snack.open('Account Service Saved!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    this.goToNext()\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n  goToNext(){  \r\n    this.ls.setItem('CARD_ACC_SERVICE_DONE', true);\r\n    this.ls.setItem('CARD_APPLICATION_ENTRY_DONE',true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/documentupload/list`]);\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/undraw_opinion_dxp8.svg\"\r\n          alt=\"\"\r\n          class=\"w-90\"\r\n        />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Account Services</b></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- <div class=\"card-title-text\">Account Services</div> -->\r\n  <div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0 bordercard\" >\r\n        <mat-card-title>\r\n          <fieldset>\r\n          <legend visible=\"true\">Account Services</legend>\r\n          </fieldset>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form *ngIf=\"accountServiceForm\" [formGroup]=\"accountServiceForm\">\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <label><strong>Account Statement Frequency*</strong></label>\r\n                  <div class=\"m-16\"></div>\r\n                  <mat-radio-group\r\n                    class=\"mt-12\"\r\n                    name=\"statementFreq\"\r\n                    formControlName=\"statementFrequency\" (change)=\"statementFrequency($event.value)\"\r\n                    \r\n                    required  \r\n                  >\r\n                    <mat-radio-button value=\"MONTHLY\" class=\"ml-8\" color=\"primary\"\r\n                      >Monthly</mat-radio-button\r\n                    >\r\n                    <mat-radio-button\r\n                      value=\"BIANNUAL\"\r\n                      class=\"ml-16\"\r\n                      color=\"primary\"\r\n                      >Bi-Annual</mat-radio-button\r\n                    >\r\n                    <div class=\"m-16\"></div>\r\n                    <mat-radio-button\r\n                      value=\"QUATERLY\"\r\n                      class=\"ml-8\"\r\n                      color=\"primary\"\r\n                      >Quaterly</mat-radio-button\r\n                    >\r\n                    <mat-radio-button value=\"ANNUAL\" class=\"ml-16\" color=\"primary\"\r\n                      >Annual</mat-radio-button\r\n                    >\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n  \r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                <div class=\"pb-1\">\r\n                  <label><strong>Account Statement Preference*</strong></label>\r\n                  <div class=\"m-16\"></div>\r\n                  <p\r\n                    *ngFor=\"let item of statementList\"\r\n                    formArrayName=\"statementPref\"\r\n                  >\r\n                    <mat-checkbox\r\n                      class=\"checkbox-margin\"\r\n                      color=\"primary\"\r\n                      (change)=\"onChecklistChange($event.checked, item)\"\r\n                      [value]=\"item\"\r\n                      [checked]=\"item.checked\"\r\n                      >{{ item.name }}\r\n                    </mat-checkbox>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!--<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-32\">\r\n              <button\r\n                mat-button\r\n                rounded\r\n                color=\"primary\"\r\n               \r\n              >\r\n               ADD PREFERENCE  <!--<mat-icon>keyboard_arrow_down</mat-icon>  -->\r\n               <!--removed event from button  (click)=\"togglePreference()\"\r\n              </button>\r\n            </div>-->\r\n            <div class=\"m-32\"></div>\r\n            <!--removing if condition for ng-container *ngIf=\"show\"-->\r\n            <ng-container >\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                \r\n                \r\n  \r\n                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                  <div fxLayout=\"row wrap\">\r\n                    <div fxFlex=\"100\">\r\n                      <label\r\n                        ><strong>Communication Channel Preferences*</strong></label\r\n                      >\r\n                      <div class=\"m-12\"></div>\r\n                    </div>\r\n                    <div fxFlex=\"100\">\r\n                      <div\r\n                        fxFlex=\"25\"\r\n                        *ngFor=\"let item of communicationList\"\r\n                        formArrayName=\"commChannelPref\"\r\n                       \r\n                      >\r\n                        <mat-checkbox\r\n                        color=\"primary\"\r\n                          class=\"checkbox-margin\"\r\n                          (change)=\"onCheckComChange($event.checked, item)\"\r\n                          [value]=\"item\"\r\n                          [checked]=\"item.checked\"\r\n                          >{{ item.name }}\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n              \r\n            </ng-container>\r\n  \r\n            \r\n            <!-- [disabled]=\" !enableFinish || !accountServiceForm.valid ||\r\n               commChannelPreferencesArray.length == 0 || AccStatementPreferenceArray.length == 0\" -->\r\n               <!-- [disabled]=\"!accountServiceForm.valid\" -->\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n      <div\r\n              fxLayout=\"row\"\r\n              fxLayoutAlign=\"space-between center\"\r\n              fxLayoutGap=\"16px\"\r\n              class=\"mt-32\"\r\n            >\r\n              <button mat-button rounded class=\"Backbtn\"  (click)=\"goBack()\" >\r\n                Back\r\n              </button>\r\n              <button class=\"Nextbtn\" mat-raised-button (click)=\"onSubmit()\"  [disabled]=\"  !accountServiceForm.valid ||\r\n              commChannelPreferencesArray.length == 0 || AccStatementPreferenceArray.length == 0\" \r\n               color=\"primary\" >\r\n                Next\r\n              </button>\r\n            </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService, eSign_URL } from \"app/shared/services/api.service\";\r\nimport { ApplicationEntryStageService } from \"app/shared/services/application-entry-stage.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AccountService } from \"app/views/card-account/account.service\";\r\nimport { UrlService } from \"app/views/home/url.service\";\r\nimport { EsignaturePopComponent } from \"../esignature-pop/esignature-pop.component\";\r\nimport { UploadSignatureOrEsignComponent } from \"../upload-signature-or-esign/upload-signature-or-esign.component\";\r\nimport { DialogService } from \"app/shared/services/dialogs/dialog.service\";\r\nimport { rumangoAnimations } from \"app/shared/animations/rumango-animations\";\r\n@Component({\r\n  selector: \"app-digital-sign-now-or-later\",\r\n  templateUrl: \"./digital-sign-now-or-later.component.html\",\r\n  styleUrls: [\"./digital-sign-now-or-later.component.scss\"],\r\n  animations: rumangoAnimations\r\n})\r\nexport class DigitalSignNowOrLaterComponent implements OnInit {\r\n  accountdetailsForStatusUpdate: Object;\r\n  previousUrl: string = \"\";\r\n  show: boolean = false;\r\n  show1: any;\r\n  cardId:any;\r\n  accountId: any;\r\n  accountID:any;\r\n  isDone: boolean = false;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private accountService: AccountService,\r\n    private apiService: ApplicationEntryStageService,\r\n    private urlService: UrlService,\r\n    private api: ApiService,\r\n    private dialogService: DialogService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem(\"cardId\");\r\n    this.show1 = this.ls.getItem('eSignStage') && (this.ls.getItem('signedImage') !== null)\r\n    this.urlService.previousUrl$.subscribe((previousUrl: string) => {\r\n      this.previousUrl = previousUrl;\r\n    });\r\n  }\r\n\r\n  openPopUp(data?: any) {\r\n    let response: any;\r\n    if (data === undefined || data === null) {\r\n      response = {\r\n        isSignLater: false,\r\n        screen: \"Create Account\",\r\n      };\r\n    }\r\n    if (!this.show) {\r\n      let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n        UploadSignatureOrEsignComponent,\r\n        {\r\n          width: \"720px\",\r\n          disableClose: true,\r\n          data: data === undefined || data === null ? response : data,\r\n        }\r\n      );\r\n      dialogRef.afterClosed().subscribe((res) => {\r\n        this.accountId = this.accountID;\r\n        console.log(res);\r\n        if(res){\r\n          this.show=this.ls.getItem(\"enable\");\r\n          // this.show = this.ls.getItem('eSignStage')\r\n          this.show1=this.ls.getItem(\"enable\");\r\n\r\n          console.log(this.show);\r\n          this.getByAccountId(this.accountId);\r\n        }\r\n        // this.show = true;       \r\n          \r\n        //    this.ls.setItem(\"enable\", true);\r\n        //   this.getByAccountId(this.accountId);\r\n\r\n      });\r\n    }\r\n  }\r\n  getByAccountId(accountId: any) {\r\n    this.api.getCardInitiationDetails(this.cardId).subscribe((resp) => {\r\n      this.accountdetailsForStatusUpdate = resp;\r\n      this.updateCardAccountStatus();\r\n    });\r\n  }\r\n  onDone() {\r\n    this.isDone = true;\r\n    this.dialogService.alertForCardFinishButton().subscribe((response) => {\r\n      console.log(\"response ::\", response);\r\n    });\r\n  }\r\n  updateCardAccountStatus() {\r\n    let statusModel = {\r\n      cardId: this.cardId,\r\n      status: \"BACKLOG\",\r\n    };\r\n    this.api.updateCardStatus(statusModel).subscribe(updateResp => {\r\n      console.log(\"updateResp:: \", updateResp);\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/cardaccount/DigitalSigning/list']);\r\n  }\r\n\r\n  resetState() {\r\n    this.ls.removeItem(\"CARD_APPLICATION_ENTRY_DONE\");\r\n    this.ls.removeItem(\"CARD_INITIATION_DONE\");\r\n    this.ls.removeItem(\"Card_Customer_Done\");\r\n    this.ls.removeItem(\"CARD_FINANCIAL_DONE\");\r\n    this.ls.removeItem(\"card_prefrence_done\");\r\n    this.ls.removeItem(\"CARD_ACC_SERVICE_DONE\");\r\n    this.ls.removeItem(\"Card_CIF_NUM_PRIMARY\");\r\n    this.ls.removeItem(\"Card_Applicant_name\");\r\n\r\n    this.ls.removeItem(\"CARD_DOCUMENT_STAGE_DONE\");\r\n    this.ls.removeItem(\"CARD_DOCUMENT_DONE\");\r\n\r\n    this.ls.removeItem(\"CARD_ENRICHMENT_DONE\");\r\n    this.ls.removeItem(\"CARD_INTEREST_DETAILS_DONE\");\r\n    this.ls.removeItem(\"CARD_CHARGE_DETAILS_DONE\");\r\n\r\n    this.ls.removeItem(\"CARD_UNDERWRITING_DONE\");\r\n    this.ls.removeItem(\"CARD_CREDIT_RATING_DONE\");\r\n    this.ls.removeItem(\"CARD_QUALITATIVE_SCOREBOARD_DONE\");\r\n\r\n    this.ls.removeItem(\"CARD_ASSESSMENT_STAGE_DONE\");\r\n    this.ls.removeItem(\"CARD_ASSESSMENT_DONE\");\r\n\r\n    this.ls.removeItem(\"CARD_SUPERVISOR_DONE\");\r\n    this.ls.removeItem(\"CARD_APPROVAL_DONE\");\r\n\r\n    this.ls.removeItem(\"CARD_DIGITAL_STAGE_DONE\");\r\n    this.ls.removeItem(\"CARD_DIGITAL_SIGN_DONE\");\r\n    this.ls.removeItem(\"enable\");\r\n    this.ls.removeItem(\"eSignStage\");\r\n    this.ls.removeItem(\"cardId\");\r\n    this.ls.removeItem(\"CardNoOfApplicants\");\r\n    this.ls.removeItem(\"primaryCustomerName\");\r\n    this.ls.removeItem(\"cardownership_value\");\r\n    this.ls.removeItem(\"cId\");\r\n    this.ls.removeItem(\"cardSignedImage\");\r\n    this.ls.removeItem(\"enable\")\r\n\r\n    sessionStorage.clear();\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([\"/cardaccount/applicationEntryStage/list\"]);\r\n  }\r\n\r\n  onSubmit() {\r\n    let payload = {\r\n      cardId: this.cardId,\r\n      esignLink: \"\",\r\n      subject: \"testing\",\r\n      \r\n    };\r\n    this.api.signInLater(payload).subscribe(\r\n      (data: any) => {\r\n        console.log(\"data::\", data);\r\n        this.getByAccountId(this.cardId);\r\n        this.ls.setItem(\"eSignStage\", true);\r\n        // this.accountService.refresh.next();\r\n        let response: any = {\r\n          email: data.email,\r\n          customerId: data.customerId,\r\n          subject: data.subject,\r\n          isSignLater: true,\r\n          screen: \"Card Account\",\r\n        };\r\n        this.isDone=true;\r\n        this.dialogService.alertForcardSignLater().subscribe((response) => {\r\n          console.log(\"response ::\", response);                 \r\n        });  \r\n        this.show = this.ls.setItem(\"enable\",true);\r\n        //this.openPopUp(response);\r\n      },\r\n      (err: any) => {}\r\n    );\r\n  }\r\n}\r\n","<div class=\"matcard-size\">\r\n  <div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/Mask Group 55.svg\" alt=\"\" class=\"w-90\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Digital Signing</b></div>\r\n      </div>\r\n    </div>\r\n    <mat-card class=\"mat-card-img\">\r\n      <div fxFlex=\"100\" class=\"mt-32\">\r\n        <mat-card\r\n          class=\"sign-box hoverAdd\"\r\n          (click)=\"openPopUp()\"\r\n          [@animate]=\"{ value: '*', params: { delay: '300ms', y: '50px' } }\"\r\n          matRipple\r\n        >\r\n          <mat-card-content class=\"p-0\">\r\n            <mat-list class=\"compact-list mb-16\">\r\n              <mat-list-item class=\"\">\r\n                <img class=\"mr-16\" src=\"assets/images/svg/signnow.png\" alt=\"\" />\r\n                <!-- [ngClass]=\" show ? 'primary' : 'secondary'\" -->\r\n                <div fxLayout=\"column\" fxFlex=\"100\">\r\n                  <h3 class=\"m-0 mr-16\">Sign Now</h3>\r\n                  <span fxFlex></span>\r\n                  <br />\r\n                  <div fxFlex=\"40\" class=\"text\">\r\n                    Enables you to digitally sign the document. To e sign the\r\n                    document, click on it, create your eSignature, click on Done\r\n                    and it will add to your document.\r\n                  </div>\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div fxFlex=\"100\">\r\n        <div class=\"text-center\">\r\n          <button mat-button class=\"text\">OR</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxFlex=\"100\">\r\n        <mat-card\r\n          class=\"sign-box hoverAdd\"\r\n          (click)=\"onSubmit()\"\r\n          matRipple\r\n        >\r\n          <mat-card-content class=\"p-0\">\r\n            <mat-list class=\"compact-list mb-16\">\r\n              <mat-list-item class=\"\" >\r\n                <img\r\n                  class=\"mr-16\"\r\n                  src=\"assets/images/svg/signlater.png\"\r\n                  alt=\"\"\r\n                />\r\n                <!-- [ngClass]=\" show ? 'primary' : 'primary'\" -->\r\n                <div fxLayout=\"column\" fxFlex=\"100\">\r\n                  <h3 class=\"m-0 mr-16\">Sign Later</h3>\r\n                  <span fxFlex></span>\r\n                  <br />\r\n                  <div fxFlex=\"40\" class=\"text\">\r\n                    Enables you to sign the document later. To sign later, click\r\n                    here, an email will be sent to the respective email id\r\n                    provided with a sign link. You can verify and sign later.\r\n                  </div>\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </mat-card>\r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-button class=\"Backbtn\" style=\"height: 60%; margin-top: 1%;\" (click)=\"goBack()\">BACK</button>\r\n      <span fxFlex></span>\r\n\r\n      <button\r\n        class=\"Nextbtn\"\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        [disabled]=\"!show\"\r\n        (click)=\"onDone()\"\r\n      >\r\n        FINISH\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-initiation',\r\n  templateUrl: './card-initiation.component.html',\r\n  styleUrls: ['./card-initiation.component.scss']\r\n})\r\nexport class CardInitiationComponent implements OnInit {\r\n  cifNumberForm = new FormControl();\r\n  timer: any;\r\n  listOfCustByCif: any = [];\r\n\r\n  cardInitiationForm: FormGroup;\r\n  showEditOption: boolean = false;\r\n  isCardInitiationDone:boolean = false;\r\n  arrayofEmployment: any[] = [];\r\n  cardId: any;\r\n  applicant: any;\r\n  console: any;\r\n  isCifValid: boolean = false;\r\n  onbackSpace: boolean = false;\r\n  showSpinn: boolean;\r\n  cifNumberPrimary: any;\r\n  flag: boolean;\r\n  currencyData: any;\r\n  arrayAccountBranch: any;\r\n  branchName: any;\r\n  isExistingCustomer: boolean = true;\r\n  isAddOnCard:boolean = false;\r\n  localCurrencyArr = ['CNY', 'GBP', 'INR', 'USD', 'ZAR', 'GBP'];\r\n  selectedCurrency = this.localCurrencyArr[-1];\r\n  kycStatus: any;\r\n  status: any;\r\n  iskycStatus: boolean = false;\r\n  isGoForKyc: boolean = false;\r\n  isKycForCardDone: boolean = false;\r\n  cardType: any;\r\n  kycRefrence: string;\r\n  accountID: any;\r\n  accountNoArr = [];\r\n  cifNumber: any;\r\n  createdBy: any;\r\n  constructor(private ls: LocalStoreService, private router: Router, private accountService: AccountService,\r\n    private formBuilder: FormBuilder, private apiService: ApiService, private appApiService: ApplicationEntryStageService,\r\n    private snack: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit(): void { \r\n   // this.ls.getItem(\"kycnumber\");\r\n   console.log(this.ls.getItem(\"cardCustomer\"));\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.applicant=this.ls.getItem('NAME');\r\n    this.getEmploymentType(\"employment_type\");\r\n    this.createdBy= this.ls.getItem(\"ICUST_USER\");\r\n    \r\n    \r\n    console.log(\"this.cardId\",this.cardId);\r\n\r\n    this.buildInitiationForm();\r\n    // this.cardInitiationForm.get('applicantName').setValue(this.applicant);\r\n    let isCardDetails: boolean = JSON.parse(this.ls.getItem('CARD_INITIATION_DONE'));\r\n    this.isCardInitiationDone = this.ls.getItem('CARD_INITIATION_DONE');\r\n    if (this.cardId != null && this.isCardInitiationDone) {\r\n      this.iskycStatus = true;\r\n      this.showEditOption = true;\r\n      this.cifNumberPrimary = this.ls.getItem(\"Card_CIF_NUM_PRIMARY\");\r\n      this.getCardInitiation();\r\n\r\n    }\r\n\r\n\r\n    //console.log(\"this.kycStatus\",this.kycStatus);\r\n    this.isKycForCardDone = this.ls.getItem(\"kycForCard\");\r\n    if (this.isKycForCardDone == true) {\r\n      // this.kycStatus = this.ls.getItem(\"KycStatus\");\r\n      this.cardInitiationForm.get('existingCustomer').patchValue(false);\r\n      this.kycRefrence = this.ls.getItem(\"kycReference\");\r\n      if(this.kycRefrence){\r\n        let kycNum = this.kycRefrence.slice(4);\r\n        console.log(kycNum);        \r\n        this.apiService.getPrimaryInfo(kycNum).subscribe((result: any) => {\r\n          this.kycStatus = result.customerInfoList[0].customerAdditionalInfo.kycStatus\r\n          this.ls.setItem('KycStatus',this.kycStatus)\r\n        })\r\n      }\r\n      this.iskycStatus = true;\r\n      this.isGoForKyc = true;\r\n      this.cardInitiationForm.get('cardType').patchValue(this.ls.getItem(\"cardType\"));\r\n      console.log(this.ls.getItem(\"cardCustomer\"));\r\n      this.cardInitiationForm.controls.applicantName.setValue(this.ls.getItem(\"cardCustomer\"));\r\n      //this.ls.getItem(\"cardType\");\r\n    }\r\n    else {\r\n      //   this.iskycStatus=false;\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    if (event.keyCode === 8) {\r\n      this.onbackSpace = true;\r\n      this.isCifValid = false;\r\n    }\r\n    else {\r\n      this.onbackSpace = false;\r\n    }\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value, !event.target.value);\r\n    clearTimeout(this.timer)\r\n    \r\n    if (!event.target.value) {\r\n      this.isCifValid = false;\r\n      this.cardInitiationForm.get('cifNumber').clearValidators();\r\n      this.cardInitiationForm.get('cifNumber').updateValueAndValidity();\r\n      this.cardInitiationForm.get('existingCustomer').patchValue(true);\r\n      this.cardInitiationForm.reset();\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => { \r\n          console.log(res);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  goToggle(event: any) {\r\n    // this.cardInitiationForm.reset();\r\n    console.log(\"event\", event.checked);\r\n    if (event.checked == true) {\r\n      // this.cardInitiationForm.reset();\r\n      this.cardInitiationForm.get('existingCustomer').patchValue(true);\r\n      this.isExistingCustomer = true;\r\n      // this.cardInitiationForm.reset();\r\n\r\n    }\r\n    else {\r\n      // this.cardInitiationForm.reset();\r\n      this.cardInitiationForm.controls.currency.setValue(\"\");\r\n      // this.cardInitiationForm.get(\"currency\").setValue(\"\");    \r\n      this.cardInitiationForm.get(\"employmentType\").setValue(\"\");\r\n      this.cardInitiationForm.get(\"applicantName\").setValue(\"\");\r\n      this.cardInitiationForm.get(\"customerAccount\").setValue(\"\");\r\n      this.cardInitiationForm.get(\"nameOnCard\").setValue(\"\");\r\n      this.cardInitiationForm.get(\"affinityProgram\").setValue(\"\");\r\n      this.cardInitiationForm.get(\"cifNumber\").setValue(\"\");\r\n      this.kycRefrence = '';\r\n      this.kycStatus = '';\r\n      this.iskycStatus= false\r\n      this.cardInitiationForm.get('existingCustomer').patchValue(false);\r\n      this.isExistingCustomer = false;\r\n      \r\n    }\r\n\r\n  }\r\n  addOnCard(event: any) {\r\n    console.log(\"event\", event.checked);\r\n    if (event.checked == true) {\r\n      this.isAddOnCard = true;\r\n      this.ls.setItem('ADD_ON_CARD', true);\r\n    }\r\n    else {\r\n      this.isAddOnCard = false;\r\n      this.ls.setItem('ADD_ON_CARD', false);\r\n    }\r\n\r\n  }\r\n  \r\n  getEmploymentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayofEmployment = data;\r\n      console.log(this.arrayofEmployment);\r\n\r\n    });\r\n  }\r\n\r\n  getAccountData(cifNumber){\r\n    this.apiService.getProfileDetails(cifNumber)\r\n      .subscribe((data: any) => {\r\n        console.log(data);\r\n        console.log(data?.signatures?.[0]?.accountId)\r\n        this.accountID = data?.signatures?.[0]?.accountId;\r\n        this.cardInitiationForm.controls.currency.setValue(data?.accountCurrency);\r\n      }, (error: any) => {\r\n        // console.log(error);\r\n      });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"data\", this.cardInitiationForm.value)\r\n    localStorage.setItem('Currency Type', this.cardInitiationForm.value.currency);\r\n    let payload = {\r\n      existingCustomer: this.cardInitiationForm.value.existingCustomer,\r\n      cardType: this.cardInitiationForm.value.cardType,\r\n      customerAccount: this.cardInitiationForm.value.customerAccount,\r\n      applicantName: this.cardInitiationForm.value.applicantName,\r\n      currency: this.cardInitiationForm.value.currency,\r\n      employmentType: this.cardInitiationForm.value.employmentType,\r\n      affinityProgram: this.cardInitiationForm.value.affinityProgram,\r\n      nameOnCard: this.cardInitiationForm.value.nameOnCard,\r\n      status: \"ONGOING\",\r\n      kycStatus: this.kycStatus,\r\n      kycReference: this.kycRefrence,\r\n      customerId: this.cardInitiationForm.value.cifNumber,\r\n\r\n      cardId: this.showEditOption ? this.cardId : null,\r\n      createdBy: this.createdBy.userName\r\n    }\r\n\r\n    this.apiService.uploadCardInitiation(payload)\r\n      .subscribe((data: any) => {\r\n        this.ls.setItem('cardId', data.cardId);\r\n        let statusModel = {\r\n          cardId: data.cardId,\r\n          status: \"ONGOING\"\r\n        };\r\n        // this.apiService.updateCardStatus(statusModel).subscribe(data => {\r\n        // });\r\n\r\n        console.log(\"data\", data);\r\n        \r\n        this.next();\r\n      });\r\n\r\n  }\r\n  next() {\r\n    this.ls.setItem('CARD_INITIATION_DONE',true);\r\n    this.ls.setItem('Card_Applicant_name',this.cardInitiationForm.value.applicantName);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/customerInformation`]);\r\n  }\r\n  getCardInitiation() {\r\n\r\n    this.apiService.getCardInitiationDetails(this.cardId)\r\n    .subscribe((resp: any) => {\r\n      this.kycStatus = resp.kycStatus;\r\n      this.kycRefrence = resp.kycReference;\r\n      this.buildInitiationForm(resp);\r\n      this.apiService.fetchAccountIdByCustId(this.cifNumberPrimary).subscribe((accountNo: any[]) => {\r\n        this.accountNoArr = accountNo;\r\n        this.cardInitiationForm.controls.customerAccount.setValue(this.accountNoArr?.[0])\r\n      });\r\n      console.log(\"data\", resp);\r\n      if (resp.existingCustomer == true) {\r\n        this.isExistingCustomer = true;\r\n      }\r\n      else {\r\n        this.isExistingCustomer = false;\r\n      }\r\n\r\n    });\r\n  }\r\n  buildInitiationForm(data?) {\r\n    const addOnCard = localStorage.getItem(\"ADD_ON_CARD\"); \r\n        \r\n    \r\n    this.cardInitiationForm = this.formBuilder.group({\r\n      cifNumber: [data ? this.cifNumberPrimary : '',data?.existingCustomer == true?[Validators.required]:[Validators.nullValidator]],\r\n      existingCustomer: [data ? data.existingCustomer : true,],\r\n      cardType: [data ? data.cardType : '', [Validators.required]],\r\n      customerAccount: [data ? data.customerAccount : '', data?.existingCustomer == true?[Validators.required]:[Validators.nullValidator]],\r\n      applicantName: [data ? data.applicantName : ''],\r\n      currency: [data ? data.currency : '', [Validators.required]],\r\n      employmentType: [data ? data.employmentType : '', [Validators.required]],\r\n      affinityProgram: [data ? data.affinityProgram : '', [Validators.required]],\r\n      nameOnCard: [data ? data.nameOnCard : '', [Validators.required]],\r\n      addOnCard:[addOnCard == 'true' ? true : false],\r\n    });\r\n    this.selectedCurrency = data?.currency;\r\n    this.formControlValueChanged();\r\n  }\r\n  formControlValueChanged() {\r\n    \r\n    let cifNumberControl = this.cardInitiationForm.get('cifNumber');\r\n    this.cardInitiationForm.get('existingCustomer').valueChanges.subscribe(\r\n        (val) => {\r\n            console.log(val);\r\n            if (val == false) {\r\n              this.cardInitiationForm.get('customerAccount').setValidators([Validators.nullValidator]);\r\n                cifNumberControl.setValidators([Validators.nullValidator]);\r\n            }   \r\n            else{\r\n              this.cardInitiationForm.get('customerAccount').setValidators([Validators.required]);\r\n              cifNumberControl.setValidators([Validators.required]);\r\n          }            \r\n            cifNumberControl.updateValueAndValidity();\r\n        });\r\n}\r\n  goBack() {\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list`]);\r\n  }\r\n  keyUpevent(event) {\r\n    if (event.keyCode === 8) {\r\n      this.onbackSpace = true;\r\n      this.isCifValid = false;\r\n    }\r\n    else {\r\n      this.onbackSpace = false;\r\n    }\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  letterOnly(event) {\r\n    console.log(!this.isGoForKyc);\r\n    console.log(!this.cardInitiationForm.valid);\r\n    console.log(!this.cardInitiationForm.valid || !this.isGoForKyc);\r\n    \r\n    console.log(this.cardInitiationForm);\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  fetchByCif(cifNumber) {\r\n\r\n    if (!!cifNumber) {\r\n      this.showSpinn = true;\r\n      this.appApiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n        this.kycStatus = res.customerInfoList[0].customerAdditionalInfo.kycStatus\r\n        this.kycRefrence = res.customerInfoList[0].customerAdditionalInfo.kycReference\r\n     \r\n        this.cardInitiationForm.controls.cifNumber.setValue(cifNumber);\r\n        this.cardInitiationForm.controls.applicantName.setValue(res.customerInfoList[0].firstName + \" \" + res.customerInfoList[0].lastName);\r\n       // this.ls.setItem('Card_Applicant_name', res.customerInfoList[0].firstName + \" \" + res.customerInfoList[0].lastName);\r\n        this.cardInitiationForm.controls.customerAccount.setValue(this.accountID)\r\n\r\n        this.showSpinn = false;\r\n\r\n        if (!res) {\r\n          this.isCifValid = false;\r\n\r\n          this.snack.open('Invalid CIF Number', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          // this.cardInitiationForm.get('cifNumber').patchValue(\"\");\r\n          return;\r\n        } else {\r\n          if (res.customerInfoList[0].custStatus != \"APPROVED\") {\r\n            this.isCifValid = false;\r\n          }\r\n          if (res.customerInfoList[0].custStatus == \"APPROVED\") {\r\n            this.isCifValid = true;\r\n          }\r\n          //console.log(this.isCifValid,\"else2 condition\");\r\n\r\n          let address: any;\r\n          // this.console.log(res.customerInfoList[0].userAddress.length);\r\n          if (res.customerInfoList[0].userAddress.length > 1) {\r\n            address = res.customerInfoList[0].userAddress.find((item: any) => item.addressType == \"Permanent\" || item.addressType == \"permanent\");\r\n          } else {\r\n            address = res.customerInfoList[0].userAddress[0];\r\n          }\r\n          let queryParams = {\r\n            prefix: res.customerInfoList[0].prefix,\r\n            customerId: res.customerInfoList[0].customerId,\r\n            firstName: res.customerInfoList[0].firstName,\r\n            middleName: res.customerInfoList[0].middleName,\r\n            lastName: res.customerInfoList[0].lastName,\r\n            gender: res.customerInfoList[0].gender,\r\n            dateOfBirth: this.convertDate(res.customerInfoList[0].dateOfBirth),\r\n            placeOfBirth: res.customerInfoList[0].placeOfBirth,\r\n            residenceStatus: res.customerInfoList[0].residenceStatus,\r\n            nationality: res.customerInfoList[0].nationality,\r\n            countryOfResidence: res.customerInfoList[0].countryOfResidence,\r\n            occupationType: res.customerInfoList[0].occupationType,\r\n            custIdProofs: res.customerInfoList[0].custIdProofs,\r\n            idType: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idType : '',\r\n            idNumber: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idNumber : '',\r\n            expiryDate: res.customerInfoList[0].custIdProofs.length > 0 ? this.convertDate(res.customerInfoList[0].custIdProofs[0].expiryDate) : '',\r\n            addressType: address.addressType,\r\n            address1: address.address1,\r\n            address2: address.address2,\r\n            city: address.city,\r\n            country: address.country,\r\n            state: address.state,\r\n            zipCode: address.zipCode,\r\n            phoneNumber: res.customerInfoList[0].phoneNumber,\r\n            landlineNumber: res.customerInfoList[0].landlineNumber,\r\n            primaryEmailAdress: res.customerInfoList[0].primaryEmailAdress\r\n          };\r\n          if (this.cardInitiationForm.value.swiftCode == null || this.cardInitiationForm.value.swiftCodeEnable == null) {\r\n            console.log(this.cardInitiationForm.value.swiftCode);\r\n            this.flag = false;\r\n          }\r\n          this.cifNumberPrimary = cifNumber;\r\n          this.ls.setItem(\"Card_CIF_NUM_PRIMARY\", this.cifNumberPrimary);\r\n          this.apiService.sendCIF(queryParams);\r\n          this.apiService.fetchAccountIdByCustId(cifNumber).subscribe((accountNo: []) => {\r\n            this.accountNoArr = accountNo;\r\n            this.cardInitiationForm.controls.customerAccount.setValue(this.accountNoArr?.[0])\r\n            console.log(accountNo);\r\n          });\r\n        }\r\n        this.cdr.markForCheck();\r\n\r\n      });\r\n      this.getAccountData(cifNumber);\r\n    }\r\n  }\r\n  changeEvent(event: any) {\r\n    console.log(event.value);\r\n    this.cardType = event.value\r\n    if (event.value == \"Credit\" || \"Debit\" || \"Forex\") {\r\n      this.iskycStatus = true;\r\n      if (this.kycStatus == \"APPROVED\") {\r\n        this.isGoForKyc = true;\r\n      }\r\n      else {\r\n        this.isGoForKyc = false;\r\n      }\r\n\r\n    }\r\n    else {\r\n      this.isGoForKyc = true;\r\n      this.iskycStatus = false;\r\n    }\r\n  }\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD'); // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    if (date)\r\n      return date;\r\n  }\r\n  goToKyc() {\r\n    this.ls.setItem('cardType', this.cardType);\r\n    this.ls.setItem(\"accountType\", 'cardOrigination')\r\n    this.router.navigate([`/others/kyc`]);\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_opinion_dxp8.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title\"><b>Card Initiation</b></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Card Initiation</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form fxLayout=\"column\" [formGroup]=\"cardInitiationForm\">\r\n          <div fxFlex=\"100%\" fxLayoutGap=\"10px\">\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n              <div class=\"pb-1\">\r\n                <label class=\"hint\">Existing Customer *</label>\r\n\r\n                <mat-slide-toggle style=\"margin-left: 1cm;\" name=\"scholarshipOrBusinessEligible\"\r\n                  formControlName=\"existingCustomer\" (change)=\"goToggle($event)\">\r\n                </mat-slide-toggle>\r\n              </div>\r\n\r\n              <div class=\"flex-grow-1\" fxFlex=\"100%\" *ngIf=\"iskycStatus\" fxLayout=\"column\">\r\n                <div fxFlex=\"100%\">\r\n                  <label class=\"hint\">KYC ID</label>&nbsp;\r\n                  <label style=\"color: #03a9f4;\">{{kycRefrence}}</label>\r\n                  <label class=\"hint\">KYC Status</label>&nbsp;\r\n                  <label style=\"color: #03a9f4;\">{{kycStatus}}</label>\r\n                </div>\r\n                <div>\r\n                  &nbsp;&nbsp;&nbsp;<button mat-button [disabled]=\"isGoForKyc || isExistingCustomer\" (click)=\"goToKyc()\"\r\n                    style=\"text-decoration: underline;\">Go For KYC</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Card Type *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <mat-select formControlName=\"cardType\" placeholder=\"Select\"\r\n                    (selectionChange)=\"changeEvent($event)\">\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option *ngIf=\"isExistingCustomer\" value=\"Debit\">Debit</mat-option>\r\n                    <mat-option value=\"Credit\">Credit</mat-option>\r\n                    <mat-option *ngIf=\"isExistingCustomer\" value=\"Forex\">Forex</mat-option>\r\n\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('cardType').valid  && cardInitiationForm.get('cardType').touched \">\r\n                  &nbsp;&nbsp;&nbsp;Card Type is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"pb-1\" *ngIf=\"isExistingCustomer\">\r\n                <div>\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">CIF Number*</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <input matInput class=\"alignment\" type=\"text\" (keypress)=_keyPress($event)\r\n                    (change)=\"fetchByCif(cardInitiationForm.get('cifNumber').value)\"\r\n                    (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\"\r\n                    formControlName=\"cifNumber\" placeholder=\"CIF Number\" />\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                *ngIf=\"!cardInitiationForm.get('cifNumber').valid  && cardInitiationForm.get('cifNumber').touched\">\r\n                &nbsp;&nbsp;&nbsp; CIF Number Is Required\r\n                </mat-error>\r\n                  </mat-form-field>\r\n              </div>\r\n\r\n                <div>\r\n                  <mat-autocomplete #auto=\"matAutocomplete\">\r\n                    <mat-option *ngFor=\"let option of listOfCustByCif\" [value]=\"option.customerId\">\r\n                      <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                        <div fxFlex=\" 100\">\r\n                          <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\" class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                            <h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n                              {{option?.firstName | slice:0:1 | uppercase}}{{option?.lastName | slice:0:1 | uppercase}}\r\n                            </h3>\r\n                          </div>\r\n                          <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar fxFlex=\"10\">\r\n                            <img matListAvatar\r\n                              style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 100%;margin-bottom: 50px;\" align=\"center\"\r\n                              [src]=\"option?.profileImage\" alt=\"...\">\r\n                          </div>\r\n                          <div fxFlex=\"80\">\r\n                            <h5 style=\"margin-bottom: 0px;\">\r\n                              {{option?.firstName | uppercase}}\r\n                              {{option?.middleName | uppercase}}\r\n                              {{option?.lastName | uppercase}}\r\n                            </h5>\r\n                            <h6 style=\"margin-top: 0px;\">#{{option?.cifNumber}}</h6>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </mat-option>\r\n                  </mat-autocomplete>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"pb-1\" *ngIf=\"!isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                <mat-label class=\"hint\">Currency *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <mat-select formControlName=\"currency\" [(ngModel)]=\"selectedCurrency\"placeholder=\"Select\">\r\n                    <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option [value]=\"currency\" *ngFor=\"let currency of localCurrencyArr\">{{currency}}</mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('currency').valid  && cardInitiationForm.get('currency').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Currency is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n              <div class=\"pb-1\" *ngIf=\"isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Currency</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <input matInput class=\"alignment\" type=\"text\" autocomplete=\"off\" formControlName=\"currency\"\r\n                    placeholder=\"currency\" name=\"currency\" (keypress)=\"_keyPress($event)\" readonly/>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('currency').valid  && cardInitiationForm.get('currency').touched\">\r\n                  &nbsp;&nbsp;&nbsp;currency is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Affinity Program *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <mat-select formControlName=\"affinityProgram\" placeholder=\"Select\">\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"Affinity Program1\">Affinity Program1</mat-option>\r\n                    <mat-option value=\"Affinity Program2\">Affinity Program2</mat-option>\r\n\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('affinityProgram').valid  && cardInitiationForm.get('affinityProgram').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Affinity Program is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"pb-1\" *ngIf=\"!isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Name On Card *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <input matInput class=\"alignment\" type=\"text\" (keypress)=letterOnly($event) formControlName=\"nameOnCard\"\r\n                    placeholder=\"Name On Card\" name=\"nameOnCard\" />\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('nameOnCard').valid  && cardInitiationForm.get('nameOnCard').touched\" >\r\n                  &nbsp;&nbsp;&nbsp;Name on Card is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\" *ngIf=\"isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Customer Account Number *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <mat-select formControlName=\"customerAccount\"  >\r\n                    <mat-option [value]=\"accNo\" *ngFor=\"let accNo of accountNoArr\">{{accNo}}</mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('customerAccount').valid  && cardInitiationForm.get('customerAccount').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Customer Account is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"pb-1\" *ngIf=\"!isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Customer Account Number </mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <input matInput class=\"alignment\" type=\"text\" autocomplete=\"off\" formControlName=\"customerAccount\"\r\n                    placeholder=\"Customer Account Number\" name=\"customerAccount\" (keypress)=\"_keyPress($event)\" />\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('customerAccount').valid  && cardInitiationForm.get('customerAccount').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Customer Account is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\" *ngIf=\"isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Applicant Name </mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <!-- <input *ngIf=\"!isExistingCustomer\" matInput class=\"alignment\" type=\"text\" (keypress)=letterOnly($event)\r\n                    formControlName=\"applicantName\" placeholder=\"Applicant Name\" required/> -->\r\n                  <input *ngIf=\"isExistingCustomer\" matInput class=\"alignment\" type=\"text\" (keypress)=letterOnly($event) readonly\r\n                    formControlName=\"applicantName\" placeholder=\"Applicant Name\" />\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n              <div class=\"pb-1\"*ngIf=\"!isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Applicant Name * </mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <input *ngIf=\"!isExistingCustomer\" matInput class=\"alignment\" type=\"text\" (keypress)=letterOnly($event)\r\n                    formControlName=\"applicantName\" placeholder=\"Applicant Name\" />\r\n                  <!-- <input *ngIf=\"isExistingCustomer\" matInput class=\"alignment\" type=\"text\" (keypress)=letterOnly($event) readonly\r\n                    formControlName=\"applicantName\" placeholder=\"Applicant Name\" /> -->\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Employment Type *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <mat-select formControlName=\"employmentType\" placeholder=\"Select\">\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option *ngFor=\"let employment of arrayofEmployment\" [value]=\"employment\">{{employment}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('employmentType').valid  && cardInitiationForm.get('employmentType').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Employment Type is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"pb-1\" *ngIf=\"isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Name On Card *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <input matInput class=\"alignment\" type=\"text\" formControlName=\"nameOnCard\" (keypress)=\"letterOnly($event)\"\r\n                    placeholder=\"Name On Card\" />\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div fxFlex=\"100%\" fxLayoutGap=\"10px\">\r\n\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n              <div class=\"pb-1\">\r\n                <label class=\"hint\">Addon Card</label>\r\n\r\n                <mat-slide-toggle style=\"margin-left: 1cm;\"formControlName=\"addOnCard\" (change)=\"addOnCard($event)\">\r\n                </mat-slide-toggle>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n            <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n              Back\r\n            </button>\r\n\r\n            <button class=\"Nextbtn\" mat-raised-button (click)=\"onSubmit()\" [disabled]=\"(!isExistingCustomer||isExistingCustomer || cardInitiationForm.get('cardType').value !== 'Credit' )?(!cardInitiationForm.valid):(!cardInitiationForm.valid || !isGoForKyc)\" color=\"primary\">\r\n              Next\r\n            </button>\r\n          </div>\r\n\r\n\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n@Component({\r\n  selector: 'app-approval-details',\r\n  templateUrl: './approval-details.component.html',\r\n  styleUrls: ['./approval-details.component.scss']\r\n})\r\nexport class ApprovalDetailsComponent implements OnInit {\r\n  approvalForm: FormGroup;\r\n  arrayAccountType: string[];\r\n  arrayAccountCurrency: string[];\r\n  arrayUserRecomendation: string[];\r\n  cardId: any;\r\n  showEditOption: boolean = false;\r\n  arrayAccountBranch: any;\r\n  currency: any;\r\n\r\n  constructor(private api: ApiService,\r\n    private ls: LocalStoreService,private fb:FormBuilder,\r\n    private apiService:ApiService,private router: Router,\r\n    private accountService : AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUserRecomendation(\"user_recomendation\");\r\n    this.getAccountType(\"account_type\")\r\n    this.getAccountBranchDetails();\r\n    \r\n    this.buildformGroup();\r\n    console.log(this.approvalForm);\r\n\r\n    this.cardId=this.ls.getItem('cardId');\r\n    console.log(\"this.cardId\",this.cardId);\r\n    this.getCardInitiationDetails();\r\n    let isApprovalDetails: boolean = this.ls.getItem('CARD_APPROVAL_DONE');\r\n    console.log(\"checc\", isApprovalDetails)\r\n    if(this.cardId!=null && isApprovalDetails ){\r\n      this.showEditOption = true;\r\n      this.getApprovalDetails();\r\n\r\n    }\r\n  }\r\n\r\n  buildformGroup(data?){\r\n    this.approvalForm = this.fb.group({\r\n      accountType:[data ? data.accountType : '',Validators.required],\r\n      productCode:[data ? data.productCode :'',Validators.required],\r\n      userRecommendation:[data ? data.userRecommendation :'',Validators.required],\r\n      accountBranch:[data ? data.accountBranch :'',Validators.required],\r\n      accountCurrency:[data ? data.accountCurrency :'',Validators.required],\r\n      productName:[data ? data.productName :'',Validators.required],\r\n      existingValues:[data ? data.existingValues :'',Validators.required],\r\n      remarks:[data ? data.remarks :'']\r\n    })\r\n  }\r\n  onSubmit(){\r\n    console.log(\"data\", this.approvalForm.value);\r\n    \r\n    let payload={\r\n      cardId: this.cardId,\r\n      accountBranch: this.approvalForm.value.accountBranch,\r\n      accountCurrency: this.approvalForm.value.accountCurrency,\r\n      accountType: this.approvalForm.value.accountType,\r\n      existingValues: this.approvalForm.value.existingValues,\r\n      productCode: this.approvalForm.value.productCode,\r\n      productName: this.approvalForm.value.productName,\r\n      remarks: this.approvalForm.value.remarks,\r\n      userRecommendation: this.approvalForm.value.userRecommendation,\r\n\r\n    }\r\n    this.apiService.upsertApprovalDetails(payload)\r\n    .subscribe((data: any) => {\r\n\r\n      console.log(\"data\",data);\r\n      \r\n    });\r\n    this.next();\r\n  }\r\nnext(){\r\n  this.ls.setItem('CARD_APPROVAL_DONE', true);\r\n  this.ls.setItem('CARD_SUPERVISOR_DONE',true);\r\n  this.accountService.refresh.next();\r\n  this.router.navigate([`/cardaccount/DigitalSigning/list`]);\r\n\r\n}\r\ngoBack(){\r\n  this.router.navigate([`/cardaccount/SupervisorApprovalStage/list`]);\r\n}\r\n  getApprovalDetails(){\r\n\r\n    this.apiService.getApprovalDetails(this.cardId)\r\n    .subscribe((resp: any) => {\r\n      this.buildformGroup(resp);\r\n\r\n      console.log(\"data\",resp);\r\n     \r\n    });\r\n  }\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n  }\r\n\r\n  getAccountCurrency(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountCurrency = data;\r\n    });\r\n  }\r\n\r\n  getAccountType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountType = data;\r\n    });\r\n  }\r\n  \r\n  getUserRecomendation(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayUserRecomendation = data;\r\n    });\r\n  }\r\n\r\n  getAccountBranchDetails() {\r\n    //debugger\r\n    this.api.getAccountBranch().subscribe((data) => {\r\n      console.log(\"data:: AccountBranch \", data)\r\n      this.arrayAccountBranch = data;\r\n    });\r\n  }\r\n\r\n  getCardInitiationDetails(){\r\n    this.apiService.getCardInitiationDetails(this.cardId)\r\n    .subscribe((resp: any) => {\r\n    console.log(\"data\",resp);\r\n    this.currency=resp.currency;  \r\n    this.approvalForm.controls.accountCurrency.setValue(this.currency);\r\n    });\r\n  }\r\n\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size1\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/MaskGroup_16.svg\"\r\n          alt=\"\"\r\n          class=\"w-90\"\r\n        />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Approval Details</b></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n      <mat-card class=\"p-0\" >\r\n       <mat-card-title>\r\n        <fieldset>\r\n         <legend visible=\"true\">Approval Details</legend>\r\n        </fieldset>\r\n       </mat-card-title>\r\n      <form [formGroup]=\"approvalForm\">\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\" >\r\n                  <mat-label>Account Type*</mat-label>\r\n                  <mat-select name=\"accountType\" placeholder=\"Account type\" formControlName=\"accountType\" >\r\n                     <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option *ngFor=\"let arrayAccountType of arrayAccountType\" [value]=\"arrayAccountType\" > \r\n                      {{arrayAccountType}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"approvalForm.get('accountType').hasError('required')\">\r\n                    Please Select Account Type\r\n                   </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\" >\r\n                  <mat-label>Product Code*</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"productCode\"\r\n                    placeholder=\"Product Code\"\r\n                    formControlName=\"productCode\" \r\n                  />\r\n                  <!-- <mat-error *ngIf=\"approvalForm.get('productCode').hasError('required')\">\r\n                    Please Select Product Code\r\n                   </mat-error> -->\r\n                   <!-- <mat-icon matSuffix>account_balance</mat-icon> -->\r\n                </mat-form-field>\r\n                <mat-error\r\n                   *ngIf=\"approvalForm.get('productCode').touched &&\r\n                   approvalForm.get('productCode').value == 0\">\r\n                   Please Enter valid Product ID\r\n              </mat-error>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\"  >\r\n                  <mat-label>Account Currency*</mat-label>\r\n                    <input\r\n                    matInput\r\n                    name=\"account_currency\"\r\n                    placeholder=\"Account Currency\"\r\n                    formControlName=\"accountCurrency\"\r\n                    (keypress)=\"keyPressAlphanumeric($event)\"\r\n                    readonly\r\n                  />\r\n                  <mat-error *ngIf=\"approvalForm.get('accountCurrency').hasError('required')\">\r\n                    Please Enter Account Currency\r\n                   </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>User Recomendation*</mat-label>\r\n                  <mat-select name=\"owner\" placeholder=\"Recommended for Approval\" formControlName=\"userRecommendation\" >\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option *ngFor=\"let userRecommendation of arrayUserRecomendation\" [value]=\"userRecommendation\" > \r\n                      {{userRecommendation}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"approvalForm.get('userRecommendation').hasError('required')\">\r\n                   Please Select user Recommendation\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              \r\n            </div>\r\n  \r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"pb-1\" >\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                  <mat-label>Account Branch*</mat-label>\r\n                  <mat-select name=\"accountBranch\" placeholder=\"Account Branch\" formControlName=\"accountBranch\" >\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option *ngFor=\"let arrayAccountBranch of arrayAccountBranch\" [value]=\"arrayAccountBranch.branchName\" > \r\n                      {{arrayAccountBranch.branchName}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"approvalForm.get('accountBranch').hasError('required')\">\r\n                    Please Select Account Branch \r\n                   </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"pb-1\" >\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                  <mat-label>Product Name*</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"productName\" \r\n                    placeholder=\"Product Name\" \r\n                    formControlName=\"productName\"\r\n                    (keypress)=\"keyPressAlphanumeric($event)\"\r\n                  />\r\n                  <!-- <mat-error *ngIf=\"approvalForm.get('productName').hasError('required')\">\r\n                   Please Enter Product Name\r\n                   </mat-error> -->\r\n                </mat-form-field>\r\n                <mat-error\r\n                   *ngIf=\"approvalForm.get('productName').touched &&\r\n                   approvalForm.get('productName').value == 0\">\r\n                   Please Enter valid Product Name\r\n                </mat-error>\r\n              </div>\r\n              \r\n              <div class=\"pb-1\" >\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                  <mat-label>Existing Value*</mat-label>\r\n                  <input\r\n                    matInput onlyNumber\r\n                    name=\"existingValues\" \r\n                    placeholder=\"Existing Value\"\r\n                    (keypress)=\"onKeyPress($event)\"\r\n                    formControlName=\"existingValues\"\r\n                  />\r\n                  <!-- <mat-error *ngIf=\"approvalForm.get('existingValues').hasError('required')\">\r\n                    Please Enter Existing Value\r\n                   </mat-error> -->\r\n                </mat-form-field>\r\n                <mat-error\r\n                   *ngIf=\"approvalForm.get('existingValues').touched &&\r\n                   approvalForm.get('existingValues').value == 0\">\r\n                   Please Enter valid Existing Value\r\n                </mat-error>\r\n              </div>\r\n\r\n              <div class=\"pb-1\" >\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                  <mat-label>Remarks</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"remarks\" \r\n                    placeholder=\"Remarks\" \r\n                    formControlName=\"remarks\"\r\n                  />\r\n                  <mat-error *ngIf=\"approvalForm.get('remarks').hasError('required')\">\r\n                    Please Enter Remarks\r\n                   </mat-error>\r\n                </mat-form-field>\r\n              </div> \r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </form>\r\n      </mat-card>\r\n      \r\n    </div>\r\n  \r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-stroked-button class=\"Backbtn\"  (click)=goBack() >BACK</button>\r\n      <span fxFlex></span>\r\n      <button class=\"Nextbtn\" mat-raised-button color=\"primary\" type=\"button\"\r\n      (click)=\"onSubmit()\"\r\n       [disabled]=\"approvalForm.invalid\" >Next</button>\r\n    </div>\r\n  </div>\r\n ","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n\r\n@Component({\r\n  selector: 'app-intrest-details-summary',\r\n  templateUrl: './intrest-details-summary.component.html',\r\n  styleUrls: ['./intrest-details-summary.component.scss']\r\n})\r\nexport class IntrestDetailsSummaryComponent implements OnInit {\r\n  interestForm: FormGroup;\r\n  savingForm: FormGroup;\r\n  loanForm: FormGroup;\r\n  accountType: any;\r\n  accountId: any;\r\n  resp: {\r\n    intrestType: string;\r\n    interestRateApplicable: string;\r\n    marginIn: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  // loanAccountId: any;\r\n  cardId: number;\r\n  constructor(\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private dialogRef: MatDialogRef<IntrestDetailsSummaryComponent>,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.interestForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    this.savingForm = this.formBuilder.group({\r\n      saving: new FormArray([]),\r\n    });\r\n\r\n    this.loanForm = this.formBuilder.group({\r\n      loan: new FormArray([]),\r\n    });\r\n\r\n    this.api.cardInterestFetchById(this.cardId).subscribe((resp) => {\r\n      console.log(\"resp from backend \", this.resp);\r\n      this.resp = resp;\r\n      this.onChangeInterest(this.resp.length);\r\n      this.in.patchValue(this.resp);\r\n    });\r\n  }\r\n\r\n  assignAccountType(accountType) {\r\n    this.accountType = accountType;\r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            cardId: [this.cardId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  onChangeSaving(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.is.length < numberOfItems) {\r\n      for (let i = this.is.length; i < numberOfItems; i++) {\r\n        this.is.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            interestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            cardId: [this.cardId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.is.length; i >= numberOfItems; i--) {\r\n        this.is.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  onChangeLoan(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.iloan.length < numberOfItems) {\r\n      for (let i = this.iloan.length; i < numberOfItems; i++) {\r\n        this.iloan.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            interestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            cardId: [this.cardId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.iloan.length; i >= numberOfItems; i--) {\r\n        this.iloan.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n  get fs() {\r\n    return this.savingForm.controls;\r\n  }\r\n  get is() {\r\n    return this.fs.saving as FormArray;\r\n  }\r\n  get floan() {\r\n    return this.loanForm.controls;\r\n  }\r\n  get iloan() {\r\n    return this.floan.loan as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n      this.router.navigate([\r\n        `/cardaccount/applicationEnrichment/list`,\r\n      ]); \r\n  }\r\n\r\n  onSubmit(form) {}\r\n  edit() {\r\n    this.dialogRef.close();\r\n    this.api.setFlag({\r\n      flag: true,\r\n    });\r\n    this.router.navigate([\r\n      `/cardaccount/applicationEnrichment/intrest-details`,\r\n    ]);\r\n  }\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"Intrest detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","\r\n<mat-card class=\"matCard\">\r\n    <button mat-button id=\"close\" mat-dialog-close>\r\n      <mat-icon class=\"closeicon\">close</mat-icon>\r\n    </button>\r\n    <div class=\"spanDiv1\">\r\n      <span class=\"span\">Interest Details Summary\r\n  \r\n      </span>\r\n      <mat-divider class=\"divider\"></mat-divider>\r\n    </div>\r\n    <div fxLayout=\"row wrap\" class=\"main\">\r\n      <div fxFlex=\"100\">\r\n      </div>\r\n      <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n        <div class=\"mt-24\"></div>\r\n        <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\">\r\n          <table class=\"cart-table default-bg mat-elevation-z0\">\r\n            <tbody>\r\n              <tr [formGroup]=\"interest\" class=\"mt-4\" *ngFor=\"let interest of in.controls; let i = index\" class=\"form\">\r\n                <div class=\"row\">\r\n                  <ng-container>\r\n  \r\n                    <div class=\"heading\">\r\n                      <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />\r\n                    </div>\r\n  \r\n                    <td>\r\n                      <mat-card class=\"matCardBox\">\r\n                        <mat-label class=\"label\">Interest Rate Applicable</mat-label>\r\n                        <input matInput formControlName=\"intrestRateApplicable\" name=\"account_branch\" class=\"input\"\r\n                          readonly />\r\n                      </mat-card>\r\n                    </td>\r\n                    <td>\r\n                      <mat-card class=\"matCardBox\">\r\n                        <mat-label class=\"label\">Margin in %</mat-label>\r\n                        <input matInput formControlName=\"marginIn\" name=\"account_branch\" class=\"input\" readonly />\r\n                      </mat-card>\r\n                    </td>\r\n                    <td>\r\n                      <mat-card class=\"matCardBox\">\r\n                        <mat-label class=\"label\">Effective Rate %</mat-label>\r\n                        <input matInput formControlName=\"effectiveRate\" name=\"account_branch\" value=\"\" class=\"input\"\r\n                          readonly />\r\n  \r\n                      </mat-card>\r\n                    </td>\r\n                  </ng-container>\r\n                </div>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n      </div>\r\n  \r\n    </div>\r\n  \r\n  \r\n    <span class=\"spanDiv\" (click)=\"edit()\">Edit</span>\r\n  </mat-card>","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { CardAccChargeDetSumComponent } from \"./charge-details/card-acc-charge-det-sum/card-acc-charge-det-sum.component\";\r\nimport { IntrestDetailsSummaryComponent } from \"./intrest-details/intrest-details-summary/intrest-details-summary.component\";\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n@Component({\r\n  selector: \"app-application-enrichment\",\r\n  templateUrl: \"./application-enrichment.component.html\",\r\n  styleUrls: [\"./application-enrichment.component.scss\"],\r\n})\r\nexport class ApplicationEnrichmentComponent implements OnInit {\r\n  isCardInterestDetails: boolean = false;\r\n  isCardChargeDetails: boolean = false;\r\n  isCardApplicationEnrichmentDone: boolean = false;\r\n  cardId: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private ls: LocalStoreService,\r\n    private accountService : AccountService, private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.isCardInterestDetails = this.ls.getItem('CARD_INTEREST_DETAILS_DONE');\r\n    this.isCardChargeDetails = this.ls.getItem('CARD_CHARGE_DETAILS_DONE');\r\n\r\n    if (this.isCardInterestDetails && this.isCardChargeDetails) {\r\n      this.isCardApplicationEnrichmentDone = true;\r\n    }\r\n  }\r\n\r\n  goToInterestSummary() {\r\n    const dialogRef = this.dialog.open(IntrestDetailsSummaryComponent, {\r\n      data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => {});\r\n  }\r\n\r\n  goToChargeSummary() {\r\n    const dialogRef = this.dialog.open(CardAccChargeDetSumComponent, {\r\n      data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => {});\r\n  }\r\n\r\n  navigate() {\r\n    this.router.navigate([`/cardaccount/applicationEnrichment/Summary`]);\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"100\" *ngIf=\"isCardApplicationEnrichmentDone\" class=\"mt-8\"><!--isCardApplicationEnrichementDone-->\r\n\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Enrichment Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\" (click)=\"navigate()\">View Summary</button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        \r\n        <!-- Card 1 start-->\r\n        <mat-card [ngClass]=\"{'border-size': isCardInterestDetails || !isCardInterestDetails  }\">\r\n            <mat-card-header>\r\n                <mat-card-title>1.Interest Details</mat-card-title>\r\n                \r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                    <div fxFlex=\"50%\"class=\"size\">\r\n                        <p>\r\n                            Interest Type and Effective Interest Rate is captured.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/Mask Ggroup 5.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n         \r\n            <div class=\"mb-1\" *ngIf=\"isCardInterestDetails\">\r\n                <mat-progress-bar\r\n                  [color]=\"'primary'\"\r\n                  mode=\"determinate\"\r\n                  [value]=\"100\"\r\n                  class=\"rounded\"\r\n                  style=\"height: 6px\">\r\n                </mat-progress-bar>\r\n                <p class=\"m-0 text-right\">Completed</p>\r\n                <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n              </div>\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardInterestDetails\">\r\n                    <button mat-button color=\"primary\" (click)=\"goToInterestSummary()\">\r\n                        View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!isCardInterestDetails\">\r\n                    <button mat-button color=\"primary\"\r\n                        [routerLink]=\"['/cardaccount/applicationEnrichment/intrest-details']\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n\r\n            </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        \r\n        <!-- Card 1 start-->\r\n        <mat-card  [ngClass]=\"{'border-size': isCardChargeDetails || !isCardChargeDetails && isCardInterestDetails  }\">\r\n            <mat-card-header>\r\n                <mat-card-title>2.Charge Details</mat-card-title>\r\n                \r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                    <div fxFlex=\"50%\"class=\"size\">\r\n                        <p>\r\n                            Charge Details are dispalyed.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/esign.png'\"class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"mb-1\" *ngIf=\"isCardChargeDetails\">\r\n                    <mat-progress-bar\r\n                      [color]=\"'primary'\"\r\n                      mode=\"determinate\"\r\n                      [value]=\"100\"\r\n                      class=\"rounded\"\r\n                      style=\"height: 6px\">\r\n                    </mat-progress-bar>\r\n                    <p class=\"m-0 text-right\">Completed</p>\r\n                    <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n                  </div>\r\n            </mat-card-content>\r\n            \r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardChargeDetails\">\r\n                    <button mat-button color=\"primary\" (click)=\"goToChargeSummary()\">\r\n                        View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!isCardChargeDetails\">\r\n                    <button mat-button color=\"primary\"\r\n                        [routerLink]=\"['/cardaccount/applicationEnrichment/charge-details']\"\r\n                        [disabled]=\"!isCardInterestDetails\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n\r\n            </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-document-upload',\r\n  templateUrl: './document-upload.component.html',\r\n  styleUrls: ['./document-upload.component.scss']\r\n})\r\nexport class DocumentUploadComponent implements OnInit {\r\n\r\n  isLoanApplicationEntryDone :boolean=false;\r\n  isLoanDetailScreen :boolean=false;\r\n \r\n  isDocumentUploadDone: boolean = false;\r\n  isDocumentUpload: boolean = false;\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private ls: LocalStoreService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isDocumentUpload = this.ls.getItem('CARD_DOCUMENT_DONE');\r\n    if (this.isDocumentUpload) {\r\n      this.isDocumentUploadDone = true;\r\n    }\r\n  }\r\n\r\n\r\n  documentdetails(){\r\n    this.router.navigate([\r\n      `/cardaccount/documentupload/list/document-details`,\r\n    ]);\r\n\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-8\" *ngIf=\"isDocumentUploadDone\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Entry Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\">\r\n                    View Summary\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n        <!-- Card 1 start-->\r\n        <mat-card>\r\n            <mat-card-header>\r\n                <mat-card-title>1. Document Upload</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                    <div fxFlex=\"50%\" style=\"padding-left: 17px;\">\r\n                        <p class=\"colour\">\r\n                            All the necessary documents required for the application can be uploaded.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/Mask Group 6.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n                <div class=\"mb-1\" *ngIf=\"isDocumentUploadDone\">\r\n                    <mat-progress-bar\r\n                      [color]=\"'primary'\"\r\n                      mode=\"determinate\"\r\n                      [value]=\"100\"\r\n                      class=\"rounded\"\r\n                      style=\"height: 6px\">\r\n                    </mat-progress-bar>\r\n                    <p class=\"m-0 text-right\">Completed</p>\r\n                </div>\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"!isDocumentUploadDone\">\r\n                    <button mat-button color=\"primary\" (click)=\"documentdetails()\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"isDocumentUploadDone\">\r\n                    <button mat-button color=\"primary\" (click)=\"documentdetails()\">\r\n                        view details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n\r\n\r\n            </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n</div>\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule, CurrencyPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\nimport { CardAccountRoutes } from './card-account.routing';\r\nimport { CardAccountComponent } from './card-account.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedPipesModule } from 'app/shared/pipes/shared-pipes.module';\r\nimport { SharedDirectivesModule } from 'app/shared/directives/shared-directives.module';\r\nimport { SharedMaterialModule } from 'app/shared/shared-material.module';\r\nimport { ApplicationEntryStageComponent } from './application-entry-stage/application-entry-stage.component';\r\nimport { DocumentUploadComponent } from './document-upload/document-upload.component';\r\nimport { ApplicationEnrichmentComponent } from './application-enrichment/application-enrichment.component';\r\nimport { UnderwritingStageComponent } from './underwriting-stage/underwriting-stage.component';\r\nimport { AssessmentStageComponent } from './assessment-stage/assessment-stage.component';\r\nimport { SupervisorApprovalStageComponent } from './supervisor-approval-stage/supervisor-approval-stage.component';\r\nimport { DigitalSigningComponent } from './digital-signing/digital-signing.component';\r\nimport { DocumentDetailsComponent } from './document-upload/document-details/document-details.component';\r\nimport { IntrestDetailsComponent } from './application-enrichment/intrest-details/intrest-details.component';\r\nimport { ChargeDetailsComponent } from './application-enrichment/charge-details/charge-details.component';\r\nimport { IntrestDetailsSummaryComponent } from './application-enrichment/intrest-details/intrest-details-summary/intrest-details-summary.component';\r\nimport { EnrichmentSummaryComponent } from './application-enrichment/enrichment-summary/enrichment-summary.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\nimport { UnderwritingCreditRatingComponent } from './underwriting-stage/underwriting-credit-rating/underwriting-credit-rating.component';\r\nimport { CardaccountQualitativeScoreboardComponent } from './underwriting-stage/cardaccount-qualitative-scoreboard/cardaccount-qualitative-scoreboard.component';\r\nimport { CardaccountApplicationAssessmentComponent } from './cardaccount-application-assessment/cardaccount-application-assessment.component';\r\nimport { UnderwritingCreditSummaryComponent } from './underwriting-stage/underwriting-credit-rating/underwriting-credit-summary/underwriting-credit-summary.component';\r\nimport { CardaccountApplicationAssessmentSummaryComponent } from './cardaccount-application-assessment/cardaccount-application-assessment-summary/cardaccount-application-assessment-summary.component';\r\nimport { CardaccountQualitativeSummaryComponent } from './underwriting-stage/cardaccount-qualitative-scoreboard/cardaccount-qualitative-summary/cardaccount-qualitative-summary.component';\r\nimport { ApprovalDetailsComponent } from './supervisor-approval-stage/approval-details/approval-details.component';\r\nimport { FinancialDetailsComponent } from './application-entry-stage/financial-details/financial-details.component';\r\nimport { CardCustomerInformationComponent } from './application-entry-stage/card-customer-information/card-customer-information.component';\r\nimport { CardAccountServicesComponent } from './application-entry-stage/card-account-services/card-account-services.component';\r\nimport { CardPrefrencesComponent } from './application-entry-stage/card-prefrences/card-prefrences.component';\r\nimport { CardAccountSummaryComponent } from './application-entry-stage/card-account-services/card-account-summary/card-account-summary.component';\r\nimport { CardInitiationComponent } from './application-entry-stage/card-initiation/card-initiation.component';\r\nimport { CardInitiationSummaryComponent } from './application-entry-stage/card-initiation/card-initiation-summary/card-initiation-summary.component';\r\nimport { DigitalSignNowOrLaterComponent } from './digital-signing/digital-sign-now-or-later/digital-sign-now-or-later.component';\r\nimport { UploadSignatureOrEsignComponent } from './digital-signing/upload-signature-or-esign/upload-signature-or-esign.component';\r\nimport { EsignaturePopComponent } from './digital-signing/esignature-pop/esignature-pop.component';\r\nimport { ApprovalDetailsSummaryComponent } from './supervisor-approval-stage/approval-details/approval-details-summary/approval-details-summary.component';\r\nimport { CardFinancialDetailsSummaryComponent } from './application-entry-stage/financial-details/card-financial-details-summary/card-financial-details-summary.component';\r\nimport { CardCustomerInfoSummaryComponent } from './application-entry-stage/card-customer-information/card-customer-info-summary/card-customer-info-summary.component';\r\n// import { ChargeDetailsSummaryComponent } from '../home/charge-details-summary/charge-details-summary.component';\r\nimport { CardAccChargeDetSumComponent } from './application-enrichment/charge-details/card-acc-charge-det-sum/card-acc-charge-det-sum.component';\r\nimport { CardPrefrenceSummaryComponent } from './application-entry-stage/card-prefrences/card-prefrence-summary/card-prefrence-summary.component';\r\nimport { CardaccountAppEntryStageViewSummaryComponent } from './application-entry-stage/cardaccount-app-entry-stage-view-summary/cardaccount-app-entry-stage-view-summary.component';\r\nimport { SucessMessageComponent } from './document-upload/sucess-message/sucess-message.component';\r\n// import { UploadLinkToEmailComponent } from './document-upload/upload-link-to-email/upload-link-to-email.component';\r\nimport { UnderwritingStageSummaryComponent } from './underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component';\r\n\r\nimport { OthersModule } from '../others/others.module';\r\nimport { SuccessAlertCardComponent } from './digital-signing/success-alert-card/success-alert-card.component';\r\nimport { DigitalsignSummaryComponent } from './digital-signing/digitalsign-summary/digitalsign-summary.component';\r\nimport { CardAccountAppAssessmentViewsummaryComponent } from './cardaccount-application-assessment/card-account-app-assessment-viewsummary/card-account-app-assessment-viewsummary.component';\r\nimport { CardApprovalViewSummaryComponent } from './supervisor-approval-stage/approval-details/card-approval-view-summary/card-approval-view-summary.component';\r\nimport { DigitalViewSummaryComponent } from './digital-signing/digital-view-summary/digital-view-summary.component';\r\nimport { CardSignlaterPopupComponent } from './digital-signing/card-signlater-popup/card-signlater-popup.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CardAccountComponent,\r\n    ApplicationEntryStageComponent,\r\n    DocumentUploadComponent,\r\n    ApplicationEnrichmentComponent,\r\n    UnderwritingStageComponent,\r\n    AssessmentStageComponent,\r\n    SupervisorApprovalStageComponent,\r\n    DigitalSigningComponent,\r\n    DocumentDetailsComponent,\r\n    IntrestDetailsComponent,\r\n    ChargeDetailsComponent,\r\n    IntrestDetailsSummaryComponent,\r\n    EnrichmentSummaryComponent,\r\n    // ChargeDetailsSummaryComponent,\r\n    UnderwritingCreditRatingComponent,\r\n    CardaccountQualitativeScoreboardComponent,\r\n    CardaccountApplicationAssessmentComponent,\r\n    UnderwritingCreditSummaryComponent,\r\n    CardaccountApplicationAssessmentSummaryComponent,\r\n    CardaccountQualitativeSummaryComponent,\r\n    ApprovalDetailsComponent,\r\n    FinancialDetailsComponent,\r\n    CardCustomerInformationComponent,\r\n    CardAccountServicesComponent,\r\n    CardPrefrencesComponent,\r\n    CardAccountSummaryComponent,\r\n    CardInitiationComponent,\r\n    CardInitiationSummaryComponent,\r\n    DigitalSignNowOrLaterComponent,\r\n    UploadSignatureOrEsignComponent,\r\n    EsignaturePopComponent,\r\n    ApprovalDetailsSummaryComponent,\r\n    CardFinancialDetailsSummaryComponent,\r\n\r\n    CardCustomerInfoSummaryComponent,\r\n\r\n    CardAccChargeDetSumComponent,\r\n\r\n    CardPrefrenceSummaryComponent,\r\n    CardaccountAppEntryStageViewSummaryComponent,\r\n    SucessMessageComponent,\r\n    // UploadLinkToEmailComponent\r\n    UnderwritingStageSummaryComponent,\r\n    SuccessAlertCardComponent,\r\n    DigitalsignSummaryComponent,\r\n    CardAccountAppAssessmentViewsummaryComponent,\r\n    CardApprovalViewSummaryComponent,\r\n    DigitalViewSummaryComponent,\r\n    CardSignlaterPopupComponent,\r\n   \r\n  ],\r\n  imports: [\r\n    \r\n    CommonModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    NgxDatatableModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedPipesModule,\r\n    SharedDirectivesModule,\r\n    SharedMaterialModule,\r\n    SignaturePadModule,\r\n    MatAutocompleteModule,\r\n    RouterModule.forChild(CardAccountRoutes),\r\n    OthersModule,\r\n   \r\n  ],\r\n  providers: [\r\n    CurrencyPipe\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class CardAccountModule {}\r\n","import { ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { QualitativeScoreboardSummary } from 'app/shared/models/qualitativeScoreboardSummary';\r\n// import { AssessmentReportSummary } from 'app/shared/models/AssessmentReportSummary';\r\n// import { QualitativeScoreboardSummary } from 'app/shared/models/qualitativeScoreboardSummary';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\nimport { log } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-cardaccount-qualitative-scoreboard',\r\n  templateUrl: './cardaccount-qualitative-scoreboard.component.html',\r\n  styleUrls: ['./cardaccount-qualitative-scoreboard.component.scss']\r\n})\r\nexport class CardaccountQualitativeScoreboardComponent implements OnInit {\r\n\r\n  qsForm: FormGroup;\r\n  qsFormArray: FormArray;\r\n  accountId: any;\r\n  // accountType: any;\r\n  accountType=\"cardOrigin\";\r\n  loggedInUser: any;\r\n  sbMultiSelectAnswer: any[] = [];\r\n  scoreboardQuestionsArray: { applicantId: any, scoreCardDetails: any[],scorecardQuestion:any }[] = [];\r\n  scoreCardMappingArray: { applicantId: any, scoreCardDetails: { scoreCardQuestionId: any, scorecardAnswer: any, scoreCardMappingId: any }[] }[] = [];\r\n  numberOfApplicant = new FormControl('');\r\n  scoreCardId = new FormControl('');\r\n  // assessmentReportSummary: AssessmentReportSummary;\r\n  qualitativeScoreboardSummary: QualitativeScoreboardSummary;\r\n  isDataSaved: boolean = false;\r\n  disableDoneBtn: boolean = true;\r\n  anyErrorExist: boolean = false;\r\n  isQualitativeScreen: boolean = false;\r\n  isQualitative: any;\r\n  isQualitativeScoreboard:any;\r\n  previousUrl: string = '';\r\n  showEditOption: boolean = false;\r\n  overDraftByStatus:boolean;\r\n  no_of_applicants: any;\r\n  noOfapplicants:any;\r\n  isCardQualitativeScoreboard:boolean=false;\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  cardId:any;\r\n  sA: any;\r\n  scoreCardDetails:any;\r\n  sbSwlwctAnswer: any[];\r\n  sbSelectAnswer: string=\"\";\r\n  sbSelectAnswer1: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private api: ApiService,\r\n    private snack: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private accountService: AccountService,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    //private urlService: UrlService,\r\n    private cdr:ChangeDetectorRef,\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    // this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    // console.log(\"LOAN ACCOUNT ID:: \",this.loanaccountID);\r\n  //  this.accountType = this.ls.getItem('accountType');\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.isCardQualitativeScoreboard = this.ls.getItem('CARD_QUALITATIVE_SCOREBOARD_DONE');\r\n    console.log(this.isCardQualitativeScoreboard);\r\n    \r\n    //this.no_of_applicants = this.ls.getItem('NO_OF_APPLICANTS');\r\n      \r\n    this.noOfapplicants = this.ls.getItem('CardNoOfApplicants');\r\n    // console.log(this.no_of_applicants);\r\n    console.log(this.noOfapplicants);\r\n    console.log(this.loggedInUser);\r\n    let isScoreCardScreen: boolean = JSON.parse(this.ls.getItem('ASSESSMENT_QA_DONE'));\r\n    \r\n    // if (this.loanaccountID != null && isScoreCardScreen) {\r\n      if ( this.cardId != null && this.isCardQualitativeScoreboard) {\r\n      // console.log(\"1sr condition\")\r\n      this.showEditOption = true;\r\n      this.isQualitativeScreen = true;\r\n      this.getAllQualitative();\r\n    } else {\r\n      // console.log(\"2nd condition\");\r\n      this.showEditOption = false;\r\n      this.loadData();\r\n    }\r\n  //  this.getAccountDetails();\r\n \r\n  //  this.accountType == \"current\" ? this.accountType = \"saving\" : this.accountType = \"saving\";//This line because we have backend data only for savings. This line is temporary.\r\n  // this.accountType == \"current\" ? this.accountType = \"loan\" : this.accountType = \"loan\";\r\n   /// this.accountType == \"current\" ? this.accountType = \"Home Loan\" : this.accountType = \"Home Loan\";\r\n   \r\n    // this.urlService.previousUrl$\r\n    //   .subscribe((previousUrl: string) => {\r\n    //     this.previousUrl = previousUrl\r\n    //   });\r\n\r\n   \r\n\r\n  }\r\n  counter(i: number) {\r\n    return new Array(i);\r\n}\r\n  loadData(){\r\n    this.api.getScorecardQuestions(this.accountType).subscribe((response) => {  \r\n      console.log(response);\r\n\r\n      console.log(this.noOfapplicants);\r\n      if(!this.noOfapplicants && response){\r\n        this.noOfapplicants=response.length;\r\n      }\r\n      response[1].attributeType=\"drop-down\"\r\n\r\n      for (let n = 0; n < this.noOfapplicants; n++) {\r\n          this.scoreboardQuestionsArray.push({scorecardQuestion: response,applicantId: n + 1, scoreCardDetails: response});\r\n          let mapDataAns: any[] = [];\r\n          console.log(\"data\",this.scoreCardDetails);\r\n          for (let p = 0; p < response.length; p++){\r\n            mapDataAns.push({scoreCardQuestionId: response[p].scoreCardQuestionId, scorecardAnswer: null, scoreCardMappingId: null}); \r\n          }\r\n          this.scoreCardMappingArray.push({applicantId: n + 1, scoreCardDetails: mapDataAns});\r\n      }\r\n\r\n      console.log(\"data\",this.scoreCardDetails);\r\n      console.log(\"ques:\",this.scoreboardQuestionsArray)\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  getAllQualitative() {\r\n    console.log(this.isQualitativeScreen);\r\n    this.api.getCardQualitativeScorecardDetails(this.cardId).subscribe((response) => {\r\n      console.log(response);\r\n      \r\n      console.log(this.isQualitativeScreen);\r\n      this.qualitativeScoreboardSummary = response;\r\n      console.log(this.qualitativeScoreboardSummary.scoreCardId + \" : \" + this.qualitativeScoreboardSummary.numberOfApplicant);\r\n      this.scoreCardId.setValue(this.qualitativeScoreboardSummary.scoreCardId);\r\n      this.numberOfApplicant.setValue(this.qualitativeScoreboardSummary.numberOfApplicant);\r\n      console.log(\"scorecard id: \", this.scoreCardId)\r\n      console.log(\"numberOfApplicant : \", this.numberOfApplicant)\r\n\r\n      this.scoreboardQuestionsArray = [];\r\n      for (let i = 0; i < this.qualitativeScoreboardSummary.scoreCardMapping.length; i++) {\r\n        console.log(\"inside for\", this.qualitativeScoreboardSummary.scoreCardMapping)\r\n        this.api.getScorecardQuestions(this.accountType).subscribe((response) => {\r\n          console.log(response);\r\n          response[1].attributeType=\"drop-down\"\r\n          console.log(this.noOfapplicants);\r\n          if (!this.noOfapplicants && response) {\r\n            this.noOfapplicants = response.length;\r\n          }\r\n\r\n          for (let n = 0; n < this.noOfapplicants; n++) {\r\n            this.scoreboardQuestionsArray.push({ scorecardQuestion: response, applicantId: n + 1, scoreCardDetails: response });\r\n            console.log(this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails.length)\r\n            for (let j = 0; j < this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails.length; j++) {\r\n              console.log(this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails)\r\n              var scAns = this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails;\r\n              console.log(scAns)\r\n             \r\n              \r\n              this.sbMultiSelectAnswer.push(scAns[j].scorecardAnswer);\r\n              for(let k=0; k < this.sbMultiSelectAnswer.length; k++){\r\n                if(this.sbMultiSelectAnswer[2]){\r\n                  this.sbSelectAnswer = this.sbMultiSelectAnswer[2];\r\n                  console.log(this.sbSwlwctAnswer);\r\n                }\r\n                else if(this.sbMultiSelectAnswer[0]){\r\n                  this.sbSelectAnswer1 = this.sbMultiSelectAnswer[0];\r\n                  console.log(this.sbSelectAnswer1);\r\n                }\r\n              }\r\n              console.log(this.sbMultiSelectAnswer);\r\n            }\r\n          }\r\n\r\n          console.log(\"data\", this.scoreCardDetails);\r\n          console.log(\"ques:\", this.scoreboardQuestionsArray)\r\n          this.cdr.markForCheck();\r\n        });\r\n\r\n        this.scoreCardMappingArray = this.scoreboardQuestionsArray;\r\n      }\r\n\r\n      console.log(this.scoreboardQuestionsArray, \"scoreBoardQuestionArray\");\r\n      this.disableDoneBtn = false;\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n\r\n  insertData(id: any, answer: any, qtype: string, mapId: any,index:any, applcantId: any) {\r\n    console.log(\"Answer: \", answer,index, applcantId , id ,qtype,mapId,);\r\n    if (qtype == 'checkbox') {\r\n      answer = answer.toString();\r\n    }\r\n    let dataUpdated: boolean = false ;\r\n    let aplcntExists: boolean = false ;\r\n    console.log(this.scoreCardMappingArray);\r\n    console.log(this.numberOfApplicant);\r\n    console.log(this.disableDoneBtn);\r\n    console.log(this.sbMultiSelectAnswer);\r\n    \r\n\r\n    \r\n    \r\n    for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n      if (this.scoreCardMappingArray[m].applicantId == applcantId ) {\r\n        for (let n = 0; n < this.scoreCardMappingArray[m].scoreCardDetails.length; n++) {\r\n          if(this.isCardQualitativeScoreboard){\r\n            console.log(\"Edit Condition\");\r\n            if(n == index){\r\n                 if (this.scoreCardMappingArray[m].scoreCardDetails[n].scoreCardQuestionId == id) {\r\n            this.scoreCardMappingArray[m].scoreCardDetails[n].scorecardAnswer = answer;\r\n            this.sbMultiSelectAnswer[n] = answer;\r\n            dataUpdated = true;\r\n             \r\n          }\r\n            }else{\r\n              this.scoreCardMappingArray[m].scoreCardDetails[n].scorecardAnswer = this.sbMultiSelectAnswer[n]\r\n\r\n            }\r\n          \r\n           \r\n            \r\n          }else{\r\n          console.log(n, this.scoreCardMappingArray[m].scoreCardDetails[n]);\r\n          if (this.scoreCardMappingArray[m].scoreCardDetails[n].scoreCardQuestionId == id) {\r\n            this.scoreCardMappingArray[m].scoreCardDetails[n].scorecardAnswer = answer;\r\n            dataUpdated = true;\r\n          }\r\n        }\r\n        }\r\n        aplcntExists = true ;\r\n      }\r\n    }\r\n    if (!dataUpdated) {\r\n      let dataOject: any = {};\r\n      dataOject.scoreCardQuestionId = id;\r\n      dataOject.scorecardAnswer = answer;\r\n      if (mapId != null) {\r\n        dataOject.scoreCardMappingId = mapId;\r\n\r\n      }\r\n      if (!aplcntExists) {\r\n        let idx = this.scoreCardMappingArray.length ;\r\n        this.scoreCardMappingArray.push({applicantId: applcantId, scoreCardDetails: dataOject});\r\n      } else {\r\n        for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n          if (this.scoreCardMappingArray[m].applicantId == applcantId ) {\r\n           \r\n              this.scoreCardMappingArray[m].scoreCardDetails.push(dataOject);\r\n              console.log(this.scoreCardMappingArray[m].scoreCardDetails);\r\n          }\r\n        }\r\n      }\r\n      // console.log(dataOject,\"Dataobject\");\r\n    }\r\n\r\n    if (this.scoreCardMappingArray.length == this.scoreboardQuestionsArray.length) {\r\n      let disableDoneBtn: number = 0;\r\n      for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n        for (let i = 0; i < this.scoreCardMappingArray[m].scoreCardDetails.length; i++) {\r\n          console.log(this.scoreCardMappingArray[m].scoreCardDetails[i].scorecardAnswer);\r\n          \r\n          let answerIs: any = this.scoreCardMappingArray[m].scoreCardDetails[i].scorecardAnswer;\r\n          if (answerIs == '' || answerIs == null || answerIs == undefined) {\r\n            disableDoneBtn++;\r\n          }\r\n        }\r\n      }\r\n      if (disableDoneBtn > 0) {\r\n        this.disableDoneBtn = true;\r\n      }\r\n      else if (this.anyErrorExist == false && disableDoneBtn == 0) {\r\n        this.disableDoneBtn = false;\r\n      }\r\n    }\r\n    console.log(\"Map Array: \", this.scoreCardMappingArray)\r\n    console.log(this.disableDoneBtn);\r\n  }\r\n\r\n  validateInputValue(inputValue: any, index: any, validationName: string) {\r\n    // console.log(inputValue, index);\r\n    let eleid: any = '#inputError' + index;\r\n    if (inputValue == '' || inputValue == null || inputValue == undefined) {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n    }\r\n    else {\r\n      if (!isNaN(inputValue) && validationName == \"Name\") {\r\n        this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n        this.anyErrorExist = true;\r\n      }\r\n      else {\r\n        this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'hidden');\r\n        this.anyErrorExist = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  validateSelectValue(selectValue: any, index: any) {\r\n    // console.log(selectValue, index);\r\n    let eleid: any = '#selectError' + index;\r\n    console.log(eleid);\r\n    \r\n    if (selectValue == '' || selectValue == null || selectValue == undefined) {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n    }\r\n    else {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'hidden');\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([`${this.previousUrl}`]);\r\n    this.router.navigate([\"/cardaccount/underwritingStage/credit-rating\"]);\r\n\r\n  }\r\n\r\n  getAllData(id) {\r\n    this.api.getAssessmentReportDetails(id).subscribe((response) => {\r\n      // this.assessmentReportSummary = response;\r\n      // console.log(this.assessmentReportSummary);\r\n    });\r\n  }\r\n  saveQualitativeScore(){\r\n    let submitData: any = {};\r\n    // console.log(this.no_of_applicants);\r\n    // let numberOfApplicant = this.no_of_applicants;\r\n    console.log(this.noOfapplicants);\r\n    let numberOfApplicant = this.noOfapplicants;\r\n    // submitData.loanAccountId=this.loanaccountID;  noOfapplicants\r\n    submitData.cardId=this.cardId;  \r\n    // submitData.loanAccountId = this.loanAccountId? this.loanAccountId : 999612;// loanAccountId: this.loanaccountID,\r\n    submitData.numberOfApplicant = numberOfApplicant;\r\n    submitData.scoreCardId = this.scoreCardId.value;\r\n    submitData.loggedInUser = 123;\r\n    submitData.accountType=\"cardOrigin\";\r\n    \r\n    submitData.scoreCardMapping = this.scoreCardMappingArray;\r\n    console.log(submitData);\r\n    this.api.saveQualitativeScorecard(submitData).subscribe((resp) => {\r\n      console.log(\"data\",submitData.cardId);\r\n      this.snack.open('Card Origination Qualitative Scoreboard Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      // console.log(resp);\r\n      this.isDataSaved = true;\r\n      // this.ls.setItem('CARD_QUALITATIVE_SCOREBOARD_DONE', true);\r\n      // this.ls.setItem('CARD_UNDERWRITING_DONE',true);\r\n      // this.disableDoneBtn=false\r\n      this.accountService.refresh.next();\r\n    \r\n    }, err => {\r\n      this.snack.open('Server Error!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n    this.next();\r\n  }\r\n\r\n  next(){\r\n    this.ls.setItem('CARD_QUALITATIVE_SCOREBOARD_DONE', true);\r\n    this.ls.setItem('CARD_UNDERWRITING_DONE',true);\r\n    this.accountService.refresh.next();\r\n     this.router.navigate([\"/cardaccount/assessmentStage/list\"]);\r\n  }\r\n\r\n  // done() {\r\n  //   this.ls.setItem('ASSESSMENT_QA_DONE', true);\r\n  //  // this.accountService.refresh.next();\r\n  //   this.router.navigate([`/home/application/assessment/report/${this.accountId}`]);\r\n  // }\r\n  noOfApplicant(event){\r\n    console.log(event);\r\n\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size1\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_Scrum_board_re_wk7v.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Qualitative Scoreboard</b></div>\r\n    </div>\r\n  </div>\r\n  <form>\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n      <h2 class=\"ml-16\">Qualitative Scoreboard</h2>\r\n      <div class=\"mt-24\"></div>\r\n      <mat-card>\r\n        <mat-card-title></mat-card-title>\r\n        <mat-card-content>\r\n          <h4><b>Scorecard ID</b></h4>\r\n          <h4>\r\n            <input matInput name=\"ScoreCardId\" onlyNumber placeholder=\"Enter ScoreCardId\" [formControl]=\"scoreCardId\"\r\n             />\r\n             <mat-error\r\n              *ngIf=\"scoreCardId.touched && scoreCardId.value == 0\">\r\n               Please Enter valid Scorecard ID\r\n              </mat-error>\r\n          </h4>\r\n          <h3 class=\"mt-32\">About the Qualitative Scorecard ID</h3>\r\n          <p class=\"disableText\">\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting\r\n            industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n            since the 1500s, when an unknown printer took a galley of type and\r\n            scrambled it to make a type specimen book.\r\n          </p>\r\n          <h3 class=\"mt-32\">No. of Applicant</h3>\r\n          <p>{{noOfapplicants}}</p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n  \r\n      <div class=\"mt-32\"></div>\r\n      <mat-accordion multi=\"true\">\r\n        <mat-expansion-panel class=\"mb-8\"  *ngFor='let sA of scoreboardQuestionsArray ; let ix = index' expanded=\"true\">\r\n          <mat-expansion-panel-header>\r\n          <mat-panel-title><mat-icon class=\"check-circle\">check_circle</mat-icon> <span class=\"ml-8\">Applicant {{ sA.applicantId }}</span></mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n            <mat-card class=\"full-width\">\r\n              <mat-card-content class=\"full-width\">\r\n                    <div>\r\n                      <h3>Questions</h3>\r\n                    </div>\r\n                    <div fxLayout=\"column\">\r\n                    <!-- <div class=\"full-width\"> --><div fxLayout=\"row\" fxFlex=\"70%\" fxLayoutGap=\"35px\">\r\n                      <div fxLayout=\"row wrap\" class=\"full-width\" *ngFor=\"let sQ of sA.scoreCardDetails; let i=index;\">\r\n                        <div class=\"full-width\">\r\n                          <div class=\"qDiv\">\r\n                            <mat-hint>{{i + 1 }}.{{sQ.scorecardQuestion}}<span class=\"redC\" *ngIf=\"sQ.isRequired\"> *</span></mat-hint>\r\n                          </div>\r\n                          <div class=\"full-width\" *ngIf=\"sQ.attributeType == 'textbox'\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                              <input matInput\r\n                              [required]=\"sQ.isRequired\"\r\n                              [autocomplete]=\"off\"\r\n                              [maxlength]=\"sQ.validationName == 'Name'? 25 : 50\"\r\n                              name=\"{{ 'input' + i }}\"\r\n                              id=\"{{ 'input' + i }}\"\r\n                            \r\n                              [value]=\"scoreCardMappingArray[ix].scoreCardDetails[i].scorecardAnswer == undefined? sbSelectAnswer : scoreCardMappingArray[ix].scoreCardDetails[i].scorecardAnswer\"\r\n                              (keyup)=\"validateInputValue($event.target.value,i,sQ.validationName);insertData(sQ.scoreCardQuestionId,$event.target.value,sQ.attributeType,sQ.scoreCardMappingId,i,sA.applicantId)\"\r\n                              (click)=\"validateInputValue($event.target.value,i,sQ.validationName)\"\r\n                              >\r\n                            </mat-form-field>\r\n                            <!-- [value]=\"sQ.scorecardAnswer\" -->\r\n                            <mat-error [style.visibility]=\"'hidden'\" id=\"{{ 'inputError' + i }}\">Enter {{sQ.validationName}}</mat-error>\r\n                          </div>\r\n                          <div class=\"full-width\" *ngIf=\"sQ.attributeType == 'drop-down' || sQ.attributeType == 'checkbox'\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                              <mat-select\r\n                              [required]=\"sQ.isRequired\"\r\n                              [name]=\"sQ.attributeType == 'checkbox'?  'multiSelect' + i  :  'select' + i \"\r\n                              [id]=\"sQ.attributeType == 'checkbox'?  'multiSelect' + i  :  'select' + i \"\r\n                              [value]=\"sQ.attributeType == 'checkbox'? sbMultiSelectAnswer : sbMultiSelectAnswer[i]\"\r\n                              (click)=\"validateSelectValue($event.target.value,i)\"\r\n                              (selectionChange)=\"validateSelectValue($event.value,i);insertData(sQ.scoreCardQuestionId,$event.value,sQ.attributeType,sQ.scoreCardMappingId,i,sA.applicantId)\"  \r\n                              [multiple]=\"sQ.attributeType == 'checkbox'\"\r\n                              >\r\n                                <mat-option *ngFor=\"let sA of sQ.scorecardAnswers\" [value]=\"sA\">\r\n                                  {{sA}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-error [style.visibility]=\"'hidden'\" id=\"{{ 'selectError' + i }}\">Please select {{sQ.validationName}}</mat-error>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                     \r\n                      <!-- <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                        <div class=\"qDiv\">\r\n                        <mat-hint>Score<span class=\"redC\" ></span></mat-hint>\r\n                       </div>\r\n                        <div class=\"full-width\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <input matInput name=\"ScoreId\" placeholder=\"Enter the Score\"\r\n                          />\r\n                           <input matInput name=\"ScoreId\" onlyNumber placeholder=\"Enter the Score\" [formControl]=\"scoreId\"\r\n                          /> \r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div> -->\r\n                    </div>\r\n                  </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </div>\r\n  </form>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <button mat-stroked-button class=\"Backbtn\" (click)=\"goBack()\">BACK</button>\r\n    <span fxFlex></span>\r\n   \r\n\r\n    <button class=\"Nextbtn\" mat-raised-button color=\"primary\" [disabled]=\"disableDoneBtn || !numberOfApplicant.valid\" (click)=\"saveQualitativeScore()\" type=\"button\">Next</button>\r\n  </div>\r\n</div>\r\n"]}