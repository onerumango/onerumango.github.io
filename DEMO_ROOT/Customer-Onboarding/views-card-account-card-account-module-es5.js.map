{"version":3,"sources":["webpack:///src/app/shared/models/cardPrefrences.ts","webpack:///src/app/views/card-account/application-entry-stage/card-customer-information/card-customer-information.component.ts","webpack:///src/app/views/card-account/application-entry-stage/card-customer-information/card-customer-information.component.html","webpack:///src/app/views/card-account/underwriting-stage/underwriting-stage.component.ts","webpack:///src/app/views/card-account/underwriting-stage/underwriting-stage.component.html","webpack:///src/app/views/card-account/application-entry-stage/application-entry-stage.component.ts","webpack:///src/app/views/card-account/application-entry-stage/application-entry-stage.component.html","webpack:///src/app/views/card-account/underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component.ts","webpack:///src/app/views/card-account/underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component.html","webpack:///src/app/views/card-account/supervisor-approval-stage/supervisor-approval-stage.component.ts","webpack:///src/app/views/card-account/supervisor-approval-stage/supervisor-approval-stage.component.html","webpack:///src/app/views/card-account/application-entry-stage/card-prefrences/card-prefrences.component.ts","webpack:///src/app/views/card-account/application-entry-stage/card-prefrences/card-prefrences.component.html","webpack:///src/app/views/card-account/underwriting-stage/underwriting-credit-rating/underwriting-credit-rating.component.ts","webpack:///src/app/views/card-account/underwriting-stage/underwriting-credit-rating/underwriting-credit-rating.component.html","webpack:///src/app/views/card-account/application-enrichment/enrichment-summary/enrichment-summary.component.ts","webpack:///src/app/views/card-account/application-enrichment/enrichment-summary/enrichment-summary.component.html","webpack:///src/app/views/card-account/card-account.component.ts","webpack:///src/app/views/card-account/card-account.component.html","webpack:///src/app/views/card-account/digital-signing/upload-signature-or-esign/upload-signature-or-esign.component.ts","webpack:///src/app/views/card-account/digital-signing/upload-signature-or-esign/upload-signature-or-esign.component.html","webpack:///src/app/views/card-account/application-enrichment/charge-details/charge-details.component.ts","webpack:///src/app/views/card-account/application-enrichment/charge-details/charge-details.component.html","webpack:///src/app/views/card-account/assessment-stage/assessment-stage.component.ts","webpack:///src/app/views/card-account/assessment-stage/assessment-stage.component.html","webpack:///src/app/views/card-account/card-account.routing.ts","webpack:///src/app/views/card-account/application-enrichment/charge-details/card-acc-charge-det-sum/card-acc-charge-det-sum.component.ts","webpack:///src/app/views/card-account/application-enrichment/charge-details/card-acc-charge-det-sum/card-acc-charge-det-sum.component.html","webpack:///src/app/views/card-account/digital-signing/digitalsign-summary/digitalsign-summary.component.ts","webpack:///src/app/views/card-account/digital-signing/digitalsign-summary/digitalsign-summary.component.html","webpack:///src/app/views/card-account/cardaccount-application-assessment/cardaccount-application-assessment.component.ts","webpack:///src/app/views/card-account/cardaccount-application-assessment/cardaccount-application-assessment.component.html","webpack:///src/app/views/card-account/application-enrichment/intrest-details/intrest-details.component.ts","webpack:///src/app/views/card-account/application-enrichment/intrest-details/intrest-details.component.html","webpack:///src/app/views/card-account/digital-signing/digital-signing.component.ts","webpack:///src/app/views/card-account/digital-signing/digital-signing.component.html","webpack:///src/app/views/card-account/document-upload/document-details/document-details.component.html","webpack:///src/app/views/card-account/document-upload/document-details/document-details.component.ts","webpack:///src/app/views/card-account/application-entry-stage/financial-details/financial-details.component.ts","webpack:///src/app/views/card-account/application-entry-stage/financial-details/financial-details.component.html","webpack:///src/app/views/card-account/application-entry-stage/card-account-services/card-account-services.component.ts","webpack:///src/app/views/card-account/application-entry-stage/card-account-services/card-account-services.component.html","webpack:///src/app/views/card-account/digital-signing/esignature-pop/esignature-pop.component.ts","webpack:///src/app/views/card-account/digital-signing/esignature-pop/esignature-pop.component.html","webpack:///src/app/views/card-account/digital-signing/digital-sign-now-or-later/digital-sign-now-or-later.component.ts","webpack:///src/app/views/card-account/digital-signing/digital-sign-now-or-later/digital-sign-now-or-later.component.html","webpack:///src/app/views/card-account/application-entry-stage/card-initiation/card-initiation.component.ts","webpack:///src/app/views/card-account/application-entry-stage/card-initiation/card-initiation.component.html","webpack:///src/app/views/card-account/supervisor-approval-stage/approval-details/approval-details.component.ts","webpack:///src/app/views/card-account/supervisor-approval-stage/approval-details/approval-details.component.html","webpack:///src/app/views/card-account/application-enrichment/intrest-details/intrest-details-summary/intrest-details-summary.component.ts","webpack:///src/app/views/card-account/application-enrichment/intrest-details/intrest-details-summary/intrest-details-summary.component.html","webpack:///src/app/views/card-account/application-enrichment/application-enrichment.component.ts","webpack:///src/app/views/card-account/application-enrichment/application-enrichment.component.html","webpack:///src/app/views/card-account/document-upload/document-upload.component.ts","webpack:///src/app/views/card-account/document-upload/document-upload.component.html","webpack:///src/app/views/card-account/card-account.module.ts","webpack:///src/app/views/card-account/underwriting-stage/cardaccount-qualitative-scoreboard/cardaccount-qualitative-scoreboard.component.ts","webpack:///src/app/views/card-account/underwriting-stage/cardaccount-qualitative-scoreboard/cardaccount-qualitative-scoreboard.component.html"],"names":["home","applicant","value","CardCustomerInformationComponent","router","dialog","route","accountService","elRef","renderer","ls","apiService","formBuilder","confirmService","cdr","appApiService","snack","dataService","urlService","loader","cifNumberForm","listOfCustByCif","submitted","formData","console","customerIdProofs","selfNextBtnDisabled","arrayPrefix","arrayGender","arrayCountry","arrayState","arrayCity","arrayResidence","arrayDocumentType","arrayAddressType","applicantDetailsArray","toggle","customerDetails","applicantDetails","showEditOption","tomorrow","Date","maxDate","minDate","validDate","showNewForm","isCifValid","toggleClick","isCustomerDone","previousUrl","addOnCard","addFunc","removedButton","selectedApplicant","listOfAccounts","isAllSameDigitVal","isResidency","isCurrency","addonCardValue","isBirthCountry","isCountry","showExpiryDate","setDate","getDate","log","i","isDuplicateCIF","disableSaveBtn","cardId","getItem","applicantId","snapshot","params","JSON","parse","cifNumberPrimary","buildCustomerForm","getListOfAccounts","getOwnershipValue","getPrefixValue","getGenderValue","getResidenceDetails","getCountryName","getAdressType","getDocumentType","getMaritalStatus","isChecked","disabled","disabledToggle","goToggle","fetchCardCustomersByCardId","subscribe","resp","err","dataExtracted","subscription","getaccParam","data","dispResponse","custIdProofs","cardCustomerForm","get","valueChanges","val","patchValue","setItem","onlySelf","emitEvent","reset","ownershipStatus","setValue","noOfapplicants","pipe","prev","next","previousUrl$","refresh","res","markForCheck","cifNumber","getStateName","country","getCityName","state","applicantData","prefix","existingCustomer","primaryCustomer","customerId","firstName","middleName","lastName","gender","dateOfBirth","convertDate","placeOfBirth","residenceStatus","nationality","countryOfResidence","occupationType","idType","idNumber","expiryDate","addressType","address1","address2","city","zipCode","phoneNumber","landlineNumber","primaryEmailAdress","maritalStatus","birthCountry","doc","clearValidators","idProofs","filter","item","length","Object","prototype","toString","call","stringify","event","charCode","keyCode","account","disable","address","userAddress","find","payLoadModel","dependentId","onSelectionBirthCountry","onSelectionResidance","onSelectionCitizionship","getCountrySelection1","onBirthCountry","closeDetails","enable","status","map","_id","Math","round","random","requiredFields","acc","field","id","index","element","numOfApplicants","toggleChanges","confirm","title","message","ok","cancel","deleteApplicant","open","error","text","duration","verticalPosition","horizontalPosition","isExistingCustomer","some","currency","birthCountryFlag","fetchByCif","customerInfoList","policyRenewalDate","format","onSelectionCitizionship1","onOtherSelectionResidance","getCountrySelection","customerName","date","group","productAccountId","accountId","ownership","addCustFormGroup","setValidators","required","updateValueAndValidity","pattern","minLength","maxLength","email","inputChar","String","fromCharCode","test","preventDefault","inp","excludedKeys","includes","controls","f","key","getDropDownValues","maritalStatusList","arrayOwnership","getAllCountries","authStatus","push","countryName","getStateByCountryId","entityName","getDropDownValues1","countryFlaglists","currencyCode","toLowerCase","countryCode","editCountryCode","Currency1","Currency","ResideceCurrency","payloadObj","control","addressObj","custIdProofsArray","addressObjArray","accountType","createAndUpdateCardAccountants","close","custDependentModel","goToNext","navigate","target","clearTimeout","timer","setTimeout","count","number","unsubscribe","sendNavParam","checked","selector","templateUrl","styleUrls","progressBar","UnderwritingStageComponent","dialogService","isCardCreditRatingDetails","isCardQualitativeScoreboard","cardAccountcreditRatingSummaryDialog","CardQualitativeSummaryDialog","ApplicationEntryStageComponent","isCardPrefrenceDone","CardInitiationScreenDone","isCardInitiationDone","isCardCustomerInformationScreen","isCardFinancialDetailsScreen","isCardAccountService","isCardApplicationStageDone","CardInitiationSummary","CardFinancialDetailsSummary","CardCustomerInfoSummary","cardAccountServiceViewSummary","cardPrefrenceSummary","cardAppEntryStageViewSummary","UnderwritingStageSummaryComponent","imagePath","getAllData","getCardQualitativeScorecardDetails","response","qualitativeScoreboardSummary","scoreCardMapping","getCardCreditRatingDetails","creditDetails","creditRatingValues","goBack","done","SupervisorApprovalStageComponent","isApprovalDetails","isCardSupervisorApprovalDone","CardApprovalSummary","CardPrefrencesComponent","fb","arraylimitType","selectedOptions2","cardDetails","isdailylimit","isLimitTransaction","isGreaterValue","selectedDocumentTypes2","cardPrefrenceOnLoad","isRowEnds","islimitType","isDLReadOnly","isLPTReadOnly","isDocumentOptionDisabled2","buildCardPrefrenceForm","cardPrefrenceScreen","gettingCardPrefrenceDetail","getCardPrefrence","limitType","isResponse","cardPrefrenceForm","cardPrefrences","array","addMFormGroup","addMandateToFormGroup","dailyLimit","addComa","limitPerTransaction","m","numberOfItems","num1","finalNum","replace","split","final","join","flag","k","limiPrTrn","dailyNum","removeComma","LimitTxn","Number","payload","limitDaily","removeAt","undefined","preferenceId","deleteCardPrefrence","splice","newTransaction","assign","parseInt","uploadCardPrefrence","num","numb","addMandate","onSubmit","UnderwritingCreditRatingComponent","api","customerNames","getCustomerInformationDetails","buildCreditForm","gettingCreditRatingDetail","creditDetailsForm","agencyRating","addModFormGroup","c","agencyId","agencyName","ratings","remarks","fetchCustomersByCardAccId","saveCreditDetails","disableTest","disableUjjivan","disableFastTrack","disableAddAgency","EnrichmentSummaryComponent","appEntrySummaryView","getCardEnrichmentDetails","interestForm","interest","savingForm","saving","chargeFormIT","chargeIT","loanForm","loan","getFlexcubeDetails","onCardCharge","in2","getCardEnrichmentSummmary","summaryInfo","intererstInfo","onCardintrest","chargeInfo","e","intrestType","intrestRateApplicable","marginIn","effectiveRate","createdDate","createdBy","lastModifiedDate","lastModifiedBy","amount","waiver","chargeDetailsId","f2","floan","Back","Done","CardAccountComponent","isAddOnCardHolderDetails","isDocumentUploadDone","isDocumentUpload","isCardApplicationEnrichmentDone","isCardInterestDetails","isCardChargeDetails","isApplicationUnderWritingStageDone","isQualitativeScoreboard","isCardAssessmentStageDone","isAssessmentReport","isApprovedDetails","isCardDigitalSigningDone","isCardDigitalSigning","accountItemsSub","accountItems$","menuItem","accountItems","UploadSignatureOrEsignComponent","dialogRef","location","isDone","disableDone","image","imageURL1","screen","isSignLater","show","width","disableClose","afterClosed","files","selectedFile","reader","FileReader","readAsDataURL","onload","event2","result","cId","url","uploadData","FormData","documentName","documentType","fileType","type","fileName","name","verificationType","append","uploadDocument","doConfirmDialog","removeItem","profileFile","nativeElement","deleteCustomerDoc","profileId","ChargeDetailsComponent","history","currencytype","localStorage","currencySymbol","onChangeInterest","slice","form","cardChargeDetailsSave","inputCharacter","AssessmentStageComponent","cardAccountAssessmentSummaryDialog","loanQualitativeSummaryDialog","CardAccountRoutes","path","component","children","redirectTo","pathMatch","CardAccChargeDetSumComponent","cardChargeFetchById","craetedBy","at","edit","DigitalsignSummaryComponent","getDigitalsignByCardId","fileUrl","imageUrl","CardaccountApplicationAssessmentComponent","_location","currencyPipe","arrayUserRecommendation","arraySystemRecommendation","curr","currencySymbols","symbol","buildAssessmentForm","getCardAssessmentDetails","assessmentForm","assessmentId","requestedCardLimit","systemRecommendation","approvedCardLimit","userRecommendation","recommendedCardLimit","remark","currencyArr","fltered","currencySymboll","transform","input","which","fetchcardAssessmentDetailsById","cardAssessmentDetails","_keyPress1","transformAmount","goNext","IntrestDetailsComponent","getInterestDetails","interestInfo","cardInterestFetchById","max","min","cardInterestId","cardintrestDetailsSave","DigitalSigningComponent","informations","isEsignScreen","height","submit","DocumentDetailsComponent","http","tokenService","shareDataService","doOcrService","webcamImage","webcamImage1","scan1Array","scan2Array","scan3Array","frontImageArray","backImageArray","otherImageArray","otherDocumentArray","boxArray","document_type","custDocExist","documentSide","frontImage","backImage","otherImage","secondBoxArray","thirdBoxArray","ocrResult","nameOnCard","dobArray","idNumberArray","docarr","addressArray","dataFetched","boxArray2","boxArray3","doc_name","docholder","docuNameArray","arrayOfImageArrays0","arrayOfImageArrays1","arrayOfImageArrays2","docValArray","docarray1","newOtherPage","disableNextAtIndex1","otherDocPages","otherDocumentArray2","screenInfo","ff","bf","docName","progressValFrontArray","progressValBackArray","progressValOthersArray","progressValOtherDocumentArray","customerDocs","trigger","aadharParser","str","adharNumber","dob","nameLineIndex","asciiStr","trim","lines","startIndex","j","substr","docString","dobIndex","indexOf","pop","names","x","fullName","panCardParser","nameIndex","panNumber","match","fatherNameIndex","nameString","displayName","dobString","passportParser","dateOfIssue","dateOfExpiry","doIssueIndex","findIndex","line","dates","nationalityIndex","issueNoString","issueNoStringArray","screenName","sessionStorage","customer_Id","addCustomer","documentForm","frontSide","backSide","others","items","inititemrows","document_name","documentTypeArr","getName","assignName","getOCR","getCustomerId","assignOCRValues","getenableNext","doc_list","forEach","getKycDataFetchedInfo","documentsList","createItem","createDocItem","upload","dataFetchedValue","disableNext","namePancard","imageOCR","imageOCRBack","addressDisplay","hasNonEmptyFields","values","Boolean","pancard","report","docum_name","backSelected","document_side","deleteCustDoc","othersSelected","getCustomerDocuments","addDocumentlist","newDocumentSide","a","otherArray","fileData","img","docVal","docSideEnum","worker","logger","load","loadLanguage","initialize","recognize","uploadDoc","panCardDetails","nameDoc","passbookDetails","shotToast","aadharDetails","ocrFlag","confirmationDialog","changeValue2_Ocr","terminate","fun","fun1","frontSelected","arg0","Error","webcamImage2","function2","uploadData2","refreshCustomerId","_mimeType","imageAsDataUrl","displayVal2","file","dataURLtoFile","body","assignIdValues","asObservable","tab","textLabel","navigateByUrl","setIndex","setFinishFlag","finishFlag","updateKycStatus","hasOwnProperty","fetchChildIndex","page_id","element2","document","getElementById","click","element3","custId","docImage","objectURL","source","sanitizer","bypassSecurityTrustUrl","updateKycStatusByCustId","displayVal","uploadData1","displayVal1","dataurl","filename","arr","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","childindex","selectedFiles","size","formatBytes","doOCR","otherDocumentSelected","bytes","decimals","dm","sizes","floor","parseFloat","pow","toFixed","documnetSideValue","docType","uploadSub","UploadProgress","loaded","total","backSideId","otherSideId","otherDocumentSideId","shareCustomerId","sideType","msg","deleteRecord","delCustDoc","uploadDocLink","backdropClass","FinancialDetailsComponent","lastData","toISOString","applicantName","isFinancialScreen","getEmploymentType","getEmploymentCategory","getCardFinancialDetailsSummary","buildFinacialFormGroup","getCardFinancialDetails","arrayEmploymentType","arrayEmploymentCategory","cardFinancialDetailsForm","currentlyWorking","applicantTotalIncome","applicantTotalExpense","lastUpdatedon","employmentType","employmentCategory","employeeNumber","officeName","designation","employmentStartDate","employmentEndDate","salary","interestIncome","bonus","cashGifts","business","pension","monthlyIncomeRentals","monthlyIncomeOthers","monthlyIncomeTotal","household","education","vehicleMaintenance","monthlyExpenseRentals","monthlyExpenseOthers","medical","travel","monthlyExpenseTotal","propertyLoan","vehicleLoan","personalLoans","overdraft","cardOutstandings","liabilityOthers","liabilityTotal","savingDeposits","properties","automobiles","fixedDeposits","lands","assetOthers","stocks","assetTotal","validator","formGroup","validateInputGroups","formgroup","incomeErrMsg","ExpensesErrMsg","LiabilitiesErrMsg","assetErrMsg","startDate","converDate","endDate","upsertCardFinancialDetails","fincialResp","income","detectChanges","calculateTotalIncomeAndExpense","expense","liability","asset","totalIncome","totalExpense","CardAccountServicesComponent","selectedRow","statementList","communicationList","commChannelPreferencesArray","AccStatementPreferenceArray","enableFinish","isAccountServiceDone","gettingAccountService","buildServiceForm","accountServiceForm","gettingCardAccountServiceDetails","statementPref","commChannelPref","statementFrequency","statementFrncy","accServiceId","flattenValues","checkbox","checklist","checkboxes","flattenedValues","accountPayload","invalid","updateAccountService","createAccountService","EsignaturePopComponent","appEntryService","signaturePadOptions","minWidth","canvasWidth","canvasHeight","signupload","signaturePad","set","clear","toDataURL","esignUrl","base64Data","signatureImg","uploadModel","getByAccountId","getAccountIdByCusId","dataURL","datam","substring","asArray","len","blob","Blob","noOfSignatures","uploadSignature","op","getCardInitiationDetails","accountdetailsForStatusUpdate","updateCardAccountStatus","statusModel","updateCardStatus","updateResp","DigitalSignNowOrLaterComponent","alertForCardFinishButton","esignLink","subject","signInLater","openPopUp","onDone","cardInitiationForm","CardInitiationComponent","arrayofEmployment","onbackSpace","localCurrencyArr","selectedCurrency","iskycStatus","isGoForKyc","isKycForCardDone","accountNoArr","buildInitiationForm","isCardDetails","getCardInitiation","kycRefrence","kycNum","getPrimaryInfo","kycStatus","customerAdditionalInfo","getProfileDetails","signatures","accountID","accountCurrency","cardType","customerAccount","affinityProgram","kycReference","uploadCardInitiation","fetchAccountIdByCustId","accountNo","formControlValueChanged","cifNumberControl","nullValidator","valid","showSpinn","custStatus","queryParams","swiftCode","swiftCodeEnable","sendCIF","getAccountData","changeEvent","ApprovalDetailsComponent","getUserRecomendation","getAccountType","getAccountBranchDetails","buildformGroup","approvalForm","getApprovalDetails","productCode","accountBranch","productName","existingValues","upsertApprovalDetails","arrayAccountCurrency","arrayAccountType","arrayUserRecomendation","getAccountBranch","arrayAccountBranch","keyPressAlphanumeric","onKeyPress","IntrestDetailsSummaryComponent","is","interestRateApplicable","iloan","fs","setFlag","ApplicationEnrichmentComponent","DocumentUploadComponent","isLoanApplicationEntryDone","isLoanDetailScreen","documentdetails","CardAccountModule","forChild","declarations","imports","providers","schemas","CardaccountQualitativeScoreboardComponent","sbMultiSelectAnswer","scoreboardQuestionsArray","scoreCardMappingArray","numberOfApplicant","scoreCardId","isDataSaved","disableDoneBtn","anyErrorExist","isQualitativeScreen","sbSelectAnswer","loggedInUser","isScoreCardScreen","getAllQualitative","loadData","Array","getScorecardQuestions","attributeType","scorecardQuestion","scoreCardDetails","mapDataAns","p","scoreCardQuestionId","scorecardAnswer","scoreCardMappingId","scAns","sbSwlwctAnswer","sbSelectAnswer1","answer","qtype","mapId","applcantId","dataUpdated","aplcntExists","dataOject","idx","answerIs","inputValue","validationName","eleid","setStyle","querySelector","isNaN","selectValue","getAssessmentReportDetails","submitData","saveQualitativeScorecard","saveQualitativeScore"],"mappings":"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","file":"views-card-account-card-account-module-es5.js","sourcesContent":["export class home\r\n{\r\n    limitType:any;\r\n    dailyLimit:number;\r\n    limitPerTransaction:number;\r\n   \r\n}","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatProgressBar } from '@angular/material/progress-bar';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n// import { AccountService } from 'app/views/home/account.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\nimport { UrlService } from 'app/views/home/url.service';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\nimport { pairwise } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-card-customer-information',\r\n  templateUrl: './card-customer-information.component.html',\r\n  styleUrls: ['./card-customer-information.component.scss']\r\n})\r\nexport class CardCustomerInformationComponent implements OnInit {\r\n  cifNumberForm = new FormControl()\r\n  timer: any;\r\n  listOfCustByCif: any = [];\r\n\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  submitted = false;\r\n  formData = {}\r\n  console = console;\r\n  cardCustomerForm: FormGroup;\r\n  accountId: string;\r\n  data: any;\r\n  customerIdProofs: any = [];\r\n  selfNextBtnDisabled: boolean = true;\r\n  arrayPrefix: any[] = [];\r\n  arrayGender: any[] = [];\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n  arrayResidence: any[] = [];\r\n  arrayDocumentType: any[] = [];\r\n  arrayAddressType: any[] = [];\r\n  applicantDetailsArray: any[] = [];\r\n  toggle: boolean = false;\r\n  maritalStatusList: string[];\r\n  // customerDetails: IcustProductCustomerInfo = new IcustProductCustomerInfo();\r\n  customerDetails: any = {};\r\n  applicantDetails = [];\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  custInfo: string[];\r\n  tomorrow = new Date();\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  validDate = new Date();\r\n  showNewForm: boolean = true;\r\n  isCifValid: boolean = false;\r\n  toggleClick: boolean = false;\r\n  existingCustomer: boolean;\r\n  productCustomerId: any;\r\n  isCustomerDone: boolean = false;\r\n  previousUrl: string = '';\r\n  addOnCard: boolean = false;\r\n  addFunc: boolean = true;\r\n  index: any;\r\n  entityName: string;\r\n  removedButton: boolean = false;\r\n  selectedApplicant: any = null;\r\n  cifNumberPrimary: any;\r\n  listOfAccounts: any = [];\r\n  subscription: Subscription;\r\n  dispResponse: any;\r\n  arrayOwnership: string[];\r\n  cifNumber: any;\r\n  isAllSameDigitVal: boolean = false;\r\n  loanaccountID: any;\r\n  noOfapplicants: any;\r\n  ownershipStatus: any;\r\n  isChecked: boolean;\r\n  disabled: boolean;\r\n  disabledToggle: boolean;\r\n  @Input() i: any;\r\n  customerId: any;\r\n  currencyCode: any;\r\n  Currency: any;\r\n  Currency1: any;\r\n  cardId: any;\r\n  customerName: any;\r\n  currency: any;\r\n  ResideceCurrency: any;\r\n  isResidency: boolean = false;\r\n  isCurrency: boolean = false;\r\n  addonCardValue: boolean = false;\r\n  countryCode: any;\r\n  editCountryCode: any;\r\n  birthCountryFlag: any;\r\n  isBirthCountry: boolean = false;\r\n  isCountry: boolean = false;\r\n  form: FormGroup;\r\n  isDuplicateCIF: boolean;\r\n  disableSaveBtn: boolean;\r\n  showExpiryDate: boolean = true;\r\n\r\n\r\n  constructor(private router: Router, private dialog: MatDialog, private route: ActivatedRoute, private accountService: AccountService, private elRef: ElementRef,\r\n    private renderer: Renderer2, private ls: LocalStoreService, private apiService: ApiService, private formBuilder: FormBuilder, private confirmService: AppConfirmService, private cdr: ChangeDetectorRef, private appApiService: ApplicationEntryStageService,\r\n    private snack: MatSnackBar, private dataService: DataService, private urlService: UrlService, private loader: AppLoaderService) {\r\n    this.tomorrow.setDate(this.tomorrow.getDate()),\r\n      this.validDate.setDate(this.validDate.getDate());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.console.log(this.i);\r\n    this.isDuplicateCIF = false;\r\n    this.disableSaveBtn = false;\r\n    // this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.cardId = this.ls.getItem('cardId');\r\n    console.log(this.cardId)\r\n    let applicantId = this.route.snapshot.params['id'];\r\n    //console.log(\"applicantId\", applicantId);\r\n    this.isCustomerDone = JSON.parse(this.ls.getItem('Card_Customer_Done'));\r\n    this.addOnCard = this.ls.getItem('ADD_ON_CARD') || false;\r\n    console.log('ADD_ON_CARD', this.addOnCard);\r\n\r\n    this.cifNumberPrimary = this.ls.getItem(\"Card_CIF_NUM_PRIMARY\");\r\n    //console.log(\"check if\", this.loanaccountID, this.isCustomerDone);\r\n    this.buildCustomerForm();\r\n    this.getListOfAccounts();\r\n    this.getOwnershipValue(\"ownership\");\r\n    this.getPrefixValue(\"prefix\");\r\n    this.getGenderValue(\"gender\");\r\n    this.getResidenceDetails(\"residence\");\r\n    this.getCountryName(\"country\");\r\n    this.getAdressType(\"address_type\");\r\n    // this.getStateName(\"state\");\r\n    // this.getCityName(\"city\");\r\n\r\n    this.getDocumentType(\"document_type\");\r\n    this.getMaritalStatus(\"maritial_Status\");\r\n    // this.onFocusOutEvent('783',0);\r\n    this.isChecked = true;\r\n    this.disabled = false;\r\n    this.disabledToggle = true;\r\n\r\n    if (this.addOnCard == true) {\r\n      this.goToggle(\"event\");\r\n    }\r\n    if (this.cardId != null && this.isCustomerDone) {\r\n      this.showEditOption = true;\r\n      this.appApiService.fetchCardCustomersByCardId(this.cardId, 'cardOrigin')\r\n        .subscribe((resp: any) => {\r\n          this.buildCustomerForm(resp);\r\n        }, (err: any) => {\r\n        });\r\n      this.getListOfAccounts();\r\n      this.dataExtracted();\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.subscription = this.apiService.getaccParam.subscribe((data: any) => {\r\n        console.log(\"data::\", data);\r\n        this.dispResponse = data;\r\n        this.customerIdProofs = data.custIdProofs;\r\n        // Not Required THIS\r\n        // Comment Added By Sakthi\r\n        // If any issue reach me \r\n        // if (this.listOfAccounts.length == 0) {\r\n        //   this.populatePrimaryApplicant(data);\r\n        // } else {\r\n        //   this.fetchByCif(this.cifNumberPrimary, true);\r\n        // }\r\n      });\r\n    }\r\n    this.cardCustomerForm.get('ownership').valueChanges.subscribe(val => {\r\n      console.log(\"ownership ?\", val);\r\n      \r\n      if (val == 'Joint') {\r\n        this.cardCustomerForm.get('addOnCard').patchValue(true);\r\n        this.ls.setItem('ADD_ON_CARD', true);\r\n        this.cardCustomerForm.get('numOfApplicants').patchValue(2, { onlySelf: true, emitEvent: false });\r\n        this.cardCustomerForm.get('applicantDetails').reset();\r\n        // this.cardCustomerForm.controls['applicantDetails'].get('nationality').patchValue('')\r\n        this.disabled = false;\r\n        console.log(\"this.cardCustomerForm.get('numOfApplicants')\", this.cardCustomerForm.get('numOfApplicants'));\r\n      } else {\r\n        this.cardCustomerForm.get('addOnCard').patchValue(false);\r\n        this.ls.setItem('ADD_ON_CARD', false);\r\n        this.cardCustomerForm.get('numOfApplicants').patchValue(1, { onlySelf: true, emitEvent: false });\r\n      }\r\n    });\r\n    this.cardCustomerForm.get('numOfApplicants').valueChanges.subscribe(val => {\r\n      console.log(\"ownership ?\", val);\r\n      if (val == 1) {\r\n        this.cardCustomerForm.get('ownership').patchValue('Self', { onlySelf: true, emitEvent: false });\r\n        this.applicant.get('existingCustomer').patchValue(true);\r\n        this.applicant.get('primaryCustomer').patchValue(true);\r\n      } else {\r\n        this.cardCustomerForm.get('ownership').patchValue('Joint', { onlySelf: true, emitEvent: false });\r\n        this.applicant.get('existingCustomer').patchValue(true);\r\n        this.applicant.get('primaryCustomer').patchValue(false);\r\n        this.disabled = false;\r\n      }\r\n    });\r\n    console.log(this.cardCustomerForm);\r\n\r\n  }\r\n\r\n  dataExtracted() {\r\n    this.ownershipStatus = this.ls.getItem('cardownership_value');\r\n    console.log(\"ownership ?\", this.ownershipStatus);\r\n    if (this.ownershipStatus == \"Joint\") {\r\n      console.log(\"calling\")\r\n      this.cardCustomerForm.get('numOfApplicants').setValue(2);\r\n    } else {\r\n      this.cardCustomerForm.get('numOfApplicants').setValue(1);\r\n    }\r\n\r\n    this.noOfapplicants = this.ls.getItem('CardNoOfApplicants');\r\n    this.console.log(this.noOfapplicants)\r\n    if (this.noOfapplicants == 1) {\r\n      this.cardCustomerForm.get('ownership').setValue('Self');\r\n    } else {\r\n      this.cardCustomerForm.get('ownership').setValue('Joint');\r\n    }\r\n\r\n\r\n    this.applicant.get('idType')\r\n      .valueChanges\r\n      .pipe(pairwise())\r\n      .subscribe(([prev, next]: [any, any]) => {\r\n        this.applicant.get('idNumber').patchValue('');\r\n        this.applicant.get('expiryDate').patchValue('');\r\n      });\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.isCustomerDone = JSON.parse(this.ls.getItem('Card_Customer_Done'));\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.cifNumber = this.ls.getItem('CIF_NUM_PRIMARY');\r\n    this.console.log(\"cifNumber=\", this.cifNumber);\r\n\r\n  }\r\n  populatePrimaryApplicant(data: any) {\r\n    this.getStateName(data.country);\r\n    this.getCityName(data.state);\r\n    let applicantData = {\r\n      cifNumber: this.cifNumberPrimary,\r\n      prefix: data.prefix,\r\n      existingCustomer: true,\r\n      primaryCustomer: true,\r\n      customerId: data.customerId,\r\n      firstName: data.firstName,\r\n      middleName: data.middleName,\r\n      lastName: data.lastName,\r\n      gender: data.gender,\r\n      dateOfBirth: this.convertDate(data.dateOfBirth),\r\n      placeOfBirth: data.placeOfBirth,\r\n      residenceStatus: data.residenceStatus,\r\n      nationality: data.nationality,\r\n      countryOfResidence: data.countryOfResidence,\r\n      occupationType: data.occupationType,\r\n      idType: data.idType,\r\n      idNumber: data.idNumber,\r\n      expiryDate: this.convertDate(data?.expiryDate) || '',\r\n      addressType: data.addressType,\r\n      address1: data.address1,\r\n      address2: data.address2,\r\n      city: data.city,\r\n      country: data.country,\r\n      state: data.state,\r\n      zipCode: data.zipCode,\r\n      phoneNumber: data.phoneNumber,\r\n      landlineNumber: data.landlineNumber,\r\n      primaryEmailAdress: data.primaryEmailAdress,\r\n      maritalStatus: data.maritalStatus,\r\n      birthCountry: data.birthCountry\r\n\r\n    }\r\n\r\n    this.applicant.patchValue(applicantData);\r\n  }\r\n\r\n\r\n  changeIdType(doc) {\r\n    console.log(\"doc::\", doc)\r\n    console.log(\"this.customerIdProofs::\", this.customerIdProofs)\r\n    this.showExpiryDate = true;\r\n    if (doc === 'Aadhar card') {\r\n      // this.applicant.get('expiryDate').setValue('')\r\n      this.applicant.get('expiryDate').clearValidators()\r\n      this.showExpiryDate = false;\r\n    }\r\n    let idProofs: any = this.customerIdProofs.filter(item => {\r\n      return item.idType == doc;\r\n    })\r\n    console.log(\"idProofs::\", idProofs)\r\n    if (idProofs.length > 0) {\r\n      this.applicant.get('idNumber').patchValue(idProofs[0].idNumber);\r\n      this.applicant.get('expiryDate').patchValue(this.convertDate(idProofs[0]?.expiryDate) || '');\r\n    } else {\r\n      this.applicant.get('idNumber').patchValue('');\r\n      this.applicant.get('expiryDate').patchValue('');\r\n    }\r\n  }\r\n\r\n  isObjectEmpty(value) {\r\n    return (\r\n      Object.prototype.toString.call(value) === '[object Object]' &&\r\n      JSON.stringify(value) === '{}'\r\n    );\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  toggleDetails(account) {\r\n    console.log(this.cardCustomerForm);\r\n\r\n    console.log(\"customerId incomming\", account);\r\n    this.cardCustomerForm.get('numOfApplicants').disable({ onlySelf: true, emitEvent: false });\r\n    // if (this.selectedApplicant && this.selectedApplicant._id === account._id) {\r\n    //   // Close the details\r\n    //   this.closeDetails();\r\n    //   return;\r\n    // }\r\n    let address: any;\r\n    this.console.log(account.userAddress.length);\r\n    if (account.userAddress.length > 1) {\r\n      address = account.userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n    } else {\r\n      address = account.userAddress[0];\r\n    }\r\n    this.getStateName(address.country);\r\n    this.getCityName(address.state);\r\n    // if(account.countryOfResidence!=null){\r\n    //   this.onSelectionCitizionship( account.countryOfResidence);\r\n    // }\r\n    // if(account.nationality!=null){\r\n    //   this.onSelectionResidance(account.nationality);\r\n    // }\r\n\r\n    let payLoadModel = {\r\n      existingCustomer: account.existingCustomer,\r\n      dependentId: account.dependentId,\r\n      primaryCustomer: account.primaryCustomer,\r\n      cifNumber: account.cifNumber,\r\n      prefix: account.prefix,\r\n      firstName: account.firstName,\r\n\r\n      middleName: account.middleName,\r\n      lastName: account.lastName,\r\n      gender: account.gender,\r\n      dateOfBirth: account.dateOfBirth,\r\n      placeOfBirth: account.placeOfBirth,\r\n      residenceStatus: account.residenceStatus,\r\n      nationality: account.nationality,\r\n      countryOfResidence: account.countryOfResidence,\r\n      occupationType: account.occupationType,\r\n      idType: account.custIdProofs[0].idType,\r\n      idNumber: account.custIdProofs[0].idNumber,\r\n      expiryDate: account.custIdProofs[0]?.expiryDate || '',\r\n      addressType: address.addressType,\r\n      address1: address.address1,\r\n      address2: address.address2,\r\n      city: address.city,\r\n      state: address.state,\r\n      country: address.country,\r\n      zipCode: address.zipCode,\r\n      phoneNumber: account.phoneNumber,\r\n      landlineNumber: account.landlineNumber,\r\n      primaryEmailAdress: account.primaryEmailAdress,\r\n      maritalStatus: account.maritalStatus,\r\n      birthCountry: account.birthCountry\r\n    };\r\n    console.log(\"account.firstName=\", account.firstName);\r\n    //console.log(\"firstName=\",this.firstName);\r\n    this.selectedApplicant = account;\r\n    console.log(\"payLoadModel\", payLoadModel);\r\n    this.applicant.patchValue(payLoadModel, { onlySelf: false, emitEvent: false });\r\n    this.onSelectionBirthCountry(payLoadModel.birthCountry)\r\n    this.onSelectionResidance(payLoadModel.countryOfResidence);\r\n    this.onSelectionCitizionship(payLoadModel.nationality);\r\n    this.getCountrySelection1(payLoadModel.country);\r\n    this.onBirthCountry(payLoadModel.birthCountry);\r\n    //this.applicant.patchValue(payLoadModel);\r\n    this.cdr.markForCheck();\r\n    console.log(this.selectedApplicant);\r\n\r\n  }\r\n\r\n  resetAndClose() {\r\n    this.closeDetails();\r\n  }\r\n\r\n  /**\r\n   * Close the details\r\n   */\r\n  closeDetails(): void {\r\n    this.selectedApplicant = null;\r\n    this.applicant.reset();\r\n    this.cardCustomerForm.get('numOfApplicants').enable({ onlySelf: true });\r\n\r\n  }\r\n\r\n  getListOfAccounts() {\r\n    this.isResidency = false;\r\n    this.isCurrency = false;\r\n    this.isBirthCountry = false;\r\n    this.isCountry = false;\r\n    this.appApiService.fetchCardCustomersByCardId(this.cardId, 'cardOrigin')\r\n      .subscribe((resp: any) => {\r\n        this.listOfAccounts = resp.status == 200 ? resp.data.map(value => ({ ...value, _id: Math.round(Math.random() * 10000000000) })) : [];\r\n        this.console.log(\" this.listOfAccounts\", this.listOfAccounts)\r\n        console.log(\"All Customer Details\", this.listOfAccounts.length);\r\n        resp.status == 200 ? this.ls.setItem(\"cId\", resp.data[0].customerId) : null;\r\n        console.log(\"Length check??\", this.listOfAccounts.length);\r\n        const requiredFields = ['prefix', 'firstName', 'lastName', 'dateOfBirth', 'gender', 'birthCountry', 'placeOfBirth', 'residenceStatus', 'countryOfResidence', 'nationality', 'maritalStatus', 'occupationType', 'phoneNumber', 'primaryEmailAdress']\r\n        const custIdProofs = ['idType', 'expiryDate', 'idNumber']\r\n        const userAddress = ['address1', 'address2', 'addressType', 'country', 'state', 'city', 'zipCode']\r\n        this.listOfAccounts.map((acc: { [x: string]: any; custIdProofs: { [x: string]: any; }; userAddress: { [x: string]: any; }; }) => {\r\n          requiredFields.map(field => {\r\n            if (acc[field] != null) {\r\n              custIdProofs.map(id => {\r\n                if (acc.custIdProofs[id] != null) {\r\n                  userAddress.map(address => {\r\n                    if (acc.userAddress[address] != null) {\r\n                      return this.selfNextBtnDisabled = false;\r\n                    } else {\r\n                      return this.selfNextBtnDisabled = true;\r\n                    }\r\n                  })\r\n                } else {\r\n                  return this.selfNextBtnDisabled = true;\r\n                }\r\n              })\r\n            } else {\r\n              return this.selfNextBtnDisabled = true\r\n            }\r\n          })\r\n          console.log('selfNextBtnDisabled ', this.selfNextBtnDisabled);\r\n\r\n        })\r\n\r\n        if (this.listOfAccounts.length == 0) {\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(true);\r\n        } else if (this.listOfAccounts.length == 1) {\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(false);\r\n        } else if (this.listOfAccounts.length >= 2) {\r\n          this.cardCustomerForm.get('ownership').patchValue('Joint');\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(false);\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            const element = resp.data[index];\r\n            console.log(\"number calling\", element)\r\n            this.cardCustomerForm.get('numOfApplicants').patchValue(resp.data[index].numOfApplicants);\r\n          }\r\n        }\r\n\r\n        this.cdr.markForCheck();\r\n\r\n        this.toggleChanges();\r\n      }, (err: any) => {\r\n\r\n      });\r\n  }\r\n\r\n  removeApplicant(account) {\r\n    this.confirmService\r\n      .confirm({ title: \"Confirm\", message: \"Are you sure want to delete?\", ok: \"Yes\", cancel: \"No\" })\r\n      .subscribe(res => {\r\n        console.log(\"res:: removed \", res);\r\n        if (res) {\r\n          this.appApiService.deleteApplicant(account.customerId, account.dependentId)\r\n            .subscribe((res: any) => {\r\n            }, (err: any) => {\r\n              console.log(err);\r\n              if (err.status == 200) {\r\n                this.snack.open(`Dependent ${account.firstName} ${err.error.text}!`, 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n                this.getListOfAccounts();\r\n              }\r\n            })\r\n        } else return;\r\n      });\r\n  }\r\n\r\n  fetchByCif(cifNumber, isExistingCustomer) {\r\n    if (this.listOfAccounts.some(acc => acc.cifNumber == cifNumber)) {\r\n      this.isDuplicateCIF = true;\r\n      this.disableSaveBtn = true;\r\n      this.snack.open('Duplicate CIF Number', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    } else {\r\n      this.isDuplicateCIF = false;\r\n      this.disableSaveBtn = false;\r\n      this.currency = null;\r\n      this.birthCountryFlag = null;\r\n      cifNumber && this.appApiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n        console.log(res)\r\n        // console.log(res.customerInfoList[0].custIdProofs[0]?.expiryDate);\r\n        if (!res) {\r\n          this.isCifValid = false;\r\n          this.snack.open('Invalid CIF Number', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.applicant.get('cifNumber').patchValue('');\r\n          return;\r\n        } else {\r\n          this.applicant.get('expiryDate').clearValidators()\r\n          this.isCifValid = true;\r\n          this.ls.setItem(\"cId\", res.customerInfoList[0].customerId);\r\n          let address: any;\r\n          this.console.log(res.customerInfoList[0].userAddress.length);\r\n          if (res.customerInfoList[0].userAddress.length > 1) {\r\n            address = res.customerInfoList[0].userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n            console.log(address)\r\n          } else {\r\n            address = res.customerInfoList[0].userAddress[0];\r\n            console.log(address)\r\n          }\r\n          let policyRenewalDate = moment(res.customerInfoList[0].custIdProofs[0]?.expiryDate).format();\r\n          this.console.log(policyRenewalDate)\r\n          this.getStateName(address.country);\r\n          this.getCityName(address.state);\r\n          //display flag\r\n          this.onSelectionCitizionship1(res.customerInfoList[0].nationality);\r\n\r\n          this.onOtherSelectionResidance(res.customerInfoList[0].countryOfResidence);\r\n          console.log(res.customerInfoList[0].birthCountry);\r\n\r\n          this.onBirthCountry(res.customerInfoList[0].birthCountry);\r\n          this.getCountrySelection(address.country);\r\n\r\n\r\n\r\n          let applicantData = {\r\n            prefix: res.customerInfoList[0].prefix,\r\n            cifNumber: res.customerInfoList[0].cifNumber,\r\n            existingCustomer: isExistingCustomer,\r\n            customerId: res.customerInfoList[0].customerId,\r\n            firstName: res.customerInfoList[0].firstName,\r\n            middleName: res.customerInfoList[0].middleName,\r\n            lastName: res.customerInfoList[0].lastName,\r\n            gender: res.customerInfoList[0].gender,\r\n            dateOfBirth: this.convertDate(res.customerInfoList[0].dateOfBirth),\r\n            placeOfBirth: res.customerInfoList[0].placeOfBirth,\r\n            residenceStatus: res.customerInfoList[0].residenceStatus,\r\n            nationality: res.customerInfoList[0].nationality,\r\n            countryOfResidence: res.customerInfoList[0].countryOfResidence,\r\n            occupationType: res.customerInfoList[0].occupationType,\r\n            idType: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idType : '',\r\n            idNumber: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idNumber : '',\r\n            expiryDate: policyRenewalDate,\r\n            addressType: address.addressType,\r\n            address1: address.address1,\r\n            address2: address.address2,\r\n            city: address.city,\r\n            country: address.country,\r\n            state: address.state,\r\n            zipCode: address.zipCode,\r\n            phoneNumber: res.customerInfoList[0].phoneNumber,\r\n            landlineNumber: res.customerInfoList[0].landlineNumber,\r\n            primaryEmailAdress: res.customerInfoList[0].primaryEmailAdress,\r\n            maritalStatus: res.customerInfoList[0].maritalStatus,\r\n            birthCountry: res.customerInfoList[0].birthCountry\r\n          }\r\n          this.console.log(\"res.customerInfoList[0].firstName=\", res.customerInfoList[0].firstName);\r\n          this.customerName = res.customerInfoList[0].firstName + ' ' + res.customerInfoList[0].lastName;\r\n          // this.console.log(\"customerName:\",this.customerName);\r\n          // this.ls.setItem(\"customerName\", this.customerName);\r\n          this.applicant.patchValue(applicantData);\r\n          console.log(this.applicant);\r\n        }\r\n        this.cdr.markForCheck();\r\n      }, (err: any) => {\r\n        console.error(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  getCustomerInformationDetails() {\r\n    this.appApiService.fetchCardCustomersByCardId(this.cardId, 'cardOrigin')\r\n      .subscribe((resp: any) => {\r\n        this.buildCustomerForm(resp);\r\n      }, (err: any) => {\r\n      });\r\n  }\r\n\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DD') || null; // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n\r\n  buildCustomerForm(data?) {\r\n    this.console.log(data)\r\n\r\n    this.cardCustomerForm = this.formBuilder.group({\r\n      productAccountId: data ? data.productAccountId : this.accountId,\r\n      ownership: data ? data.data[0].ownership : 'Self',\r\n      numOfApplicants: data ? data.data[0].numOfApplicants : 1,\r\n      addOnCard: data ? data.data[0].addOnCard : this.addOnCard,\r\n      applicantDetails: this.addCustFormGroup()\r\n    });\r\n  }\r\n\r\n  toggleChanges() {\r\n    if (this.applicant.get('existingCustomer').value == true) {\r\n      this.applicant.get('cifNumber').enable();\r\n      this.applicant.get('cifNumber').setValidators([Validators.required]);\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n    }\r\n    else {\r\n      this.applicant.patchValue({ cifNumber: '' })\r\n      this.isDuplicateCIF = false;\r\n      this.applicant.get('cifNumber').disable();\r\n      this.applicant.get('cifNumber').clearValidators();\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  toggleAddForm() {\r\n    this.showNewForm = !this.showNewForm;\r\n  }\r\n\r\n  addCustFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      existingCustomer: [null, []],\r\n      primaryCustomer: [null, []],\r\n      cifNumber: [''],\r\n      customerId: [''],\r\n      dependentId: [null],\r\n      prefix: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      middleName: [''],\r\n      maritalStatus: ['', Validators.required],\r\n      birthCountry: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      placeOfBirth: ['', Validators.required],\r\n      residenceStatus: ['', Validators.required],\r\n      nationality: ['', Validators.required],\r\n      countryOfResidence: ['', Validators.required],\r\n      occupationType: ['', Validators.required],\r\n      idType: ['', Validators.required],\r\n      idNumber: ['', Validators.required],\r\n      expiryDate: [''],\r\n      addressType: ['', Validators.required],\r\n      address1: ['', [Validators.required, Validators.pattern('.*[a-zA-Z].*')]],\r\n      address2: ['', [Validators.required, Validators.pattern('.*[a-zA-Z].*')]],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      zipCode: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(10), Validators.pattern('^[0-9]{5,10}$')]],\r\n      phoneNumber: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10), Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      landlineNumber: ['', [Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      primaryEmailAdress: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n    })\r\n  }\r\n\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  validateNumber(event) {\r\n    const keyCode = event.keyCode;\r\n\r\n    const excludedKeys = [8, 37, 39, 46];\r\n\r\n    if (!((keyCode >= 48 && keyCode <= 57) ||\r\n      (keyCode >= 96 && keyCode <= 105) ||\r\n      (excludedKeys.includes(keyCode)))) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() { return this.cardCustomerForm.controls; }\r\n  get applicantCount() { return this.f.numOfApplicants; }\r\n  get applicant() { return this.f.applicantDetails; }\r\n\r\n\r\n\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n  getMaritalStatus(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.maritalStatusList = data;\r\n    });\r\n  }\r\n\r\n  getOwnershipValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayOwnership = data;\r\n    });\r\n  }\r\n\r\n  getGenderValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayGender = data;\r\n    });\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].authStatus === 'A') {\r\n          this.arrayCountry.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getAdressType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAddressType = data;\r\n    });\r\n  }\r\n\r\n\r\n  getStateName(country) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].countryName == country) {\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n            this.arrayState = resp\r\n          })\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n      // this.applicant.valueChanges.subscribe(data=>{\r\n      //   console.log('data :: before ',data.city)\r\n      //   data.city='';\r\n      //   console.log('data :: after ',data.city)\r\n      // })\r\n      // this.applicant.value.city='';\r\n      // this.applicant.get('city').reset();\r\n      console.log('this.applicant', this.applicant)\r\n    });\r\n  }\r\n  onBirthCountry(data: any) {\r\n    this.console.log(\"data ::\", data)\r\n    this.isBirthCountry = true;\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.birthCountryFlag = value.currencyCode.toLowerCase();\r\n      })\r\n    }\r\n  }\r\n  getCountrySelection(data: any) {\r\n    this.console.log(\"data ::\", data)\r\n    this.isCountry = true;\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.countryCode = value.currencyCode.toLowerCase();\r\n      })\r\n    }\r\n  }\r\n  getCountrySelection1(data: any) {\r\n    this.console.log(\"data ::\", data)\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.editCountryCode = value.currencyCode.toLowerCase();\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  getResidenceDetails(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayResidence = data;\r\n    });\r\n  }\r\n\r\n  getDocumentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayDocumentType = data;\r\n    });\r\n  }\r\n  onSelectionCitizionship(data: any) {\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.currencyCode = value.currencyCode.toLowerCase();\r\n        console.log(this.currencyCode);\r\n      })\r\n    }\r\n  }\r\n  onSelectionCitizionship1(data: any) {\r\n    console.log(\"data ::\", data)\r\n    console.log(data);\r\n    this.isCurrency = true;\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        console.log(value);\r\n\r\n        this.currency = value.currencyCode.toLowerCase();\r\n        console.log(this.currency);\r\n\r\n        console.log(this.currencyCode);\r\n      })\r\n    }\r\n  }\r\n  onSelectionBirthCountry(data: any) {\r\n    console.log('Birth Country : ', data);\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe(value => {\r\n        console.log(value.currencyCode);\r\n        this.Currency1 = value.currencyCode.toLowerCase()\r\n      })\r\n    }\r\n\r\n  }\r\n  onSelectionResidance(data: any) {\r\n    this.console.log(\"data ::\", data)\r\n    console.log(data);\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.Currency = value.currencyCode.toLowerCase();\r\n        console.log(this.Currency);\r\n\r\n      })\r\n    }\r\n  }\r\n  onOtherSelectionResidance(data: any) {\r\n    this.console.log(\"data ::\", data)\r\n    console.log(data);\r\n    this.isResidency = true;\r\n    if (data != null) {\r\n      this.apiService.countryFlaglists(data).subscribe((value) => {\r\n        this.ResideceCurrency = value.currencyCode.toLowerCase();\r\n\r\n        console.log(this.ResideceCurrency);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log('saveapplicant')\r\n    this.isCifValid = false;\r\n    // if (this.cardCustomerForm.invalid) {\r\n    //   console.log(\"test\");\r\n\r\n    //   return;\r\n    // }\r\n    // this.loader.open();\r\n\r\n    let payloadObj: any = {};\r\n    const control = this.cardCustomerForm.controls['applicantDetails'].value;\r\n    console.log(control);\r\n    let addressObj: any = {};\r\n    let custIdProofs: any = {};\r\n    let custIdProofsArray: any[] = [];\r\n    let addressObjArray: any[] = [];\r\n\r\n    payloadObj.customerId = this.ls.getItem(\"cId\");\r\n    payloadObj.cifNumber = control.cifNumber;\r\n    payloadObj.dependentId = control.dependentId;\r\n    payloadObj.existingCustomer = control.existingCustomer;\r\n    payloadObj.primaryCustomer = control.primaryCustomer;\r\n    payloadObj.residenceStatus = control.residenceStatus;\r\n    payloadObj.placeOfBirth = control.placeOfBirth;\r\n    payloadObj.countryOfResidence = control.countryOfResidence;\r\n    payloadObj.occupationType = control.occupationType;\r\n    payloadObj.phoneNumber = control.phoneNumber;\r\n    payloadObj.maritalStatus = control.maritalStatus;\r\n    payloadObj.birthCountry = control.birthCountry;\r\n    payloadObj.primaryEmailAdress = control.primaryEmailAdress;\r\n    payloadObj.prefix = control.prefix;\r\n    payloadObj.firstName = control.firstName;\r\n    payloadObj.middleName = control.middleName;\r\n    payloadObj.lastName = control.lastName;\r\n    payloadObj.cifNumber = control.cifNumber;\r\n    payloadObj.gender = control.gender;\r\n    payloadObj.dateOfBirth = this.convertDate(control.dateOfBirth);\r\n    payloadObj.nationality = control.nationality;\r\n    // payloadObj.customerId = 170053;\r\n    payloadObj.cardId = this.cardId;\r\n    payloadObj.accountType = \"cardOrigin\";\r\n    payloadObj.landlineNumber = control.landlineNumber;\r\n    payloadObj.ownership = this.cardCustomerForm.get('ownership').value;\r\n    payloadObj.numOfApplicants = this.cardCustomerForm.get('numOfApplicants').value;\r\n    payloadObj.addOnCard = this.addonCardValue\r\n    addressObj.address1 = control.address1;\r\n    addressObj.address2 = control.address2;\r\n    addressObj.country = control.country;\r\n    addressObj.state = control.state;\r\n    addressObj.city = control.city;\r\n    addressObj.zipCode = control.zipCode;\r\n    addressObj.addressType = control.addressType;\r\n    addressObjArray.push(addressObj);\r\n    \r\n    if(control?.expiryDate==\"Invalid date\"){\r\n      custIdProofs.expiryDate=null;\r\n    }else{\r\n      custIdProofs.expiryDate = control?.expiryDate != \"\" ? this.convertDate(control?.expiryDate) : \"\" || '';\r\n    }\r\n    \r\n    custIdProofs.idType = control.idType;\r\n    custIdProofs.idNumber = control.idNumber;\r\n    custIdProofsArray.push(custIdProofs);\r\n\r\n    payloadObj.userAddress = addressObjArray;\r\n    payloadObj.custIdProofs = custIdProofsArray;\r\n\r\n    console.log(\"payloadObj\", payloadObj);\r\n    this.isChecked = false;\r\n    this.disabled = false;\r\n    this.appApiService.createAndUpdateCardAccountants(payloadObj)\r\n      .subscribe((data: any) => {\r\n        console.log(\"data::\", data)\r\n        this.closeDetails();\r\n        this.loader.close();\r\n        console.log(\"Response of service 2 ---> \", data)\r\n        if (data.status === 200) {\r\n\r\n          this.getListOfAccounts();\r\n          this.snack.open('Customer Information Details Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          if (data.custDependentModel.primaryCustomer == true) {\r\n            if (data.custDependentModel.middleName == null) {\r\n              this.ls.setItem('primaryCustomerName', data.custDependentModel.firstName + ' ' + data.custDependentModel.lastName);\r\n            }\r\n            else {\r\n              this.ls.setItem('primaryCustomerName', data.custDependentModel.firstName + ' ' + data.custDependentModel.middleName + ' ' + data.custDependentModel.lastName);\r\n            }\r\n\r\n          }\r\n          this.cardCustomerForm.get('ownership').patchValue(data.custDependentModel.ownership);\r\n          this.cardCustomerForm.get('numOfApplicants').patchValue(data.custDependentModel.numOfApplicants);\r\n\r\n          if (this.cardCustomerForm.get('ownership').value == 'Self') {\r\n            this.goToNext();\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        console.log(err);\r\n        this.loader.close();\r\n        this.snack.open('Error', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      })\r\n  }\r\n\r\n\r\n\r\n  uploadImage() {\r\n    console.log(\"Upload Image\");\r\n  }\r\n\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.submitted = false;\r\n    this.cardCustomerForm.reset({});\r\n  }\r\n\r\n  onClear() {\r\n    // clear errors and reset ticket fields\r\n    this.submitted = false;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/cardInitiation`]);\r\n  }\r\n\r\n\r\n  goToNext() {\r\n    this.ls.setItem('Card_Customer_Done', true);\r\n\r\n    // //  if(this.ls.getItem.accountType!=)\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/financialDetails`]);\r\n    this.ls.setItem('CardNoOfApplicants', this.cardCustomerForm.get('numOfApplicants').value);\r\n    this.ls.setItem('cardownership_value', this.cardCustomerForm.get('ownership').value);\r\n\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/financialDetails`]);\r\n  }\r\n\r\n  onKeyPress1(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    } console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.listOfCustByCif = []\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.isCifValid = false;\r\n      this.applicant.reset();\r\n      this.applicant.get('cifNumber').clearValidators();\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n      this.applicant.get('existingCustomer').patchValue(true);\r\n      this.applicant.get('primaryCustomer').patchValue(true);\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => {\r\n          console.log(res);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count, number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    } else {\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.dataService.sendNavParam({});\r\n  }\r\n  goToggle(event: any) {\r\n    console.log(\"event\", event.checked);\r\n    this.addonCardValue = event.checked\r\n    // if(event.checked==true){\r\n    // this.ls.setItem('addonCardApplicant', 2);\r\n    // }\r\n    if (event.checked == true || this.addOnCard) {\r\n      this.cardCustomerForm.get('ownership').setValue('Joint');\r\n      this.cardCustomerForm.get('numOfApplicants').patchValue(2);\r\n      this.disabled = false;\r\n    }\r\n    else if (event.checked == false) {\r\n      this.cardCustomerForm.get('ownership').patchValue('Self', { onlySelf: true, emitEvent: false });\r\n      this.cardCustomerForm.get('numOfApplicants').patchValue(1, { onlySelf: true, emitEvent: false });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/undraw_personal_information_re_vw8a.svg\" alt=\"\" class=\"w-90\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Customer Information Details</b></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <mat-progress-bar [mode]=\"determinate\" class=\"session-progress\"></mat-progress-bar> -->\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">Customer Information</div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form *ngIf=\"cardCustomerForm\" [formGroup]=\"cardCustomerForm\" novalidate>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Ownership</mat-label>\r\n                    <mat-select formControlName=\"ownership\"name=\"owner\"class=\"graycolor\" required>\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let ownership of arrayOwnership\" [value]=\"ownership\">\r\n                        {{ownership}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"cardCustomerForm.get('ownership').hasError('required')\">\r\n                      Ownership is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                <div class=\"pb-1\">\r\n                  <ng-container *ngIf=\"cardCustomerForm.get('ownership').value == 'Joint'; else showAdd\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Number of Applicants *</mat-label>\r\n                      <mat-select formControlName=\"numOfApplicants\" name=\"account\">\r\n                        <mat-option [value]=\"1\">1</mat-option>\r\n                        <mat-option [value]=\"2\">2</mat-option>\r\n                        <mat-option [value]=\"3\">3</mat-option>\r\n                        <mat-option [value]=\"4\">4</mat-option>\r\n                        <mat-option [value]=\"5\">5</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </ng-container>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" >\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                    <div class=\"mb-1\">\r\n                      \r\n                        <h2>Details Of the Applicant</h2>\r\n                      \r\n                    </div>\r\n              </div>\r\n             \r\n              <div fxFlex=\"100\"  fxLayoutGap=\"16px\" fxLayoutAlign=\"end end\"style=\"padding-right:15px\">\r\n              <div class=\"mb-1\">\r\n                <p class=\"m-0 text-right\">Completed {{ listOfAccounts.length }} /\r\n                  {{ cardCustomerForm.get('numOfApplicants').value }}</p>\r\n                <mat-progress-bar\r\n                  [color]=\"cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? 'primary' : 'accent'\"\r\n                  mode=\"determinate\"\r\n                  [value]=\"cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? 100 : 50\"\r\n                  class=\"rounded\" style=\"height: 5px\">\r\n                </mat-progress-bar>\r\n                <mat-hint><small> completed / total applicants </small></mat-hint>\r\n              </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                    <div class=\"pb-1\">\r\n                        <label  class=\"hint\">Add on CardHolder</label>\r\n                        \r\n                        <mat-slide-toggle  style=\"margin-left: 1cm;\" formControlName=\"addOnCard\"\r\n                        (change)=\"goToggle($event)\"\r\n                            >\r\n                        </mat-slide-toggle>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n            </div>\r\n\r\n            \r\n        \r\n            <!-- *ngIf=\"!showNewForm\" -->\r\n            <div class=\"mt-12\">\r\n              <mat-accordion multi=\"true\">\r\n                <mat-expansion-panel class=\"mb-8\" *ngFor=\"let account of listOfAccounts; let i=index\" expanded=\"true\">\r\n                  <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                      <mat-icon class=\"check-circle\">check_circle</mat-icon> <span class=\"ml-8\">Applicant {{ i+1 }}</span>\r\n                    </mat-panel-title>\r\n                  </mat-expansion-panel-header>\r\n                  <mat-card>\r\n                    <mat-card-header style=\"margin-bottom: -16px !important;\">\r\n                        <div mat-card-avatar>\r\n                          <app-avatar-photo [name]=\"account.firstName + ' ' + account.lastName\"></app-avatar-photo>\r\n                        </div>\r\n                        <mat-card-title>\r\n                          <div fxLayout=\"row\">\r\n                            <h6 class=\"m-0 mr-16\">{{ account.firstName + ' ' + account.lastName }}</h6>\r\n                            <span fxFlex></span>\r\n                            <mat-chip mat-sm-chip [color]=\"'warn'\" *ngIf=\"account.primaryCustomer\"\r\n                              [selected]=\"account.primaryCustomer\">{{account.primaryCustomer ? 'primary' : ''}}</mat-chip>\r\n                          </div>\r\n    \r\n                        </mat-card-title>\r\n                        <mat-card-subtitle><span class=\"mat-caption\">CIF\r\n                            {{ account.cifNumber != null ? '#' + account.cifNumber : '- n/a' }}</span></mat-card-subtitle>\r\n                        <div fxLayout=\"row\" fxFlex=\"1 1 0%\" fxLayoutAlign=\"end end\">\r\n                          <span class=\"group-btn-bg\">\r\n                            <ng-container *ngIf=\"selectedApplicant?._id === account._id; else showEdit\">\r\n                              <a type=\"reset\" mat-icon-button color=\"primary\" (click)=\"resetAndClose()\">\r\n                                <mat-icon>close</mat-icon>\r\n                              </a>\r\n                            </ng-container>\r\n                            <ng-template #showEdit>\r\n                              <a type=\"submit\" mat-icon-button color=\"primary\" (click)=\"toggleDetails(account)\">\r\n                                <mat-icon>edit</mat-icon>\r\n                              </a>\r\n                            </ng-template>\r\n    \r\n                            <a *ngIf=\"account.dependentId\" mat-icon-button color=\"warn\" (click)=\"removeApplicant(account)\">\r\n                              <mat-icon>delete</mat-icon>\r\n                            </a>\r\n                          </span>\r\n                        </div>\r\n                      </mat-card-header>\r\n                      <mat-card-container>\r\n                        <ng-container *ngIf=\"selectedApplicant?._id === account._id\">\r\n                          <ng-container *ngTemplateOutlet=\"detailApplicant; context: {$implicit: account}\"></ng-container>\r\n                        </ng-container>\r\n                     \r\n  \r\n                      <ng-template #detailApplicant let-account>\r\n                        <form [formGroup]=\"cardCustomerForm\" class=\"mt-32\">\r\n                          <div formGroupName=\"applicantDetails\">\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                <div class=\"pb-1\">\r\n                                  <label>Is the applicant an existing customer?</label>\r\n                                  &nbsp;&nbsp;\r\n                                  <mat-slide-toggle (change)=\"toggleChanges($event)\" formControlName=\"existingCustomer\">\r\n                                  </mat-slide-toggle>\r\n                                  <div class=\"mb-16\"></div>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Prefix *</mat-label>\r\n                                    <mat-select name=\"prefix\" formControlName=\"prefix\">\r\n                                      <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                        {{prefix}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"applicant.get('prefix').hasError('required')\">\r\n                                      Prefix is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Middle Name</mat-label>\r\n                                    <input matInput name=\"mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                                      (keypress)=\"letterOnly($event)\" />\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Date of Birth *</mat-label>\r\n                                    <input matInput name=\"date\" readonly formControlName=\"dateOfBirth\"\r\n                                      placeholder=\"Date of birth\" [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\"\r\n                                      [max]=\"maxDate\" />\r\n  \r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                    <mat-error *ngIf=\"applicant.get('dateOfBirth').hasError('required')\">\r\n                                      Date of Birth is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                  <mat-datepicker #appDatepicker></mat-datepicker>\r\n                                </div>\r\n                                <div  class=\"p-1\" >\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Birth Country</mat-label>\r\n                                        <div fxFlex=\"20\">\r\n                                          <div matPrefix>\r\n                                            <div *ngIf=\"Currency1\" class=\"currency-flag currency-flag-{{Currency1}}\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <mat-select name=\"birthCountry\" formControlName=\"birthCountry\" required\r\n                                        (selectionChange)=\"onSelectionBirthCountry($event.value)\">\r\n                                             <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                                {{country}}\r\n                                              </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Resident Status *</mat-label>\r\n                                    <mat-select name=\"residenceType\" formControlName=\"residenceStatus\">\r\n                                      <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\">\r\n                                        {{residence}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"applicant.get('residenceStatus').hasError('required')\">\r\n                                      Resident Status is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n  \r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Country of Residence</mat-label>\r\n                                    <div fxFlex=\"20\">\r\n                                      <div matPrefix>\r\n                                        <div *ngIf=\"Currency\" class=\"currency-flag currency-flag-{{Currency}}\"></div>\r\n                                      </div>\r\n                                    </div>\r\n                                    <mat-select formControlName=\"countryOfResidence\" id=\"forcitizenship\"\r\n                                    (selectionChange)=\"onSelectionResidance($event.value)\" required>\r\n                                    <mat-option disabled>--Select--</mat-option>\r\n                                    <mat-option *ngFor=\"let country of arrayCountry\"\r\n                                      [value]=\"country\">\r\n                                      {{country}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                    <mat-error *ngIf=\"applicant.get('countryOfResidence').hasError('required')\">\r\n                                      Country of Residence is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>ID Type *</mat-label>\r\n                                    <mat-select name=\"idtype\" formControlName=\"idType\"\r\n                                      (selectionChange)=\"changeIdType(applicant.get('idType').value)\">\r\n                                      <mat-option *ngFor=\"let doc of arrayDocumentType\" [value]=\"doc\">\r\n                                        {{doc}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"applicant.get('idType').hasError('required')\">\r\n                                      ID Type is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>ID Type Valid Till</mat-label>\r\n                                    <input matInput name=\"date\" readonly formControlName=\"expiryDate\" [required]=\"applicant.get('idType').value != 'Aadhar card'\"\r\n                                      placeholder=\"ID Type Valid Till\" [matDatepicker]=\"appDatepicker1\" [min]=\"validDate\"/>\r\n  \r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                                    <mat-error *ngIf=\"applicant.get('expiryDate').hasError('required')\">\r\n                                      ID Type Valid Till is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                  <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                                </div>\r\n                              </div>\r\n                              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                <div class=\"pb-1\">\r\n                                  <label>Is the applicant a primary customer?</label>\r\n                                  &nbsp;&nbsp;\r\n                                  <mat-slide-toggle formControlName=\"primaryCustomer\">\r\n                                  </mat-slide-toggle>\r\n  \r\n                                  <div class=\"mb-16\"></div>\r\n                                </div>\r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>First Name *</mat-label>\r\n                                    <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                                      (keypress)=\"letterOnly($event)\" />\r\n                                    <mat-error *ngIf=\"applicant.get('firstName').hasError('required')\">\r\n                                      First Name is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Last Name *</mat-label>\r\n                                    <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                                      (keypress)=\"letterOnly($event)\" />\r\n                                    <mat-error *ngIf=\"applicant.get('lastName').hasError('required')\">\r\n                                      Last Name is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Gender *</mat-label>\r\n                                    <mat-select name=\"gender\" formControlName=\"gender\">\r\n                                      <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\">\r\n                                        {{gender}}\r\n                                      </mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"applicant.get('gender').hasError('required')\">\r\n                                      Gender is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Birth Place *</mat-label>\r\n                                    <input matInput name=\"bplace\" formControlName=\"placeOfBirth\"\r\n                                      placeholder=\"Birth Place\" />\r\n                                    <mat-error *ngIf=\"applicant.get('placeOfBirth').hasError('required')\">\r\n                                      Birth Place is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1 info\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Citizenship By</mat-label>\r\n                                     <div fxFlex=\"20\">\r\n                                        <div matPrefix>\r\n                                          <div *ngIf=\"currencyCode\"\r\n                                            class=\"currency-flag currency-flag-{{currencyCode}}\"></div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div fxFlex=\"100\">\r\n                                        <mat-select formControlName=\"nationality\" id=\"forcitizenship\"\r\n                                          (selectionChange)=\"onSelectionCitizionship($event.value)\" required>\r\n                                          <mat-option disabled>--Select--</mat-option>\r\n                                          <mat-option *ngFor=\"let citizenship of arrayCountry\"\r\n                                            [value]=\"citizenship\">\r\n                                            {{citizenship}}\r\n                                          </mat-option>\r\n                                        </mat-select>\r\n                                      </div>\r\n                                    <mat-error *ngIf=\"applicant.get('nationality').hasError('required')\">\r\n                                    Citizenship By is Required!\r\n                                  </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n\r\n                                <div  class=\"p-1\" >\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Marital Status</mat-label>\r\n                                        <mat-select name=\"maritalStatus\" formControlName=\"maritalStatus\" required>\r\n                                            <mat-option *ngFor=\"let status of maritalStatusList\" [value]=\"status\">{{ status }}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Occupation Type *</mat-label>\r\n                                    <input matInput name=\"occupation\" (keypress)=\"letterOnly($event)\" formControlName=\"occupationType\"\r\n                                      placeholder=\"Occupation Type\" />\r\n                                    <mat-error *ngIf=\"applicant.get('occupationType').hasError('required')\">\r\n                                      Occupation Type is Required!\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                                <div class=\"pb-1 info3\">\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Unique ID Number *</mat-label>\r\n                                    <input matInput name=\"uniqueidentity\" formControlName=\"idNumber\"\r\n                                      placeholder=\"Unique ID Number\" maxlength=\"12\"\r\n                                      pattern=\"^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$\" />\r\n                                    <mat-error\r\n                                      *ngIf=\"applicant.get('idNumber').touched && !applicant.get('idNumber').valid\">\r\n                                      <div *ngIf=\"applicant.get('idNumber').hasError('required')\">Unique ID Number is\r\n                                        Required!</div>\r\n                                      <div *ngIf=\"applicant.get('idNumber').hasError('pattern')\">This is a numeric field\r\n                                      </div>\r\n                                    </mat-error>\r\n                                  </mat-form-field>\r\n                                </div>\r\n  \r\n                              </div>\r\n                            </div>\r\n                            <!-- Address Section start-->\r\n                            <mat-accordion>\r\n                              <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                                <mat-expansion-panel-header>\r\n                                  <mat-panel-title>Communication Address </mat-panel-title>\r\n                                </mat-expansion-panel-header>\r\n  \r\n                                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Address Line 1 *</mat-label>\r\n                                        <textarea matInput formControlName=\"address1\" placeholder=\"Address 1\"></textarea>\r\n                                        <mat-error *ngIf=\"applicant.get('address1').hasError('required')\">\r\n                                          Address Line 1 is Required!\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\" applicant.get('address1').touched && applicant.get('address1').hasError('pattern')\">\r\n                                          Please Enter Valid Address \r\n                                         </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Residence Type *</mat-label>\r\n                                        <mat-select name=\"addressType\" formControlName=\"addressType\">\r\n                                          <mat-option *ngFor=\"let addressType of arrayAddressType\" [value]=\"addressType\">\r\n                                            {{addressType}}\r\n                                          </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"applicant.get('addressType').hasError('required')\">\r\n                                          Residence Type is Required!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n  \r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>State *</mat-label>\r\n                                        <mat-select name=\"state\" formControlName=\"state\"\r\n                                          (selectionChange)=\"getCityName($event.value)\">\r\n                                          <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n                                            {{state.stateName}}</mat-option>\r\n  \r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"applicant.get('state').hasError('required')\">\r\n                                          State is Required!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Zip Code *</mat-label>\r\n                                        <input minlength=\"5\" maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"a_zip\"\r\n                                          formControlName=\"zipCode\" onlyNumber placeholder=\"Zip Code\"\r\n                                          (keyup)=\"isAllSameDigit($event)\" />\r\n                                        <mat-error *ngIf=\"applicant.get('zipCode').hasError('required') &&\r\n                                          !applicant.controls['zipCode'].valid && applicant.controls['zipCode']?.touched\">\r\n                                          Please enter valid Zip Code!(5-10 digits)\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                      <h5 *ngIf=\"isAllSameDigitVal\" style=\"color: #E74C3C;\">Please enter valid Zip Code!(5-10 digits)\r\n                                      </h5>\r\n  \r\n                                    </div>\r\n  \r\n                                   \r\n  \r\n                                  </div>\r\n                                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Address Line 2 *</mat-label>\r\n                                        <textarea matInput formControlName=\"address2\" placeholder=\"Address 2\"></textarea>\r\n                                        <mat-error *ngIf=\"applicant.get('address2').hasError('required')\">\r\n                                          Address Line 2 is Required!\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\" applicant.get('address2').touched && applicant.get('address2').hasError('pattern')\">\r\n                                          Please Enter Valid Address \r\n                                         </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n  \r\n                                \r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Country *</mat-label>\r\n                                        <div fxFlex=\"20\">\r\n                                          <div matPrefix>\r\n                                            <div *ngIf=\"editCountryCode\"\r\n                                              class=\"currency-flag currency-flag-{{editCountryCode}}\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <mat-select name=\"country\" formControlName=\"country\"\r\n                                          (selectionChange)=\"getStateName($event.value)\"\r\n                                          (selectionChange)=\"getCountrySelection1($event.value)\">\r\n                                          <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                            {{country}}\r\n                                          </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"applicant.get('country').hasError('required')\">\r\n                                          Country is Required!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n  \r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>City *</mat-label>\r\n                                        <mat-select name=\"city\" formControlName=\"city\">\r\n                                          <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}\r\n                                          </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"applicant.get('city').hasError('required')\">\r\n                                          City is Required!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n  \r\n                                  \r\n  \r\n  \r\n                                  </div>\r\n                                </div>\r\n                              </mat-expansion-panel>\r\n                            </mat-accordion>\r\n                            <!-- Address Section end -->\r\n                            <!-- Contact Information -->\r\n                            <mat-accordion>\r\n                              <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                                <mat-expansion-panel-header>\r\n                                  <mat-panel-title>Contact Information </mat-panel-title>\r\n                                </mat-expansion-panel-header>\r\n  \r\n                                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Mobile Number *</mat-label>\r\n                                        <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput\r\n                                          formControlName=\"phoneNumber\" name=\"phone\" placeholder=\"Mobile Number\" />\r\n                                        <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('required')\">\r\n                                          Mobile Number is Required!\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('pattern')\">\r\n                                          Please, Enter 10 digit Mobile Number!\r\n                                        </mat-error>\r\n  \r\n                                      </mat-form-field>\r\n                                      <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('phoneNumber').value == '0000000000'\">\r\n                                        &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                                     </mat-error>\r\n                                    </div>\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>E-mail *</mat-label>\r\n                                        <input matInput name=\"email\" formControlName=\"primaryEmailAdress\"\r\n                                          placeholder=\"e-mail\" />\r\n                                        <mat-error *ngIf=\"applicant.get('primaryEmailAdress').hasError('required')\">\r\n                                          E-mail is Required!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                    <div class=\"pb-1\">\r\n                                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                        <mat-label>Landline Number </mat-label>\r\n                                        <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"mobile\"\r\n                                          formControlName=\"landlineNumber\" placeholder=\"Landline Number\" />\r\n                                        <!-- <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('required')\">\r\n                                          Landline Number is Required!\r\n                                        </mat-error> -->\r\n                                        <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('pattern')\">\r\n                                          Please, Enter 10 digit Landline Number!\r\n                                        </mat-error>\r\n                                      </mat-form-field>\r\n                                      <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('landlineNumber').value == '0000000000'\">\r\n                                        &nbsp; &nbsp; Please Enter Correct Landline Number\r\n                                     </mat-error>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n  \r\n                              </mat-expansion-panel>\r\n                              <div class=\"pb-1\">\r\n                                <button mat-button color=\"primary\" [disabled]=\"applicant.invalid\" (click)=\"onSubmit()\">\r\n                                  <mat-icon></mat-icon> UPDATE APPLICANT\r\n                                </button>\r\n  \r\n                              </div>\r\n                            </mat-accordion>\r\n                            <!-- Contact Information -->\r\n                          </div>\r\n                        </form>\r\n                      </ng-template>\r\n                    </mat-card-container>\r\n                  </mat-card>\r\n                </mat-expansion-panel>\r\n              </mat-accordion>\r\n  \r\n            </div>\r\n            <!-- <h1>591 -selapp {{selectedApplicant}} -get {{cardCustomerForm.get('numOfApplicants').value}} -listacc {{listOfAccounts.length}}</h1> -->\r\n            <!-- *ngIf=\"showNewForm\" -->\r\n            <div class=\"mt-16\"\r\n              *ngIf=\"selectedApplicant == null && cardCustomerForm.get('numOfApplicants').value !== listOfAccounts.length\">\r\n              <mat-accordion>\r\n                <mat-expansion-panel class=\"mb-8 borderStyle\"\r\n                  [expanded]=\"cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? false : true\">\r\n                  <mat-expansion-panel-header class=\"marginData\">\r\n                    <mat-panel-title class=\"textDesign\">Create Applicant 2</mat-panel-title>\r\n                  </mat-expansion-panel-header>\r\n                  <mat-divider class=\"design\"></mat-divider> \r\n                  <div formGroupName=\"applicantDetails\">\r\n                    <div class=\"pb-1\">\r\n                      <label>Is the applicant an existing customer? </label>\r\n                      &nbsp;&nbsp;\r\n                      <!-- {{ listOfAccounts.length }} -->\r\n                      <mat-slide-toggle (change)=\"toggleChanges($event)\" formControlName=\"existingCustomer\"\r\n                          [disabled]=\"listOfAccounts.length == 0 ? true : false\"></mat-slide-toggle>\r\n                      <div class=\"mb-16\"></div>\r\n                    </div>\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                       \r\n                        <div class=\"pb-1\" >\r\n                          <div fxLayout=\"row\" fxLayoutGap=\"2px\" fxLayoutAlign=\"space-between\">\r\n                            <div fxFlex=\"100\" fxFlexAlign=\"center\"class=\"boxsize\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>CIF Number</mat-label>\r\n                                <input matInput (keypress)=\"_keyPress($event)\"\r\n                                  (change)=\"fetchByCif(applicant.get('cifNumber').value,applicant.get('existingCustomer').value)\"\r\n                                  required formControlName=\"cifNumber\" name=\"cif\"\r\n                                  placeholder=\"CIF Number\"\r\n                                  (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\"\r\n                                  [readonly]=\"applicant.get('existingCustomer').value == true ? false : true\" />\r\n                                <mat-icon *ngIf=\"isCifValid\" matSuffix color=\"primary\">check_circle</mat-icon>\r\n                                <!-- <mat-icon *ngIf=\"applicant.get('existingCustomer').value && !isCifValid\" matSuffix color=\"warn\">report_problem</mat-icon> -->\r\n                                <mat-error *ngIf=\"applicant.get('cifNumber').hasError('required')  && !isCifValid\">\r\n                                  CIF Number is Required!\r\n                                </mat-error>\r\n                                <mat-hint class=\"err-msg\" *ngIf=\"isDuplicateCIF\">Duplicate CIF Number</mat-hint>\r\n                                <mat-hint class=\"hintColor\" *ngIf=\"!isCifValid && onbackSpace\">\r\n                                  Enter valid CIF Number!</mat-hint>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div>\r\n                              <mat-autocomplete class=\"card-cust-auto-cif\" #auto=\"matAutocomplete\">\r\n                                <mat-option *ngFor=\"let option of listOfCustByCif\" [value]=\"option.customerId\">\r\n                                  <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                                    <div fxFlex=\" 100\">\r\n                                      <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\" class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                                        <h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n                                          {{option?.firstName | slice:0:1 | uppercase}}{{option?.lastName | slice:0:1 | uppercase}}\r\n                                        </h3>\r\n                                      </div>\r\n                                      <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar fxFlex=\"10\">\r\n                                        <img matListAvatar\r\n                                          style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 90%;margin-bottom: 50px;\" align=\"center\"\r\n                                          [src]=\"option?.profileImage\" alt=\"...\">\r\n                                      </div>\r\n                                      <div fxFlex=\"80\">\r\n                                        <h5 style=\"margin-bottom: 0px;\">\r\n                                          {{option?.firstName | uppercase}}\r\n                                          {{option?.middleName | uppercase}}\r\n                                          {{option?.lastName | uppercase}}\r\n                                        </h5>\r\n                                        <h6 style=\"margin-top: 0px;\">#{{option?.cifNumber}}</h6>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </mat-option>\r\n                              </mat-autocomplete>\r\n                            </div>\r\n                            <!-- <div fxFlex=\"15\" fxFlexAlign=\"center\">\r\n                                <a class=\"mb-16\" mat-flat-button color=\"primary\" (click)=\"fetchByCif(applicant.get('cifNumber').value)\">fetch</a>\r\n                              </div> -->\r\n                          </div>\r\n                        </div>\r\n  \r\n     \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>First Name *</mat-label>\r\n                            <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                              (keypress)=\"letterOnly($event)\" />\r\n                            <mat-error *ngIf=\"applicant.get('firstName').hasError('required')\">\r\n                              First Name is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Last Name *</mat-label>\r\n                            <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                              (keypress)=\"letterOnly($event)\" />\r\n                            <mat-error *ngIf=\"applicant.get('lastName').hasError('required')\">\r\n                              Last Name is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Date of Birth *</mat-label>\r\n                            <input matInput name=\"date\" readonly formControlName=\"dateOfBirth\" placeholder=\"Date of birth\"\r\n                              [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\" [max]=\"maxDate\" />\r\n  \r\n                            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                            <mat-error *ngIf=\"applicant.get('dateOfBirth').hasError('required')\">\r\n                              Date of Birth is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                          <mat-datepicker #appDatepicker></mat-datepicker>\r\n                        </div>\r\n                        <div class=\"pb-1\" >\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Birth Country</mat-label>\r\n                                <div fxFlex=\"20\" [style.display]=\"birthCountryFlag == null ? 'none': ''\">\r\n                                  <div matPrefix>\r\n                                    <div *ngIf=\"isBirthCountry\" class=\"currency-flag currency-flag-{{birthCountryFlag}}\"></div>\r\n                                  </div>\r\n                                </div>\r\n                                <mat-select name=\"birthCountry\"  (selectionChange)=\"onBirthCountry($event.value)\" formControlName=\"birthCountry\" required>\r\n                                     <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                        {{country}}\r\n                                      </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Resident Status *</mat-label>\r\n                            <mat-select name=\"residenceType\" formControlName=\"residenceStatus\">\r\n                              <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\">\r\n                                {{residence}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"applicant.get('residenceStatus').hasError('required')\">\r\n                              Resident Status is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n  \r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Country of Residence</mat-label>\r\n                            <div fxFlex=\"20\">\r\n                              <div matPrefix>\r\n                                <div *ngIf=\"isResidency\" class=\"currency-flag currency-flag-{{ResideceCurrency}}\"></div>\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            <mat-select formControlName=\"countryOfResidence\" id=\"forcitizenship\"\r\n                                (selectionChange)=\"onOtherSelectionResidance($event.value)\" required>\r\n                               <mat-option disabled>--Select--</mat-option>\r\n                              <mat-option *ngFor=\"let country of arrayCountry\"\r\n                              [value]=\"country\">\r\n                              {{country}}\r\n                              </mat-option>\r\n                           </mat-select>\r\n                            <mat-error *ngIf=\"applicant.get('countryOfResidence').hasError('required')\">\r\n                              Country of Residence is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>ID Type *</mat-label>\r\n                            <mat-select name=\"idtype\" formControlName=\"idType\"\r\n                              (selectionChange)=\"changeIdType(applicant.get('idType').value)\">\r\n                              <mat-option *ngFor=\"let doc of arrayDocumentType\" [value]=\"doc\">\r\n                                {{doc}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"applicant.get('idType').hasError('required')\">\r\n                              ID Type is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                        \r\n                        <div class=\"pb-1\" *ngIf=\"showExpiryDate && applicant.get('idType').value !== 'Aadhar card'\" >\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>ID Type Valid Till </mat-label>\r\n                            <input matInput name=\"date\" readonly formControlName=\"expiryDate\"[required]=\"applicant.get('idType').value !== 'Aadhar card'\"\r\n                              placeholder=\"ID Type Valid Till\" [matDatepicker]=\"appDatepicker1\" [min]=\"validDate\"/>\r\n  \r\n                            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                            <mat-error *ngIf=\"applicant.get('expiryDate').hasError('required')\">\r\n                              ID Type Valid Till is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                          <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                        </div>\r\n                      </div>\r\n                      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                        <div class=\"pb-1\" *ngIf=\"listOfAccounts.length == 0; else show\">\r\n                          <label>Is the applicant a primary customer?</label>\r\n                          &nbsp;&nbsp;\r\n                          <mat-slide-toggle formControlName=\"primaryCustomer\" [(ngModel)]=\"isChecked\"\r\n                            [disabled]=\"listOfAccounts.length == 0 ? true : false\">\r\n                          </mat-slide-toggle>\r\n  \r\n                          <div class=\"mb-16\"></div>\r\n                        </div>\r\n                        <div  #show>\r\n                          <label>&nbsp;</label>\r\n                        </div>\r\n                        <div>\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Customer Prefix *</mat-label>\r\n                            <mat-select name=\"prefix\" formControlName=\"prefix\">\r\n                              <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                {{prefix}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"applicant.get('prefix').hasError('required')\">\r\n                              Prefix is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n         \r\n                        <div class=\"pb-1 info1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Middle Name</mat-label>\r\n                            <input matInput name=\"mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                              (keypress)=\"letterOnly($event)\" />\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Gender *</mat-label>\r\n                            <mat-select name=\"gender\" formControlName=\"gender\">\r\n                              <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\">\r\n                                {{gender}}\r\n                              </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"applicant.get('gender').hasError('required')\">\r\n                              Gender is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Birth Place *</mat-label>\r\n                            <input matInput name=\"bplace\" formControlName=\"placeOfBirth\" placeholder=\"Birth Place\" />\r\n                            <mat-error *ngIf=\"applicant.get('placeOfBirth').hasError('required')\">\r\n                              Birth Place is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Citizenship By</mat-label>\r\n                             <div fxFlex=\"20\">\r\n                                <div matPrefix [style.display]=\"currency == null ? 'none' : ''\">\r\n                                  <div\r\n                                    class=\"currency-flag currency-flag-{{currency}}\"></div>\r\n                                </div>\r\n                              </div>\r\n                              <div fxFlex=\"100\">\r\n                                <mat-select formControlName=\"nationality\" id=\"forcitizenship\"\r\n                                (selectionChange)=\"onSelectionCitizionship1($event.value)\"\r\n                                  required>\r\n                                  <mat-option disabled>--Select--</mat-option>\r\n                                  <mat-option *ngFor=\"let citizenship of arrayCountry\"\r\n                                    [value]=\"citizenship\">\r\n                                    {{citizenship}}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                              </div>\r\n                            <mat-error *ngIf=\"applicant.get('nationality').hasError('required')\">\r\n                            Citizenship By is Required!\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                        \r\n\r\n                        <div class=\"pb-1\" >\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Marital Status</mat-label>\r\n                                <mat-select name=\"maritalStatus\" formControlName=\"maritalStatus\" required>\r\n                                    <mat-option *ngFor=\"let status of maritalStatusList\" [value]=\"status\">{{ status }}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n\r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Occupation Type *</mat-label>\r\n                            <input matInput name=\"occupation\"  (keypress)=\"letterOnly($event)\" formControlName=\"occupationType\"\r\n                              placeholder=\"Occupation Type\" />\r\n                            <mat-error *ngIf=\"applicant.get('occupationType').hasError('required')\">\r\n                              Occupation Type is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n                        <div class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Unique ID *</mat-label>\r\n                            <input matInput name=\"uniqueidentity\" formControlName=\"idNumber\" placeholder=\"Unique ID\"\r\n                              maxlength=\"12\" (keypress)=\"keyPressAlphanumeric($event)\" />\r\n                            <mat-error *ngIf=\"applicant.get('idNumber').touched && !applicant.get('idNumber').valid\">\r\n                              <div *ngIf=\"applicant.get('idNumber').hasError('required')\">Unique ID is Required!</div>\r\n                              <div *ngIf=\"applicant.get('idNumber').hasError('pattern')\">This is a alphanumeric field\r\n                              </div>\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n  \r\n  \r\n  \r\n                      </div>\r\n                    </div>\r\n                    <!-- Address Section start-->\r\n                    <mat-accordion>\r\n                      <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                        <mat-expansion-panel-header>\r\n                          <mat-panel-title>Communication Address </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n  \r\n                        <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Address Line 1 *</mat-label>\r\n                                <textarea matInput formControlName=\"address1\" placeholder=\"Address 1\"></textarea>\r\n                                <mat-error *ngIf=\"applicant.get('address1').hasError('required')\">\r\n                                  Address Line 1 is Required!\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\" applicant.get('address1').touched && applicant.get('address1').hasError('pattern')\">\r\n                                  Please Enter Valid Address\r\n                                 </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                           \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Residence Type *</mat-label>\r\n                                <mat-select name=\"addressType\" formControlName=\"addressType\">\r\n                                  <mat-option *ngFor=\"let addressType of arrayAddressType\" [value]=\"addressType\">\r\n                                    {{addressType}}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"applicant.get('addressType').hasError('required')\">\r\n                                  Residence Type is Required!\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                          \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>State *</mat-label>\r\n                                <mat-select name=\"state\" formControlName=\"state\"\r\n                                  (selectionChange)=\"getCityName($event.value)\">\r\n                                  <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">{{state.stateName}}\r\n                                  </mat-option>\r\n  \r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"applicant.get('state').hasError('required')\">\r\n                                  State is Required!\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Zip Code *</mat-label>\r\n                                <input minlength=\"5\" maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"a_zip\"\r\n                                  formControlName=\"zipCode\" onlyNumber placeholder=\"Zip Code\"\r\n                                  (keyup)=\"isAllSameDigit($event)\" />\r\n                              </mat-form-field>\r\n                              <mat-error *ngIf=\"applicant.get('zipCode').hasError('required') &&\r\n                                !applicant.controls['zipCode'].valid && \r\n                                applicant.controls['zipCode']?.touched\">\r\n                                Zip code is required!\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\"applicant.get('zipCode').errors?.pattern\">Please enter valid Zip Code!(5-10 digits)</mat-error>\r\n                            </div>\r\n \r\n  \r\n                          </div>\r\n                          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Address Line 2 *</mat-label>\r\n                                <textarea matInput formControlName=\"address2\" placeholder=\"Address 2\"></textarea>\r\n                                <mat-error *ngIf=\"applicant.get('address2').hasError('required')\">\r\n                                  Address Line 2 is Required!\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\" applicant.get('address2').touched && applicant.get('address2').hasError('pattern')\">\r\n                                  Please Enter Valid Address \r\n                                 </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Country *</mat-label>\r\n                                <div fxFlex=\"20\">\r\n                                  <div matPrefix>\r\n                                    <div *ngIf=\"isCountry\"\r\n                                      class=\"currency-flag currency-flag-{{countryCode}}\"></div>\r\n                                  </div>\r\n                                </div>\r\n                                <mat-select name=\"country\" formControlName=\"country\"\r\n                                  (selectionChange)=\"getStateName($event.value)\"\r\n                                  (selectionChange)=\"getCityName($event.value)\"\r\n                                  (selectionChange)=\"getCountrySelection($event.value)\">\r\n                                  <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                    {{country}}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"applicant.get('country').hasError('required')\">\r\n                                  Country is Required!\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>City * </mat-label>\r\n                                <mat-select name=\"city\" formControlName=\"city\">\r\n                                  <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"applicant.get('city').hasError('required')\">\r\n                                  City is Required!\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>\r\n        \r\n  \r\n                          </div>\r\n                        </div>\r\n                      </mat-expansion-panel>\r\n                    </mat-accordion>\r\n                    <!-- Address Section end -->\r\n                    <!-- Contact Information -->\r\n                    <mat-accordion>\r\n                      <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                        <mat-expansion-panel-header>\r\n                          <mat-panel-title>Contact Information </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n  \r\n                        <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Mobile Number *</mat-label>\r\n                                <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput\r\n                                  formControlName=\"phoneNumber\" name=\"phone\" placeholder=\"Mobile Number\" />\r\n                                <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('required')\">\r\n                                  Mobile Number is Required!\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('pattern')\">\r\n                                  Please, Enter 10 digit Mobile Number!\r\n                                </mat-error>\r\n  \r\n                              </mat-form-field>\r\n                              <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('phoneNumber').value == '0000000000'\">\r\n                                &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                             </mat-error>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>E-mail *</mat-label>\r\n                                <input matInput name=\"email\" formControlName=\"primaryEmailAdress\" placeholder=\"e-mail\" />\r\n                                <mat-error *ngIf=\"applicant.get('primaryEmailAdress').hasError('required')\">\r\n                                  E-mail is Required!\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"applicant.get('primaryEmailAdress').errors?.email || applicant.get('primaryEmailAdress').errors?.pattern\">\r\n                                  \"Please Enter Valid Email\"\r\n                                </mat-error>\r\n                                <!-- <mat-error *ngIf=\"form.controls['email'].touched && form.controls['email'].errors?.required || form.controls['email'].errors?.email\">\r\n                                  \"Please Enter Valid Email\"\r\n                                </mat-error> -->\r\n                              </mat-form-field>\r\n                            </div>\r\n                          </div>\r\n                          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Landline Number </mat-label>\r\n                                <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"mobile\"\r\n                                  formControlName=\"landlineNumber\" placeholder=\"Landline Number\" />\r\n                                <!-- <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('required')\">\r\n                                  Landline Number is Required!\r\n                                </mat-error> -->\r\n                                <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('pattern')\">\r\n                                  Please, Enter 10 digit Landline Number!\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                              <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('landlineNumber').value == '0000000000'\">\r\n                                &nbsp; &nbsp; Please Enter Correct Landline Number\r\n                             </mat-error>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n  \r\n                      </mat-expansion-panel>\r\n                      <div class=\"pb-1\">\r\n  \r\n                        <!-- <button\r\n                        mat-button\r\n                        color=\"warn\"\r\n                        (click)=\"removeApplicant()\"\r\n                      >\r\n                        <mat-icon></mat-icon> RESET APPLICANT\r\n                      </button> -->\r\n                      </div>\r\n                      <div class=\"pb-1\">\r\n                        <a mat-button color=\"primary\" *ngIf=\"applicant.invalid ||isDuplicateCIF || disableSaveBtn; else openSave\" [disabled]=\"applicant.invalid||isDuplicateCIF\" >\r\n                          <mat-icon></mat-icon> SAVE APPLICANT\r\n                        </a>\r\n                        <ng-template #openSave>\r\n                        <a mat-button color=\"primary\" (click)=\"onSubmit()\">\r\n                          <mat-icon></mat-icon> SAVE APPLICANT\r\n                        </a>\r\n                        </ng-template>\r\n  \r\n                        <!-- <button\r\n                        mat-button\r\n                        color=\"warn\"\r\n                        (click)=\"removeApplicant()\"\r\n                      >\r\n                        <mat-icon></mat-icon> RESET APPLICANT\r\n                      </button> -->\r\n                      </div>\r\n  \r\n                    </mat-accordion>\r\n                    <!-- Contact Information -->\r\n                  </div>\r\n                </mat-expansion-panel>\r\n              </mat-accordion>\r\n  \r\n            </div>\r\n  \r\n            <!-- <pre><code>{{applicant.getRawValue() | json}}</code></pre> -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n              <button mat-button rounded  (click)=\"goBack()\">\r\n                Back\r\n              </button>\r\n              <ng-container *ngIf=\"cardCustomerForm.get('ownership').value == 'Joint'; else hideBtn\">\r\n                <button mat-raised-button color=\"primary\" class=\"Nextbtn\" (click)=\"goToNext()\"\r\n                [disabled]=\"cardCustomerForm.get('numOfApplicants').value === listOfAccounts.length ? 'false' : 'true'\">\r\n                  Next\r\n                </button>\r\n              </ng-container>\r\n              <ng-template #hideBtn>\r\n                <button class=\"Nextbtn\" mat-raised-button color=\"primary\" (click)=\"goToNext()\"\r\n                [disabled]=\"cardCustomerForm.get('numOfApplicants').value !== listOfAccounts.length || (cardCustomerForm.invalid && (selectedApplicant !== null)) \">\r\n                  Next\r\n                </button>\r\n              </ng-template>\r\n            </div>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n@Component({\r\n\r\n\r\n  selector: 'app-underwriting-stage',\r\n  templateUrl: './underwriting-stage.component.html',\r\n  styleUrls: ['./underwriting-stage.component.scss']\r\n})\r\nexport class UnderwritingStageComponent implements OnInit {\r\n  isCardCreditRatingDetails: boolean = false;\r\n  isCardQualitativeScoreboard:boolean=false;\r\n  cardId :any;\r\n  constructor(private router:Router, private ls: LocalStoreService,private dialogService : DialogService,\r\n  private accountService: AccountService,private cdr: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isCardQualitativeScoreboard=this.ls.getItem('CARD_QUALITATIVE_SCOREBOARD_DONE');\r\n    this.isCardCreditRatingDetails = this.ls.getItem('CARD_CREDIT_RATING_DONE');\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n        this.cardId = this.ls.getItem('cardId');\r\n      //  this.loanAccountId = this.ls.getItem('loanAccountId');\r\n        this.isCardQualitativeScoreboard=this.ls.getItem('CARD_QUALITATIVE_SCOREBOARD_DONE');\r\n        this.isCardCreditRatingDetails = this.ls.getItem('CARD_CREDIT_RATING_DONE');\r\n        this.cdr.markForCheck();\r\n      });\r\n  }\r\n\r\n  viewSummary(){\r\n    this.router.navigate([`cardaccount/underwritingStage/summary`]);\r\n  }\r\n\r\n  goToCreditRatingSummary(){\r\n    this.dialogService.cardAccountcreditRatingSummaryDialog();\r\n  }\r\n  openCardQualitativeDialog(){\r\n    this.dialogService.CardQualitativeSummaryDialog();\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-8\" *ngIf=\"isCardCreditRatingDetails && isCardQualitativeScoreboard;\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Underwriting Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\" (click)=\"viewSummary()\">\r\n                    View Summary\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card [ngClass]=\"{'border-size': isCardCreditRatingDetails || !isCardCreditRatingDetails  }\">\r\n        <mat-card-header>\r\n          <mat-card-title>1. Credit Rating Details</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\">\r\n            <div fxFlex=\"50%\"style=\"padding-left:17px\" class=\"txtclr\">\r\n              <p>\r\n                Credit rating details are captured here.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/Mask_Group_9.svg'\" class=\"card-img\" /> \r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\" *ngIf=\"isCardCreditRatingDetails\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\">\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n            <ng-container *ngIf=\"isCardCreditRatingDetails; else showCredit\">\r\n                <button mat-button (click)=\"goToCreditRatingSummary()\" color=\"primary\">\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n            </ng-container>\r\n            \r\n            <ng-template #showCredit>\r\n                <button mat-button [routerLink]=\"['/cardaccount/underwritingStage/credit-rating']\" color=\"primary\">\r\n                   Add Details <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n            </ng-template>\r\n          </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card [ngClass]=\"{'border-size': isCardCreditRatingDetails || !isCardCreditRatingDetails && isCardQualitativeScoreboard  }\">\r\n        <mat-card-header>\r\n          <mat-card-title>2. Qualitative Scorecard</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n            <div fxFlex=\"50%\" style=\"padding-left:17px\"class=\"txtclr\">\r\n              <p>\r\n                Charge Details are displayed.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/undraw_Scrum_board_re_wk7v.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\"  *ngIf=\"isCardQualitativeScoreboard\">\r\n            <mat-progress-bar\r\n             [color]=\"'primary'\" \r\n              mode=\"determinate\"\r\n             [value]=\"100\" class=\"rounded\" \r\n             style=\"height: 6px\">\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"isCardQualitativeScoreboard; else showQualitative\">\r\n              <button mat-button (click)=\"openCardQualitativeDialog()\" color=\"primary\">\r\n                 View Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-container>\r\n\r\n          <ng-template #showQualitative>\r\n              <!-- <button mat-button [routerLink]=\"['/cardaccount/underwritingStage/qualitative']\" \r\n              color=\"primary\" [disabled]=\"!isCardQualitativeScoreboard\"> -->\r\n              <button mat-button [routerLink]=\"['/cardaccount/underwritingStage/qualitative']\" \r\n              color=\"primary\" [disabled]=\"!isCardCreditRatingDetails\" >\r\n                Add Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-template>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>\r\n  </div>\r\n  \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { CardInitiationSummaryComponent } from './card-initiation/card-initiation-summary/card-initiation-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-application-entry-stage',\r\n  templateUrl: './application-entry-stage.component.html',\r\n  styleUrls: ['./application-entry-stage.component.scss']\r\n})\r\nexport class ApplicationEntryStageComponent implements OnInit {\r\n  isCardPrefrenceDone:boolean=false\r\n  CardInitiationScreenDone:boolean=false;\r\n  isCardInitiationDone:boolean=false;\r\n  isCardCustomerInformationScreen:boolean=false;\r\n  isCardFinancialDetailsScreen:boolean=false;\r\n  isCardAccountService:boolean=false;\r\n  isCardApplicationStageDone:boolean=false;\r\n\r\n\r\n  constructor(private router:Router,private dialogService : DialogService,private ls: LocalStoreService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isCardApplicationStageDone=this.ls.getItem('CARD_APPLICATION_ENTRY_DONE');\r\n    this.isCardPrefrenceDone=this.ls.getItem('card_prefrence_done');\r\n    this.isCardInitiationDone=this.ls.getItem('CARD_INITIATION_DONE');\r\n    this.isCardCustomerInformationScreen=this.ls.getItem('Card_Customer_Done');\r\n    this.isCardFinancialDetailsScreen=this.ls.getItem('CARD_FINANCIAL_DONE');\r\n    this.isCardAccountService=this.ls.getItem('CARD_ACC_SERVICE_DONE')\r\n  }\r\n  openCardInitiationSummary(){\r\n    this.dialogService.CardInitiationSummary();\r\n  }\r\n  goToFinancialSummarry(){\r\n    this.dialogService.CardFinancialDetailsSummary();\r\n  }\r\n  goToCustomerInfo(){\r\n    this.dialogService.CardCustomerInfoSummary();\r\n  }\r\n\r\n  goToCradAccountService(){\r\n    this.dialogService.cardAccountServiceViewSummary();\r\n  }\r\n  cardPrefrenceSummary(){\r\n    this.dialogService.cardPrefrenceSummary();\r\n  }\r\n\r\n  openCardEntryStageViewSummary(){\r\n    this.dialogService.cardAppEntryStageViewSummary();\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size1\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" *ngIf=\"isCardApplicationStageDone\" class=\"mt-8\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Entry Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button class=\"btn-color\"\r\n                 (click)=\"openCardEntryStageViewSummary()\">\r\n                    View Summary\r\n                    <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n        <!-- Card 1 start-->\r\n        <mat-card [ngClass]=\"{'border-size':isCardInitiationDone || !isCardInitiationDone }\">\r\n            <mat-card-header>\r\n                <mat-card-title style=\"font-size: 16px\">1. Card Initiation</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" style=\"font-size: 11px\">\r\n                    <div fxFlex=\"50%\" class=\"notActive\" >\r\n                        <p class=\"text-align\">\r\n                            All the primary information about the customer is captured.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/undraw_personal_information_re_vw8a.svg.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            \r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardInitiationDone\">\r\n                    <button\r\n                  mat-button\r\n                  (click)=\"openCardInitiationSummary()\"\r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n      \r\n                <ng-container *ngIf=\"!isCardInitiationDone\" >\r\n                    <button \r\n                  mat-button\r\n                  [routerLink]=\"['/cardaccount/applicationEntryStage/list/cardInitiation']\" \r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container >\r\n            \r\n                \r\n              </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n    \r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n        <!-- Card 1 start-->\r\n        <mat-card [ngClass]=\"{'border-size':isCardCustomerInformationScreen || !isCardCustomerInformationScreen && isCardInitiationDone }\">\r\n            <mat-card-header>\r\n                <mat-card-title style=\"font-size: 16px\">2. Customer Information Details</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" style=\"font-size: 11px\">\r\n                    <div fxFlex=\"50%\" class=\"notActive\" >\r\n                        <p class=\"text-align\">\r\n                            All the primary information about the customer is captured.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/undraw_personal_information_re_vw8a.svg.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n          \r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardCustomerInformationScreen; else showCustomer\">\r\n                    <button\r\n                  mat-button\r\n                 (click)=\"goToCustomerInfo()\"\r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n      \r\n                <ng-template #showCustomer>\r\n                    <button \r\n                  mat-button\r\n                  [routerLink]=\"['/cardaccount/applicationEntryStage/list/customerInformation']\"\r\n                  color=\"primary\"\r\n                  [disabled]=\"!isCardInitiationDone\"\r\n                  class=\"add-align\"\r\n                >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template>\r\n            \r\n                \r\n              </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- card 2 start-->\r\n        <mat-card [ngClass]=\"{'border-size':isCardFinancialDetailsScreen || !isCardFinancialDetailsScreen && isCardCustomerInformationScreen }\">\r\n            <mat-card-header>\r\n                <mat-card-title style=\"font-size: 16px\">3. Financial Details</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" style=\"font-size: 11px\">\r\n                    <div fxFlex=\"50%\" class=\"notActive\" >\r\n                        <p class=\"text-align\">\r\n                            Financial Details such as Monthly Income, Monthly Expenses, Liabilities are captured.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"\r\n                  'assets/images/svg/undraw_Finance_re_gnv2.svg'\r\n                \" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardFinancialDetailsScreen; else showFinancial\">\r\n                    <button\r\n                  mat-button\r\n                  (click)=\"goToFinancialSummarry()\"\r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n      \r\n                <ng-template #showFinancial>\r\n                    <button \r\n                  mat-button\r\n                  [routerLink]=\"['/cardaccount/applicationEntryStage/list/financialDetails']\"\r\n                  color=\"primary\"\r\n                  [disabled]=\"!isCardCustomerInformationScreen\"\r\n                  class=\"add-align\"\r\n                >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template>\r\n            \r\n                \r\n              </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 2 end-->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- card 2 start-->\r\n        <mat-card [ngClass]=\"{'border-size':isCardPrefrenceDone || !isCardPrefrenceDone && isCardFinancialDetailsScreen }\">\r\n            <mat-card-header>\r\n                <mat-card-title style=\"font-size: 16px\">4. Card Preferences</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" style=\"font-size: 11px\">\r\n                    <div fxFlex=\"50%\" class=\"notActive\" >\r\n                        <p class=\"text-align\">\r\n                            Card related information are added.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"\r\n                  'assets/images/svg/Mask_Group_1.svg'\r\n                \" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardPrefrenceDone; else showCardPrefrence\">\r\n                    <button\r\n                  mat-button\r\n                  (click)=\"cardPrefrenceSummary()\"\r\n              \r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n      \r\n                <ng-template #showCardPrefrence>\r\n                    <button \r\n                  mat-button\r\n                  [routerLink]=\"[ '/cardaccount/applicationEntryStage/list/cardPrefrence' ]\"\r\n                  color=\"primary\"\r\n                  [disabled]=\"!isCardFinancialDetailsScreen\"\r\n                  class=\"add-align\"\r\n                >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template>\r\n            \r\n                \r\n              </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 2 end-->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- card 2 start-->\r\n        <mat-card [ngClass]=\"{'border-size':isCardAccountService || !isCardAccountService && isCardPrefrenceDone }\">\r\n            <mat-card-header>\r\n                <mat-card-title style=\"font-size: 16px\">5. Account Services</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" style=\"font-size: 11px\">\r\n\r\n                    <div fxFlex=\"50%\" class=\"notActive\" >\r\n\r\n                        <p class=\"text-align\">\r\n                            Account services preferences like account statement frequency and mode are captured.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"\r\n                  'assets/images/svg/undraw_opinion_dxp8.svg'\r\n                \" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n\r\n                <ng-container *ngIf=\"isCardAccountService; else showService\">\r\n                    <button\r\n                  mat-button\r\n                  (click)=\"goToCradAccountService()\"\r\n                  color=\"primary\"\r\n                  class=\"add-align\"\r\n                >\r\n                  View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n      \r\n                <ng-template #showService>\r\n                    <button \r\n                  mat-button\r\n                  [routerLink]=\"['/cardaccount/applicationEntryStage/list/accountServices']\"\r\n                  color=\"primary\"\r\n                  [disabled]=\"!isCardPrefrenceDone\"\r\n                  class=\"add-align\"\r\n                >\r\n                  Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template>\r\n            \r\n                \r\n              </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 2 end-->\r\n    </div>\r\n    <!-- <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <mat-card>\r\n            <mat-card-header>\r\n                <mat-card-title>5. Add on Card Holder Details</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> \r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                    <div fxFlex=\"50%\">\r\n                        <p>Details such as name, relation, address of the add on card holder is captured.</p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/Mask Group 5.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n                <!--end::Progress\r\n            </mat-card-content>\r\n            <!--begin:: Card body\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n\r\n                <button mat-button color=\"primary\" [routerLink]=\"[ '/loan/account/customer-information' ]\">\r\n                    View Details <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div> -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { QualitativeScoreboardSummary } from 'app/shared/models/qualitativeScoreboardSummary';\r\nimport { AssessmentReportSummary } from 'app/shared/models/AssessmentReportSummary';\r\nimport { UrlService } from 'app/views/home/url.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-underwriting-stage-summary',\r\n  templateUrl: './underwriting-stage-summary.component.html',\r\n  styleUrls: ['./underwriting-stage-summary.component.scss']\r\n})\r\nexport class UnderwritingStageSummaryComponent implements OnInit {\r\n\r\n  previousUrl: string = '';\r\n  accountId: any;\r\n  qualitativeScoreboardSummary: QualitativeScoreboardSummary;\r\n  assessmentReportSummary: AssessmentReportSummary;\r\n  imagePath = \"assets/images/assesment.png\";\r\n  cardId: any;\r\n  customerName: any;\r\n  creditRatingValues: any;\r\n  constructor(\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService,\r\n    private urlService: UrlService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem('cardId');\r\n    \r\n    this.getAllData(this.cardId);\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n\r\n  }\r\n\r\n  getAllData(id) {\r\n    this.apiService.getCardQualitativeScorecardDetails(this.cardId).subscribe((response) => {\r\n      this.qualitativeScoreboardSummary = response;\r\n      console.log(this.qualitativeScoreboardSummary);\r\n       console.log(this.qualitativeScoreboardSummary.scoreCardMapping);\r\n    });\r\n   \r\n    this.apiService.getCardCreditRatingDetails(id).subscribe((creditDetails: any) => {\r\n      console.log(creditDetails.customerName);\r\n      this.customerName=creditDetails.customerName;\r\n      this.creditRatingValues=creditDetails;\r\n      });\r\n    }\r\n  \r\n    goBack() {\r\n      this.router.navigate([`cardaccount/underwritingStage/list`]);\r\n    }\r\n  \r\n    done() {\r\n      // this.router.navigate([`/cardaccount/assessmentStage/list/${this.cardId}`]);\r\n      this.router.navigate([\"/cardaccount/assessmentStage/list\"]);\r\n    }\r\n  \r\n\r\n}\r\n","<div fxLayout=\"column\" style=\"padding: 3rem 0rem;\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\"\r\n    class=\"full-width\">\r\n    <div>\r\n        <img [src]=\"imagePath\">\r\n    </div>\r\n    <div>\r\n        <h2 style=\"font-size: 24px;\">Application Underwriting stage Summary</h2>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row\">\r\n    <h4 class=\"paraFont\">Credit Score Details</h4>\r\n</div>\r\n<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" >\r\n                         <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                <ng-container>\r\n                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                        <mat-hint class=\"headingText\">CustomerName</mat-hint>\r\n                                                <br>\r\n                                         <mat-hint class=\"valueText\">{{customerName}}</mat-hint>\r\n                                    </div>\r\n                                 </ng-container>\r\n                            </div>\r\n                         </div>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"fullcard\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <div *ngFor=\"let credit of creditRatingValues.agencyRating\">\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\" >\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                     <ng-container>\r\n                                            <div fxFlex=\"5%\" fxFlex.xs=\"100%\" class=\"inputCardclass\" fxLayoutAlign=\"end start\">\r\n                                                <!-- <div >\r\n                                                    <app-avatar-photo [name]=\"customer?.firstName + ' ' + customer?.lastName\"></app-avatar-photo> \r\n                                                </div> -->\r\n                                             </div>\r\n                                            <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                <mat-card class=\"inputCard\">\r\n                                                    <h3>Score</h3><br>\r\n                                                        <div fxLayout=\"column\" fxLayoutGap=\"10%\" fxLayoutAlign=\"space-between none\">\r\n                                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                            <ng-container>\r\n                                                                <div fxFlex=\"20%\" fxFlex.xs=\"50%\">\r\n                                                                    <mat-hint class=\"headingText\">Agency</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{credit.agencyName}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"20%\" fxFlex.xs=\"50%\">\r\n                                                                    <mat-hint class=\"headingText\">Score</mat-hint><br>\r\n                                                                    <mat-hint class=\"valueText\">{{credit.ratings}}</mat-hint>\r\n                                                                </div>   \r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                        </div><br>\r\n                                                        <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                                <ng-container>\r\n                                                                    <div fxFlex=\"20%\" fxFlex.xs=\"50%\">\r\n                                                                        <mat-hint class=\"headingText\">Remarks</mat-hint><br>\r\n                                                                        <mat-hint class=\"valueText\">{{credit.remarks}} </mat-hint>\r\n                                                                    </div>\r\n                                                                </ng-container>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                    </ng-container>\r\n                                </div>    \r\n                            </div>\r\n                        </div>\r\n                     </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> \r\n<br>\r\n\r\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"10px\" class=\"full-width\">\r\n   \r\n    <div fxFlex=\"100%\" fxFlex.xs=\"100%\" class=\"full-width\"\r\n        style=\"border:1px solid rgb(249 245 245);border-radius: 5px;\"><!--- *ngIf=\"qualitativeScoreboardSummary !=null\"-->\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"space-evenly start\" class=\"full-width\">\r\n            <div class=\"full-width\">\r\n                <div fxLayout=\"row wrap\" class=\"full-width\" style=\"padding:2rem;\">\r\n                    <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                        <div>\r\n                            <span style=\"color: #102245;opacity: 64%; font-size:medium;font-family: sans-serif;\">ScoreCard Id</span><br>\r\n                            <div style=\"padding-top: 5px;\">\r\n                                <span style=\"font-size: medium;\">ID #{{qualitativeScoreboardSummary?.scoreCardId}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div fxFlex=\"100%\" fxFlex.xs=\"100%\">\r\n                        <div class=\"mt-32\">\r\n                            <span style=\"color: #102245;opacity: 64%; font-size: medium;font-family: sans-serif;\">Number Of Applicants</span><br>\r\n                            <div style=\"padding-top: 5px;\">\r\n                                <span style=\"font-size: medium;\">{{qualitativeScoreboardSummary?.numberOfApplicant}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         \r\n            <div class=\"full-width\">\r\n                <mat-divider style=\"background-color: white\"></mat-divider>\r\n            </div>\r\n          \r\n           \r\n            <div fxLayout=\"row wrap\" style=\"color: #102245;opacity: 64%; font-size: medium;font-family: sans-serif; padding: 0rem 1rem;\" \r\n            class='qtnhd'>Questions</div> \r\n          \r\n            <div class=\"full-width\" style=\"padding: 0rem 2rem;\">             \r\n              <div fxLayout=\"row wrap\" class=\"full-width\" >\r\n                <div *ngFor='let item of qualitativeScoreboardSummary?.scoreCardMapping;let k=index'>  \r\n                  <div class=\"applicanthd\" \r\n                    style=\"font-weight: bold;font-family: sans-serif;\">Applicant {{item.applicantId}}</div>\r\n                    <div class=\"row wrap\">\r\n                      <div fxLayout=\"row wrap\" class=\"qtncard row\"\r\n                       fxLayoutGap=\"30px\" fxFlex=\"50%\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\" class=\"full-width\"\r\n                       *ngFor='let item of qualitativeScoreboardSummary?.scoreCardMapping[k].scoreCardDetails;let i=index'>\r\n                       <mat-card class=\"qtncard1 row\" style=\" justify-content:space-evenly;\">\r\n                       <div>{{i+1}}.{{item.scorecardQuestion}}</div>\r\n                       <div class='qtnval' style=\"opacity: 80%\">{{item.scorecardAnswer}}</div>\r\n                       </mat-card>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          \r\n        </div>\r\n    </div>\r\n   \r\n</div>\r\n\r\n<div >\r\n    <button mat-stroked-button color=\"primary\"\r\n            style=\"border-radius: 20px;width: 10rem;height: 2.5rem;font-family: sans-serif;\"\r\n            (click)=\"goBack()\"\r\n    >\r\n        Back\r\n    </button>\r\n    <span fxFlex></span>\r\n    <button\r\n        style=\"border-radius: 20px;width: 10rem;height: 2.5rem;background-color: #456EFE; float: right; color: white; font-family: sans-serif;\"\r\n        mat-raised-button type=\"button\" (click)=\"done()\"\r\n    >\r\n        Done\r\n    </button>   \r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-supervisor-approval-stage',\r\n  templateUrl: './supervisor-approval-stage.component.html',\r\n  styleUrls: ['./supervisor-approval-stage.component.scss']\r\n})\r\nexport class SupervisorApprovalStageComponent implements OnInit {\r\n  isApprovalDetails: boolean= false;\r\n  isCardSupervisorApprovalDone:boolean=false;\r\n\r\n  constructor(private router: Router,private dialogService : DialogService,private ls: LocalStoreService,\r\n   ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isApprovalDetails = this.ls.getItem('CARD_APPROVAL_DONE');\r\n    this.isCardSupervisorApprovalDone=this.ls.getItem('CARD_SUPERVISOR_DONE');\r\n    console.log(\"\", this.isApprovalDetails)\r\n  }\r\n\r\n  addDetails(){\r\n    console.log(\"calling\")\r\n    this.router.navigate([\"/cardaccount/SupervisorApprovalStage/list/approvalDetails\"]);\r\n  }\r\n  openApprovalSummary(){\r\n    this.dialogService.CardApprovalSummary();\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size1\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- <div fxFlex=\"100\" class=\"mt-8\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Entry Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\">\r\n                    View Summary\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n        <!-- Card 1 start-->\r\n        <mat-card>\r\n            <mat-card-header>\r\n                <mat-card-title>1.Approval Details</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                    <div fxFlex=\"50%\"class=\"txtclr\">\r\n                        <p>\r\n                            Approval Details are captured.</p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/MaskGroup_16.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container>\r\n                    <button mat-button color=\"primary\" *ngIf=\"!isApprovalDetails\"  (click)=\"addDetails()\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n                <ng-container>\r\n                    <button mat-button color=\"primary\" *ngIf=\"isApprovalDetails\" (click)=\"openApprovalSummary()\">\r\n                        View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n\r\n                <!-- <ng-template #showLoan>\r\n                    <button mat-button color=\"primary\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template> -->\r\n\r\n\r\n            </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n\r\n","import { Component, ElementRef, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { home } from 'app/shared/models/cardPrefrences';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-prefrences',\r\n  templateUrl: './card-prefrences.component.html',\r\n  styleUrls: ['./card-prefrences.component.scss']\r\n})\r\nexport class CardPrefrencesComponent implements OnInit {\r\n  //@ViewChildren(\"selectLang\") langSelects: QueryList<ElementRef<HTMLSelectElement>>;\r\n  \r\n  home=new home();\r\n  cardPrefrenceForm: FormGroup;\r\n  arraylimitType: string[] = [];\r\n  selectedOptions2: string[] = [];\r\n  cardId:number;\r\n  cardDetails: string[]=[];\r\n  isdailylimit:boolean=false;\r\n  isLimitTransaction:boolean=false;\r\n  limiPrTrn: Number;\r\n  limitDaily: number;\r\n  isGreaterValue:boolean=false;\r\n  selectedDocumentTypes2: string[] = [];\r\n  cardPrefrenceOnLoad:any = [];\r\n  isRowEnds:boolean=false;\r\n  islimitType:boolean=false;\r\n  isDLReadOnly: boolean = true;\r\n  isLPTReadOnly:boolean=true;\r\n\r\n  \r\n  constructor(  private fb: FormBuilder, private router: Router, private apiService:ApiService, private snack: MatSnackBar, private ls: LocalStoreService,\r\n    private accountService : AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.arraylimitType=[\"Domestic Limit\",\"International Limit\",\"Daily Limit\",\"ATM limit\",\"POS Limit\",\"Internet Limit\"];\r\n    //this.newArray=this.arraylimitType\r\n    this.buildCardPrefrenceForm();\r\n    let cardPrefrenceScreen: boolean = JSON.parse(this.ls.getItem('card_prefrence_done'));\r\n    if (this.cardId!=null && cardPrefrenceScreen) {\r\n      this.gettingCardPrefrenceDetail();\r\n    }\r\n    else{\r\n      console.log(\"\");\r\n      //this.buildMandateForm();\r\n    }\r\n    \r\n   \r\n  }\r\n  gettingCardPrefrenceDetail() {\r\n    this.apiService.getCardPrefrence(this.cardId).subscribe((cardDetails) => {\r\n      console.log(cardDetails);\r\n      \r\n        this.cardPrefrenceOnLoad = cardDetails;\r\n        if(cardDetails){\r\n          this.isdailylimit=true;\r\n          this.isLimitTransaction=true;\r\n          this.islimitType=true;\r\n        }\r\n        else{\r\n          this.isdailylimit=false;\r\n          this.isLimitTransaction=false;\r\n        }\r\n        for(let i=0; i<=this.cardPrefrenceOnLoad.length-1;i++){\r\n          this.selectedOptions2.push(this.cardPrefrenceOnLoad[i].limitType);\r\n        }\r\n        console.log(\"All Transaction Details\", cardDetails);\r\n        this.buildCardPrefrenceForm(cardDetails, true);\r\n      });\r\n  }\r\n  buildCardPrefrenceForm(data?, isResponse?:boolean) {\r\n    this.cardPrefrenceForm = this.fb.group({\r\n      cardPrefrences: this.fb.array([this.addMFormGroup()])\r\n    });\r\n    if(isResponse){\r\n      this.addMandateToFormGroup(data);\r\n      console.log(data);\r\n      for(let i=0;i<=data.length-1;i++){\r\n        data[i].dailyLimit=this.addComa(data[i].dailyLimit);\r\n        data[i].limitPerTransaction=this.addComa(data[i].limitPerTransaction);\r\n      }\r\n      this.m.patchValue(data);\r\n    }\r\n  }\r\n  addMandateToFormGroup(data?) {\r\n    const numberOfItems = data.length;\r\n    for (let index = 1; index < numberOfItems; index++) {\r\n      this.m.push(this.fb.group({\r\n        limitType: [''],\r\n      dailyLimit: [''],\r\n      limitPerTransaction: [''],\r\n      }));\r\n    }\r\n    this.isdailylimit=true;\r\n  }\r\n  get f() { return this.cardPrefrenceForm.controls; }\r\n  get m() { return this.f.cardPrefrences as FormArray; }\r\n  newcard(){\r\n\r\n  }\r\n  addMFormGroup(): FormGroup {\r\n    \r\n    return this.fb.group({\r\n      limitType: [''],\r\n      dailyLimit: ['',[ Validators.maxLength(18),Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      limitPerTransaction: ['', [ Validators.maxLength(18),Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n    });\r\n    \r\n  }\r\n \r\n  addMandate(){\r\n    this.isdailylimit=false;\r\n    this.islimitType=false;\r\n    this.isLimitTransaction=false;\r\n    this.isLPTReadOnly=true;\r\n    this.isDLReadOnly=true;\r\n console.log(\"this.selectedOptions2\",this.selectedOptions2);\r\nthis.m.push(this.fb.group({\r\n limitType: [''],\r\n dailyLimit: [''],\r\n limitPerTransaction: [''],\r\n}));\r\n  }\r\n  \r\n  addComa(num1){\r\n    console.log(num1)\r\n  \r\n    let finalNum = num1.toString().replace(/,/g, '').split(\".\");\r\n    finalNum[0] = finalNum[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    let final = finalNum.join(\".\");\r\n    return final;\r\n\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n    this.isdailylimit=true;\r\n    this.isLPTReadOnly=false\r\n   }\r\n   keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n    this.isLimitTransaction=true;\r\n   }\r\n   OnInput(event: any, flag,k) {\r\n      this.limiPrTrn = event.target.value;\r\n      var dailyNum=this.removeComma(this.cardPrefrenceForm.value.cardPrefrences[k].dailyLimit);\r\n      var LimitTxn=this.removeComma(this.limiPrTrn);\r\n      if(!this.limiPrTrn){\r\n        this.isLimitTransaction=false;\r\n      }else{\r\n        this.isLimitTransaction=true;\r\n      }\r\n    \r\n    if( Number(LimitTxn) > Number(dailyNum)){\r\n      this.isGreaterValue=true;\r\n    }\r\n    else if( Number(LimitTxn) < Number(dailyNum)){\r\n      this.isGreaterValue=false;\r\n    }\r\n    else{\r\n      this.isGreaterValue=false;\r\n    }\r\n    let payload={\r\n      limitPerTransaction:this.addComa(this.limiPrTrn)\r\n    }\r\n    this.m.controls[k].patchValue(payload);\r\n\r\n\r\n  //  this.cardPrefrenceForm.get('limitPerTransaction').setValue(this.addComa( this.limiPrTrn ));\r\n  //console.log( this.addComa( this.limiPrTrn ));\r\n  //this.m.controls[k].value.limitPerTransaction.setValue( this.addComa( this.limiPrTrn ))\r\n\r\n  }\r\n  \r\n  OnInput1(event: any, flag,k) {\r\n      this.limitDaily = event.target.value;\r\n      if(!this.limitDaily){\r\n        this.isdailylimit=false;\r\n      }else{\r\n        this.isdailylimit=true;\r\n      }\r\n      let payload=\r\n      {\r\n        dailyLimit:this.addComa(this.limitDaily)\r\n      }\r\n      this.m.controls[k].patchValue(payload);\r\n  }\r\n  onclick1(k){\r\n    this.islimitType=true;\r\n    this.isLimitTransaction=true;\r\n    this.isdailylimit=true;\r\n    this.isRowEnds=false;\r\n    this.isLPTReadOnly=false;\r\n    this.isDLReadOnly=false;\r\n    const control = <FormArray>this.cardPrefrenceForm.controls['cardPrefrences'];\r\n    control.removeAt(k);\r\n    if(this.cardPrefrenceOnLoad==undefined){\r\n      console.log(\"deleted\")\r\n    }\r\n    else if(this.cardPrefrenceOnLoad[k]!=undefined){\r\n    let id = this.cardPrefrenceOnLoad[k].preferenceId;\r\n    this.apiService.deleteCardPrefrence(id)\r\n    .subscribe(data => { \r\n      \r\n    },\r\n    \r\n      err=>{\r\n        if (err.status == 200) {\r\n          this.snack.open('Record Deleted Successfully', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n\r\n\r\n    }\r\n    )}\r\n\r\n      this.selectedOptions2.splice(k,1);\r\n      console.log(\"console.log(this.selectedOptions2);\",this.selectedOptions2);\r\n      this.isdailylimit=true;\r\n   \r\n  }\r\n\r\n  onSubmit(){\r\n    var data :any;\r\n   var payload:any[]=[];\r\n   this.cardPrefrenceForm.value.cardPrefrences.cardId=this.cardId;\r\n   if(this.cardPrefrenceOnLoad){\r\n    for(let i =this.cardPrefrenceOnLoad.length;i<=this.cardPrefrenceForm.value.cardPrefrences.length-1;i++){\r\n      data=this.cardPrefrenceForm.value.cardPrefrences[i];\r\n      let newTransaction=Object.assign({},data,{cardId: this.cardId});\r\n      newTransaction.dailyLimit=parseInt(this.removeComma(newTransaction.dailyLimit));\r\n      newTransaction.limitPerTransaction=parseInt(this.removeComma(newTransaction.limitPerTransaction));\r\n      payload.push(newTransaction);\r\n      \r\n    }\r\n   }else{\r\n    for(let i =0;i<this.cardPrefrenceForm.value.cardPrefrences.length;i++){\r\n      data=this.cardPrefrenceForm.value.cardPrefrences[i];\r\n      let newTransaction=Object.assign({},data,{cardId: this.cardId});\r\n      newTransaction.dailyLimit=parseInt(this.removeComma(newTransaction.dailyLimit));\r\n      newTransaction.limitPerTransaction=parseInt(this.removeComma(newTransaction.limitPerTransaction));\r\n      payload.push(newTransaction);\r\n      \r\n    }\r\n   }\r\n    \r\n    this.apiService.uploadCardPrefrence(payload).subscribe(data => {\r\n      console.log(\"data\", data);\r\n      if (data != null) {\r\n        this.snack.open('Card Preferences Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        // this.ls.setItem('card_prefrence_done', true);\r\n        // this.accountService.refresh.next();\r\n        this.next();\r\n      }\r\n    });\r\n    \r\n  }\r\n  removeComma(num:any){\r\n    var numb =num.replace(/,/g, \"\");\r\n    console.log(\"numb\",numb)\r\n    return numb;\r\n\r\n  }\r\n  goBack(){\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/financialDetails`]);\r\n  }\r\n  next(){\r\n     this.ls.setItem('card_prefrence_done', true);\r\n      this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/accountServices`]);\r\n  }\r\n  isDocumentOptionDisabled2 = (value) => {\r\n    return this.selectedOptions2.includes(value);\r\n  };\r\n\r\n  changeValue2(event:any, i) {\r\n    this.islimitType=true;\r\n    if (this.selectedDocumentTypes2[i]) {\r\n      this.selectedOptions2 = this.selectedOptions2.filter(\r\n        (val) => val !== this.selectedDocumentTypes2[i]\r\n      );\r\n    }\r\n    \r\n    this.selectedDocumentTypes2[i] = event;\r\n    this.selectedOptions2.push(event);\r\n    if(this.selectedDocumentTypes2.length==this.arraylimitType.length){\r\n      this.isRowEnds=true;\r\n     \r\n      console.log(\"isRowends\",this.isRowEnds);\r\n    }\r\n    else{\r\n      this.isRowEnds=false;\r\n      console.log(\"isRowends\",this.isRowEnds);\r\n    }\r\n    this.isDLReadOnly=false\r\n  }\r\n \r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/Mask_Group_1.svg\"\r\n          alt=\"\"\r\n          class=\"w-90\"\r\n        />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Card Preferences</b></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">Card Preferences</div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n<form [formGroup]=\"cardPrefrenceForm\" >\r\n   <div class=\"table-container\">\r\n   <table class=\"table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Limit Type\r\n               </th>\r\n            <th>Daily Limit</th>\r\n            <th>Limit per transaction</th>\r\n        </tr>\r\n    </thead>\r\n    \r\n    <tbody >\r\n        <tr [formGroup]=\"cardPrefrence\" *ngFor=\"let cardPrefrence of m.controls; let k = index;\">\r\n          <!-- [disabled]=isDocumentOptionDisabled2(limitType)  -->\r\n            \r\n            <td style=\"width: 5cm;\">\r\n              \r\n                \r\n               \r\n           <mat-select class=\"inputMatcard1\" formControlName=\"limitType\" \r\n              placeholder=\"Select Type\" name=\"limitType\"   (valueChange)=\"changeValue2($event, k)\">\r\n   \r\n             <mat-option *ngFor=\"let limitType of arraylimitType\" [value]=\"limitType\" [hidden]=isDocumentOptionDisabled2(limitType) >\r\n              {{limitType}}\r\n             </mat-option>\r\n            </mat-select>\r\n           \r\n                \r\n            </td>\r\n            <td>\r\n                <div>\r\n                    <input type=\"text\" class=\"alignment\" maxlength=\"18\"   formControlName=\"dailyLimit\" (keyup)=\"OnInput1($event,true,k)\"  [readonly]=\"isDLReadOnly\" \r\n                    (keypress)=_keyPress($event) >\r\n\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div>\r\n\r\n                    <input type=\"text\" class=\"alignment\" maxlength=\"18\"   formControlName=\"limitPerTransaction\" (keyup)=\"OnInput($event,true,k)\" [readonly]=\"isLPTReadOnly\" \r\n                    (keypress)=keyPress($event) >\r\n\r\n                </div>\r\n            </td>\r\n            <td class=\"deletebutton\">\r\n                <div >\r\n                    <!-- <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"onclick(mandate,k)\"> -->\r\n                      <button mat-icon-button mat-sm-button color=\"warn\" (click)=\"onclick1(k)\">\r\n                        <mat-icon>delete</mat-icon>\r\n                      </button>\r\n                </div>\r\n            </td>\r\n           \r\n        \r\n\r\n        </tr>\r\n        \r\n    </tbody>\r\n\r\n\r\n\r\n\r\n</table>\r\n<div\r\nfxLayout=\"row\"\r\n\r\nfxLayoutGap=\"335px\"\r\n>\r\n  <button mat-button color=\"primary\"  [disabled]=\"!(isdailylimit && isLimitTransaction && islimitType && !isRowEnds) || isGreaterValue   \"  (click)=\"addMandate()\" ><mat-icon>add</mat-icon> </button>\r\n  <mat-error *ngIf=\"isGreaterValue\">\r\n    <small >Limit per transaction should be less </small><br>\r\n    <small>than daily limit</small>\r\n  </mat-error>\r\n</div>\r\n \r\n\r\n\r\n\r\n<!-- <div style=\"margin-left: 20cm;\">\r\n    \r\n    <button mat-raised-button type=\"button\" color=\"primary\"\r\n    [disabled]=\"!(isdailylimit && isLimitTransaction)\"  (click)=\"onSubmit()\" >Next </button>\r\n</div> -->\r\n\r\n<div\r\nfxLayout=\"row\"\r\nfxLayoutAlign=\"space-between center\"\r\nfxLayoutGap=\"16px\"\r\nclass=\"mt-32\"\r\n>\r\n<button mat-button rounded  (click)=\"goBack()\" >\r\n  Back\r\n</button>\r\n<button class=\"Nextbtn\" mat-raised-button type=\"button\" color=\"primary\"\r\n    [disabled]=\"!(isdailylimit && isLimitTransaction && islimitType) || isGreaterValue || m.controls.length==0\"  (click)=\"onSubmit()\" >Next </button>\r\n\r\n</div>  \r\n\r\n</div>\r\n</form>\r\n        \r\n        \r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n@Component({\r\n  selector: 'app-underwriting-credit-rating',\r\n  templateUrl: './underwriting-credit-rating.component.html',\r\n  styleUrls: ['./underwriting-credit-rating.component.scss'],\r\n})\r\nexport class UnderwritingCreditRatingComponent implements OnInit {\r\n  creditDetailsForm: FormGroup;\r\n  customerNames: any[] = [];\r\n  cardId: any;\r\n  isCardCreditRatingDetails: any;\r\n  customerName: any;\r\n  disableTest: boolean;\r\n  disableUjjivan: boolean;\r\n  disableFastTrack: boolean;\r\n  disableAddAgency: boolean;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private snack: MatSnackBar,\r\n    private api: ApiService,\r\n    private accountService: AccountService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem('cardId');\r\n\r\n    this.customerName = this.ls.getItem('primaryCustomerName');\r\n    this.isCardCreditRatingDetails = this.ls.getItem('CARD_CREDIT_RATING_DONE');\r\n    this.getCustomerInformationDetails();\r\n    this.buildCreditForm();\r\n\r\n    if (this.isCardCreditRatingDetails == false) {\r\n      this.buildCreditForm();\r\n    } else {\r\n      this.gettingCreditRatingDetail();\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.creditDetailsForm.controls;\r\n  }\r\n  get c() {\r\n    return this.f.agencyRating as FormArray;\r\n  }\r\n\r\n  buildCreditForm(data?, isResponse?: boolean) {\r\n    console.log(data);\r\n\r\n    this.creditDetailsForm = this.formBuilder.group({\r\n      //   customerName:[data && data.customerName? data.customerName:'',Validators.required],\r\n      // loanAccountId:this.loanaccountID,\r\n      cardId: this.cardId,\r\n      //cardId:data?data.cardId:'952',\r\n      // customerName:data? data.customerName:'',\r\n      customerName: data ? data.customerName : this.customerNames[0],\r\n      // customerName:data?data.customerName:this.customerName,\r\n      agencyRating: this.formBuilder.array([this.addModFormGroup(data)]),\r\n    });\r\n\r\n    console.log(this.creditDetailsForm);\r\n  }\r\n  addFormGroup() {\r\n    this.c.push(\r\n      this.formBuilder.group({\r\n        agencyId: [0],\r\n        agencyName: ['', Validators.required],\r\n        ratings: ['', Validators.required],\r\n        // remarks: ['',Validators.required],\r\n        // agencyName: [''],\r\n        // ratings: [''],\r\n        // remarks: [''],\r\n      })\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/cardaccount/applicationEnrichment/list']);\r\n  }\r\n\r\n  addModFormGroup(data): FormGroup {\r\n    console.log(data, 'inside addModeFormGrp');\r\n    return this.formBuilder.group({\r\n      // cardId:[data?data.cardId:'952'],\r\n      cardId: [this.cardId],\r\n      agencyId: [data ? data.agencyId : 0],\r\n      agencyName: [\r\n        data ? data.agencyRating[0].agencyName : '',\r\n        Validators.required,\r\n      ],\r\n      ratings: [data ? data.agencyRating[0].ratings : '', Validators.required],\r\n      remarks: [data ? data.agencyRating[0].remarks : ''],\r\n      // agencyName: [data?data.agencyRating[0].agencyName : ''],\r\n      // ratings: [data?data.agencyRating[0].ratings : ''],\r\n      // remarks: [data?data.agencyRating[0].remarks : ''],\r\n    });\r\n  }\r\n\r\n  getCustomerInformationDetails() {\r\n    this.appApiService\r\n      .fetchCustomersByCardAccId(this.cardId, 'cardOrigin')\r\n      .subscribe(\r\n        (resp: any) => {\r\n          console.log('resp for customer information names ', resp.data);\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            if (resp.data[index].middleName == null) {\r\n              this.customerNames[index] =\r\n                resp.data[index].firstName + ' ' + resp.data[index].lastName;\r\n            } else {\r\n              this.customerNames[index] =\r\n                resp.data[index].firstName +\r\n                ' ' +\r\n                resp.data[index].middleName +\r\n                ' ' +\r\n                resp.data[index].lastName;\r\n            }\r\n          }\r\n          console.log('customer name ', this.customerNames);\r\n          if (this.customerNames) {\r\n            console.log('If condtion');\r\n            this.creditDetailsForm\r\n              .get('customerName')\r\n              .setValue(this.customerNames[0]);\r\n          }\r\n        },\r\n        (err: any) => {}\r\n      );\r\n  }\r\n  gettingCreditRatingDetail() {\r\n    this.api.getCardCreditRatingDetails(this.cardId).subscribe((resp: any) => {\r\n      console.log(resp);\r\n      this.buildCreditForm(resp, true);\r\n    });\r\n  }\r\n\r\n  OnSubmit(val) {\r\n    console.log('val', val);\r\n    val.accountType = 'cardOrigin';\r\n    this.api.saveCreditDetails(val).subscribe(\r\n      (data: any) => {\r\n        console.log(data);\r\n        if (data === 200 || data !== null) {\r\n          this.snack.open(' Credit Details Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          });\r\n          this.ls.setItem('CARD_CREDIT_RATING_DONE', true);\r\n          this.accountService.refresh.next();\r\n          this.router.navigate([`/cardaccount/underwritingStage/qualitative`]);\r\n        } else if (data === 500) {\r\n          this.snack.open(\r\n            'Not able to connect to server!',\r\n            'INTERNAL SERVER ERROR',\r\n            {\r\n              duration: 4000,\r\n              verticalPosition: 'top',\r\n              horizontalPosition: 'right',\r\n            }\r\n          );\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n    this.router.navigate([`/cardaccount/underwritingStage/qualitative/`]);\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onClick() {\r\n   for(let i=0; i<3; i++) {     \r\n     if(this.creditDetailsForm.value.agencyRating[i].agencyName==\"Test Agency\") {\r\n       this.disableTest=true;\r\n       this.disableUjjivan=false;\r\n       this.disableFastTrack=false;\r\n      }    \r\n     if(this.creditDetailsForm.value.agencyRating[i].agencyName==\"Ujjivan Agency\") {\r\n       this.disableUjjivan=true;\r\n       this.disableFastTrack=false;\r\n       this.disableTest=false;\r\n      }    \r\n     if(this.creditDetailsForm.value.agencyRating[i].agencyName==\"Fast Track Agency\") {\r\n       this.disableFastTrack=true;\r\n       this.disableUjjivan=false;\r\n       this.disableTest=false;\r\n\r\n\r\n      }\r\n    }\r\n    if(this.creditDetailsForm.value.agencyRating.length==3) {\r\n      this.disableAddAgency=true;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/Mask_Group_9.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8 \">\r\n      <div class=\"main-title1\"><b>Credit Score Details</b></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <mat-progress-bar [mode]=\"determinate\" class=\"session-progress\"></mat-progress-bar> -->\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Credit Score Details</div>\r\n        <mat-divider class=\"dividerClass\"></mat-divider>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"creditDetailsForm\" [formGroup]=\"creditDetailsForm\">\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div class=\"flex-grow-2\" style=\"padding-left: 10px;\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <!-- <mat-hint>Customer Name*</mat-hint> -->\r\n              <mat-label>Customer Name*</mat-label>\r\n              <!-- <mat-card class=\"widthCard inputMatcard\"> -->\r\n                <div *ngIf=\"customerNames.length > 1\">\r\n                  <mat-select\r\n                    name=\"customerName\"\r\n                    formControlName=\"customerName\"\r\n                  >\r\n                    <mat-option\r\n                      *ngFor=\"let customerName of customerNames\"\r\n                      [value]=\"customerName\"\r\n                    >\r\n                      {{ customerName }}\r\n                    </mat-option>\r\n                    <!-- <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option value=\"GayathriR\">GayathriR</mat-option>  -->\r\n                  </mat-select>\r\n                </div>\r\n\r\n                <div *ngIf=\"customerNames.length == 1\">\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"customerName\"\r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                    readonly\r\n                  />\r\n                </div>\r\n              <!-- </mat-card> -->\r\n              <mat-error\r\n                *ngIf=\"\r\n                  !creditDetailsForm.get('customerName').valid &&\r\n                  creditDetailsForm.get('customerName').touched\r\n                \"\r\n              >\r\n                Customer Name is Required!\r\n              </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mt-16\" *ngFor=\"let mandate of c.controls; let i = index\">\r\n            <mat-accordion [formGroup]=\"mandate\">\r\n              <mat-card class=\"border1\">\r\n                <h3>Score </h3>\r\n                <mat-divider class=\"design\"></mat-divider><br>\r\n                <div [formGroup]=\"mandate\">\r\n                  <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                      <div class=\"flex-grow-2\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <!-- <mat-hint>Select Agency*</mat-hint> -->\r\n                        <mat-label>Select Agency*</mat-label>\r\n                        <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                          <mat-select\r\n                            name=\"agencyName\"\r\n                            formControlName=\"agencyName\">\r\n                            <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                            <mat-option (click)=\"onClick()\" [disabled]=disableTest \r\n                                value=\"Test Agency\">Test Agency</mat-option>\r\n                            <mat-option (click)=\"onClick()\" [disabled]=disableUjjivan \r\n                                value=\"Ujjivan Agency\">Ujjivan Agency</mat-option>\r\n                            <mat-option (click)=\"onClick()\" [disabled]=disableFastTrack \r\n                                value=\"Fast Track Agency\">Fast Track Agency</mat-option>\r\n                          </mat-select>\r\n                        <!-- </mat-card> -->\r\n                        <mat-error\r\n                          *ngIf=\"\r\n                            !mandate.controls['agencyName'].valid &&\r\n                            mandate.controls['agencyName'].touched\r\n                          \"\r\n                        >\r\n                          Agency is Required!\r\n                        </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div class=\"flex-grow-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <mat-label> Remarks</mat-label>\r\n                        <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input\r\n                            matInput\r\n                            placeholder=\"Remarks\"\r\n                            formControlName=\"remarks\"\r\n                            class=\"alignment\"\r\n                            type=\"text\"\r\n                            name=\"remarks\"\r\n                          />\r\n                        <!-- </mat-card> -->\r\n                        <!-- <mat-error\r\n                          *ngIf=\"\r\n                            !mandate.controls['remarks'].valid &&\r\n                            mandate.controls['remarks'].touched\r\n                          \"\r\n                        >\r\n                          Remarks is Required!\r\n                        </mat-error> -->\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                      <div class=\"flex-grow-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <!-- <mat-hint>Ratings*</mat-hint> -->\r\n                        <mat-label>Ratings*</mat-label>\r\n                        <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input\r\n                            matInput\r\n                            formControlName=\"ratings\"\r\n                            class=\"alignment\"\r\n                            (keypress)=\"_keyPress($event)\"\r\n                            type=\"text\"\r\n                            name=\"ratings\"\r\n                          />\r\n                        <!-- </mat-card> -->\r\n                        <mat-error\r\n                          *ngIf=\"\r\n                            !mandate.controls['ratings'].valid &&\r\n                            mandate.controls['ratings'].touched\r\n                          \"\r\n                        >\r\n                          Ratings is Required!\r\n                        </mat-error>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                </div>\r\n              </mat-card>\r\n            </mat-accordion>\r\n          </div>\r\n          <button mat-button color=\"primary\" [disabled]=disableAddAgency (click)=\"addFormGroup()\">\r\n            <mat-icon>add</mat-icon> ADD AGENCY\r\n          </button>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n            fxLayoutGap=\"16px\"\r\n            class=\"mt-32\"\r\n          >\r\n            <button mat-button rounded  (click)=\"goBack()\">\r\n              Back\r\n            </button>\r\n            <button class=\"Nextbtn\" mat-raised-button color=\"primary\" [disabled]=\"!creditDetailsForm.valid\" (click)=\"OnSubmit(creditDetailsForm.value)\">\r\n              Next\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n</div>","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n\r\n@Component({\r\n  selector: \"app-enrichment-summary\",\r\n  templateUrl: \"./enrichment-summary.component.html\",\r\n  styleUrls: [\"./enrichment-summary.component.scss\"],\r\n})\r\nexport class EnrichmentSummaryComponent implements OnInit {\r\n  appEntrySummaryView: boolean = false;\r\n  accountDetails: any;\r\n  interestForm: FormGroup;\r\n  chargeFormIT: FormGroup;\r\n  savingForm: FormGroup;\r\n  loanForm: FormGroup;\r\n  interestForm1: FormGroup;\r\n  accountId: any;\r\n  //for loan interest details\r\n  loanInterestResp: {\r\n    intrestType: string;\r\n    interestRateApplicable: string;\r\n    marginIn: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  intererstInfo: {\r\n    intrestType: string;\r\n    interestRateApplicable: string;\r\n    margin: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  accountType: String = \"Home Loan\";\r\n  cardId:any;\r\n  chargeInfo: any;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private api: ApiService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    // this.api.getApprovedStatus().subscribe((resp)=>{\r\n    //   console.log(\"message\",resp);\r\n    //   this.isApprovedSreen=resp;\r\n\r\n    // })\r\n    // this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    this.getCardEnrichmentDetails(this.cardId);\r\n    this.interestForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    this.savingForm = this.formBuilder.group({\r\n      saving: new FormArray([]),\r\n    });\r\n    this.chargeFormIT = this.formBuilder.group({\r\n      chargeIT: new FormArray([]),\r\n    });\r\n    this.loanForm = this.formBuilder.group({\r\n      loan: new FormArray([]),\r\n    });\r\n    \r\n   \r\n\r\n    //for Charge Details\r\n    this.api\r\n      .getFlexcubeDetails(\"chargeDetails\", this.accountType)\r\n      .subscribe((response) => {\r\n        this.onCardCharge(response.length);\r\n        this.in2.patchValue(response);\r\n      });\r\n  }\r\n\r\n  getCardEnrichmentDetails(cardId:any){\r\n    this.api.getCardEnrichmentSummmary(cardId)\r\n      .subscribe((summaryInfo: any) => {\r\n       console.log(summaryInfo);\r\n       this.intererstInfo=summaryInfo.intererstInfo;\r\n       console.log(this.intererstInfo);\r\n       this.onCardintrest(this.intererstInfo.length);\r\n       this.in.patchValue(this.intererstInfo);\r\n       \r\n       this.chargeInfo = summaryInfo.chargeInfo;\r\n       this.onCardCharge(this.chargeInfo.length);\r\n       this.in2.patchValue(this.chargeInfo);\r\n      });\r\n  }\r\n\r\n  onCardintrest(e) {\r\n    // this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            //accountId: [this.accountId],\r\n            cardId: [this.cardId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  onCardCharge(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in2.length < numberOfItems) {\r\n      for (let i = this.in2.length; i < numberOfItems; i++) {\r\n        this.in2.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            amount: [\"\"],\r\n            waiver: [true],\r\n            cardId: [this.cardId],\r\n            chargeDetailsId: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in2.length; i >= numberOfItems; i--) {\r\n        this.in2.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f2() {\r\n    return this.chargeFormIT.controls;\r\n  }\r\n  get in2() {\r\n    return this.f2.chargeIT as FormArray;\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n\r\n  get iloan() {\r\n    return this.floan.loan as FormArray;\r\n  }\r\n\r\n  get floan() {\r\n    return this.loanForm.controls;\r\n  }\r\n\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"chargeInfo detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  checkbox(event) {\r\n    console.log(event.checked);\r\n  }\r\n\r\n  assignAccountType(accountType) {\r\n    this.accountType = accountType;\r\n  }\r\n\r\n  Done() {\r\n    this.router.navigate([`/cardaccount/underwritingStage/list`]);\r\n  }\r\n  Back() {\r\n    this.router.navigate([`/cardaccount/applicationEnrichment/list`]);\r\n  }\r\n}\r\n","<div class=\"propic text-center\">\r\n    <img class=\"entryImg\" src=\"assets/images/svg/undraw_statistic_chart_38b6.svg\" alt=\"\" />\r\n</div>\r\n<div class=\"profile-title text-center mt-8\">\r\n    <div class=\"main-title\"><b>Application Enrichment</b></div>\r\n</div>\r\n\r\n<!--Interest Details Summary-->\r\n<div class=\"spanDiv1\">\r\n    \r\n    <h4 class=\"paraFont\">Interest Details</h4>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"main\">\r\n\r\n    <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n        <div class=\"mt-24\"></div>\r\n        <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\">\r\n           \r\n            <table>\r\n\r\n                <tbody>\r\n                    <tr class=\"mt-4\" *ngFor=\"let interest of in.controls; let i = index\"\r\n                        style=\"display: flex;flex-wrap: wrap;\">\r\n                        <div class=\"row\">\r\n                            <ng-container [formGroup]=\"interest\">\r\n                                <div class=\"heading\">\r\n                                    <input matInput formControlName=\"intrestType\" name=\"account_branch\"\r\n                                        id=\"headingInput\" readonly />\r\n                                </div>\r\n                                <td>\r\n                                    <mat-card class=\"matCardBox\">\r\n                                        <mat-label class=\"label\">Interest Rate Applicable</mat-label>\r\n                                        <input matInput formControlName=\"intrestRateApplicable\" name=\"account_branch\"\r\n                                            class=\"input\" readonly />\r\n                                    </mat-card>\r\n                                </td>\r\n                                <td>\r\n                                    <mat-card class=\"matCardBox\">\r\n                                        <mat-label class=\"label\">Margin in %</mat-label>\r\n                                        <input matInput formControlName=\"marginIn\" name=\"account_branch\" class=\"input\"\r\n                                            readonly />\r\n\r\n                                    </mat-card>\r\n                                </td>\r\n                                <td>\r\n                                    <mat-card class=\"matCardBox\">\r\n                                        <mat-label class=\"label\">Effective Rate %</mat-label>\r\n                                        <input matInput formControlName=\"effectiveRate\" name=\"account_branch\" value=\"\"\r\n                                            class=\"input\" readonly />\r\n                                    </mat-card>\r\n                                </td>\r\n                            </ng-container>\r\n                        </div>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n\r\n\r\n        <br>\r\n\r\n        <!--Charge Details Summary-->\r\n        <div>\r\n            <h4 class=\"paraFont\">Card Account Charge Details</h4>\r\n        </div>\r\n        <mat-card class=\"matCard\">\r\n\r\n            <div fxLayout=\"row wrap\" class=\"main\">\r\n                <div fxFlex=\"100\">\r\n                </div>\r\n                <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n                    <div class=\"mt-24\"></div>\r\n                    <form *ngIf=\"chargeFormIT\" [formGroup]=\"chargeFormIT\">\r\n                        <table class=\"cart-table default-bg mat-elevation-z0\">\r\n                            <tbody>\r\n                                <tr class=\"mt-4\" *ngFor=\"let chargeIT of in2.controls; let i = index\"\r\n                                    class=\"chargeTable\">\r\n                                    <div class=\"row\" class=\"chargeLeft\">\r\n                                        <ng-container [formGroup]=\"chargeIT\">\r\n                                            <div class=\"heading\">\r\n                                                <input matInput formControlName=\"intrestType\" name=\"account_branch\"\r\n                                                    id=\"headingInput\" readonly />\r\n                                            </div>\r\n                                            <td>\r\n                                                <mat-card class=\"matCardBox\">\r\n                                                    <mat-label class=\"label\">Amount</mat-label>\r\n                                                    <input matInput formControlName=\"amount\" name=\"account_branch\"\r\n                                                        class=\"input\" readonly />\r\n                                                </mat-card>\r\n                                            </td>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n    <button mat-button rounded color=\"primary\" (click)=\"Back()\">\r\n        Back\r\n    </button>\r\n    <button mat-raised-button color=\"primary\" (click)=\"Done()\">\r\n        Done\r\n    </button>\r\n</div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\n// import { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n@Component({\r\n  selector: 'app-card-account',\r\n  templateUrl: './card-account.component.html',\r\n  styleUrls: ['./card-account.component.scss']\r\n})\r\nexport class CardAccountComponent implements OnInit {\r\n  public accountItems: any[];\r\n  private accountItemsSub: Subscription;\r\n  isCardApplicationStageDone : boolean = false;\r\n  isCardInitiationDone : boolean = false;\r\n  isCardCustomerInformationScreen: boolean = false;\r\n  isCardFinancialDetailsScreen : boolean = false;\r\n  //isCardPreferencesScreen : boolean = true;\r\n  isCardPrefrenceDone:boolean = false;\r\n  // isAccountServices : boolean = true;\r\n  isCardAccountService:boolean=false;\r\n  isAddOnCardHolderDetails : boolean = true;\r\n\r\n  isDocumentUploadDone : boolean = false;\r\n  isDocumentUpload : boolean = false;\r\n\r\n  isCardApplicationEnrichmentDone:boolean=false\r\n // isEnrichmentDone : boolean = true;\r\n isCardInterestDetails : boolean = false;\r\n isCardChargeDetails : boolean = false;\r\n\r\n  isApplicationUnderWritingStageDone : boolean = true;\r\n // isCardCreditRatingDetails : boolean = true;\r\n  isQualitativeScoreboard : boolean = true;\r\n  isCardCreditRatingDetails: boolean = false;\r\n  isCardQualitativeScoreboard: boolean=false;\r\n\r\n  isCardAssessmentStageDone : boolean = false;\r\n  isAssessmentReport : boolean = false;\r\n\r\n\r\n  isCardSupervisorApprovalDone : boolean = true;\r\n  isApprovedDetails : boolean = true;\r\n\r\n  isCardDigitalSigningDone : boolean = true;\r\n  isCardDigitalSigning : boolean = true;\r\n  cardId: any;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  constructor(\r\n    private ls: LocalStoreService,private api: ApiService, private router: Router,private cdr:ChangeDetectorRef ,private accountService:AccountService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountItemsSub = this.accountService.accountItems$.subscribe(menuItem => {\r\n      this.accountItems = menuItem;\r\n    });\r\n    console.log(\"reset\")\r\n    this.cardId = this.ls.getItem('cardId');\r\n    this.isCardApplicationStageDone=this.ls.getItem('CARD_APPLICATION_ENTRY_DONE');\r\n    this.isCardInitiationDone=this.ls.getItem('CARD_INITIATION_DONE');\r\n    this.isCardCustomerInformationScreen=this.ls.getItem('Card_Customer_Done');\r\n    this.isCardFinancialDetailsScreen = this.ls.getItem('CARD_FINANCIAL_DONE');\r\n    // this.isCardPreferencesScreen = this.ls.getItem('CARD_PREFERENCE_DONE');\r\n    this.isCardPrefrenceDone=this.ls.getItem('card_prefrence_done');\r\n    // this.isAccountServices = this.ls.getItem('CARD_ACCOUNT_SERVICES_DONE');\r\n    this.isCardAccountService=this.ls.getItem('CARD_ACC_SERVICE_DONE');\r\n\r\n    this.isDocumentUploadDone = this.ls.getItem('CARD_DOCUMENT_STAGE_DONE');\r\n    this.isDocumentUpload=this.ls.getItem('CARD_DOCUMENT_DONE');\r\n\r\n\r\n    this.isCardApplicationEnrichmentDone=this.ls.getItem('CARD_ENRICHMENT_DONE');\r\n   // this.isEnrichmentDone= this.ls.getItem('LOAN_ENRICHMENT_DONE');\r\n    this.isCardInterestDetails=this.ls.getItem('CARD_INTEREST_DETAILS_DONE');\r\n    this.isCardChargeDetails=this.ls.getItem('CARD_CHARGE_DETAILS_DONE');\r\n    \r\n    this.isApplicationUnderWritingStageDone= this.ls.getItem('CARD_UNDERWRITING_DONE');\r\n    this.isCardCreditRatingDetails = this.ls.getItem('CARD_CREDIT_RATING_DONE');\r\n    this.isCardQualitativeScoreboard=this.ls.getItem('CARD_QUALITATIVE_SCOREBOARD_DONE');\r\n\r\n    this.isCardAssessmentStageDone=this.ls.getItem('CARD_ASSESSMENT_STAGE_DONE');\r\n    this.isAssessmentReport=this.ls.getItem('CARD_ASSESSMENT_DONE');\r\n\r\n    this.isCardSupervisorApprovalDone=this.ls.getItem('CARD_SUPERVISOR_DONE');\r\n    this.isApprovedDetails=this.ls.getItem('CARD_APPROVAL_DONE');\r\n\r\n    this.isCardDigitalSigningDone=this.ls.getItem('CARD_DIGITAL_STAGE_DONE');\r\n    this.isCardDigitalSigning=this.ls.getItem('CARD_DIGITAL_SIGN_DONE');\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n     \r\n    this.cardId = this.ls.getItem('cardId');\r\n\r\n    this.isCardApplicationStageDone=this.ls.getItem('CARD_APPLICATION_ENTRY_DONE');\r\n    this.isCardInitiationDone=this.ls.getItem('CARD_INITIATION_DONE');\r\n    this.isCardCustomerInformationScreen=this.ls.getItem('Card_Customer_Done');\r\n    this.isCardFinancialDetailsScreen = this.ls.getItem('CARD_FINANCIAL_DONE');\r\n    // this.isCardPreferencesScreen = this.ls.getItem('CARD_PREFERENCE_DONE');\r\n    this.isCardPrefrenceDone=this.ls.getItem('card_prefrence_done');\r\n    this.isCardAccountService=this.ls.getItem('CARD_ACC_SERVICE_DONE')\r\n    // this.isAccountServices = this.ls.getItem('CARD_ACCOUNT_SERVICES_DONE');\r\n\r\n    \r\n    this.isDocumentUploadDone = this.ls.getItem('CARD_DOCUMENT_STAGE_DONE');\r\n    this.isDocumentUpload=this.ls.getItem('CARD_DOCUMENT_DONE');\r\n    \r\n    this.isCardApplicationEnrichmentDone=this.ls.getItem('CARD_ENRICHMENT_DONE');\r\n   // this.isEnrichmentDone= this.ls.getItem('LOAN_ENRICHMENT_DONE');\r\n    this.isCardInterestDetails=this.ls.getItem('CARD_INTEREST_DETAILS_DONE');\r\n    this.isCardChargeDetails=this.ls.getItem('CARD_CHARGE_DETAILS_DONE');\r\n    \r\n    this.isApplicationUnderWritingStageDone= this.ls.getItem('CARD_UNDERWRITING_DONE');\r\n    this.isCardCreditRatingDetails = this.ls.getItem('CARD_CREDIT_RATING_DONE');\r\n    this.isCardQualitativeScoreboard=this.ls.getItem('CARD_QUALITATIVE_SCOREBOARD_DONE');\r\n\r\n    this.isCardAssessmentStageDone=this.ls.getItem('CARD_ASSESSMENT_STAGE_DONE');\r\n    this.isAssessmentReport=this.ls.getItem('CARD_ASSESSMENT_DONE');\r\n\r\n    this.isCardSupervisorApprovalDone=this.ls.getItem('CARD_SUPERVISOR_DONE');\r\n    this.isApprovedDetails=this.ls.getItem('CARD_APPROVAL_DONE');\r\n\r\n    this.isCardDigitalSigningDone=this.ls.getItem('CARD_DIGITAL_STAGE_DONE');\r\n    this.isCardDigitalSigning=this.ls.getItem('CARD_DIGITAL_SIGN_DONE');\r\n \r\n     })\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.accountItemsSub) {\r\n      this.accountItemsSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div class=\"m-333\">\r\n    <mat-sidenav-container class=\"topSection\" style=\"background-color: white !important;\">\r\n        <mat-sidenav EgretSideNavToggle class=\"app-sidebar\" style=\"width: 300px;\">\r\n      <span class=\"sidenav-header\">Home > Create Card Account</span>\r\n            <!-- <div class=\"app-filters-wrap\"> -->\r\n            <div class=\"sidenav-hold\">\r\n                <ul appDropdown class=\"sidenav mt-32\">\r\n\r\n                    <!-- Application satge start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isCardApplicationStageDone ? 'active' : 'notActive'\">\r\n                                <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isCardApplicationStageDone ? 'active' : 'notActive'\">\r\n                                    account_balance_wallet\r\n                                </mat-icon>\r\n                                <span class=\"item-name lvl1\">Application Entry Stage</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list']\"\r\n                                    [ngClass]=\"isCardApplicationStageDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list/cardInitiation']\"\r\n                                    [ngClass]=\"isCardInitiationDone ? 'enable' : 'disable'\">\r\n\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Card Initiation</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  \r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list/customerInformation']\"\r\n                                    [ngClass]=\"isCardCustomerInformationScreen ? 'enable' : 'disable'\">\r\n\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Customer Information\r\n                                            Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n             \r\n                                <!--*ngIf=\"isHomeLoan; else hideNav\"-->\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a \r\n                                    class=\"side-menu\"\r\n                                    [ngClass]=\"isCardFinancialDetailsScreen ? 'enable' : 'disable'\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list/financialDetails']\"\r\n                                    >\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Financial Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  \r\n                                    class=\"side-menu\"\r\n                                    [ngClass]=\"isCardPrefrenceDone ? 'enable' : 'disable'\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list/cardPrefrence']\"\r\n                                    >\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Card Preferences</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  \r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/applicationEntryStage/list/accountServices']\"\r\n                                    [ngClass]=\"isCardAccountService ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Account Services</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <!-- <li routerLinkActive=\"open\">\r\n                                    <a \r\n                                        style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                                        [ngClass]=\"isAddOnCardHolderDetails ? 'enable' : 'disable'\">\r\n                                         <a \r\n                                        style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                                       > -->\r\n                                      <!--  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Add on Card Holder\r\n                                            Details</span>\r\n                                        <span fxFlex></span> -->\r\n                                 <!--   </a> \r\n                                </li> -->\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Application satge end -->\r\n\r\n                    <!-- Document Upload start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isDocumentUploadDone ? 'active' : 'notActive'\"\r\n                            [routerLink]=\"['/cardaccount/documentupload/list']\">\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isDocumentUploadDone ? 'active' : 'notActive'\">file_upload</mat-icon>\r\n                                <span class=\"item-name lvl1\">Document Upload</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/documentupload/list']\"\r\n                                    [ngClass]=\"isCardApplicationStageDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  [ngClass]=\"isDocumentUpload? 'enable' : 'disable'\"\r\n                                    [routerLink]=\"['/cardaccount/documentupload/list/document-details']\"\r\n                                    class=\"side-menu\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Document Upload</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Document Upload end -->\r\n\r\n                    <!-- Enrichment satge start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isCardApplicationEnrichmentDone ? 'active' : 'notActive'\"\r\n                            [routerLink]=\"['/cardaccount/applicationEnrichment/list']\">\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isCardApplicationEnrichmentDone ? 'active' : 'notActive'\">style</mat-icon>\r\n                                <span class=\"item-name lvl1\">Application Enrichment</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  [ngClass]=\"isCardApplicationEnrichmentDone ? 'enable' : 'disable'\"\r\n                                        [routerLink]=\"['/cardaccount/applicationEnrichment/list']\"\r\n                                        class=\"side-menu\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                \r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                        [ngClass]=\"isCardInterestDetails ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Interest\r\n                                            Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                        [ngClass]=\"isCardChargeDetails ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Charge Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Enrichment satge end -->\r\n\r\n                    <!-- Underwriting start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle\r\n                                [ngClass]=\"isApplicationUnderWritingStageDone ? 'active' : 'notActive'\"\r\n                                [routerLink]=\"['/cardaccount/underwritingStage/list']\">\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isApplicationUnderWritingStageDone ? 'active' : 'notActive'\">border_color\r\n                                </mat-icon>\r\n                                <span class=\"item-name lvl1\">Application Underwriting</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/underwritingStage/list']\"\r\n                                    [ngClass]=\"isCardApplicationStageDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                        [ngClass]=\"isCardCreditRatingDetails ? 'enable' : 'disable'\"\r\n                                        [routerLink]=\"['/cardaccount/underwritingStage/credit-rating']\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Credit Score\r\n                                            Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                        [ngClass]=\"isCardQualitativeScoreboard ? 'enable' : 'disable'\"\r\n                                        [routerLink]=\"['/cardaccount/underwritingStage/qualitative']\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Qualitative\r\n                                            Scoreboard</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Underwriting end -->\r\n\r\n                    <!-- assesment start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isCardAssessmentStageDone ? 'active' : 'notActive'\"\r\n                                [routerLink]=\"['/cardaccount/assessmentStage/list']\"\r\n                               >\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isCardAssessmentStageDone ? 'active' : 'notActive'\">assessment</mat-icon>\r\n                                <span class=\"item-name lvl1\">Application Assessment</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/assessmentStage/list']\"\r\n                                    [ngClass]=\"isCardApplicationStageDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                         [routerLink]=\"['/cardaccount/assessmentStage/application-assessment/list']\"\r\n                                         [ngClass]=\"isAssessmentReport ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Assessment Report</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- assesment end -->\r\n\r\n                    <!-- Supervisor Approval start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isCardSupervisorApprovalDone ? 'active' : 'notActive'\"\r\n                            [routerLink]=\"['/cardaccount/SupervisorApprovalStage/list']\">\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isCardSupervisorApprovalDone ? 'active' : 'notActive'\">done_all</mat-icon>\r\n                                <span class=\"item-name lvl1\">Supervisor Approval Stage</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                    class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/SupervisorApprovalStage/list']\"\r\n                                    [ngClass]=\"isCardApplicationStageDone ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/SupervisorApprovalStage/list/approvalDetails']\"\r\n                                        [ngClass]=\"isApprovedDetails ? 'enable' : 'disable'\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Approved Details</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Supervisor Approval end -->\r\n\r\n                    <!-- Digital Signing start -->\r\n                    <li appDropdownLink routerLinkActive=\"open\">\r\n                        <div class=\"lvl1\">\r\n                            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                            <a appDropdownToggle [ngClass]=\"isCardDigitalSigningDone ? 'active' : 'notActive'\">\r\n                                <!--<mat-icon class=\"sidenav-mat-icon\">style</mat-icon>-->\r\n                                <mat-icon class=\"sidenav-mat-icon\"\r\n                                    [ngClass]=\"isCardDigitalSigningDone ? 'active' : 'notActive'\">web_asset</mat-icon>\r\n                                <span class=\"item-name lvl1\">Digital Signing</span>\r\n                                <span fxFlex></span>\r\n                                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                            </a>\r\n                            <!-- LEVEL 2 -->\r\n                            <ul class=\"lvl2\" appDropdown style=\"margin-right: 8px;\">\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a  class=\"side-menu\"\r\n                                    [routerLink]=\"['/cardaccount/DigitalSigning/list']\">\r\n                                        <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                                        <span fxFlex></span>\r\n                                    </a>\r\n                                </li>\r\n                                <li routerLinkActive=\"open\">\r\n                                    <a\r\n                                     class=\"side-menu\"\r\n                                     [ngClass]=\"isCardDigitalSigning ? 'enable' : 'disable'\"\r\n                                     [routerLink]=\"['/cardaccount/DigitalSigning/options']\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Digital Signing</span>\r\n                      <span fxFlex></span>\r\n                      </a>\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <!-- Digital Signing end -->\r\n                </ul>\r\n            </div>\r\n\r\n        </mat-sidenav>\r\n        <div class=\"app-wrap\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n            <!-- Right side -->\r\n            <div class=\"full-width mt-32\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n\r\n        </div>\r\n    </mat-sidenav-container>\r\n</div>\r\n</div>\r\n","import { Location } from \"@angular/common\";\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { DialogService } from \"app/shared/services/dialogs/dialog.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { EsignaturePopComponent } from \"../esignature-pop/esignature-pop.component\";\r\n\r\n@Component({\r\n  selector: \"app-upload-signature-or-esign\",\r\n  templateUrl: \"./upload-signature-or-esign.component.html\",\r\n  styleUrls: [\"./upload-signature-or-esign.component.scss\"],\r\n})\r\nexport class UploadSignatureOrEsignComponent implements OnInit {\r\n  isDone: boolean = false;\r\n  show: any;\r\n  // dialog: any;\r\n  accountId: any;\r\n  // apiService: any;\r\n  accountdetailsForStatusUpdate: any;\r\n  previousUrl: string = \"\";\r\n  // accountService: any;\r\n  customerId: any;\r\n  disableDone: boolean = true;\r\n  image: any;\r\n  imageURL1: any;\r\n  urlService: any;\r\n  selectedFile: any;\r\n  res: Object = { enable: false, image: null };\r\n  profileId: any;\r\n  isCardDigitalSigningDone: boolean;\r\n  isCardDigitalSigning: boolean;\r\n  esignUrl: any;\r\n  @ViewChild(\"profileFile\") profileFile: ElementRef;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private dialogService: DialogService,\r\n    private dialog: MatDialog,\r\n    public dialogRef: MatDialogRef<UploadSignatureOrEsignComponent>,\r\n    private ls: LocalStoreService,\r\n    private location: Location,\r\n    private snack: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isCardDigitalSigningDone = this.ls.getItem(\"CARD_DIGITAL_STAGE_DONE\");\r\n    this.isCardDigitalSigning = this.ls.getItem(\"CARD_DIGITAL_SIGN_DONE\");\r\n    this.image = this.ls.getItem(\"signedImage\");\r\n    if (this.image) {\r\n      this.imageURL1 = this.image;\r\n      // this.disableDone = false;\r\n    } else {\r\n      this.imageURL1 = \"not_available\";\r\n      //this.disableDone = true;\r\n    }\r\n    this.accountId = this.ls.getItem(\"cardId\");\r\n    // this.urlService.previousUrl$.subscribe((previousUrl: string) => {\r\n    //   this.previousUrl = previousUrl;\r\n    // });\r\n  }\r\n\r\n  close1() {\r\n    if (this.data.screen === \"NewCustomerOnboarding\") {\r\n      this.dialogRef.close(this.res);\r\n    } else {\r\n      this.dialogRef.close(true);\r\n      this.ls.setItem(\"enable\", this.ls.getItem('signedImage')?true:false);\r\n    }\r\n  }\r\n\r\n  openPopUp(data?: any) {\r\n    let response: any;\r\n    if (data === undefined || data === null) {\r\n      response = {\r\n        isSignLater: false,\r\n        screen: \"Create Account\",\r\n        accountId: this.accountId,\r\n        customerId: this.ls.getItem(\"cId\"),\r\n      };\r\n    }\r\n    if (!this.show) {\r\n      let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n        EsignaturePopComponent,\r\n        {\r\n          width: \"720px\",\r\n          disableClose: true,\r\n          data: data === undefined || data === null ? response : data,\r\n        }\r\n      );\r\n      dialogRef.afterClosed().subscribe((res) => {\r\n        console.log(\"dismiss res\", res);\r\n        if (res) {\r\n          this.imageURL1 = res?.image;\r\n          this.disableDone = res?.image ? false : true;\r\n          //this.res = true;\r\n          //this.isDone = true;\r\n          // this.getByAccountId(this.accountId);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  // getByAccountId(accountId: any) {\r\n  //   this.apiService.getByAccountId(accountId)\r\n  // .subscribe(resp => {\r\n  //   this.accountdetailsForStatusUpdate = resp;\r\n  //       this.updateAccountStatus(resp);\r\n  // });\r\n  // }\r\n\r\n  // updateAccountStatus(accData) {\r\n  //   accData.status = 'BACKLOG';\r\n  //   this.apiService.updateAccountStatusService(accData)\r\n  //   .subscribe(updateResp => {\r\n  //     console.log(\"updateResp:: \", updateResp);\r\n  //   });\r\n  // }\r\n\r\n  // goBack() {\r\n  //   this.ls.setItem('CARD_DIGITAL_STAGE_DONE', true);\r\n  //   this.ls.setItem('CARD_DIGITAL_SIGN_DONE', true);\r\n  //   this.ls.setItem('eSignStage', true);\r\n  //   this.location.back();\r\n  // }\r\n\r\n  onFileSelect(event) {\r\n    console.log(\"event -- \", event.target.files);\r\n    this.selectedFile = event.target.files[0];\r\n    console.log(this.selectedFile);\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    //   let extName=this.selectedFile.name;\r\n    //   const restArr=extName.split(\".\");\r\n    //  if(restArr[restArr.length-1]!=='xlsx'){\r\n    reader.onload = (event2) => {\r\n      this.imageURL1 = reader.result;\r\n    };\r\n\r\n    const cId: string = this.customerId;\r\n    const url: string = this.selectedFile;\r\n    const uploadData = new FormData();\r\n    const data = {\r\n      customerId: this.customerId,\r\n      documentName: \"Signature\",\r\n      documentType: \"10\",\r\n      fileType: event.type,\r\n      fileName: event.name,\r\n      verificationType: \"Digital Signing\",\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n    this.apiService.uploadDocument(uploadData).subscribe((res) => {\r\n      // console.log(res);\r\n      // this.disableDone = false;\r\n      if (res) {\r\n        // this.res = res;\r\n        // this.ls.setItem('signedImage', res.fileUrl);\r\n        // this.ls.setItem('enable', true);\r\n      }\r\n    });\r\n    // }else{\r\n    //   this.snack.open(\"Excel files cannot be uploaded!\", \"OK\", {\r\n    //     duration: 3000,\r\n    //     verticalPosition: \"top\",\r\n    //     horizontalPosition: \"right\",\r\n    //   });\r\n    // }\r\n  }\r\n  deleteImg() {\r\n    this.dialogService.doConfirmDialog(\"\").subscribe((response) => {\r\n      if (response == \"Yes\") {\r\n        this.ls.removeItem(\"signedImage\");\r\n        this.disableDone = true;\r\n        this.imageURL1 = \"not_available\";\r\n        this.profileFile.nativeElement.value = \"\";\r\n        this.apiService\r\n          .deleteCustomerDoc(this.customerId, this.profileId)\r\n          .subscribe((data) => {});\r\n        this.disableDone = true;\r\n        this.ls.setItem(\"enable\", false);\r\n      }\r\n    });\r\n  }\r\n\r\n  // resetState() {\r\n  //   this.ls.removeItem('appEntryStage');\r\n  //   this.ls.removeItem('ACC_DONE');\r\n  //   this.ls.removeItem('ACC_OPEN_DONE');\r\n  //   this.ls.removeItem('ACC_SERVICE_DONE');\r\n  //   this.ls.removeItem('ACC_MANDATE_DONE');\r\n  //   this.ls.removeItem('ACC_NOMINEE_DONE');\r\n\r\n  //   this.ls.removeItem('limitEntryStage');\r\n  //   this.ls.removeItem('LIMIT_SECURED_DONE');\r\n  //   this.ls.removeItem('LIMIT_UNSECURED_DONE');\r\n  //   this.ls.removeItem('LIMIT_FIN_DONE');\r\n\r\n  //   // Parent 3\r\n  //   this.ls.removeItem('enrichmentStage');\r\n  //   // Subnave of parent 3\r\n  //   this.ls.removeItem('ENRICHMENT_CHARGES_DONE');\r\n  //   this.ls.removeItem('ENRICHMENT_INTEREST_DONE');\r\n\r\n  //   // PArent 4\r\n  //   this.ls.removeItem('assessmentStage');\r\n  //   // Subnave of parent 4\r\n  //   this.ls.removeItem('ASSESSMENT_QA_DONE');\r\n  //   this.ls.removeItem('ASSESSMENT_REPORT_DONE');\r\n  //   // PArent 5\r\n  //   this.ls.removeItem('fundingStage');\r\n  //   // Subnave of parent 5\r\n  //   this.ls.removeItem('FUNDING_INI_DONE');\r\n\r\n  //   // Parent 6\r\n  //   this.ls.removeItem('approvalStage');\r\n  //   // Parent 6 childs nav\r\n  //   this.ls.removeItem('APPROVAL_DETAILS_DONE');\r\n  //   this.ls.removeItem('accountId');\r\n  //   this.ls.removeItem('eSignStage');\r\n  //   this.ls.removeItem('PRODUCT_CUSTOMER_ID');\r\n  //   this.ls.removeItem('accountType');\r\n  //   this.ls.removeItem('intrestFlag');\r\n  //   this.ls.removeItem('Status');\r\n  //   this.ls.removeItem(\"CIF_NUM_PRIMARY\");\r\n  //   this.ls.removeItem(\"cId\");\r\n  //   this.ls.removeItem(\"fundByStatus\");\r\n  //   this.ls.removeItem(\"overDraftByStatus\");\r\n  //   sessionStorage.clear();\r\n  //   this.accountService.refresh.next();\r\n  //   this.router.navigate(['/loan-account']);\r\n  // }\r\n  onSubmit() {\r\n    this.isDone = true;\r\n    this.dialogRef.close(true);\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\" fxLayoutAlign=\"end center\">\r\n    <button mat-icon-button (click)=\"close1()\" *ngIf=\"!isDone\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n    <button mat-icon-button (click)=\"close()\" *ngIf=\"isDone\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div fxFlex=\"100\" *ngIf=\"!isDone\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/esign.png\" alt=\"\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <div fxFlex=\"50\" fxFlexOffset=\"20px\" *ngIf=\"!isDone\">\r\n        <h5 class=\"text-center mt-16 size\">Signature!</h5>\r\n        <!-- <mat-card class=\"mat-elevation-z0\">\r\n            <mat-card-content> -->\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\r\n          <div class=\"sub-section-1\">\r\n            <button\r\n              class=\"scanButton\"\r\n              appearence=\"outline\"\r\n              (click)=\"openPopUp()\"\r\n            >\r\n              Digital Sign\r\n            </button>\r\n          </div>\r\n          <div class=\"sub-section-2\">\r\n            <button class=\"Upload scanButton\" (click)=\"fileInput.click()\">\r\n              Upload\r\n              <input\r\n                style=\"display: none\"\r\n                type=\"file\"\r\n                class=\"changeInput\"\r\n                required\r\n                (change)=\"onFileSelect($event)\"\r\n                #fileInput\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n          <div class=\"sub-section-1\">\r\n            <div class=\"insertDriveImg\">\r\n              <div *ngIf=\"imageURL1 == 'not_available'; else showAvatar\">\r\n                <img\r\n                  class=\"formImg\"\r\n                  [src]=\"'assets/images/no-image.jpg'\"\r\n                  alt=\"No Image\"\r\n                />\r\n              </div>\r\n              <ng-template #showAvatar>\r\n                <img class=\"formImg\" required [src]=\"imageURL1\" alt=\"\" />\r\n              </ng-template>\r\n            </div>\r\n            <!-- <button\r\n              mat-raised-button\r\n              style=\"margin-left: 300px\"\r\n              (click)=\"deleteImg()\"\r\n              [disabled]=\"imageURL1 === 'not_available' ? true : false\"\r\n            >\r\n              <mat-icon style=\"color: red\">delete</mat-icon>\r\n            </button> -->\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\r\n              <button mat-raised-button color=\"red\" class=\"dltbtn\" (click)=\"deleteImg()\" >\r\n                  DELETE\r\n              </button>\r\n              <button mat-raised-button color=\"primary\" class=\"dbtn\" (click)=\"onSubmit()\" [disabled]=\"disableDone\">\r\n                  SUBMIT\r\n              </button>  \r\n             </div>   \r\n          </div>\r\n        </div>\r\n        <!-- </mat-card-content>\r\n        </mat-card> -->\r\n        <!-- <div class=\"text-center\">\r\n          <button\r\n            mat-raised-button\r\n            class=\"Next\"\r\n            (click)=\"onSubmit()\"\r\n            [disabled]=\"disableDone\"\r\n          >\r\n            SUBMIT\r\n          </button>\r\n        </div> -->\r\n      </div>\r\n      <!-- <div fxFlex=\"50\" fxFlexOffset=\"20px\" *ngIf=\"isDone\" class=\"text-center\">\r\n        <div class=\"propic text-center\">\r\n          <img src=\"assets/images/esignlater.png\" alt=\"\" />\r\n        </div>\r\n        <br />\r\n        \r\n        <p *ngIf=\"accountId != null\">\r\n          Keep Card Number for your future Reference: <b>{{ accountId }}</b>\r\n        </p>\r\n        \r\n        <div class=\"text-center\">\r\n          <button mat-raised-button class=\"Next\" (click)=\"close1()\">\r\n            DONE\r\n          </button>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n// import { AccountService } from \"app/views/loan-account/account.service\";\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n\r\n@Component({\r\n  selector: \"app-charge-details\",\r\n  templateUrl: \"./charge-details.component.html\",\r\n  styleUrls: [\"./charge-details.component.scss\"],\r\n})\r\nexport class ChargeDetailsComponent implements OnInit {\r\n  interestForm: FormGroup;\r\n  accountId: any;\r\n  intrestFlag: Boolean;\r\n  interestResp: any;\r\n  accountType: String = \"Card Origin\";\r\n  resp: { intrestType: string; amount: string; waiver: string }[];\r\n  loanaccountID: any;\r\n  cardId: number;\r\n  currencytype:any;\r\n  currencySymbol: string;\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    console.log(history.state.amount);\r\n    \r\n    this.cardId = this.ls.getItem('cardId');\r\n    this.currencytype=localStorage.getItem('Currency Type');\r\n    if(this.currencytype===\"INR\"){\r\n      this.currencySymbol=\"₹\"\r\n    }else if(this.currencytype===\"USD\"){\r\n      this.currencySymbol=\"$\"\r\n    }else if(this.currencytype===\"CNY\"){\r\n      this.currencySymbol=\"¥\"\r\n    }else if(this.currencytype===\"GBP\"){\r\n      this.currencySymbol=\"£\"\r\n    }else if(this.currencytype===\"ZAR\"){\r\n      this.currencySymbol=\"R\"\r\n    }\r\n\r\n    this.interestForm = this.formBuilder.group({\r\n      chargeInfo: new FormArray([]),\r\n    });\r\n    this.api\r\n      .getFlexcubeDetails(\"chargeDetails\", this.accountType)\r\n      .subscribe((response) => {\r\n        this.onChangeInterest(response.length);\r\n        this.in.patchValue([{...response[0], amount: history.state.amount ? history.state.amount : ''}]);\r\n      });    \r\n\r\n    // this.api.cardChargeFetchById(this.cardId).subscribe((resp) => {\r\n    //   console.log(\"resp from backend \", this.resp);\r\n    //   this.resp = resp;\r\n    //   this.onChangeInterest(this.resp.length);\r\n    //   this.in.patchValue(this.resp);\r\n    // });\r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            amount: [\"\",Validators.required],\r\n            waiver: [false],\r\n            cardId: [this.cardId],\r\n            chargeDetailsId: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.chargeInfo as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\r\n      `/cardaccount/applicationEnrichment/intrest-details`,\r\n    ]);\r\n  }\r\n  appendPercentage(event) {\r\n    // console.log(event.key)\r\n    console.log(event.target.value);\r\n\r\n    if (!event.target.value.length) return;\r\n\r\n    if (event.target.value.length === 1) {\r\n      event.target.value = `${event.target.value}%`;\r\n    }\r\n    if (event.target.value.length > 1) {\r\n      event.target.value = `${event.target.value.slice(0, -1)}%`;\r\n    }\r\n  }\r\n\r\n  onSubmit(form) {\r\n    console.log(\"form\", form);\r\n    // form.chargeInfo = form.chargeInfo.map((chargeInfo) => ({\r\n    //   ...chargeInfo,\r\n    //   // loanAccountId: this.loanaccountID,\r\n    // }));\r\n\r\n    this.api.cardChargeDetailsSave(form).subscribe(\r\n      (resp) => {\r\n        this.snack.open(\"Charge Details Saved!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.next();\r\n        console.log(\"backend response from intrest saving\", resp);\r\n      },\r\n      (err) => {\r\n        this.snack.open(\r\n          \"Not able to connect to server!\",\r\n          \"INTERNAL SERVER ERROR\",\r\n          {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"chargeInfo detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n  checkbox(event) {\r\n    console.log(event.checked);\r\n  }\r\n  next() {\r\n    this.ls.setItem(\"CARD_CHARGE_DETAILS_DONE\", true);\r\n    this.ls.setItem('CARD_ENRICHMENT_DONE',true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/underwritingStage/list`]);\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/chargeDetails.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Charge Details</b></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\" class=\"m-333\">\r\n    <div class=\"mt-24\"></div>\r\n    <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\" class=\"chargeForm\">\r\n      <div class=\"spanDiv1\">\r\n        <span class=\"span\">Charge Details\r\n        </span>\r\n        <mat-divider class=\"divider\"></mat-divider>\r\n      </div>\r\n      <table class=\"cart-table default-bg mat-elevation-z0\">\r\n        <thead class=\"tr\">\r\n          <tr class=\"theadClass\">\r\n            <th>Interest Type</th>\r\n            <th>Amount</th>\r\n            <th>waiever</th>\r\n\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let chargeInfo of in.controls; let i = index\" class=\"tableRow\">\r\n            <ng-container [formGroup]=\"chargeInfo\">\r\n              <td>\r\n                <mat-form-field >\r\n                  <input class=\"input\" matInput formControlName=\"intrestType\" name=\"account_branch\"\r\n                     readonly />\r\n                </mat-form-field>\r\n              </td>\r\n              <td>\r\n                <mat-form-field >\r\n                  <span matPrefix>{{currencySymbol}}&nbsp;</span>\r\n                  <input \r\n                    class=\"input\" \r\n                    maxlength=\"10\"\r\n                    formControlName=\"amount\" \r\n                    (keypress)=\"onKeyPress($event)\" \r\n                    oninput=\"this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null\" matInput formControlName=\"amount\" name=\"account_branch\" \r\n                  />\r\n                </mat-form-field>\r\n              </td>\r\n              <td>\r\n                <div class=\"waiver-pos\">\r\n                  <mat-checkbox formControlName=\"waiver\" (change)='checkbox($event)' color=\"primary\"></mat-checkbox>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <a mat-button rounded  (click)=\"goBack()\">Back</a>\r\n    <span fxFlex></span>\r\n    <button class=\"Nextbtn\" mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"interestForm.invalid\"\r\n      (click)=\"onSubmit(interestForm.value)\">Next</button>\r\n  </div>\r\n\r\n</div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n@Component({\r\n  selector: 'app-assessment-stage',\r\n  templateUrl: './assessment-stage.component.html',\r\n  styleUrls: ['./assessment-stage.component.scss']\r\n})\r\nexport class AssessmentStageComponent implements OnInit {\r\n  isCardAssessmentStageDone:boolean=false;\r\n  isAssessmentReport:boolean=false;\r\n  cardId:any;\r\n\r\n  constructor(\r\n    private ls: LocalStoreService,private router: Router, private dialogService: DialogService, \r\n    private cdr: ChangeDetectorRef,\r\n     private accountService: AccountService, private apiService: ApiService\r\n  ) { }\r\n  \r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.isAssessmentReport=this.ls.getItem('CARD_ASSESSMENT_DONE');\r\n    this.isCardAssessmentStageDone=this.ls.getItem('CARD_ASSESSMENT_STAGE_DONE');\r\n  }\r\n\r\n  goToCardAssessmentSummary(){\r\n    this.dialogService.cardAccountAssessmentSummaryDialog();\r\n  }\r\n\r\n  openLoanQualitativeDialog(){\r\n    this.dialogService.loanQualitativeSummaryDialog();\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- <div fxFlex=\"100\" class=\"mt-8\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Entry Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\">\r\n                    View Summary\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n  \r\n\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <mat-card>\r\n          <mat-card-header>\r\n            <mat-card-title>1. Assessment Report</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div\r\n              fxLayout=\"row\"\r\n              fxLayoutGap=\"10px\"\r\n              fxLayoutAlign=\"space-between start\">\r\n              <div fxFlex=\"50%\"class=font1>\r\n                <p>\r\n                 The recommendation will be displayed with Approval or Rejection recommendation.\r\n                </p>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                <img [src]=\"'assets/images/svg/MaskGroup_13.svg'\" class=\"card-img\" />\r\n              </div>\r\n            </div>\r\n        \r\n            <div class=\"mb-1\" *ngIf=\"isAssessmentReport\">\r\n              <mat-progress-bar\r\n                [color]=\"'primary'\"\r\n                mode=\"determinate\"\r\n                [value]=\"100\"\r\n                class=\"rounded\"\r\n                style=\"height: 6px\">\r\n              </mat-progress-bar>\r\n              <p class=\"m-0 text-right\">Completed</p>\r\n              <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n            </div>\r\n       \r\n          </mat-card-content>\r\n    \r\n          <mat-divider></mat-divider>\r\n          <mat-card-actions>\r\n              <ng-container *ngIf=\"isAssessmentReport; else showAssessment\">\r\n                  <button mat-button (click)=\"goToCardAssessmentSummary()\" color=\"primary\">\r\n                    View Details <mat-icon>chevron_right</mat-icon>\r\n                  </button>\r\n              </ng-container>\r\n              \r\n              <ng-template #showAssessment>\r\n                  <button mat-button [routerLink]=\"['/cardaccount/assessmentStage/application-assessment/list']\" color=\"primary\">\r\n                     Add Details <mat-icon>chevron_right</mat-icon>\r\n                  </button>\r\n              </ng-template>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n    \r\n\r\n\r\n\r\n</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ApplicationEnrichmentComponent } from './application-enrichment/application-enrichment.component';\r\nimport { ChargeDetailsComponent } from './application-enrichment/charge-details/charge-details.component';\r\nimport { EnrichmentSummaryComponent } from './application-enrichment/enrichment-summary/enrichment-summary.component';\r\nimport { IntrestDetailsComponent } from './application-enrichment/intrest-details/intrest-details.component';\r\nimport { ApplicationEntryStageComponent } from './application-entry-stage/application-entry-stage.component';\r\nimport { CardAccountServicesComponent } from './application-entry-stage/card-account-services/card-account-services.component';\r\nimport { CardCustomerInformationComponent } from './application-entry-stage/card-customer-information/card-customer-information.component';\r\nimport { CardPrefrencesComponent } from './application-entry-stage/card-prefrences/card-prefrences.component';\r\nimport { CardInitiationComponent } from './application-entry-stage/card-initiation/card-initiation.component';\r\nimport { FinancialDetailsComponent } from './application-entry-stage/financial-details/financial-details.component';\r\nimport { AssessmentStageComponent } from './assessment-stage/assessment-stage.component';\r\nimport { CardAccountComponent } from './card-account.component';\r\nimport { DigitalSignNowOrLaterComponent } from './digital-signing/digital-sign-now-or-later/digital-sign-now-or-later.component';\r\nimport { DigitalSigningComponent } from './digital-signing/digital-signing.component';\r\nimport { UploadSignatureOrEsignComponent } from './digital-signing/upload-signature-or-esign/upload-signature-or-esign.component';\r\nimport { CardaccountApplicationAssessmentComponent } from './cardaccount-application-assessment/cardaccount-application-assessment.component';\r\nimport { DocumentDetailsComponent } from './document-upload/document-details/document-details.component';\r\nimport { DocumentUploadComponent } from './document-upload/document-upload.component';\r\nimport { ApprovalDetailsComponent } from './supervisor-approval-stage/approval-details/approval-details.component';\r\nimport { SupervisorApprovalStageComponent } from './supervisor-approval-stage/supervisor-approval-stage.component';\r\nimport { CardaccountQualitativeScoreboardComponent } from './underwriting-stage/cardaccount-qualitative-scoreboard/cardaccount-qualitative-scoreboard.component';\r\nimport { UnderwritingCreditRatingComponent } from './underwriting-stage/underwriting-credit-rating/underwriting-credit-rating.component';\r\nimport { UnderwritingStageComponent } from './underwriting-stage/underwriting-stage.component';\r\n// import { UploadLinkToEmailComponent } from './document-upload/upload-link-to-email/upload-link-to-email.component';\r\nimport { UnderwritingStageSummaryComponent } from './underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component';\r\n\r\n\r\nexport const CardAccountRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CardAccountComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'applicationEntryStage/list',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list',\r\n        component: ApplicationEntryStageComponent,\r\n      },\r\n      {\r\n        path: 'documentupload/list/document-details',\r\n        component: DocumentDetailsComponent,\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list/financialDetails',\r\n        component: FinancialDetailsComponent,\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list/customerInformation',\r\n        component: CardCustomerInformationComponent,\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list/accountServices',\r\n        component: CardAccountServicesComponent,\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list/cardPrefrence',\r\n        component: CardPrefrencesComponent,\r\n      },\r\n      {\r\n        path: 'applicationEntryStage/list/cardInitiation',\r\n        component: CardInitiationComponent,\r\n      },\r\n      {\r\n        path: 'documentupload/list',\r\n        component: DocumentUploadComponent,\r\n      },\r\n      // {\r\n      //   path: 'documentupload/link',\r\n      //   component: UploadLinkToEmailComponent,\r\n      // },\r\n      {\r\n        path: 'applicationEnrichment/list',\r\n        component: ApplicationEnrichmentComponent,\r\n      },\r\n      {\r\n        path: 'applicationEnrichment/intrest-details',\r\n        component: IntrestDetailsComponent,\r\n      },\r\n      {\r\n        path: 'applicationEnrichment/charge-details',\r\n        component: ChargeDetailsComponent,\r\n      },\r\n      {\r\n        path: 'applicationEnrichment/Summary',\r\n        component: EnrichmentSummaryComponent,\r\n      },\r\n      {\r\n        path: 'underwritingStage/list',\r\n        component: UnderwritingStageComponent,\r\n      },\r\n      {\r\n        path: 'underwritingStage/summary',\r\n        component: UnderwritingStageSummaryComponent,\r\n      },\r\n      {\r\n        path: 'underwritingStage/credit-rating',\r\n        component:UnderwritingCreditRatingComponent,\r\n      },\r\n      {\r\n        path:'underwritingStage/qualitative',\r\n        component:CardaccountQualitativeScoreboardComponent,\r\n      },\r\n      {\r\n        path: 'assessmentStage/list',\r\n        component: AssessmentStageComponent,\r\n      },\r\n      {\r\n        path:'assessmentStage/application-assessment/list',\r\n        component:CardaccountApplicationAssessmentComponent,\r\n      },\r\n      {\r\n        path: 'SupervisorApprovalStage/list',\r\n        component: SupervisorApprovalStageComponent,\r\n      },\r\n      {\r\n        path: 'SupervisorApprovalStage/list/approvalDetails',\r\n        component: ApprovalDetailsComponent,\r\n      },\r\n      {\r\n        path: 'DigitalSigning/list',\r\n        component: DigitalSigningComponent,\r\n      },\r\n      {\r\n        path: 'digitalsigning/options',\r\n        component: DigitalSignNowOrLaterComponent,\r\n      },\r\n      {\r\n        path: 'digitalsigning/upload',\r\n        component: UploadSignatureOrEsignComponent,\r\n      }\r\n  \r\n  \r\n    ]\r\n  }\r\n];","import { CUSTOM_ELEMENTS_SCHEMA, Component, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-acc-charge-det-sum',\r\n  templateUrl: './card-acc-charge-det-sum.component.html',\r\n  styleUrls: ['./card-acc-charge-det-sum.component.scss']\r\n})\r\nexport class CardAccChargeDetSumComponent implements OnInit {\r\n\r\n  form1: Boolean;\r\n  form2: Boolean;\r\n\r\n  chargeFormIT: FormGroup;\r\n  savingForm: FormGroup;\r\n  accountId: any;\r\n  // accountType: any;\r\n  resp: { intrestType: string; amount: string; waiver: string }[];\r\n  loanAccountId: any;\r\n  accountType: String = \"Home Loan\";\r\n  cardId: number;\r\n\r\n  constructor(\r\n    private snack: MatSnackBar,\r\n    private dialogRef: MatDialogRef<CardAccChargeDetSumComponent>,\r\n    private ls: LocalStoreService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.chargeFormIT = this.formBuilder.group({\r\n      chargeIT: new FormArray([]),\r\n    });\r\n\r\n    this.api\r\n      .getFlexcubeDetails(\"chargeDetails\", this.accountType)\r\n      .subscribe((response) => {\r\n        this.onChangeInterest(response.length);\r\n        this.in.patchValue(response);\r\n      });\r\n\r\n    this.api.cardChargeFetchById(this.cardId).subscribe((resp) => {\r\n      console.log(\"resp from backend \", this.resp);\r\n      this.resp = resp;\r\n      this.onChangeInterest(this.resp.length);\r\n      this.in.patchValue(this.resp);\r\n    });\r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            amount: [\"\"],\r\n            waiver: [false],\r\n            cardId: [this.cardId],\r\n            createdDate: [\"\"],\r\n            craetedBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.chargeFormIT.controls;\r\n  }\r\n  get in() {\r\n    return this.f.chargeIT as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/cardaccount/applicationEnrichment/list\"]);\r\n  }\r\n\r\n  onSubmit(form) {}\r\n  edit() {\r\n    const amount = this.chargeFormIT.controls['chargeIT'].value.at(-1)['amount']\r\n    console.log({amount});\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/cardaccount/applicationEnrichment/charge-details`],{state: {amount}});\r\n  }\r\n\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"charge detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  close(){\r\n    this.router.navigate([\"/cardaccount/applicationEnrichment/list\"]);\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<!-- <p>card-acc-charge-det-sum works!</p>\r\n<mat-card>\r\n\t<mat-card-header>\r\n\t\t<mat-card-title>Title</mat-card-title>\r\n\t\t<mat-card-subtitle>Subtitle</mat-card-subtitle>\r\n\t</mat-card-header>\r\n\t<img matCardImage src=\"Card wide image source\">\r\n\t<mat-card-content>\r\n\t\tText content\r\n\t</mat-card-content>\r\n\t<mat-card-actions align=\"start\">\r\n\t\t<button mat-button (click)=\"onAction1\">Action1</button>\r\n\t\t\r\n\t</mat-card-actions>\r\n\t<mat-card-footer>\r\n\t\tFooter\r\n\t</mat-card-footer>\r\n</mat-card> -->\r\n\r\n<mat-card class=\"matCard\">\r\n  <button mat-button id=\"close\" mat-dialog-close>\r\n    <mat-icon class=\"closeicon\">close</mat-icon>\r\n  </button>\r\n  <div class=\"spanDiv1\">\r\n    <span class=\"paraFont\">Charge Details Summary\r\n\r\n    </span>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"main\">\r\n    <div fxFlex=\"100\">\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"chargeFormIT\" [formGroup]=\"chargeFormIT\">\r\n        <table class=\"cart-table default-bg mat-elevation-z0\">\r\n          <tbody>\r\n            <tr class=\"mt-4\" *ngFor=\"let chargeIT of [in.controls[in.controls.length - 1]]; let i = index\" class=\"form\">\r\n              <div class=\"row\" >\r\n                <ng-container [formGroup]=\"chargeIT\">\r\n                  <div class=\"heading\">\r\n                    <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />\r\n                  </div>\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Amount</mat-label>\r\n                      <input matInput formControlName=\"amount\" #amount name=\"account_branch\" class=\"input\" readonly />\r\n                    </mat-card>\r\n                  </td>\r\n                </ng-container>\r\n              </div>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <span class=\"spanDiv\" (click)=\"edit()\">Edit</span>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-digitalsign-summary',\r\n  templateUrl: './digitalsign-summary.component.html',\r\n  styleUrls: ['./digitalsign-summary.component.scss']\r\n})\r\nexport class DigitalsignSummaryComponent implements OnInit {\r\n  cardId:any;\r\n  accountInfo: any;\r\n  imageUrl: any;\r\n  constructor( private router: Router,private ls: LocalStoreService, private api: ApiService, private loader: AppLoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    console.log(this.cardId)\r\n     this.cardId = this.ls.getItem('cardId');\r\n     console.log(this.cardId)\r\n     this.getDigitalsignByCardId(this.cardId);\r\n    //  if(this.accountInfo){\r\n    //   this.accountId=this.accountInfo.businessProductAccount.accountId\r\n    //   }\r\n    \r\n  }\r\n  getDigitalsignByCardId(cardId) {\r\n    this.api.getDigitalsignByCardId(cardId).subscribe((resp) => {\r\n      console.log(resp)\r\n        console.log(resp[0].fileUrl);\r\n       this.imageUrl = resp[0].fileUrl\r\n      this.loader.close();\r\n    }, (err: any) => {\r\n      // this.loader.close();\r\n    }); \r\n  }\r\n\r\n  \r\n\r\n}\r\n","<div fxLayoutAlign=\"end stretch\" mat-dialog-close class=\"close\"><mat-icon>close</mat-icon></div>\r\n<div class=\"approval-details\">\r\n <fieldset>\r\n  <legend visible=\"true\" clas=\"paraFont\">Digital Signing</legend>\r\n </fieldset>\r\n <mat-card class=\"card\">\r\n    <div>\r\n        <div>\r\n            <img [src]=\" this.imageUrl\" alt=\"No Image\">\r\n        </div>\r\n       \r\n    </div>\r\n </mat-card>\r\n<p class=\"editButton\" mat-dialog-close \r\n[routerLink]=\"['/cardaccount/digitalsigning/options']\"\r\n>Edit</p>\r\n</div>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CurrencyPipe, Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\nimport { Console } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-cardaccount-application-assessment',\r\n  templateUrl: './cardaccount-application-assessment.component.html',\r\n  styleUrls: ['./cardaccount-application-assessment.component.scss'],\r\n})\r\nexport class CardaccountApplicationAssessmentComponent implements OnInit {\r\n  currency: string;\r\n  public assessmentForm: FormGroup;\r\n  isAssessmentReport: boolean = false;\r\n  arrayUserRecommendation = [\r\n    'Recommended For Approval',\r\n    'Pending For Documents',\r\n    'Recommended for Review',\r\n  ];\r\n  arraySystemRecommendation = [\r\n    'Recomended For Approval',\r\n    'Recommended For Reject',\r\n  ];\r\n  cardId: any;\r\n  curr: string = '';\r\n  isCardAssessmentStageDone: boolean = false;\r\n  requestedCardLimit: any;\r\n  recommendedCardLimit: any;\r\n  approvedCardLimit: string;\r\n  currencySymboll: string;\r\n  currencySymbol: boolean = true;\r\n  //    currency_symbols = {\r\n  //     'USD': '$', // US Dollar\r\n  //     'EUR': '€', // Euro\r\n  //     'GBP': '£', // British Pound Sterling\r\n  //     'ILS': '₪', // Israeli New Sheqel\r\n  //     'INR': '₹', // Indian Rupee\r\n  //     'JPY': '¥', // Japanese Yen\r\n  //     'KRW': '₩', // South Korean Won\r\n  //     'NGN': '₦', // Nigerian Naira\r\n  //     'PHP': '₱', // Philippine Peso\r\n  //     'PLN': 'zł', // Polish Zloty\r\n  //     'PYG': '₲', // Paraguayan Guarani\r\n  //     'THB': '฿', // Thai Baht\r\n  //     'UAH': '₴', // Ukrainian Hryvnia\r\n  //     'VND': '₫', // Vietnamese Dong\r\n  //     'CNY': '¥', // Chinese Yuan Currency\r\n  //     'ZAR': 'R', // South Africa Rand\r\n  // };\r\n  //localCurrencyArr=['CNY','GBP','INR','USD','ZAR','GBP'];\r\n  currencySymbols=[\r\n    {currency:'USD', symbol:'$'},{currency:'EUR', symbol:'€'},\r\n    {currency:'JPY', symbol:'¥'},\r\n    {currency:'GBP', symbol:'£'},\r\n    {currency:'ILS', symbol:'₪'},\r\n    {currency:'KRW', symbol:'₩'},\r\n    {currency:'NGN', symbol:'₦'},\r\n    {currency:'PHP', symbol:'₱'},\r\n    {currency:'PLN', symbol:'zł'},\r\n    {currency:'THB', symbol:'฿'},\r\n    {currency:'UAH', symbol:'₴'},\r\n    {currency:'VND', symbol:'₫'},\r\n    {currency:'CNY', symbol:'¥'},\r\n    { currency: 'ZAR', symbol: 'R'},\r\n    {currency:'INR', symbol:'₹'},\r\n  ]\r\n  currencyArr: { currency: string; symbol: string; }[];\r\n  currencytype: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private cdr: ChangeDetectorRef,\r\n    private apiService: ApiService,\r\n    private _location: Location,\r\n    private ls: LocalStoreService,\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private currencyPipe: CurrencyPipe\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.curr = localStorage.getItem('Currency Type');\r\n    this.cardId = this.ls.getItem('cardId');\r\n    this.isAssessmentReport = this.ls.getItem('CARD_ASSESSMENT_DONE');\r\n    this.isCardAssessmentStageDone = this.ls.getItem(\r\n      'CARD_ASSESSMENT_STAGE_DONE'\r\n    );\r\n    this.buildAssessmentForm({});\r\n    if (this.isAssessmentReport == false) {\r\n      this.buildAssessmentForm();\r\n    } else {\r\n      this.getCardAssessmentDetails();\r\n    }\r\n  }\r\n\r\n  buildAssessmentForm(item?, isResponse?: boolean) {\r\n    this.assessmentForm = this.fb.group({\r\n      // cardId:[data?data.cardId:'952'],\r\n      // agencyId:[data?data.agencyId : 0],\r\n      // cardId:[item?item.cardId:'1'],\r\n      // assessmentId:[item?item.assessmentId:'1'],\r\n\r\n      cardId: [this.cardId],\r\n      assessmentId: [(item.assessmentId = '1')],\r\n      requestedCardLimit: [(item.requestedCardLimit = '15000')],\r\n      systemRecommendation: [\r\n        // (item.systemRecommendation = 'Recommended for Approval'),[Validators.required]\r\n        item ? item.systemRecommendation : '',\r\n        [Validators.required],\r\n      ],\r\n      approvedCardLimit: [(item.approvedCardLimit = '10000')],\r\n      // requestedCardLimit: [item ? item.requestedCardLimit: ' ₹ 15000'],\r\n      // systemRecommendation:[item ? item.systemRecommendation:'Recommended for Approval'],\r\n      // approvedCardLimit:[item ? item.approvedCardLimit: '10000'],\r\n      userRecommendation: [\r\n        item ? item.userRecommendation : '',\r\n        [Validators.required],\r\n      ],\r\n      recommendedCardLimit: [\r\n        item ? item.recommendedCardLimit : '',\r\n        [Validators.required],\r\n      ],\r\n      remark: [item ? item.remark : ''],\r\n    });\r\n    console.log('curr', this.curr);\r\n    if (item) {\r\n      // if (this.curr === 'INR') {\r\n      //   //this.recommendedCardLimit = \"₹\" + ' ' + this.assessmentForm.value.recommendedCardLimit;\r\n      //   this.approvedCardLimit =\r\n      //     '₹' + ' ' + this.assessmentForm.value.approvedCardLimit;\r\n      //   this.requestedCardLimit =\r\n      //     '₹' + ' ' + this.assessmentForm.value.requestedCardLimit;\r\n      //   this.currencySymboll = '₹' + ' ';\r\n      //   console.log('reccommendedCardLimit:', this.recommendedCardLimit);\r\n      // } else {\r\n      //   // this.recommendedCardLimit = \"$\" + ' ' + this.assessmentForm.value.recommendedCardLimit;\r\n      //   this.approvedCardLimit =\r\n      //     '$' + ' ' + this.assessmentForm.value.approvedCardLimit;\r\n      //   this.requestedCardLimit =\r\n      //     '$' + ' ' + this.assessmentForm.value.requestedCardLimit;\r\n      //   this.currencySymboll = '$' + ' ';\r\n      // }\r\n      for(let i=0;i<this.currencySymbols.length;i++){\r\n        this.currencyArr= this.currencySymbols.filter((fltered)=>{\r\n         return this.curr===fltered.currency;\r\n        })\r\n        console.log(\"this.currencyArr\",this.currencyArr);\r\n      }\r\n      this.currencySymboll = this.currencyArr[0].symbol;  \r\n      this.approvedCardLimit = this.currencySymboll + ' ' + this.assessmentForm.value.approvedCardLimit;\r\n      this.requestedCardLimit = this.currencySymboll + ' ' + this.assessmentForm.value.requestedCardLimit;\r\n      \r\n\r\n\r\n      //  this.assessmentForm.controls.recommendedCardLimit.setValue(this.curr);\r\n      this.assessmentForm.controls.approvedCardLimit.setValue(\r\n        this.approvedCardLimit\r\n      );\r\n      this.assessmentForm.controls.requestedCardLimit.setValue(\r\n        this.requestedCardLimit\r\n      );\r\n      // this.assessmentForm.controls.recommendedCardLimit.setValue(this.recommendedCardLimit);//editable field\r\n    }\r\n  }\r\n\r\n  transformAmount(element) {\r\n    if (this.curr === 'INR') {\r\n      console.log(this.currencySymbol);\r\n      this.currencySymboll = this.currencyPipe.transform(\r\n        this.currencySymboll,\r\n        '₹'\r\n      );\r\n      console.log(this.currencySymbol);\r\n      element.target.value = this.currencySymboll;\r\n    } else {\r\n      this.currencySymboll = this.currencyPipe.transform(\r\n        this.currencySymboll,\r\n        '$'\r\n      );\r\n      element.target.value = this.currencySymboll;\r\n    }\r\n    console.log(element.target.value);\r\n  }\r\n\r\n  keyUpEvent(event: any, flag) {\r\n    console.log('event', event.target.value);\r\n    // var final=event.target.value+ this.currencySymboll;\r\n    let finalNum = event.target.value.toString().replace(/,/g, '').split('.');\r\n    finalNum[0] = finalNum[0].replace(\r\n      /\\B(?=(\\d{1})+(?!\\d))/g,\r\n      this.currencySymboll\r\n    );\r\n    let final = finalNum.join('.');\r\n    // let final = finalNum.slice(0, 5);\r\n    console.log('final', final);\r\n    console.log('finalLength', final.length);\r\n    //this.assessmentForm.controls.recommendedCardLimit.setValue(this.currencySymboll);\r\n    this.assessmentForm.controls.recommendedCardLimit.setValue(final);\r\n  }\r\n\r\n  _keyPress1(event: any) {\r\n    const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    const input = event.target.value;\r\n    if (input.length === 0 && event.which === 48) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  getCardAssessmentDetails() {\r\n    this.apiService\r\n      .fetchcardAssessmentDetailsById(this.cardId)\r\n      //this.apiService.fetchcardAssessmentDetails()\r\n      .subscribe((resp: any) => {\r\n        console.log(resp);\r\n        this.buildAssessmentForm(resp, true);\r\n      });\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  goNext(val) {\r\n    console.log('val', val.approvedCardLimit);\r\n    console.log('val.approvedCardLimit', val.approvedCardLimit.length);\r\n    console.log('val', val.recommendedCardLimit);\r\n    val.approvedCardLimit = val.approvedCardLimit.slice(\r\n      2,\r\n      val.approvedCardLimit.length - 1\r\n    );\r\n    val.requestedCardLimit = val.requestedCardLimit.slice(\r\n      2,\r\n      val.requestedCardLimit.length - 1\r\n    );\r\n    let num = val.recommendedCardLimit.length;\r\n    var final = val.recommendedCardLimit.slice(1, num - 3);\r\n    console.log('final', final);\r\n    final = this.removeComma(final);\r\n    console.log('final', final);\r\n    val.recommendedCardLimit = final;\r\n    this.apiService.cardAssessmentDetails(val).subscribe((data) => {\r\n      console.log('data', data);\r\n      if (data != null) {\r\n        this.snack.open('Assessment details saved successfully!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n    this.next();\r\n  }\r\n  removeComma(num: any) {\r\n    var numb = num.replace(/,/g, '');\r\n    console.log('numb', numb);\r\n    return numb;\r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem('CARD_ASSESSMENT_DONE', true);\r\n    this.ls.setItem('CARD_ASSESSMENT_STAGE_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/SupervisorApprovalStage/list`]);\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/cardaccount/assessmentStage/list`]);\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/MaskGroup_13.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Assessment Report</b></div>\r\n    </div>\r\n  </div>\r\n\r\n  <!--Assessment Details starts here-->\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">\r\n          Assessment Details<mat-divider></mat-divider>\r\n        </div>\r\n      </mat-card-title>\r\n\r\n      <div>\r\n        <form [formGroup]=\"assessmentForm\">\r\n          <div fxLayout=\"column\">\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\"class=\"field\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Requested Card Limit *</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"requestedCardLimit\"\r\n                    (keypress)=\"_keyPress1($event)\"\r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                    placeholder=\"Requested Card Limit\"\r\n                    readonly\r\n                  />\r\n                  <!-- {{curr }} {{requestedCardLimit }} -->\r\n                  <!--  {{curr }} {{requestedCardLimit | number: '1.' }} -->\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"48%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">System Recommendation</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <mat-select\r\n                    formControlName=\"systemRecommendation\"\r\n                    placeholder=\"Select\"\r\n                  >\r\n                   <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"\r\n                        let systemRecommendation of arraySystemRecommendation\r\n                      \"\r\n                      [value]=\"systemRecommendation\"\r\n                    >\r\n                      {{ systemRecommendation }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <!-- <input matInput formControlName=\"loanTenure\" class=\"alignment\" type=\"text\" readonly/>{{accountDetails?.loanTenure}} -->\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\"class=\"field\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">User Recommendation *</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <mat-select\r\n                    formControlName=\"userRecommendation\"\r\n                    placeholder=\"Select\"\r\n                  >\r\n                   <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option\r\n                      *ngFor=\"let userRecommendation of arrayUserRecommendation\"\r\n                      [value]=\"userRecommendation\"\r\n                    >\r\n                      {{ userRecommendation }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !assessmentForm.get('userRecommendation').valid &&\r\n                    assessmentForm.get('userRecommendation').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Please select the User Recommendation\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"48%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Recommended Card Limit</mat-label>\r\n                \r\n                <!-- <mat-card fxLayout=\"row wrap\"> -->\r\n                  <span fxFlex=\"4\">{{currencySymboll}}</span>\r\n                  <input fxFlex=\"96\"\r\n                    matInput\r\n                    formControlName=\"recommendedCardLimit\"\r\n                    (keypress)=\"_keyPress1($event)\"\r\n                    (blur)=\"transformAmount($event)\"\r\n                    \r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                    required\r\n                  />\r\n                  <!-- < [ngClass]=\"{'currencySymbol' : true}\"\r\n                input type=\"text\" (blur)=\"transformAmount($event)\" [(ngModel)]=\"formattedAmount\"  /> \r\n                (blur)=\"transformAmount($event)\"  (keyup)=\"keyUpEvent($event,true)\" -->\r\n                  <!-- {{curr }} {{recommendedCardLimit | number: '1.' }} -->\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"assessmentForm.get('recommendedCardLimit').touched &&\r\n                  assessmentForm.get('recommendedCardLimit').value == 0\">\r\n                  &nbsp;&nbsp; Please enter valid Recommended Card Limit\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\"class=\"field\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Approved Card Limit</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"approvedCardLimit\"\r\n                    (keypress)=\"_keyPress1($event)\"\r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                    placeholder=\"Approved Card Limit\"\r\n                    readonly\r\n                    required\r\n                  />\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"48%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Remarks</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Remarks\"\r\n                    formControlName=\"remark\"\r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                  />\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n                <!-- <mat-error\r\n                  *ngIf=\"\r\n                    !assessmentForm.get('remark').valid &&\r\n                    assessmentForm.get('remark').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Please enter the remarks\r\n                </mat-error> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n         \r\n        </form>\r\n      </div>\r\n    </mat-card>\r\n    <div fxLayout=\"row\"\r\n    fxLayoutAlign=\"space-between center\"\r\n    fxLayoutGap=\"16px\"\r\n    class=\"mt-32\">\r\n      <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n        Back\r\n      </button>\r\n      <button\r\n        mat-stroked-button\r\n        class=\"Nextbtn\"\r\n        [disabled]=\"!assessmentForm.valid\"\r\n        (click)=\"goNext(assessmentForm.value)\"\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n// import { AccountService } from 'app/views/loan-account/account.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-intrest-details',\r\n  templateUrl: './intrest-details.component.html',\r\n  styleUrls: ['./intrest-details.component.scss']\r\n})\r\nexport class IntrestDetailsComponent implements OnInit {\r\n\r\n  interestForm: FormGroup;\r\n  accountId: any;\r\n  intrestFlag: Boolean;\r\n  interestResp: any;\r\n  showEditOption: boolean = false;\r\n  resp: {\r\n    intrestType: string;\r\n    intrestRateApplicable: string;\r\n    marginIn: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  accountType: String = \"Card Origin\";\r\n  cardId: number;\r\n  \r\n  constructor(\r\n    private accountService: AccountService,\r\n    private snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private loader: AppLoaderService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    let isCardInterestDetails = this.ls.getItem('CARD_INTEREST_DETAILS_DONE');\r\n    this.getInterestDetails();\r\n    if (this.cardId != null && isCardInterestDetails) {\r\n      this.showEditOption = true;\r\n      \r\n      this.getInterestDetails();\r\n    } \r\n    else {\r\n      console.log(\"else\");\r\n      this.showEditOption = false;\r\n      this.api\r\n      .getFlexcubeDetails(\"intrestDetails\", this.accountType)\r\n      .subscribe((response) => {\r\n        this.onChangeInterest(response.length);\r\n        this.in.patchValue(response);\r\n      });\r\n    }\r\n\r\n    this.interestForm = this.formBuilder.group({\r\n      interestInfo: new FormArray([]),\r\n    });\r\n  \r\n  }\r\n\r\n  getInterestDetails(){\r\n    // this.loader.open();\r\n    // this.cardId=this.ls.getItem('cardId');\r\n    // console.log(this.cardId)\r\n    this.cardId = this.cardId;\r\n    this.api.cardInterestFetchById(this.cardId).subscribe((resp) => {\r\n      this.loader.close();\r\n      console.log(\"resp from backend \", this.resp);\r\n      this.resp = resp;\r\n      this.onChangeInterest(this.resp.length);\r\n      this.in.patchValue(this.resp);\r\n    }, (err: any) => {\r\n      // this.loader.close();\r\n    }); \r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"Fixed Rate\", Validators.required],\r\n            intrestRateApplicable: [5.0, Validators.required],\r\n            marginIn :[null,[Validators.required, Validators.max(100), Validators.min(0)],],\r\n            effectiveRate: [10.0,[Validators.required, Validators.max(100), Validators.min(0)],],\r\n            cardInterestId: [\"\"],\r\n            cardId: [this.cardId],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interestInfo as FormArray;\r\n  }\r\n\r\n  appendPercentage(event) {\r\n    // console.log(event.key)\r\n    console.log(event.target.value);\r\n\r\n    if (!event.target.value.length) return;\r\n\r\n    if (event.target.value.length === 1) {\r\n      event.target.value = `${event.target.value}%`;\r\n    }\r\n    if (event.target.value.length > 1) {\r\n      event.target.value = `${event.target.value.slice(0, -1)}%`;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.interestForm.value)\r\n    this.api.cardintrestDetailsSave(this.interestForm.value).subscribe(\r\n      (resp) => {\r\n        this.snack.open(\"Interest Details Saved!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.next();\r\n        console.log(\"backend response from intrest saving\", resp);\r\n      },\r\n      (err) => {\r\n        this.snack.open(\r\n          \"Not able to connect to server!\",\r\n          \"INTERNAL SERVER ERROR\",\r\n          {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          }\r\n        );\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem('CARD_INTEREST_DETAILS_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/applicationEnrichment/charge-details`]);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\r\n      `/cardaccount/applicationEnrichment/list`,\r\n    ]);\r\n  }\r\n\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"Interest detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/loanInterest.svg\" alt=\"\" class=\"w-80\" />\r\n    </div>\r\n\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Interest Details</b></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"m-333\">\r\n\r\n    <div class=\"mt-24\"></div>\r\n    <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\" class=\"chargeForm\">\r\n      <div class=\"spanDiv1\">\r\n        <span class=\"span\">\r\n          Interest Details\r\n        </span>\r\n        <mat-divider class=\"divider\"></mat-divider>\r\n      </div>\r\n      <table class=\"cart-table default-bg mat-elevation-z0\">\r\n        <thead class=\"tr\">\r\n          <tr class=\"theadClass\">\r\n            <!-- <th>Rate Code</th> -->\r\n            <th>Interest Type</th>\r\n            <th>Interest Rate Applicable</th>\r\n            <th>Margin in %</th>\r\n            <th>Effective Rate %</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let interestInfo of in.controls; let i = index\" class=\"tableRow\">\r\n\r\n            <ng-container [formGroup]=\"interestInfo\">\r\n              <td>\r\n                <mat-card class=\"matCardBox-form\">\r\n                  <input class=\"input\" matInput formControlName=\"intrestType\" name=\"intrestType\"\r\n                    placeholder=\"Interest Type\" readonly />\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox-form box1\">\r\n                  <input class=\"inputPercent\" matInput formControlName=\"intrestRateApplicable\" name=\"intrestRateApplicable\"\r\n                    placeholder=\"Interest Rate Applicable\"readonly />\r\n                    <span matSuffix>%</span>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox-form box1\">\r\n                  <input class=\"inputPercent\" matInput formControlName=\"marginIn\" name=\"margin\" \r\n                    placeholder=\"Margin\" readonly />\r\n                    <span matSuffix>%</span>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox-form box1\">\r\n                  <input class=\"inputPercent\" matInput formControlName=\"effectiveRate\" name=\"effectiveRate\"\r\n                    placeholder=\"Effective Rate\" value=\"\" readonly />\r\n                    <span matSuffix>%</span>\r\n                </mat-card>\r\n              </td>\r\n            </ng-container>\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  </div>\r\n\r\n  <!-- <div fxFlex=\"100\" class=\"mt-16\">\r\n    <a mat-button rounded color=\"primary\" (click)=\"goBack()\">Back</a>\r\n    <span fxFlex></span>\r\n    <button mat-raised-button color=\"primary\" type=\"button\"\r\n      (click)=\"onSubmit()\">Next</button>\r\n  </div> -->\r\n\r\n  \r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <a mat-button rounded (click)=\"goBack()\">Back</a>\r\n    <span fxFlex></span>\r\n    <button class=\"Nextbtn\" mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"interestForm.invalid\"\r\n      (click)=\"onSubmit()\">Next</button>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DigitalsignSummaryComponent } from './digitalsign-summary/digitalsign-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-digital-signing',\r\n  templateUrl: './digital-signing.component.html',\r\n  styleUrls: ['./digital-signing.component.scss']\r\n})\r\nexport class DigitalSigningComponent implements OnInit {\r\n\r\n  informations = [\r\n    {\r\n      'id':1,\r\n      'title': '1. Digital Signing',\r\n      'content':\"Customer can either sign now or sign later\",\r\n      'percentage':70,\r\n      'status':'Pending',\r\n      'state': 'application/digital-sign/options',\r\n      'avatar':\"assets/images/esign.jpg\"\r\n\r\n    }\r\n  ];\r\n\r\n  accountId:any;\r\n  isEsignScreen:boolean = false;\r\n  accountService: any;\r\n  constructor(private router:Router,private ls: LocalStoreService,public dialog: MatDialog,private cdr:ChangeDetectorRef) { }\r\n\r\n  ngOnInit(){\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.isEsignScreen = this.ls.getItem('eSignStage');\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      this.isEsignScreen = this.ls.getItem('eSignStage');\r\n    \r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  goToDetail(item){\r\n    console.log(item);\r\n    this.router.navigate([`/home/${item.state}`]);\r\n  }\r\n  goToDigitalSign() {\r\n    const dialogRef = this.dialog.open(DigitalsignSummaryComponent, { \r\n      height: '55%',\r\n      width: '40%',\r\n      disableClose: true });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n    })\r\n\r\n  }\r\n\r\n}","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- <div fxFlex=\"100\" class=\"mt-8\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Entry Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\">\r\n                    View Summary\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n        <!-- Card 1 start-->\r\n        <mat-card>\r\n            <mat-card-header>\r\n                <mat-card-title>1.Digital Signing</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                       <div fxFlex=\"50%\" class=\"txtclr\">\r\n                            <p> Customer can either sign now or sign later.</p>\r\n                       </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/Mask Group 55.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <div class=\"mb-1\" *ngIf=\"isEsignScreen\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div>\r\n                <!--end::Progress-->\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isEsignScreen\">\r\n                    <button mat-button (click)=\"goToDigitalSign()\" color=\"primary\" class=\"pl-27\">\r\n                      View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                  </ng-container>\r\n          \r\n                  <a mat-button \r\n                  [routerLink]=\"['/cardaccount/digitalsigning/options']\"\r\n                       *ngIf=\"!isEsignScreen\" color=\"primary\" class=\"pl-27\">\r\n                    Add Details <mat-icon>chevron_right</mat-icon>\r\n                  </a>\r\n                <!-- <ng-container> -->\r\n                    <!-- <a\r\n                      mat-button\r\n                      [routerLink]=\"['/cardaccount/digitalsigning/options']\"\r\n                      color=\"primary\"\r\n                    >\r\n                    {{ isEsignScreen ? \"Show Details\" : \"Add Details\" }}\r\n                    <mat-icon>chevron_right</mat-icon>\r\n                    </a> -->\r\n                    <!-- <button mat-button color=\"primary\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button> -->\r\n                <!-- </ng-container> -->\r\n\r\n                <!-- <ng-template #showLoan>\r\n                    <button mat-button color=\"primary\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template> -->\r\n\r\n\r\n            </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n\r\n\r\n</div>","<div class=\"matcard-size\">\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/Mask Group 6.svg\" alt=\"\" class=\"w-90\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Document Details</b></div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n        <h2 class=\"ml-16\">Document Details</h2>\r\n        <div class=\"mt-24\"></div>\r\n    <mat-card *ngFor=\"let item of docholder; let m=index;\">\r\n        <label><span style=\"font-size: 20px;\">Customer Name({{m+1}}/{{docholder.length}}) :</span>&nbsp;&nbsp; {{item.firstName}}&nbsp;{{item?.middleName}}&nbsp;{{item.lastName}}</label>\r\n        <div>\r\n             <app-genric-document-upload [screenInfo]=\"screenInfo[m]\"></app-genric-document-upload>\r\n            \r\n       \r\n        </div>\r\n  \r\n    </mat-card>\r\n    </div>\r\n    <!-- <div>\r\n        <table>\r\n            <tr>\r\n                <td>\r\n\r\n                    <button  mat-raised-button type=\"button\"\r\n                        id=\"auto_trigger\">\r\n                        <mat-icon color=\"primary\">add</mat-icon>DOCUMENT\r\n                    </button>\r\n\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div> -->\r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n        <button mat-stroked-button  (click)=\"goBack()\">BACK</button>\r\n        <span fxFlex></span>\r\n        <button class=\"Nextbtn\" mat-raised-button color=\"primary\" [disabled]=\"disableNextAtIndex1\" type=\"button\" (click)=\"goNext()\">Next</button>\r\n    \r\n    </div>\r\n</div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatTabChangeEvent } from \"@angular/material/tabs\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { WebcamImage } from \"ngx-webcam\";\r\nimport { Subject, Observable, Subscription } from \"rxjs\";\r\nimport Swal from 'sweetalert2'\r\nimport { HttpClient, HttpEventType } from \"@angular/common/http\";\r\nimport { ApiService, LINK_URL } from \"app/shared/services/api.service\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MatProgressBar } from \"@angular/material/progress-bar\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { createWorker } from 'tesseract.js';\r\nimport { Worker } from 'tesseract.js';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { CutomerFingerPrintComponent } from 'app/views/others/cutomer-finger-print/cutomer-finger-print.component';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { SucessMessageComponent } from '../sucess-message/sucess-message.component';\r\nimport { DocumentOcrService } from 'app/views/others/genric-document-upload/document-ocr.service';\r\n@Component({\r\n  selector: 'app-document-details',\r\n  templateUrl: './document-details.component.html',\r\n  styleUrls: ['./document-details.component.scss']\r\n})\r\nexport class DocumentDetailsComponent implements OnInit {\r\n  documentForm: FormGroup;\r\n  public webcamImage: WebcamImage = null;\r\n  public webcamImage1: WebcamImage = null;\r\n  scan1: boolean;\r\n  scan2: boolean;\r\n  scan3: boolean;\r\n  scan1Array: boolean[] = [];\r\n  scan2Array: boolean[] = [];\r\n  scan3Array: boolean[] = [];\r\n  public customerId: string = null;\r\n  selectedFiles: any;\r\n  fileUrl: string | ArrayBuffer;\r\n  backSelected: any;\r\n  frontSelected: any;\r\n  othersSelected: any;\r\n  image: any;\r\n  imageURL: any;\r\n  imageURL1: any;\r\n  imageURL2: any;\r\n  displayVal: boolean;\r\n  frontImageArray: any[] = [];\r\n  backImageArray: any[] = [];\r\n  otherImageArray: any[] = [];\r\n  otherDocumentArray: any[] = [];\r\n  boxArray: any[] = [];\r\n  documents_Type: string[];\r\n  documentsList: any;\r\n  displayVal1: boolean;\r\n  displayVal2: boolean;\r\n  customer_Id: string;\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  //document_type: string;\r\n  document_type: string[] = [\"6\", \"7\", \"8\"];\r\n  custDocExist: boolean = false;\r\n  sanitizer: any;\r\n  doc: any;\r\n  doc_list: any;\r\n  selectedOptions2: any[] = [];\r\n  documentSide: number = null;\r\n  frontImage: any = null;\r\n  backImage: any = null;\r\n  otherImage: any = null;\r\n  uploadSub: Subscription;\r\n  secondBoxArray: boolean[] = [];\r\n  disableNext: boolean;\r\n  thirdBoxArray: boolean[] = [];\r\n  webcamImage2: WebcamImage;\r\n  ocrResult = 'Recognizing...';\r\n  name: any;\r\n  ocrFlag: boolean;\r\n  selectedDocumentTypes2: any[] = [];\r\n  namePancard: string;\r\n  nameOnCard: any[] = [];\r\n  dob: any;\r\n  dobArray: any[] = [];\r\n  panNumber: any;\r\n  idNumberArray: any[] = [];\r\n  docarr: any[] = [];\r\n  pancard: boolean;\r\n  dateOfIssue: any;\r\n  dateOfExpiry: any;\r\n  backSideId: any;\r\n  frontSideId: any;\r\n  otherSideId: any;\r\n  enableAadharReadOnly: boolean;\r\n  nameDoc: string;\r\n  address: string;\r\n  addressArray: any[] = [];\r\n  undefinedCheck: boolean;\r\n  addressDisplay: boolean;\r\n  dataFetched: boolean = false;\r\n  dataFetchedValue: string;\r\n  boxArray2: any[] = [];\r\n  boxArray3: any[] = [];\r\n  x: any;\r\n  temp: any;\r\n  temp2: any;\r\n  doc_name: any[] = [];\r\n  docholder:any[]= [];\r\n  docuNameArray: any[] = [];\r\n  docuName: any;\r\n  arrayOfImageArrays0: any[] = [];\r\n  arrayOfImageArrays1: any[] = [];\r\n  arrayOfImageArrays2: any[] = [];\r\n  secondKey: any;\r\n  page_id: any;\r\n  docValArray: any[] = [];\r\n  docarray1:any=[];\r\n  docum_name: any;\r\n  document_side: any;\r\n  newOtherPage: boolean = false;\r\n  disableNextAtIndex1: boolean = true;\r\n  \r\n  OtherpageGroup: FormGroup;\r\n  otherpagerray: FormArray;\r\n  deleterecord:any;\r\n  otherDocumentSelected: any;\r\n  otherDocumentSideId: any;\r\n  childindex: any;\r\n  otherDocPages: any[]=[];\r\n  otherDocumentArray2: any[]=[];\r\n  newDocumentSide: any;\r\n  fetchChildIndex: number;\r\n  isDocumentUploadDone: boolean = false;\r\n  isDocumentUpload: boolean = false;\r\n  cardId: any;\r\n  link: Promise<boolean>;\r\n  custId: any;\r\n  screenInfo: any = [];\r\n  screen: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private tokenService: ApiService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    private shareDataService: DataService,\r\n    private cdr: ChangeDetectorRef,\r\n    private api: ApiService,\r\n    private dialogService: DialogService,\r\n    private loader: AppLoaderService,\r\n    private accountService:AccountService,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private doOcrService:DocumentOcrService,\r\n  ) {\r\n  }\r\n  loading: boolean;\r\n  ff: boolean = false;\r\n  bf: boolean = false;\r\n  index: string[];\r\n  document_name: string[];\r\n  documentTypeArr: string[];\r\n  docName: any = \"document_name\";\r\n  backSideValue: any;\r\n  progressValFrontArray:number[]=[];\r\n  progressValBackArray:number[]=[];\r\n  progressValOthersArray:number[]=[];\r\n  progressValOtherDocumentArray:any[]=[];\r\n  customerDocs: any = [];\r\n  // Refresh customer id issue\r\n  refreshCustomerId: any;\r\n  docType:any;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem('cardId');\r\n    this.appApiService.fetchCardCustomersByCardId(this.cardId ,'cardOrigin')\r\n      .subscribe((resp: any) => {\r\n        for(let i=0;i<=resp.data.length; i++){\r\n        this.screen= {\r\n          screenName: \"Cad Document Upload\",\r\n          name:resp.data[i].firstName,\r\n          data: \"\",\r\n          customerId: resp.data[i].customerId,\r\n          cifNumber:resp.data[i].cifNumber\r\n        }\r\n        this.screenInfo.push(this.screen);};\r\n})// )\r\nconsole.log(this.screenInfo);\r\n    //this.addotherpage(0,1);\r\n    this.customerId = sessionStorage.getItem(\"customer_id\");\r\n    this.customer_Id = sessionStorage.getItem('customer_id');\r\n //   this.cardId = this.ls.getItem('cardId');\r\n    this.addCustomer();\r\n    this.getCustomerInformationDetails();\r\n    \r\n    this.documentForm = this.fb.group({\r\n      documentName: [\"\", [Validators.required]],\r\n      frontSide: [\"\", [Validators.required]],\r\n      backSide: [\"\"],\r\n      others: [\"\"],\r\n      items:this.fb.array([this.inititemrows('')])\r\n    });\r\n    this.doc_name=[\"Aadhar card\",\"Pan card\",\"Passport\"];\r\n    this.docValArray=['frontSide','backSide','others'];\r\n    this.tokenService.getDropDownValues(this.docName).subscribe((resp) => {\r\n      this.document_name = resp;\r\n    });\r\n    this.tokenService.getDropDownValues('document_type').subscribe((resp) => {\r\n      this.documentTypeArr = resp;\r\n    });\r\n    this.api.getName().subscribe((resp) => {\r\n      this.assignName(resp.name);\r\n    })\r\n    this.api.getOCR().subscribe(resp => {\r\n    })\r\n    this.shareDataService.getCustomerId.subscribe(cId => {\r\n      this.api.getOCR().subscribe(resp => {\r\n        console.log(\"ocr resp from backend \", resp);\r\n        this.assignOCRValues(resp);\r\n      })\r\n      console.log(\"cId=\", cId);\r\n      // if (47953 !== null) {\r\n      //   this.refreshCustomerId = cId;\r\n      //   this.getCustomerDocuments(cId);\r\n      //   console.log(\"cId=\", cId);\r\n      // }\r\n     \r\n    })\r\n    this.doOcrService.getenableNext()\r\n    .subscribe(data=>{\r\n      console.log(\"data disableNextAtIndex1 :: \",data);\r\n      this.disableNextAtIndex1=data;\r\n    });\r\n\r\n    //this.customerId = this.ls.getItem('customer_id');\r\n    this.documentForm.valueChanges.subscribe(data => {\r\n      if (data.doc_list.length > 0) {\r\n        console.log(\"data.doc_list.length\", data.doc_list.length);\r\n        this.selectedOptions2 = [];\r\n        data.doc_list.forEach((element, index) => {\r\n          this.selectedOptions2.push(element.documentType);\r\n        });\r\n      }\r\n\r\n    })\r\n    this.api.getKycDataFetchedInfo()\r\n      .subscribe(data => {\r\n        this.documentForm = this.fb.group({\r\n          documentsList: this.fb.array([this.createItem()]),\r\n          doc_list: (data === 'DATA FETCH') ? this.fb.array([]) : this.fb.array([this.createDocItem()]),\r\n          id: [\"\"],\r\n          upload: [\"\", [Validators.required]],\r\n        });\r\n        if (data === 'DATA FETCH') {\r\n          this.dataFetched = true;\r\n          this.dataFetchedValue = data;\r\n        }\r\n        else {\r\n          this.dataFetched = false;\r\n        }\r\n      })\r\n      this.disableNext=true;\r\n      //console.log(item.value);\r\n  }\r\n  addCustomer(){\r\n    this.docarr.push(this.inititemrows(''));\r\n  }\r\n  addCust(){\r\n    this.docarr.push(this.inititemrows(''));\r\n  }\r\n  inititemrows(item){\r\n    return this.fb.group({\r\n      id: item ? item.id : [''],\r\n     \r\n      fileUrl: item ? item.fileUrl : [''],\r\n    })\r\n  }\r\n  addDocumentlist(data:any) {\r\n    this.newOtherPage=false;\r\n    this.disableNext=true;\r\n    for(let i=0;i<= data.data.length-1;i++){\r\n    //this.doc_list = this.documentForm.get('doc_list') as FormArray;\r\n    this.documentsList = this.documentForm.get('documentsList') as FormArray;\r\n    this.documentsList.push(this.createItem());\r\n    this.doc_list.push(this.createDocItem());\r\n    }\r\n  }\r\n\r\n  addDocuments() {\r\n    this.newOtherPage=false;\r\n    this.disableNext=true;\r\n    //this.doc_list = this.documentForm.get('doc_list') as FormArray;\r\n    this.documentsList = this.documentForm.get('documentsList') as FormArray;\r\n    this.documentsList.push(this.createItem());\r\n    this.doc_list.push(this.createDocItem());\r\n  }\r\n  \r\n  createDocItem() {\r\n    return this.fb.group({\r\n      documentName: [\"\", [Validators.required]],\r\n      frontSide: [\"\", [Validators.required]],\r\n      backSide: [\"\"],\r\n      others: [\"\"],\r\n      fileUrl: [\"\"]\r\n    });\r\n  }\r\n\r\n  createItem() {\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n      documentName: [\"\", Validators.required],\r\n      documentType: [\"\"],\r\n    });\r\n  }\r\n\r\n  assignOCRValues(resp) {\r\n    console.log(resp);\r\n    this.dob = resp.dob;\r\n    this.namePancard = resp.namePancard;\r\n    this.panNumber = resp.panNumber;\r\n    this.frontImageArray[0] = resp.imageOCR;\r\n    //added code\r\n    this.backImageArray[0] = resp.imageOCRBack;\r\n    //added code\r\n    if (resp.imageOCRBack) {\r\n      this.backImageArray[0] = resp.imageOCRBack;\r\n      this.secondBoxArray[0] = true;\r\n      this.address = resp.address;\r\n      this.addressDisplay = true;\r\n      this.progressValBackArray[0] = 100;\r\n    }\r\n    const hasNonEmptyFields = Object.values(resp).some((value) => Boolean(value))\r\n      console.log(\"hasNonEmptyFields\", hasNonEmptyFields)\r\n    if (hasNonEmptyFields) {\r\n      this.documentForm.get('documentName').patchValue('Aadhar card');\r\n      console.log(this.documentForm.get('documentName'));\r\n      this.progressValFrontArray[0] = 100;\r\n      //this.enableAadharReadOnly = true;\r\n      this.disableNext=true;\r\n      this.pancard = true;\r\n    }\r\n  }\r\n\r\n  delete(report, value, i) {\r\n    this.docum_name=report.documentName;\r\n    this.customerId = sessionStorage.getItem(\"customer_id\");\r\n    if (value == 2) {\r\n      this.secondBoxArray[i] = false;\r\n      this.addressDisplay = false;\r\n      this.progressValBackArray[i] = 0;\r\n      this.backImageArray[i] = null;\r\n      this.backSelected = null;\r\n      this.document_side=value;\r\n  \r\n        this.api.deleteCustDoc(this.customerId, this.docum_name, this.document_side).subscribe((data) => {\r\n      });\r\n    }\r\n    if (value == 3) {\r\n      this.thirdBoxArray[i] = false;\r\n      this.progressValOthersArray[i] = 0;\r\n      this.otherImageArray[i] = null;\r\n      this.othersSelected = null;\r\n      this.document_side=value;\r\n    \r\n        this.api.deleteCustDoc(this.customerId, this.docum_name, this.document_side).subscribe((data) => {\r\n      });\r\n    }\r\n    this.disableNext = false;\r\n  }\r\n  getCustomerInformationDetails() {\r\n    this.appApiService.fetchCardCustomersByCardId(this.cardId ,'cardOrigin')\r\n      .subscribe((resp: any) => {\r\n        console.log(resp.data);\r\n        console.log(resp.data.customerId);\r\n        this.docholder=resp.data;\r\n        \r\n        for(let i=0;i<= resp.data.length-1;i++){\r\n          this.getCustomerDocuments(resp.data[i].customerId); \r\n        }\r\n       \r\n        console.log(this.docholder);\r\n        this.addDocumentlist(resp);\r\n        //this.buildCustomerForm(resp);\r\n      }, (err: any) => {\r\n      });\r\n  }\r\n\r\n  deleteOtherDocument(report, i, k){\r\n    this.docum_name=report.documentName;\r\n    this.customerId = sessionStorage.getItem(\"customer_id\");\r\n   this.newDocumentSide=k+4;\r\n    if(this.docarray1[i][k]){\r\n      \r\n    this.docarray1[i].pop();\r\n    this.otherDocumentArray[i][k]=null;\r\n   }\r\n  else{\r\n   }\r\n   this.api.deleteCustDoc(this.customerId, this.docum_name, this.newDocumentSide).subscribe((data) => {\r\n    \r\n  });\r\n\r\n    \r\n  }\r\n\r\n  assignName(name: any) {\r\n    this.name = name.toLowerCase();\r\n  }\r\n  addotherpage(a){\r\n   if(this.docarray1[a]){\r\n    this.docarray1[a].push(this.inititemrows(''));\r\n  }\r\n  else{\r\n    var otherArray=[this.inititemrows('')];\r\nthis.docarray1[a] = otherArray;\r\n  this.otherDocumentArray[a] = [];\r\n  this.progressValOtherDocumentArray[a]=[];\r\n  }\r\n  }\r\n  createOtherForm(item): FormGroup{\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n     // documentType: [\"\", Validators.required],\r\n      fileData: item ? item.fileData : [''],\r\n      fileUrl: item ? item.fileUrl : [''],\r\n    })\r\n  }\r\n\r\n  goNext(){\r\n    this.ls.setItem('CARD_DOCUMENT_STAGE_DONE',true);\r\n    this.ls.setItem('CARD_DOCUMENT_DONE',true);\r\n    this.accountService.refresh.next(); \r\n    this.router.navigate([`/cardaccount/applicationEnrichment/list`]);\r\n  }\r\n  goBack() {\r\n    this.router.navigate([\r\n      `/cardaccount/documentupload/list`,\r\n    ]);\r\n  }\r\n  private trigger: Subject<void> = new Subject<void>();\r\n\r\n  triggerSnapshot(i): void {\r\n    this.trigger.next();\r\n    this.scan1Array[i] = false;\r\n    this.scan2Array[i] = false;\r\n    this.scan3Array[i] = false;\r\n  }\r\n\r\n  callingBox2(i) {\r\n    this.secondBoxArray[i] = true;\r\n    this.disableNext = true;\r\n    //this.enableAadharReadOnly = false;\r\n    console.log(this.secondBoxArray[i]);\r\n  }\r\n\r\n  callingBox3(i) {\r\n    this.thirdBoxArray[i] = true;\r\n    this.disableNext = true;\r\n    this.newOtherPage=true;\r\n    //this.enableAadharReadOnly = false;\r\n  }\r\n\r\n   doOCR(img, docVal, selectedFile, docSideEnum, i) {\r\n    const worker = createWorker({\r\n      logger: m => console.log(m)\r\n    });\r\n    (async () => {\r\n      this.loader.open();\r\n      await worker.load();\r\n      await worker.loadLanguage('eng');\r\n      await worker.initialize('eng');\r\n      const { data: { text } } = await worker.recognize(img);\r\n      this.loader.close();\r\n      if (docSideEnum === 3) {\r\n        this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        return;\r\n      }if (docSideEnum > 3) {\r\n        this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        return;\r\n      }\r\n      if (this.documentForm.value.documentsList[i].documentName === 'Pan card') {\r\n        const panCardDetails = this.panCardParser(text);\r\n        this.nameDoc = panCardDetails.name.toLowerCase();\r\n      }\r\n      if (this.documentForm.value.documentsList[i].documentName == 'Passport') {\r\n        const passbookDetails = this.passportParser(text);\r\n        this.nameDoc = passbookDetails.name.toLowerCase();\r\n        if (!this.nameDoc) {\r\n          this.shotToast(\"The document is not a valid Passport\");\r\n          return;\r\n        }\r\n      }\r\n      if (this.documentForm.value.documentsList[i].documentName == 'Aadhar card' && docSideEnum == '1')\r\n      //if(docSideEnum == '1')\r\n      {\r\n        const aadharDetails = this.aadharParser(text);\r\n        this.nameDoc = aadharDetails.fullName.toLowerCase();\r\n        let result = /^([a-z]){2,30}$/.test(this.nameDoc.replace(/\\s/g, \"\"));\r\n        if (result === false) {\r\n          // this.shotToast(\"Name in the document: \" + aadharDetails.fullName + \" is invalid\");\r\n          this.shotToast(\"The document is not a valid Aadhar card\");\r\n          return;\r\n        }\r\n      }\r\n      if (this.documentForm.value.documentsList[i].documentName == 'Aadhar card' && docSideEnum == '2')\r\n      //if(docSideEnum == '2')\r\n      {\r\n        const aadharDetails = this.aadharParser(text);\r\n        \r\n        let address = text.split(\",\");\r\n        for (let index = 0; index < address.length; index++) {\r\n          address[index] = address[index].replace(/[^a-zA-Z ]/g, \"\");\r\n          console.log(\"array after removing special characters \", address[index])\r\n        }\r\n        // console.log(\"array after removing special characters \",address)\r\n        if (address[2] === undefined) {\r\n          address[2] = '';\r\n        }\r\n        if (address[5] === undefined) {\r\n          address[5] = '';\r\n        }\r\n        if (address[6] === undefined) {\r\n          address[6] = '';\r\n        }\r\n        if (address[7] === undefined) {\r\n          address[7] = '';\r\n        }\r\n        if (address[2] === undefined && address[5] === undefined && address[6] === undefined && address[7] === undefined) {\r\n          this.addressDisplay = false;\r\n          return;\r\n        }\r\n        if (address[2] === '' && address[5] === '' && address[6] === '' && address[7] === '') {\r\n          this.addressDisplay = false;\r\n          return;\r\n        }\r\n        // this.addressArray[i] = address[2] + \",\" + address[5] + \",\" + address[6] + \",\" + address[7];\r\n        this.addressArray[i] = address[3] + \",\" + address[5] + \",\" + address[7] ;\r\n        this.addressDisplay = true;\r\n        this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        // this.backImageArray[i] = img;\r\n      }\r\n    \r\n      console.log(text.includes(this.name));\r\n      this.ocrFlag = text.includes(this.name);\r\n\r\n      if (docSideEnum == '1' && (this.nameDoc.replace(/\\s/g, \"\") !== this.name.replace(/\\s/g, \"\"))) {\r\n       \r\n        this.dialogService.confirmationDialog(this.nameDoc, this.name).subscribe((response) => {\r\n          console.log(response)\r\n          if (response == \"No\") {\r\n            this.changeValue2_Ocr(docVal, i);\r\n          }\r\n          if (response == \"Yes\") {\r\n\r\n            if (this.documentForm.value.documentsList[i].documentName == 'Pan card') {\r\n              const panCardDetails = this.panCardParser(text);\r\n              this.nameOnCard[i] = panCardDetails.name.toLowerCase();\r\n              this.dobArray[i] = panCardDetails.dateOfBirth;\r\n              this.idNumberArray[i] = panCardDetails.panNumber;\r\n              this.pancard = true;\r\n              this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n            }\r\n            if (this.documentForm.value.documentsList[i].documentName == 'Passport') {\r\n              const passbookDetails = this.passportParser(text);\r\n              this.nameOnCard[i] = passbookDetails.name.toLowerCase();\r\n              this.dobArray[i] = passbookDetails.dob;\r\n              this.idNumberArray[i] = passbookDetails.issueNoString;\r\n              this.dateOfIssue = passbookDetails.dateOfIssue;\r\n              this.dateOfExpiry = passbookDetails.dateOfExpiry;\r\n              this.pancard = true;\r\n              this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n            }\r\n            if (this.documentForm.value.documentsList[i].documentName == 'Aadhar card') {\r\n              const aadharDetails = this.aadharParser(text);\r\n              this.nameOnCard[i] = aadharDetails.fullName.toLowerCase();\r\n              this.dobArray[i] = aadharDetails.dob;\r\n              this.idNumberArray[i] = aadharDetails.adharNumber;\r\n              this.pancard = true;\r\n              this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n            }\r\n            else{\r\n              this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n            }\r\n\r\n          }\r\n        });\r\n\r\n      }\r\n      else if (docSideEnum == '1' && (this.nameDoc.replace(/\\s/g, \"\") == this.name.replace(/\\s/g, \"\"))) {\r\n        if (this.documentForm.value.documentsList[i].documentName == 'Pan card') {\r\n          const panCardDetails = this.panCardParser(text);\r\n          this.nameOnCard[i] = panCardDetails.name.toLowerCase();\r\n          this.dobArray[i] = panCardDetails.dateOfBirth;\r\n          this.idNumberArray[i] = panCardDetails.panNumber;\r\n          this.pancard = true;\r\n          this.uploadDoc(img,selectedFile, docVal, docSideEnum, i);\r\n        }\r\n        if (this.documentForm.value.documentsList[i].documentName == 'Passport') {\r\n          const passbookDetails = this.passportParser(text);\r\n          this.nameOnCard[i] = passbookDetails.name.toLowerCase();\r\n          this.dobArray[i] = passbookDetails.dob;\r\n          this.idNumberArray[i] = passbookDetails.issueNoString;\r\n          this.dateOfIssue = passbookDetails.dateOfIssue;\r\n          this.dateOfExpiry = passbookDetails.dateOfExpiry;\r\n          this.pancard = true;\r\n          this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        }\r\n        if (this.documentForm.value.documentsList[i].documentName == 'Aadhar card') {\r\n          const aadharDetails = this.aadharParser(text);\r\n          this.nameOnCard[i] = aadharDetails.fullName.toLowerCase();\r\n          this.dobArray[i] = aadharDetails.dob;\r\n          this.idNumberArray[i] = aadharDetails.adharNumber;\r\n          this.pancard = true;\r\n          this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        }\r\n        else{\r\n          this.uploadDoc(img, selectedFile, docVal, docSideEnum, i);\r\n        }\r\n      }\r\n      await worker.terminate();\r\n    })();\r\n  }\r\n  aadharParser = (str) => {\r\n    try {\r\n      let adharNumber,\r\n        dob,\r\n        name,\r\n        nameLineIndex = 2;\r\n      const asciiStr = str.replace(/[^\\x00-\\x7F]/g, \"\").trim();\r\n      const lines = asciiStr.split(\"\\n\");\r\n\r\n      for (let i = lines.length - 1; i >= 0; i--) {\r\n        let count = 0,\r\n          startIndex = -1;\r\n        for (let j = 0; j < lines[i].length; j++) {\r\n          if (lines[i][j] >= \"0\" && lines[i][j] <= \"9\") {\r\n            count++;\r\n            if (startIndex === -1) startIndex = j;\r\n          }\r\n        }\r\n        if (count >= 12) {\r\n          adharNumber = lines[i].substr(startIndex, startIndex + 14);\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < lines.length; i++) {\r\n        [\"DOB\", \"Year of Birth\"].some((docString) => {\r\n          const dobIndex = lines[i].indexOf(docString);\r\n          if (dobIndex !== -1) {\r\n            dob = lines[i]\r\n              .trim()\r\n              .slice(dobIndex, lines[i].length)\r\n              .split(\" \")\r\n              .pop();\r\n            nameLineIndex = i - 1;\r\n            console.log(dob);\r\n          }\r\n        });\r\n      }\r\n\r\n      const names = lines[nameLineIndex]\r\n        .split(\" \")\r\n        .filter((x) => x.length > 1)\r\n        .join(\" \");\r\n      console.log(names);\r\n      return {\r\n        dob,\r\n        adharNumber,\r\n        fullName: names,\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.error(\"Unable to parse aadhar\");\r\n    }\r\n  };\r\n\r\n  handleImage(webcamImage: WebcamImage, i): void {\r\n    this.webcamImage = webcamImage;\r\n    this.fun(this.webcamImage, i);\r\n  }\r\n  handleImage1(webcamImage: WebcamImage, i): void {\r\n    this.webcamImage1 = webcamImage;\r\n    this.fun1(this.webcamImage1, i);\r\n  }\r\n\r\n  isDocumentOptionDisabled2 = (value) => {\r\n    return this.selectedOptions2.includes(value);\r\n  }\r\n\r\n  changeValue2(value:any, i) {\r\n    this.disableNext=true;\r\n    if (this.selectedDocumentTypes2[i]) {\r\n      this.selectedOptions2 = this.selectedOptions2.filter(val => val !== this.selectedDocumentTypes2[i])\r\n    }\r\n    this.selectedDocumentTypes2[i] = value;\r\n    this.selectedOptions2.push(value);\r\n\r\n    this.secondBoxArray[i] = false;\r\n    this.thirdBoxArray[i] = false;\r\n    this.frontImageArray[i] = '';\r\n    this.backImageArray[i] = '';\r\n    this.otherImageArray[i] = '';\r\n    this.backSelected = '';\r\n    this.frontSelected = '';\r\n    this.othersSelected = '';\r\n    this.progressValFrontArray[i] = 0;\r\n    this.progressValBackArray[i] = 0;\r\n    this.pancard = false;\r\n    console.log(\"i=\", i);\r\n  }\r\n  panCardParser = (str) => {\r\n    try {\r\n      const asciiStr = str.replace(/[^\\x00-\\x7F]/g, \"\");\r\n      const startIndex = asciiStr.indexOf(\"Permanent\");\r\n      const nameIndex = asciiStr.indexOf(\"Name\");\r\n\r\n      const panNumber = asciiStr.slice(startIndex, nameIndex).match(\"[A-Z]{5}[0-9]{4}[A-Z]{1}\")[0]; // Returns ain,ain,ain\r\n\r\n      const fatherNameIndex = asciiStr.indexOf(\"Father's Name :\");\r\n      //const slicedStr = asciiStr.slice(fatherNameIndex, str.length).split('\\n');\r\n\r\n      const nameString = asciiStr.slice(nameIndex, fatherNameIndex).split(\"\\n\"); // .find(str => str.length > 3);\r\n      const displayName = nameString[1].split(\" \");\r\n      const dobString = asciiStr.slice(asciiStr.indexOf(\"Date of Birth\"), asciiStr.length);\r\n      const dob = dobString.split(\"\\n\")[1].split(\" \")[0];\r\n      return {\r\n        panNumber,\r\n        name: `${displayName[0]} ${displayName[1]}`,\r\n        dateOfBirth: dob\r\n\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.error(\"Unable to parse pan card\");\r\n      this.snack.open('Please Upload Valid Document', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  };\r\n\r\n  passportParser = (str) => {\r\n    try {\r\n      let dateOfIssue, dateOfExpiry;\r\n      const asciiStr = str.replace(/[^\\x00-\\x7F]/g, \"\");\r\n      const nameIndex = asciiStr.indexOf(\"Given Name\");\r\n      const lines = asciiStr.slice(nameIndex, asciiStr.length).split(\"\\n\");\r\n      const doIssueIndex =\r\n        lines.findIndex((line) => line.indexOf(\"Date of Issue\") > -1) + 1;\r\n      if (doIssueIndex > 0) {\r\n        const dates = lines[doIssueIndex].split(\" \");\r\n        dateOfIssue = dates[dates.length - 2];\r\n        dateOfExpiry = dates[dates.length - 2];\r\n      }\r\n\r\n      const nationalityIndex = asciiStr.indexOf(\"Nationality\");\r\n      const dob = asciiStr\r\n        .slice(nationalityIndex, asciiStr.length)\r\n        ?.split(\"\\n\")[1]\r\n        .split(\" \")\r\n        .pop();\r\n\r\n      let issueNoString;\r\n      const issueNoStringArray = asciiStr.trim().split(\"\\n\");\r\n      for (let i = issueNoStringArray.length - 1; i >= 0; i--) {\r\n        if (issueNoStringArray[i].includes(\"<\")) {\r\n          issueNoString = issueNoStringArray[i].substr(\r\n            0,\r\n            issueNoStringArray[i].indexOf(\"<\")\r\n          );\r\n          break;\r\n        }\r\n      }\r\n\r\n      return {\r\n        dob,\r\n        name: lines[1],\r\n        issueNoString,\r\n        dateOfIssue,\r\n        dateOfExpiry,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Unable to parse passport\");\r\n    }\r\n  };\r\n\r\n\r\n  changeValue2_Ocr(docVal, i) {\r\n    if (docVal === 'frontSide') {\r\n      this.frontImageArray[i] = '';\r\n      this.frontSelected = '';\r\n      this.progressValFrontArray[i] = 0;\r\n    }\r\n    if (docVal === 'backSide') {\r\n      this.secondBoxArray[i] = false;\r\n      this.backImageArray[i] = '';\r\n      this.backSelected = '';\r\n      this.progressValBackArray[i] = 0;\r\n    }\r\n    if (docVal === 'others') {\r\n      this.thirdBoxArray[i] = false;\r\n      this.otherImageArray[i] = '';\r\n      this.othersSelected = '';\r\n      this.progressValOthersArray[i] = 0;\r\n      //this.enableAadharReadOnly = true;\r\n      this.disableNext=true;\r\n    }\r\n  }\r\n  j(arg0: string, j: any) {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  handleImage2(webcamImage: WebcamImage, i): void {\r\n    console.log(i);\r\n    this.webcamImage2 = webcamImage;\r\n    this.function2(this.webcamImage2, i);\r\n  }\r\n  function2(webcamImage, i) {\r\n    console.log(i);\r\n    const cId: string = this.customerId;\r\n    const uploadData2 = new FormData();\r\n    const data = {\r\n      customerId: this.refreshCustomerId,\r\n      documentName: this.documentForm.value.documentName,\r\n      documentType: \"3\",\r\n      fileType: webcamImage._mimeType,\r\n      fileName: \"doc\",\r\n      verificationType: \"KYC verification\",\r\n      documentSide: 3,\r\n      idNumber: this.panNumber\r\n    };\r\n    console.log(webcamImage.imageAsDataUrl);\r\n    this.otherImageArray[i] = webcamImage.imageAsDataUrl;\r\n    // this.doOCR(this.imageURL2);\r\n    this.displayVal2 = false;\r\n    let file = this.dataURLtoFile(webcamImage.imageAsDataUrl, \"Aadhar\");\r\n\r\n    uploadData2.append(\"data\", JSON.stringify(data));\r\n\r\n    uploadData2.append(\"file\", file);\r\n    this.tokenService.upload(uploadData2).subscribe(\r\n      (res: any) => {\r\n        this.progressValOthersArray[i] = 100;\r\n        if (res.type === 4) {\r\n          if (res.body) {\r\n            console.log(\"res.body.id\", res.body.id);\r\n            this.assignIdValues(\"others\", res.body.id);\r\n          }\r\n        }\r\n        this.documentForm.get(\"backSide\").patchValue(true);\r\n      }, (error) => {\r\n        if (error.status == 201) {\r\n          this.ff = true;\r\n          this.documentForm.get(\"backSide\").patchValue(true);\r\n          this.shotToast(\"Document Uploaded!\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  public get triggerObservable(): Observable<void> {\r\n    return this.trigger.asObservable();\r\n  }\r\n\r\n  tabClick(event: MatTabChangeEvent) {\r\n    const tab = event.tab.textLabel;\r\n\r\n    if (tab === \"Documents Upload\") {\r\n      this.router.navigateByUrl(\"/others/documents\");\r\n    }\r\n    if (tab === \"verification\") {\r\n      this.router.navigateByUrl(\"/others/verification\");\r\n    }\r\n    if (tab === \"Basic Information\") {\r\n      this.router.navigateByUrl(\"/others/kyc\");\r\n    }\r\n  }\r\n  onNext(documentForm) {\r\n   \r\n    this.documentForm.reset();\r\n    this.tokenService.setIndex({\r\n      index: 2,\r\n      // index: 0,\r\n    });\r\n    this.tokenService.setFinishFlag({\r\n    //finishFlag: false,\r\n    finishFlag: true,\r\n    });\r\n    //this.documentForm.reset();\r\n\r\n    this.updateKycStatus();\r\n    localStorage.setItem('page_id', '2');\r\n  }\r\n\r\n  getCustomerDocuments(cId) {\r\n    for (const key in this.document_type) {\r\n      if (Object.prototype.hasOwnProperty.call(this.document_type, key)) {\r\n        const element = this.document_type[key];\r\n        console.log(element, key, cId);\r\n      this.tokenService.getCustomerDocuments(cId, element)\r\n      .subscribe((data) => {\r\n        console.log(key, data, this.documentForm);\r\n        this.customerDocs = data;\r\n        this.docuNameArray=[\"Aadhar card\",\"Pan card\",\"Passport\"];\r\n        console.log(this.documentForm.controls.documentsList['controls']);\r\n        this.documentForm.controls.documentsList['controls'][0].controls.documentName.setValue(this.docuNameArray[0]); \r\n        //this.documentForm.get('documentName').patchValue(this.frontImage.documentName);\r\n\r\n   this.doc_name=[\"Aadhar card\",\"Pan card\",\"Passport\"];\r\n\r\n   for(let j=0; j<this.customerDocs.length; j++)  \r\n     {\r\n        if(this.customerDocs[j])\r\n        {\r\n          console.log(this.customerDocs[j].documentName);\r\n          for(let i=0; i<3; i++)\r\n          { \r\n            if(this.customerDocs[j].documentName==this.doc_name[i] && this.customerDocs[j].documentSide==1)\r\n               {  this.frontImageArray[i]=this.customerDocs[j].fileUrl;\r\n                this.progressValFrontArray[i]=100;\r\n                  console.log(\"index\",i)\r\n                 }  \r\n          }\r\n         for(let i=0; i<3; i++)\r\n          { \r\n           if(this.customerDocs[j].documentName==this.doc_name[i] && this.customerDocs[j].documentSide==2)\r\n             {  this.backImageArray[i]=this.customerDocs[j].fileUrl;\r\n              this.progressValBackArray[i] = 100;\r\n                this.secondBoxArray[i] = true; \r\n               }  \r\n          }\r\n         for(let i=0; i<3; i++)\r\n          {        \r\n          if(this.customerDocs[j].documentName==this.doc_name[i] && this.customerDocs[j].documentSide==3)\r\n             {  this.otherImageArray[i]=this.customerDocs[j].fileUrl;\r\n              this.progressValOthersArray[i] = 100;\r\n                this.thirdBoxArray[i] = true;\r\n               }  \r\n          }\r\n          for(let i=0; i<3; i++)\r\n          {        \r\n          if(this.customerDocs[j].documentName==this.doc_name[i] && this.customerDocs[j].documentSide>3)\r\n             { \r\n               \r\n               this.fetchChildIndex=this.customerDocs[j].documentSide-4;\r\n\r\n            this.newOtherPage=true;\r\n              if(this.docarray1[i]){\r\n               this.docarray1[i].push(this.inititemrows(''));\r\n               \r\n             }\r\n             else{\r\n               var otherArray=[this.inititemrows('')];\r\n           this.docarray1[i] = otherArray;\r\n             this.otherDocumentArray[i] = [];\r\n             }\r\n            this.otherDocumentArray[i][this.fetchChildIndex]=this.customerDocs[j].fileUrl;\r\n            console.log(\"this.otherDocumentArray\",this.otherDocumentArray);\r\n\r\n               }  \r\n          }\r\n        }\r\n        this.disableNext=false;\r\n      }\r\n\r\n     if (this.customerDocs.length > 0) \r\n     {\r\n     \r\n       \r\n        this.page_id=this.ls.getItem('page_id');\r\n        console.log(this.page_id);\r\n        if(this.customerDocs[0].documentName==\"Pan card\" && this.page_id !== 2)\r\n        {\r\n          let element2:HTMLElement = document.getElementById('auto_trigger') as HTMLElement;  \r\n          if(element2){\r\n            console.log(element2);\r\n            element2.click();\r\n            }\r\n            this.disableNext=false;\r\n        } \r\n        this.documentForm.controls.documentsList['controls'][1].controls.documentName.setValue(this.docuNameArray[1]);\r\n\r\n        if(this.customerDocs[0].documentName==\"Passport\" && this.page_id !== 2)\r\n        {\r\n          let element3:HTMLElement = document.getElementById('auto_trigger') as HTMLElement;  \r\n          if(element3){\r\n            console.log(element3);\r\n            element3.click();\r\n            } \r\n            this.disableNext=false;\r\n        }\r\n        this.documentForm.controls.documentsList['controls'][2].controls.documentName.setValue(this.docuNameArray[2]); \r\n\r\n          if (this.frontImage.documentName == 'Pan card') {\r\n            this.panNumber = this.customerDocs.find(item => item.documentSide == 2).idNumber\r\n          }\r\n\r\n          if(this.frontImage.documentName == 'Aadhar card'){\r\n            this.panNumber= this.customerDocs.find(item => item.documentSide == 1).idNumber\r\n          }\r\n          if(this.panNumber){\r\n            this.pancard=true;\r\n          }\r\n\r\n          if (this.frontImage != null) {\r\n            this.progressValFrontArray[0] = 100;\r\n          }\r\n          if (this.backImage != null) {\r\n\r\n            this.progressValBackArray[0] = 100;\r\n          }\r\n          if (this.otherImage != null) {\r\n\r\n            this.progressValOthersArray[0] = 100;\r\n          }\r\n          let payload = {\r\n            documentName: this.customerDocs[0].documentName,\r\n            frontSide: this.customerDocs[0].documentName,\r\n            backSide: this.customerDocs[0].documentName,\r\n          }\r\n          this.documentForm.patchValue(payload);\r\n          console.log(this.customerDocs[0].documentName);\r\n      }\r\n        this.cdr.markForCheck();\r\n        console.log(\"end of api\");\r\n     });\r\n   }\r\n  }\r\n  this.custId = cId\r\n}\r\n  convertBlob(docImage) {\r\n    let objectURL = 'data:image/jpeg;base64,' + docImage;\r\n    let source = this.sanitizer.bypassSecurityTrustUrl(objectURL);\r\n    return source;\r\n  }\r\n\r\n  updateKycStatus() {\r\n    this.tokenService.updateKycStatusByCustId(this.customer_Id, 'UNDER_PROCESS', \"\")\r\n      .subscribe(data => {\r\n        console.log('update response :: ', data)\r\n      })\r\n  }\r\n  previous() {\r\n    // this.documentForm.reset();\r\n    this.tokenService.setIndex({\r\n      index: 0,\r\n    });\r\n  }\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(CutomerFingerPrintComponent, {\r\n      data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      \r\n    });\r\n  }\r\n  scan(i) {\r\n    this.scan1Array[i] = true;\r\n    this.scan2Array[i] = false;\r\n    this.scan3Array[i] = false;\r\n    //this.enableAadharReadOnly = true;\r\n    this.disableNext=false;\r\n  }\r\n  scan12(i) {\r\n    this.scan1Array[i] = false;\r\n    this.scan2Array[i] = true;\r\n    this.scan3Array[i] = false\r\n    //this.enableAadharReadOnly = true;\r\n    this.disableNext=false;\r\n  }\r\n  scan13(i) {\r\n    this.scan1Array[i] = false;\r\n    this.scan2Array[i] = false;\r\n    this.scan3Array[i] = true;\r\n    //this.enableAadharReadOnly = true;\r\n    this.disableNext=false;\r\n  }\r\n\r\n  // webcam snapshot trigger\r\n  fun(webcamImage, i) {\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    const data = {\r\n      customerId: this.refreshCustomerId,\r\n      documentName: this.documentForm.value.documentName,\r\n      documentType: \"3\",\r\n      fileType: webcamImage._mimeType,\r\n      fileName: \"doc\",\r\n      verificationType: \"KYC verification\",\r\n      documentSide: 1,\r\n      idNumber: this.panNumber\r\n\r\n    };\r\n    this.frontImageArray[i] = webcamImage.imageAsDataUrl;\r\n    // this.doOCR(this.imageURL)\r\n    this.displayVal = false;\r\n    let file = this.dataURLtoFile(webcamImage.imageAsDataUrl, \"Aadhar\");\r\n\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n\r\n    uploadData.append(\"file\", file);\r\n\r\n    this.tokenService.upload(uploadData).subscribe(\r\n      (res) => {\r\n        this.progressValFrontArray[i] = 100;\r\n        this.documentForm.get(\"frontSide\").patchValue(true);\r\n      },\r\n      (error) => {\r\n        if (error.status == 201) {\r\n          this.bf = true;\r\n          this.documentForm.get(\"frontSide\").patchValue(true);\r\n          this.shotToast(\"Document Uploaded!\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  fun1(webcamImage, i) {\r\n    console.log(\"inside fun1\")\r\n    const cId: string = this.customerId;\r\n\r\n    const uploadData1 = new FormData();\r\n    const data = {\r\n      customerId: this.refreshCustomerId,\r\n      documentName: this.documentForm.value.documentName,\r\n      documentType: \"3\",\r\n      fileType: webcamImage._mimeType,\r\n      fileName: \"doc\",\r\n      verificationType: \"KYC verification\",\r\n      documentSide: 2,\r\n      idNumber: this.panNumber\r\n    };\r\n    this.backImageArray[i] = webcamImage.imageAsDataUrl;\r\n    // this.doOCR(this.imageURL1);\r\n    this.displayVal1 = false;\r\n    let file = this.dataURLtoFile(webcamImage.imageAsDataUrl, \"Aadhar\");\r\n\r\n    uploadData1.append(\"data\", JSON.stringify(data));\r\n\r\n    uploadData1.append(\"file\", file);\r\n\r\n    this.tokenService.upload(uploadData1).subscribe(\r\n      (res: any) => {\r\n        this.progressValBackArray[i] = 100;\r\n        if (res.type === 4) {\r\n          if (res.body) {\r\n            console.log(\"res.body.id\", res.body.id);\r\n            this.assignIdValues(\"backSide\", res.body.id);\r\n          }\r\n        }\r\n        this.documentForm.get(\"backSide\").patchValue(true);\r\n      }, (error) => {\r\n        if (error.status == 201) {\r\n          this.ff = true;\r\n          this.documentForm.get(\"backSide\").patchValue(true);\r\n          this.shotToast(\"Document Uploaded!\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  dataURLtoFile(dataurl, filename) {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, { type: mime });\r\n  }\r\n  assign(id) {\r\n    this.customerId = id;\r\n  }\r\n\r\n  onUpload(event, docVal, docSideEnum, i,customerId) {\r\n    console.log(customerId);\r\n    this.newDocumentSide=docSideEnum;\r\n    this.childindex=docSideEnum-4;\r\n    console.log(event, docVal, docSideEnum);\r\n    if (docVal === 'frontSide') {\r\n      this.progressValFrontArray[i] = 0;\r\n    }\r\n    if (docVal === 'backSide') {\r\n      this.progressValBackArray[i] = 0;\r\n    }\r\n    if (docVal === 'others') {\r\n      this.progressValOthersArray[i] = 0;\r\n    }\r\n    this.selectedFiles = event.target.files[0];\r\n    let size = event.target.files[0].size;\r\n    this.shotToast(`Your file size is ${this.formatBytes(size, 2)}`);\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        this.image = event.target.result;\r\n        if (docVal === 'backSide') {\r\n          this.backSelected = this.selectedFiles.name;\r\n          //this.backImageArray[i] = this.image;\r\n          this.doOCR(this.image, docVal, this.selectedFiles, docSideEnum, i);\r\n          this.displayVal1 = true;\r\n        }\r\n        if (docVal === 'frontSide') {\r\n          this.frontSelected = this.selectedFiles.name;\r\n          //this.frontImageArray[i] = this.image;\r\n          // this.doOCR(this.frontImageArray[i], docVal, this.selectedFiles, docSideEnum, i);\r\n          this.doOCR(this.image, docVal, this.selectedFiles, docSideEnum, i);\r\n          this.displayVal = true;\r\n        }\r\n        if (docVal === 'others') {\r\n          this.othersSelected = this.selectedFiles.name;\r\n          this.doOCR(this.image, docVal, this.selectedFiles, docSideEnum, i);\r\n          this.displayVal2 = true;\r\n          // this.documentSide = 1;\r\n        }\r\n        if(docVal === 'otherDocument'){\r\n          this.otherDocumentSelected = this.selectedFiles.name;\r\n         if(this.otherDocumentArray[i][this.childindex]){\r\n          \r\n        this.otherDocumentArray[i][this.childindex]=this.image;\r\n       }\r\n      else{\r\n      \r\n        var otherArray=[this.image];\r\n         this.otherDocumentArray[i][this.childindex] = this.image;\r\n        \r\n       }\r\n       console.log(\"final document\", this.docarray1)\r\n         \r\n          this.doOCR(this.otherDocumentArray[i][this.childindex], docVal, this.selectedFiles, docSideEnum, i);\r\n          //this.displayVal2 = true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.disableNext = false;\r\n  }\r\n\r\n\r\n  formatBytes(bytes, decimals) {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n\r\n  uploadDoc(img, url, docVal, documnetSideValue, i) {\r\n    this.childindex=documnetSideValue-4;\r\n    console.log(\"URL ---- \", url);\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    if(this.documentForm.value.documentsList[i].documentName==='Aadhar card')\r\n    { \r\n      this.docType='6';\r\n    }\r\n    if(this.documentForm.value.documentsList[i].documentName==='Pan card')\r\n    { \r\n      this.docType='7';\r\n    }\r\n    if(this.documentForm.value.documentsList[i].documentName==='Passport')\r\n    {\r\n      this.docType='8';\r\n    }\r\n\r\n    const data = {\r\n      // customerId: this.refreshCustomerId,\r\n      customerId: this.docholder[i].customerId,\r\n      //documentName: this.documentForm.value.documentName,\r\n      documentName: this.documentForm.value.documentsList[i].documentName,\r\n      documentType: this.docType,\r\n      fileType: url.type,\r\n      fileName: url.name,\r\n      verificationType: \"KYC verification\",\r\n      documentSide: documnetSideValue,\r\n      idNumber: this.panNumber,\r\n      name: this.namePancard,\r\n      dob: this.dob\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n    console.log(\"URL -- \", url.name, data, uploadData);\r\n    this.uploadSub = this.tokenService.upload(uploadData)\r\n      .subscribe((res: any) => {\r\n        console.log(\"Response -- \", res);\r\n        if (docVal === 'backSide') {\r\n          if (res.type) {\r\n            if (res.type == HttpEventType.UploadProgress) {\r\n              this.progressValBackArray[i] = Math.round(100 * (res.loaded / res.total));\r\n              this.backImageArray[i] = img;\r\n            }\r\n            // else if (res.type == HttpEventType.Response) {\r\n            //   this.progressValBack = 0;\r\n            // }\r\n          }\r\n        } else if ((docVal === 'frontSide')) {\r\n          if (res.type) {\r\n            if (res.type == HttpEventType.UploadProgress) {\r\n              this.progressValFrontArray[i] = Math.round(100 * (res.loaded / res.total));\r\n              this.frontImageArray[i] = img;\r\n            }\r\n            // else if (res.type == HttpEventType.Response) {\r\n            //   this.progressValFront = 0;\r\n            // }\r\n          }\r\n        }\r\n        else if ((docVal === 'others')) {\r\n          if (res.type) {\r\n            if (res.type == HttpEventType.UploadProgress) {\r\n              this.progressValOthersArray[i] = Math.round(100 * (res.loaded / res.total));\r\n              console.log(\"uploadProgress others\", this.progressValOthersArray[i]);\r\n              this.otherImageArray[i] = img;\r\n            }\r\n          }\r\n         \r\n        }\r\n        else{\r\n\r\n        }\r\n        if (res.body) {\r\n\r\n          console.log(\"res.body.id\", res.body.id);\r\n          this.assignIdValues(docVal, res.body.id);\r\n          this.documentForm.get(docVal).patchValue(true);\r\n          this.shotToast(\"Document Uploaded!\");\r\n        }\r\n      },\r\n        (error: any) => {\r\n          if (error.status == 201) {\r\n            this.documentForm.get(docVal).patchValue(true);\r\n            this.shotToast(\"Document Uploaded!\");\r\n          } else {\r\n            if (docVal === 'backSide') {\r\n              this.progressValBackArray[i] = 0;\r\n              this.backImageArray[i] = null;\r\n              this.backSelected = null;\r\n              this.shotToast(error.message);\r\n            } else {\r\n              this.progressValFrontArray[i] = 0;\r\n              this.frontImageArray[i] = null;\r\n              this.frontSelected = null;\r\n              this.shotToast(error.message);\r\n            }\r\n          }\r\n        }\r\n    );\r\n  }\r\n\r\n  assignIdValues(docVal: any, id: any) {\r\n    console.log(docVal);\r\n    if (docVal === 'backSide') {\r\n\r\n      this.backSideId = id;\r\n    }\r\n    if (docVal === 'others') {\r\n      this.otherSideId = id;\r\n    }\r\n    if (docVal === 'otherDocument') {\r\n      this.otherDocumentSideId = id;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.shareDataService.shareCustomerId(null);\r\n  }\r\n\r\n  cancelUpload(sideType: string) {\r\n    this.uploadSub.unsubscribe();\r\n    this.shotToast(\"Document Uploaded Cancelled!\");\r\n    if (sideType == 'backSide') {\r\n      this.progressValBackArray[0] = 0;\r\n      this.backImageArray[0] = null;\r\n      this.backSelected = null;\r\n    } else {\r\n      this.progressValFrontArray[0] = 0;\r\n      this.frontImageArray[0] = null;\r\n      this.frontSelected = null;\r\n    }\r\n  }\r\n  \r\n  shotToast(msg: string) {\r\n    this.snack.open(`${msg}`, \"OK\", {\r\n      duration: 6000,\r\n      verticalPosition: \"top\",\r\n      horizontalPosition: \"right\",\r\n    });\r\n  }\r\n\r\n  deleteDocument(report,index)\r\n  {\r\n    console.log(this.customerId, report, index);\r\n    this.customerId=this.ls.getItem('customerId');\r\n\r\n    const deleteRecord = this.documentForm.get('documentsList') as FormArray;\r\n    console.log(deleteRecord);\r\n    deleteRecord.removeAt(index);\r\n\r\n    this.api.delCustDoc(this.customerId, report.documentName).subscribe((data) => {\r\n    console.log(\"data after delete\",data);\r\n      });\r\n  }\r\n\r\nnext(){\r\n  this.router.navigate([`/cardaccount/applicationEnrichment/list`]);\r\n}\r\n\r\nuploadLink(){\r\n  \r\n  this.api.uploadDocLink(LINK_URL,this.custId).subscribe(\r\n    (res: any) => {\r\n      console.log(\"uploadDocLink\",res)\r\n      if(res != \"\" || res == undefined || res != null){\r\n        console.log(\"uploadDocLink\",res)\r\n        const dialogRef = this.dialog.open(SucessMessageComponent, {\r\n          width: \"35%\",\r\n          backdropClass: \"dialog-bg-trans\",\r\n          height: \"50%\",\r\n          disableClose: true,\r\n        });\r\n  \r\n        dialogRef.afterClosed().subscribe((result) => {\r\n          console.log(\"The dialog was closed\", result);\r\n        });\r\n      }\r\n  })\r\n}\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n@Component({\r\n  selector: 'app-financial-details',\r\n  templateUrl: './financial-details.component.html',\r\n  styleUrls: ['./financial-details.component.scss']\r\n})\r\nexport class FinancialDetailsComponent implements OnInit {\r\n  cardFinancialDetailsForm:FormGroup;\r\n  arrayEmploymentType: string[];\r\n  arrayEmploymentCategory: string[];\r\n  //formBuilder: any;\r\n  incomeErrMsg: string;\r\n  disableNext: boolean = false;\r\n  ExpensesErrMsg: any;\r\n  LiabilitiesErrMsg: any;\r\n  assetErrMsg: string;\r\n  liabilitiesErrMsg: string;\r\n  expensesErrMsg: string;\r\n  cardId: any;\r\n  showEditOption:boolean=false;\r\n  minDate = new Date();\r\n   maxDate = new Date();\r\n  applicant: any;\r\n  applicantName: any;\r\n  lastData:any;\r\n  currencySymbol: string;\r\n  currencytype: string;\r\n\r\n\r\n  constructor(   private formBuilder: FormBuilder, private api: ApiService,private snack: MatSnackBar, private accountService: AccountService,\r\n    private router: Router,private ls: LocalStoreService, private cdr:ChangeDetectorRef,\r\n   ) { \r\n    this.lastData = new Date().toISOString().slice(0,10);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    console.log(history.state.amount);\r\n    \r\n    this.cardId = this.ls.getItem('cardId');\r\n    this.currencytype=localStorage.getItem('Currency Type');\r\n    if(this.currencytype===\"INR\"){\r\n      this.currencySymbol=\"₹\"\r\n    }else if(this.currencytype===\"USD\"){\r\n      this.currencySymbol=\"$\"\r\n    }else if(this.currencytype===\"CNY\"){\r\n      this.currencySymbol=\"¥\"\r\n    }else if(this.currencytype===\"GBP\"){\r\n      this.currencySymbol=\"£\"\r\n    }else if(this.currencytype===\"ZAR\"){\r\n      this.currencySymbol=\"R\"\r\n    }\r\n    // this.cardId=this.ls.getItem(\"cardId\");\r\n   // this.applicant=this.ls.getItem('Card_Applicant_name');\r\n    this.applicantName=this.ls.getItem('primaryCustomerName');\r\n    let isFinancialScreen: boolean = JSON.parse(this.ls.getItem('CARD_FINANCIAL_DONE'));\r\n    this.getEmploymentType(\"fin_employment_type\");\r\n    this.getEmploymentCategory(\"employment_category\");\r\n    // setTimeout(() => {\r\n    //   this.buildFinacialFormGroup();\r\n    // },200);\r\n      \r\n  \r\n    if (this.cardId != null && isFinancialScreen) {\r\n      console.log(\"fggd\");\r\n      \r\n      this.showEditOption = true;\r\n      this.getCardFinancialDetailsSummary();\r\n    } else {\r\n      this.showEditOption = false;\r\n      setTimeout(() =>{\r\n        this.buildFinacialFormGroup();\r\n      },200)\r\n      \r\n    }\r\n\r\n\r\n    // this.createFinancialDetail();\r\n  }\r\n  getCardFinancialDetailsSummary(){\r\n    \r\n    this.api.getCardFinancialDetails(this.cardId)\r\n    .subscribe((result: any) => {\r\n\r\n      console.log(result);\r\n      let index = result.length-1;\r\n      this.buildFinacialFormGroup(result[index]);\r\n    })\r\n  }\r\n  getEmploymentType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentType = data;\r\n    });\r\n  }\r\n  getEmploymentCategory(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentCategory = data;\r\n    });\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n   buildFinacialFormGroup(data?) {\r\n     console.log(data);\r\n    this.cardFinancialDetailsForm = this.formBuilder.group({\r\n      // Financial Details\r\n     // applicantName: [this.applicantName, Validators.required],\r\n      applicantName: [data ? data.applicantName : this.ls.getItem('Card_Applicant_name'), Validators.required],\r\n      currentlyWorking: [data ? data.currentlyWorking : ''],\r\n      applicantTotalIncome: [data ? data.applicantTotalIncome : 0, Validators.required],\r\n      applicantTotalExpense: [data ? data.applicantTotalExpense : 0, Validators.required],\r\n      lastUpdatedon: [data && data?.lastUpdatedon ? new Date(data.lastUpdatedon) : ''],\r\n      //limit_end_date: [data ? new Date(data.limit_end_date) : ''],\r\n      \r\n      // Employement Details\r\n      employmentType: [data ? data.employmentType : '', Validators.required],\r\n      employmentCategory: [data ? data.employmentCategory : '', Validators.required],\r\n      employeeNumber: [data ? data.employeeNumber : ''],\r\n      officeName: [data ? data.officeName : ''],\r\n      designation: [data ? data.designation : ''],\r\n      employmentStartDate: [data && data?.employmentStartDate ? new Date(data.employmentStartDate): '', Validators.required],\r\n      employmentEndDate: [data && data?.employmentEndDate ? new Date(data.employmentEndDate): '',],\r\n      \r\n      // Monthly Income\r\n      salary: [data ? data.salary : ''],\r\n      interestIncome: [data ? data.interestIncome : ''],\r\n      bonus: [data ? data.bonus : ''],\r\n      cashGifts: [data ? data.cashGifts : ''],\r\n      business: [data ? data.business : ''],\r\n      pension: [data ? data.pension : ''],\r\n      monthlyIncomeRentals: [data ? data.monthlyIncomeRentals : ''],\r\n      monthlyIncomeOthers: [data ? data.monthlyIncomeOthers : ''],\r\n      monthlyIncomeTotal: [data ? data.monthlyIncomeTotal : 0],\r\n            \r\n      // Monthly Expense\r\n      household: [data ? data.household : ''],\r\n      education: [data ? data.education : ''],\r\n      vehicleMaintenance: [data ? data.vehicleMaintenance : ''],\r\n      monthlyExpenseRentals: [data ? data.monthlyExpenseRentals : ''],\r\n      monthlyExpenseOthers: [data ? data.monthlyExpenseOthers : ''],\r\n      medical: [data ? data.medical : ''],\r\n      travel: [data ? data.travel : ''],\r\n      monthlyExpenseTotal: [data ? data.monthlyExpenseTotal : 0],\r\n      \r\n      // Annual Liability\r\n      propertyLoan: [data ? data.propertyLoan : ''],\r\n      vehicleLoan: [data ? data.vehicleLoan : ''],\r\n      personalLoans: [data ? data.personalLoans : ''],\r\n      overdraft: [data ? data.overdraft : ''],\r\n      cardOutstandings: [data ? data.cardOutstandings : ''],\r\n      liabilityOthers: [data ? data.liabilityOthers : ''],\r\n      liabilityTotal: [data ? data.liabilityTotal : 0],\r\n      \r\n      // Assets\r\n      savingDeposits: [data ? data.savingDeposits : ''],\r\n      properties: [data ? data.properties : ''],\r\n      automobiles: [data ? data.automobiles : ''],\r\n      fixedDeposits: [data ? data.fixedDeposits : ''],\r\n      lands: [data ? data.lands : ''],\r\n      assetOthers: [data ? data.assetOthers : ''],\r\n      stocks: [data ? data.stocks : ''],\r\n      assetTotal: [data ? data.assetTotal : 0],\r\n      \r\n      // accountId; -->need to get from other screens\r\n     // accountId: this.accountId != null ? this.accountId : '',\r\n    }, {validator:(formGroup:FormGroup)=>{\r\n      return this.validateInputGroups(formGroup)\r\n    }\r\n  });\r\n\r\n  }  \r\n  validateInputGroups(formgroup:FormGroup) {\r\n    if(formgroup.controls[\"salary\"].value || formgroup.controls[\"interestIncome\"].value || \r\n    formgroup.controls[\"bonus\"].value || formgroup.controls[\"cashGifts\"].value || \r\n    formgroup.controls[\"business\"].value || formgroup.controls[\"pension\"].value || \r\n    formgroup.controls[\"monthlyIncomeRentals\"].value || formgroup.controls[\"monthlyIncomeOthers\"].value) {\r\n     \r\n      this.incomeErrMsg = null\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.incomeErrMsg = \"Entering any one field is mandatory for Monthly Income Section\";\r\n      this.disableNext = false;\r\n    }\r\n    \r\n    if(formgroup.controls[\"household\"].value || formgroup.controls[\"education\"].value ||\r\n    formgroup.controls[\"vehicleMaintenance\"].value || formgroup.controls[\"monthlyExpenseRentals\"].value ||\r\n    formgroup.controls[\"monthlyExpenseOthers\"].value || formgroup.controls[\"medical\"].value || \r\n    formgroup.controls[\"travel\"].value) {\r\n\r\n      this.ExpensesErrMsg = null;\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.ExpensesErrMsg = \"Entering any one field is mandatory for Monthly Expenses Section\";\r\n      this.disableNext = false;\r\n    }\r\n    \r\n    if(formgroup.controls[\"propertyLoan\"].value || formgroup.controls[\"vehicleLoan\"].value ||\r\n    formgroup.controls[\"personalLoans\"].value || formgroup.controls[\"overdraft\"].value ||\r\n    formgroup.controls[\"cardOutstandings\"].value || formgroup.controls[\"liabilityOthers\"].value) {\r\n      \r\n      this.LiabilitiesErrMsg = null;\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.LiabilitiesErrMsg = \"Entering any one field is mandatory for Annual Liabilities Section\";\r\n      this.disableNext = false;\r\n    }\r\n    \r\n    if(formgroup.controls[\"savingDeposits\"].value || formgroup.controls[\"properties\"].value ||\r\n    formgroup.controls[\"automobiles\"].value || formgroup.controls[\"fixedDeposits\"].value ||\r\n    formgroup.controls[\"lands\"].value || formgroup.controls[\"assetOthers\"].value || \r\n    formgroup.controls[\"stocks\"].value) {\r\n\r\n      this.assetErrMsg = null;\r\n        this.disableNext = true;\r\n      \r\n    }\r\n    else {\r\n      this.assetErrMsg = \"Entering any one field is mandatory for Asset Section\";\r\n      this.disableNext = false;\r\n    }\r\n  }\r\n  \r\n  onSubmit() {\r\n    let startDate = this.converDate(this.cardFinancialDetailsForm.controls.employmentStartDate.value);\r\n    if(startDate && startDate!= \"Invalid date\"){\r\n    console.log(\"startDate\", startDate);\r\n    this.cardFinancialDetailsForm.value['employmentStartDate'] = startDate;\r\n    }else{\r\n      this.cardFinancialDetailsForm.value['employmentStartDate'] = null;\r\n    }\r\n    let endDate = this.converDate(this.cardFinancialDetailsForm.controls.employmentEndDate.value);\r\n    if(endDate && endDate!= \"Invalid date\"){\r\n      console.log(\"startDate\", endDate);\r\n      this.cardFinancialDetailsForm.value['employmentEndDate'] = endDate;\r\n    }else{\r\n      this.cardFinancialDetailsForm.value['employmentEndDate'] = null;\r\n    }\r\n    \r\n    //let lastUpdatedon = this.converDate(this.cardFinancialDetailsForm.controls.lastUpdatedon.value);\r\n    let lastUpdatedon =moment(this.cardFinancialDetailsForm.controls.lastUpdatedon.value).format('YYYY-MM-DD HH:MM:SS');\r\n    console.log(\"lastUpdatedon\",lastUpdatedon)\r\n    if(lastUpdatedon && lastUpdatedon!= \"Invalid date\"){\r\n      console.log(\"startDate\", lastUpdatedon);\r\n      this.cardFinancialDetailsForm.value['lastUpdatedon'] = lastUpdatedon;\r\n    }else{\r\n      this.cardFinancialDetailsForm.value['lastUpdatedon'] = null;\r\n    }\r\n\r\n    this.cardFinancialDetailsForm.value.accountType=\"cardOrigin\";\r\n    this.cardFinancialDetailsForm.value.cardId=this.cardId; \r\n    console.log(\"submit\", this.cardFinancialDetailsForm.value);\r\n    console.log(this.cardFinancialDetailsForm.value)\r\n    var payload: any[]=[];\r\n    payload.push(this.cardFinancialDetailsForm.value)\r\n    console.log(payload);\r\n    // if (!this.cardFinancialDetailsForm.value.applicantName || !this.cardFinancialDetailsForm.value.employmentType || !this.cardFinancialDetailsForm.value.employmentCategory) {\r\n    //   console.log(\"if--->\")\r\n    //   Swal.fire('Please Enter The Mandatory Fields !');\r\n    //   return false;\r\n    // }\r\n    this.api.upsertCardFinancialDetails(payload).subscribe(fincialResp => {\r\n\r\n      console.log(fincialResp);\r\n      this.snack.open('Financial Details Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n\r\n      // this.ls.setItem('limitEntryStage', 'true');\r\n      // this.ls.setItem('LIMIT_FIN_DONE', true);\r\n      //  this.accountService.refresh.next();\r\n       this.next();\r\n      // limit-entry-stage/view-summary\r\n      //this.router.navigate([`/home/application/enrichment/list`, this.accountId]);\r\n\r\n    }, err => {\r\n      this.snack.open('Error Unable to Save!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n\r\n  }\r\n  goBack(){\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/customerInformation`]);\r\n  }\r\n  next(){\r\n    this.ls.setItem('CARD_FINANCIAL_DONE', true)\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/cardPrefrence`]);\r\n   \r\n  }\r\n  converDate(value) {\r\n    // let date = moment(value).format('YYYY-MM-DDThh:mm:ss');\r\n    let date = moment(value).format('YYYY-MMM-DD');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n                return true;\r\n            else\r\n                return false;\r\n  }\r\n  // Total Monthly Income\r\n  calculateTotalMonthlyIncome(value) {\r\n    let income:number = Number(value.salary) + Number(value.business) + \r\n    Number(value.interestIncome) + Number(value.pension) + \r\n    Number(value.bonus) + Number(value.monthlyIncomeOthers) + \r\n    Number(value.monthlyIncomeRentals) + Number(value.cashGifts);\r\n    \r\n    // this.cardFinancialDetailsForm.controls.monthlyIncome.get('monthlyIncomeTotal').setValue(income);\r\n    this.cardFinancialDetailsForm.controls.monthlyIncomeTotal.setValue(income);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n\r\n    this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsForm.value);\r\n  }\r\n\r\n  // Total Monthly Expense\r\n  calculateTotalMonthlyExpenses(value) {\r\n    let expense:number = Number(value.household) + Number(value.education) + \r\n      Number(value.vehicleMaintenance) + Number(value.monthlyExpenseOthers) + \r\n      Number(value.medical) + Number(value.travel) + \r\n      Number(value.monthlyExpenseRentals);\r\n\r\n    // this.cardFinancialDetailsForm.controls.monthlyExpense.get('monthlyExpenseTotal').setValue(expense);\r\n    this.cardFinancialDetailsForm.controls.monthlyExpenseTotal.setValue(expense);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n\r\n    this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsForm.value);\r\n  }\r\n\r\n  // Total Liabilities\r\n  calculateTotalLiabilities(value) {\r\n    let liability:number = Number(value.propertyLoan) + Number(value.personalLoans) + \r\n    Number(value.overdraft) + Number(value.vehicleLoan) + \r\n    Number(value.cardOutstandings) + Number(value.liabilityOthers);\r\n\r\n    // this.cardFinancialDetailsForm.controls.annualLiability.get('liabilityTotal').setValue(liability);\r\n    this.cardFinancialDetailsForm.controls.liabilityTotal.setValue(liability);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n    \r\n    this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsForm.value);\r\n  }\r\n\r\n  // Total Assets\r\n  calculateTotalAssets(value) {\r\n    let asset:number = Number(value.savingDeposits) + Number(value.properties) + \r\n    Number(value.fixedDeposits) + Number(value.stocks) + \r\n    Number(value.automobiles) + Number(value.lands) + Number(value.assetOthers);\r\n\r\n    // this.cardFinancialDetailsForm.controls.assets.get('assetTotal').setValue(asset);\r\n    this.cardFinancialDetailsForm.controls.assetTotal.setValue(asset);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n    \r\n    this.calculateTotalIncomeAndExpense(this.cardFinancialDetailsForm.value);\r\n  }\r\n\r\n  // Total Income, Expense and Final Total\r\n  calculateTotalIncomeAndExpense(value) {\r\n\r\n    let totalIncome:number = value.monthlyIncomeTotal + value.assetTotal;\r\n    let totalExpense:number = value.monthlyExpenseTotal + value.liabilityTotal;\r\n\r\n    this.cardFinancialDetailsForm.controls.applicantTotalIncome.setValue(totalIncome);\r\n    this.cardFinancialDetailsForm.controls.applicantTotalExpense.setValue(totalExpense);\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n   }\r\n\r\n}\r\n","<div class=\"matcard-size\">\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img\r\n        src=\"assets/images/svg/MaskGroup_2.svg\"\r\n        alt=\"\"\r\n        class=\"w-90\"\r\n      />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\">Financial Details</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div>\r\n  <form  *ngIf=\"cardFinancialDetailsForm\" [formGroup]=\"cardFinancialDetailsForm\">\r\n    <div fxLayout=\"row\">\r\n      <div fxFlex=\"100\">\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">Financial Details</div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Applicant Name</mat-label>\r\n                    <input\r\n                      matInput\r\n                      formControlName=\"applicantName\"\r\n                      \r\n                      placeholder=\"Applicant Name\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total Income*</mat-label>\r\n                    <span matPrefix>{{currencySymbol}}&nbsp;</span>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                      \r\n                      formControlName=\"applicantTotalIncome\"\r\n                      placeholder=\"Total Income\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Last Update On</mat-label>\r\n                    <input\r\n                      matInput\r\n                      id=\"dob\"\r\n                      class=\"alignment\"\r\n                      readonly\r\n                      [matDatepicker]=\"picker\"\r\n                      [max]=\"lastData\"\r\n                      value=\"offerIssueDate\"\r\n                      placeholder=\"DD/MM/YYYY\"\r\n                      formControlName=\"lastUpdatedon\"\r\n                    />\r\n                   \r\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                      </mat-datepicker-toggle>\r\n\r\n                      <mat-datepicker #picker> </mat-datepicker>\r\n                   \r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Currently Working</mat-label>\r\n                    <input\r\n                      matInput\r\n                      type=\"text\"\r\n                      formControlName=\"currentlyWorking\"\r\n                      placeholder=\"Currently Working\"\r\n                    />\r\n                    <!-- <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('currentlyWorking')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please enter Currently Working\r\n                    </mat-error> -->\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total Expenses*</mat-label>\r\n                    <span class=\"curr_icon\" matPrefix>{{currencySymbol}}&nbsp;</span>\r\n                    <input\r\n                      matInput\r\n                      type=\"number\"\r\n                     \r\n                      formControlName=\"applicantTotalExpense\"\r\n                      placeholder=\"Total  Expenses\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n                <!-- <div class=\"pb-1\">\r\n                  <button mat-button color=\"primary\">Edit</button>\r\n                </div> -->\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">Employment Details</div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <!-- <form  [formGroup]=\"cardFinancialDetailsForm\"> -->\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Employment Type *</mat-label>\r\n                    <mat-select formControlName=\"employmentType\">\r\n                      <mat-option\r\n                        *ngFor=\"let employmentType of arrayEmploymentType\"\r\n                        [value]=\"employmentType\"\r\n                      >\r\n                        {{ employmentType }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('employmentType')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please select the Employment Type\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Employee number</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxLength=\"5\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      formControlName=\"employeeNumber\"\r\n                      placeholder=\"Employee Number\"\r\n                      [required]=\"cardFinancialDetailsForm\r\n                          .get('employmentType').value == 'Salaried'\"\r\n                      \r\n                    />\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('employeeNumber')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please enter the Employee Number\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Designation</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"20\"\r\n                      name=\"Designation\"\r\n                      formControlName=\"designation\"\r\n                      placeholder=\"Designation\"\r\n                      (keypress)=\"letterOnly($event)\"\r\n                      [required]=\"cardFinancialDetailsForm\r\n                          .get('employmentType').value == 'Salaried'\"\r\n                    />\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('designation')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please enter the Designation\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Employment Start Date *</mat-label>\r\n                    <input\r\n                      matInput\r\n                      id=\"dob\"\r\n                      class=\"alignment\"\r\n                      readonly\r\n                      [max]=\"maxDate\"\r\n                      [matDatepicker]=\"start\"\r\n                      value=\"offerIssueDate\"\r\n                      placeholder=\"DD/MM/YYYY\"\r\n                      formControlName=\"employmentStartDate\"\r\n                    />\r\n\r\n                    <mat-datepicker-toggle matSuffix [for]=\"start\">\r\n                    </mat-datepicker-toggle>\r\n\r\n                    <mat-datepicker #start> </mat-datepicker>\r\n\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('employmentStartDate')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Employment Start Date is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Employment Category *</mat-label>\r\n                    <mat-select\r\n                      name=\"employmentCategory\"\r\n                      formControlName=\"employmentCategory\"\r\n                    >\r\n                      <mat-option\r\n                        *ngFor=\"\r\n                          let employmentCategory of arrayEmploymentCategory\r\n                        \"\r\n                        [value]=\"employmentCategory\"\r\n                      >\r\n                        {{ employmentCategory }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('employmentCategory')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please select the Employment Category\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Office Name</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"20\"\r\n                      name=\"Office Name\"\r\n                      formControlName=\"officeName\"\r\n                      placeholder=\"Office Name\"\r\n                      (keypress)=\"letterOnly($event)\"\r\n                      [required]=\"cardFinancialDetailsForm\r\n                          .get('employmentType').value == 'Salaried'\"\r\n                    />\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('officeName')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Please enter the Office Name\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Employment End Date</mat-label>\r\n\r\n                    <input\r\n                      matInput\r\n                      id=\"dob\"\r\n                      class=\"alignment\"\r\n                      readonly\r\n                      [matDatepicker]=\"end\"\r\n                      [min]=\"cardFinancialDetailsForm\r\n                      .get('employmentStartDate').value\"\r\n                      value=\"offerIssueDate\"\r\n                      placeholder=\"DD/MM/YYYY\"\r\n                      formControlName=\"employmentEndDate\"\r\n                    />\r\n\r\n                    <mat-datepicker-toggle matSuffix [for]=\"end\">\r\n                    </mat-datepicker-toggle>\r\n\r\n                    <mat-datepicker #end> </mat-datepicker>\r\n\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        cardFinancialDetailsForm\r\n                          .get('employmentEndDate')\r\n                          .hasError('required')\r\n                      \"\r\n                    >\r\n                      Employment End Date is Required!\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- </form> -->\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">\r\n              Monthly Income\r\n              <div class=\"ErrMsg\">{{ incomeErrMsg }}</div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Bonus</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"bonus\"\r\n                      name=\"bonus\"\r\n                      placeholder=\"Bonus\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Interest Income</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"interestIncome\"\r\n                      name=\"interestIncome\"\r\n                      placeholder=\"Interest Income\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Salary</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"salary\"\r\n                      name=\"salary\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      placeholder=\"Salary\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Cash Gifts</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"cashGifts\"\r\n                      name=\"cashGifts\"\r\n                      placeholder=\"Cash Gifts\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"monthlyIncomeTotal\"\r\n                      placeholder=\"Total\"\r\n                      readonly\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Business</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"business\"\r\n                      formControlName=\"business\"\r\n                      placeholder=\"Business\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Pension</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"pension\"\r\n                      formControlName=\"pension\"\r\n                      placeholder=\"Pension\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Rentals</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"monthlyIncomeRentals\"\r\n                      formControlName=\"monthlyIncomeRentals\"\r\n                      placeholder=\"Rentals\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Others</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"monthlyIncomeOthers\"\r\n                      formControlName=\"monthlyIncomeOthers\"\r\n                      placeholder=\"Others\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyIncome(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">\r\n              Monthly Expenses\r\n              <div class=\"ErrMsg\">{{ ExpensesErrMsg }}</div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Household</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"household\"\r\n                      name=\"household\"\r\n                      placeholder=\"Household\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Education</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"education\"\r\n                      name=\"mod\"\r\n                      placeholder=\"Education\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Vehicle Maintenance</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"vehicleMaintenance\"\r\n                      name=\"mod\"\r\n                      placeholder=\"Vehicle Maintenance\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Others</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"monthlyExpenseOthers\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                      placeholder=\"Others\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"monthlyExpenseTotal\"\r\n                      name=\"monthlyExpenseTotal\"\r\n                      placeholder=\"Total\" readonly\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Medical</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"medical\"\r\n                      formControlName=\"medical\"\r\n                      placeholder=\"Medical\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Travel</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"a_sig\"\r\n                      formControlName=\"travel\"\r\n                      placeholder=\"Travel\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Rentals</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"a_sig\"\r\n                      formControlName=\"monthlyExpenseRentals\"\r\n                      placeholder=\"Rentals\"\r\n                      (input)=\"\r\n                        calculateTotalMonthlyExpenses(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">\r\n              Annual Liabilities\r\n              <div class=\"ErrMsg\">{{ LiabilitiesErrMsg }}</div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Property Loans</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"propertyLoan\"\r\n                      placeholder=\"Property Loan\"\r\n                      formControlName=\"propertyLoan\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Personal Loans</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"personalLoans\"\r\n                      formControlName=\"personalLoans\"\r\n                      placeholder=\"Personal Loans\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Overdrafts</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      name=\"overdraft\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"overdraft\"\r\n                      placeholder=\"Overdrafts\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"liabilityTotal\"\r\n                      placeholder=\"Total\"\r\n                      formControlName=\"liabilityTotal\" readonly\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Vehicle Loans</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      formControlName=\"vehicleLoan\"\r\n                      name=\"vehicleLoan\"\r\n                      placeholder=\"Vehicle Loans\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Cards Outstanding's</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"cardOutstandings\"\r\n                      formControlName=\"cardOutstandings\"\r\n                      placeholder=\"Cards Outstanding's\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Others</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"liabilityOthers\"\r\n                      formControlName=\"liabilityOthers\"\r\n                      placeholder=\"Others\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalLiabilities(\r\n                          cardFinancialDetailsForm.value\r\n                        )\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-title class=\"\">\r\n            <div class=\"card-title-text\">\r\n              Asset\r\n              <div class=\"ErrMsg\">{{ assetErrMsg }}</div>\r\n            </div>\r\n            <mat-divider></mat-divider>\r\n          </mat-card-title>\r\n          <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Savings Deposits</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"savingDeposits\"\r\n                      placeholder=\"Saving Deposits\"\r\n                      formControlName=\"savingDeposits\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Properties</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"properties\"\r\n                      formControlName=\"properties\"\r\n                      placeholder=\"Properties\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Fixed Deposits</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"fixedDeposits\"\r\n                      formControlName=\"fixedDeposits\"\r\n                      placeholder=\"Fixed Deposits\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Others</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"assetOthers\"\r\n                      placeholder=\"Others\"\r\n                      formControlName=\"assetOthers\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Total</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"assetTotal\"\r\n                      formControlName=\"assetTotal\"\r\n                      placeholder=\"Total\" readonly\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Stocks/Funds</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      placeholder=\"Stocks/Funds\"\r\n                      formControlName=\"stocks\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Automobiles</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"automobiles\"\r\n                      placeholder=\"Automobiles\"\r\n                      formControlName=\"automobiles\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Lands</mat-label>\r\n                    <input\r\n                      matInput\r\n                      maxlength=\"10\"\r\n                      type=\"text\"\r\n                      onlyNumber\r\n                      name=\"lands\"\r\n                      placeholder=\"Lands\"\r\n                      formControlName=\"lands\"\r\n                      (keypress)=\"_keyPress($event)\"\r\n                      (input)=\"\r\n                        calculateTotalAssets(cardFinancialDetailsForm.value)\r\n                      \"\r\n                    />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\">\r\n      <div fxFlex=\"100\">\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"space-between center\"\r\n          fxLayoutGap=\"16px\"\r\n          class=\"mt-32\"\r\n        >\r\n          <button mat-button rounded  (click)=\"goBack()\">\r\n            Back\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            class=\"Nextbtn\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            [disabled]=\"\r\n              incomeErrMsg || ExpensesErrMsg || LiabilitiesErrMsg || assetErrMsg || !cardFinancialDetailsForm.valid\r\n            \"\r\n            (click)=\"onSubmit()\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n// import { AccountService } from 'app/views/home/account.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\nimport { UrlService } from 'app/views/home/url.service';\r\n\r\nimport { flow } from 'lodash';\r\nimport { flatMap, filter } from 'lodash/fp';\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-account-services',\r\n  templateUrl: './card-account-services.component.html',\r\n  styleUrls: ['./card-account-services.component.scss']\r\n})\r\nexport class CardAccountServicesComponent implements OnInit {\r\n\r\n  show: boolean = false;\r\n  selectedRow= false;\r\n  // selection = new SelectionModel<PeriodicElement>(true, []);\r\n  accountServiceForm: FormGroup;\r\n  statementList = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"EMAIL\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"POST\",\r\n      \"checked\": false\r\n    }\r\n  ];\r\n  communicationList = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"EMAIL\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"POST\",\r\n      \"checked\": false\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"name\": \"SMS\",\r\n      \"checked\": false\r\n    }\r\n  ];\r\n\r\n  commChannelPreferencesArray : any[] = [];\r\n  AccStatementPreferenceArray : any[] = [];\r\n  accountId: any;\r\n  isNew: boolean;\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  previousUrl: string = '';\r\n  enableFinish: boolean=false;\r\n  statementFrncy: string;\r\n  bankChanlPref: string;\r\n  cardId:any;\r\n  constructor(private router: Router, private urlService: UrlService, private dataService: DataService, private route: ActivatedRoute, private snack: MatSnackBar, private ls: LocalStoreService, private accountService: AccountService, private formBuilder: FormBuilder, private apiService: ApiService, private cdr:ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem('cardId');\r\n    let isAccountServiceDone:boolean = JSON.parse(this.ls.getItem('CARD_ACC_SERVICE_DONE'));\r\n\r\n    if(this.cardId != null && isAccountServiceDone){\r\n      console.log(\"editform is true\");\r\n      this.showEditOption = true;\r\n      this.gettingAccountService();\r\n      // call api service and build data with response\r\n    }else{\r\n      this.showEditOption = false;\r\n      this.buildServiceForm();\r\n      console.log(\"editform is false\");\r\n      this.accountServiceForm.controls['statementPref'].patchValue(this.statementList);\r\n      this.accountServiceForm.controls['commChannelPref'].patchValue(this.communicationList);\r\n      // build form without data for capturing\r\n    }\r\n  \r\n    console.log(\"showEditOption\", this.showEditOption);\r\n    this.urlService.previousUrl$\r\n    .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n    });\r\n\r\n  }\r\n\r\n  gettingAccountService() {\r\n    this.apiService.gettingCardAccountServiceDetails(this.cardId)\r\n    .subscribe((resp: any) => {\r\n      console.log(\"All Account Service\", resp);\r\n      this.buildServiceForm(resp);\r\n      this.statementList = resp.statementPref;\r\n      this.communicationList = resp.commChannelPref;\r\n     \r\n      // console.log(\"showEditOption\", this.showEditOption);\r\n      this.cdr.markForCheck();\r\n\r\n      for(var i =0 ;i< this.communicationList.length;i++){\r\n      \r\n        if(this.communicationList[i].checked){\r\n          this.commChannelPreferencesArray.push(this.communicationList[i].name);\r\n        }\r\n      }\r\n      for(var i =0 ;i< this.statementList.length;i++){\r\n        if(this.statementList[i].checked){\r\n          this.AccStatementPreferenceArray.push(this.statementList[i].name);\r\n        }\r\n      }\r\n      \r\n      localStorage.setItem('statementFrequency', resp.statementFrequency);\r\n      this.enableFinish=true;\r\n     \r\n    });\r\n  }\r\n  statementFrequency(e){\r\n    this.statementFrncy=localStorage.getItem('statementFrequency');\r\n    if(e!=this.statementFrncy){\r\n      this.enableFinish=true;\r\n    }\r\n  }\r\n  \r\n\r\n  buildServiceForm(data?) {\r\n    this.accountServiceForm = this.formBuilder.group({\r\n      accServiceId: [data ? data.accServiceId : null],\r\n      productAccountId: [this.accountId != null ? this.accountId : null],\r\n      statementFrequency: [data ? data.statementFrequency : ''],\r\n      statementPref: [data ? this.flattenValues(data.statementPref) : ''],\r\n    \r\n      commChannelPref: [data ? this.flattenValues(data.commChannelPref) : ''],\r\n     \r\n    });\r\n  }\r\n\r\n  onChecklistChange(checked, checkbox) {\r\n    checkbox.checked = checked;\r\n    this.enableFinish=true;\r\n    const checklist = this.accountServiceForm.get('statementPref');\r\n    checklist.setValue(this.flattenValues(this.statementList));\r\n    if(checked){\r\n      this.AccStatementPreferenceArray.push(checkbox.name);\r\n    }\r\n    else{\r\n      this.AccStatementPreferenceArray.forEach( (item, index) => {\r\n        if(item === checkbox.name){\r\n          this.AccStatementPreferenceArray.splice(index,1);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onCheckComChange(checked, checkbox) {\r\n    console.log(checked);\r\n    console.log(checkbox);\r\n    checkbox.checked = checked;\r\n    const checklist = this.accountServiceForm.get('commChannelPref');\r\n    checklist.setValue(this.flattenValues(this.communicationList));\r\n    if(checked){\r\n      this.commChannelPreferencesArray.push(checkbox.name);\r\n      console.log(\"checked\",checkbox.name);\r\n      this.enableFinish=true;\r\n    }\r\n    else{\r\n      this.commChannelPreferencesArray.forEach( (item, index) => {\r\n        if(item === checkbox.name){\r\n          this.commChannelPreferencesArray.splice(index,1);\r\n          console.log(\"checked\",checkbox.name);\r\n          this.enableFinish=true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  flattenValues(checkboxes) {\r\n    const flattenedValues = flow([\r\n      filter(checkbox => checkbox.checked),\r\n      flatMap(checkbox => checkbox.name)\r\n    ])(checkboxes);\r\n    return flattenedValues.join(',');\r\n  }\r\n\r\n  isObjectEmpty(value) {\r\n    return (\r\n      Object.prototype.toString.call(value) === '[object Object]' &&\r\n      JSON.stringify(value) === '{}'\r\n    );\r\n  }\r\n\r\n  togglePreference() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/cardPrefrence`]);\r\n  }\r\n\r\n  onSubmit() {\r\n  \r\n    let accountPayload = {\r\n     // \"productAccountId\": this.accountId,\r\n      // \"cardId\":this.accountServiceForm.value.accServiceId,\r\n      \"cardId\":this.cardId,\r\n      \"statementFrequency\": this.accountServiceForm.value.statementFrequency,\r\n      \"statementPref\": this.statementList,\r\n     \r\n      \"commChannelPref\": this.communicationList,\r\n     \r\n      \"accountType\": \"cardOrigin\"\r\n    };\r\n\r\n    if (this.accountServiceForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.showEditOption) {\r\n      this.apiService.updateAccountService(this.cardId, accountPayload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n          //this.accountService.refresh.next();\r\n          //this.router.navigate([`/home/application/nominee/add/${this.accountId}`]);\r\n          this.snack.open('Account Service Updated!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n          //this.router.navigate([`/cardaccount/documentupload/list`]);\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      this.apiService.createAccountService(this.cardId, accountPayload)\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n         // this.ls.setItem('CARD_ACC_SERVICE_DONE', true);\r\n        //  this.accountService.refresh.next();\r\n         // this.router.navigate([`/home/application/nominee/add/${this.accountId}`]);\r\n          this.snack.open('Account Service Saved!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    this.goToNext()\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n  goToNext(){  \r\n    this.ls.setItem('CARD_ACC_SERVICE_DONE', true);\r\n    this.ls.setItem('CARD_APPLICATION_ENTRY_DONE',true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/documentupload/list`]);\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/undraw_opinion_dxp8.svg\"\r\n          alt=\"\"\r\n          class=\"w-90\"\r\n        />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Account Services</b></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-title-text\">Account Services</div>\r\n  <div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0 bordercard\" >\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">Account Statement</div>\r\n          <mat-divider class=\"bordercard\"></mat-divider>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form *ngIf=\"accountServiceForm\" [formGroup]=\"accountServiceForm\">\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                <div class=\"pb-1\">\r\n                  <label><strong>Account Statement Frequency*</strong></label>\r\n                  <div class=\"m-16\"></div>\r\n                  <mat-radio-group\r\n                    class=\"mt-12\"\r\n                    name=\"statementFreq\"\r\n                    formControlName=\"statementFrequency\" (change)=\"statementFrequency($event.value)\"\r\n                    \r\n                    required  \r\n                  >\r\n                    <mat-radio-button value=\"MONTHLY\" class=\"ml-8\" color=\"primary\"\r\n                      >Monthly</mat-radio-button\r\n                    >\r\n                    <mat-radio-button\r\n                      value=\"BIANNUAL\"\r\n                      class=\"ml-16\"\r\n                      color=\"primary\"\r\n                      >Bi-Annual</mat-radio-button\r\n                    >\r\n                    <div class=\"m-16\"></div>\r\n                    <mat-radio-button\r\n                      value=\"QUATERLY\"\r\n                      class=\"ml-8\"\r\n                      color=\"primary\"\r\n                      >Quaterly</mat-radio-button\r\n                    >\r\n                    <mat-radio-button value=\"ANNUAL\" class=\"ml-16\" color=\"primary\"\r\n                      >Annual</mat-radio-button\r\n                    >\r\n                  </mat-radio-group>\r\n                </div>\r\n              </div>\r\n  \r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                <div class=\"pb-1\">\r\n                  <label><strong>Account Statement Preference*</strong></label>\r\n                  <div class=\"m-16\"></div>\r\n                  <p\r\n                    *ngFor=\"let item of statementList\"\r\n                    formArrayName=\"statementPref\"\r\n                  >\r\n                    <mat-checkbox\r\n                      class=\"checkbox-margin\"\r\n                      color=\"primary\"\r\n                      (change)=\"onChecklistChange($event.checked, item)\"\r\n                      [value]=\"item\"\r\n                      [checked]=\"item.checked\"\r\n                      >{{ item.name }}\r\n                    </mat-checkbox>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!--<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mt-32\">\r\n              <button\r\n                mat-button\r\n                rounded\r\n                color=\"primary\"\r\n               \r\n              >\r\n               ADD PREFERENCE  <!--<mat-icon>keyboard_arrow_down</mat-icon>  -->\r\n               <!--removed event from button  (click)=\"togglePreference()\"\r\n              </button>\r\n            </div>-->\r\n            <div class=\"m-32\"></div>\r\n            <!--removing if condition for ng-container *ngIf=\"show\"-->\r\n            <ng-container >\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                \r\n                \r\n  \r\n                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                  <div fxLayout=\"row wrap\">\r\n                    <div fxFlex=\"100\">\r\n                      <label\r\n                        ><strong>Communication Channel Preferences*</strong></label\r\n                      >\r\n                      <div class=\"m-12\"></div>\r\n                    </div>\r\n                    <div fxFlex=\"100\">\r\n                      <div\r\n                        fxFlex=\"25\"\r\n                        *ngFor=\"let item of communicationList\"\r\n                        formArrayName=\"commChannelPref\"\r\n                       \r\n                      >\r\n                        <mat-checkbox\r\n                        color=\"primary\"\r\n                          class=\"checkbox-margin\"\r\n                          (change)=\"onCheckComChange($event.checked, item)\"\r\n                          [value]=\"item\"\r\n                          [checked]=\"item.checked\"\r\n                          >{{ item.name }}\r\n                        </mat-checkbox>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n              \r\n            </ng-container>\r\n  \r\n            \r\n            <!-- [disabled]=\" !enableFinish || !accountServiceForm.valid ||\r\n               commChannelPreferencesArray.length == 0 || AccStatementPreferenceArray.length == 0\" -->\r\n               <!-- [disabled]=\"!accountServiceForm.valid\" -->\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n      <div\r\n              fxLayout=\"row\"\r\n              fxLayoutAlign=\"space-between center\"\r\n              fxLayoutGap=\"16px\"\r\n              class=\"mt-32\"\r\n            >\r\n              <button mat-button rounded class=\"Backbtn\"  (click)=\"goBack()\" >\r\n                Back\r\n              </button>\r\n              <button class=\"Nextbtn\" mat-raised-button (click)=\"onSubmit()\"  [disabled]=\"  !accountServiceForm.valid ||\r\n              commChannelPreferencesArray.length == 0 || AccStatementPreferenceArray.length == 0\" \r\n               color=\"primary\" >\r\n                Next\r\n              </button>\r\n            </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnInit,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SignaturePad } from \"angular2-signaturepad\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { ApplicationEntryStageService } from \"app/shared/services/application-entry-stage.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AccountService } from \"app/views/home/account.service\";\r\n\r\n@Component({\r\n  selector: \"app-esignature-pop\",\r\n  templateUrl: \"./esignature-pop.component.html\",\r\n  styleUrls: [\"./esignature-pop.component.scss\"],\r\n})\r\nexport class EsignaturePopComponent implements OnInit {\r\n  signatureImg: string;\r\n  @ViewChild(SignaturePad) signaturePad: SignaturePad;\r\n  isDone: boolean = false;\r\n  signaturePadOptions: Object = {\r\n    minWidth: 2,\r\n    canvasWidth: 700,\r\n    canvasHeight: 300,\r\n  };\r\n  accountdetailsForStatusUpdate: Object;\r\n  count: any = 0;\r\n  show: boolean;\r\n  res: Object = { enable: false, image: null };\r\n  disableDone: boolean = true;\r\n  signupload: boolean = true;\r\n  selectedFile: any;\r\n  imageurl: any;\r\n  cardId: any;\r\n  esignUrl: string;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<EsignaturePopComponent>,\r\n    private ls: LocalStoreService,\r\n    private router: Router,\r\n    private accountService: AccountService,\r\n    private apiService: ApiService,\r\n    private appEntryService: ApplicationEntryStageService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem(\"cardId\");\r\n    console.log(\"popup response data:\", this.data);\r\n    this.isDone = this.data.isSignLater;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.signaturePad is now available\r\n    this.signaturePad.set(\"minWidth\", 2);\r\n    this.signaturePad.clear();\r\n  }\r\n\r\n  drawComplete() {\r\n    console.log(this.signaturePad.toDataURL());\r\n    this.esignUrl = this.signaturePad.toDataURL();\r\n    if (this.esignUrl.toString().includes(\"data:image/png;base64\")) {\r\n      this.disableDone = false;\r\n    } else {\r\n      this.disableDone = true;\r\n    }\r\n  }\r\n\r\n  drawStart() {\r\n    console.log(\"begin drawing\");\r\n  }\r\n\r\n  clearSignature() {\r\n    this.signaturePad.clear();\r\n  }\r\n\r\n  savePad() {\r\n    const base64Data = this.signaturePad.toDataURL();\r\n    this.signatureImg = base64Data;\r\n  }\r\n\r\n  close1() {\r\n    if (this.data.screen === \"NewCustomerOnboarding\") {\r\n      this.dialogRef.close(this.res);\r\n    } else {\r\n      this.dialogRef.close({ image: this.ls.getItem('signedImage')?this.ls.getItem('signedImage'):''  });\r\n      this.ls.setItem(\"enable\", false);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    if (this.data.screen === \"NewCustomerOnboarding\") {\r\n      this.dialogRef.close(this.res);\r\n    } else {\r\n      this.dialogRef.close({ image: this.esignUrl });\r\n      // this.ls.setItem('enable', true);\r\n    }\r\n  }\r\n\r\n  // onFileChanged(event) {\r\n  //   this.selectedFile = event.target.files[0];\r\n  //   console.log(this.selectedFile);\r\n\r\n  //   this.disableDone = false;\r\n  // }\r\n\r\n  onSubmit() {\r\n    console.log(this.signaturePad.toDataURL());\r\n    let data: any = {};\r\n    let uploadModel: any = {};\r\n    console.log(\"this.data::\", this.data);\r\n    if (this.data.screen !== \"NewCustomerOnboarding\") {\r\n      uploadModel.cardId = this.data.accountId;\r\n      this.getByAccountId(uploadModel.cardId);\r\n    } else {\r\n      let customerId = this.data.customerId;\r\n      this.apiService.getAccountIdByCusId(customerId).subscribe((res) => {\r\n        console.log(\"Account Id response -- \", res);\r\n        data.accountId = res;\r\n      });\r\n      this.res = { enable: true, image: this.signaturePad.toDataURL() };\r\n    }\r\n\r\n    uploadModel.customerId = this.data.customerId;\r\n    uploadModel.documentName = this.data.customerId + \"Signature\";\r\n    uploadModel.documentType = \"10\";\r\n    uploadModel.fileType = \"image/jpeg\";\r\n    uploadModel.fileName = \"signature\";\r\n\r\n    const dataURL = this.signaturePad.toDataURL(\"image/png\");\r\n    this.ls.setItem('signedImage',dataURL);\r\n    const datam = atob(dataURL.substring(\"data:image/png;base64,\".length)),\r\n      asArray = new Uint8Array(datam.length);\r\n    for (var i = 0, len = datam.length; i < len; ++i) {\r\n      asArray[i] = datam.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([asArray], { type: \"image/png\" });\r\n    data[\"uploadModel\"] = uploadModel;\r\n    data.noOfSignatures = \"1\";\r\n\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    console.log(\"data\", data);\r\n    uploadData.append(\"file\", blob);\r\n    uploadData.append(\"accType\", \"cardOrigin\");\r\n\r\n    this.apiService.uploadSignature(uploadData).subscribe(\r\n      (op) => {\r\n        console.log(op);\r\n        if (op) {\r\n          this.close();\r\n          this.show = true;\r\n          this.ls.setItem(\"enable\", true);\r\n          this.res = op;\r\n        }\r\n      },\r\n      (err) => {\r\n        this.close();\r\n        this.res = false;\r\n      }\r\n    );\r\n    if (this.data.screen !== \"NewCustomerOnboarding\") {\r\n      this.isDone = false;\r\n    } else {\r\n      this.close();\r\n    }\r\n    console.log(this.isDone);\r\n    this.ls.setItem(\"eSignStage\", true);\r\n  //   this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n  //     this.router.navigate([\"cardaccount/digitalsigning/options\"]);\r\n  // });\r\n  }\r\n\r\n  getByAccountId(cardId: any) {\r\n    this.apiService.getCardInitiationDetails(cardId).subscribe((resp) => {\r\n      console.log(\"updateStatus :: \", resp);\r\n      this.accountdetailsForStatusUpdate = resp;\r\n      this.updateCardAccountStatus();\r\n    });\r\n  }\r\n\r\n  updateCardAccountStatus() {\r\n    let statusModel = {\r\n      cardId: this.cardId,\r\n      status: \"BACKLOG\",\r\n    };\r\n    this.apiService.updateCardStatus(statusModel).subscribe((updateResp) => {\r\n      console.log(\"updateResp:: \", updateResp);\r\n    });\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\" fxLayoutAlign=\"end center\">\r\n    <button mat-icon-button (click)=\"close1()\" *ngIf=\"!isDone\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n    <button mat-icon-button (click)=\"close()\" *ngIf=\"isDone\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div fxFlex=\"100\" *ngIf=\"!isDone\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/esign.png\" alt=\"\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <div fxFlex=\"50\" fxFlexOffset=\"20px\" *ngIf=\"!isDone\">\r\n        <!-- <div class=\"text-center\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"fileInput.click()\">Upload\r\n              <input style=\"display: none\" type=\"file\" (change)=\"onFileChanged($event)\" #fileInput>\r\n            </button>\r\n          </div>\r\n\r\n            <div class=\"text-center\">\r\n              <button mat-button class=\"full-width\">OR</button>\r\n            </div> -->\r\n\r\n        <h5 class=\"text-center mt-16\">Please e-sign the application!</h5>\r\n        <mat-card  class=\"mt-16 signbox\">\r\n          <mat-card-content>\r\n            <signature-pad\r\n              [options]=\"signaturePadOptions\"\r\n              (onBeginEvent)=\"drawStart()\"\r\n              (onEndEvent)=\"drawComplete()\"\r\n            ></signature-pad>\r\n          </mat-card-content>\r\n        </mat-card>\r\n        <div class=\"text-center\">\r\n          <button\r\n            mat-raised-button\r\n           class=\"Next\"\r\n            (click)=\"onSubmit()\"\r\n            [disabled]=\"disableDone\"\r\n          >\r\n            SUBMIT\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- <div fxFlex=\"50\" fxFlexOffset=\"20px\" *ngIf=\"isDone\" class=\"text-center\">\r\n        <div class=\"propic text-center\">\r\n          <img src=\"assets/images/esignlater.png\" alt=\"\" />\r\n        </div>\r\n        <br />\r\n        \r\n        <p *ngIf=\"accountId != null\">\r\n          Keep Card Number for your future Reference: <b>{{ accountId }}</b>\r\n        </p>\r\n        \r\n        <div class=\"text-center\">\r\n\r\n          <button mat-raised-button class=\"Next\" (click)=\"close()\">\r\n\r\n          \r\n\r\n            SUBMIT\r\n          </button>\r\n        </div> \r\n      </div>-->\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { ApplicationEntryStageService } from \"app/shared/services/application-entry-stage.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AccountService } from \"app/views/card-account/account.service\";\r\nimport { UrlService } from \"app/views/home/url.service\";\r\nimport { EsignaturePopComponent } from \"../esignature-pop/esignature-pop.component\";\r\nimport { UploadSignatureOrEsignComponent } from \"../upload-signature-or-esign/upload-signature-or-esign.component\";\r\nimport { DialogService } from \"app/shared/services/dialogs/dialog.service\";\r\n@Component({\r\n  selector: \"app-digital-sign-now-or-later\",\r\n  templateUrl: \"./digital-sign-now-or-later.component.html\",\r\n  styleUrls: [\"./digital-sign-now-or-later.component.scss\"],\r\n})\r\nexport class DigitalSignNowOrLaterComponent implements OnInit {\r\n  accountdetailsForStatusUpdate: Object;\r\n  previousUrl: string = \"\";\r\n  show: boolean = false;\r\n  show1: any;\r\n  cardId: any;\r\n  isDone: boolean = false;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private accountService: AccountService,\r\n    private apiService: ApplicationEntryStageService,\r\n    private urlService: UrlService,\r\n    private api: ApiService,\r\n    private dialogService: DialogService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId = this.ls.getItem(\"cardId\");\r\n\r\n    this.urlService.previousUrl$.subscribe((previousUrl: string) => {\r\n      this.previousUrl = previousUrl;\r\n    });\r\n  }\r\n\r\n  openPopUp(data?: any) {\r\n    let response: any;\r\n    if (data === undefined || data === null) {\r\n      response = {\r\n        isSignLater: false,\r\n        screen: \"Create Account\",\r\n      };\r\n    }\r\n    if (!this.show) {\r\n      let dialogRef: MatDialogRef<any> = this.dialog.open(\r\n        UploadSignatureOrEsignComponent,\r\n        {\r\n          width: \"720px\",\r\n          disableClose: true,\r\n          data: data === undefined || data === null ? response : data,\r\n        }\r\n      );\r\n      dialogRef.afterClosed().subscribe((res) => {\r\n        this.show = this.ls.getItem(\"enable\");\r\n        // if (res) {\r\n          // this.getByAccountId(this.accountId);\r\n        // }\r\n        \r\n      });\r\n    }\r\n  }\r\n  getByAccountId(accountId: any) {\r\n    this.api.getCardInitiationDetails(this.cardId).subscribe((resp) => {\r\n      this.accountdetailsForStatusUpdate = resp;\r\n      this.updateCardAccountStatus();\r\n    });\r\n  }\r\n  onDone() {\r\n    this.isDone = true;\r\n    this.dialogService.alertForCardFinishButton().subscribe((response) => {\r\n      console.log(\"response ::\", response);\r\n    });\r\n  }\r\n  updateCardAccountStatus() {\r\n    let statusModel = {\r\n      cardId: this.cardId,\r\n      status: \"BACKLOG\",\r\n    };\r\n    this.api.updateCardStatus(statusModel).subscribe((updateResp) => {\r\n      console.log(\"updateResp:: \", updateResp);\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([this.previousUrl]);\r\n  }\r\n\r\n  resetState() {\r\n    this.ls.removeItem(\"CARD_APPLICATION_ENTRY_DONE\");\r\n    this.ls.removeItem(\"CARD_INITIATION_DONE\");\r\n    this.ls.removeItem(\"Card_Customer_Done\");\r\n    this.ls.removeItem(\"CARD_FINANCIAL_DONE\");\r\n    this.ls.removeItem(\"card_prefrence_done\");\r\n    this.ls.removeItem(\"CARD_ACC_SERVICE_DONE\");\r\n    this.ls.removeItem(\"Card_CIF_NUM_PRIMARY\");\r\n    this.ls.removeItem(\"Card_Applicant_name\");\r\n\r\n    this.ls.removeItem(\"CARD_DOCUMENT_STAGE_DONE\");\r\n    this.ls.removeItem(\"CARD_DOCUMENT_DONE\");\r\n\r\n    this.ls.removeItem(\"CARD_ENRICHMENT_DONE\");\r\n    this.ls.removeItem(\"CARD_INTEREST_DETAILS_DONE\");\r\n    this.ls.removeItem(\"CARD_CHARGE_DETAILS_DONE\");\r\n\r\n    this.ls.removeItem(\"CARD_UNDERWRITING_DONE\");\r\n    this.ls.removeItem(\"CARD_CREDIT_RATING_DONE\");\r\n    this.ls.removeItem(\"CARD_QUALITATIVE_SCOREBOARD_DONE\");\r\n\r\n    this.ls.removeItem(\"CARD_ASSESSMENT_STAGE_DONE\");\r\n    this.ls.removeItem(\"CARD_ASSESSMENT_DONE\");\r\n\r\n    this.ls.removeItem(\"CARD_SUPERVISOR_DONE\");\r\n    this.ls.removeItem(\"CARD_APPROVAL_DONE\");\r\n\r\n    this.ls.removeItem(\"CARD_DIGITAL_STAGE_DONE\");\r\n    this.ls.removeItem(\"CARD_DIGITAL_SIGN_DONE\");\r\n    this.ls.removeItem(\"enable\");\r\n    this.ls.removeItem(\"eSignStage\");\r\n    this.ls.removeItem(\"cardId\");\r\n    this.ls.removeItem(\"CardNoOfApplicants\");\r\n    this.ls.removeItem(\"primaryCustomerName\");\r\n    this.ls.removeItem(\"cardownership_value\");\r\n    this.ls.removeItem(\"cId\");\r\n    this.ls.removeItem(\"enable\")\r\n    this.ls.removeItem(\"signedImage\");\r\n\r\n    sessionStorage.clear();\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([\"/cardaccount/applicationEntryStage/list\"]);\r\n  }\r\n\r\n  onSubmit() {\r\n    let payload = {\r\n      accountId: this.cardId,\r\n      esignLink: \"gcom\",\r\n      subject: \"testing\",\r\n    };\r\n    this.api.signInLater(payload).subscribe(\r\n      (data: any) => {\r\n        console.log(\"data::\", data);\r\n        this.getByAccountId(this.cardId);\r\n        this.ls.setItem(\"eSignStage\", true);\r\n        this.accountService.refresh.next();\r\n        let response: any = {\r\n          email: data.email,\r\n          customerId: data.customerId,\r\n          subject: data.subject,\r\n          isSignLater: true,\r\n          screen: \"Create Account\",\r\n        };\r\n        this.openPopUp(response);\r\n      },\r\n      (err: any) => {}\r\n    );\r\n  }\r\n}\r\n","<div class=\"matcard-size\">\r\n  <div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/Mask Group 55.svg\" alt=\"\" class=\"w-90\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Digital Signing</b></div>\r\n      </div>\r\n    </div>\r\n    <mat-card class=\"mat-card-img\">\r\n      <div fxFlex=\"100\" class=\"mt-32\">\r\n        <mat-card\r\n          class=\"sign-box hoverAdd\"\r\n          (click)=\"openPopUp()\"\r\n          [@animate]=\"{ value: '*', params: { delay: '300ms', y: '50px' } }\"\r\n          matRipple\r\n        >\r\n          <mat-card-content class=\"p-0\">\r\n            <mat-list class=\"compact-list mb-16\">\r\n              <mat-list-item class=\"\">\r\n                <img class=\"mr-16\" src=\"assets/images/svg/signnow.png\" alt=\"\" />\r\n                <!-- [ngClass]=\" show ? 'primary' : 'secondary'\" -->\r\n                <div fxLayout=\"column\" fxFlex=\"100\">\r\n                  <h3 class=\"m-0 mr-16\">Sign Now</h3>\r\n                  <span fxFlex></span>\r\n                  <br />\r\n                  <div fxFlex=\"40\" class=\"text\">\r\n                    Enables you to digitally sign the document. To e sign the\r\n                    document, click on it, create your eSignature, click on Done\r\n                    and it will add to your document.\r\n                  </div>\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div fxFlex=\"100\">\r\n        <div class=\"text-center\">\r\n          <button mat-button class=\"text\">OR</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxFlex=\"100\">\r\n        <mat-card\r\n          class=\"sign-box hoverAdd\"\r\n          [@animate]=\"{ value: '*', params: { delay: '300ms', y: '50px' } }\"\r\n          matRipple\r\n        >\r\n          <mat-card-content class=\"p-0\">\r\n            <mat-list class=\"compact-list mb-16\">\r\n              <mat-list-item class=\"\" (click)=\"onSubmit()\">\r\n                <img\r\n                  class=\"mr-16\"\r\n                  src=\"assets/images/svg/signlater.png\"\r\n                  alt=\"\"\r\n                />\r\n                <!-- [ngClass]=\" show ? 'primary' : 'primary'\" -->\r\n                <div fxLayout=\"column\" fxFlex=\"100\">\r\n                  <h3 class=\"m-0 mr-16\">Sign Later</h3>\r\n                  <span fxFlex></span>\r\n                  <br />\r\n                  <div fxFlex=\"40\" class=\"text\">\r\n                    Enables you to sign the document later. To sign later, click\r\n                    here, an email will be sent to the respective email id\r\n                    provided with a sign link. You can verify and sign later.\r\n                  </div>\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </mat-card>\r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-button class=\"Backbtn\" (click)=\"goBack()\">BACK</button>\r\n      <span fxFlex></span>\r\n\r\n      <button\r\n        class=\"Nextbtn\"\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        [disabled]=\"!show\"\r\n        (click)=\"onDone()\"\r\n      >\r\n        FINISH\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-initiation',\r\n  templateUrl: './card-initiation.component.html',\r\n  styleUrls: ['./card-initiation.component.scss']\r\n})\r\nexport class CardInitiationComponent implements OnInit {\r\n  cifNumberForm = new FormControl();\r\n  timer: any;\r\n  listOfCustByCif: any = [];\r\n\r\n  cardInitiationForm: FormGroup;\r\n  showEditOption: boolean = false;\r\n  isCardInitiationDone:boolean = false;\r\n  arrayofEmployment: any[] = [];\r\n  cardId: any;\r\n  applicant: any;\r\n  console: any;\r\n  isCifValid: boolean = false;\r\n  onbackSpace: boolean = false;\r\n  showSpinn: boolean;\r\n  cifNumberPrimary: any;\r\n  flag: boolean;\r\n  currencyData: any;\r\n  arrayAccountBranch: any;\r\n  branchName: any;\r\n  isExistingCustomer: boolean = true;\r\n  localCurrencyArr = ['CNY', 'GBP', 'INR', 'USD', 'ZAR', 'GBP'];\r\n  selectedCurrency = this.localCurrencyArr[-1];\r\n  kycStatus: any;\r\n  status: any;\r\n  iskycStatus: boolean = false;\r\n  isGoForKyc: boolean = false;\r\n  isKycForCardDone: boolean = false;\r\n  cardType: any;\r\n  kycRefrence: string;\r\n  accountID: any;\r\n  accountNoArr = [];\r\n  cifNumber: any;\r\n  constructor(private ls: LocalStoreService, private router: Router, private accountService: AccountService,\r\n    private formBuilder: FormBuilder, private apiService: ApiService, private appApiService: ApplicationEntryStageService,\r\n    private snack: MatSnackBar, private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnInit(): void { \r\n   // this.ls.getItem(\"kycnumber\");\r\n   console.log(this.ls.getItem(\"cardCustomer\"));\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.applicant=this.ls.getItem('NAME');\r\n    this.getEmploymentType(\"employment_type\");\r\n    console.log(\"this.cardId\",this.cardId);\r\n\r\n    this.buildInitiationForm();\r\n    // this.cardInitiationForm.get('applicantName').setValue(this.applicant);\r\n    let isCardDetails: boolean = JSON.parse(this.ls.getItem('CARD_INITIATION_DONE'));\r\n    this.isCardInitiationDone = this.ls.getItem('CARD_INITIATION_DONE');\r\n    if (this.cardId != null && this.isCardInitiationDone) {\r\n      this.iskycStatus = true;\r\n      this.showEditOption = true;\r\n      this.cifNumberPrimary = this.ls.getItem(\"Card_CIF_NUM_PRIMARY\");\r\n      this.getCardInitiation();\r\n\r\n    }\r\n\r\n\r\n    //console.log(\"this.kycStatus\",this.kycStatus);\r\n    this.isKycForCardDone = this.ls.getItem(\"kycForCard\");\r\n    if (this.isKycForCardDone == true) {\r\n      // this.kycStatus = this.ls.getItem(\"KycStatus\");\r\n      this.cardInitiationForm.get('existingCustomer').patchValue(false);\r\n      this.kycRefrence = this.ls.getItem(\"kycReference\");\r\n      if(this.kycRefrence){\r\n        let kycNum = this.kycRefrence.slice(4);\r\n        console.log(kycNum);        \r\n        this.apiService.getPrimaryInfo(kycNum).subscribe((result: any) => {\r\n          this.kycStatus = result.customerInfoList[0].customerAdditionalInfo.kycStatus\r\n          this.ls.setItem('KycStatus',this.kycStatus)\r\n        })\r\n      }\r\n      this.iskycStatus = true;\r\n      this.isGoForKyc = true;\r\n      this.cardInitiationForm.get('cardType').patchValue(this.ls.getItem(\"cardType\"));\r\n      console.log(this.ls.getItem(\"cardCustomer\"));\r\n      this.cardInitiationForm.controls.applicantName.setValue(this.ls.getItem(\"cardCustomer\"));\r\n      //this.ls.getItem(\"cardType\");\r\n    }\r\n    else {\r\n      //   this.iskycStatus=false;\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    if (event.keyCode === 8) {\r\n      this.onbackSpace = true;\r\n      this.isCifValid = false;\r\n    }\r\n    else {\r\n      this.onbackSpace = false;\r\n    }\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value, !event.target.value);\r\n    clearTimeout(this.timer)\r\n    \r\n    if (!event.target.value) {\r\n      this.isCifValid = false;\r\n      this.cardInitiationForm.get('cifNumber').clearValidators();\r\n      this.cardInitiationForm.get('cifNumber').updateValueAndValidity();\r\n      this.cardInitiationForm.get('existingCustomer').patchValue(true);\r\n      this.cardInitiationForm.reset();\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => { \r\n          console.log(res);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  goToggle(event: any) {\r\n    console.log(\"event\", event.checked);\r\n    if (event.checked == true) {\r\n      this.isExistingCustomer = true;\r\n    }\r\n    else {\r\n      this.isExistingCustomer = false;\r\n    }\r\n\r\n  }\r\n  addOnCard(event: any) {\r\n    console.log(\"event\", event.checked);\r\n    if (event.checked == true) {\r\n      this.ls.setItem('ADD_ON_CARD', true);\r\n    }\r\n    else {\r\n      this.ls.setItem('ADD_ON_CARD', false);\r\n    }\r\n\r\n  }\r\n  \r\n  getEmploymentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayofEmployment = data;\r\n      console.log(this.arrayofEmployment);\r\n\r\n    });\r\n  }\r\n\r\n  getAccountData(cifNumber){\r\n    this.apiService.getProfileDetails(cifNumber)\r\n      .subscribe((data: any) => {\r\n        console.log(data);\r\n        console.log(data?.signatures?.[0]?.accountId)\r\n        this.accountID = data?.signatures?.[0]?.accountId;\r\n        this.cardInitiationForm.controls.currency.setValue(data?.accountCurrency);\r\n      }, (error: any) => {\r\n        // console.log(error);\r\n      });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"data\", this.cardInitiationForm.value)\r\n    localStorage.setItem('Currency Type', this.cardInitiationForm.value.currency);\r\n    let payload = {\r\n      existingCustomer: this.cardInitiationForm.value.existingCustomer,\r\n      cardType: this.cardInitiationForm.value.cardType,\r\n      customerAccount: this.cardInitiationForm.value.customerAccount,\r\n      applicantName: this.cardInitiationForm.value.applicantName,\r\n      currency: this.cardInitiationForm.value.currency,\r\n      employmentType: this.cardInitiationForm.value.employmentType,\r\n      affinityProgram: this.cardInitiationForm.value.affinityProgram,\r\n      nameOnCard: this.cardInitiationForm.value.nameOnCard,\r\n      status: null,\r\n      kycStatus: this.kycStatus,\r\n      kycReference: this.kycRefrence,\r\n      customerId: this.cardInitiationForm.value.cifNumber,\r\n\r\n      cardId: this.showEditOption ? this.cardId : null,\r\n    }\r\n\r\n    this.apiService.uploadCardInitiation(payload)\r\n      .subscribe((data: any) => {\r\n        this.ls.setItem('cardId', data.cardId);\r\n        let statusModel = {\r\n          cardId: data.cardId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateCardStatus(statusModel).subscribe(data => {\r\n        });\r\n\r\n        console.log(\"data\", data);\r\n        \r\n        this.next();\r\n      });\r\n\r\n  }\r\n  next() {\r\n    this.ls.setItem('CARD_INITIATION_DONE', true);\r\n    this.ls.setItem('Card_Applicant_name',  this.cardInitiationForm.value.applicantName);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list/customerInformation`]);\r\n  }\r\n  getCardInitiation() {\r\n\r\n    this.apiService.getCardInitiationDetails(this.cardId)\r\n    .subscribe((resp: any) => {\r\n      this.kycStatus = resp.kycStatus;\r\n      this.kycRefrence = resp.kycReference;\r\n      this.buildInitiationForm(resp);\r\n      this.apiService.fetchAccountIdByCustId(this.cifNumberPrimary).subscribe((accountNo: any[]) => {\r\n        this.accountNoArr = accountNo;\r\n        this.cardInitiationForm.controls.customerAccount.setValue(this.accountNoArr?.[0])\r\n      });\r\n      console.log(\"data\", resp);\r\n      if (resp.existingCustomer == true) {\r\n        this.isExistingCustomer = true;\r\n      }\r\n      else {\r\n        this.isExistingCustomer = false;\r\n      }\r\n\r\n    });\r\n  }\r\n  buildInitiationForm(data?) {\r\n    const addOnCard = localStorage.getItem(\"ADD_ON_CARD\"); \r\n        \r\n    \r\n    this.cardInitiationForm = this.formBuilder.group({\r\n      cifNumber: [data ? this.cifNumberPrimary : '',[Validators.required]],\r\n      existingCustomer: [data ? data.existingCustomer : true,],\r\n      cardType: [data ? data.cardType : '', [Validators.required]],\r\n      customerAccount: [data ? data.customerAccount : '', [Validators.required]],\r\n      applicantName: [data ? data.applicantName : ''],\r\n      currency: [data ? data.currency : '', [Validators.required]],\r\n      employmentType: [data ? data.employmentType : '', [Validators.required]],\r\n      affinityProgram: [data ? data.affinityProgram : '', [Validators.required]],\r\n      nameOnCard: [data ? data.nameOnCard : '', [Validators.required]],\r\n      addOnCard:[addOnCard == 'true' ? true : false],\r\n    });\r\n    this.formControlValueChanged();\r\n  }\r\n  formControlValueChanged() {\r\n    \r\n    let cifNumberControl = this.cardInitiationForm.get('cifNumber');\r\n    this.cardInitiationForm.get('existingCustomer').valueChanges.subscribe(\r\n        (val) => {\r\n            console.log(val);\r\n            if (val == false) {\r\n              this.cardInitiationForm.get('customerAccount').setValidators([Validators.nullValidator]);\r\n                cifNumberControl.setValidators([Validators.nullValidator]);\r\n            }   \r\n            else{\r\n              this.cardInitiationForm.get('customerAccount').setValidators([Validators.required]);\r\n              cifNumberControl.setValidators([Validators.required]);\r\n          }            \r\n            cifNumberControl.updateValueAndValidity();\r\n        });\r\n}\r\n  goBack() {\r\n    this.router.navigate([`/cardaccount/applicationEntryStage/list`]);\r\n  }\r\n  keyUpevent(event) {\r\n    if (event.keyCode === 8) {\r\n      this.onbackSpace = true;\r\n      this.isCifValid = false;\r\n    }\r\n    else {\r\n      this.onbackSpace = false;\r\n    }\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  letterOnly(event) {\r\n    console.log(!this.isGoForKyc);\r\n    console.log(!this.cardInitiationForm.valid);\r\n    console.log(!this.cardInitiationForm.valid || !this.isGoForKyc);\r\n    \r\n    console.log(this.cardInitiationForm);\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  fetchByCif(cifNumber) {\r\n\r\n    if (!!cifNumber) {\r\n      this.showSpinn = true;\r\n      this.appApiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n        this.kycStatus = res.customerInfoList[0].customerAdditionalInfo.kycStatus\r\n        this.kycRefrence = res.customerInfoList[0].customerAdditionalInfo.kycReference\r\n     \r\n        this.cardInitiationForm.controls.cifNumber.setValue(cifNumber);\r\n        this.cardInitiationForm.controls.applicantName.setValue(res.customerInfoList[0].firstName + \" \" + res.customerInfoList[0].lastName);\r\n       // this.ls.setItem('Card_Applicant_name', res.customerInfoList[0].firstName + \" \" + res.customerInfoList[0].lastName);\r\n        this.cardInitiationForm.controls.customerAccount.setValue(this.accountID)\r\n\r\n        this.showSpinn = false;\r\n\r\n        if (!res) {\r\n          this.isCifValid = false;\r\n\r\n          this.snack.open('Invalid CIF Number', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          // this.cardInitiationForm.get('cifNumber').patchValue(\"\");\r\n          return;\r\n        } else {\r\n          if (res.customerInfoList[0].custStatus != \"APPROVED\") {\r\n            this.isCifValid = false;\r\n          }\r\n          if (res.customerInfoList[0].custStatus == \"APPROVED\") {\r\n            this.isCifValid = true;\r\n          }\r\n          //console.log(this.isCifValid,\"else2 condition\");\r\n\r\n          let address: any;\r\n          // this.console.log(res.customerInfoList[0].userAddress.length);\r\n          if (res.customerInfoList[0].userAddress.length > 1) {\r\n            address = res.customerInfoList[0].userAddress.find((item: any) => item.addressType == \"Permanent\" || item.addressType == \"permanent\");\r\n          } else {\r\n            address = res.customerInfoList[0].userAddress[0];\r\n          }\r\n          let queryParams = {\r\n            prefix: res.customerInfoList[0].prefix,\r\n            customerId: res.customerInfoList[0].customerId,\r\n            firstName: res.customerInfoList[0].firstName,\r\n            middleName: res.customerInfoList[0].middleName,\r\n            lastName: res.customerInfoList[0].lastName,\r\n            gender: res.customerInfoList[0].gender,\r\n            dateOfBirth: this.convertDate(res.customerInfoList[0].dateOfBirth),\r\n            placeOfBirth: res.customerInfoList[0].placeOfBirth,\r\n            residenceStatus: res.customerInfoList[0].residenceStatus,\r\n            nationality: res.customerInfoList[0].nationality,\r\n            countryOfResidence: res.customerInfoList[0].countryOfResidence,\r\n            occupationType: res.customerInfoList[0].occupationType,\r\n            custIdProofs: res.customerInfoList[0].custIdProofs,\r\n            idType: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idType : '',\r\n            idNumber: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idNumber : '',\r\n            expiryDate: res.customerInfoList[0].custIdProofs.length > 0 ? this.convertDate(res.customerInfoList[0].custIdProofs[0].expiryDate) : '',\r\n            addressType: address.addressType,\r\n            address1: address.address1,\r\n            address2: address.address2,\r\n            city: address.city,\r\n            country: address.country,\r\n            state: address.state,\r\n            zipCode: address.zipCode,\r\n            phoneNumber: res.customerInfoList[0].phoneNumber,\r\n            landlineNumber: res.customerInfoList[0].landlineNumber,\r\n            primaryEmailAdress: res.customerInfoList[0].primaryEmailAdress\r\n          };\r\n          if (this.cardInitiationForm.value.swiftCode == null || this.cardInitiationForm.value.swiftCodeEnable == null) {\r\n            console.log(this.cardInitiationForm.value.swiftCode);\r\n            this.flag = false;\r\n          }\r\n          this.cifNumberPrimary = cifNumber;\r\n          this.ls.setItem(\"Card_CIF_NUM_PRIMARY\", this.cifNumberPrimary);\r\n          this.apiService.sendCIF(queryParams);\r\n          this.apiService.fetchAccountIdByCustId(cifNumber).subscribe((accountNo: []) => {\r\n            this.accountNoArr = accountNo;\r\n            this.cardInitiationForm.controls.customerAccount.setValue(this.accountNoArr?.[0])\r\n            console.log(accountNo);\r\n          });\r\n        }\r\n        this.cdr.markForCheck();\r\n\r\n      });\r\n      this.getAccountData(cifNumber);\r\n    }\r\n  }\r\n  changeEvent(event: any) {\r\n    console.log(event.value);\r\n    this.cardType = event.value\r\n    if (event.value == \"Credit\") {\r\n      this.iskycStatus = true;\r\n      if (this.kycStatus == \"APPROVED\") {\r\n        this.isGoForKyc = true;\r\n      }\r\n      else {\r\n        this.isGoForKyc = false;\r\n      }\r\n\r\n    }\r\n    else {\r\n      this.isGoForKyc = true;\r\n      this.iskycStatus = false;\r\n    }\r\n  }\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MMM-DD'); // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    if (date)\r\n      return date;\r\n  }\r\n  goToKyc() {\r\n    this.ls.setItem('cardType', this.cardType);\r\n    this.ls.setItem(\"accountType\", 'cardOrigination')\r\n    this.router.navigate([`/others/kyc`]);\r\n  }\r\n\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_opinion_dxp8.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title\"><b>Card Initiation</b></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Card Initiation</div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form fxLayout=\"column\" [formGroup]=\"cardInitiationForm\">\r\n          <div fxFlex=\"100%\" fxLayoutGap=\"10px\">\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n              <div class=\"pb-1\">\r\n                <label class=\"hint\">Existing Customer *</label>\r\n\r\n                <mat-slide-toggle style=\"margin-left: 1cm;\" name=\"scholarshipOrBusinessEligible\"\r\n                  formControlName=\"existingCustomer\" (change)=\"goToggle($event)\">\r\n                </mat-slide-toggle>\r\n              </div>\r\n\r\n              <div class=\"flex-grow-1\" fxFlex=\"100%\" *ngIf=\"iskycStatus\" fxLayout=\"column\">\r\n                <div fxFlex=\"100%\">\r\n                  <label class=\"hint\">KYC ID</label>&nbsp;\r\n                  <label style=\"color: #03a9f4;\">{{kycRefrence}}</label>\r\n                  <label class=\"hint\">KYC Status</label>&nbsp;\r\n                  <label style=\"color: #03a9f4;\">{{kycStatus}}</label>\r\n                </div>\r\n                <div>\r\n                  &nbsp;&nbsp;&nbsp;<button mat-button [disabled]=\"isGoForKyc || isExistingCustomer\" (click)=\"goToKyc()\"\r\n                    style=\"text-decoration: underline;\">Go For KYC</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Card Type *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <mat-select formControlName=\"cardType\" placeholder=\"Select\"\r\n                    (selectionChange)=\"changeEvent($event)\">\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option *ngIf=\"isExistingCustomer\" value=\"Debit\">Debit</mat-option>\r\n                    <mat-option value=\"Credit\">Credit</mat-option>\r\n                    <mat-option *ngIf=\"isExistingCustomer\" value=\"Forex\">Forex</mat-option>\r\n\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('cardType').valid  && cardInitiationForm.get('cardType').touched \">\r\n                  &nbsp;&nbsp;&nbsp;Card Type is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"pb-1\" *ngIf=\"isExistingCustomer\">\r\n                <div>\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">CIF Number*</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <input matInput class=\"alignment\" type=\"text\" (keypress)=_keyPress($event)\r\n                    (change)=\"fetchByCif(cardInitiationForm.get('cifNumber').value)\"\r\n                    (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\"\r\n                    formControlName=\"cifNumber\" placeholder=\"CIF Number\" />\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                *ngIf=\"!cardInitiationForm.get('cifNumber').valid  && cardInitiationForm.get('cifNumber').touched\">\r\n                &nbsp;&nbsp;&nbsp; CIF Number Is Required\r\n                </mat-error>\r\n                  </mat-form-field>\r\n              </div>\r\n\r\n                <div>\r\n                  <mat-autocomplete #auto=\"matAutocomplete\">\r\n                    <mat-option *ngFor=\"let option of listOfCustByCif\" [value]=\"option.customerId\">\r\n                      <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                        <div fxFlex=\" 100\">\r\n                          <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\" class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                            <h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n                              {{option?.firstName | slice:0:1 | uppercase}}{{option?.lastName | slice:0:1 | uppercase}}\r\n                            </h3>\r\n                          </div>\r\n                          <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar fxFlex=\"10\">\r\n                            <img matListAvatar\r\n                              style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 100%;margin-bottom: 50px;\" align=\"center\"\r\n                              [src]=\"option?.profileImage\" alt=\"...\">\r\n                          </div>\r\n                          <div fxFlex=\"80\">\r\n                            <h5 style=\"margin-bottom: 0px;\">\r\n                              {{option?.firstName | uppercase}}\r\n                              {{option?.middleName | uppercase}}\r\n                              {{option?.lastName | uppercase}}\r\n                            </h5>\r\n                            <h6 style=\"margin-top: 0px;\">#{{option?.cifNumber}}</h6>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </mat-option>\r\n                  </mat-autocomplete>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"pb-1\" *ngIf=\"!isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                <mat-label class=\"hint\">Currency *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <mat-select formControlName=\"currency\" [(ngModel)]=\"selectedCurrency\"placeholder=\"Select\">\r\n                    <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option [value]=\"currency\" *ngFor=\"let currency of localCurrencyArr\">{{currency}}</mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('currency').valid  && cardInitiationForm.get('currency').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Currency is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n              <div class=\"pb-1\" *ngIf=\"isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Currency</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <input matInput class=\"alignment\" type=\"text\" autocomplete=\"off\" formControlName=\"currency\"\r\n                    placeholder=\"currency\" name=\"currency\" (keypress)=\"_keyPress($event)\" />\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('currency').valid  && cardInitiationForm.get('currency').touched\">\r\n                  &nbsp;&nbsp;&nbsp;currency is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Affinity Program *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <mat-select formControlName=\"affinityProgram\" placeholder=\"Select\">\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"Affinity Program1\">Affinity Program1</mat-option>\r\n                    <mat-option value=\"Affinity Program2\">Affinity Program2</mat-option>\r\n\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('affinityProgram').valid  && cardInitiationForm.get('affinityProgram').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Affinity Program is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"pb-1\" *ngIf=\"!isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Name On Card *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <input matInput class=\"alignment\" type=\"text\" (keypress)=letterOnly($event) formControlName=\"nameOnCard\"\r\n                    placeholder=\"Name On Card\" name=\"nameOnCard\" required/>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('nameOnCard').valid  && cardInitiationForm.get('nameOnCard').touched\" >\r\n                  &nbsp;&nbsp;&nbsp;Name on Card is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\" *ngIf=\"isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Customer Account Number *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <mat-select formControlName=\"customerAccount\"  >\r\n                    <mat-option [value]=\"accNo\" *ngFor=\"let accNo of accountNoArr\">{{accNo}}</mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('customerAccount').valid  && cardInitiationForm.get('customerAccount').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Customer Account is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"pb-1\" *ngIf=\"!isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Customer Account Number</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <input matInput class=\"alignment\" type=\"text\" autocomplete=\"off\" formControlName=\"customerAccount\"\r\n                    placeholder=\"Customer Account Number\" name=\"customerAccount\" (keypress)=\"_keyPress($event)\" />\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('customerAccount').valid  && cardInitiationForm.get('customerAccount').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Customer Account is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Applicant Name *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <input *ngIf=\"!isExistingCustomer\" matInput class=\"alignment\" type=\"text\" (keypress)=letterOnly($event)\r\n                    formControlName=\"applicantName\" placeholder=\"Applicant Name\" />\r\n                  <input *ngIf=\"isExistingCustomer\" matInput class=\"alignment\" type=\"text\" (keypress)=letterOnly($event) readonly\r\n                    formControlName=\"applicantName\" placeholder=\"Applicant Name\" />\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n              <div class=\"pb-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Employment Type *</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n                  <mat-select formControlName=\"employmentType\" placeholder=\"Select\">\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option *ngFor=\"let employment of arrayofEmployment\" [value]=\"employment\">{{employment}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!cardInitiationForm.get('employmentType').valid  && cardInitiationForm.get('employmentType').touched\">\r\n                  &nbsp;&nbsp;&nbsp;Employment Type is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"pb-1\" *ngIf=\"isExistingCustomer\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label class=\"hint\">Name On Card</mat-label>\r\n                <!-- <mat-card appearance=\"outline\" class=\"full-width\"> -->\r\n\r\n                  <input matInput class=\"alignment\" type=\"text\" formControlName=\"nameOnCard\" (keypress)=\"letterOnly($event)\"\r\n                    placeholder=\"Name On Card\" />\r\n                <!-- </mat-card> -->\r\n                </mat-form-field>\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div fxFlex=\"100%\" fxLayoutGap=\"10px\">\r\n\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n              <div class=\"pb-1\">\r\n                <label class=\"hint\">Addon Card</label>\r\n\r\n                <mat-slide-toggle style=\"margin-left: 1cm;\"formControlName=\"addOnCard\" (change)=\"addOnCard($event)\">\r\n                </mat-slide-toggle>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n            <button mat-button rounded (click)=\"goBack()\">\r\n              Back\r\n            </button>\r\n\r\n            <button class=\"Nextbtn\" mat-raised-button (click)=\"onSubmit()\" [disabled]=\"(isExistingCustomer || cardInitiationForm.value.cardType !== 'Credit' )?(!cardInitiationForm.valid):(!cardInitiationForm.valid || !isGoForKyc)\" color=\"primary\">\r\n\r\n              Next\r\n            </button>\r\n          </div>\r\n\r\n\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n@Component({\r\n  selector: 'app-approval-details',\r\n  templateUrl: './approval-details.component.html',\r\n  styleUrls: ['./approval-details.component.scss']\r\n})\r\nexport class ApprovalDetailsComponent implements OnInit {\r\n  approvalForm: FormGroup;\r\n  arrayAccountType: string[];\r\n  arrayAccountCurrency: string[];\r\n  arrayUserRecomendation: string[];\r\n  cardId: any;\r\n  showEditOption: boolean = false;\r\n  arrayAccountBranch: any;\r\n  currency: any;\r\n\r\n  constructor(private api: ApiService,\r\n    private ls: LocalStoreService,private fb:FormBuilder,\r\n    private apiService:ApiService,private router: Router,\r\n    private accountService : AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUserRecomendation(\"user_recomendation\");\r\n    this.getAccountType(\"account_type\")\r\n    this.getAccountBranchDetails();\r\n    \r\n    this.buildformGroup();\r\n    console.log(this.approvalForm);\r\n\r\n    this.cardId=this.ls.getItem('cardId');\r\n    console.log(\"this.cardId\",this.cardId);\r\n    this.getCardInitiationDetails();\r\n    let isApprovalDetails: boolean = this.ls.getItem('CARD_APPROVAL_DONE');\r\n    console.log(\"checc\", isApprovalDetails)\r\n    if(this.cardId!=null && isApprovalDetails ){\r\n      this.showEditOption = true;\r\n      this.getApprovalDetails();\r\n\r\n    }\r\n  }\r\n\r\n  buildformGroup(data?){\r\n    this.approvalForm = this.fb.group({\r\n      accountType:[data ? data.accountType : '',Validators.required],\r\n      productCode:[data ? data.productCode :'',Validators.required],\r\n      userRecommendation:[data ? data.userRecommendation :'',Validators.required],\r\n      accountBranch:[data ? data.accountBranch :'',Validators.required],\r\n      accountCurrency:[data ? data.accountCurrency :'',Validators.required],\r\n      productName:[data ? data.productName :'',Validators.required],\r\n      existingValues:[data ? data.existingValues :'',Validators.required],\r\n      remarks:[data ? data.remarks :'']\r\n    })\r\n  }\r\n  onSubmit(){\r\n    console.log(\"data\", this.approvalForm.value);\r\n    \r\n    let payload={\r\n      cardId: this.cardId,\r\n      accountBranch: this.approvalForm.value.accountBranch,\r\n      accountCurrency: this.approvalForm.value.accountCurrency,\r\n      accountType: this.approvalForm.value.accountType,\r\n      existingValues: this.approvalForm.value.existingValues,\r\n      productCode: this.approvalForm.value.productCode,\r\n      productName: this.approvalForm.value.productName,\r\n      remarks: this.approvalForm.value.remarks,\r\n      userRecommendation: this.approvalForm.value.userRecommendation,\r\n\r\n    }\r\n    this.apiService.upsertApprovalDetails(payload)\r\n    .subscribe((data: any) => {\r\n\r\n      console.log(\"data\",data);\r\n      \r\n    });\r\n    this.next();\r\n  }\r\nnext(){\r\n  this.ls.setItem('CARD_APPROVAL_DONE', true);\r\n  this.ls.setItem('CARD_SUPERVISOR_DONE',true);\r\n  this.accountService.refresh.next();\r\n  this.router.navigate([`/cardaccount/DigitalSigning/list`]);\r\n\r\n}\r\ngoBack(){\r\n  this.router.navigate([`/cardaccount/SupervisorApprovalStage/list`]);\r\n}\r\n  getApprovalDetails(){\r\n\r\n    this.apiService.getApprovalDetails(this.cardId)\r\n    .subscribe((resp: any) => {\r\n      this.buildformGroup(resp);\r\n\r\n      console.log(\"data\",resp);\r\n     \r\n    });\r\n  }\r\n  onKeyPress(event: any) {\r\n    const number = /[0-9\\+\\-\\ ]/;\r\n    let inputCharacter = String.fromCharCode(event.charCode);\r\n    if (event.keyCode != 8 && !number.test(inputCharacter)) {\r\n      event.preventDefault();\r\n      console.log(\"event:\", event)\r\n    }\r\n  }\r\n\r\n  getAccountCurrency(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountCurrency = data;\r\n    });\r\n  }\r\n\r\n  getAccountType(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAccountType = data;\r\n    });\r\n  }\r\n  \r\n  getUserRecomendation(key: string) {\r\n    this.api.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayUserRecomendation = data;\r\n    });\r\n  }\r\n\r\n  getAccountBranchDetails() {\r\n    //debugger\r\n    this.api.getAccountBranch().subscribe((data) => {\r\n      console.log(\"data:: AccountBranch \", data)\r\n      this.arrayAccountBranch = data;\r\n    });\r\n  }\r\n\r\n  getCardInitiationDetails(){\r\n    this.apiService.getCardInitiationDetails(this.cardId)\r\n    .subscribe((resp: any) => {\r\n    console.log(\"data\",resp);\r\n    this.currency=resp.currency;  \r\n    this.approvalForm.controls.accountCurrency.setValue(this.currency);\r\n    });\r\n  }\r\n\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size1\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/MaskGroup_16.svg\"\r\n          alt=\"\"\r\n          class=\"w-90\"\r\n        />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Approval Details</b></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n      <h2 class=\"ml-16\">Approval Details</h2>\r\n      <div class=\"mt-24\"></div>\r\n  \r\n      <mat-card  >\r\n        <form [formGroup]=\"approvalForm\">\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\" >\r\n                  <mat-label>Account Type*</mat-label>\r\n                  <mat-select name=\"accountType\" placeholder=\"Account type\" formControlName=\"accountType\" >\r\n                     <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option *ngFor=\"let arrayAccountType of arrayAccountType\" [value]=\"arrayAccountType\" > \r\n                      {{arrayAccountType}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"approvalForm.get('accountType').hasError('required')\">\r\n                    Please Select Account Type\r\n                   </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\" >\r\n                  <mat-label>Product Code*</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"productCode\"\r\n                    placeholder=\"Product Code\"\r\n                    formControlName=\"productCode\" \r\n                  />\r\n                  <!-- <mat-error *ngIf=\"approvalForm.get('productCode').hasError('required')\">\r\n                    Please Select Product Code\r\n                   </mat-error> -->\r\n                   <!-- <mat-icon matSuffix>account_balance</mat-icon> -->\r\n                </mat-form-field>\r\n                <mat-error\r\n                   *ngIf=\"approvalForm.get('productCode').touched &&\r\n                   approvalForm.get('productCode').value == 0\">\r\n                   Please Enter valid Product ID\r\n              </mat-error>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\"  >\r\n                  <mat-label>Account Currency*</mat-label>\r\n                    <input\r\n                    matInput\r\n                    name=\"account_currency\"\r\n                    placeholder=\"Account Currency\"\r\n                    formControlName=\"accountCurrency\"\r\n                    (keypress)=\"keyPressAlphanumeric($event)\"\r\n                    readonly\r\n                  />\r\n                  <mat-error *ngIf=\"approvalForm.get('accountCurrency').hasError('required')\">\r\n                    Please Enter Account Currency\r\n                   </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n              <div class=\"pb-1\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>User Recomendation*</mat-label>\r\n                  <mat-select name=\"owner\" placeholder=\"Recommended for Approval\" formControlName=\"userRecommendation\" >\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option *ngFor=\"let userRecommendation of arrayUserRecomendation\" [value]=\"userRecommendation\" > \r\n                      {{userRecommendation}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"approvalForm.get('userRecommendation').hasError('required')\">\r\n                   Please Select user Recommendation\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              \r\n            </div>\r\n  \r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"pb-1\" >\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                  <mat-label>Account Branch*</mat-label>\r\n                  <mat-select name=\"accountBranch\" placeholder=\"Account Branch\" formControlName=\"accountBranch\" >\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option *ngFor=\"let arrayAccountBranch of arrayAccountBranch\" [value]=\"arrayAccountBranch.branchName\" > \r\n                      {{arrayAccountBranch.branchName}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"approvalForm.get('accountBranch').hasError('required')\">\r\n                    Please Select Account Branch \r\n                   </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"pb-1\" >\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                  <mat-label>Product Name*</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"productName\" \r\n                    placeholder=\"Product Name\" \r\n                    formControlName=\"productName\"\r\n                    (keypress)=\"keyPressAlphanumeric($event)\"\r\n                  />\r\n                  <!-- <mat-error *ngIf=\"approvalForm.get('productName').hasError('required')\">\r\n                   Please Enter Product Name\r\n                   </mat-error> -->\r\n                </mat-form-field>\r\n                <mat-error\r\n                   *ngIf=\"approvalForm.get('productName').touched &&\r\n                   approvalForm.get('productName').value == 0\">\r\n                   Please Enter valid Product Name\r\n                </mat-error>\r\n              </div>\r\n              \r\n              <div class=\"pb-1\" >\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                  <mat-label>Existing Value*</mat-label>\r\n                  <input\r\n                    matInput onlyNumber\r\n                    name=\"existingValues\" \r\n                    placeholder=\"Existing Value\"\r\n                    (keypress)=\"onKeyPress($event)\"\r\n                    formControlName=\"existingValues\"\r\n                  />\r\n                  <!-- <mat-error *ngIf=\"approvalForm.get('existingValues').hasError('required')\">\r\n                    Please Enter Existing Value\r\n                   </mat-error> -->\r\n                </mat-form-field>\r\n                <mat-error\r\n                   *ngIf=\"approvalForm.get('existingValues').touched &&\r\n                   approvalForm.get('existingValues').value == 0\">\r\n                   Please Enter valid Existing Value\r\n                </mat-error>\r\n              </div>\r\n\r\n              <div class=\"pb-1\" >\r\n                <mat-form-field class=\"full-width\" appearance=\"outline\" >\r\n                  <mat-label>Remarks</mat-label>\r\n                  <input\r\n                    matInput\r\n                    name=\"remarks\" \r\n                    placeholder=\"Remarks\" \r\n                    formControlName=\"remarks\"\r\n                  />\r\n                  <mat-error *ngIf=\"approvalForm.get('remarks').hasError('required')\">\r\n                    Please Enter Remarks\r\n                   </mat-error>\r\n                </mat-form-field>\r\n              </div> \r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </form>\r\n      </mat-card>\r\n      \r\n    </div>\r\n  \r\n    <div fxFlex=\"100\" class=\"mt-16\">\r\n      <button mat-stroked-button  (click)=goBack() >BACK</button>\r\n      <span fxFlex></span>\r\n      <button class=\"Nextbtn\" mat-raised-button color=\"primary\" type=\"button\"\r\n      (click)=\"onSubmit()\"\r\n       [disabled]=\"approvalForm.invalid\" >Next</button>\r\n    </div>\r\n  </div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n\r\n@Component({\r\n  selector: 'app-intrest-details-summary',\r\n  templateUrl: './intrest-details-summary.component.html',\r\n  styleUrls: ['./intrest-details-summary.component.scss']\r\n})\r\nexport class IntrestDetailsSummaryComponent implements OnInit {\r\n  interestForm: FormGroup;\r\n  savingForm: FormGroup;\r\n  loanForm: FormGroup;\r\n  accountType: any;\r\n  accountId: any;\r\n  resp: {\r\n    intrestType: string;\r\n    interestRateApplicable: string;\r\n    marginIn: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  // loanAccountId: any;\r\n  cardId: number;\r\n  constructor(\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private dialogRef: MatDialogRef<IntrestDetailsSummaryComponent>,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.interestForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    this.savingForm = this.formBuilder.group({\r\n      saving: new FormArray([]),\r\n    });\r\n\r\n    this.loanForm = this.formBuilder.group({\r\n      loan: new FormArray([]),\r\n    });\r\n\r\n    this.api.cardInterestFetchById(this.cardId).subscribe((resp) => {\r\n      console.log(\"resp from backend \", this.resp);\r\n      this.resp = resp;\r\n      this.onChangeInterest(this.resp.length);\r\n      this.in.patchValue(this.resp);\r\n    });\r\n  }\r\n\r\n  assignAccountType(accountType) {\r\n    this.accountType = accountType;\r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            cardId: [this.cardId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  onChangeSaving(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.is.length < numberOfItems) {\r\n      for (let i = this.is.length; i < numberOfItems; i++) {\r\n        this.is.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            interestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            cardId: [this.cardId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.is.length; i >= numberOfItems; i--) {\r\n        this.is.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  onChangeLoan(e) {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    const numberOfItems = e || 0;\r\n    if (this.iloan.length < numberOfItems) {\r\n      for (let i = this.iloan.length; i < numberOfItems; i++) {\r\n        this.iloan.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            interestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            cardId: [this.cardId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.iloan.length; i >= numberOfItems; i--) {\r\n        this.iloan.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n  get fs() {\r\n    return this.savingForm.controls;\r\n  }\r\n  get is() {\r\n    return this.fs.saving as FormArray;\r\n  }\r\n  get floan() {\r\n    return this.loanForm.controls;\r\n  }\r\n  get iloan() {\r\n    return this.floan.loan as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n      this.router.navigate([\r\n        `/cardaccount/applicationEnrichment/list`,\r\n      ]); \r\n  }\r\n\r\n  onSubmit(form) {}\r\n  edit() {\r\n    this.dialogRef.close();\r\n    this.api.setFlag({\r\n      flag: true,\r\n    });\r\n    this.router.navigate([\r\n      `/cardaccount/applicationEnrichment/intrest-details`,\r\n    ]);\r\n  }\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"Intrest detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","\r\n<mat-card class=\"matCard\">\r\n    <button mat-button id=\"close\" mat-dialog-close>\r\n      <mat-icon class=\"closeicon\">close</mat-icon>\r\n    </button>\r\n    <div class=\"spanDiv1\">\r\n      <span class=\"span\">Interest Details Summary\r\n  \r\n      </span>\r\n      <mat-divider class=\"divider\"></mat-divider>\r\n    </div>\r\n    <div fxLayout=\"row wrap\" class=\"main\">\r\n      <div fxFlex=\"100\">\r\n      </div>\r\n      <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n        <div class=\"mt-24\"></div>\r\n        <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\">\r\n          <table class=\"cart-table default-bg mat-elevation-z0\">\r\n            <tbody>\r\n              <tr [formGroup]=\"interest\" class=\"mt-4\" *ngFor=\"let interest of in.controls; let i = index\" class=\"form\">\r\n                <div class=\"row\">\r\n                  <ng-container>\r\n  \r\n                    <div class=\"heading\">\r\n                      <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />\r\n                    </div>\r\n  \r\n                    <td>\r\n                      <mat-card class=\"matCardBox\">\r\n                        <mat-label class=\"label\">Interest Rate Applicable</mat-label>\r\n                        <input matInput formControlName=\"intrestRateApplicable\" name=\"account_branch\" class=\"input\"\r\n                          readonly />\r\n                      </mat-card>\r\n                    </td>\r\n                    <td>\r\n                      <mat-card class=\"matCardBox\">\r\n                        <mat-label class=\"label\">Margin in %</mat-label>\r\n                        <input matInput formControlName=\"marginIn\" name=\"account_branch\" class=\"input\" readonly />\r\n                      </mat-card>\r\n                    </td>\r\n                    <td>\r\n                      <mat-card class=\"matCardBox\">\r\n                        <mat-label class=\"label\">Effective Rate %</mat-label>\r\n                        <input matInput formControlName=\"effectiveRate\" name=\"account_branch\" value=\"\" class=\"input\"\r\n                          readonly />\r\n  \r\n                      </mat-card>\r\n                    </td>\r\n                  </ng-container>\r\n                </div>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n      </div>\r\n  \r\n    </div>\r\n  \r\n  \r\n    <span class=\"spanDiv\" (click)=\"edit()\">Edit</span>\r\n  </mat-card>","import { ChangeDetectorRef, Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { CardAccChargeDetSumComponent } from \"./charge-details/card-acc-charge-det-sum/card-acc-charge-det-sum.component\";\r\nimport { IntrestDetailsSummaryComponent } from \"./intrest-details/intrest-details-summary/intrest-details-summary.component\";\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n@Component({\r\n  selector: \"app-application-enrichment\",\r\n  templateUrl: \"./application-enrichment.component.html\",\r\n  styleUrls: [\"./application-enrichment.component.scss\"],\r\n})\r\nexport class ApplicationEnrichmentComponent implements OnInit {\r\n  isCardInterestDetails: boolean = false;\r\n  isCardChargeDetails: boolean = false;\r\n  isCardApplicationEnrichmentDone: boolean = false;\r\n  cardId: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private ls: LocalStoreService,\r\n    private accountService : AccountService, private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.isCardInterestDetails = this.ls.getItem('CARD_INTEREST_DETAILS_DONE');\r\n    this.isCardChargeDetails = this.ls.getItem('CARD_CHARGE_DETAILS_DONE');\r\n\r\n    if (this.isCardInterestDetails && this.isCardChargeDetails) {\r\n      this.isCardApplicationEnrichmentDone = true;\r\n    }\r\n  }\r\n\r\n  goToInterestSummary() {\r\n    const dialogRef = this.dialog.open(IntrestDetailsSummaryComponent, {\r\n      data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => {});\r\n  }\r\n\r\n  goToChargeSummary() {\r\n    const dialogRef = this.dialog.open(CardAccChargeDetSumComponent, {\r\n      data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => {});\r\n  }\r\n\r\n  navigate() {\r\n    this.router.navigate([`/cardaccount/applicationEnrichment/Summary`]);\r\n  }\r\n}\r\n","<div class=\"matcard-size1\">\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"100\" *ngIf=\"isCardApplicationEnrichmentDone\" class=\"mt-8\"><!--isCardApplicationEnrichementDone-->\r\n\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Enrichment Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\" (click)=\"navigate()\">View Summary</button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        \r\n        <!-- Card 1 start-->\r\n        <mat-card [ngClass]=\"{'border-size': isCardInterestDetails || !isCardInterestDetails  }\">\r\n            <mat-card-header>\r\n                <mat-card-title>1.Interest Details</mat-card-title>\r\n                \r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                    <div fxFlex=\"50%\"class=\"size\">\r\n                        <p>\r\n                            Interest Type and Effective Interest Rate is captured.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/Mask Ggroup 5.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n         \r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardInterestDetails\">\r\n                    <button mat-button color=\"primary\" (click)=\"goToInterestSummary()\">\r\n                        View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!isCardInterestDetails\">\r\n                    <button mat-button color=\"primary\"\r\n                        [routerLink]=\"['/cardaccount/applicationEnrichment/intrest-details']\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n\r\n            </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        \r\n        <!-- Card 1 start-->\r\n        <mat-card  [ngClass]=\"{'border-size': isCardChargeDetails || !isCardChargeDetails && isCardInterestDetails  }\">\r\n            <mat-card-header>\r\n                <mat-card-title>2.Charge Details</mat-card-title>\r\n                \r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                    <div fxFlex=\"50%\"class=\"size\">\r\n                        <p>\r\n                            Charge Details are dispalyed.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/esign.png'\"class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n             \r\n            </mat-card-content>\r\n            \r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container *ngIf=\"isCardChargeDetails\">\r\n                    <button mat-button color=\"primary\" (click)=\"goToChargeSummary()\">\r\n                        View Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!isCardChargeDetails\">\r\n                    <button mat-button color=\"primary\"\r\n                        [routerLink]=\"['/cardaccount/applicationEnrichment/charge-details']\"\r\n                        [disabled]=\"!isCardInterestDetails\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n\r\n            </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-document-upload',\r\n  templateUrl: './document-upload.component.html',\r\n  styleUrls: ['./document-upload.component.scss']\r\n})\r\nexport class DocumentUploadComponent implements OnInit {\r\n\r\n  isLoanApplicationEntryDone :boolean=false;\r\n  isLoanDetailScreen :boolean=false;\r\n \r\n  isDocumentUploadDone: boolean = false;\r\n  isDocumentUpload: boolean = false;\r\n\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  documentdetails(){\r\n    this.router.navigate([\r\n      `/cardaccount/documentupload/list/document-details`,\r\n    ]);\r\n\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"profile-pic text-center\">\r\n            <img src=\"assets/images/svg/Group 605/Group 605.png\" class=\"main-profile-img\" />\r\n            <!-- <i class=\"fa fa-edit upload-icon\"></i> -->\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><b>Create New Card Account</b></div>\r\n            <div class=\"text-muted1\">\r\n                Create a new card account with XYZ Bank in a better way. ­­­­­­­­\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- <div fxFlex=\"100\" class=\"mt-8\">\r\n        <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <div fxFlex=\"10\">\r\n                    <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"30\">\r\n                    <h6>Application Entry Stage Completed</h6>\r\n                </div>\r\n                <span fxFlex></span>\r\n                <button mat-button color=\"primary\">\r\n                    View Summary\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div> -->\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n        <!-- Card 1 start-->\r\n        <mat-card>\r\n            <mat-card-header>\r\n                <mat-card-title>1. Document Upload</mat-card-title>\r\n                <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\">\r\n                    <div fxFlex=\"50%\" style=\"padding-left: 17px;\">\r\n                        <p class=\"colour\">\r\n                            All the necessary documents required for the application can be uploaded.\r\n                        </p>\r\n                    </div>\r\n                    <div fxFlex=\"50%\">\r\n                        <img [src]=\"'assets/images/svg/Mask Group 6.svg'\" class=\"card-img\" />\r\n                    </div>\r\n                </div>\r\n                <!--begin::Progress-->\r\n                <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n                <!--end::Progress-->\r\n            </mat-card-content>\r\n            <!--begin:: Card body-->\r\n            <mat-divider></mat-divider>\r\n            <mat-card-actions>\r\n                <ng-container>\r\n                    <button mat-button color=\"primary\" (click)=\"documentdetails()\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n\r\n                <!-- <ng-template #showLoan>\r\n                    <button mat-button color=\"primary\">\r\n                        Add Details <mat-icon>chevron_right</mat-icon>\r\n                    </button>\r\n                </ng-template> -->\r\n\r\n\r\n            </mat-card-actions>\r\n\r\n        </mat-card>\r\n        <!-- Card 1 end -->\r\n    </div>\r\n\r\n</div>\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule, CurrencyPipe } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\nimport { CardAccountRoutes } from './card-account.routing';\r\nimport { CardAccountComponent } from './card-account.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedPipesModule } from 'app/shared/pipes/shared-pipes.module';\r\nimport { SharedDirectivesModule } from 'app/shared/directives/shared-directives.module';\r\nimport { SharedMaterialModule } from 'app/shared/shared-material.module';\r\nimport { ApplicationEntryStageComponent } from './application-entry-stage/application-entry-stage.component';\r\nimport { DocumentUploadComponent } from './document-upload/document-upload.component';\r\nimport { ApplicationEnrichmentComponent } from './application-enrichment/application-enrichment.component';\r\nimport { UnderwritingStageComponent } from './underwriting-stage/underwriting-stage.component';\r\nimport { AssessmentStageComponent } from './assessment-stage/assessment-stage.component';\r\nimport { SupervisorApprovalStageComponent } from './supervisor-approval-stage/supervisor-approval-stage.component';\r\nimport { DigitalSigningComponent } from './digital-signing/digital-signing.component';\r\nimport { DocumentDetailsComponent } from './document-upload/document-details/document-details.component';\r\nimport { IntrestDetailsComponent } from './application-enrichment/intrest-details/intrest-details.component';\r\nimport { ChargeDetailsComponent } from './application-enrichment/charge-details/charge-details.component';\r\nimport { IntrestDetailsSummaryComponent } from './application-enrichment/intrest-details/intrest-details-summary/intrest-details-summary.component';\r\nimport { EnrichmentSummaryComponent } from './application-enrichment/enrichment-summary/enrichment-summary.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\nimport { UnderwritingCreditRatingComponent } from './underwriting-stage/underwriting-credit-rating/underwriting-credit-rating.component';\r\nimport { CardaccountQualitativeScoreboardComponent } from './underwriting-stage/cardaccount-qualitative-scoreboard/cardaccount-qualitative-scoreboard.component';\r\nimport { CardaccountApplicationAssessmentComponent } from './cardaccount-application-assessment/cardaccount-application-assessment.component';\r\nimport { UnderwritingCreditSummaryComponent } from './underwriting-stage/underwriting-credit-rating/underwriting-credit-summary/underwriting-credit-summary.component';\r\nimport { CardaccountApplicationAssessmentSummaryComponent } from './cardaccount-application-assessment/cardaccount-application-assessment-summary/cardaccount-application-assessment-summary.component';\r\nimport { CardaccountQualitativeSummaryComponent } from './underwriting-stage/cardaccount-qualitative-scoreboard/cardaccount-qualitative-summary/cardaccount-qualitative-summary.component';\r\nimport { ApprovalDetailsComponent } from './supervisor-approval-stage/approval-details/approval-details.component';\r\nimport { FinancialDetailsComponent } from './application-entry-stage/financial-details/financial-details.component';\r\nimport { CardCustomerInformationComponent } from './application-entry-stage/card-customer-information/card-customer-information.component';\r\nimport { CardAccountServicesComponent } from './application-entry-stage/card-account-services/card-account-services.component';\r\nimport { CardPrefrencesComponent } from './application-entry-stage/card-prefrences/card-prefrences.component';\r\nimport { CardAccountSummaryComponent } from './application-entry-stage/card-account-services/card-account-summary/card-account-summary.component';\r\nimport { CardInitiationComponent } from './application-entry-stage/card-initiation/card-initiation.component';\r\nimport { CardInitiationSummaryComponent } from './application-entry-stage/card-initiation/card-initiation-summary/card-initiation-summary.component';\r\nimport { DigitalSignNowOrLaterComponent } from './digital-signing/digital-sign-now-or-later/digital-sign-now-or-later.component';\r\nimport { UploadSignatureOrEsignComponent } from './digital-signing/upload-signature-or-esign/upload-signature-or-esign.component';\r\nimport { EsignaturePopComponent } from './digital-signing/esignature-pop/esignature-pop.component';\r\nimport { ApprovalDetailsSummaryComponent } from './supervisor-approval-stage/approval-details/approval-details-summary/approval-details-summary.component';\r\nimport { CardFinancialDetailsSummaryComponent } from './application-entry-stage/financial-details/card-financial-details-summary/card-financial-details-summary.component';\r\nimport { CardCustomerInfoSummaryComponent } from './application-entry-stage/card-customer-information/card-customer-info-summary/card-customer-info-summary.component';\r\n// import { ChargeDetailsSummaryComponent } from '../home/charge-details-summary/charge-details-summary.component';\r\nimport { CardAccChargeDetSumComponent } from './application-enrichment/charge-details/card-acc-charge-det-sum/card-acc-charge-det-sum.component';\r\nimport { CardPrefrenceSummaryComponent } from './application-entry-stage/card-prefrences/card-prefrence-summary/card-prefrence-summary.component';\r\nimport { CardaccountAppEntryStageViewSummaryComponent } from './application-entry-stage/cardaccount-app-entry-stage-view-summary/cardaccount-app-entry-stage-view-summary.component';\r\nimport { SucessMessageComponent } from './document-upload/sucess-message/sucess-message.component';\r\n// import { UploadLinkToEmailComponent } from './document-upload/upload-link-to-email/upload-link-to-email.component';\r\nimport { UnderwritingStageSummaryComponent } from './underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component';\r\n\r\nimport { OthersModule } from '../others/others.module';\r\nimport { SuccessAlertCardComponent } from './digital-signing/success-alert-card/success-alert-card.component';\r\nimport { DigitalsignSummaryComponent } from './digital-signing/digitalsign-summary/digitalsign-summary.component';\r\n@NgModule({\r\n  declarations: [\r\n    CardAccountComponent,\r\n    ApplicationEntryStageComponent,\r\n    DocumentUploadComponent,\r\n    ApplicationEnrichmentComponent,\r\n    UnderwritingStageComponent,\r\n    AssessmentStageComponent,\r\n    SupervisorApprovalStageComponent,\r\n    DigitalSigningComponent,\r\n    DocumentDetailsComponent,\r\n    IntrestDetailsComponent,\r\n    ChargeDetailsComponent,\r\n    IntrestDetailsSummaryComponent,\r\n    EnrichmentSummaryComponent,\r\n    // ChargeDetailsSummaryComponent,\r\n    UnderwritingCreditRatingComponent,\r\n    CardaccountQualitativeScoreboardComponent,\r\n    CardaccountApplicationAssessmentComponent,\r\n    UnderwritingCreditSummaryComponent,\r\n    CardaccountApplicationAssessmentSummaryComponent,\r\n    CardaccountQualitativeSummaryComponent,\r\n    ApprovalDetailsComponent,\r\n    FinancialDetailsComponent,\r\n    CardCustomerInformationComponent,\r\n    CardAccountServicesComponent,\r\n    CardPrefrencesComponent,\r\n    CardAccountSummaryComponent,\r\n    CardInitiationComponent,\r\n    CardInitiationSummaryComponent,\r\n    DigitalSignNowOrLaterComponent,\r\n    UploadSignatureOrEsignComponent,\r\n    EsignaturePopComponent,\r\n    ApprovalDetailsSummaryComponent,\r\n    CardFinancialDetailsSummaryComponent,\r\n\r\n    CardCustomerInfoSummaryComponent,\r\n\r\n    CardAccChargeDetSumComponent,\r\n\r\n    CardPrefrenceSummaryComponent,\r\n    CardaccountAppEntryStageViewSummaryComponent,\r\n    SucessMessageComponent,\r\n    // UploadLinkToEmailComponent\r\n    UnderwritingStageSummaryComponent,\r\n    SuccessAlertCardComponent,\r\n    DigitalsignSummaryComponent,\r\n  ],\r\n  imports: [\r\n    \r\n    CommonModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    NgxDatatableModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedPipesModule,\r\n    SharedDirectivesModule,\r\n    SharedMaterialModule,\r\n    SignaturePadModule,\r\n    MatAutocompleteModule,\r\n    RouterModule.forChild(CardAccountRoutes),\r\n    OthersModule,\r\n   \r\n  ],\r\n  providers: [\r\n    CurrencyPipe\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class CardAccountModule {}\r\n","import { ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { QualitativeScoreboardSummary } from 'app/shared/models/qualitativeScoreboardSummary';\r\n// import { AssessmentReportSummary } from 'app/shared/models/AssessmentReportSummary';\r\n// import { QualitativeScoreboardSummary } from 'app/shared/models/qualitativeScoreboardSummary';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/card-account/account.service';\r\n\r\n@Component({\r\n  selector: 'app-cardaccount-qualitative-scoreboard',\r\n  templateUrl: './cardaccount-qualitative-scoreboard.component.html',\r\n  styleUrls: ['./cardaccount-qualitative-scoreboard.component.scss']\r\n})\r\nexport class CardaccountQualitativeScoreboardComponent implements OnInit {\r\n\r\n  qsForm: FormGroup;\r\n  qsFormArray: FormArray;\r\n  accountId: any;\r\n  // accountType: any;\r\n  accountType=\"cardOrigin\";\r\n  loggedInUser: any;\r\n  sbMultiSelectAnswer: any[] = [];\r\n  scoreboardQuestionsArray: { applicantId: any, scoreCardDetails: any[],scorecardQuestion:any }[] = [];\r\n  scoreCardMappingArray: { applicantId: any, scoreCardDetails: { scoreCardQuestionId: any, scorecardAnswer: any, scoreCardMappingId: any }[] }[] = [];\r\n  numberOfApplicant = new FormControl('');\r\n  scoreCardId = new FormControl('');\r\n  // assessmentReportSummary: AssessmentReportSummary;\r\n  qualitativeScoreboardSummary: QualitativeScoreboardSummary;\r\n  isDataSaved: boolean = false;\r\n  disableDoneBtn: boolean = true;\r\n  anyErrorExist: boolean = false;\r\n  isQualitativeScreen: boolean = false;\r\n  isQualitative: any;\r\n  isQualitativeScoreboard:any;\r\n  previousUrl: string = '';\r\n  showEditOption: boolean = false;\r\n  overDraftByStatus:boolean;\r\n  no_of_applicants: any;\r\n  noOfapplicants:any;\r\n  isCardQualitativeScoreboard:boolean=false;\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  cardId:any;\r\n  sA: any;\r\n  scoreCardDetails:any;\r\n  sbSwlwctAnswer: any[];\r\n  sbSelectAnswer: string=\"\";\r\n  sbSelectAnswer1: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private api: ApiService,\r\n    private snack: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private accountService: AccountService,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    //private urlService: UrlService,\r\n    private cdr:ChangeDetectorRef,\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    // this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    // console.log(\"LOAN ACCOUNT ID:: \",this.loanaccountID);\r\n  //  this.accountType = this.ls.getItem('accountType');\r\n    this.cardId=this.ls.getItem('cardId');\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.isCardQualitativeScoreboard = this.ls.getItem('CARD_QUALITATIVE_SCOREBOARD_DONE');\r\n    //this.no_of_applicants = this.ls.getItem('NO_OF_APPLICANTS');\r\n      \r\n    this.noOfapplicants = this.ls.getItem('CardNoOfApplicants');\r\n    // console.log(this.no_of_applicants);\r\n    console.log(this.noOfapplicants);\r\n    console.log(this.loggedInUser);\r\n    let isScoreCardScreen: boolean = JSON.parse(this.ls.getItem('ASSESSMENT_QA_DONE'));\r\n    \r\n    // if (this.loanaccountID != null && isScoreCardScreen) {\r\n      if ( this.cardId != null && this.isCardQualitativeScoreboard) {\r\n      this.showEditOption = true;\r\n      this.isQualitativeScreen = true;\r\n      this.getAllQualitative();\r\n    } else {\r\n      console.log(\"else\");\r\n      this.showEditOption = false;\r\n      this.loadData();\r\n    }\r\n  //  this.getAccountDetails();\r\n \r\n  //  this.accountType == \"current\" ? this.accountType = \"saving\" : this.accountType = \"saving\";//This line because we have backend data only for savings. This line is temporary.\r\n  // this.accountType == \"current\" ? this.accountType = \"loan\" : this.accountType = \"loan\";\r\n   /// this.accountType == \"current\" ? this.accountType = \"Home Loan\" : this.accountType = \"Home Loan\";\r\n   \r\n    // this.urlService.previousUrl$\r\n    //   .subscribe((previousUrl: string) => {\r\n    //     this.previousUrl = previousUrl\r\n    //   });\r\n\r\n   \r\n\r\n  }\r\n  counter(i: number) {\r\n    return new Array(i);\r\n}\r\n  loadData(){\r\n    this.api.getScorecardQuestions(this.accountType).subscribe((response) => {  \r\n      console.log(response);\r\n\r\n      console.log(this.noOfapplicants);\r\n      if(!this.noOfapplicants && response){\r\n        this.noOfapplicants=response.length;\r\n      }\r\n      response[1].attributeType=\"drop-down\"\r\n\r\n      for (let n = 0; n < this.noOfapplicants; n++) {\r\n          this.scoreboardQuestionsArray.push({scorecardQuestion: response,applicantId: n + 1, scoreCardDetails: response});\r\n          let mapDataAns: any[] = [];\r\n          console.log(\"data\",this.scoreCardDetails);\r\n          for (let p = 0; p < response.length; p++){\r\n            mapDataAns.push({scoreCardQuestionId: response[p].scoreCardQuestionId, scorecardAnswer: null, scoreCardMappingId: null}); \r\n          }\r\n          this.scoreCardMappingArray.push({applicantId: n + 1, scoreCardDetails: mapDataAns});\r\n      }\r\n\r\n      console.log(\"data\",this.scoreCardDetails);\r\n      console.log(\"ques:\",this.scoreboardQuestionsArray)\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  getAllQualitative() {\r\n    console.log(this.isQualitativeScreen);\r\n    this.api.getCardQualitativeScorecardDetails(this.cardId).subscribe((response) => {\r\n      console.log(this.isQualitativeScreen);\r\n      this.qualitativeScoreboardSummary = response;\r\n      console.log(this.qualitativeScoreboardSummary.scoreCardId + \" : \" + this.qualitativeScoreboardSummary.numberOfApplicant);\r\n      this.scoreCardId.setValue(this.qualitativeScoreboardSummary.scoreCardId);\r\n      this.numberOfApplicant.setValue(this.qualitativeScoreboardSummary.numberOfApplicant);\r\n      console.log(\"scorecard id: \", this.scoreCardId)\r\n      console.log(\"numberOfApplicant : \", this.numberOfApplicant)\r\n\r\n      this.scoreboardQuestionsArray = [];\r\n      for (let i = 0; i < this.qualitativeScoreboardSummary.scoreCardMapping.length; i++) {\r\n        console.log(\"inside for\", this.qualitativeScoreboardSummary.scoreCardMapping)\r\n        this.api.getScorecardQuestions(this.accountType).subscribe((response) => {\r\n          console.log(response);\r\n\r\n          console.log(this.noOfapplicants);\r\n          if (!this.noOfapplicants && response) {\r\n            this.noOfapplicants = response.length;\r\n          }\r\n\r\n          for (let n = 0; n < this.noOfapplicants; n++) {\r\n            this.scoreboardQuestionsArray.push({ scorecardQuestion: response, applicantId: n + 1, scoreCardDetails: response });\r\n            console.log(this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails.length)\r\n            for (let j = 0; j < this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails.length; j++) {\r\n              console.log(this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails)\r\n              var scAns = this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails;\r\n              console.log(scAns)\r\n             \r\n              \r\n              this.sbMultiSelectAnswer.push(scAns[j].scorecardAnswer);\r\n              for(let k=0; k < this.sbMultiSelectAnswer.length; k++){\r\n                if(this.sbMultiSelectAnswer[2]){\r\n                  this.sbSelectAnswer = this.sbMultiSelectAnswer[2];\r\n                  console.log(this.sbSwlwctAnswer);\r\n                }\r\n                else if(this.sbMultiSelectAnswer[0]){\r\n                  this.sbSelectAnswer1 = this.sbMultiSelectAnswer[0];\r\n                  console.log(this.sbSelectAnswer1);\r\n                }\r\n              }\r\n              console.log(this.sbMultiSelectAnswer);\r\n            }\r\n          }\r\n\r\n          console.log(\"data\", this.scoreCardDetails);\r\n          console.log(\"ques:\", this.scoreboardQuestionsArray)\r\n          this.cdr.markForCheck();\r\n        });\r\n\r\n        this.scoreCardMappingArray = this.scoreboardQuestionsArray;\r\n      }\r\n\r\n      console.log(this.scoreboardQuestionsArray, \"scoreBoardQuestionArray\");\r\n      this.disableDoneBtn = false;\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n\r\n  insertData(id: any, answer: any, qtype: string, mapId: any,index:any, applcantId: any) {\r\n    console.log(\"Answer: \", answer,index, applcantId);\r\n    if (qtype == 'checkbox') {\r\n      answer = answer.toString();\r\n    }\r\n    let dataUpdated: boolean = false ;\r\n    let aplcntExists: boolean = false ;\r\n    for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n      if (this.scoreCardMappingArray[m].applicantId == applcantId ) {\r\n        for (let n = 0; n < this.scoreCardMappingArray[m].scoreCardDetails.length; n++) {\r\n          console.log(n, this.scoreCardMappingArray[m].scoreCardDetails[n]);\r\n          if (this.scoreCardMappingArray[m].scoreCardDetails[n].scoreCardQuestionId == id) {\r\n            this.scoreCardMappingArray[m].scoreCardDetails[n].scorecardAnswer = answer;\r\n            dataUpdated = true;\r\n          }\r\n        }\r\n        aplcntExists = true ;\r\n      }\r\n    }\r\n    if (!dataUpdated) {\r\n      let dataOject: any = {};\r\n      dataOject.scoreCardQuestionId = id;\r\n      dataOject.scorecardAnswer = answer;\r\n      if (mapId != null) {\r\n        dataOject.scoreCardMappingId = mapId;\r\n\r\n      }\r\n      if (!aplcntExists) {\r\n        let idx = this.scoreCardMappingArray.length ;\r\n        this.scoreCardMappingArray.push({applicantId: applcantId, scoreCardDetails: dataOject});\r\n      } else {\r\n        for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n          if (this.scoreCardMappingArray[m].applicantId == applcantId ) {\r\n              this.scoreCardMappingArray[m].scoreCardDetails.push(dataOject);\r\n              console.log(this.scoreCardMappingArray[m].scoreCardDetails);\r\n          }\r\n        }\r\n      }\r\n      // console.log(dataOject,\"Dataobject\");\r\n    }\r\n\r\n    if (this.scoreCardMappingArray.length == this.scoreboardQuestionsArray.length) {\r\n      let disableDoneBtn: number = 0;\r\n      for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n        for (let i = 0; i < this.scoreCardMappingArray[m].scoreCardDetails.length; i++) {\r\n          let answerIs: any = this.scoreCardMappingArray[m].scoreCardDetails[i].scorecardAnswer;\r\n          if (answerIs == '' || answerIs == null || answerIs == undefined) {\r\n            disableDoneBtn++;\r\n          }\r\n        }\r\n      }\r\n      if (disableDoneBtn > 0) {\r\n        this.disableDoneBtn = true;\r\n      }\r\n      else if (this.anyErrorExist == false && disableDoneBtn == 0) {\r\n        this.disableDoneBtn = false;\r\n      }\r\n    }\r\n    console.log(\"Map Array: \", this.scoreCardMappingArray)\r\n    \r\n  }\r\n\r\n  validateInputValue(inputValue: any, index: any, validationName: string) {\r\n    // console.log(inputValue, index);\r\n    let eleid: any = '#inputError' + index;\r\n    if (inputValue == '' || inputValue == null || inputValue == undefined) {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n    }\r\n    else {\r\n      if (!isNaN(inputValue) && validationName == \"Name\") {\r\n        this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n        this.anyErrorExist = true;\r\n      }\r\n      else {\r\n        this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'hidden');\r\n        this.anyErrorExist = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  validateSelectValue(selectValue: any, index: any) {\r\n    // console.log(selectValue, index);\r\n    let eleid: any = '#selectError' + index;\r\n    if (selectValue == '' || selectValue == null || selectValue == undefined) {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n    }\r\n    else {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'hidden');\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    // this.router.navigate([`${this.previousUrl}`]);\r\n    this.router.navigate([\"/cardaccount/underwritingStage/credit-rating\"]);\r\n\r\n  }\r\n\r\n  getAllData(id) {\r\n    this.api.getAssessmentReportDetails(id).subscribe((response) => {\r\n      // this.assessmentReportSummary = response;\r\n      // console.log(this.assessmentReportSummary);\r\n    });\r\n  }\r\n  saveQualitativeScore(){\r\n    let submitData: any = {};\r\n    // console.log(this.no_of_applicants);\r\n    // let numberOfApplicant = this.no_of_applicants;\r\n    console.log(this.noOfapplicants);\r\n    let numberOfApplicant = this.noOfapplicants;\r\n    // submitData.loanAccountId=this.loanaccountID;  noOfapplicants\r\n    submitData.cardId=this.cardId;  \r\n    // submitData.loanAccountId = this.loanAccountId? this.loanAccountId : 999612;// loanAccountId: this.loanaccountID,\r\n    submitData.numberOfApplicant = numberOfApplicant;\r\n    submitData.scoreCardId = this.scoreCardId.value;\r\n    submitData.loggedInUser = 123;\r\n    submitData.accountType=\"cardOrigin\";\r\n    \r\n    submitData.scoreCardMapping = this.scoreCardMappingArray;\r\n    console.log(submitData);\r\n    this.api.saveQualitativeScorecard(submitData).subscribe((resp) => {\r\n      console.log(\"data\",submitData.cardId);\r\n      this.snack.open('Card Origination Qualitative Scoreboard Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      // console.log(resp);\r\n      this.isDataSaved = true;\r\n      // this.ls.setItem('CARD_QUALITATIVE_SCOREBOARD_DONE', true);\r\n      // this.ls.setItem('CARD_UNDERWRITING_DONE',true);\r\n      // this.disableDoneBtn=false\r\n      this.accountService.refresh.next();\r\n    \r\n    }, err => {\r\n      this.snack.open('Server Error!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n    this.next();\r\n  }\r\n\r\n  next(){\r\n    this.ls.setItem('CARD_QUALITATIVE_SCOREBOARD_DONE', true);\r\n    this.ls.setItem('CARD_UNDERWRITING_DONE',true);\r\n    this.accountService.refresh.next();\r\n     this.router.navigate([\"/cardaccount/assessmentStage/list\"]);\r\n  }\r\n\r\n  // done() {\r\n  //   this.ls.setItem('ASSESSMENT_QA_DONE', true);\r\n  //  // this.accountService.refresh.next();\r\n  //   this.router.navigate([`/home/application/assessment/report/${this.accountId}`]);\r\n  // }\r\n  noOfApplicant(event){\r\n    console.log(event);\r\n\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"matcard-size1\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_Scrum_board_re_wk7v.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Qualitative Scoreboard</b></div>\r\n    </div>\r\n  </div>\r\n  <form>\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n      <h2 class=\"ml-16\">Qualitative Scoreboard</h2>\r\n      <div class=\"mt-24\"></div>\r\n      <mat-card>\r\n        <mat-card-title></mat-card-title>\r\n        <mat-card-content>\r\n          <h4><b>Scorecard ID</b></h4>\r\n          <h4>\r\n            <input matInput name=\"ScoreCardId\" onlyNumber placeholder=\"Enter ScoreCardId\" [formControl]=\"scoreCardId\"\r\n             />\r\n             <mat-error\r\n              *ngIf=\"scoreCardId.touched && scoreCardId.value == 0\">\r\n               Please Enter valid Scorecard ID\r\n              </mat-error>\r\n          </h4>\r\n          <h3 class=\"mt-32\">About the Qualitative Scorecard ID</h3>\r\n          <p class=\"disableText\">\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting\r\n            industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n            since the 1500s, when an unknown printer took a galley of type and\r\n            scrambled it to make a type specimen book.\r\n          </p>\r\n          <h3 class=\"mt-32\">No. of Applicant</h3>\r\n          <p>{{noOfapplicants}}</p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n  \r\n      <div class=\"mt-32\"></div>\r\n      <mat-accordion multi=\"true\">\r\n        <mat-expansion-panel class=\"mb-8\"  *ngFor='let sA of scoreboardQuestionsArray ; let ix = index' expanded=\"true\">\r\n          <mat-expansion-panel-header>\r\n          <mat-panel-title><mat-icon class=\"check-circle\">check_circle</mat-icon> <span class=\"ml-8\">Applicant {{ sA.applicantId }}</span></mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n            <mat-card class=\"full-width\">\r\n              <mat-card-content class=\"full-width\">\r\n                    <div>\r\n                      <h3>Questions</h3>\r\n                    </div>\r\n                    <div fxLayout=\"column\">\r\n                    <!-- <div class=\"full-width\"> --><div fxLayout=\"row\" fxFlex=\"70%\" fxLayoutGap=\"35px\">\r\n                      <div fxLayout=\"row wrap\" class=\"full-width\" *ngFor=\"let sQ of sA.scoreCardDetails; let i=index;\">\r\n                        <div class=\"full-width\">\r\n                          <div class=\"qDiv\">\r\n                            <mat-hint>{{i + 1 }}.{{sQ.scorecardQuestion}}<span class=\"redC\" *ngIf=\"sQ.isRequired\"> *</span></mat-hint>\r\n                          </div>\r\n                          <div class=\"full-width\" *ngIf=\"sQ.attributeType == 'textbox'\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                              <input matInput\r\n                              [required]=\"sQ.isRequired\"\r\n                              [autocomplete]=\"off\"\r\n                              [maxlength]=\"sQ.validationName == 'Name'? 25 : 50\"\r\n                              name=\"{{ 'input' + i }}\"\r\n                              id=\"{{ 'input' + i }}\"\r\n                            \r\n                              [value]=\"scoreCardMappingArray[ix].scoreCardDetails[i].scorecardAnswer == undefined? sbSelectAnswer : scoreCardMappingArray[ix].scoreCardDetails[i].scorecardAnswer\"\r\n                              (keyup)=\"validateInputValue($event.target.value,i,sQ.validationName);insertData(sQ.scoreCardQuestionId,$event.target.value,sQ.attributeType,sQ.scoreCardMappingId,i,sA.applicantId)\"\r\n                              (click)=\"validateInputValue($event.target.value,i,sQ.validationName)\"\r\n                              >\r\n                            </mat-form-field>\r\n                            <!-- [value]=\"sQ.scorecardAnswer\" -->\r\n                            <mat-error [style.visibility]=\"'hidden'\" id=\"{{ 'inputError' + i }}\">Enter {{sQ.validationName}}</mat-error>\r\n                          </div>\r\n                          <div class=\"full-width\" *ngIf=\"sQ.attributeType == 'drop-down' || sQ.attributeType == 'checkbox'\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                              <mat-select\r\n                              [required]=\"sQ.isRequired\"\r\n                              [name]=\"sQ.attributeType == 'checkbox'?  'multiSelect' + i  :  'select' + i \"\r\n                              [id]=\"sQ.attributeType == 'checkbox'?  'multiSelect' + i  :  'select' + i \"\r\n                              [value]=\"sQ.attributeType == 'checkbox'? sbMultiSelectAnswer : sbMultiSelectAnswer[i]\"\r\n                              (click)=\"validateSelectValue($event.target.value,i)\"\r\n                              (selectionChange)=\"validateSelectValue($event.value,i);insertData(sQ.scoreCardQuestionId,$event.value,sQ.attributeType,sQ.scoreCardMappingId,i,sA.applicantId)\"  \r\n                              [multiple]=\"sQ.attributeType == 'checkbox'\"\r\n                              >\r\n                                <mat-option *ngFor=\"let sA of sQ.scorecardAnswers\" [value]=\"sA\">\r\n                                  {{sA}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-error [style.visibility]=\"'hidden'\" id=\"{{ 'selectError' + i }}\">Please select {{sQ.validationName}}</mat-error>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                     \r\n                      <!-- <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                        <div class=\"qDiv\">\r\n                        <mat-hint>Score<span class=\"redC\" ></span></mat-hint>\r\n                       </div>\r\n                        <div class=\"full-width\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <input matInput name=\"ScoreId\" placeholder=\"Enter the Score\"\r\n                          />\r\n                           <input matInput name=\"ScoreId\" onlyNumber placeholder=\"Enter the Score\" [formControl]=\"scoreId\"\r\n                          /> \r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div> -->\r\n                    </div>\r\n                  </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </div>\r\n  </form>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <button mat-stroked-button  (click)=\"goBack()\">BACK</button>\r\n    <span fxFlex></span>\r\n    <button class=\"Nextbtn\" mat-raised-button color=\"primary\" [disabled]=\"disableDoneBtn || !numberOfApplicant.valid\" (click)=\"saveQualitativeScore()\" type=\"button\">Next</button>\r\n  </div>\r\n</div>\r\n"]}