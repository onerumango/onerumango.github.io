{"version":3,"sources":["webpack:///src/app/views/loan-account/loan-enrichment/loan-intrest-details/loan-intrest-details.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-intrest-details/loan-intrest-details.component.html","webpack:///src/app/views/loan-account/supervisor-approval-stage/supervisor-assessment-details/supervisor-assessment-details.component.ts","webpack:///src/app/views/loan-account/supervisor-approval-stage/supervisor-assessment-details/supervisor-assessment-details.component.html","webpack:///src/app/views/loan-account/underwriting-stage/legal-opinion/legal-opinion.component.ts","webpack:///src/app/views/loan-account/underwriting-stage/legal-opinion/legal-opinion.component.html","webpack:///src/app/views/loan-account/account-creation-stage/account-creation-stage.component.ts","webpack:///src/app/views/loan-account/account-creation-stage/account-creation-stage.component.html","webpack:///src/app/views/loan-account/digital-signing/digital-signing.component.ts","webpack:///src/app/views/loan-account/digital-signing/digital-signing.component.html","webpack:///src/app/views/loan-account/account-approval-stage/loan-view-summary/loan-view-summary.component.ts","webpack:///src/app/views/loan-account/account-approval-stage/loan-view-summary/loan-view-summary.component.html","webpack:///src/app/views/loan-account/post-offer-amend-stage/loan-repayment/loan-repayment.component.ts","webpack:///src/app/views/loan-account/post-offer-amend-stage/loan-repayment/loan-repayment.component.html","webpack:///src/app/shared/animations/rumango-animations.ts","webpack:///src/app/views/loan-account/post-offer-amend-stage/post-offer-amendment/post-offer-amendment.component.ts","webpack:///src/app/views/loan-account/post-offer-amend-stage/post-offer-amendment/post-offer-amendment.component.html","webpack:///src/app/views/loan-account/loan-entry-stage/guarantor-details/guarantor-details.component.ts","webpack:///src/app/views/loan-account/loan-entry-stage/guarantor-details/guarantor-details.component.html","webpack:///src/app/views/loan-account/loan-entry-stage/admission-details/admission-details.component.ts","webpack:///src/app/views/loan-account/loan-entry-stage/admission-details/admission-details.component.html","webpack:///src/app/views/loan-account/post-offer-amend-stage/post-offer-amend-stage.component.ts","webpack:///src/app/views/loan-account/post-offer-amend-stage/post-offer-amend-stage.component.html","webpack:///src/app/views/loan-account/account-approval-stage/account-approval-stage.component.ts","webpack:///src/app/views/loan-account/account-approval-stage/account-approval-stage.component.html","webpack:///src/app/views/loan-account/loan-entry-stage/loan-details/loan-details.component.ts","webpack:///src/app/views/loan-account/loan-entry-stage/loan-details/loan-details.component.html","webpack:///src/app/views/loan-account/offer-issue-stage/offerissue/offerissue.component.ts","webpack:///src/app/views/loan-account/offer-issue-stage/offerissue/offerissue.component.html","webpack:///src/app/views/loan-account/account-approval-stage/offer-accept-reject-summary/offer-accept-reject-summary.component.ts","webpack:///src/app/views/loan-account/account-approval-stage/offer-accept-reject-summary/offer-accept-reject-summary.component.html","webpack:///src/app/views/loan-account/offer-issue-stage/asset-valuation/asset-valuation.component.ts","webpack:///src/app/views/loan-account/offer-issue-stage/asset-valuation/asset-valuation.component.html","webpack:///src/app/views/loan-account/offer-issue-stage/legal-opinion/legal-opinion.component.ts","webpack:///src/app/views/loan-account/offer-issue-stage/legal-opinion/legal-opinion.component.html","webpack:///src/app/views/loan-account/account-approval-stage/assessment-summary/assessment-summary.component.ts","webpack:///src/app/views/loan-account/account-approval-stage/assessment-summary/assessment-summary.component.html","webpack:///src/app/views/loan-account/loan-assesment-stage/loan-assesment-stage.component.ts","webpack:///src/app/views/loan-account/loan-assesment-stage/loan-assesment-stage.component.html","webpack:///src/app/views/loan-account/account-creation-stage/account-creation-summary/account-creation-summary.component.ts","webpack:///src/app/views/loan-account/account-creation-stage/account-creation-summary/account-creation-summary.component.html","webpack:///src/app/views/loan-account/underwriting-stage/credit-rating-details/credit-rating-details.component.ts","webpack:///src/app/views/loan-account/underwriting-stage/credit-rating-details/credit-rating-details.component.html","webpack:///src/app/views/loan-account/account-approval-stage/offer-accept-reject-details/offer-accept-reject-details.component.ts","webpack:///src/app/views/loan-account/account-approval-stage/offer-accept-reject-details/offer-accept-reject-details.component.html","webpack:///src/app/views/loan-account/account-creation-stage/account-create-details/account-create-details.component.ts","webpack:///src/app/views/loan-account/account-creation-stage/account-create-details/account-create-details.component.html","webpack:///src/app/views/loan-account/offer-accept-reject-stage/offer-accept-reject/offer-accept-reject.component.ts","webpack:///src/app/views/loan-account/offer-accept-reject-stage/offer-accept-reject/offer-accept-reject.component.html","webpack:///src/app/views/loan-account/loan-account.component.ts","webpack:///src/app/views/loan-account/loan-account.component.html","webpack:///src/app/views/loan-account/loan-entry-stage/asset-details/asset-details.component.ts","webpack:///src/app/views/loan-account/loan-entry-stage/asset-details/asset-details.component.html","webpack:///src/app/views/loan-account/digital-signing/upload-sign-or-esign/upload-sign-or-esign.component.ts","webpack:///src/app/views/loan-account/digital-signing/upload-sign-or-esign/upload-sign-or-esign.component.html","webpack:///src/app/views/loan-account/loan-enrichment/loan-charge-details/loan-charge-details-summary/loan-charge-details-summary.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-charge-details/loan-charge-details-summary/loan-charge-details-summary.component.html","webpack:///src/app/views/loan-account/underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component.ts","webpack:///src/app/views/loan-account/underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component.html","webpack:///src/app/views/loan-account/post-offer-amend-stage/loan-disbursement/loan-disbursement.component.ts","webpack:///src/app/views/loan-account/post-offer-amend-stage/loan-disbursement/loan-disbursement.component.html","webpack:///src/app/views/loan-account/offer-issue-stage/credit-rating-details/credit-rating-details.component.ts","webpack:///src/app/views/loan-account/offer-issue-stage/credit-rating-details/credit-rating-details.component.html","webpack:///src/app/views/loan-account/loan-enrichment/account-services/account-services.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/account-services/account-services.component.html","webpack:///src/app/views/loan-account/loan-assesment-stage/loan-assessment-details/loan-assessment-details.component.ts","webpack:///src/app/views/loan-account/loan-assesment-stage/loan-assessment-details/loan-assessment-details.component.html","webpack:///src/app/views/loan-account/post-offer-amend-stage/post-offer-amendment-summary/post-offer-amendment-summary.component.ts","webpack:///src/app/views/loan-account/post-offer-amend-stage/post-offer-amendment-summary/post-offer-amendment-summary.component.html","webpack:///src/app/views/loan-account/loan-entry-stage/customer-information/customer-information.component.ts","webpack:///src/app/views/loan-account/loan-entry-stage/customer-information/customer-information.component.html","webpack:///src/app/views/loan-account/loan-enrichment/loan-repayment-component/repayment-schedule/repayment-schedule.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-repayment-component/repayment-schedule/repayment-schedule.component.html","webpack:///src/app/views/loan-account/account-approval-stage/account-approval-details-summary/account-approval-details-summary.component.ts","webpack:///src/app/views/loan-account/account-approval-stage/account-approval-details-summary/account-approval-details-summary.component.html","webpack:///src/app/views/loan-account/offer-issue-stage/offer-assessment/offer-assessment.component.ts","webpack:///src/app/views/loan-account/offer-issue-stage/offer-assessment/offer-assessment.component.html","webpack:///src/app/views/loan-account/underwriting-stage/valuation-of-assets/valuation-of-assets.component.ts","webpack:///src/app/views/loan-account/underwriting-stage/valuation-of-assets/valuation-of-assets.component.html","webpack:///src/app/views/loan-account/loan-enrichment/loan-enrichment.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-enrichment.component.html","webpack:///src/app/views/loan-account/underwriting-stage/underwriting-stage.component.ts","webpack:///src/app/views/loan-account/underwriting-stage/underwriting-stage.component.html","webpack:///src/app/views/loan-account/loan-enrichment/loan-repayment-component/loan-repayment-component.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-repayment-component/loan-repayment-component.component.html","webpack:///src/app/views/loan-account/loan-entry-stage/loan-entry-stage.component.ts","webpack:///src/app/views/loan-account/loan-entry-stage/loan-entry-stage.component.html","webpack:///src/app/views/loan-account/supervisor-approval-stage/supervisor-approved-details/supervisor-approved-details.component.ts","webpack:///src/app/views/loan-account/supervisor-approval-stage/supervisor-approved-details/supervisor-approved-details.component.html","webpack:///src/app/views/loan-account/account-approval-stage/assessment-details/assessment-details.component.ts","webpack:///src/app/views/loan-account/account-approval-stage/assessment-details/assessment-details.component.html","webpack:///src/app/views/loan-account/offer-accept-reject-stage/offer-accept-reject-stage.component.ts","webpack:///src/app/views/loan-account/offer-accept-reject-stage/offer-accept-reject-stage.component.html","webpack:///src/app/views/loan-account/supervisor-approval-stage/supervisor-approval-stage.component.ts","webpack:///src/app/views/loan-account/supervisor-approval-stage/supervisor-approval-stage.component.html","webpack:///src/app/views/loan-account/loan-enrichment/loan-repayment-component/loan-repayment-summary/loan-repayment-summary.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-repayment-component/loan-repayment-summary/loan-repayment-summary.component.html","webpack:///src/app/views/loan-account/loan-enrichment/loan-charge-details/loan-charge-details.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-charge-details/loan-charge-details.component.html","webpack:///src/app/views/loan-account/loan-enrichment/loan-disbursement-details/loan-disbursement-summary/loan-disbursement-summary.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-disbursement-details/loan-disbursement-summary/loan-disbursement-summary.component.html","webpack:///src/app/views/loan-account/offer-issue-stage/offer-issue-stage.component.ts","webpack:///src/app/views/loan-account/offer-issue-stage/offer-issue-stage.component.html","webpack:///src/app/views/loan-account/loan-enrichment/loan-intrest-details/loan-interest-summary/loan-interest-summary.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-intrest-details/loan-interest-summary/loan-interest-summary.component.html","webpack:///src/app/views/loan-account/loan-entry-stage/financial-details/financial-details.component.ts","webpack:///src/app/views/loan-account/loan-entry-stage/financial-details/financial-details.component.html","webpack:///src/app/views/loan-account/loan-enrichment/loan-enrichment-view-summary/loan-enrichment-view-summary.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-enrichment-view-summary/loan-enrichment-view-summary.component.html","webpack:///src/app/views/loan-account/loan-account.routing.ts","webpack:///src/app/views/loan-account/digital-signing/esign-pop/esign-pop.component.ts","webpack:///src/app/views/loan-account/digital-signing/esign-pop/esign-pop.component.html","webpack:///src/app/views/loan-account/offer-accept-reject-stage/offer-assessment-details/offer-assessment-details.component.ts","webpack:///src/app/views/loan-account/offer-accept-reject-stage/offer-assessment-details/offer-assessment-details.component.html","webpack:///src/app/views/loan-account/loan-entry-stage/mandate-details/mandate-details.component.ts","webpack:///src/app/views/loan-account/loan-entry-stage/mandate-details/mandate-details.component.html","webpack:///src/app/views/loan-account/loan-account.module.ts","webpack:///src/app/views/loan-account/post-offer-amend-stage/post-offer-amendment-stage-summary/post-offer-amendment-stage-summary.component.ts","webpack:///src/app/views/loan-account/post-offer-amend-stage/post-offer-amendment-stage-summary/post-offer-amendment-stage-summary.component.html","webpack:///src/app/views/loan-account/loan-entry-stage/collateral-details/collateral-details.component.ts","webpack:///src/app/views/loan-account/loan-entry-stage/collateral-details/collateral-details.component.html","webpack:///src/app/views/loan-account/digital-signing/digital-sign-in-now-or-later/digital-sign-in-now-or-later.component.ts","webpack:///src/app/views/loan-account/digital-signing/digital-sign-in-now-or-later/digital-sign-in-now-or-later.component.html","webpack:///src/app/views/loan-account/loan-enrichment/loan-disbursement-details/loan-disbursement-details.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/loan-disbursement-details/loan-disbursement-details.component.html","webpack:///src/app/views/loan-account/offer-accept-reject-stage/offer-issue/offer-issue.component.ts","webpack:///src/app/views/loan-account/offer-accept-reject-stage/offer-issue/offer-issue.component.html","webpack:///src/app/views/loan-account/loan-entry-stage/vehicle-details/vehicle-details.component.ts","webpack:///src/app/views/loan-account/loan-entry-stage/vehicle-details/vehicle-details.component.html","webpack:///src/app/views/loan-account/account-creation-stage/offer-accept-reject/offer-accept-reject.component.ts","webpack:///src/app/views/loan-account/account-creation-stage/offer-accept-reject/offer-accept-reject.component.html","webpack:///src/app/views/loan-account/loan-assesment-stage/loan-qualitative-scoreboard/loan-qualitative-scoreboard.component.ts","webpack:///src/app/views/loan-account/loan-assesment-stage/loan-qualitative-scoreboard/loan-qualitative-scoreboard.component.html","webpack:///src/app/views/loan-account/post-offer-amend-stage/offer-issue/offer-issue.component.ts","webpack:///src/app/views/loan-account/post-offer-amend-stage/offer-issue/offer-issue.component.html","webpack:///src/app/views/loan-account/loan-enrichment/account-services/account-service-summary/account-service-summary.component.ts","webpack:///src/app/views/loan-account/loan-enrichment/account-services/account-service-summary/account-service-summary.component.html","webpack:///src/app/views/loan-account/account-approval-stage/loan-summary-details/loan-summary-details.component.ts","webpack:///src/app/views/loan-account/account-approval-stage/loan-summary-details/loan-summary-details.component.html"],"names":["LoanIntrestDetailsComponent","accountService","snack","ls","api","router","formBuilder","loader","showEditOption","accountType","accountId","getItem","loanaccountID","loanInfo","console","log","loanAccountId","isLoanInterestDetails","setTimeout","getInterestDetails","getFlexcubeDetails","subscribe","response","onChangeInterest","length","patchValue","interestForm","group","interestInfo","open","loanInterestFetchById","resp","close","err","e","numberOfItems","i","push","rateCode","required","intrestType","intrestRateApplicable","marginIn","max","min","effectiveRate","createdDate","createdBy","lastModifiedDate","lastModifiedBy","loanInterestId","id","removeAt","controls","f","navigate","event","target","value","slice","loanintrestDetailsSave","duration","verticalPosition","horizontalPosition","next","setItem","refresh","goBack","onSubmit","selector","templateUrl","styleUrls","SupervisorAssessmentDetailsComponent","fb","buildformGroup","assessmentForm","requestedLoanAmount","rateofInterest","userRecommendation","approvedLoanAmount","loanTenure","systemRecommendation","loanAmountRecommended","finalLoanTenure","UnderWrittingLegalOpinionComponent","maxDate","Date","minDate","isChecked","disabled","disabledToggle","accountForm","assetAreaSize","description","pattern","lawyerName","mktValOfAsset","opinion","isDecisionFavorable","opinionDate","valuationDate","assetAreaInUnits","isVehicleDetailsScreen","JSON","parse","gettingLegalOpinionDetail","buildAccountForm","valueData","gettingLegalOpinionDetails","data","Response","format","now","dateStringWithTime","now1","dateStringWithTime1","pk","parseInt","payload","saveLegalOpinion","isCreditRatingDetails","isValuationofAsset","isLegalOpinion","inputChar","String","fromCharCode","charCode","test","preventDefault","val","which","keyCode","gettingValuationDetails","res","get","setValue","toggle","_keyPress","_keyPress1","OnSubmit","AccountCreationStageComponent","dialogService","dialog","isAccountCreationStageDone","isAccountCreateDetails","isOfferAcceptReject","OfferAcceptRejectSummaryDialog","AccountCreateSummaryDialog","DigitalSigningComponent","cdr","informations","isEsignScreen","markForCheck","item","state","LoanViewSummaryComponent","dialogRef","loanDetails","edit","LoanRepaymentComponent","loanRepaymentForm","type_of_repayment","first_repayment_date","maturity_date","loan_tenure","repayment_mode","repayment_frequency","customer_account","moratorium_period","branch_code","reusable","opacity","transform","params","delay","scale","x","y","z","rumangoAnimations","display","PostOfferAmendmentComponent","appApiService","apiService","selectedDay","days","months","years","setDate","getDate","selectedYear","getFullYear","year","month","day","ispostOfferAmendStageDone","getAmendDetails","fetchByCif","loanData","intrestData","installmentTypeData","getOfferAmendmentDetails","result","offerIssueDate","offerExpiryDate","offerAmendDate","PostOfferAmendmentForm","applicantName","installmentType","margin","loanAmmountRecommended","rateOfInterest","input","rate","loanValue","margin1","effectiveRate1","now2","dateStringWithTime2","renewData","aprloan","uploadPostOfferAmendmentDetails","inp","cifNumber","customerInfoList","firstName","lastName","error","fetchByLoanAccountId","split","fetchLoanAssessment","loanAmountRecommendation","getOfferAcceptReject","issueDate","submit","guarantorDetailsForm","GuarantorDetailsComponent","active","arrayCountry","arrayState","arrayCity","arrayRelationshipType","tomorrow","prefixFlag","isDuplicateCIF","disableSaveBtn","financialDetailscreen","getCountryName","getRelationShipType","getPrefixValue","numOfApplicants","getGuarantorDetails","cifByData","country","getStateName","getCityName","relationWithCustomer","prefix","existingCustomer","middleName","dateOfBirth","building","street","address1","address2","city","zipCode","phoneNumber","mobileNumber","emailAddress","relationshipType","getGuarantorByLoanAccId","guarantorDetails","key","getDropDownValues","arrayPrefix","getAllCountries","authStatus","countryName","sort","getStateByCountryId","entityName","getDropDownValues1","customerId","customerTypeId","userAddress","upsertGuarantorDetails","fetchCustomersByLoanAccId","customerInfoDetails","newData","cifValue","some","landlineNumber","primaryEmailAdress","submitForm","UserAddress","AdmissionDetailsComponent","datepipe","isAdmissionDetailscreen","getAdmissionDetails","admissionDetailsForm","loanRequestedFor","modeOfStudy","institution","specialization","employmentPotential","costOfCourse","scholarshipOrBusinessEligible","admissionStatus","institutionRanking","courseCommencementDate","convertDate","courseDuration","proposedCourseOfStudy","university","projectedEarning","source","getAdmissionDetailsByLoanAccId","addmissionDetails","upsertAdmissionDetails","d1","d2","getMonth","dateRangeStart","dateRangeEnd","date1","date2","monthDiff","date","PostOfferAmendStageComponent","isOfferIssueRejectScreen","width","backdropClass","height","disableClose","afterClosed","animations","AccountApprovalStageComponent","isAccountApproveStageDone","isAssessmentStageDone","isOfferAcceptRejectStageDone","isLoanSummaryStageDone","LoanDetailsComponent","flag","flag1","isHomeLoan","isVehicleLoan","loanForm","businessProductName","accountBranch","applicationDate","estimatedCost","customerContribution","loanAmount","purposeOfLoan","accountCurrency","getAccountBranchDetails","isLoanDetailsScreen","getAccountDetails","getBusinessProductDetails","getLoanDetails","accountDetails","getBusinessProductName","arrayAccountBranch","getAccount","accountTypeName","getAccountBranch","screenArray","screenArrayData","branchName","currencyData","find","undefined","branchCcy","valueForaccId","setAccountId","screennbame","toLowerCase","resultOfScreen","filter","s","includes","ck","prSize","saveLoanDetails","assign","statusModel","status","updateLoanDetailsStatus","sessionStorage","loanAccountid","fundStatus","toString","Number","income","OfferissueComponent","_document","generateArr","otherDocumentArray","files","fileName","showDelete","documentUploaded","OfferIssueForm","installmentFrequency","generateOffer","interest","principal","installmentAmount","charges","isOfferIssueScreen","buildOfferIssueForm","file","name","type","selectedFiles","uploadDoc","url","img","uploadData","FormData","append","getOfferIssueDetails","collaterals","docUrl","showSpinn","screenType","stringify","uploadOfferDocument","fileUrl","details","upsertOfferIssue","Next","approvedLoan","sal","replace","final","join","dataYear","dataMonth","dataDay","onInput","uploadCollateralType","deleteDoc","Submit","Document","report","OfferAcceptRejectSumaryComponent","dataService","fetchOfferAcceptRejectDetails","getofferDetails","offerDetails","sendNavParam","AssetValuationComponent","bankValuationArr","areaArr","assetValuation","bankValuation","assetType","propertyAreaSize","assetValue","actualPropertyAreaSize","actualPropertyAreaInUnits","isAssetValuationScreen","getAssetValuation","saveOrValuationOfAsset","marketValue","keyPress1","LegalOpinionComponent","lawyerArr","descriptionArr","legalOpinion","isLegalOpinionScreen","getLegalOpinionDetails","getLegalOpinion","UpdateLegalOpinion","assetArea","onInput1","AssessmentSummaryComponent","fetchAssessmentDetails","getAssessmentDetails","items","LoanAssesmentStageComponent","isLoanQualitativeScoreboard","isLoanAssessmentDetails","getApplnAssessmentDetails","assessmentReportSummary","loanQualitativeSummaryDialog","loanAssessmentSummaryDialog","AccountCreationSummaryComponent","titleName","getAccountCreateDetails","offerAcceptReject","offerAcceptRejectvalue","accountCreateDetails","accountCreateValue","done","UnderWrittingCreditRatingDetailsComponent","customerNames","customerName","getCustomerInformationDetails","buildCollateralForm","gettingCreditRatingDetail","gettingCreditRatingDetails","isResponse","creditForms","agencyRating","array","addModFormGroup","index","c","agencyId","agencyName","ratings","remarks","saveCreditDetails","OfferAcceptRejectDetailsComponent","_location","customerResponse","buildOfferAcceptRejectForm","offerAcceptRejectForm","offerAcceptOrRejectId","dateOfOfferAcceptOrReject","generateDate","offerAcceptDate","expiryDate","AccountCreateDetailsComponent","offerAcceptedDate","accountCreateId","disbursementAmount","repaymentAmount","buildaccountForm","interestLoadData","dataLoad","saveAccountCreateDetails","acceptDate","offerAcceptOrRejectDate","getingOfferIssueDetails","loanDisbursementFetchById","totalDisbursement","letterOnly","AcceptOfferAcceptRejectComponent","disableDone","isAssesmentDetailsScreen","arraySystemRecommendation","installmentTypes","offeracceptForm","buildOfferAcceptForm","now3","dateStringWithTime3","LoanAccountComponent","isChargesScreen","isOfferIssueScreenDone","isSupervisorApprovalDone","isApprovedDetails","isCreditRatingScreen","isValuationAssetScreen","islegalOpinionScreen","isLoanEnrichmentDone","isLoanDisbursementDetails","isLoanRepaymentDetails","isChargeDetails","isAccountServices","isLoanApplicationEntryDone","isLoanDetailScreen","isAssetsDetailScreen","isVehicleDetailScreen","isAdmissionDetails","isCustomerInformation","isMandateDetails","isFinancialDetails","isCollateralDetails","isGuarantorDetails","isUnderWritingStageDone","isEducationLoan","isPostOfferAmendStageDone","isPostOfferAmendment","isAccountCreditStage","isDigitalSigningDone","isDigitalSigning","isLoanEnrichment","isLoanAssessmentStageScreen","isApprovalScreen","isSupervisorapprovalScreen","isOfferIssueStageScreen","isOfferIssueRejectStageScreen","isPostAmmendementStageScreen","isPostAmmendementScreen","isAccountCreateDetailsScreen","isAccountCreationStageScreenDone","accountItemsSub","accountItems$","menuItem","accountItems","overDraftByStatus1","isActive","sendApprovedStatus","unsubscribe","goApproved","AssetDetailsComponent","loanaccountId","isAssetDetailscreen","getAssetDetails","getAssetails","assetDetails","assetForm","mortgagedBranch","dimensions","assetStatus","homeType","locality","upsertAssetDetails","UploadSignOrEsignComponent","isDone","previousUrl","image","imageURL1","screen","isSignLater","show","selectedFile","reader","FileReader","readAsDataURL","onload","event2","cId","documentName","documentType","fileType","verificationType","upload","doConfirmDialog","removeItem","profileFile","nativeElement","deleteCustomerDoc","profileId","LoanChargeDetailsSummaryComponent","chargeFormIT","chargeIT","loanCahrgeFetchById","amout","waiver","craetedBy","form","UnderwritingStageSummaryComponent","loanAccountID","getApprovedStatus","isApprovedSreen","getunderwritingStageSummaryDetails","gettingUnderWritingSummary","summaryInfo","ValuationDetailsValues","valuationOfAssetInfo","opinionDetailsValue","legalOpinionInfo","creditDetails","creditRatingValues","LoanDisbursementComponent","loanDisbursementForm","loan_amount","first_disbursement_date","disbursement_mode","disbursement_frequency","CreditRatingDetailsComponent","agencyArr","customerArr","isCreditRateScreen","getCreditRating","UpdateCreditRating","AccountServicesComponent","flag2","flag3","flag4","flag5","flag6","lastUpdateByCif","AccountServicesFetchById","buildStatmentPreferenceForm","serviceDetails","obj","serviceName","buildMaturityForm","buildRevisionForm","buildHolidayForm","statementPreferencesForm","statementCycle","statementType","statementGeneration","startDate","compose","lastData","accServiceId","holidayPreferenceForm","ignoreHolidays","holidayCheck","moveAcrossMonth","cascadeSchedules","accServiceDetailsId","accountServiceId","maturityForm","revisionForm","latest_date","toISOString","substring","obj_test","saveAccountService","clickToggle1","clickToggle4","clickToggle2","clickToggle5","clickToggle3","clickToggle6","LoanAssessmentDetailsComponent","route","confirmService","elRef","renderer","urlService","submitted","arrayUserRecommendation","arrrayResidence","arrayDocumentType","arrayGender","arrayResidence","arrayAddressType","applicantDetails","isCifValid","selectedApplicant","listOfAccounts","isAccountOpenScreen","formData","applicantDetailsArray","customerDetails","validDate","showNewForm","toggleClick","addFunc","removedButton","isAllSameDigitVal","loanAssessmentForm","applicantId","snapshot","cifNumberPrimary","getListOfAccounts","buildCustomerForm","subscription","getaccParam","displayResponse","isObjectEmpty","previousUrl$","gender","addressType","pinCode","email","getCustomerInformationDetailsById","applicantForms","productAccountId","ownership","addCustFormGroup","Object","prototype","call","applicantData","primaryCustomer","applicant","updateLoanAssessmentDetails","reset","closeDetails","enable","onlySelf","account","disable","emitEvent","address","payLoadModel","dependentId","map","_id","Math","round","random","element","toggleChanges","setValidators","updateValueAndValidity","clearValidators","minLength","maxLength","invalid","payloadObj","control","addressObj","addressObjArray","count","number","loanTenureData","requestLoan","loanRecommendation","updateAssessmentDetails","num","numb","OnInput","goNext","progressBar","PostOfferAmendmentSummaryComponent","fetchPostOfferAmendmentDetails","CustomerInformationComponent","cifNumberForm","listOfCustByCif","customerIdProofs","isBirthCountry","productName","getOwnershipValue","getGenderValue","getResidenceDetails","getAdressType","getDocumentType","getMaritalStatus","dataExtracted","customerInfoForm","valueChanges","ownershipStatus","noOfapplicants","pipe","prev","clearTimeout","timer","doc","idProofs","idType","idNumber","placeOfBirth","birthCountry","maritalStatus","residenceStatus","nationality","countryOfResidence","occupationType","custIdProofs","onSelectionCountryOfresidence","onSelectionBirthCountry","onSelectionCitizenship","confirm","title","message","ok","cancel","deleteApplicant","text","isExistingCustomer","acc","fetchAccountIdByCustId","accountNo","citizenship","alertForCustomerDialog","excludedKeys","maritalStatusList","arrayOwnership","custIdProofsArray","createAndUpdateAccountants","custDependentModel","goToNext","birthCountryImage","countryCurrencyFlaglists","currencyId","currencyCode","citizenshipImage","countryResidenceImage","RepaymentScheduleComponent","scheduleStatus","localStorage","paymentDate","navigateByUrl","AccountApprovalDetailsSummaryComponent","accountApprovalStageSummary","OfferAssessmentComponent","offerAssessmentFormGroup","updateAssessment","ValuationOfAssetsComponent","borrowersMktValOfAsset","forcedSaleValue","faceValOfAsset","gettingValuationDetail","valuationId","saveValuationDetails","LoanEnrichmentComponent","loanInterestDetailsScreen","loanDisbursementDetailsScreen","loanRepaymentDetailsScreen","loanChargeDetailsScreen","loanAccountServicesScreen","isLoanApplicationEnrichementDone","UnderwritingStageComponent","loanAccId","creditRatingSummaryDialog","valuationAssetsSummaryDialog","legalOpinionSummaryDialog","LoanRepaymentComponentComponent","accountNoArr","getRepaymenttDetails","loanRepaymentFetchById","repaymentDetails","branchCode","customerAccount","bankName","firstRepaymentDate","loanRepaymentId","maturityDate","moraturioumPeriod","repaymentFrequency","repaymentMode","typeOfRepayment","scheduleLink","internalAccount","year1","month1","day1","yr","add","finalDate","fetchRescheduleData","latest_dateMaturity","loanRepaymentSave","LoanEntryStageComponent","isAdmissionDetailScreen","isFinancialDetailScreen","isMandateDetailScreen","isGuarantorDetailScreen","isCustomerInformationScreen","isCollateralDetailsScreen","isAnyScreen","isCustomerDetailScreen","maxHeight","loanDetailsSummaryDialog","assetDetailsSummaryDialog","vehicleDetailsSummaryDialog","loanAppEntryStageViewSummary","SupervisorApprovedDetailsComponent","appEntryService","isLinear","stepper","_getIndicatorType","NUMBER","getLoanEntryStageInfo","loanResp","fetchCustomersByLoanAccIdForViewSummary","custResp","customerInfoResp","customerInfo","Back","Done","AssessmentDetailsComponent","buildAssessmentForm","finalRate","assessmentDetails","OfferAcceptRejectStageComponent","isQualitativeScreen","isReportScreen","overdraftStatus","overDraftByStatus","getData","offerAssessmentSummaryDialog","offerIssueSummaryDialog","offerAcceptRejectSummaryDialog","SupervisorApprovalStageComponent","loanApprovedDetailsScreen","addDetails","LoanRepaymentSummaryComponent","goToClose","LoanChargeDetailsComponent","chargeInfo","chargeDetailsId","loanchargeSave","checked","LoanDisbursementSummaryComponent","CheckboxVar","mutipleDisbursementRequired","goToEdit","OfferIssueStageComponent","assetValutionSummaryDialog","legalopinionSummaryDialog","offeredAssessmentSummaryDialog","offerIssue1SummaryDialog","CreditRatingDetailsDialog","LoanInterestSummaryComponent","savingForm","saving","loan","is","iloan","fs","floan","setFlag","FinancialDetailsComponent","financialDetails","isMonthlyIncome","disableNext","loggedInUser","noOfApplicants","getEmploymentType","getEmploymentCategory","financialDetailsForm","financialDetails_array","addApplicant","getFinancialDetails","applicantTotalIncome","applicantTotalExpense","lastUpdatedon","employmentStartDate","employmentEndDate","assetTotal","liabilityTotal","employmentType","employmentCategory","employeeNumber","officeName","designation","bonus","business","interestIncome","pension","salary","monthlyExpenseRentals","monthlyExpenseTotal","cashGifts","assetOthers","liabilityOthers","monthlyExpenseOthers","monthlyIncomeOthers","monthlyIncomeRentals","monthlyIncomeTotal","household","medical","education","travel","vehicleMaintenance","propertyLoan","vehicleLoan","personalLoans","cardOutstandings","overdraft","savingDeposits","stocks","properties","automobiles","fixedDeposits","lands","validator","formGroup","validateInputGroups","formgroup","incomeErrMsg","ExpensesErrMsg","LiabilitiesErrMsg","assetErrMsg","createFinancialDetail","getFinancialDetailsByLoanAccId","financialDetailsList","payloadArray","upsertfinancialDetailsLoan","arrayEmploymentType","arrayEmploymentCategory","formArray","totalMonthlyIncome","totalIncome","totalAsset","totalMonthlyExpense","totalExpenses","totalLiability","totalMonthlyLiability","totalMonthlyAsset","LoanEnrichmentViewSummaryComponent","appEntrySummaryView","getLoanEnrichmentDetails","onloanCharge","in2","getLoanEnrichmentSummmary","intererstInfo","disbursementInfo","repaymentInfo","accServiceInfo","maturity","revision","holiday","cascadeVarMaturity","cascadeVarRevison","cascadeVarHoliday","ignoreHolidayVarMaturity","ignoreHolidayVarRevison","ignoreHolidayVarHoliday","f2","LoanAccountRoutes","path","component","children","redirectTo","pathMatch","breadcrumb","EsignPopComponent","signaturePadOptions","signupload","signaturePad","set","clear","toDataURL","imageurl","base64Data","signatureImg","getByAccountId","getAccountIdByCusId","dataURL","datam","atob","asArray","Uint8Array","len","charCodeAt","blob","Blob","uploadDocument","op","skipLocationChange","then","accountdetailsForStatusUpdate","updateAccountStatus","accData","updateResp","OfferAssessmentDetailsComponent","MandateDetailsComponent","panelOpenState","mandateId","mandateInfo","mandateInfo_array","isMandateDetailscreen","getMandateDetails","addMandate","getMandateDetailsByLoanAccId","mandateDetails","mandateDetailsForm","registered","collateralShare","repaymentShare","mandateDetailsId","createMandateDetail","applicantNameFetch","upsertMandateDetails","LoanAccountModule","provide","useValue","forChild","declarations","imports","providers","PostOfferAmendmentStageSummaryComponent","getViewSummary","getOfferAmendDetails","CollateralDetailsComponent","collateralId","collateralInfo","collateralInfo_array","getCollateralType","getRateValue","collateralDetailscreen","getCollateralDetails","collateralDetailsForm","collateralType","collateralCurrency","collateralValue","attributes","thirdPartyCollateral","noOfCollateral","totalCollateralValue","utilizedPreviously","secondaryChargeAllowed","coverAvailable","collateralDetailsId","createCollateralDetail","getCollateralByLoanAccId","collateralDetails","populateCollateral","j","collateralData","arrayCollateralType","arrayRateValue","upsertCollateralDetails","utilPrev","coverAvail","totalColVal","DigitalSignInNowOrLaterComponent","show1","alertForLoanFinishButton","subject","esignLink","signInLater","alertForLoanSignLater","openPopUp","onDone","LoanDisbursementDetailsComponent","getDisbursementDetails","disbursementDetails","lsLoanAmount","loanDisbursementId","numberOfDisbursement","firstDisbursementDate","disbursementMode","loanDisbursementSave","OfferIssueComponent","VehicleDetailsComponent","policyNumber","getVehicleDetails","vehicleForm","vehicleDetails","insuranceDetails","distanceRun","engineNumber","expectedSellingPrice","insuranceCompany","model","policyCommencementDate","policyRenewalDate","premiunAmount","premiunFrequency","maker","hypothecatedBranch","registrationCity","registrationNumber","registrationState","vehicleClass","chassisNumber","make","prAmmount","saveVehicleDetails","OfferAcceptRejectComponent","buildofferForm","offerForm","accept","saveOfferAcceptReject","LoanQualitativeScoreboardComponent","sbMultiSelectAnswer","scoreboardQuestionsArray","scoreCardMappingArray","numberOfApplicant","scoreCardId","isDataSaved","disableDoneBtn","anyErrorExist","sbSelectAnswer","isQualitative","no_of_applicants","isScoreCardScreen","getAllQualitative","loadData","Array","getScorecardQuestions","n","scorecardQuestion","scoreCardDetails","mapDataAns","p","scoreCardQuestionId","scorecardAnswer","scoreCardMappingId","getLoanQualitativeScorecardDetails","qualitativeScoreboardSummary","scoreCardMapping","scAns","answer","qtype","mapId","applcantId","scorevalue","dataUpdated","aplcntExists","m","dataOject","idx","answerIs","inputValue","validationName","eleid","setStyle","querySelector","isNaN","selectValue","saveData","scoreData","getAssessmentReportDetails","submitData","saveQualitativeScorecard","saveQualitativeScore","PostOfferIssueComponent","applicant_name","instalment_frequency","offer_issue_date","account_type","AccountServiceSummaryComponent","LoanSummaryDetailsComponent","loanSummaryForm","productCode","hostProductCode","hostProductDescription","interestRate","repaymentMethod","assessmentApprovalMethod","offerApprovedDate","approverID","stage","userAction"],"mappings":"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AAvBA,uB;AAAuB,6C;AAAA,kB;AAAA,gB;AAAA,kwC;AAAA;AAAA;ACnBpC;;AACI;;AAIE;;AACE;;AACA;;AACF;;AACA;;AACE;;AAAwB;;AAAG;;AAA0B;;AAAI;;AACzD;;AACI;;AACJ;;AACF;;AACF;;AACA;;AAsBF;;AACA;;AACE;;AAGE;;AACE;;AACE;;AAAkC;;AAAe;;AAEnD;;AACA;;AACE;;AAKE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AAcF;;AAEA;;AACA;;AACE;;AAUA;;AAWF;;AAEF;;AAEF;;AACA;;AAEE;;AACE;;AACE;;AAAkC;;AAAsD;;AAE1F;;AACA;;AACE;;AAKE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAMF;;AACF;;AACF;;AACA;;AACA;;AACE;;AAOA;;AAoBA;;AAqBF;;AAqBA;;AAEF;;AAEF;;AAEA;;AACE;;AACE;;AACE;;AAAkC;;AAAuB;;AAI3D;;AACA;;AACE;;AAKE;;AACE;;AAAsB;;AAA2D;;AACnF;;AACA;;AACE;;AAIF;;AACF;;AAeF;;AAEA;;AACA;;AACE;;AASF;;AAWA;;AACF;;AACF;;AACA;;AAKA;;AACE;;AACE;;AACE;;AAAkC;;AAAkB;;AAEtD;;AACA;;AACE;;AAKE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAIF;;AACF;;AAeF;;AAEA;;AACA;;AACE;;AASA;;AAUF;;AACF;;AACF;;AAGA;;AACE;;AACE;;AACE;;AAAkC;;AAAoB;;AAExD;;AACA;;AACE;;AAKE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AAeF;;AAEA;;AACA;;AACE;;AASE;;AAUJ;;AACF;;AACF;;AAIC;;AACG;;AACE;;AACE;;AAAkC;;AAAqB;;AAEzD;;AACA;;AACE;;AAKE;;AACE;;AACI;;AACJ;;AACF;;AACA;;AACE;;AACF;;AACF;;AAeF;;AAEA;;AACA;;AACE;;AAQE;;AAUJ;;AACF;;AACF;;AAID;;AACG;;AACE;;AACE;;AAAkC;;AAAoB;;AAExD;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","file":"views-loan-account-loan-account-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AccountService } from \"../../account.service\";\r\n\r\n\r\n@Component({\r\n  selector: \"app-loan-intrest-details\",\r\n  templateUrl: \"./loan-intrest-details.component.html\",\r\n  styleUrls: [\"./loan-intrest-details.component.scss\"],\r\n})\r\nexport class LoanIntrestDetailsComponent implements OnInit {\r\n  interestForm: FormGroup;\r\n  accountId: any;\r\n  intrestFlag: Boolean;\r\n  interestResp: any;\r\n  showEditOption: boolean = false;\r\n  resp: {\r\n    intrestType: string;\r\n    intrestRateApplicable: string;\r\n    marginIn: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  accountType: String = \"Home Loan\";\r\n  loanaccountID: any;\r\n  loanInfo: any;\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private loader: AppLoaderService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem(\"accountId\");\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    // this.resp=[{\"intrestType\": \"Fixed Rate\",\r\n    // \"interestRateApplicable\":\"5%\",\"marginIn\":60,\"effectiveRate\":10},\r\n    // {\"intrestType\": \"Penalty Rate\",\r\n    // \"interestRateApplicable\":\"5%\",\"marginIn\":60,\"effectiveRate\":10},\r\n    // {\"intrestType\": \"Tax Rate\",\r\n    // \"interestRateApplicable\":\"5%\",\"marginIn\":60,\"effectiveRate\":10}]\r\n\r\n    let isLoanInterestDetails = this.ls.getItem('LOAN_INTERST_DETAIL_DONE');\r\n    setTimeout(() => {\r\n      if (this.loanaccountID != null && isLoanInterestDetails) {\r\n        this.showEditOption = true;\r\n        \r\n        this.getInterestDetails();\r\n      } \r\n      else {\r\n        console.log(\"else\");\r\n        this.showEditOption = false;\r\n        this.api\r\n        .getFlexcubeDetails(\"intrestDetails\", this.accountType)\r\n        .subscribe((response) => {\r\n          this.onChangeInterest(response.length);\r\n          this.in.patchValue(response);\r\n        });\r\n      }\r\n    }, 10);\r\n  \r\n\r\n    this.interestForm = this.formBuilder.group({\r\n      interestInfo: new FormArray([]),\r\n    });\r\n  \r\n  }\r\n  assign(accountId) {\r\n    // this.accountId = accountId;\r\n  }\r\n\r\n  getInterestDetails(){\r\n    this.loader.open();\r\n    this.api.loanInterestFetchById(this.loanaccountID).subscribe((resp) => {\r\n      this.loader.close();\r\n      console.log(\"resp from backend \", this.resp);\r\n      this.resp = resp;\r\n      this.onChangeInterest(this.resp.length);\r\n      this.in.patchValue(this.resp);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n\r\n    \r\n  }\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            rateCode:[\"\",Validators.required],\r\n            intrestType: [\"\", Validators.required],\r\n            intrestRateApplicable: [\"\", Validators.required],\r\n            marginIn: [\r\n              \"\",\r\n              [Validators.required, Validators.max(100), Validators.min(0)],\r\n            ],\r\n            effectiveRate: [\r\n              \"\",\r\n              [Validators.required, Validators.max(100), Validators.min(0)],\r\n            ],\r\n            loanAccountId: [this.loanaccountID],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n            loanInterestId: [\"\"],\r\n            id: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interestInfo as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n \r\n    this.router.navigate([\r\n      `/loan/account/application-enrichment`,\r\n    ]);\r\n  }\r\n  \r\n  appendPercentage(event) {\r\n    // console.log(event.key)\r\n    console.log(event.target.value);\r\n\r\n    if (!event.target.value.length) return;\r\n\r\n    if (event.target.value.length === 1) {\r\n      event.target.value = `${event.target.value}%`;\r\n    }\r\n    if (event.target.value.length > 1) {\r\n      event.target.value = `${event.target.value.slice(0, -1)}%`;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.api.loanintrestDetailsSave(this.interestForm.value).subscribe(\r\n      (resp) => {\r\n        this.snack.open(\"Interest Details Saved!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.next();\r\n        console.log(\"backend response from intrest saving\", resp);\r\n      },\r\n      (err) => {\r\n        this.snack.open(\r\n          \"Not able to connect to server!\",\r\n          \"INTERNAL SERVER ERROR\",\r\n          {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          }\r\n        );\r\n      }\r\n    );\r\n    \r\n  }\r\n  \r\n  next() {\r\n    this.ls.setItem('LOAN_INTERST_DETAIL_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/loan/account/application-enrichment/loan-disbursement`]);\r\n  }\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"Interest detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n}","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/loanInterest.svg\" alt=\"\" class=\"w-80\" />\r\n    </div>\r\n\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title\"><h2>Interest Details Summary</h2></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\" class=\"m-333\">\r\n\r\n    <div class=\"mt-24\"></div>\r\n    <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\" class=\"chargeForm\">\r\n      <!-- <div class=\"spanDivider1\">\r\n        <span class=\"span\">Interest Details\r\n        </span>\r\n        <mat-divider class=\"divider\"></mat-divider>\r\n      </div> -->\r\n      <div class=\"divider-line\" id=\"mat-line\">\r\n        <span class=\"mat-title\">Interest Details</span>\r\n        <mat-divider class=\"mat-line-position\"></mat-divider>\r\n      </div>\r\n      <table class=\"cart-table\">\r\n        <thead class=\"tr\">\r\n          <tr class=\"theadClass\">\r\n            <th>Rate Code</th>\r\n            <th>Interest Type</th>\r\n            <th>Interest Rate Applicable</th>\r\n            <th>Margin in %</th>\r\n            <th>Effective Rate %</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let interestInfo of in.controls; let i = index\" class=\"tableRow\">\r\n            <ng-container [formGroup]=\"interestInfo\">\r\n              <td>\r\n                <!-- <mat-card  class=\"matCardBox1\">\r\n                  <mat-select placeholder=\"Rate\" >\r\n                    <mat-option value=\"\">FR</mat-option>\r\n                    <mat-option value=\"mode1\">PR</mat-option>\r\n                    <mat-option value=\"mode12\">TR</mat-option>\r\n                  </mat-select>\r\n\r\n                </mat-card> -->\r\n                <mat-card class=\"matCardBox\">\r\n                  <input class=\"input\" matInput formControlName=\"rateCode\" name=\"rateCode\"\r\n                    placeholder=\"Rate Code\" readonly/>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <!-- <mat-label>Interest Type</mat-label> -->\r\n                <mat-card class=\"matCardBox\">\r\n                  <input class=\"input\" matInput formControlName=\"intrestType\" name=\"intrestType\"\r\n                    placeholder=\"Interest Type\" readonly/>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox\">\r\n                  <div class=\"field\">\r\n                  <input class=\"input\" matInput formControlName=\"intrestRateApplicable\" name=\"intrestRateApplicable\"\r\n                    placeholder=\"Interest Rate Applicable\" readonly/>\r\n                  </div>\r\n                    <span>&#37;</span>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox\">\r\n                  <div class=\"field\">\r\n                  <input class=\"input\" matInput formControlName=\"marginIn\" name=\"marginIn\" type=\"number\"\r\n                    placeholder=\"Margin\" readonly/>\r\n                  </div>\r\n                    <span>&#37;</span>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox\">\r\n                  <input class=\"input\" matInput formControlName=\"effectiveRate\" name=\"effectiveRate\"\r\n                    placeholder=\"Effective Rate\" value=\"\" readonly/>\r\n                </mat-card>\r\n              </td>\r\n            </ng-container>\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <a mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">Back</a>\r\n    <span fxFlex></span>\r\n    <button mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"!interestForm\" class=\"Nextbtn\"\r\n      (click)=\"onSubmit()\">Next</button>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-supervisor-assessment-details',\r\n  templateUrl: './supervisor-assessment-details.component.html',\r\n  styleUrls: ['./supervisor-assessment-details.component.scss']\r\n})\r\nexport class SupervisorAssessmentDetailsComponent implements OnInit {\r\n  assessmentForm:FormGroup;\r\n  constructor(private fb:FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildformGroup();\r\n  }\r\n\r\n  buildformGroup(){\r\n    this.assessmentForm = this.fb.group({\r\n      requestedLoanAmount:[''],\r\n      rateofInterest:[''],\r\n      userRecommendation:[''],\r\n      approvedLoanAmount:[''],\r\n      loanTenure:[''],\r\n      systemRecommendation:[''],\r\n      loanAmountRecommended:[''],\r\n      finalLoanTenure:[''],\r\n    })\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-90\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Assesment Details</b></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">Assesment Details</div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form *ngIf=\"assessmentForm\" [formGroup]=\"assessmentForm\">\r\n\r\n                 <div fxLayout=\"row\" class=\"pt-16\" fxLayoutGap=\"30px\" fxLayoutAlign=\"start center\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                            \r\n                                <mat-hint class=\"pl-3\">Requested Loan Amount</mat-hint>\r\n                                <mat-card type=\"input\">\r\n                                <input\r\n                                class=\"alignment\"\r\n                                  matInput\r\n                                  name=\"requestedLoanAmount\"\r\n                                  placeholder=\"Requested Loan Amount\"\r\n                                />\r\n                              </mat-card>\r\n                          </div>\r\n    \r\n            \r\n                          <div class=\"pb-1\">\r\n                                <mat-hint class=\"pl-3\"> Rate of Interest</mat-hint>\r\n                                <mat-card type=\"input\">\r\n                                <input\r\n                                class=\"alignment\"\r\n                                  matInput\r\n                                  name=\"rateofInterest\"\r\n                                  placeholder=\"Rate of Interest\"\r\n                                />\r\n                              </mat-card>\r\n                          </div>\r\n    \r\n                          <div class=\"pb-1\">\r\n                                <mat-hint class=\"pl-3\">User Recommendation</mat-hint>\r\n                                <mat-card type=\"input\">\r\n                                <input\r\n                                class=\"alignment\"\r\n                                  matInput\r\n                                  name=\"userRecommendation\"\r\n                                  placeholder=\"User Recommendation\"\r\n                                />\r\n                              </mat-card>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                          \r\n                                <mat-hint class=\"pl-3\">Approved Loan Amount</mat-hint>\r\n                                <mat-card type=\"input\">\r\n                                <input\r\n                                class=\"alignment\"\r\n                                  matInput\r\n                                  name=\"approvedLoanAmount\"\r\n                                  placeholder=\"Approved Loan Amount\"\r\n                                />\r\n                              </mat-card>\r\n                          </div>\r\n                          <div class=\"pb-1\">\r\n                                <mat-hint class=\"pl-3\">Final Rate</mat-hint>\r\n                                <mat-card type=\"input\">\r\n                                <input\r\n                                class=\"alignment\"\r\n                                  matInput\r\n                                  name=\"approvedLoanAmount\"\r\n                                  placeholder=\"Approved Loan Amount\"\r\n                                />\r\n                              </mat-card>\r\n                          </div>\r\n\r\n                       \r\n    \r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                    <mat-hint class=\"pl-3\">Loan Tenure</mat-hint>\r\n                                    <mat-card type=\"input\">\r\n                                    <input\r\n                                    class=\"alignment\"\r\n                                      matInput\r\n                                      name=\"loanTenure\"\r\n                                      placeholder=\"Loan Tenure\"\r\n                                    />\r\n                                  </mat-card>\r\n                              </div>\r\n      \r\n              \r\n                            <div class=\"pb-1\">\r\n                                <mat-hint class=\"pl-3\">System Recommendation</mat-hint>\r\n                                <mat-card type=\"input\">\r\n                                <input\r\n                                class=\"alignment\"\r\n                                  matInput\r\n                                  name=\"systemRecommendation\"\r\n                                  placeholder=\"System Recommendation\"\r\n                                />\r\n                              </mat-card>\r\n                            </div>\r\n      \r\n                            <div class=\"pb-1\">\r\n                                    <mat-hint class=\"pl-3\">Loan Amount Recommended</mat-hint>\r\n                                    <mat-card type=\"input\">\r\n                                    <input\r\n                                    class=\"alignment\"\r\n                                      matInput\r\n                                      name=\"loanAmountRecommended\"\r\n                                      placeholder=\"Loan Amount Recommended\"\r\n                                    />\r\n                                  </mat-card>\r\n                            </div>\r\n\r\n                            <div class=\"pb-1\">\r\n                                    <mat-hint>Final Loan Tenure</mat-hint>\r\n                                    <mat-card type=\"input\">\r\n                                    <input\r\n                                    class=\"alignment\"\r\n                                      matInput\r\n                                      name=\"finalLoanTenure\"\r\n                                      placeholder=\"Final Loan Tenure\"\r\n                                    />\r\n                                  </mat-card> \r\n                            </div>\r\n\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field style=\"visibility: hidden;\" appearance=\"outline\" class=\"full-width\">                                   \r\n                                    <input\r\n                                    class=\"alignment\"\r\n                                      matInput\r\n                                    />\r\n                                  </mat-form-field> \r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"space-between center\"\r\n                fxLayoutGap=\"16px\"\r\n                class=\"mt-32\"\r\n              >\r\n                <button mat-button rounded color=\"primary\">\r\n                  Back\r\n                </button>\r\n                <button\r\n                  mat-raised-button\r\n                  color=\"primary\"\r\n                >\r\n                Next\r\n                </button>\r\n              </div>\r\n         \r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n  \r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/home/account.service';\r\nimport * as moment from 'moment';\r\nimport { date } from 'ngx-custom-validators/src/app/date/validator';\r\n\r\n@Component({\r\n  selector: 'app-legal-opinion',\r\n  templateUrl: './legal-opinion.component.html',\r\n  styleUrls: ['./legal-opinion.component.scss']\r\n})\r\nexport class UnderWrittingLegalOpinionComponent implements OnInit {\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  accountForm: FormGroup;\r\n  isCreditRatingDetails: any;\r\n  isValuationofAsset: any;\r\n  isLegalOpinion: any;\r\n  loanaccountID: any;\r\n  showEditOption: boolean = false;\r\n  isChecked = true;\r\n  disabled = true;\r\n  disabledToggle = true;\r\n  loanInfo: any;\r\n  constructor(private formBuilder: FormBuilder, \r\n    private loader: AppLoaderService,private snack: MatSnackBar,private api: ApiService,\r\n    private ls: LocalStoreService, private router: Router,private accountService:AccountService ) {\r\n      this.accountForm= this.formBuilder.group({\r\n        assetAreaSize: ['',[Validators.required]],\r\n        description:['',[Validators.required,Validators.pattern(\".*[a-zA-Z].*\")]],\r\n        lawyerName:['',[Validators.required,Validators.pattern(\".*[a-zA-Z].*\")]],\r\n        mktValOfAsset: ['',[Validators.required]],\r\n        opinion:['',[Validators.required]],\r\n        isDecisionFavorable:[''],\r\n        opinionDate:['',[Validators.required]],\r\n        valuationDate:['',[Validators.required]],\r\n        assetAreaInUnits:['',[Validators.required]],\r\n      })\r\n     }\r\n\r\n  ngOnInit(): void {\r\n       \r\n    //this.isLegalOpinion = this.ls.getItem('LEGAL_OPINION_DONE');\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    console.log(\"this.productaccountID1\",this.loanaccountID);\r\n    let isVehicleDetailsScreen: boolean = JSON.parse(this.ls.getItem('LEGAL_OPINION_DONE'));\r\n    //if (this.loanAccountId != null && isVehicleDetailsScreen) {\r\n      setTimeout(() => {\r\n        if (this.loanaccountID!= null && isVehicleDetailsScreen) {\r\n          this.showEditOption = true; \r\n          this.gettingLegalOpinionDetail();\r\n        } \r\n        else {\r\n          console.log(\"else\");\r\n          this.showEditOption = false;\r\n          this.buildAccountForm();\r\n        }\r\n      }, 10);\r\n    this.valueData();\r\n    //this.buildAccountForm();\r\n/*if(this.isLegalOpinion==false){\r\n  this.buildAccountForm();\r\n  }\r\nelse{\r\n  this.gettingLegalOpinionDetail();\r\n}*/\r\n   \r\n  \r\n  }\r\n  gettingLegalOpinionDetail() {\r\n    this.loader.open();\r\n    this.api.gettingLegalOpinionDetails(this.loanaccountID)\r\n      .subscribe((resp: any) => {\r\n        if(resp.opinion==\"Favourable\"){\r\n          this.isChecked=true;\r\n        }\r\n        else{\r\n          this.isChecked=false;\r\n        }\r\n        this.loader.close();\r\n       console.log(resp);\r\n       \r\n      this.buildAccountForm(resp,true);;\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n      \r\n    });\r\n   \r\n  }\r\n  toggle(event){\r\n    // let value = event.target.value;\r\n     console.log(\"value\",event);\r\n     if(event==\"Not Favourable\"){\r\n       this.disabled = false;\r\n       this.isChecked = false;\r\n       this.disabledToggle = false;\r\n \r\n     }\r\n     else if(event==\"Favourable\"){\r\n       this.disabled = true;\r\n       this.isChecked = true;\r\n       this.disabledToggle = true;\r\n     }\r\n     else{\r\n       this.isChecked = false;\r\n     }\r\n\r\n     \r\n \r\n   }\r\n  buildAccountForm(data?,Response?:boolean) {\r\n    data.opinionDate = data ? moment(data.opinionDate).format() : '';\r\n    data.valuationDate = data ? moment(data.valuationDate).format() : '';\r\n    console.log(data);\r\n    this.accountForm = this.formBuilder.group({\r\n      assetAreaInUnits: [data ? data.assetAreaInUnits:''],\r\n      assetAreaSize:[data ? data.assetAreaSize:0],\r\n      description:[data ? data.description:''],\r\n      isDecisionFavorable:[this.isChecked],\r\n      lawyerName:[data ? data.lawyerName:''],\r\n      //legalOpinionId:[data ? data.legalOpinionId:0,Validators.required],\r\n      loanAccountId:[this.loanaccountID],\r\n      mktValOfAsset:[data ? data.mktValOfAsset:''],\r\n      opinion:[data ? data.opinion:''],\r\n      opinionDate:[data ? data.opinionDate:''],\r\n      valuationDate:[data ? data.valuationDate:''],\r\n    });\r\n    console.log(\"this.accountForm\",this.accountForm);\r\n  \r\n  }\r\n // OnSubmit(val){\r\n  OnSubmit(){\r\n    //console.log(val,\"Values\")\r\n    // val.valuationDate= moment(val.opinionDate).format('YYYY-MMM-DD HH:mm:ss');\r\n   //val.opinionDate= moment(val.opinionDate).format('YYYY-MMM-DD HH:mm:ss');\r\n  // val.valuationDate= moment(val.valuationDate).format('YYYY-MMM-DD HH:mm:ss');\r\n    // this.ls.setItem('CREDIT_RATING_DONE', true);\r\n    let now = new Date();\r\n    now=this.accountForm.value.opinionDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    let now1 = new Date();\r\n    now1=this.accountForm.value.valuationDate;\r\n    var dateStringWithTime1 = moment(now1).format('YYYY-MMM-DD HH:MM:SS');\r\n    var pk=this.accountForm.value.assetAreaSize;\r\n    pk= parseInt(pk);\r\n    console.log(\"pk\",pk);\r\n    let payload={\r\n      assetAreaInUnits:this.accountForm.value.assetAreaInUnits,\r\n      assetAreaSize:pk,\r\n      description:this.accountForm.value.description,\r\n      isDecisionFavorable:this.accountForm.value.isDecisionFavorable,\r\n      lawyerName:this.accountForm.value.lawyerName,\r\n      loanAccountId:this.loanaccountID,\r\n      mktValOfAsset:this.accountForm.value.mktValOfAsset,\r\n      opinion:this.accountForm.value.opinion,\r\n      opinionDate:dateStringWithTime,\r\n      valuationDate:dateStringWithTime1\r\n\r\n    }\r\n    this.api.saveLegalOpinion(payload).subscribe((data: any) => {\r\n      console.log(data);\r\n      if (data === 200 || data !== null) {\r\n        this.snack.open(' Legal Opinion Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.ls.setItem('LEGAL_OPINION_DONE', true);\r\n        this.isCreditRatingDetails = this.ls.getItem('CREDIT_RATING_DONE');\r\n        this.isValuationofAsset = this.ls.getItem('VALUATION_OF_ASSET_DONE');\r\n        this.isLegalOpinion = this.ls.getItem('LEGAL_OPINION_DONE');\r\n\r\n        if(this.isCreditRatingDetails == true && this.isValuationofAsset== true && this.isLegalOpinion ==true){\r\n           this.ls.setItem('underWritingStage', true);\r\n           this.next();\r\n        }\r\n      }\r\n      else if (data === 500) {\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n\r\n   this.router.navigate([`/loan/account/assessment/list`]);\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  _keyPress1(e){\r\n    let val = e.target.value\r\n    if ((e.which === 32 && !val.length) || (e.keyCode >= 48 && e.keyCode <= 57) ) {\r\n    e.preventDefault();\r\n}\r\n  }\r\nnext(){\r\n  this.accountService.refresh.next();\r\n  this.router.navigate([`/loan/account/assessment/list`]);\r\n}\r\ngoBack(){\r\n   this.router.navigate([\r\n      `/loan/account/list/underwritingStage/valuationofassets`,\r\n    ]);\r\n}\r\nvalueData(){ \r\n    this.api.gettingValuationDetails(this.loanaccountID).subscribe(res=>{\r\n      console.log(res);\r\n      \r\n      this.accountForm.get('mktValOfAsset').setValue(res.mktValOfAsset);\r\n    }     \r\n      );  \r\n}\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/legal_opinion_screen.svg\" alt=\"\" class=\"w-90\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><h2>Legal Opinion</h2></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0\">\r\n        <!-- <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">Legal Opinion</div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title> -->        \r\n        <mat-card-title class=\"alignChange\">\r\n          <fieldset>\r\n          <legend visible=\"true\">Legal Opinion</legend>\r\n          </fieldset>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form  [formGroup]=\"accountForm\">\r\n            <!-- <mat-spinner class=\"spinner\" [diameter]=\"80\" *ngIf=\"showSpinn\"></mat-spinner> -->\r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n\r\n\r\n                <div class=\"flex-grow-2\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                    <!--<mat-hint>Legal Opinion*</mat-hint>-->\r\n                    <mat-label>Opinion By*</mat-label>\r\n                    <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                      <mat-select name=\"opinion\" formControlName=\"opinion\" disableOptionCentering\r\n                      (selectionChange)=\"toggle($event.value)\" placeholder=\"Opinion By\">\r\n                          <!-- <mat-option value=\"\" >Select</mat-option> -->\r\n                        <mat-option value=\"Favourable\">Favourable</mat-option>\r\n                        <mat-option value=\"Not Favourable\">Not Favourable</mat-option>\r\n                      </mat-select>\r\n                    <!-- </mat-card> -->\r\n                   <mat-error *ngIf=\"!accountForm.get('opinion').valid  && accountForm.get('opinion').touched\">\r\n                      Select Opinion By\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                  </div>\r\n                  \r\n                \r\n      \r\n                <div class=\"flex-grow-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>Market Value of Asset*</mat-label>\r\n                    <!-- <mat-card class=\"inputMatName\"> -->\r\n      \r\n                      <input matInput formControlName=\"mktValOfAsset\" class=\"alignment\" (keypress)=_keyPress($event) placeholder=\"Market Value\"\r\n                        type=\"text\" name=\"mktValOfAsset\" />\r\n                        \r\n                    <!-- </mat-card> -->\r\n                    <mat-error *ngIf=\"!accountForm.get('mktValOfAsset').valid  && accountForm.get('mktValOfAsset').touched\">\r\n                        Market Value of Asset is Required!</mat-error>\r\n                  </mat-form-field>\r\n                  </div>\r\n               \r\n   <div class=\"flex-grow-1\">\r\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n    <mat-label>Opinion Date*</mat-label>\r\n    <!-- <mat-card class=\"inputMatName\" style=\"height:48px;\"> -->\r\n        <input matInput name=\"opinionDate\" class=\"alignment\" formControlName=\"opinionDate\" placeholder=\"DD/MM/YYYY\"\r\n        [matDatepicker]=\"appDatepicker1\" />\r\n        <div fxFlex=\"8%\" id=\"toggle\" class=\"datechange\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n      <mat-datepicker #appDatepicker1></mat-datepicker>\r\n      </div>\r\n    <!-- </mat-card> -->\r\n    <mat-error *ngIf=\"!accountForm.get('opinionDate').valid  && accountForm.get('opinionDate').touched\">\r\n        Opinion Date is Required!\r\n    </mat-error>\r\n    </mat-form-field>\r\n        \r\n  </div>\r\n               \r\n               \r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                <mat-label>Description*</mat-label>\r\n                <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                  <!--<mat-select name=\"description\" formControlName=\"description\" disableOptionCentering>\r\n                    <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option value=\"Test\">Description</mat-option>\r\n                  </mat-select>-->\r\n                  <input matInput name=\"description\" class=\"alignment\" formControlName=\"description\" placeholder=\"Description\" (keypress)=\"_keyPress1($event)\"/>\r\n                <!-- </mat-card> -->\r\n                <mat-error *ngIf=\"accountForm.get('description').hasError('required') && accountForm.get('description').touched\">\r\n                     Description is Required ! </mat-error>\r\n                  <mat-error *ngIf=\"accountForm.get('description').hasError('pattern') && accountForm.get('description').touched\">\r\n                    Please Enter Proper Description</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n  \r\n         </div>\r\n  \r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                <div> \r\n\r\n                    <!-- <mat-hint>Asset Area*</mat-hint> -->\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n                      <div class=\"flex-grow-1\" fxFlex=\"20%\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Asset Area*</mat-label>\r\n                        <!-- <mat-card class=\"sqInput1\"> -->\r\n                          <mat-select  formControlName=\"assetAreaInUnits\" disableOptionCentering placeholder=\"Select\" >\r\n                            <mat-option>Select</mat-option>\r\n                            <mat-option value=\"Sq\">Sq</mat-option>\r\n                            <mat-option value=\"Acr\">Acr</mat-option>\r\n                            <mat-option value=\"Cent\">Cent</mat-option>\r\n                          </mat-select>\r\n                        <!-- </mat-card> -->\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"flex-grow-1\" fxFlex=\"75%\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Asset Area</mat-label>\r\n                        <!-- <mat-card class=\"sqInput2\"> -->\r\n                              <input matInput formControlName=\"assetAreaSize\" name=\"assetAreaSize\" placeholder=\"Asset Area\"\r\n                              (keypress)=_keyPress($event) name=\"remarks\" class=\"alignment\"/>                              \r\n                            <!-- </mat-card> -->                           \r\n                        </mat-form-field>\r\n                      </div>\r\n                      <mat-error *ngIf=\"(!accountForm.get('assetAreaInUnits').valid && accountForm.get('assetAreaInUnits').touched)||(!accountForm.get('assetAreaSize').valid && accountForm.get('assetAreaSize').touched)\">\r\n                        Asset Area is Required!\r\n                      </mat-error>\r\n        \r\n                     \r\n                          \r\n                            </div>\r\n                </div>\r\n              \r\n\r\n                <div class=\"flex-grow-2\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                    <mat-label>Lawyer Name*</mat-label>\r\n                    <!-- <mat-card class=\"widthCard inputMatName1\"> -->\r\n                      <!--<mat-select name=\"lawyerName\" disableOptionCentering formControlName=\"lawyerName\">\r\n                        <mat-option value=\"\">Select</mat-option>\r\n                        <mat-option value=\"Jo smith\">Lawyer Name</mat-option>\r\n                      </mat-select>-->\r\n                      <input matInput name=\"lawyerName\" class=\"alignment\" formControlName=\"lawyerName\" placeholder=\"Lawyer Name\" (keypress)=\"_keyPress1($event)\"/>\r\n                    <!-- </mat-card> -->\r\n                    <mat-error *ngIf=\"accountForm.get('lawyerName').hasError('required') && accountForm.get('lawyerName').touched\">\r\n                        Lawyer Name is Required!</mat-error>\r\n                        <mat-error *ngIf=\"accountForm.get('lawyerName').hasError('pattern') && accountForm.get('lawyerName').touched\">\r\n                          Please Enter Valid Lawyer Name</mat-error>\r\n                  </mat-form-field>\r\n                  </div>\r\n                \r\n             \r\n              <div class=\"flex-grow-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Valuation Date*</mat-label>\r\n                <!-- <mat-card class=\"inputMatName1\" style=\"height:48px;\"> -->\r\n                    <input matInput name=\"valuationDate\" class=\"alignment\" formControlName=\"valuationDate\" placeholder=\"DD/MM/YYYY\"\r\n                    [matDatepicker]=\"appDatepicker\" />\r\n                    <div fxFlex=\"8%\" id=\"toggle\" class=\"datechange\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #appDatepicker></mat-datepicker>\r\n                    </div>\r\n                <!-- </mat-card> -->\r\n                <mat-error *ngIf=\"!accountForm.get('valuationDate').valid  && accountForm.get('valuationDate').touched\">\r\n                    Valuation Date is Required!\r\n                </mat-error>   \r\n                </mat-form-field>   \r\n              </div> \r\n          \r\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                    <div class=\"pb-1\">\r\n                        Decision Favorable ?&nbsp;&nbsp;&nbsp;\r\n                      <mat-slide-toggle\r\n                      formControlName=\"isDecisionFavorable\" [(ngModel)]=\"disabled\"></mat-slide-toggle>\r\n                    </div><br>\r\n                  </div>\r\n                </div>\r\n               \r\n  \r\n  \r\n              </div>\r\n            </div> \r\n            \r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n  \r\n        <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n          Back\r\n        </button>        \r\n          <button mat-raised-button color=\"primary\" class=\"Nextbtn\"  (click)=\"OnSubmit()\"  [disabled]=\"!accountForm.valid\">\r\n            Next\r\n        </button>        \r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-account-creation-stage',\r\n  templateUrl: './account-creation-stage.component.html',\r\n  styleUrls: ['./account-creation-stage.component.scss']\r\n})\r\nexport class AccountCreationStageComponent implements OnInit {\r\n   // PArent \r\n isAccountCreationStageDone: boolean = false;\r\n // SUB TREES\r\n isAccountCreateDetails: boolean = false;\r\n isOfferAcceptReject: boolean = false;\r\n\r\n  constructor(private router: Router,private ls: LocalStoreService,private dialogService : DialogService,public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    // Parent 1\r\n    this.isAccountCreationStageDone = this.ls.getItem('accountCreationStage');\r\n    // Parent 1 childs nav\r\nthis.isOfferAcceptReject = this.ls.getItem('OFFER_ACCEPT_REJECT_DONE');\r\nthis.isAccountCreateDetails = this.ls.getItem('ACCOUNT_CREATE_DETAILS_DONE');\r\n  }\r\n  addDetails(){\r\n    this.router.navigate([`/loan/account/account-creation-stage/offer-accept-reject`]);\r\n\r\n  }\r\n  addDetails1(){\r\n    this.router.navigate([`/loan/account/account-creation-stage/account-create-details`]);\r\n    \r\n  }\r\n  goToOfferAcceptRejectSummary(){\r\n    this.dialogService.OfferAcceptRejectSummaryDialog();\r\n  }\r\n\r\n  goToAccountCreateSummary(){\r\n    this.dialogService.AccountCreateSummaryDialog();\r\n  }\r\n  \r\n\r\n\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n        <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n      </div> -->\r\n      <div class=\"profile-pic text-center\">\r\n        <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Create Retail Loan Account</b></div>\r\n        <div class=\"text-muted\">\r\n            Open a Retail Loan Account with XYZ Bank in a better way. \r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\"  *ngIf=\"isAccountCreateDetails\" class=\"mt-8\">\r\n      <mat-card\r\n        [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n      >\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div fxFlex=\"10\">\r\n            <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n          </div>\r\n          <div fxFlex=\"30\">\r\n            <h6>Account Creation Stage Completed</h6>\r\n          </div>\r\n          <span fxFlex></span>\r\n          <button\r\n            mat-button\r\n            [routerLink]=\"['/loan/account/account-creation-stage/account-creation-summary']\"\r\n            color=\"primary\"\r\n          >\r\n            View Summary\r\n          </button>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <!--<div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n      <!-- Card 1 start\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>1. Offer Accept/Reject Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> \r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                Offer Accept or Reject Details are provided.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/offer.png'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress\r\n          <div class=\"mb-1\" *ngIf=\"isOfferAcceptReject\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> \r\n          </div>\r\n          <!--end::Progress\r\n        </mat-card-content>\r\n        <!--begin:: Card body\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n            <a\r\n              \r\n              mat-button\r\n             (click)=\"addDetails()\"\r\n              color=\"primary\"\r\n            >\r\n              Add Details <mat-icon>chevron_right</mat-icon>\r\n            </a>\r\n            <a\r\n           \r\n              mat-button\r\n              (click)=\" goToOfferAcceptRejectSummary()\"\r\n              color=\"primary\"\r\n            >\r\n              View Details <mat-icon>chevron_right</mat-icon>\r\n            </a>\r\n          </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end \r\n    </div>-->\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <!--<mat-card-title>2. Account Create Details</mat-card-title>-->\r\n          <mat-card-title>1. Account Create Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\"  class=\"notActive\">\r\n              <p class=\"text-align\">\r\n                Account Create Details are displayed .\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/account details.png'\r\n                \"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\"  *ngIf=\"isAccountCreateDetails\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n\r\n          <ng-container  *ngIf=\"isAccountCreateDetails; else showAccount\">\r\n            <button\r\n            mat-button\r\n            (click)=\" goToAccountCreateSummary()\"\r\n            color=\"primary\"\r\n            \r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n\r\n        <ng-template #showAccount>\r\n           <button \r\n             mat-button\r\n            (click)=\"addDetails1()\"\r\n              color=\"primary\"\r\n            >\r\n              Add Details<mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n          </ng-template>\r\n           \r\n          </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-digital-signing',\r\n  templateUrl: './digital-signing.component.html',\r\n  styleUrls: ['./digital-signing.component.scss']\r\n})\r\nexport class DigitalSigningComponent implements OnInit {\r\n\r\n  informations = [\r\n    {\r\n      'id':1,\r\n      'title': '1. Digital Signing',\r\n      'content':\"Customer can either sign now or sign later\",\r\n      'percentage':70,\r\n      'status':'Pending',\r\n      'state': 'application/digital-sign/options',\r\n      'avatar':\"assets/images/esign.jpg\"\r\n\r\n    }\r\n  ];\r\n\r\n  accountId:any;\r\n  isEsignScreen:boolean = false;\r\n  accountService: any;\r\n  constructor(private router:Router,private ls: LocalStoreService,private cdr:ChangeDetectorRef) { }\r\n\r\n  ngOnInit(){\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.isEsignScreen = this.ls.getItem('eSignStage');\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      this.isEsignScreen = this.ls.getItem('eSignStage');\r\n    \r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  goToDetail(item){\r\n    console.log(item);\r\n    this.router.navigate([`/home/${item.state}`]);\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n          <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n        </div> -->\r\n      <div class=\"profile-pic text-center\">\r\n         <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Create New Customer</b></div>\r\n        <div class=\"text-muted\">\r\n          Create New Customer Account with bank XYZ bank in a better way.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n      <!-- Card 1 start-->\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>1. Digital Signing</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n              <p class=\"text-align\">Customer can either sign now or sign later</p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"'assets/images/svg/MaskGroup5_1.svg'\"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\" *ngIf=\"isEsignScreen\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <a\r\n            mat-button\r\n            [routerLink]=\"['/loan/account/digitalsigning/list/options']\"\r\n            color=\"primary\"\r\n          >\r\n            {{ isEsignScreen ? \"Show Details\" : \"Add Details\" }}\r\n            <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end -->\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n  selector: 'app-loan-view-summary',\r\n  templateUrl: './loan-view-summary.component.html',\r\n  styleUrls: ['./loan-view-summary.component.scss']\r\n})\r\nexport class LoanViewSummaryComponent implements OnInit {\r\n\r\n  userRecommendation={'userRecommendation':'Recomended For Approval'};\r\n  loanDetails = {'applicantName'          :'ABC',\r\n                  'applicantType'         :'Home Loan',\r\n                  'accountBranch'         : '000',\r\n                  'productCode'           : 'HMN 03',\r\n                  'productName'           : 'New Home Loan',\r\n                 'approvedLoanAmount'     :'$200,000',\r\n                 'loanTenure'             :'5 years',\r\n                 'rateOfIntrest'          :'5.9',\r\n                 'loanAmount'             :'$500,000',\r\n                 'installmentType'        :'EMI',\r\n                 'stage'                  :'HML/Stage1',\r\n                 'installmentAmount'      :'$100,000',\r\n                 'installmentFreq'        :'Monthly',\r\n                 'assessmentApprovedMethod':'Internal Score Card',\r\n                 'userAction'             :'Action',    \r\n                 'date'                   :'12/2/2021',\r\n                };\r\n\r\n  constructor(private router: Router,\r\n    public dialogRef: MatDialogRef<LoanViewSummaryComponent>\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  edit(){\r\n    this.dialogRef.close();\r\n    this.router.navigate(['loan/account-approval/loan-summary-details']);\r\n    \r\n  }\r\n  close(){\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/loan/account-approval/list`]);\r\n  }\r\n}\r\n","<div class=\"full-width\">\r\n    <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon class=\"backIcon\" (click)=\"close()\">close</mat-icon>\r\n    </div>\r\n    <div fxLayout=\"row\">\r\n        <h4 class=\"paraFont\">Loan Summary</h4>\r\n    </div>\r\n\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n                <div class=\"full-width\">\r\n                    <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                            <ng-container>\r\n                                <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <div fxLayout=\"row wrap\">\r\n\r\n                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                <ng-container>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Applicant Name</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.applicantName}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Account Type</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.applicantType}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Account Branch</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.accountBranch}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Product Code</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.productCode}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Product Name</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.productName}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Host Product Code</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.productCode}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Host Product Description</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.productName}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Loan Amount</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.loanAmount}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.loanTenure}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Interest Rate(in %)</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.rateOfIntrest}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Repayment Method</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.installmentType}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Repayment Frequency</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.installmentFreq}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Application Date</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.date}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Assessment Approval Method</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.assessmentApprovedMethod}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Offer Approved Date</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.date}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Approver ID</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.productCode}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Stage</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.stage}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Date</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.date}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Offer Issue Date</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.date}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">User Recommendation</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{userRecommendation.userRecommendation}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">User Action</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{loanDetails.userAction}}</mat-hint>\r\n                                                    </div>\r\n                                                    \r\n                                                </ng-container>\r\n                                            </div>    \r\n                                        </div>\r\n                                    </mat-card>\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p class=\"editButton\" (click)=\"edit()\">Edit</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-loan-repayment',\r\n  templateUrl: './loan-repayment.component.html',\r\n  styleUrls: ['./loan-repayment.component.scss']\r\n})\r\nexport class LoanRepaymentComponent implements OnInit {\r\n  loanRepaymentForm:FormGroup;\r\n\r\n  constructor(private fb:FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildformGroup();\r\n  }\r\n\r\n  buildformGroup(){\r\n    this.loanRepaymentForm = this.fb.group({\r\n      id:[''],\r\n      type_of_repayment:[''],\r\n      first_repayment_date:[''],\r\n      maturity_date:[''],\r\n      loan_tenure:[''],\r\n      repayment_mode:[''],\r\n      repayment_frequency:[''],\r\n      customer_account:[''],\r\n      moratorium_period:[''],\r\n      branch_code:['']\r\n    })\r\n  }\r\n\r\n}\r\n","\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-80\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Loan Repayment Details</b></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">Loan Repayment Details</div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form *ngIf=\"loanRepaymentForm\" [formGroup]=\"loanRepaymentForm\">\r\n\r\n                 <div fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"start center\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Type of Repayment*</mat-label>\r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"EMI\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>First Repayment Date*</mat-label>\r\n                                <input matInput name=\"date\" readonly\r\n                                  placeholder=\"12/02/2020\" [matDatepicker]=\"appDatepicker1\"/>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                            </mat-form-field>\r\n                              <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Maturity Date*</mat-label>\r\n                                <input matInput name=\"date\" \r\n                                  placeholder=\"12/02/2025\" [matDatepicker]=\"appDatepicker1\"/>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                            </mat-form-field>\r\n                              <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Customer Account</mat-label>\r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"Customer Account\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Moratorium Period</mat-label>\r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"2\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                        </div>\r\n                          \r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Repayment Frequency*</mat-label>\r\n                                 <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"Monthly\"\r\n                                />\r\n                              </mat-form-field> \r\n                            </div>\r\n                            \r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Loan Tenure</mat-label>\r\n                                    <input\r\n                                      matInput\r\n                                      name=\"a_sig\"\r\n                                      placeholder=\"10 years\"\r\n                                    />\r\n                                  </mat-form-field> \r\n                            </div>\r\n\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Repayment Mode</mat-label>\r\n                                    <input\r\n                                      matInput\r\n                                      name=\"a_sig\"\r\n                                      placeholder=\"Internal Account\"\r\n                                    />\r\n                                  </mat-form-field> \r\n                            </div>\r\n\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Branch code</mat-label>\r\n                                    <input\r\n                                      matInput\r\n                                      name=\"a_sig\"\r\n                                      placeholder=\"Branch code\"\r\n                                    />\r\n                                  </mat-form-field> \r\n                            </div>\r\n      \r\n                            <a style=\"color:rgb(0, 153, 255);\"><u> Show Payment Schedule</u></a>\r\n\r\n                        </div>\r\n                </div>\r\n\r\n                \r\n                <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"space-between center\"\r\n                fxLayoutGap=\"16px\"\r\n                class=\"mt-32\"\r\n              >\r\n                <button mat-button rounded color=\"primary\">\r\n                  Back\r\n                </button>\r\n                <button\r\n                  mat-raised-button\r\n                  color=\"primary\"\r\n                >\r\n                  Done\r\n                </button>\r\n              </div>\r\n         \r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n  \r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n","import {\r\n  sequence,\r\n  trigger,\r\n  animate,\r\n  style,\r\n  group,\r\n  query,\r\n  transition,\r\n  animateChild,\r\n  state,\r\n  animation,\r\n  useAnimation,\r\n  stagger,\r\n} from '@angular/animations';\r\n\r\nconst reusable = animation(\r\n  [\r\n    style({\r\n      opacity: '{{opacity}}',\r\n      transform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})',\r\n    }),\r\n    animate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*')),\r\n  ],\r\n  {\r\n    params: {\r\n      duration: '200ms',\r\n      delay: '0ms',\r\n      opacity: '0',\r\n      scale: '1',\r\n      x: '0',\r\n      y: '0',\r\n      z: '0',\r\n    },\r\n  }\r\n);\r\n\r\nexport const rumangoAnimations = [\r\n  trigger('animate', [transition('void => *', [useAnimation(reusable)])]),\r\n\r\n  trigger('fadeInOut', [\r\n    state(\r\n      '0',\r\n      style({\r\n        opacity: 0,\r\n        display: 'none',\r\n      })\r\n    ),\r\n    state(\r\n      '1',\r\n      style({\r\n        opacity: 1,\r\n        display: 'block',\r\n      })\r\n    ),\r\n    transition('0 => 1', animate('300ms')),\r\n    transition('1 => 0', animate('300ms')),\r\n  ]),\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport * as moment from 'moment';\r\nimport { RatioTileStyler } from '@angular/material/grid-list/tile-styler';\r\n\r\n@Component({\r\n  selector: 'app-post-offer-amendment',\r\n  templateUrl: './post-offer-amendment.component.html',\r\n  styleUrls: ['./post-offer-amendment.component.scss']\r\n})\r\nexport class PostOfferAmendmentComponent implements OnInit {\r\n  PostOfferAmendmentForm:FormGroup;\r\n // approvedLoanAmount: any;\r\n // effectiveRate: any;\r\n  //installmentType: string;\r\n // loanAmmountRecommended: 0;\r\n  loanTenure: string;\r\n // margin: any;\r\n // offerAmendDate: string;\r\n // offerExpiryDate: string;\r\n // offerIssueDate: string;\r\n  //rateOfInterest: any;\r\n  id: any;\r\n  loan_acc_id: any;\r\n  selectedDay: number = 1;\r\n  day: string[];\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  year: string[];\r\n  month:string[];\r\n  years: any[] = [];\r\n\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  offerDetails: any;\r\n  showEditOption: boolean;\r\n  accountId: any;\r\n  \r\n  loanAccountId: any;\r\n  loanInfo: any;\r\n  cifNumber: any;\r\n\r\n  constructor(private fb:FormBuilder,private api: ApiService,\r\n    private ls: LocalStoreService,private loader: AppLoaderService,private appApiService: ApplicationEntryStageService,\r\n    private apiService:ApiService, private snack: MatSnackBar,private accountService:AccountService,\r\n    private router: Router, \r\n    ) { \r\n      this.maxDate.setDate(this.maxDate.getDate() + 13)\r\n    }\r\n\r\n\r\n  ngOnInit(): void {\r\n this.selectedYear = new Date().getFullYear();\r\n \r\n for (let year = 0; year <= 50; year++) {\r\n   this.years.push(year+ \" year\");\r\n }\r\n\r\n for (let month = 0; month <= 11; month++) {\r\n   this.months.push(month+ \" month\");\r\n }\r\n\r\n for (let day = 0; day <= 30; day++) {\r\n   this.days.push(day+ \" day\");\r\n }\r\n    this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    console.log(this.loanAccountId)\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanAccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    let ispostOfferAmendStageDone: boolean = JSON.parse(this.ls.getItem('post-offer-amend-stage'));\r\n    console.log(ispostOfferAmendStageDone)\r\nsetTimeout(() => {\r\n  if (this.loanAccountId != null && ispostOfferAmendStageDone) {\r\n    this.showEditOption = true;\r\n    this.getAmendDetails();\r\n  } else {\r\n    this.showEditOption = false;\r\n    this.buildformGroup({});\r\n  }\r\n}, 10);\r\n    this.fetchByCif();\r\n     this.loanData();\r\n    this.intrestData();\r\n    this.installmentTypeData();\r\n  }\r\n\r\n  getAmendDetails() {\r\n   // this.loader.open();\r\n    this.api.getOfferAmendmentDetails(this.loanAccountId).subscribe((result : any) => {\r\n      console.log(result)\r\n    //  this.loader.close();\r\n     \r\n      this.buildformGroup(result);\r\n    });\r\n  }\r\n\r\n  buildformGroup(data?){\r\n   data.offerIssueDate = data? moment(data.offerIssueDate).format():'';\r\n   data.offerExpiryDate = data? moment(data.offerExpiryDate).format():'';\r\n   data.offerAmendDate = data ? moment(data.offerAmendDate).format():'';\r\n    this.PostOfferAmendmentForm = this.fb.group({\r\n      // loanAccountId:[data.loanAccountId = \"5970\"],\r\n      loanAccountId: this.loanAccountId,\r\n      applicantName:[data? data.applicantName:''],\r\n      offerIssueDate:[data ? data.offerIssueDate:''],\r\n      offerExpiryDate:[data ?data.offerExpiryDate:''],\r\n      offerAmendDate:[data ?data.offerAmendDate:''],\r\n      installmentType:[data?data.installmentType:''],\r\n      margin:[data?data.margin:''],\r\n      approvedLoanAmount:[data?data.approvedLoanAmount:''],\r\n      loanAmmountRecommended:[data?data.loanAmmountRecommended:''],\r\n      loanTenure:[data?data.loanTenure:''],\r\n      rateOfInterest:[data?data.rateOfInterest:''],\r\n      effectiveRate:[data?data.effectiveRate:''],\r\n      // year:[data ?data.loanTenure.split(\"-\")[0]:''],\r\n      //month:[data ?data.loanTenure.split(\"-\")[1]:''],\r\n      //day:[data ?data.loanTenure.split(\"-\")[2]:''],\r\n      year:[data ? data.year:''],\r\n      month:[data ? data.month:''],\r\n      day:[data ? data.day:''],\r\n    })\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  // OnInput(event: any, flag) {\r\n\r\n \r\n  //     if (flag) {\r\n  //       this.effectiveRate = event.target.value;\r\n  //     } else {\r\n  //       this.effectiveRate = event;\r\n  //     }\r\n  \r\n  //     console.log(\"this.effectiveRate)::\", this.effectiveRate);\r\n  //     let rate = this.effectiveRate.toString().replace(/,/g, '').split(\".\");\r\n  //     rate[0] = rate[0].replace(/\\B(?=(\\d{1})+(?!\\d))/g, '.');\r\n  //     let final = rate.join(\".\");\r\n  //     console.log(\"final\", final);\r\n  //     this.PostOfferAmendmentForm.controls.effectiveRate.setValue(final);\r\n    \r\n  \r\n    \r\n   \r\n  // }\r\n\r\n//   OnInput1(event: any, flag) {\r\n//     if (flag) {\r\n//       this.margin = event.target.value;\r\n//     } else {\r\n//       this.margin = event;\r\n//     }\r\n\r\n//     console.log(\"this.margin)::\", this.margin);\r\n//     let mar = this.margin.toString().replace(/,/g, '').split(\".\");\r\n//     mar[0] = mar[0].replace(/\\B(?=(\\d{1})+(?!\\d))/g, '.');\r\n//     let final = mar.join(\".\");\r\n//     console.log(\"final\", final);\r\n//     this.PostOfferAmendmentForm.controls.margin.setValue(final);\r\n \r\n// }\r\n// OnInput2(event: any, flag) {\r\n//   if (flag) {\r\n//     this.rateOfInterest = event.target.value;\r\n//   } else {\r\n//     this.rateOfInterest = event;\r\n//   }\r\n\r\n//   console.log(\"this.rateOfInterest)::\", this.rateOfInterest);\r\n//   let interest = this.rateOfInterest.toString().replace(/,/g, '').split(\".\");\r\n//   interest[0] = interest[0].replace(/\\B(?=(\\d{1})+(?!\\d))/g, '.');\r\n//   let final = interest.join(\".\");\r\n//   console.log(\"final\", final);\r\n//   this.PostOfferAmendmentForm.controls.rateOfInterest.setValue(final);\r\n\r\n// }\r\n\r\n_keyPress1(event: any) {\r\n  const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n  }\r\n  const input = event.target.value;\r\n  if (input.length === 0 && event.which === 48) {\r\n    event.preventDefault();\r\n  }\r\n}\r\n\r\n  \r\n  // convertDate(value) {\r\n  //   // let date = moment(value).format('YYYY-MMM-DD');\r\n  //   // let date = moment(value).format('YYYY-MMM-DD hh:mm:ss');\r\n  //   let date = moment(value).format(\"YYYY-MMM-DD HH:mm:ss\");\r\n  //   console.log(\"date\", date);\r\n  //   if (date)\r\n  //     return date;\r\n  // }\r\n\r\n  submit(){\r\n    this.ls.setItem('post-offer-amend-stage', true);\r\n    this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    console.log(\"loanAccountId\",this.loanAccountId);\r\n    this.PostOfferAmendmentForm.get('loanAccountId').setValue(this.ls.getItem('loanAccountId'));\r\n   // console.log(this.PostOfferAmendmentForm.value);\r\n  // this.PostOfferAmendmentForm.value.effectiveRate = this.PostOfferAmendmentForm.value.effectiveRate.replaceAll('.', '');\r\n  // this.PostOfferAmendmentForm.value.margin =   this.PostOfferAmendmentForm.value.margin.replaceAll('.', '');\r\n   var rate=this.PostOfferAmendmentForm.value.rateOfInterest;\r\n    rate= parseInt(rate);\r\n    this.PostOfferAmendmentForm.get(\"rateOfInterest\").setValue(rate);\r\n  var loanValue = this.PostOfferAmendmentForm.value.loanAmmountRecommended;\r\n   loanValue = parseInt(loanValue);\r\n    this.PostOfferAmendmentForm.get(\"loanAmmountRecommended\").setValue(loanValue);\r\n  this.PostOfferAmendmentForm.value.rateOfInterest =   rate;\r\n   var margin1 = this.PostOfferAmendmentForm.value.margin;\r\n   margin1 = parseInt(margin1);\r\n    this.PostOfferAmendmentForm.get(\"margin\").setValue(margin1);\r\n     var effectiveRate1 = this.PostOfferAmendmentForm.value.effectiveRate;\r\n   effectiveRate1 = parseInt(effectiveRate1);\r\n    this.PostOfferAmendmentForm.get(\"effectiveRate\").setValue(effectiveRate1);\r\n  \r\n   let now = new Date();\r\n    now=this.PostOfferAmendmentForm.value.offerIssueDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MMM-DD');\r\n     let now1 = new Date();\r\n    now1=this.PostOfferAmendmentForm.value.offerExpiryDate;\r\n    var dateStringWithTime1 = moment(now1).format('YYYY-MMM-DD');\r\n     let now2 = new Date();\r\n    now2=this.PostOfferAmendmentForm.value.offerAmendDate;\r\n    var dateStringWithTime2 = moment(now2).format('YYYY-MMM-DD');\r\n   // let  issueDate = this.convertDate(this.PostOfferAmendmentForm.controls.offerIssueDate.value);\r\n   // this.PostOfferAmendmentForm.value['offerIssueDate'] = issueDate;\r\n    //let  expiryDate = this.convertDate(this.PostOfferAmendmentForm.controls.offerExpiryDate.value);\r\n    //this.PostOfferAmendmentForm.value['offerExpiryDate'] = expiryDate;\r\n   // let amendDate = this.convertDate(this.PostOfferAmendmentForm.controls.offerAmendDate.value);\r\n    //this.PostOfferAmendmentForm.value['offerAmendDate'] = amendDate;\r\n     const renewData =\r\n    this.PostOfferAmendmentForm.value.year +\r\n    \"-\" +\r\n    this.PostOfferAmendmentForm.value.month +\r\n    \"-\" +\r\n    this.PostOfferAmendmentForm.value.day;\r\n  this.PostOfferAmendmentForm.get(\"loanTenure\").setValue(renewData);\r\n   this.PostOfferAmendmentForm.value.loanTenure=renewData;\r\n // delete this.PostOfferAmendmentForm.value.year;\r\n // delete this.PostOfferAmendmentForm.value.month;\r\n // delete this.PostOfferAmendmentForm.value.day;\r\n   var aprloan=this.PostOfferAmendmentForm.value.approvedLoanAmount;\r\n   aprloan= parseInt(aprloan);\r\n       let payload={\r\n      loanAccountId: this.loanAccountId,\r\n      //approvedLoanAmount:this.PostOfferAmendmentForm.value.approvedLoanAmount,\r\n      approvedLoanAmount:aprloan,\r\n      applicantName:this.PostOfferAmendmentForm.value.applicantName,\r\n      loanTenure:renewData,\r\n      installmentType:this.PostOfferAmendmentForm.value.installmentType,\r\n      effectiveRate:effectiveRate1,\r\n      margin:margin1,\r\n      //margin:this.PostOfferAmendmentForm.value.margin,\r\n     // rateOfInterest:this.PostOfferAmendmentForm.value.rateOfInterest,\r\n     rateOfInterest:rate,\r\n      offerIssueDate:dateStringWithTime,    \r\n      offerAmendDate:dateStringWithTime2,\r\n      offerExpiryDate: dateStringWithTime1, \r\n     // effectiveRate: this.PostOfferAmendmentForm.value.effectiveRate, \r\n      //loanAmmountRecommended:this.PostOfferAmendmentForm.value.loanAmmountRecommended,  \r\n      loanAmmountRecommended:loanValue,      \r\n    }\r\n    console.log(\"payload\",payload)\r\n\r\n    this.api.uploadPostOfferAmendmentDetails(payload).subscribe((data: any) => {     \r\n      console.log(data);\r\n      if (data !== null) {\r\n        this.snack.open(' Post Offer Amendment Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      \r\n      \r\n      \r\n      \r\n        //this.router.navigate(['loan/account/post-offer-amend-stage/list']);\r\n      }\r\n      this.next();\r\n      // else if (data === 500) {\r\n      //   this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n      //     duration: 4000,\r\n      //     verticalPosition: 'top',\r\n      //     horizontalPosition: 'right'\r\n      //   });\r\n      // }\r\n\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\nnext(){\r\n  this.ls.setItem('PostOfferAmmendementScreen', true);\r\n  this.ls.setItem('PostOfferAmmendementStageScreen', true);\r\n  this.accountService.refresh.next();\r\n  this.router.navigate([\"/loan/account/account-creation-stage\"]);\r\n}\r\ngoBack(){\r\n  this.router.navigate([\"/loan/account/post-offer-amend-stage/list\"]);\r\n}\r\n\r\nkeyPressAlphanumeric(event) {\r\n  var inp = String.fromCharCode(event.keyCode);\r\n  if (/[a-zA-Z0-9]/.test(inp)) {\r\n    return true;\r\n  } else {\r\n    event.preventDefault();\r\n    return false;\r\n  }\r\n}\r\n\r\nletterOnly(event) {\r\n  var charCode = event.keyCode;\r\n          if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n              return true;\r\n          else\r\n              return false;\r\n}\r\n\r\nfetchByCif(){\r\n  this.cifNumber=this.ls.getItem('cId');\r\n  console.log(this.cifNumber);\r\n  this.appApiService.fetchByCif(this.cifNumber).subscribe((res: any) => {\r\n  console.log(res);\r\n  console.log(res.customerInfoList[0].firstName);\r\n  this.PostOfferAmendmentForm.get('applicantName').setValue(res.customerInfoList[0].firstName +\" \"+ res.customerInfoList[0].lastName);\r\n  }, (err: any) => {\r\n    console.error(err);\r\n  })\r\n}\r\nloanData(){\r\n  console.log(this.loanAccountId);\r\n  this.apiService.fetchByLoanAccountId(this.loanAccountId).subscribe((res:any)=>{   \r\n    console.log(res); \r\n    console.log(res.approvedLoanAmount);\r\n    this.PostOfferAmendmentForm.get('approvedLoanAmount').setValue(res.approvedLoanAmount); \r\n    console.log(res.loanTenure);       \r\n    this.year = res.loanTenure.split(\"-\")[0];\r\n    console.log(this.year);\r\n    this.month = res.loanTenure.split(\"-\")[1];\r\n    console.log(this.month);\r\n    this.day = res.loanTenure.split(\"-\")[2];\r\n    console.log(this.day);    \r\n    this.PostOfferAmendmentForm.get('year').setValue(this.year);\r\n    this.PostOfferAmendmentForm.get('month').setValue(this.month);\r\n    this.PostOfferAmendmentForm.get('day').setValue(this.day);\r\n  \r\n  }, (err: any) => {\r\n    console.error(err);\r\n  })\r\n}\r\nintrestData(){\r\n  console.log(this.loanAccountId);\r\n  this.apiService.fetchLoanAssessment(this.loanAccountId).subscribe((res:any)=>{    \r\n    console.log(res);\r\n    this.PostOfferAmendmentForm.get('rateOfInterest').setValue(res.rateOfInterest);\r\n    this.PostOfferAmendmentForm.get('loanAmmountRecommended').setValue(res.loanAmountRecommendation);\r\n  })\r\n}\r\ninstallmentTypeData(){\r\n  console.log(this.loanAccountId);\r\n  this.apiService.getOfferAcceptReject(this.loanAccountId).subscribe((res:any)=>{\r\n    console.log(res);\r\n     this.PostOfferAmendmentForm.get('installmentType').setValue(res.installmentType);\r\n     let issueDate =  moment(res.offerIssueDate).format();\r\n     this.PostOfferAmendmentForm.get('offerIssueDate').setValue(issueDate);\r\n     console.log(issueDate);\r\n  });\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/post_amend_screen.svg\" alt=\"\" class=\"w-90\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Post Offer Amendment</b></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title>\r\n          <fieldset>\r\n          <legend visible=\"true\">Post Offer Amendment Details</legend>\r\n          </fieldset>\r\n        </mat-card-title>        \r\n        <mat-card-content>\r\n          <form *ngIf=\"PostOfferAmendmentForm\" [formGroup]=\"PostOfferAmendmentForm\">\r\n                  <div   fxLayout=\"row wrap\"\r\n                  class=\"full-width\"\r\n                  fxLayoutAlign=\"space-between center\">\r\n                          <div  fxFlex=\"50%\" class=\"pr-2\" fxFlex.xs=\"100%\"> \r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Applicant Name</mat-label>\r\n                                <!-- <mat-card class=\"widthCard inputMatName1 alignChange\">               -->\r\n                                  <input matInput type=\"text\" maxlength=\"15\" name=\"a_sig\" placeholder=\"Applicant Name\" formControlName=\"applicantName\" (keypress)=\"letterOnly($event)\" required />\r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!PostOfferAmendmentForm.get('applicantName').valid && PostOfferAmendmentForm.get('applicantName').touched \">\r\n                                  Please Enter Applicant Name\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                              </div>\r\n                            \r\n                          </div>\r\n\r\n                        <div  fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                          <div class=\"flex-grow-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label > Offer Expiry Date</mat-label>\r\n                            <!-- <mat-card class=\" inputMatName1 postData alignCChange\"> -->\r\n                                <input matInput (keypress)=_keyPress($event) readonly name=\"offerExpiryDate\" formControlName=\"offerExpiryDate\" [min]=\"PostOfferAmendmentForm.get('offerIssueDate').value\"\r\n                                    [matDatepicker]=\"appDatepicker\" required />\r\n                              \r\n                                <!-- <div fxFlex=\"8%\" id=\"toggle\"> -->\r\n                                  <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                  <mat-datepicker #appDatepicker></mat-datepicker>\r\n                                <!-- </div> -->\r\n                            <!-- </mat-card> -->\r\n                           <mat-error *ngIf=\"!PostOfferAmendmentForm.get('offerExpiryDate').valid  && PostOfferAmendmentForm.get('offerExpiryDate').touched\">\r\n                                  Please select Offer Expiry Date\r\n                                </mat-error>   \r\n                            </mat-form-field>                   \r\n                \r\n                                \r\n                          </div>\r\n                            \r\n                            \r\n                            <!-- <label  class=\"hint\">Offer Expiry Date*</label>\r\n                            <mat-card class=\"inputMatName\">\r\n                              <input matInput (keypress)=_keyPress($event) readonly name=\"date\" formControlName=\"offerExpiryDate\"\r\n                              placeholder=\"12/03/2021\" [min]=\"PostOfferAmendmentForm.get('offerExpiryDate').value\" [matDatepicker]=\"appDatepicker\" required />\r\n                          <div fxFlex=\"8%\" id=\"toggle\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" >\r\n                              </mat-datepicker-toggle>\r\n            \r\n                              <mat-datepicker #appDatepicker>\r\n                              </mat-datepicker>\r\n                            </div>\r\n                            </mat-card>\r\n                            <mat-error *ngIf=\"!PostOfferAmendmentForm.get('offerExpiryDate').valid  && PostOfferAmendmentForm.get('offerExpiryDate').touched\">\r\n                              &nbsp;&nbsp;&nbsp; Generate Offer Date is Required!\r\n                          </mat-error>\r\n                             -->\r\n                              \r\n                        </div>\r\n\r\n                          <div  fxFlex=\"50%\" class=\"pr-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Approved Loan Amount</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                  <input matInput (keypress)=_keyPress($event) placeholder=\"Approved Loan Account\" maxlength=\"10\" name=\"approvedLoanAmount\" formControlName=\"approvedLoanAmount\" required />\r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!PostOfferAmendmentForm.get('approvedLoanAmount').valid && PostOfferAmendmentForm.get('approvedLoanAmount').touched \">\r\n                                  Please Enter Approved Loan Amount\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                              </div>\r\n                            \r\n                          </div>\r\n\r\n                          \r\n\r\n                          <div  fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label> Installment Type</mat-label>\r\n                              <!-- <mat-card class=\" inputMatName alignCChange\"> -->\r\n                                <mat-select name=\"installmentType\" placeholder=\"Select\" \r\n                                            disableOptionCentering formControlName=\"installmentType\" required>\r\n                                  <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                   <mat-option value=\"EMI\">EMI</mat-option>                                \r\n                                </mat-select>\r\n                              <!-- </mat-card> -->\r\n                              <mat-error *ngIf=\"!PostOfferAmendmentForm.get('installmentType').valid && PostOfferAmendmentForm.get('installmentType').touched \">\r\n                                  Please Enter Instalment Type\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                            </div>                             \r\n                          </div>\r\n    \r\n                          <div  fxFlex=\"50%\" class=\"pr-2\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label >Margin</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                  <input matInput (keypress)=_keyPress1($event)  maxlength=\"3\" name=\"margin\" placeholder=\"Margin\"\r\n                                  formControlName=\"margin\" required />\r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!PostOfferAmendmentForm.get('margin').valid && PostOfferAmendmentForm.get('margin').touched \">\r\n                                  Please Enter Margin\r\n                                </mat-error>\r\n                              </mat-form-field>\r\n                              </div>                             \r\n                          </div>\r\n\r\n                            <div  fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                              <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label >Offer Issue Date*</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName1 postData alignCChange\"> -->\r\n                                  <input matInput (keypress)=_keyPress($event) readonly name=\"issuedate\" formControlName=\"offerIssueDate\"\r\n                                       [min]=\"PostOfferAmendmentForm.get('offerIssueDate').value\" [matDatepicker]=\"appDatepicker1\"/>\r\n                              \r\n                                  <!-- <div fxFlex=\"8%\" id=\"toggle\"> -->\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                                  <!-- </div> -->\r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!PostOfferAmendmentForm.get('offerIssueDate').valid  && PostOfferAmendmentForm.get('offerIssueDate').touched\">\r\n                                      Please select Offer Issue Date\r\n                                </mat-error>  \r\n                                </mat-form-field>                \r\n                              </div>                         \r\n                            </div>\r\n\r\n                            <div  fxFlex=\"50%\" class=\"pr-2\" fxFlex.xs=\"100%\">\r\n                              <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label >Offer Amend Date*</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName1 postData alignChange\" > -->\r\n                                  <input matInput (keypress)=_keyPress($event) readonly name=\"amenddate\" formControlName=\"offerAmendDate\"\r\n                                       [matDatepicker]=\"appDatepicker2\"/>\r\n                              \r\n                                  <!-- <div fxFlex=\"8%\" id=\"toggle\"> -->\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker2\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #appDatepicker2></mat-datepicker>\r\n                                  <!-- </div> -->\r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!PostOfferAmendmentForm.get('offerAmendDate').valid  && PostOfferAmendmentForm.get('offerAmendDate').touched\">\r\n                                      Please select Offer Amend Date\r\n                                    </mat-error>  \r\n                                </mat-form-field>               \r\n                              </div>\r\n                            </div>\r\n                            \r\n                            <div  fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                              <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label >Loan Amount Recommended</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName alignCChange\">               -->\r\n                                  <input matInput (keypress)=_keyPress($event) placeholder=\" Loan Account Recommended\" maxlength=\"10\" name=\"a_sig\" formControlName=\"loanAmmountRecommended\" required />\r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!PostOfferAmendmentForm.get('loanAmmountRecommended').valid && PostOfferAmendmentForm.get('loanAmmountRecommended').touched \">\r\n                                  Please Enter Loan Amount Recommended\r\n                                </mat-error>\r\n                                </mat-form-field>\r\n                              </div>                               \r\n                            </div>\r\n\r\n                            <!-- <div  fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Loan Tenure</mat-label>\r\n                                    <input\r\n                                      matInput\r\n                                      (keypress)=_keyPress($event)\r\n                                      maxlength=\"2\"\r\n                                      name=\"a_sig\"\r\n                                      placeholder=\"5 Years\"\r\n                                      formControlName=\"loanTenure\"\r\n                                      required\r\n                                    />\r\n                                    <mat-error *ngIf=\"PostOfferAmendmentForm.get('loanTenure').hasError('required')\">\r\n                                      Please Enter Loan Tenure\r\n                                    </mat-error>\r\n                                  </mat-form-field> \r\n                              </div> -->\r\n                        \r\n                                <div fxFlex=\"50%\" class=\"pr-2\" fxFlex.xs=\"100%\">\r\n                                  \r\n                                  <div fxLayout=\"row wrap\"> \r\n                                    <label class=\"size\">Loan Tenure *</label> \r\n                                    <!-- <mat-card class=\"sqInput1 tenureChange\">                                   -->\r\n                                      <!-- <mat-form-field appearance=\"outline\" class=\"full-width\" fxFlex=\"30\">                                         -->\r\n                                        <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"23\">\r\n                                          <mat-label>Year</mat-label>\r\n                                        <mat-select disableOptionCentering name=\"year\" placeholder=\"Year\" formControlName=\"year\" required >\r\n                                        <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                                        </mat-select>\r\n                                        </mat-form-field>\r\n                                    <!-- </mat-card> -->\r\n                                 <!-- <mat-card class=\"sqInput1\"> -->\r\n                                      <!-- <mat-form-field appearance=\"outline\" class=\"full-width\" fxFlex=\"30\"> -->\r\n                                        <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"21.5\">\r\n                                          <mat-label>Month</mat-label>\r\n                                        <mat-select disableOptionCentering name=\"month\" placeholder=\"Month\" formControlName=\"month\" required >\r\n                                        <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                                         </mat-select>\r\n                                        </mat-form-field>\r\n                                      <!-- </mat-card> -->\r\n                                      <!-- <mat-card class=\"sqInput1 tenureMarginChange\"> -->\r\n                                       <!-- <mat-form-field appearance=\"outline\" class=\"full-width\" fxFlex=\"30\"> -->\r\n                                        <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"21.5\">\r\n                                          <mat-label>Day</mat-label>\r\n                                        <mat-select disableOptionCentering name=\"day\"  placeholder=\"Day\" formControlName=\"day\" required >\r\n                                        <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                                      </mat-select>\r\n                                        </mat-form-field>\r\n                                      <!-- </mat-card>  -->\r\n                                  </div>\r\n                              </div>\r\n      \r\n                            <div  fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                              <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label >Rate Of Interest(%)</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName alignCChange\"> -->\r\n                                  <input matInput (keypress)=_keyPress1($event)  maxlength=\"3\" name=\"rateOfInterest\"\r\n                                      placeholder=\"Rate Of Interest\" formControlName=\"rateOfInterest\" required />                            \r\n                               <!-- </mat-card> -->\r\n                               <mat-error *ngIf=\"!PostOfferAmendmentForm.get('rateOfInterest').valid && PostOfferAmendmentForm.get('rateOfInterest').touched \">\r\n                                    &nbsp;&nbsp;  Please Enter Rate Of Interest\r\n                                </mat-error>  \r\n                                </mat-form-field>                              \r\n                              </div>                                \r\n                            </div>\r\n\r\n                            <div  fxFlex=\"50%\" class=\"pr-2\" fxFlex.xs=\"100%\">\r\n                              <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label >Effective Rate(%)</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName alignChange\"> -->\r\n                                  <input matInput (keypress)=_keyPress1($event)  maxlength=\"3\" name=\"effectiveRate\"\r\n                                      placeholder=\"Effective Rate(%)\" formControlName=\"effectiveRate\" required />                             \r\n                               <!-- </mat-card> -->\r\n                               <mat-error *ngIf=\"!PostOfferAmendmentForm.get('effectiveRate').valid && PostOfferAmendmentForm.get('effectiveRate').touched \">\r\n                                  &nbsp;&nbsp;Please Enter Effective Rate\r\n                                </mat-error>   \r\n                                </mat-form-field>                             \r\n                              </div>                            \r\n                            </div>\r\n\r\n                 \r\n                </div>                \r\n         \r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n      <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"space-between center\"\r\n                fxLayoutGap=\"16px\"\r\n                class=\"mt-32\"\r\n              >\r\n                <button mat-button class=\"Backbtn\" rounded  (click)=\"goBack()\">\r\n                  Back\r\n                </button>\r\n                <button\r\n                [disabled] = \"PostOfferAmendmentForm.invalid\"\r\n                  mat-raised-button\r\n                  class=\"Nextbtn\" color=\"primary\"\r\n                  (click)=\"submit()\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-guarantor-details',\r\n  templateUrl: './guarantor-details.component.html',\r\n  styleUrls: ['./guarantor-details.component.scss']\r\n})\r\nexport class GuarantorDetailsComponent implements OnInit {\r\n\r\n\r\n  guarantorDetailsForm: FormGroup;\r\n  loanaccountID : any = 0;\r\n  showEditOption: boolean = false;\r\n  active: boolean = false;\r\n  guarantorDetails: any;\r\n  customerId : any;\r\n  customerTypeId : any;\r\n  userAddress : UserAddress[];\r\n  entityName: string;\r\n  arrayCountry:any[]=[];\r\n  arrayState:any[]=[];\r\n  arrayCity:any[]=[];\r\n  arrayRelationshipType: any[] = [];\r\n  arrayPrefix: string[];\r\n  tomorrow = new Date();\r\n  loanInfo: any;\r\n  cifNumber: any[]=[];\r\n  isDuplicateCIF: boolean;\r\n  disableSaveBtn: boolean;\r\n  numOfApplicants: number;\r\n  prefixFlag: boolean=false;\r\n  constructor\r\n  (\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private accountService:AccountService,\r\n    private appApiService: ApplicationEntryStageService,\r\n  ) {\r\n    this.tomorrow.setDate(this.tomorrow.getDate());\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.buildformGroup();\r\n    this.isDuplicateCIF = false;\r\n    this.disableSaveBtn = false;\r\n    this.prefixFlag=true;\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');    \r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    let financialDetailscreen: boolean = JSON.parse(this.ls.getItem('GUARANTOR_DETAIL_DONE'));\r\n    this.getCountryName(\"country\");\r\n    this.getRelationShipType(\"relationship_type\");\r\n    this.getPrefixValue(\"prefix\");\r\n    this.numOfApplicants=this.ls.getItem('LoanNoOfApplicants');   \r\n    setTimeout(() => {\r\n      if (this.loanaccountID && financialDetailscreen) {\r\n        this.showEditOption = true;\r\n        this.getGuarantorDetails();\r\n      }\r\n      else {\r\n        this.showEditOption = false;\r\n        this.buildformGroup();\r\n      }\r\n    }, 10);\r\n  this.cifByData();\r\n  }\r\n\r\n  buildformGroup(data?) {    \r\n    if(data && data.country){\r\n      this.getStateName(data.country);\r\n      this.getCityName(data.state);\r\n    }\r\n    this.guarantorDetailsForm = this.fb.group({\r\n      cifNumber: [data ? data.cifNumber : '', Validators.required],\r\n      relationWithCustomer: [data ? data.relationWithCustomer : '', Validators.required],\r\n      prefix: [data ? data.prefix : '', Validators.required],\r\n      firstName: [data ? data.firstName : '', Validators.required],\r\n      existingCustomer: [true, Validators.required],\r\n      middleName: [data ? data.middleName : ''],\r\n      lastName: [data ? data.lastName : '', Validators.required],\r\n      dateOfBirth: [data ? data.dateOfBirth : '', Validators.required],\r\n      building: [data ? data.building : '',[Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      street: [data ? data.street : '',[Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      address1: [data ? data.address1 : '', [Validators.pattern(\".*[a-zA-Z].*\"),Validators.required]],\r\n      address2: [data ? data.address2 : '',  [Validators.pattern(\".*[a-zA-Z].*\"),Validators.required]],\r\n      // locality: [data ? data.locality : '', Validators.required],\r\n      city: [data ? data.city : '', Validators.required],\r\n      state: [data ? data.state : '', Validators.required],\r\n      country: [data ? data.country : '', Validators.required],\r\n      // zipCode: [data ? data.zipCode :'',[Validators.required,Validators.pattern(\"[123456789]{1}[0-9]{6}\")]],\r\n      zipCode: [data ? data.zipCode :'',[Validators.required,Validators.pattern(\"^[0-9]{5,10}$\")]],\r\n      phoneNumber: [data ? data.phoneNumber :'', [  Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      mobileNumber: [data ? data.mobileNumber :'', [ Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      emailAddress: [data ? data.emailAddress:'', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n  //    emailAddress: [data ? data.emailAddress:'', [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n    })\r\n   \r\n  }\r\n  onChangeData(relationshipType){\r\n    let prefix = this.guarantorDetailsForm.value.prefix;\r\n    if(prefix && this.guarantorDetailsForm.value.relationWithCustomer){\r\n      if ((prefix == \"Mr\" && (relationshipType == \"Father\" ||relationshipType == \"Brother\" || relationshipType == \"Spouse\" )) || ((prefix==\"Ms\" || prefix==\"Mrs\") && (relationshipType==\"Mother\" || relationshipType==\"Sister\"))) {\r\n        this.prefixFlag=true;\r\n      }  else {\r\n        this.prefixFlag=false;\r\n        this.snack.open(\"Prefix and Relationship with Customer does not match!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/^[a-zA-Z0-9_ ]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getGuarantorDetails() {\r\n    this.loader.open();\r\n    this.apiService.getGuarantorByLoanAccId(this.loanaccountID).subscribe((guarantorDetails) => {\r\n      this.loader.close();\r\n      this.guarantorDetails = guarantorDetails;\r\n      console.log(\"this.guarantorDetails::\",this.guarantorDetails);\r\n      this.getStateName(this.guarantorDetails.country);\r\n      this.getCityName(this.guarantorDetails.state);\r\n      this.buildformGroup(this.guarantorDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  getRelationShipType(key: string){\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayRelationshipType = data;\r\n      console.log(\"-->\", this.arrayCountry)\r\n    });\r\n  }\r\n\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n     for(let i=0; i<data.length;i++){\r\n       if(data[i].authStatus==='A'){     \r\n         this.arrayCountry.push(data[i].countryName);\r\n         this.arrayCountry.sort();\r\n       }\r\n     }\r\n   });\r\n }\r\n\r\n getStateName(country) {\r\n  this.apiService.getAllCountries().subscribe((data: any) => {\r\n    for(let i=0; i<data.length;i++){       \r\n      if(data[i].countryName == country){\r\n        this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n        this.arrayState = resp\r\n        })\r\n        break;   \r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/loan/account/collateral_details`]);\r\n  }\r\n\r\n  stayTrue(){\r\n    this.guarantorDetailsForm.get('existingCustomer').setValue(true);\r\n  }\r\n\r\n  submitForm() {\r\n    let payload: any = {};\r\n    payload = this.guarantorDetailsForm.value;\r\n    payload.loanAccountId = this.loanaccountID;\r\n    payload.active = this.active;\r\n    payload.customerId = this.customerId;\r\n    payload.customerTypeId = this.customerTypeId;\r\n    payload.userAddress = this.userAddress;\r\n    payload.cifNumber=this.guarantorDetailsForm.value.cifNumber;\r\n    this.apiService.upsertGuarantorDetails(payload).subscribe(data => {\r\n      console.log(\"data\", data);\r\n      if (data != null) {\r\n        this.snack.open('Guarantor Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.next();\r\n      }\r\n    })\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n                return true;\r\n            else\r\n                return false;\r\n  }\r\n  keyUpevent(event) {\r\n    console.log(\"event\", event);\r\n    if (event.keyCode === 8) {\r\n    \r\n    } \r\n  }\r\n  cifByData(){\r\n   this.appApiService.fetchCustomersByLoanAccId(this.loanaccountID,'loan').subscribe((customerInfoDetails) => {\r\n      if(customerInfoDetails.data){        \r\n        for(var i=0;i<=this.numOfApplicants;i++){\r\n          const newData = {\r\n            cifValue : customerInfoDetails.data[i].customerId\r\n          };          \r\n          this.cifNumber.push(newData);         \r\n        }        \r\n      }\r\n    });\r\n}\r\n  fetchByCif(cifNumber) {    \r\n    if(this.cifNumber.some(val => val.cifValue == cifNumber)){    \r\n       this.isDuplicateCIF = true;\r\n       this.disableSaveBtn = true;\r\n        this.snack.open('Duplicate CIF Number', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n\r\n   else  {\r\n    this.isDuplicateCIF = true;\r\n    this.disableSaveBtn = false;      \r\n   cifNumber &&   this.appApiService.fetchByCif(cifNumber).subscribe((res: any) => {      \r\n        // this.accountForm.reset();\r\n        let data={\r\n          cifNumber:res.customerInfoList[0].cifNumber,\r\n          relationWithCustomer:res.customerInfoList[0].relationWithCustomer,\r\n          prefix:res.customerInfoList[0].prefix,\r\n          firstName:res.customerInfoList[0].firstName,\r\n          middleName:res.customerInfoList[0].middleName,\r\n          lastName:res.customerInfoList[0].lastName,\r\n          dateOfBirth:res.customerInfoList[0].dateOfBirth,\r\n          building:res.customerInfoList[0].building,\r\n          street:res.customerInfoList[0].street,\r\n          address1:res.customerInfoList[0].userAddress[0].address1,\r\n          address2:res.customerInfoList[0].userAddress[0].address2,\r\n          // locality:res.customerInfoList[0].userAddress[0].city,\r\n          city: res.customerInfoList[0].userAddress[0].city,\r\n          state:res.customerInfoList[0].userAddress[0].state,\r\n          country:res.customerInfoList[0].userAddress[0].country,\r\n          zipCode:res.customerInfoList[0].userAddress[0].zipCode,\r\n          phoneNumber:res.customerInfoList[0].phoneNumber,\r\n          mobileNumber:res.customerInfoList[0].landlineNumber,\r\n          emailAddress:res.customerInfoList[0].primaryEmailAdress,\r\n          \r\n        }\r\n        this.buildformGroup(data);\r\n  \r\n       // this.accountForm.controls.cifNumber.setValue(cifNumber);\r\n   \r\n      });\r\n    }\r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem('GUARANTOR_DETAIL_DONE', true);\r\n    this.ls.setItem('LoanEntryStage', true);\r\n    console.log(\"loan entry stage done:\",this.ls.setItem('LoanEntryStage', true));\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/loan/account/application-enrichment`]);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nclass UserAddress{\r\n  address1 : string;\r\n  address2: string;\r\n  addressType: string;\r\n  city: string;\r\n  corporateId: string;\r\n  country: string;\r\n  customerId: string;\r\n  customerType: string;\r\n  id: string;\r\n  isMailingAddressSame: string;\r\n  landLine: string;\r\n  mobileNumber: string;\r\n  primaryEmail: string;\r\n  residenceType: string;\r\n  secondaryEmail: string;\r\n  state: string;\r\n  zipCode : number;\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/MaskGroup_4.svg\" alt=\"\" class=\"w-90\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title\"><h2>Guarantor Details</h2></div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n        <mat-card class=\"p-0\">            \r\n            <mat-card-title>\r\n                <fieldset>\r\n                <legend visible=\"true\">Guarantor Details</legend>\r\n                </fieldset>\r\n              </mat-card-title>\r\n            <mat-card-content>\r\n                <form *ngIf=\"guarantorDetailsForm\" [formGroup]=\"guarantorDetailsForm\">\r\n                    <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\">\r\n                        <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"p-16\" style=\"padding-left: 8px !important;\">\r\n                                <div class=\"pb-16\">\r\n                                    <div class=\"pb-4\">\r\n                                        <div class=\"pb-1\">\r\n                                            \r\n                                                Is the guarantor an existing customer ? &nbsp;&nbsp;&nbsp;&nbsp;<mat-slide-toggle name=\"existingCustomer\" (change)=\"stayTrue()\" formControlName=\"existingCustomer\" required>\r\n                                            </mat-slide-toggle>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div fxFlex=\"40%\"  fxFlex.xs=\"100%\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\" style=\"padding-left: 15px;\">\r\n                                <mat-label>CIF Number</mat-label>\r\n                                <input matInput name=\"cifNumber\" formControlName=\"cifNumber\" (keypress)=\"_keyPress($event)\" \r\n                                \r\n                                (keyup)=keyUpevent($event) required />\r\n                                <mat-error *ngIf=\"!guarantorDetailsForm.get('cifNumber').valid && guarantorDetailsForm.get('cifNumber').touched\" >\r\n                                    &nbsp;&nbsp; CIF Number is Required!\r\n                                </mat-error>\r\n                                 <mat-error class=\"err-msg\" *ngIf=\"isDuplicateCIF\">Duplicate CIF Number</mat-error>\r\n                                \r\n                            </mat-form-field>\r\n                        </div>\r\n                      \r\n                            <div fxFlex=\"10%\" class=\"p-2\" fxFlex.xs=\"100%\" class=\"fechButtonDiv float-end\" style=\"padding-left: 13px;\">\r\n                                <p class=\"fetchButton\" (click)=\"fetchByCif(guarantorDetailsForm.get('cifNumber').value)\" style=\"padding-left: 13px;\"> Fetch</p>\r\n                              </div>\r\n                       \r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label class=\"p-3\">Relationship with Customer</mat-label>\r\n                                <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                                    <mat-select name=\"rtype\" formControlName=\"relationWithCustomer\" placeholder=\"Select\" (selectionChange)=\"onChangeData($event.value)\"\r\n                                                disableOptionCentering [value]=\"relationshipType\" required>\r\n                                        <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                        <mat-option *ngFor=\"let relationshipType of arrayRelationshipType\"\r\n                                         [value]=\"relationshipType\">\r\n                                             {{relationshipType}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!guarantorDetailsForm.get('relationWithCustomer').valid && guarantorDetailsForm.get('relationWithCustomer').touched\" >\r\n                                    &nbsp;&nbsp; Relationship with Customer is Required!\r\n                                </mat-error> \r\n                                <mat-error *ngIf=\" !prefixFlag\">\r\n                                    &nbsp; Prefix and Relationship with Customer does not match!\r\n                                 </mat-error>\r\n                                </mat-form-field>\r\n                            </div>                            \r\n                        </div>\r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label class=\"p-3\">Prefix</mat-label>\r\n                                <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                                    <mat-select name=\"prefix\" formControlName=\"prefix\" required \r\n                                    disableOptionCentering placeholder=\"Select\" (selectionChange)=\"onChangeData(guarantorDetailsForm.get('relationWithCustomer').value)\">\r\n                                        <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                        <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                          {{prefix}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!guarantorDetailsForm.get('prefix').valid && guarantorDetailsForm.get('prefix').touched\" >\r\n                                    &nbsp;&nbsp; Prefix is Required!\r\n                                </mat-error>\r\n                                </mat-form-field>\r\n                            </div>                           \r\n                        </div>\r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label class=\"p-3\">First Name</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName\">               -->\r\n                                    <input matInput name=\"firstName\" formControlName=\"firstName\" \r\n                                        (keypress)=\"letterOnly($event)\" required/>                        \r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!guarantorDetailsForm.get('firstName').valid && guarantorDetailsForm.get('firstName').touched\" >\r\n                                    &nbsp;&nbsp; First Name is Required!\r\n                                </mat-error>\r\n                                </mat-form-field>\r\n                            </div>                             \r\n                        </div>\r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label class=\"p-3\">Middle Name</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName\">               -->\r\n                                    <input matInput name=\"middleName\" formControlName=\"middleName\"\r\n                                        (keypress)=\"letterOnly($event)\" />                        \r\n                                <!-- </mat-card>                                 -->\r\n                                </mat-form-field>\r\n                            </div>                            \r\n                        </div>\r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label class=\"p-3\">Last Name</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName\">               -->\r\n                                    <input matInput name=\"lastName\" formControlName=\"lastName\"\r\n                                        (keypress)=\"letterOnly($event)\"  required/>                        \r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!guarantorDetailsForm.get('lastName').valid && guarantorDetailsForm.get('lastName').touched\" >\r\n                                    &nbsp;&nbsp; Last Name is Required!\r\n                                </mat-error>\r\n                                </mat-form-field>\r\n                            </div>                            \r\n                        </div>\r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label class=\"p-3\">Date of Birth</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName1\" style=\"height:48px;\"> -->\r\n                                    <input matInput name=\"dateOfBirth\" class=\"alignment\" formControlName=\"dateOfBirth\" placeholder=\"DD/MM/YYYY\"\r\n                                    [matDatepicker]=\"pickerDOB\" [min]=\"minDate\" [max]=\"maxDate\" readonly required/>\r\n                              \r\n                                    <!-- <div fxFlex=\"8%\" id=\"toggle\"> -->\r\n                                       <mat-datepicker-toggle matSuffix [for]=\"pickerDOB\"></mat-datepicker-toggle>\r\n                                       <mat-datepicker #pickerDOB></mat-datepicker>\r\n                                    <!-- </div> -->\r\n                                <!-- </mat-card>                             -->\r\n                                <mat-error *ngIf=\"!guarantorDetailsForm.get('dateOfBirth').valid && guarantorDetailsForm.get('dateOfBirth').touched\" >\r\n                                    &nbsp;&nbsp; Date of Birth is Required!\r\n                                </mat-error>  \r\n                                </mat-form-field>                                                    \r\n                            </div>                            \r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                            <div class=\"card-title-text p-2\">&nbsp;&nbsp; Address </div>\r\n                        </div>\r\n                        <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\">\r\n\r\n\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">Building</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName\">               -->\r\n                                        <input matInput name=\"building\" formControlName=\"building\"\r\n                                            (keypress)=\"keyPressAlphanumeric($event)\"  />                        \r\n                                    <!-- </mat-card> -->\r\n                                    <mat-error *ngIf=\"(guarantorDetailsForm.get('building').valid && guarantorDetailsForm.get('building').touched && !guarantorDetailsForm.get('building').valid) || (guarantorDetailsForm.get('building').touched && guarantorDetailsForm.get('building').hasError('pattern'))\"  >\r\n                                        &nbsp;&nbsp; Building is Required!\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                            \r\n                            </div>\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">Street</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName\">               -->\r\n                                        <input matInput name=\"street\" formControlName=\"street\"\r\n                                            (keypress)=\"keyPressAlphanumeric($event)\"  />                        \r\n                                    <!-- </mat-card> -->\r\n                                    <mat-error *ngIf=\"(guarantorDetailsForm.get('street').valid && guarantorDetailsForm.get('street').touched && !guarantorDetailsForm.get('street').valid) || (guarantorDetailsForm.get('street').touched && guarantorDetailsForm.get('street').hasError('pattern'))\"  >\r\n                                        &nbsp;&nbsp; Street is Required!\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                            \r\n                            </div>\r\n                            \r\n\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">Address 1</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName\">               -->\r\n                                       <input matInput name=\"building\" formControlName=\"address1\" required/>                         \r\n                                    <!-- </mat-card> -->\r\n                                    <mat-error *ngIf=\"(guarantorDetailsForm.get('address1').valid && guarantorDetailsForm.get('address1').touched && !guarantorDetailsForm.get('address1').valid) || (guarantorDetailsForm.get('address1').touched && guarantorDetailsForm.get('address1').hasError('pattern'))\" >\r\n                                    &nbsp;&nbsp; Address 1 is Required!\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                \r\n                            </div>\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">Address 2</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName\">               -->\r\n                                        <input matInput name=\"street\" formControlName=\"address2\" required/>                        \r\n                                    <!-- </mat-card> -->\r\n                                    <mat-error *ngIf=\"(guarantorDetailsForm.get('address2').valid && guarantorDetailsForm.get('address2').touched && !guarantorDetailsForm.get('address2').valid) || (guarantorDetailsForm.get('address2').touched && guarantorDetailsForm.get('address2').hasError('pattern'))\" >\r\n                                        &nbsp;&nbsp;Address 2 is Required!\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                 \r\n                            </div>\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">Country *</mat-label>\r\n                                   <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                                      <mat-select name=\"country\" formControlName=\"country\" disableOptionCentering\r\n                                        (selectionChange)=\"getStateName($event.value)\"\r\n                                     (selectionChange)=\"getCityName($event.value)\" placeholder=\"Select\">\r\n                                        <mat-option value=\"\">Select</mat-option>\r\n                                        <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                  {{country}}\r\n                                    </mat-option>\r\n                                       </mat-select>\r\n                                   <!-- </mat-card> -->\r\n                                   <mat-error *ngIf=\"!guarantorDetailsForm.get('country').valid && guarantorDetailsForm.get('country').touched\" >\r\n                                       &nbsp;&nbsp; Country is Required!\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>    \r\n                            </div>\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">State *</mat-label>\r\n                                   <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                                      <mat-select name=\"state\" formControlName=\"state\" disableOptionCentering\r\n                                            (selectionChange)=\"getCityName($event.value)\" placeholder=\"Select\">\r\n                                        <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                        <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n                                              {{state.stateName}}</mat-option>\r\n                                       </mat-select>\r\n                                   <!-- </mat-card> -->\r\n                                   <mat-error *ngIf=\"!guarantorDetailsForm.get('state').valid && guarantorDetailsForm.get('state').touched\" >\r\n                                    &nbsp;&nbsp; State is Required!\r\n                                   </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                 \r\n                            </div>\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">City</mat-label>\r\n                                   <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                                      <mat-select name=\"city\" formControlName=\"city\" required placeholder=\"Select\" disableOptionCentering>\r\n                                        <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                        <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}\r\n                                        </mat-option>\r\n                                       </mat-select>\r\n                                   <!-- </mat-card> -->\r\n                                   <mat-error *ngIf=\"!guarantorDetailsForm.get('city').valid && guarantorDetailsForm.get('city').touched\" >\r\n                                       &nbsp;&nbsp; City is Required!\r\n                                    </mat-error> \r\n                                    </mat-form-field>\r\n                                </div>                                 \r\n                            </div>\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">Zip Code</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName\">               -->\r\n                                       <input matInput name=\"zipCode\" formControlName=\"zipCode\" minlength=\"5\" maxlength=\"6\" onlyNumber type=\"text\" \r\n                                    (keypress)=_keyPress($event) required/>                         \r\n                                    <!-- </mat-card> -->\r\n                                      <mat-error *ngIf=\"!guarantorDetailsForm.get('zipCode').valid && guarantorDetailsForm.get('zipCode').touched\" >\r\n                                        &nbsp;&nbsp;Valid Zip Code is Required!(5-10 digits)\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                \r\n                            </div>\r\n                        \r\n                           \r\n                        </div> \r\n                    </div>\r\n                    <div>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                            <div class=\"card-title-text p-2\">&nbsp;&nbsp; Contact Information</div>\r\n                        </div>\r\n                        <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\">\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">Phone Number</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName\">               -->\r\n                                       <input matInput name=\"phoneNumber\" formControlName=\"phoneNumber\"   minlength=10 maxlength=10\r\n                                        (keypress)=\"_keyPress($event)\" required/>                            \r\n                                    <!-- </mat-card> -->\r\n                                     <!-- <mat-error *ngIf=\"!guarantorDetailsForm.get('phoneNumber').valid && guarantorDetailsForm.get('phoneNumber').touched\" >\r\n                                        &nbsp;&nbsp; Phone Number is Required!\r\n                                    </mat-error> -->\r\n                                    <mat-error *ngIf=\"guarantorDetailsForm.get('phoneNumber').hasError('required') && guarantorDetailsForm.get('phoneNumber').touched\">\r\n                                        &nbsp;&nbsp; Phone Number is Required!\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf=\"guarantorDetailsForm.get('phoneNumber').hasError('pattern') && guarantorDetailsForm.get('phoneNumber').touched\">\r\n                                        &nbsp;&nbsp; Please Enter Valid Phone Number\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                   \r\n                            </div>\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">Mobile Number</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName\">               -->\r\n                                       <input matInput name=\"mobileNumber\" formControlName=\"mobileNumber\" minlength=10 maxlength=\"10\" (keypress)=\"_keyPress($event)\" required />                          \r\n                                    <!-- </mat-card> -->\r\n                                     <!-- <mat-error *ngIf=\"!guarantorDetailsForm.get('mobileNumber').valid && guarantorDetailsForm.get('mobileNumber').touched\" >\r\n                                        &nbsp;&nbsp; Mobile Number is Required!\r\n                                    </mat-error> -->\r\n                                    <mat-error *ngIf=\"guarantorDetailsForm.get('mobileNumber').hasError('required') && guarantorDetailsForm.get('mobileNumber').touched\">\r\n                                        &nbsp;&nbsp; Mobile Number is Required!\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf=\"guarantorDetailsForm.get('mobileNumber').hasError('pattern') && guarantorDetailsForm.get('mobileNumber').touched\">\r\n                                        &nbsp;&nbsp; Please Enter Valid Mobile Number\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                 \r\n                            </div>\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label class=\"p-3\">E-mail</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName\">               -->\r\n                                       <input matInput name=\"emailAddress\" formControlName=\"emailAddress\" required/>                          \r\n                                    <!-- </mat-card> -->\r\n                                     <mat-error *ngIf=\"!guarantorDetailsForm.get('emailAddress').valid && guarantorDetailsForm.get('emailAddress').touched\" >\r\n                                        &nbsp;&nbsp; E-mail is Required!\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                 \r\n                            </div>\r\n                        </div> \r\n                    </div>                    \r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n            <button type=\"button\" mat-button rounded class=\"Backbtn\" (click)=\"goBack()\" >\r\n                Back\r\n            </button>\r\n            <button type=\"button\" mat-raised-button class=\"Nextbtn\" [disabled]=\"!guarantorDetailsForm.get('cifNumber').valid || !guarantorDetailsForm.get('relationWithCustomer').valid || !guarantorDetailsForm.get('prefix').valid\r\n            || !guarantorDetailsForm.get('firstName').valid || !guarantorDetailsForm.get('lastName').valid || !guarantorDetailsForm.get('dateOfBirth').valid  || !guarantorDetailsForm.get('address1').valid || !guarantorDetailsForm.get('address2').valid\r\n            ||  !guarantorDetailsForm.get('mobileNumber').valid || !guarantorDetailsForm.get('emailAddress').valid\" (click)=\"submitForm()\" color=\"primary\">\r\n                Next \r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AccountService } from '../../account.service';\r\nimport { months } from 'moment';\r\nimport { DatePipe } from '@angular/common'\r\nimport * as moment from 'moment';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-admission-details',\r\n  templateUrl: './admission-details.component.html',\r\n  styleUrls: ['./admission-details.component.scss']\r\n})\r\nexport class AdmissionDetailsComponent implements OnInit {\r\n  admissionDetailsForm: FormGroup;\r\n  loanaccountID: any;\r\n  showEditOption: boolean = false;\r\n  addmissionDetails: any;\r\n  arrayCountry: any[] = [];\r\n  loanInfo: any;\r\n\r\n  constructor\r\n    (\r\n      private fb: FormBuilder,\r\n      private ls: LocalStoreService,\r\n      private loader: AppLoaderService,\r\n      private apiService: ApiService,\r\n      private router: Router,\r\n      private snack: MatSnackBar,\r\n      public datepipe: DatePipe,\r\n      private accountService :AccountService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildformGroup();\r\n    this.getCountryName(\"country\");\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    let isAdmissionDetailscreen: boolean = JSON.parse(this.ls.getItem('ADMISSION_DETAIL_DONE'));\r\n   setTimeout(() => {\r\n    if (this.loanaccountID != null && isAdmissionDetailscreen) {\r\n      this.showEditOption = true;\r\n      this.getAdmissionDetails();\r\n    }\r\n    else {\r\n      this.showEditOption = false;\r\n      this.buildformGroup();\r\n    }\r\n   }, 10);\r\n   \r\n  }\r\n\r\n  buildformGroup(data?) {\r\n    this.admissionDetailsForm = this.fb.group({\r\n      loanRequestedFor: [data ? data.loanRequestedFor : '', Validators.required],\r\n      modeOfStudy: [data ? data.modeOfStudy : '', Validators.required],\r\n      institution: [data ? data.institution : '', Validators.required],\r\n      country: [data ? data.country : '', Validators.required],\r\n      specialization: [data ? data.specialization : '', Validators.required],\r\n      employmentPotential: [data ? data.employmentPotential : '', Validators.required],\r\n      costOfCourse: [data ? data.costOfCourse : '', Validators.required],\r\n      scholarshipOrBusinessEligible: [data ? data.scholarshipOrBusinessEligible : false, Validators.required],\r\n      admissionStatus: [data ? data.admissionStatus : '', Validators.required],\r\n      institutionRanking: [data ? data.institutionRanking : '', Validators.required],\r\n      courseCommencementDate: [data ? this.convertDate(data.courseCommencementDate) : '', Validators.required],\r\n      courseDuration: [data ? data.courseDuration : '', Validators.required],\r\n      proposedCourseOfStudy: [data ? data.proposedCourseOfStudy : '', Validators.required],\r\n      university: [data ? data.university : '', Validators.required],\r\n      projectedEarning: [data ? data.projectedEarning : '', Validators.required],\r\n      source: [data ? data.source : '', Validators.required]\r\n    })\r\n  }\r\n\r\n  getAdmissionDetails() {\r\n    this.loader.open();\r\n    this.apiService.getAdmissionDetailsByLoanAccId(this.loanaccountID).subscribe((addmissionDetails) => {\r\n      this.loader.close();\r\n      this.addmissionDetails = addmissionDetails;\r\n      console.log(this.addmissionDetails);\r\n      this.buildformGroup(this.addmissionDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/loan/account/loan-details`]);\r\n  }\r\n\r\n  submitForm() {\r\n    let payload: any = {};\r\n    payload = this.admissionDetailsForm.value;\r\n    payload.loanAccountId = this.loanaccountID;\r\n    this.apiService.upsertAdmissionDetails(payload).subscribe(data => {\r\n      console.log(\"data\", data);\r\n      if (data != null) {\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.next();\r\n      }\r\n    })\r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem('ADMISSION_DETAIL_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/loan/account/customer-information`]);\r\n  }\r\n\r\n  monthDiff(d1, d2) {\r\n    var months;\r\n    months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n    months -= d1.getMonth();\r\n    months += d2.getMonth();\r\n    return months <= 0 ? 0 : months;\r\n  }\r\n\r\n  dateRangeChange(dateRangeStart: HTMLInputElement, dateRangeEnd: HTMLInputElement) {\r\n    const date1 = new Date(dateRangeStart.value);\r\n    const date2 = new Date(dateRangeEnd.value);\r\n    if(dateRangeStart.value && dateRangeEnd.value){\r\n      this.admissionDetailsForm.controls['courseDuration'].setValue(this.monthDiff(date1,date2));\r\n    }\r\n    //console.log(months,this.monthDiff);\r\n  }\r\n   convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DD'); // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n   getCountryName(key: string) {\r\n     this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){     \r\n          this.arrayCountry.push(data[i].countryName);\r\n          this.arrayCountry.sort();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-90\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title\"><b>Admission Details</b></div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n        <mat-card class=\"p-0\">\r\n            <mat-card-title class=\"\">\r\n                <div class=\"card-title-text\">Admission Details</div>\r\n                <mat-divider></mat-divider>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form *ngIf=\"admissionDetailsForm\" [formGroup]=\"admissionDetailsForm\">\r\n\r\n                    <div fxLayout=\"row\" class=\"pt-16\" fxLayoutGap=\"30px\" fxLayoutAlign=\"start center\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Loan Requested for</mat-label>\r\n                                    <mat-select name=\"loanRequestedFor\" formControlName=\"loanRequestedFor\" \r\n                                                disableOptionCentering required>\r\n                                        <mat-option value=\"\"> Select </mat-option>\r\n                                        <mat-option value=\"test\">Overseas</mat-option>\r\n                                        <mat-option value=\"Home\">Home</mat-option>\r\n                                        <mat-option value=\"Education\">Education</mat-option>\r\n                                        <mat-option value=\"Business\">Business</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('loanRequestedFor').valid && admissionDetailsForm.get('loanRequestedFor').touched\" >\r\n                                     Loan Requested for is Required!\r\n                                    </mat-error>  \r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Mode of Study</mat-label>\r\n                                    <mat-select name=\"modeOfStudy\" formControlName=\"modeOfStudy\" required disableOptionCentering>\r\n                                        <mat-option value=\"\"> Select </mat-option>\r\n                                        <mat-option value=\"test\">Full Time</mat-option>\r\n                                        <mat-option value=\"test\">Part Time</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('modeOfStudy').valid && admissionDetailsForm.get('modeOfStudy').touched\" >\r\n                                      Mode of Study is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Institution</mat-label>\r\n                                    <input matInput name=\"institution\" formControlName=\"institution\" required placeholder=\"Institution\" \r\n                                    oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"/>\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('institution').valid && admissionDetailsForm.get('institution').touched\" >\r\n                                     Institution is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Country</mat-label>\r\n                                    <mat-select name=\"country\" formControlName=\"country\" required disableOptionCentering>\r\n                                        <mat-option value=\"\">Select</mat-option>\r\n                                        <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                          {{country}}\r\n                                        </mat-option>\r\n                                      </mat-select>\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('country').valid && admissionDetailsForm.get('country').touched\" >\r\n                                       Country is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Course Duration</mat-label>\r\n                                    <mat-date-range-input [rangePicker]=\"rangePicker\" required>\r\n                                        <input matStartDate #dateRangeStart placeholder=\"DD/MM/YYYY\" readonly>\r\n                                        <input matEndDate #dateRangeEnd (dateChange)=\"dateRangeChange(dateRangeStart, dateRangeEnd)\" placeholder=\"DD/MM/YYYY\" readonly>\r\n                                    </mat-date-range-input>\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"rangePicker\"></mat-datepicker-toggle>\r\n                                    <mat-date-range-picker #rangePicker>\r\n                                        <mat-date-range-picker-actions>\r\n                                            <button mat-button matDateRangePickerCancel>Cancel</button>\r\n                                            <button mat-raised-button color=\"primary\"\r\n                                                matDateRangePickerApply>Apply</button>\r\n                                        </mat-date-range-picker-actions>\r\n                                    </mat-date-range-picker>\r\n                                      <!-- <mat-error *ngIf=\"!admissionDetailsForm.get('loanRequestedFor').valid && admissionDetailsForm.get('loanRequestedFor').touched\" >\r\n                                    &nbsp;&nbsp; Course Duration is Required!\r\n                                  </mat-error> -->\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Specialization</mat-label>\r\n                                    <input matInput name=\"specialization\" formControlName=\"specialization\" placeholder=\"Specialization\" required \r\n                                    oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"/>\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('specialization').valid && admissionDetailsForm.get('specialization').touched\" >\r\n                                     Specialization is Required!\r\n                                    </mat-error> \r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Employment Potential</mat-label>\r\n                                    <input matInput name=\"employmentPotential\" formControlName=\"employmentPotential\" placeholder=\"Employment Potential Value\" (keypress)=\"_keyPress($event)\" required />\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('employmentPotential').valid && admissionDetailsForm.get('employmentPotential').touched\" >\r\n                                       Employment Potential is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field> \r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Cost of Course (In GBP)s</mat-label>\r\n                                    <input matInput  name=\"costOfCourse\" formControlName=\"costOfCourse\" placeholder=\"Cost of Course\"  (keypress)=\"_keyPress($event)\" required />\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('costOfCourse').valid && admissionDetailsForm.get('costOfCourse').touched\" >\r\n                                       Cost Of Course is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Admission Status</mat-label>\r\n                                    <mat-select name=\"admissionStatus\" formControlName=\"admissionStatus\" required disableOptionCentering>\r\n                                        <mat-option value=\"\"> Select </mat-option>\r\n                                        <mat-option value=\"test\">Under Process</mat-option>\r\n                                        <mat-option value=\"test\">Confirmed</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('admissionStatus').valid && admissionDetailsForm.get('admissionStatus').touched\" >\r\n                                      Admission Status is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Proposed Course of Study</mat-label>\r\n                                    <input matInput name=\"proposedCourseOfStudy\" formControlName=\"proposedCourseOfStudy\" placeholder=\"Study Purpose\" required \r\n                                    oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"/>\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('proposedCourseOfStudy').valid && admissionDetailsForm.get('proposedCourseOfStudy').touched\" >\r\n                                      Proposed Course of Study is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>University / School</mat-label>\r\n                                    <input matInput name=\"university\" formControlName=\"university\" placeholder=\"university/School\" required \r\n                                    oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"/>\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('university').valid && admissionDetailsForm.get('university').touched\" >\r\n                                     University / School is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Institution Ranking</mat-label>\r\n                                    <input matInput name=\"institutionRanking\" formControlName=\"institutionRanking\" placeholder=\"Ranking\" (keypress)=\"_keyPress($event)\" required />\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('institutionRanking').valid && admissionDetailsForm.get('institutionRanking').touched\" >\r\n                                       Institution Ranking is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Course Commencement Date</mat-label>\r\n                                    <input matInput name=\"courseCommencementDate\" class=\"alignment\" formControlName=\"courseCommencementDate\" placeholder=\"DD/MM/YYYY\"\r\n                                      [matDatepicker]=\"picker\" [min]=\"minDate\" [max]=\"maxDate\" required/>\r\n                                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                  <mat-datepicker #picker></mat-datepicker>                              \r\n                                \r\n                                    <!-- <input matInput [matDatepicker]=\"picker\" name=\"courseCommencementDate\" formControlName=\"courseCommencementDate\" readonly required>\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #picker></mat-datepicker> -->\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('courseCommencementDate').valid && admissionDetailsForm.get('courseCommencementDate').touched\" >\r\n                                     Course Commencement Date is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Projected Earning</mat-label>\r\n                                    <input matInput name=\"projectedEarning\" formControlName=\"projectedEarning\" placeholder=\"Projected Earning\" (keypress)=\"_keyPress($event)\" required />\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('projectedEarning').valid && admissionDetailsForm.get('projectedEarning').touched\" >\r\n                                       Project Earning is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"p-16\">\r\n                                <div class=\"pb-16\">\r\n                                    <div class=\"pb-4\">\r\n                                        <div class=\"pb-1\">                                            \r\n                                                Scholarship/ Business Eligible &nbsp;&nbsp;&nbsp;\r\n                                                <mat-slide-toggle name=\"scholarshipOrBusinessEligible\" formControlName=\"scholarshipOrBusinessEligible\"\r\n                                                [checked]=\"scholarshipOrBusinessEligible\">\r\n                                            </mat-slide-toggle>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Source (In GBP)</mat-label>\r\n                                    <input matInput name=\"source\" formControlName=\"source\" placeholder=\"Source\" (keypress)=\"_keyPress($event)\" required />\r\n                                    <mat-error *ngIf=\"!admissionDetailsForm.get('source').valid && admissionDetailsForm.get('source').touched\" >\r\n                                       School (In GBP) is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n                        <button mat-button rounded  (click)=\"goBack()\">\r\n                            Back\r\n                        </button>\r\n                        <button type=\"button\" class=\"Nextbtn\" [disabled]=\"!admissionDetailsForm.valid\" (click)=\"submitForm()\" mat-raised-button color=\"primary\">\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { PostOfferAmendmentSummaryComponent } from './post-offer-amendment-summary/post-offer-amendment-summary.component';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { PostOfferAmendmentStageSummaryComponent } from './post-offer-amendment-stage-summary/post-offer-amendment-stage-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-post-offer-amend-stage',\r\n  templateUrl: './post-offer-amend-stage.component.html',\r\n  styleUrls: ['./post-offer-amend-stage.component.scss'],\r\n  animations:rumangoAnimations\r\n})\r\nexport class PostOfferAmendStageComponent implements OnInit {\r\n  ispostOfferAmendStageDone: boolean;\r\n  isOfferIssueRejectScreen: boolean;\r\n\r\n  constructor(private router:Router,public dialog: MatDialog, private ls: LocalStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ispostOfferAmendStageDone = this.ls.getItem('post-offer-amend-stage');\r\n    this.isOfferIssueRejectScreen = this.ls.getItem('OfferIssueRejectScreen');\r\n  }\r\n\r\n  goTopostOfferAmendmentSummary(): void {\r\n    const dialogRef = this.dialog.open(PostOfferAmendmentSummaryComponent, {\r\n      width: '75%',\r\n      backdropClass: 'dialog-bg-trans',\r\n      height: '60%',\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n\r\n  }\r\n\r\n  gotopostOfferAmendStageSummary(): void {\r\n    this.router.navigate([`/loan/account/post-offer-amend-stage-summary/`]);\r\n\r\n  }\r\n\r\n  // goToOfferIssue(){\r\n  //   // this.router.navigate([`/loan/account/loan-details`]);\r\n  //   this.router.navigate([`/loan/account/offer-issue`]);\r\n  // }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n        <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n      </div> -->\r\n      <div class=\"profile-pic text-center\">\r\n         <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Create Retail Loan Account</b></div>\r\n        <div class=\"text-muted\">\r\n            Open a Retail Loan Account with XYZ Bank in a better way. ­­­­\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-8\" *ngIf = \"ispostOfferAmendStageDone\">\r\n      <mat-card \r\n        [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n      >\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div fxFlex=\"10\">\r\n            <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n          </div>\r\n          <div fxFlex=\"30\">\r\n            <h6>Post Offer Amendment Stage Completed</h6>\r\n          </div>\r\n          <span fxFlex></span>\r\n          <button\r\n         \r\n            mat-button\r\n            color=\"primary\"\r\n            (click)=\"gotopostOfferAmendStageSummary()\"\r\n          >\r\n            View Summary\r\n          </button>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <!-- <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>1. Offer Issue</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                Enables the approver to capture offer issue date\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/Group 673.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <a mat-button\r\n            color=\"primary\"\r\n            (click)=\"goToOfferIssue()\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div> -->\r\n\r\n\r\n\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>1. Post Offer Amendment </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\"  class=\"notActive\">\r\n              <p class=\"text-align\">\r\n                Post Offer Amendment details are displayed.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/undraw_Post_re_mtr_4.svg'\r\n                \"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"!ispostOfferAmendStageDone\">\r\n            <button\r\n            \r\n            mat-button\r\n            color=\"primary\"\r\n            [routerLink]=\"[ '/loan/account/post-offer-amendment' ]\"\r\n          >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"ispostOfferAmendStageDone\">\r\n          <button   \r\n          \r\n          mat-button\r\n          (click)=\"goTopostOfferAmendmentSummary()\"\r\n          color=\"primary\"\r\n          >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n      </ng-container>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card>\r\n        <mat-card-header>[disabled] = \"!isOfferIssueRejectScreen\"\r\n          <mat-card-title>3. Loan Disbursement Details</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                Loan Disbursement Details are displayed\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/undraw_personal_information_re_vw8a.svg'\r\n                \"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n         \r\n            <button\r\n            mat-button\r\n            color=\"primary\"\r\n            [routerLink]=\"[ '/loan/account/loan-disbursement' ]\"\r\n          >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div> -->\r\n\r\n\r\n\r\n    <!-- <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>4. Loan Repayment Details</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                All the primary customer information details are displayed\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/undraw_personal_information_re_vw8a.svg'\r\n                \"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-1\">\r\n          </div>\r\n        </mat-card-content>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n         \r\n            <button\r\n            mat-button\r\n            color=\"primary\"\r\n            [routerLink]=\"[ '/loan/account/loan-repayment' ]\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n      \r\n    </div> -->\r\n  </div>\r\n  \r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/home/account.service';\r\nimport { Router } from '@angular/router';\r\nimport { AssessmentSummaryComponent } from './assessment-summary/assessment-summary.component';\r\nimport { LoanViewSummaryComponent } from './loan-view-summary/loan-view-summary.component';\r\nimport { OfferAcceptRejectSumaryComponent } from './offer-accept-reject-summary/offer-accept-reject-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-account-approval-stage',\r\n  templateUrl: './account-approval-stage.component.html',\r\n  styleUrls: ['./account-approval-stage.component.scss'],\r\n  animations:rumangoAnimations\r\n})\r\nexport class AccountApprovalStageComponent implements OnInit {\r\n\r\n  isAccountApproveStageDone: boolean = false;\r\n  isAssessmentStageDone: boolean = false;\r\n  isOfferAcceptRejectStageDone: boolean = false;\r\n  isLoanSummaryStageDone: boolean = false;\r\n\r\n  constructor( private router: Router,public dialog: MatDialog,private ls: LocalStoreService,private cdr:ChangeDetectorRef ,private accountService:AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isAccountApproveStageDone = this.ls.getItem('account-approval');\r\n    this.isAssessmentStageDone = this.ls.getItem('assessment-details');\r\n    this.isOfferAcceptRejectStageDone = this.ls.getItem('offer-acceptReject-details');\r\n    this.isLoanSummaryStageDone = this.ls.getItem('loan-summary-details');\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      \r\n      // Parent 1\r\n      this.isAccountApproveStageDone = this.ls.getItem('account-approval');\r\n      this.isAssessmentStageDone = this.ls.getItem('assessment-details');\r\n      this.isOfferAcceptRejectStageDone = this.ls.getItem('offer-acceptReject-details');\r\n      this.isLoanSummaryStageDone = this.ls.getItem('loan-summary-details');\r\n      // Parent 1 childs nav\r\n      \r\n    \r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  // openDialog(): void {\r\n  //   let dialogRef = this.dialog.open(AssessmentSummaryComponent, {\r\n  //     width: '800px',\r\n  //     height:'600px',\r\n  //     // data: { name: this.name, animal: this.animal }\r\n  //   });\r\n  // }\r\n\r\n  goToAssessmentSummary(): void {\r\n    const dialogRef = this.dialog.open(AssessmentSummaryComponent, {\r\n      width: '75%',\r\n      backdropClass: 'dialog-bg-trans',\r\n      height: '50%',\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  openDialog1(): void {\r\n    const dialogRef = this.dialog.open(OfferAcceptRejectSumaryComponent, {\r\n      width: '75%',\r\n      backdropClass: 'dialog-bg-trans',\r\n      height: '60%',\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n\r\n  }\r\n\r\n  openDialog2(): void {\r\n    const dialogRef = this.dialog.open(LoanViewSummaryComponent, {\r\n      width: '75%',\r\n      backdropClass: 'dialog-bg-trans',\r\n      height: '70%',\r\n      disableClose: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n\r\n  }\r\n\r\n  gotoAccountApprovalSummary(){\r\n    this.router.navigate([`/loan/account-approval/account-approval-summary-details/`]);\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n        <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n      </div> -->\r\n      <div class=\"profile-pic text-center\">\r\n        <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Create Retail Loan Account</b></div>\r\n        <div class=\"text-muted\">\r\n            Open a Retail Loan Account with XYZ Bank in a better way. ­­­­\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\"  class=\"mt-8\" *ngIf=\"!isAccountApproveStageDone\">\r\n      <mat-card \r\n        [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n      >\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div fxFlex=\"10\">\r\n            <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n          </div>\r\n          <div fxFlex=\"30\">\r\n            <h3>Account Approval Stage Completed</h3>\r\n          </div>\r\n          <span fxFlex></span>\r\n          <button\r\n            mat-button\r\n            color=\"primary\"\r\n            (click)=\"gotoAccountApprovalSummary()\"\r\n            class=\"btn-color\"\r\n          >\r\n            View Summary\r\n            <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n      <!-- Card 1 start-->\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>1. Assessment Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                Basic Details for Loan Account is captured.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/Group 673.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\"  *ngIf=\"isAssessmentStageDone\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <a\r\n            mat-button\r\n            color=\"primary\"\r\n            [routerLink]=\"['/loan/account-approval/assessment-details/']\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n          <a   \r\n          *ngIf=\"isAssessmentStageDone\"\r\n          mat-button\r\n          (click)=\"goToAssessmentSummary()\"\r\n          color=\"primary\"\r\n          >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </a>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>2. Offer Accept / Reject Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                Details about asset or vehicle or admission is added.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/undraw_personal_information_re_vw8a.svg'\r\n                \"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\"  *ngIf=\"isOfferAcceptRejectStageDone\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"isAssessmentStageDone && isOfferAcceptRejectStageDone; else showCustomer\">\r\n            <a\r\n              mat-button\r\n              (click)=\"openDialog1()\"\r\n              color=\"primary\" \r\n            >\r\n          <!-- *ngIf=\"isAssessmentStageDone && isOfferAcceptRejectStageDone; else showCustomer\" -->\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n          </ng-container>        \r\n          <ng-template  #showCustomer>\r\n            <button\r\n            mat-button\r\n            [routerLink]=\"['/loan/account-approval/offer-acceptReject-details/']\"\r\n            \r\n            color=\"primary\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n          </ng-template>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>\r\n    <!-- card 3 start -->\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>3. Loan Summary Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>All the primary information about the customer is captured.</p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"'assets/images/svg/undraw_Terms_re_6ak4.svg'\"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\"  *ngIf=\"isLoanSummaryStageDone\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"isOfferAcceptRejectStageDone && isLoanSummaryStageDone; else showCustomer\">\r\n            <a\r\n            *ngIf=\"isLoanSummaryStageDone\"\r\n            mat-button\r\n            (click)=\"openDialog2()\"\r\n            color=\"primary\"\r\n          >\r\n          <!-- *ngIf=\"isOfferAcceptRejectStageDone && isLoanSummaryStageDone; else showCustomer\" -->\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n          </ng-container>        \r\n          <ng-template #showCustomer>\r\n            <button\r\n            mat-button\r\n            [routerLink]=\"['/loan/account-approval/loan-summary-details/']\"      \r\n            color=\"primary\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n          </ng-template>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <!-- Card 3 end -->\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { AccountService } from '../../account.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-details',\r\n  templateUrl: './loan-details.component.html',\r\n  styleUrls: ['./loan-details.component.scss']\r\n})\r\nexport class LoanDetailsComponent implements OnInit {\r\n loanForm:FormGroup;\r\n showEditOption: boolean = false;\r\n loanDetails: any;\r\n productName: any;\r\n arrayAccountBranch: any;\r\n entityName: string;\r\n accountType: any;\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  resultOfScreen: string[];\r\n  screenArray: any;\r\n  screenArrayData: any;\r\n  loan_ammount: any;\r\n  estimted_cost: any;\r\n  flag: boolean=false;\r\n  flag1: boolean=false;\r\n  branchName: any;\r\n  currencyData: any;\r\n  isHomeLoan: boolean=false;\r\n  isVehicleLoan:boolean=false;\r\n  minDate = new Date();\r\n  maxDate = new Date();\r\n  selectedDay: number = 1;\r\n // day: number;\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  //year: number;\r\n  years: any[] = [];\r\n  loanInfo: any;\r\n\r\n \r\n  constructor(private fb:FormBuilder,private api: ApiService,\r\n    private ls: LocalStoreService,private loader: AppLoaderService,\r\n    private apiService:ApiService, private snack: MatSnackBar,private accountService: AccountService,\r\n    private router: Router) { \r\n      this.maxDate.setDate(this.maxDate.getDate() + 13),\r\n      \r\n      this.loanForm = this.fb.group({\r\n       loanAccountId:[''],\r\n       businessProductName:['',[Validators.required]],\r\n       accountBranch:[''],\r\n       applicationDate:['',[Validators.required]],\r\n       accountType:[''],\r\n       estimatedCost:[''],\r\n       customerContribution:[''],\r\n       loanAmount:[''],\r\n       loanTenure:[''],\r\n       year:[''],\r\n       month:[''],\r\n       day:[''],\r\n       purposeOfLoan:[''],\r\n       accountCurrency:[''],\r\n   \r\n     })}\r\n\r\n  ngOnInit(): void {\r\n    this.selectedYear = new Date().getFullYear();\r\n    // for (let day = this.selectedDay; day <= 31; day++) {\r\n    //   this.days.push(day);\r\n    // }\r\n    // for (let year = this.selectedYear; year >= 2000; year--) {\r\n    //   this.years.push(year);\r\n    // }\r\n    // this.months = [\r\n    //   \"Jan\",\r\n    //   \"Feb\",\r\n    //   \"Mar\",\r\n    //   \"Apr\",\r\n    //   \"May\",\r\n    //   \"Jun\",\r\n    //   \"Jul\",\r\n    //   \"Aug\",\r\n    //   \"Sep\",\r\n    //   \"Oct\",\r\n    //   \"Nov\",\r\n    //   \"Dec\",\r\n    // ];\r\n    for (let year = 0; year <= 50; year++) {\r\n      this.years.push(year+ \" year\");\r\n    }\r\n\r\n    for (let month = 0; month <= 11; month++) {\r\n      this.months.push(month+ \" month\");\r\n    }\r\n\r\n    for (let day = 0; day <= 30; day++) {\r\n      this.days.push(day+ \" day\");\r\n    }\r\n    this.getAccountBranchDetails();\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    console.log(\"this.productaccountID1\",this.loanaccountID);\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    let isLoanDetailsScreen: boolean = JSON.parse(this.ls.getItem('LOAN_DETAIL_DONE'));\r\n    //if (this.loanAccountId != null && isLoanDEtailsScreen) {\r\n      setTimeout(() => {\r\n        if (this.loanaccountID != null && isLoanDetailsScreen) {\r\n          this.showEditOption = true;\r\n          \r\n          this.getAccountDetails();\r\n        } \r\n        else {\r\n          console.log(\"else\");\r\n          this.showEditOption = false;\r\n          this.buildformGroup();\r\n        }\r\n      }, 1);\r\n  \r\n    \r\n    this.getBusinessProductDetails(\"business_product_name\");\r\n\r\n    //this.getAccountType(\"businessProductName\")\r\n  }\r\n\r\n  getAccountDetails(){\r\n    this.loader.open();\r\n    //this.apiService.getAssetValuation(this.loacnAccountId).subscribe((accountDetails) => {\r\n    this.apiService.getLoanDetails(this.loanaccountID).subscribe((accountDetails) => {\r\n      this.loader.close();\r\n      this.loanDetails = accountDetails;\r\n      console.log(this.loanDetails);\r\n      this.buildformGroup(this.loanDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n\r\n  }\r\n  getBusinessProductDetails(key: string){\r\n   this.apiService.getBusinessProductName(key).subscribe((data) => {\r\n      console.log(\"data:: AccountBranch \", data)\r\n      this.arrayAccountBranch = data;\r\n      \r\n       /*console.log(\"this.productName::\", this.productName, this.arrayAccountBranch)\r\n\r\n      this.currencyData = this.arrayAccountBranch.find(x => x.productName == this.productName);\r\n      console.log(\"Currency\", this.currencyData)\r\n\r\n      if (this.currencyData != null || this.currencyData != undefined) {\r\n        this.accountForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n      }*/\r\n\r\n    });\r\n  }\r\n  getAccountType(businessProductName) {\r\n    //this.entityName = \"state\";\r\n    console.log(\"State -- \", businessProductName)\r\n    this.apiService.getAccount(businessProductName).subscribe((data) => {\r\n      console.log(\"data.accountType\",data);\r\n      this.accountType = data.accountTypeName;\r\n      console.log(\"this.accountType\",this.accountType);\r\n      this.loanForm.get('accountType').setValue(data.accountTypeName);\r\n     \r\n    });\r\n  }\r\n  getAccountBranchDetails() {\r\n    //debugger\r\n    this.api.getAccountBranch().subscribe((data) => {\r\n      console.log(\"data:: AccountBranch \", data)\r\n      this.screenArray = data;\r\n      this.screenArrayData=data;\r\n      if (this.screenArray.length == 0) {\r\n        this.screenArray.push(this.branchName);\r\n      }\r\n      console.log(\"this.branchName::\", this.branchName, this.screenArray)\r\n      this.currencyData = this.screenArray.find(x => x.branchName == this.branchName);\r\n      console.log(\"Currency\", this.currencyData)\r\n\r\n      if (this.currencyData != null || this.currencyData != undefined) {\r\n        this.loanForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n      }\r\n\r\n    });\r\n  }\r\n  onChangeBranch(value) {\r\n    this.currencyData = this.screenArray.find(x => x.branchName == value.value);\r\n    if (this.currencyData != null || this.currencyData != undefined) {\r\n      this.loanForm.get('accountCurrency').setValue(this.currencyData.branchCcy);\r\n    }\r\n  }\r\n\r\n\r\n  buildformGroup(data?) {\r\n    let applicationDate = data ? moment(data.applicationDate).format() : '';\r\n    console.log(applicationDate)\r\n    this.loanForm = this.fb.group({\r\n    loanAccountId: [this.loanaccountID],\r\n      businessProductName:[data ? data.businessProductName:'',[Validators.required]],\r\n      accountBranch:[data ? data.accountBranch:''],\r\n      applicationDate: [data ? applicationDate : '',[Validators.required]],\r\n      accountType:[data ? data.accountType:'',[Validators.required]],\r\n      estimatedCost:[data ? data.estimatedCost:'',[Validators.required]],\r\n      customerContribution:[data ? data.customerContribution:''],\r\n      loanAmount:[data ? data.loanAmount:'',[Validators.required]],\r\n      purposeOfLoan:[data ? data.purposeOfLoan:''],\r\n      accountCurrency:[data ? data.accountCurrency:''],\r\n      loanTenure:[data ? data.loanTenure:''],\r\n      day: [data ? (data.loanTenure.split(\"-\")[2]) : \"\",[Validators.required]],\r\n      month: [data ? data.loanTenure.split(\"-\")[1] : \"\",[Validators.required]],\r\n      year: [data ? (data.loanTenure.split(\"-\")[0]) : \"\",[Validators.required]],\r\n    })\r\n  }\r\n\r\n  goBack(){\r\n    this.router.navigate([`/loan/account/list`]);\r\n  }\r\n\r\n  next(){\r\n   \r\n    this.ls.setItem('LOAN_DETAIL_DONE', true);\r\n    \r\n    console.log(\"this.accountType\",this.accountType);\r\n    console.log(\"this.ls.accounttype\",this.ls.getItem('accountType'))\r\n    //this.router.navigate([`/loan/account/asset-details`]);\r\n    if((this.accountType||this.ls.getItem('accountType'))==\"Home Loan\"){\r\n      this.ls.setItem('isHomeLoan', true);\r\n      this.accountService.refresh.next();\r\n      this.router.navigate([`/loan/account/asset-details`]);\r\n      \r\n    }\r\n    else if((this.accountType||this.ls.getItem('accountType'))==\"Vehicle Loan\"){\r\n      this.ls.setItem('isVehicleLoan', true);\r\n      this.accountService.refresh.next();\r\n      this.router.navigate([`/loan/account/vehicle-details`]);\r\n      \r\n    }\r\n   \r\n    else{\r\n      this.ls.setItem('isEducationLoan', true);\r\n     this.accountService.refresh.next();\r\n      this.router.navigate([`/loan/account/admission-details`]);\r\n      \r\n\r\n    }\r\n    \r\n        //this.ls.setItem('LOAN_DISBURSEMENT_DETAIL_DONE', true);\r\n  \r\n  }\r\n  assign(valueForaccId) {\r\n    this.api.setAccountId({\r\n      loanAccountId: valueForaccId\r\n    });\r\n    console.log(\"loan\", this.loanAccountId)\r\n  }\r\n  keyPressofScreems(event)\r\n  {\r\n    let screennbame = event.target.value.toLowerCase();\r\n    this.resultOfScreen = this.screenArrayData.filter(s => s.toLowerCase().includes(screennbame));\r\n  \r\n    this.screenArray = this.resultOfScreen;\r\n  }\r\n  submitForm(){\r\n    \r\n    //details.push(this.legalOpinion.value);\r\n    let now = new Date();\r\n    now=this.loanForm.value.applicationDate;\r\n    console.log(\"applicationDate\",this.loanForm.value.applicationDate);\r\n    \r\n    var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    console.log(\"dateStringWithTime\",dateStringWithTime);\r\n    var ck=new Date(dateStringWithTime);\r\n    console.log(\"ck\",ck)\r\n    var pk=this.loanForm.value.loanAmount;\r\n    pk= parseInt(pk);\r\n    var prSize=this.loanForm.value.estimatedCost;\r\n    prSize= parseInt(prSize);\r\n    const renewData =\r\n    this.loanForm.value.year +\r\n    \"-\" +\r\n    this.loanForm.value.month +\r\n    \"-\" +\r\n    this.loanForm.value.day;\r\n  this.loanForm.get(\"loanTenure\").setValue(renewData);\r\n  delete this.loanForm.value.year;\r\n  delete this.loanForm.value.month;\r\n  delete this.loanForm.value.day;\r\n    let payload={\r\n      loanAccountId: this.showEditOption ? this.loanaccountID : null,\r\n      businessProductName:this.loanForm.value.businessProductName,\r\n      accountBranch:this.loanForm.value.accountBranch,\r\n      applicationDate:dateStringWithTime,\r\n      accountType:this.loanForm.value.accountType,\r\n      estimatedCost:prSize,\r\n      customerContribution:this.loanForm.value.customerContribution,\r\n      loanAmount:pk,\r\n      purposeOfLoan:this.loanForm.value.purposeOfLoan,\r\n      loanTenure:this.loanForm.value.loanTenure,\r\n      accountCurrency:this.loanForm.value.accountCurrency\r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.saveLoanDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data.loanAccountId);\r\n      this.loanAccountId=data.loanAccountId;\r\n      console.log(\"loanAccountid\",this.loanAccountId);\r\n      this.assign(data.loanAccountId)\r\n      if (data === 200 || data !== null) {\r\n        let statusModel = {\r\n          loanAccountId: data.loanAccountId,\r\n          status: \"ONGOING\"\r\n        };\r\n        this.apiService.updateLoanDetailsStatus(statusModel).subscribe(data => {\r\n        });\r\n        sessionStorage.setItem('loanAccountId', data.loanAccountid);\r\n        let fundStatus = {\r\n          loanAccountid: data.loanAccountid\r\n          \r\n        };\r\n       \r\n\r\n        this.ls.setItem('loanAmount', data.loanAmount);\r\n        this.ls.setItem('fundByStatus', fundStatus);\r\n        this.ls.setItem('accountType', data.accountType);\r\n        this.ls.setItem('loanAccountId', data.loanAccountId);\r\n        // this.ls.setItem('accountType',data.accountType);\r\n        this.ls.setItem('productName',data.businessProductName);\r\n        this.loanaccountID = this.ls.getItem('loanAccountid');\r\n    console.log(\"this.productaccountID\",this.loanaccountID);\r\n        this.snack.open('Loan Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n      if( data === 500){\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        console.log(\"500 error\")\r\n      }\r\n      \r\n      this.next();\r\n    })\r\n    \r\n  //this.next();\r\n}\r\n\r\n_keyPress(event: any) {\r\n  // console.log(\"key\",event);\r\n  const pattern = /[0-9]/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  console.log(\"inputChar\",inputChar);\r\n  inputChar=inputChar.toString();\r\n  console.log(\"inputChar1\",inputChar);\r\n  inputChar=inputChar\r\n  if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n  }\r\n }\r\n calculateLoanAmmount(value) {\r\n  console.log(\"value\",value.customerContribution)\r\n  // if(value.customerContribution >=value.estimatedCost ){\r\n    if(value.customerContribution===''){\r\n      return Number(value.estimatedCost);\r\n    }\r\n      else{\r\n        if(value.customerContribution==''|| value.customerContribution==0){\r\n          let income:number = Number(value.estimatedCost) - Number(value.loanAmount);\r\n          this.loanForm.controls.customerContribution.setValue(income);\r\n\r\n        }else{\r\n          if(Number(value.estimatedCost)<Number(value.customerContribution) ){\r\n            if(value.estimatedCost){\r\n              this.flag=true;\r\n            console.log(\"this.flag\",this.flag);\r\n            }\r\n              }\r\n              else{\r\n                this.flag=false;\r\n              }\r\n        \r\n      if(Number(value.estimatedCost)<Number(value) ){\r\n        // this.flag1=true;\r\n        console.log(\"this.flag\",this.flag1);\r\n          }\r\n          else{\r\n            this.flag1=false;\r\n          }\r\n      let income:number = Number(value.estimatedCost) - Number(value.customerContribution);\r\n      // if(value.estimatedCost == value.loanAmount){\r\n      //   return value.customerContribution = 0;\r\n      // }\r\n      \r\n      if(income<0){\r\n        this.loanForm.controls.loanAmount.setValue(0);\r\n    \r\n      }else{\r\n        this.loanForm.controls.loanAmount.setValue(income);\r\n    \r\n        }\r\n        }\r\n}\r\n  // this.fincancialDetails.controls.monthlyIncome.get('monthlyIncomeTotal').setValue(income);\r\n  //  this.loanForm.controls.loanAmount.setValue(income);\r\n  //this.cdr.markForCheck();\r\n  //this.cdr.detectChanges();\r\n\r\n // this.calculateTotalIncomeAndExpense(this.fincancialDetails.value);\r\n}\r\n\r\ncalculateestimatedCost(value) {\r\n  console.log(\"value\",value.loanAmount)\r\n  if(value.loanAmount===''){\r\n    return;\r\n  }else{\r\n    if(value.loanAmount==''|| value.loanAmount==0){\r\n      let income:number = Number(value.estimatedCost) - Number(value.customerContribution);\r\n      this.loanForm.controls.loanAmount.setValue(income);\r\n    }else{\r\n    if(Number(value.estimatedCost)<Number(value.loanAmount) ){\r\n      if(value.estimatedCost!==''){\r\n      this.flag1=true;\r\n      console.log(\"this.flag\",this.flag1);\r\n      }\r\n  }\r\n  else{\r\n    this.flag1=false;\r\n  }\r\n  if(Number(value.estimatedCost)<Number(value) ){\r\n    // this.flag=true;\r\n    console.log(\"this.flag\",this.flag);\r\n      }\r\n      else{\r\n        this.flag=false;\r\n      }\r\n  let income:number = Number(value.estimatedCost) - Number(value.loanAmount);\r\n  // if(value.estimatedCost == value.customerContribution){\r\n  //   return value.loanAmount = 0;\r\n  // }\r\n  if(income<0){\r\n    this.loanForm.controls.customerContribution.setValue(0);\r\n\r\n  }else{\r\n    this.loanForm.controls.customerContribution.setValue(income);\r\n\r\n  }\r\n}\r\n}\r\n}\r\ncalculatCustomerContri(value) {\r\n  console.log(\"value\",value.loanAmount)\r\n  if(value.customerContribution==''|| value.loanAmount==''){\r\n    return;\r\n  }else{\r\n    if(value.estimatedCost==''){\r\n      let income:number = Number(value.customerContribution) + Number(value.loanAmount);\r\n      this.loanForm.controls.estimatedCost.setValue(income);\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n}\r\n\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Loan Details</b></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <!-- <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Loan Information</div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title> -->\r\n     \r\n      <mat-card-title class=\"alignChange\">\r\n        <fieldset>\r\n        <legend visible=\"true\">Loan Information</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"loanForm\" [formGroup]=\"loanForm\">\r\n\r\n               <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Business Product Name*</mat-label>\r\n                          \r\n             \r\n                              <mat-select name=\"account_branch\" placeholder=\"Select \" formControlName=\"businessProductName\" \r\n                              (selectionChange)=\"getAccountType($event.value)\" disableOptionCentering>\r\n                                   <mat-option>Select</mat-option>\r\n                                <mat-option *ngFor=\"let businessProductName of arrayAccountBranch\" [value]=\"businessProductName\"> \r\n                                   {{businessProductName}} \r\n                                  </mat-option> \r\n                               </mat-select>\r\n                              \r\n                          \r\n                           <mat-error *ngIf=\"loanForm.get('businessProductName').touched && !loanForm.get('businessProductName').valid\">\r\n                            Business Product Name is Required!</mat-error> \r\n                          </mat-form-field>\r\n                        </div>\r\n                       \r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Application Date*</mat-label>\r\n                              <input matInput name=\"date\" class=\"alignment\" formControlName=\"applicationDate\" placeholder=\"DD/MM/YYYY\"\r\n                              [matDatepicker]=\"appDatepicker\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n                              <div fxFlex=\"8%\" id=\"toggle\" class=\"datechange\">\r\n                                <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #appDatepicker></mat-datepicker>\r\n                              </div>\r\n                            </mat-form-field>\r\n                         <mat-error *ngIf=\"!loanForm.get('applicationDate').valid  && loanForm.get('applicationDate').touched\">\r\n                              Application Date is Required!</mat-error>\r\n                          \r\n                        </div>\r\n          \r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Estimated Cost*</mat-label>\r\n                          \r\n            \r\n                            <input\r\n                                matInput formControlName=\"estimatedCost\"\r\n                                name=\"a_sig\" class=\"alignment\" autocomplete=\"off\"\r\n                                placeholder=\"Estimated Cost\"\r\n                                (keypress)=_keyPress($event)\r\n                                (input)=\"calculateLoanAmmount(loanForm.value)\"\r\n                                (input)=\"calculateestimatedCost(loanForm.value)\"\r\n\r\n                              />\r\n                              \r\n                          \r\n                           <mat-error *ngIf=\"!loanForm.get('estimatedCost').valid  && loanForm.get('estimatedCost').touched\">\r\n                            Estimated Cost is Required!</mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                       \r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Loan Amount *</mat-label>\r\n                          \r\n            \r\n                            <input\r\n                                matInput formControlName=\"loanAmount\" autocomplete=\"off\"\r\n                                name=\"a_sig\" class=\"alignment\"\r\n                                placeholder=\"Loan Amount\"\r\n                                (input)=\"calculatCustomerContri(loanForm.value)\"\r\n                                (input)=\"calculateestimatedCost(loanForm.value)\"\r\n                                \r\n                              />\r\n                            </mat-form-field> \r\n                          \r\n                          <!-- <mat-error *ngIf=\"!mandate.controls['remarks'].valid  && mandate.controls['remarks'].touched\">\r\n                              Remarks is Required!</mat-error> -->\r\n                              <small style=\"color:red;\"   *ngIf='flag1'>\r\n                                Loan Amount should not be greater than Estimated Cost!\r\n                               </small>\r\n                          \r\n                        </div>\r\n\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Purpose of Loan</mat-label>\r\n                          \r\n            \r\n                            <textarea\r\n                            matInput formControlName=\"purposeOfLoan\" \r\n                            name=\"remark\" class=\"alignment\"\r\n                            placeholder=\"Purpose of Loan\"\r\n                          ></textarea>\r\n                         \r\n                          <!-- <mat-error *ngIf=\"!mandate.controls['remarks'].valid  && mandate.controls['remarks'].touched\">\r\n                              Remarks is Required!</mat-error> -->\r\n                          </mat-form-field>\r\n                        </div>\r\n\r\n                   \r\n\r\n                     \r\n  \r\n                      </div>\r\n                      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                       \r\n\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                          <mat-label>Account Branch</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName\"> -->\r\n                            <!--<mat-select name=\"mod\"  >\r\n                              <mat-option value=\"\">Select</mat-option>\r\n                              <mat-option value=\"test\">test</mat-option>\r\n                            </mat-select>-->\r\n                            <!--search Dropdown -->\r\n                            <!--<input type=\"text\" matInput name=\"screen\" #screen class=\"alignment\"  formControlName=\"accountBranch\"\r\n                            (keyup)=\"keyPressofScreems($event)\" [matAutocomplete]=\"autoScreens\" >\r\n                        <mat-autocomplete #autoScreens=\"matAutocomplete\">\r\n                             <mat-option *ngFor=\"let array of screenArray\"\r\n                              [value]=\"array.branchName\">{{array.branchName}}</mat-option>\r\n                         </mat-autocomplete>\r\n                         Simple Dropdown-->\r\n                         <mat-select name=\"mod\" placeholder=\"Select\" formControlName=\"accountBranch\" \r\n                         disableOptionCentering (selectionChange)=\"onChangeBranch($event)\">\r\n                         <mat-option>Select</mat-option>\r\n                          <mat-option  *ngFor=\"let array of screenArray\"\r\n                          [value]=\"array.branchName\">{{array.branchName}}</mat-option>    \r\n                        </mat-select>\r\n                          <!-- </mat-card> -->\r\n                          </mat-form-field>\r\n                         \r\n                        </div>\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Account Type*</mat-label>\r\n                          \r\n                           <input matInput name=\"accountType\" placeholder=\"Account Type\"  class=\"alignment\"\r\n                            formControlName=\"accountType\"  [readonly]=\"true\"/>\r\n                              \r\n                          \r\n                          <mat-error *ngIf=\"!loanForm.get('accountType').valid  && loanForm.get('accountType').touched\">\r\n                            Account Type is Required!</mat-error> \r\n                          </mat-form-field>\r\n                        </div>\r\n                          <!-- <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Account Branch</mat-label>\r\n    \r\n                              <mat-select name=\"mod\" required>\r\n                                <mat-option> test\r\n                                </mat-option>\r\n                              </mat-select>\r\n                         </mat-form-field>\r\n                          \r\n                          </div> -->\r\n                          \r\n            \r\n                          <div class=\"flex-grow-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Customer Contribution</mat-label>\r\n                            \r\n              \r\n                              <input\r\n                                  matInput formControlName=\"customerContribution\"\r\n                                  name=\"a_sig\" class=\"alignment\"\r\n                                  placeholder=\"Customer Contribution\" autocomplete=\"off\"\r\n                                  (keypress)=_keyPress($event)\r\n                                  (input)=\"calculatCustomerContri(loanForm.value)\"\r\n                                  (input)=\"calculateLoanAmmount(loanForm.value)\"\r\n                                  \r\n                                />\r\n                                \r\n                            \r\n                            <div>\r\n                            </div>\r\n                            </mat-form-field>\r\n                              <small style=\"color:red;\"   *ngIf='flag'>\r\n                               Customer Contribution should not be greater than Estimated Cost!\r\n                              </small>\r\n                           \r\n                            <!-- <mat-error *ngIf=\"!mandate.controls['remarks'].valid  && mandate.controls['remarks'].touched\">\r\n                                Remarks is Required!</mat-error> -->\r\n                           \r\n                          </div>\r\n                       \r\n\r\n                          \r\n                          <div class=\"flex-grow-1\">\r\n                            <div fxLayout=\"row wrap\">\r\n                            <mat-hint class=\"tenre\">Loan Tenure *</mat-hint>\r\n                              <!-- <div fxLayout=\"row wrap\"  > -->\r\n\r\n                                <!-- <div fxFlex=\"30\"> -->\r\n                                  <!-- <mat-form-field class=\"full-width\" appearance=\"outline\" > -->\r\n                                  <!-- <mat-card class=\"sqInput1\"> -->\r\n                                    <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"24.4%\">\r\n                                      <mat-label>Year*</mat-label>\r\n                                  <!-- <mat-hint>DD</mat-hint> -->\r\n                                  <!-- <mat-card class=\"widthCard inputMatName1\" class=\"full-width\"> -->\r\n                                    \r\n                                    <mat-select name=\"year\" placeholder=\"Year\" formControlName=\"year\" disableOptionCentering >\r\n                                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                                    </mat-select>\r\n                                    </mat-form-field>\r\n                                  <!-- </mat-card> -->\r\n                                \r\n                                <!-- </div> -->\r\n                                <!-- <div fxFlex=\"30\"> -->\r\n                                  <!-- <mat-card class=\"sqInput1\"> -->\r\n                                   <!-- <mat-card class=\"widthCard inputMatName1\" class=\"full-width\"> -->\r\n                                    <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"23.4%\">\r\n                                      <mat-label>Month*</mat-label>\r\n                                    <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" disableOptionCentering>\r\n                                    <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                                     </mat-select>\r\n                                    </mat-form-field>\r\n                                  <!-- </mat-card> -->\r\n                    \r\n                                <!-- </div> -->\r\n                                <!-- <div fxFlex=\"30\"> -->\r\n                                   <!-- <mat-hint>DD</mat-hint> -->\r\n                                   <!-- <mat-card class=\"sqInput1\"> -->\r\n                                   <!-- <mat-card class=\"widthCard inputMatName1\" class=\"full-width\"> -->\r\n                                    <mat-form-field class=\"full-width tenure2\" appearance=\"outline\" fxFlex=\"24%\">\r\n                                      <mat-label>Day*</mat-label>\r\n                                    <mat-select name=\"day\"  placeholder=\"Day\" formControlName=\"day\" disableOptionCentering >\r\n                                   \r\n                                    <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                                  </mat-select>\r\n                                    </mat-form-field>\r\n                                  <!-- </mat-card> -->\r\n                                  <mat-error *ngIf=\"!loanForm.get('year').valid && loanForm.get('year').touched \">\r\n                                     Loan Tenure is Required!</mat-error>\r\n                                     <mat-error *ngIf=\"!loanForm.get('month').valid && loanForm.get('month').touched \">\r\n                                     Loan Tenure is Required!</mat-error>\r\n                                     <mat-error *ngIf=\"!loanForm.get('day').valid && loanForm.get('day').touched \">\r\n                                     Loan Tenure is Required!</mat-error>\r\n                                      <mat-error *ngIf=\"(loanForm.get('year').value == '0 year') && (loanForm.get('month').value == '0 month') && (loanForm.get('day').value == '0 day')  \">\r\n                                     Please Input Valid Loan Tenure!</mat-error>\r\n                                  <!-- </mat-card> -->\r\n                                  <!-- </mat-form-field> -->\r\n                                <!-- </div> -->\r\n                                  <!-- <div fxFlex=\"30\">\r\n                                      <mat-form-field appearance=\"outline\"  class=\"full-width\">\r\n                                          <mat-label>DD</mat-label>\r\n                                          <mat-select>\r\n                                            <mat-option value=\"10px\">10</mat-option>\r\n                                            <mat-option value=\"12\">12</mat-option>\r\n                                            <mat-option value=\"14\">14</mat-option>\r\n                                            <mat-option value=\"16\">16</mat-option>\r\n                                            <mat-option value=\"18\">18</mat-option>\r\n                                            <mat-option value=\"20\">20</mat-option>\r\n                                          </mat-select>\r\n                                        </mat-form-field>\r\n                                  </div> -->\r\n                                  <!-- <div fxFlex=\"30\">\r\n                                      <mat-form-field appearance=\"outline\"  class=\"full-width\">\r\n                                          <mat-label>MM</mat-label>\r\n                                          <mat-select >\r\n                                            <mat-option value=\"10\">10</mat-option>\r\n                                            <mat-option value=\"12\">12</mat-option>\r\n                                            <mat-option value=\"14\">14</mat-option>\r\n                                            <mat-option value=\"16\">16</mat-option>\r\n                                            <mat-option value=\"18\">18</mat-option>\r\n                                            <mat-option value=\"20\">20</mat-option>\r\n                                          </mat-select>\r\n                                        </mat-form-field>\r\n                                  </div> -->\r\n                                  <!-- <div fxFlex=\"30\">\r\n                                      <mat-form-field appearance=\"outline\"  class=\"full-width\">\r\n                                          <mat-label>YYYY</mat-label>\r\n                                          <mat-select>\r\n                                            <mat-option value=\"10\">10</mat-option>\r\n                                            <mat-option value=\"12\">12</mat-option>\r\n                                            <mat-option value=\"14\">14</mat-option>\r\n                                            <mat-option value=\"16\">16</mat-option>\r\n                                            <mat-option value=\"18\">18</mat-option>\r\n                                            <mat-option value=\"20\">20</mat-option>\r\n                                          </mat-select>\r\n                                        </mat-form-field>\r\n                                  </div> -->\r\n                                 \r\n                              </div>\r\n                             \r\n                          </div>\r\n                          <!-- <div class=\"flex-grow-1\">\r\n\r\n                            <mat-hint>Account Currency</mat-hint>\r\n                            <mat-card class=\"inputMatName\">\r\n                              <input matInput name=\"currency\" placeholder=\"Account Currency\" class=\"alignment\"\r\n                              formControlName=\"accountCurrency\"  [readonly]=\"true\"/>\r\n                              \r\n                            </mat-card>\r\n                           \r\n                          </div> -->\r\n                      </div>\r\n              </div>\r\n<!-- \r\n              <div fxLayout=\"row\">\r\n                  <div fxFlex=\"45\">\r\n                      <div  class=\"pb-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <textarea\r\n                                matInput\r\n                                name=\"remark\"\r\n                                placeholder=\"Purpose of Loan\"\r\n                              ></textarea>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        \r\n                  </div>\r\n              </div> -->             \r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n     <div\r\n              fxLayout=\"row\"\r\n              fxLayoutAlign=\"space-between center\"\r\n              fxLayoutGap=\"16px\"\r\n              class=\"mt-32\"\r\n            >\r\n              <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n                Back\r\n              </button>\r\n              <button\r\n                mat-raised-button class=\"Nextbtn\"\r\n                color=\"primary\" (click)=\"submitForm()\" [disabled]=\"!loanForm.valid || flag || flag1 || (loanForm.get('year').value == '0 year') && (loanForm.get('month').value == '0 month') && (loanForm.get('day').value == '0 day') \"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n       \r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { AccountService } from '../../account.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\n\r\n@Component({\r\n  selector: 'app-offerissue',\r\n  templateUrl: './offerissue.component.html',\r\n  styleUrls: ['./offerissue.component.scss']\r\n})\r\nexport class OfferissueComponent implements OnInit {\r\n  generateArr:string[]=['With Schedule','without Schedule'];\r\n  approvedLoan: number;\r\n  accountDetails: any;\r\n  OfferIssueForm: FormGroup;\r\n  showEditOption: boolean = false;\r\n  otherDocumentArray: any[] = [];\r\n  files: any[] = [];\r\n  selectedFiles: any;\r\n  showSpinn: boolean;\r\n  fileName: any = [];\r\n  docUrl: any;\r\n  showDelete : boolean = true;\r\n  selectedDay: number = 1;\r\n  day: number;\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  year: number;\r\n  years: any[] = [];\r\n\r\n  @ViewChild('report') report: NgForm;\r\n  loanaccountID: any;\r\n  accountId: any;\r\n  documentUploaded: boolean=false;\r\n  loanInfo: any;\r\n  cifNumber: any;\r\n \r\n\r\n  constructor(private router: Router,private ls: \r\n    LocalStoreService,private apiService:ApiService, private snack: MatSnackBar,private loader: AppLoaderService,\r\n    @Inject(DOCUMENT) private _document: Document,private appApiService: ApplicationEntryStageService,\r\n    private formBuilder: FormBuilder,private accountService : AccountService) { \r\n    this.OfferIssueForm = this.formBuilder.group({\r\n      approvedLoanAmount : ['',[Validators.required]],\r\n      applicantName:['',[Validators.required]],\r\n      installmentFrequency:['',[Validators.required]],    \r\n      rateOfInterest:['',[Validators.required]],  \r\n      offerIssueDate:['',[Validators.required]],\r\n      year:['',[Validators.required]],\r\n      month:['',[Validators.required]],\r\n      day:['',[Validators.required]],\r\n      installmentType:['',[Validators.required]],\r\n      generateOffer:['',[Validators.required]],\r\n      interest:['',[Validators.required]],\r\n      principal:['',[Validators.required]],\r\n      installmentAmount:['',[Validators.required]],\r\n      charges:['',[Validators.required]],\r\n      loanTenure:[''],\r\n    \r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedYear = new Date().getFullYear();\r\n  \r\n    for (let year = 0; year <= 50; year++) {\r\n      this.years.push(year+ \" year\");\r\n    }\r\n\r\n    for (let month = 0; month <= 11; month++) {\r\n      this.months.push(month+ \" month\");\r\n    }\r\n\r\n    for (let day = 0; day <= 30; day++) {\r\n      this.days.push(day+ \" day\");\r\n    }\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    let isOfferIssueScreen: boolean = JSON.parse(this.ls.getItem('OfferIssue'));\r\n    //if (this.loanAccountId != null && isOfferIssueScreen) {\r\n      setTimeout(() => {\r\n        if (this.loanaccountID != null && isOfferIssueScreen) {\r\n          this.showEditOption = true;\r\n          \r\n          this.getAccountDetails();\r\n        } \r\n        else {\r\n          console.log(\"else\");\r\n          this.showEditOption = false;\r\n          this.buildOfferIssueForm();\r\n        }\r\n      }, 10);\r\n   \r\n    //this.getAccountType(\"account_type\");\r\n    this.fetchByCif();\r\n    this.loanData();\r\n    this.intrestData();\r\n  }\r\n  onFileSelected(event) {\r\n    console.log(\"event -- \", event.target.files);\r\n    // Iterate over selected files\r\n    for (let file of event.target.files) {\r\n      // Append to a list\r\n      this.files.push({\r\n        name: file.name,\r\n        type: file.type\r\n        // Other specs\r\n      });\r\n      this.snack.open('File Uploded', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n    this.selectedFiles = event.target.files[0];\r\n    console.log(\"selectedFiles: any\", this.selectedFiles);\r\n    if (event.target.files) {\r\n      this.uploadDoc(event.target.files[0], this.selectedFiles, event);\r\n    }\r\n\r\n  }\r\n  uploadDoc( event, url,  img) {\r\n    console.log(\"event--->> \", url);\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"file\", url);\r\n    console.log(uploadData);\r\n  }\r\n\r\n  getAccountDetails() {\r\n    this.loader.open();\r\n    this.apiService.getOfferIssueDetails(this.loanaccountID).subscribe((accountDetails) => {\r\n      this.loader.close();\r\n      this.accountDetails = accountDetails;\r\n      console.log(this.accountDetails);\r\n      this.buildOfferIssueForm(this.accountDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n\r\n\r\n  }\r\n  get f() { return this.OfferIssueForm.controls; }\r\n  get c() { return this.f.collaterals as FormArray; }\r\n\r\n  deleteDoc(){\r\n    this.documentUploaded=false;\r\n    this.docUrl = ' ';\r\n    this.fileName =  ' ';  \r\n   // this.c.get('documentUrl').setValue('');\r\n    //this.c.get('fileName').setValue('');\r\n    this.showDelete = false;\r\n    \r\n  }\r\n  uploadCollateralType(event) {\r\n    console.log(\"event\",event);\r\n    //this.console.log(\"i=\",i);\r\n    this.showSpinn = true;\r\n    const file:File = event.target.files[0];\r\n    this.fileName = file.name;\r\n    console.log(\"File name=\",this.fileName );\r\n    const data = {\r\n      loanAccountId: this.loanaccountID,\r\n      screenType: \"offerIssue\",\r\n    };\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", file);\r\n    console.log(\"file\",file);\r\n    console.log(\"data\",data);\r\n    this.apiService.uploadOfferDocument(uploadData).subscribe((res:any) => {\r\n    console.log(\"Document Resp\",res, res.fileUrl);\r\n    this.docUrl=res.fileUrl;\r\n    if(res && res.fileUrl){\r\n     this.showSpinn = false;\r\n     this.snack.open('Document Saved Successfully!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n     this.documentUploaded=true;\r\n   \r\n    }\r\n     });\r\n\r\n  \r\n  }\r\n  \r\n\r\n  buildOfferIssueForm(data?) {\r\n    data.offerIssueDate = data ? moment(data.offerIssueDate).format() : '';\r\n    this.OfferIssueForm = this.formBuilder.group({\r\n      approvedLoanAmount : [data ? data.approvedLoanAmount:''],\r\n      loanTenure:[data?data.loanTenure:''],\r\n      applicantName:[data ? data.applicantName:''],\r\n      installmentFrequency:[data ? data.installmentFrequency:''],    \r\n      rateOfInterest:[data ? data.rateOfInterest:''],  \r\n      offerIssueDate:[data ? data.offerIssueDate:''],\r\n      generateOffer:[data ? data.generateOffer:''],\r\n      installmentAmount:[data ? data.installmentAmount:''],\r\n      principal:[data ? data.principal:''],\r\n      interest:[data ? data.interest:''],\r\n      charges:[data ? data.charges:''],\r\n      year:[data ? data.loanTenure.split(\"-\")[0]:''],\r\n      month:[data ? data.loanTenure.split(\"-\")[1]:''],\r\n      day:[data ? data.loanTenure.split(\"-\")[2]:''],\r\n      installmentType: [data ? data.installmentType: '']\r\n    \r\n    })\r\n\r\n  }\r\ngoBack(){\r\n  this.router.navigate([\"loan/account/offer-issue/list\"]);\r\n}\r\nSubmit(){\r\n  let details:  any;\r\n    //details.push(this.legalOpinion.value);\r\n    let now = new Date();\r\n    now=this.OfferIssueForm.value.opinionDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    console.log(\"dateStringWithTime\",dateStringWithTime);\r\n    var aprloan=this.OfferIssueForm.value.approvedLoanAmount;\r\n    aprloan= parseInt(aprloan);\r\n    var rate=this.OfferIssueForm.value.rateOfInterest;\r\n    rate= parseInt(rate);\r\n    const renewData =\r\n    this.OfferIssueForm.value.year +\r\n    \"-\" +\r\n    this.OfferIssueForm.value.month +\r\n    \"-\" +\r\n    this.OfferIssueForm.value.day;\r\n  this.OfferIssueForm.get(\"loanTenure\").setValue(renewData);\r\n  delete this.OfferIssueForm.value.year;\r\n  delete this.OfferIssueForm.value.month;\r\n  delete this.OfferIssueForm.value.day;\r\n    this.OfferIssueForm.value.principal =parseInt(this.OfferIssueForm.value.principal);\r\n    this.OfferIssueForm.value.interest =parseInt(this.OfferIssueForm.value.interest);\r\n    this.OfferIssueForm.value.installmentAmount =parseInt(this.OfferIssueForm.value.installmentAmount);\r\n    this.OfferIssueForm.value.charges =parseInt(this.OfferIssueForm.value.charges);\r\n    let payload={\r\n      loanAccountId:this.loanaccountID,\r\n      approvedLoanAmount:aprloan,\r\n      loanTenure:renewData,\r\n      applicantName:this.OfferIssueForm.value.applicantName,\r\n      installmentFrequency:this.OfferIssueForm.value.installmentFrequency,\r\n      rateOfInterest:rate,\r\n      offerIssueDate:dateStringWithTime,\r\n      generateOffer:this.OfferIssueForm.value.generateOffer,\r\n      principal:this.OfferIssueForm.value.principal,\r\n      interest:this.OfferIssueForm.value.interest,\r\n      installmentAmount:this.OfferIssueForm.value.installmentAmount,\r\n      charges:this.OfferIssueForm.value.charges,\r\n      installmentType:this.OfferIssueForm.value.installmentType\r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.upsertOfferIssue(payload).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null){\r\n        this.snack.open('Offer Issue Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n     \r\n      }\r\n    })\r\n    \r\n  this.Next();\r\n}\r\nNext(){\r\n  this.ls.setItem('OfferIssue', true);\r\n  this.ls.setItem('OfferIssueStageDone', true);\r\n  this.accountService.refresh.next();\r\n  this.router.navigate([\"/loan/account/offerstage/list\"]);\r\n\r\n}\r\n_keyPress1(event: any) {\r\n  const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n  }\r\n  const input = event.target.value;\r\n  if (input.length === 0 && event.which === 48) {\r\n    event.preventDefault();\r\n  }\r\n}\r\n\r\n  \r\n\r\n\r\n_keyPress(event: any) {\r\n  const pattern = /[0-9]/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n  }\r\n}\r\nonInput(event: any, flag) {\r\n  if (flag) {\r\n    this.approvedLoan = event.target.value;\r\n  } else {\r\n    this.approvedLoan = event;\r\n  }\r\n\r\n  console.log(\"this.salary)::\", this.approvedLoan);\r\n  let sal = this.approvedLoan.toString().replace(/,/g, '').split(\".\");\r\n  sal[0] = sal[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  let final = sal.join(\".\");\r\n  console.log(\"final\", final);\r\n  this.OfferIssueForm.controls.approvedLoanAmount.setValue(final);\r\n}\r\n\r\nletterOnly(event) {\r\n  var charCode = event.keyCode;\r\n          if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n              return true;\r\n          else\r\n              return false;\r\n}\r\n\r\nfetchByCif(){\r\n  this.cifNumber=this.ls.getItem('cId');\r\n  this.appApiService.fetchByCif(this.cifNumber).subscribe((res: any) => {\r\n  this.OfferIssueForm.get('applicantName').setValue(res.customerInfoList[0].firstName +\" \"+ res.customerInfoList[0].lastName);\r\n  }, (err: any) => {\r\n    console.error(err);\r\n  })\r\n}\r\n\r\nloanData(){\r\n  console.log(this.loanaccountID);\r\n  this.apiService.fetchByLoanAccountId(this.loanaccountID).subscribe((res:any)=>{    \r\n    this.OfferIssueForm.get('approvedLoanAmount').setValue(res.approvedLoanAmount);        \r\n    let dataYear = res.loanTenure.split(\"-\")[0];\r\n    let dataMonth = res.loanTenure.split(\"-\")[1];\r\n    let dataDay = res.loanTenure.split(\"-\")[2];    \r\n    this.OfferIssueForm.get('year').setValue(dataYear);\r\n    this.OfferIssueForm.get('month').setValue(dataMonth);\r\n    this.OfferIssueForm.get('day').setValue(dataDay);  \r\n  }, (err: any) => {\r\n    console.error(err);\r\n  })\r\n}\r\nintrestData(){\r\n  console.log(this.loanaccountID);\r\n  this.apiService.fetchLoanAssessment(this.loanaccountID).subscribe((res:any)=>{    \r\n    this.OfferIssueForm.get('rateOfInterest').setValue(res.rateOfInterest);\r\n  })\r\n}\r\n}","<div fxLayout=\"column\">\r\n  <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/MaskGroup_17.svg\" alt=\"\" class=\"w-90\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><b>Offer Issue Details</b></div>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"column\">\r\n  <form fxLayout=\"column\" [formGroup]=\"OfferIssueForm\">\r\n      <div fxFlex=\"100\">\r\n          <mat-card fxLayout=\"column\">              \r\n            <mat-card-title>\r\n              <fieldset class=\"alignChange\">\r\n              <legend visible=\"true\">Offer Issue Details</legend>\r\n              </fieldset>\r\n            </mat-card-title>\r\n\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Applicant Name*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"applicantName\"\r\n                          placeholder=\"Applicant Name\" formControlName=\"applicantName\"\r\n                          readonly/>\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!OfferIssueForm.get('applicantName').valid  && OfferIssueForm.get('applicantName').touched\">\r\n                        &nbsp;&nbsp;&nbsp; Applicant Name is Required!\r\n                    </mat-error>\r\n                    </mat-form-field>\r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Approved Loan Amount*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input matInput  class=\"alignment\" type=\"text\" name=\"approvedLoanAmount\" placeholder=\"Approved Loan Account\"\r\n                        (keypress)=\"_keyPress1($event)\"  (keyup)=\"onInput($event,true)\"\r\n                         maxlength=\"16\"formControlName=\"approvedLoanAmount\" />\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!OfferIssueForm.get('approvedLoanAmount').valid  && OfferIssueForm.get('approvedLoanAmount').touched\">\r\n                        &nbsp;&nbsp;&nbsp; Approved Loan Amount is Required!\r\n                    </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n              </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                                \r\n                    <div fxLayout=\"row wrap\" class=\"hight\" >\r\n                      <label  class=\"size1\">Loan Tenure*</label>   \r\n                      <!-- <div fxFlex=\"30\"> -->\r\n                        <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"23\">\r\n                            <mat-label>Year*</mat-label>\r\n                          <mat-select name=\"year\" placeholder=\"Year\" formControlName=\"year\" disableOptionCentering >\r\n                          <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                        <!-- </mat-card> -->\r\n                      <!-- </div> -->\r\n                      <!-- <div fxFlex=\"30\"> -->\r\n                         <!-- <mat-card class=\"inputMatName\">\r\n                          <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" disableOptionCentering>\r\n                          <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                           </mat-select>\r\n                        </mat-card> -->\r\n                        <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"22.5\">\r\n                          <mat-label>Month*</mat-label>\r\n                        <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" disableOptionCentering>\r\n                        <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                         </mat-select>\r\n                        </mat-form-field>\r\n                      <!-- </div> -->\r\n                      <!-- <div fxFlex=\"30\"> -->\r\n                         <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"22\">\r\n                            <mat-label>Day*</mat-label>\r\n                          <mat-select name=\"day\"  placeholder=\"Day\" formControlName=\"day\" disableOptionCentering >\r\n                          <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                        </mat-select>\r\n                          </mat-form-field>\r\n                        <!-- </mat-card> -->\r\n                      <!-- </div>  -->\r\n                    </div>\r\n              </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Installment Type*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <!-- <input matInput  class=\"alignment\" type=\"text\" name=\"installmentType\"\r\n                        formControlName=\"installmentType\" \r\n                          /> -->\r\n                          <mat-select class=\"alignment\" name=\"installmentType\" placeholder=\"Select\"\r\n                           formControlName=\"installmentType\" disableOptionCentering>\r\n                          <!-- <mat-option value=\"\" >Select</mat-option> -->\r\n                          <mat-option value=\"EMI\">EMI</mat-option>\r\n                \r\n                       </mat-select>\r\n                      <!-- </mat-card> -->\r\n                      </mat-form-field>\r\n                     \r\n                    </div>\r\n              </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Installment Frequency*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input matInput  class=\"alignment\" autocomplete=\"off\" type=\"text\" placeholder=\"Installment Frequency\" name=\"installmentFrequency\" (keypress)=\"_keyPress1($event)\" maxlength=\"2\"\r\n                          formControlName=\"installmentFrequency\"/>\r\n                      <!-- </mat-card> -->\r\n                    </mat-form-field>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Rate of Interest in(%)*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input matInput  class=\"alignment\" autocomplete=\"off\" type=\"text\" placeholder=\"Rate Of Interest\" name=\"rateOfInterest\" (keypress)=\"_keyPress1($event)\" \r\n                        formControlName=\"rateOfInterest\" minlength=\"1\" maxlength=\"2\" />\r\n                      <!-- </mat-card> -->\r\n                      </mat-form-field>\r\n                     \r\n                    </div>\r\n              </div>\r\n              <!-- <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                      <label  class=\"hint\">Approved Loan Amount</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"approvedLoanAmount\" (keypress)=\"_keyPress1($event)\" \r\n                          formControlName=\"approvedLoanAmount\"/>\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Loan Tenure</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                        <input matInput  class=\"alignment\" type=\"text\" name=\"loanTenure\" (keypress)=\"_keyPress1($event)\" \r\n                        formControlName=\"loanTenure\" />\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n              </div> -->\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label  class=\"hint\">Principal*</mat-label>\r\n                    <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input matInput  class=\"alignment\" autocomplete=\"off\" type=\"text\" name=\"principal\" (keypress)=\"_keyPress1($event)\" placeholder=\"Principal\"\r\n                        maxlength=\"12\"\r\n                        formControlName=\"principal\"/>\r\n                    <!-- </mat-card> -->\r\n                  </mat-form-field>\r\n                   \r\n                  </div>\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label  class=\"hint\">Interest*</mat-label>\r\n                    <!-- <mat-card class=\"inputMatName\"> -->\r\n                      <input matInput  class=\"alignment\" type=\"text\" autocomplete=\"off\" placeholder=\"Interest\" name=\"interest\" (keypress)=\"_keyPress1($event)\" maxlength=\"2\"\r\n                      formControlName=\"interest\" />\r\n                    <!-- </mat-card> -->\r\n                    </mat-form-field>\r\n                   \r\n                  </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label  class=\"hint\">Installment Amount*</mat-label>\r\n                  <!-- <mat-card class=\"inputMatName\"> -->\r\n                      <input matInput  class=\"alignment\" type=\"text\" autocomplete=\"off\" placeholder=\"Installment Amount\" name=\"installmentAmount\" (keypress)=\"_keyPress1($event)\" maxlength=\"12\"\r\n                      formControlName=\"installmentAmount\"/>\r\n                  <!-- </mat-card> -->\r\n                </mat-form-field>\r\n                 \r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label  class=\"hint\">Charges*</mat-label>\r\n                  <!-- <mat-card class=\"inputMatName\"> -->\r\n                    <input matInput  class=\"alignment\" type=\"text\" autocomplete=\"off\" placeholder=\"Charges\" name=\"charges\" (keypress)=\"_keyPress1($event)\" maxlength=\"8\"\r\n                    formControlName=\"charges\" />\r\n                  <!-- </mat-card> -->\r\n                  </mat-form-field>\r\n                 \r\n                </div>\r\n          </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Offer Issue Date*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatLastName\" style=\"height:48px;\"> -->\r\n                            <input matInput  id=\"dob\" class=\"alignment\" name=\"offerIssueDate\" readonly\r\n                              [matDatepicker]=\"picker\"  value=\"offerIssueDate\" placeholder=\"DD/MM/YYYY\"\r\n                              formControlName=\"offerIssueDate\">\r\n                          <!-- <div fxFlex=\"8%\" id=\"toggle\"> -->\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker\" >\r\n                              </mat-datepicker-toggle>\r\n            \r\n                              <mat-datepicker #picker>\r\n                              </mat-datepicker>\r\n                            <!-- </div> -->\r\n            \r\n                       <!-- </mat-card> -->\r\n                    </mat-form-field>\r\n        \r\n                  </div>\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Generate Offer*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <mat-select disableOptionCentering class=\"alignment\" formControlName=\"generateOffer\" placeholder=\"Generate Offer\">\r\n                              <!-- <mat-option  value =\"\">select</mat-option> -->\r\n                              <mat-option *ngFor=\"let generateOffer of generateArr\" [value]=\"generateOffer\">\r\n                                  {{generateOffer}}\r\n                              </mat-option>\r\n                          </mat-select>\r\n                      <!-- </mat-card> -->\r\n                    </mat-form-field>\r\n                     \r\n                  </div>\r\n                 \r\n                    \r\n              </div>\r\n              <!--<div fxFlex=\"70%\" >\r\n \r\n                  <div  fxFlex.xs=\"100%\">\r\n                  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding: 3rem 2rem;\">\r\n                      <input style=\"display: none;\" class=\"default-background\"\r\n                          type=\"file\" name=\"fileData\"\r\n                          #fileData\r\n                          (change)=\"onFileSelected($event)\">\r\n                      <a style=\"text-decoration: underline; color:#456EFE;\"\r\n                          (click)=\"fileData.click()\"\r\n                          [routerLink]=\"\">Add Document</a>\r\n                          \r\n                          \r\n                  </div>\r\n                  <div fxFlex=\"40%\" fxFlex.xs=\"100%\" style=\"padding-top: 45px;\">\r\n \r\n                <input class=\"full-width default-background\"\r\n                    type=\"text\" matInput\r\n                    name=\"documentName\"\r\n                    #documentName  readonly\r\n                    [value]=\"fileData.value? fileData.value : ''\"\r\n                    style=\"border: transparent;\">\r\n                </div>\r\n              </div>\r\n              \r\n              </div>-->\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1 documentCard\" fxFlex=\"30%\">\r\n                  <input style=\"display: none;\"\r\n                      type=\"file\" name=\"documentUrl\"\r\n                      #documentUrl accept=\"application/pdf,application/msword\"\r\n                      (change)=\"uploadCollateralType($event)\">\r\n                      <div fxLayout=\"row wrap\" class=\"flex-grow-1\">\r\n                      <a \r\n                      (click)=\"documentUrl.click()\" class=\"docData\"\r\n                      [routerLink]=\"\">Add Document</a> &nbsp; \r\n                      <mat-hint class=\"documentHint\">{{fileName}}</mat-hint>\r\n                      </div>\r\n                      \r\n                </div> \r\n                <div class=\"flex-grow-1\" fxFlex=\"40%\">\r\n                  <a  *ngIf=\"documentUploaded\" class=\"documentlink\"  href=\"{{docUrl}}\" download><span class=\"material-icons\">file_download</span></a> &nbsp;\r\n                  <a  *ngIf=\"!documentUploaded\" class=\"documentlink\"  download><span class=\"material-icons\">file_download</span></a> &nbsp;\r\n                  <mat-icon  color=\"warn\" class=\"docIcon\" (click)=\"deleteDoc()\">delete</mat-icon>\r\n                  <mat-spinner class=\"spinner\" [diameter]=\"30\" *ngIf=\"showSpinn\"></mat-spinner>\r\n                </div>\r\n               \r\n              </div>\r\n             \r\n\r\n          </mat-card>\r\n\r\n      </div>      \r\n  </form>\r\n  <div\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"space-between center\"\r\n  fxLayoutGap=\"16px\"\r\n  class=\"mt-32\"\r\n>\r\n  <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n    Back\r\n  </button>\r\n  <button\r\n    mat-raised-button class=\"Nextbtn\"\r\n    color=\"primary\"  (click)=\"Submit()\" [disabled]=\"!OfferIssueForm.valid\"            >\r\n    Next\r\n  </button>\r\n</div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-offer-accept-reject-summary',\r\n  templateUrl: './offer-accept-reject-summary.component.html',\r\n  styleUrls: ['./offer-accept-reject-summary.component.scss']\r\n})\r\nexport class OfferAcceptRejectSumaryComponent implements OnInit {\r\n\r\n  userRecommendation={'userRecommendation':'Accept'};\r\n  // offerDetails = {'applicantName'         :'ABC',\r\n  //                'approvedLoanAmount'     :'$200,000',\r\n  //                'loanTenure'             :'5 years',\r\n  //                'rateOfIntrest'          :'5.9',\r\n  //                'loanAmountRecomended'   :'$500,000',\r\n  //                'installmentType'        :'EMI',\r\n  //                'charge'                 :'5 years',\r\n  //                'installmentAmount'      :'$100,000',\r\n  //                'installmentFreq'        :'Monthly',\r\n  //                'principle'              :'$100,000',\r\n  //                'intrest'                :'$100,000',    \r\n  //                'date'                   :'12/2/2021',\r\n  //                   };\r\n  offerDetails: any;\r\n  constructor(private router: Router,\r\n    public dialogRef: MatDialogRef<OfferAcceptRejectSumaryComponent>,\r\n    private apiService: ApiService,\r\n    private dataService:DataService,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchOfferAcceptRejectDetails();\r\n  }\r\n\r\n  fetchOfferAcceptRejectDetails() {\r\n      this.apiService.getofferDetails(7654)\r\n        .subscribe((data : any)=> {\r\n          this.offerDetails = data;\r\n          console.log(this.offerDetails);\r\n        })\r\n    }\r\n\r\n  edit(){\r\n    this.dataService.sendNavParam(this.offerDetails);\r\n    this.dialogRef.close();\r\n    this.router.navigate(['loan/account-approval/offer-acceptReject-details']);\r\n    \r\n  }\r\n  close(){\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/loan/account-approval/list`]);\r\n  }\r\n}\r\n","\r\n<div class=\"full-width\">\r\n    <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon class=\"backIcon\" (click)=\"close()\">close</mat-icon>\r\n    </div>\r\n    <div fxLayout=\"row\">\r\n        <h4 class=\"paraFont\">Offer Accept / Reject Summary</h4>\r\n    </div>\r\n\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n                <div class=\"full-width\">\r\n                    <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                            <ng-container>\r\n                                <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <div fxLayout=\"row wrap\">\r\n\r\n                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                <ng-container>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Applicant Name</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.applicantName}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Approved Loan Amount</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.approvedLoanAmount}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.loanTenure}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Installment Type</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.installmentType}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Installment Frequency</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.installmentFrequency}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Rate Of Interest(in %)</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.rateOfInterest}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Principal</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.principle}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Interest</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.interest}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Installment Amount</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.installmentAmount}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Charges</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.charges}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Offer Issue Date</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.offerIssueDate}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Generate Offer</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.generateOffer}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Customer Response</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{userRecommendation.userRecommendation}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Date Of Offer Accept/Reject</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.dateOfOfferAcceptOrReject}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Offer Expiry Date</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails.offerExpiryDate}}</mat-hint>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </mat-card>\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p class=\"editButton\" (click)=\"edit()\">Edit</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-asset-valuation',\r\n  templateUrl: './asset-valuation.component.html',\r\n  styleUrls: ['./asset-valuation.component.scss']\r\n})\r\nexport class AssetValuationComponent implements OnInit {\r\n  bankValuationArr:string[]=['internal','external'];\r\n  //bankValuationArr:string[]=['Asset Value'];\r\n  areaArr:string[]=['sq','hectare'];\r\n  assetValuation: FormGroup;\r\n  marketValue: any;\r\n  showEditOption: boolean = false;\r\n  accountDetails: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,private ls: \r\n    LocalStoreService,private loader: AppLoaderService,private apiService:ApiService, private snack: MatSnackBar,\r\n    private router: Router) { \r\n    this.assetValuation = this.formBuilder.group({\r\n      bankValuation: ['',[Validators.required]],\r\n      assetType: ['',[Validators.required]],\r\n      propertyAreaSize: ['',[Validators.required]],\r\n      mktValOfAsset: ['',[Validators.required]],\r\n      assetValue: ['',[Validators.required]],\r\n      valuationDate: ['',[Validators.required]],\r\n      actualPropertyAreaSize: ['',[Validators.required]],\r\n      actualPropertyAreaInUnits: ['',[Validators.required]],\r\n    })\r\n  }\r\n  ngOnInit(): void {\r\n    let isAssetValuationScreen: boolean = JSON.parse(this.ls.getItem('valuationAsset'));\r\n    //if (this.loanAccountId != null && isAssetValuationScreen) {\r\n    if (9999 != null && isAssetValuationScreen) {\r\n      this.showEditOption = true;\r\n      \r\n      this.getAccountDetails();\r\n    } \r\n    else {\r\n      console.log(\"else\");\r\n      this.showEditOption = false;\r\n      this.buildOfferIssueForm();\r\n    }\r\n  }\r\n  getAccountDetails(){\r\n    this.loader.open();\r\n    //this.apiService.getAssetValuation(this.loacnAccountId).subscribe((accountDetails) => {\r\n    this.apiService.getAssetValuation(112).subscribe((accountDetails) => {\r\n      this.loader.close();\r\n      this.accountDetails = accountDetails;\r\n      console.log(this.accountDetails);\r\n      this.buildOfferIssueForm(this.accountDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n\r\n  }\r\n  buildOfferIssueForm(data?) {\r\n    this.assetValuation = this.formBuilder.group({\r\n      bankValuation : [data ? data.bankValuation:''],\r\n      assetType:[data ? data.assetType:''],\r\n      propertyAreaSize:[data ? data.propertyAreaSize:''],\r\n      mktValOfAsset:[data ? data.mktValOfAsset:''],\r\n      assetValue:[data ? data.assetValue:''],    \r\n      valuationDate:[data ? data.valuationDate:''],  \r\n      actualPropertyAreaSize:[data ? data.actualPropertyAreaSize:''],\r\n      actualPropertyAreaInUnits:[data ? data.actualPropertyAreaInUnits:''],\r\n\r\n  })\r\n}\r\n\r\n  goBack(){\r\n    this.router.navigate([\"/loan/offer-issue/credit-rating\"]);\r\n  }\r\n  submit(){\r\n    let details:  any;\r\n    //details.push(this.legalOpinion.value);\r\n    let now = new Date();\r\n    now=this.assetValuation.value.valuationDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    console.log(\"dateStringWithTime\",dateStringWithTime);\r\n    var pk=this.assetValuation.value.actualPropertyAreaSize;\r\n    pk= parseInt(pk);\r\n    var prSize=this.assetValuation.value.propertyAreaSize;\r\n    prSize= parseInt(prSize);\r\n    let payload={\r\n      loanAccountId:parseInt(\"112\"),\r\n      bankValuation:this.assetValuation.value.bankValuation,\r\n      assetType:this.assetValuation.value.assetType,\r\n      propertyAreaSize:prSize,\r\n      mktValOfAsset:this.assetValuation.value.mktValOfAsset,\r\n      assetValue:this.assetValuation.value.assetValue,\r\n      actualPropertyAreaInUnits:this.assetValuation.value.actualPropertyAreaInUnits,\r\n      valuationDate:dateStringWithTime,\r\n      actualPropertyAreaSize:pk,\r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.saveOrValuationOfAsset(payload).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n     \r\n      }\r\n    })\r\n    \r\n  this.next();\r\n}\r\n\r\n  next(){\r\n    this.ls.setItem('valuationAsset', true);\r\n    this.router.navigate([\"/loan/account/list/offer-issue/legal-opinion\"]);\r\n  }\r\n  keyPress1(event: any) {\r\n    const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    const input = event.target.value;\r\n    if (input.length === 0 && event.which === 48) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  //comma seprator\r\n  onInput(event: any, flag) {\r\n    if (flag) {\r\n      this.marketValue = event.target.value;\r\n    } else {\r\n      this.marketValue = event;\r\n    }\r\n  \r\n    console.log(\"this.salary)::\", this.marketValue);\r\n    let sal = this.marketValue.toString().replace(/,/g, '').split(\".\");\r\n    sal[0] = sal[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    let final = sal.join(\".\");\r\n    console.log(\"final\", final);\r\n    this.assetValuation.controls.mktValOfAsset.setValue(final);\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n          <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-80\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n          <div class=\"card-title-text\"><h1>Valuation of Asset</h1></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"column\">\r\n    <form [formGroup]=\"assetValuation\">\r\n        <mat-card fxLayout=\"column\" style=\"border-radius: 30px;\">\r\n            <div class=\"container\">\r\n                \r\n                <div class=\"text mat-typography\">Valuation Details</div>\r\n                <div class=\"line\" ><mat-divider></mat-divider></div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <label  class=\"hint\">Bank Valuation* </label>\r\n                    <mat-card class=\"inputMatName\">\r\n                          <mat-select  [formControl]=\"assetValuation.controls['bankValuation']\" disableOptionCentering class=\"alignment\" >\r\n                            <mat-option >select</mat-option>\r\n                            <mat-option *ngFor=\"let bankValuation of bankValuationArr\" value=\"bankValuation\">\r\n                                {{bankValuation}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-card>\r\n                    <mat-error\r\n                     *ngIf=\"assetValuation.get('bankValuation').touched && !assetValuation.get('bankValuation').valid\">\r\n                     <small>Please enter Asset Type!</small> \r\n                     </mat-error>\r\n                   \r\n                  </div>\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <label  class=\"hint\">Asset Type*</label>\r\n                    <mat-card class=\"inputMatName\">\r\n                      <input matInput formControlName=\"assetType\" class=\"alignment\" type=\"text\" name=\"assetType\"\r\n                         required />\r\n                    </mat-card>\r\n                    <mat-error\r\n                     *ngIf=\"assetValuation.get('assetType').touched && !assetValuation.get('assetType').valid\">\r\n                     <small>Please enter Asset Type!</small> \r\n                     </mat-error>\r\n                   \r\n                  </div>\r\n            </div>\r\n            <!--<div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"8%\">\r\n                    <label  class=\"hint\">Property Area </label>\r\n                    <mat-card class=\"inputMatName\">\r\n                        Sq\r\n                      </mat-card>\r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"41%\" >\r\n                    <label  class=\"hint\">w</label>\r\n                    <mat-card class=\"inputMatName\">\r\n                      <input matInput formControlName=\"propertArea\" class=\"alignment\" type=\"text\" \r\n                          />\r\n                    </mat-card>\r\n                   \r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <label  class=\"hint\">Borrowers MArket Value of Asset</label>\r\n                    <mat-card class=\"inputMatName\">\r\n                      <input matInput formControlName=\"marketValue\" class=\"alignment\" type=\"text\" \r\n                          />\r\n                    </mat-card>\r\n                   \r\n                </div>\r\n    \r\n            </div>-->\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div fxLayout=\"column\" fxFlex=\"100\">\r\n                    <label  class=\"hint\">Property Area*</label>\r\n                    <div fxLayout=\"row\">\r\n                        <div class=\"flex-grow-1\" fxFlex=\"15%\">\r\n                    \r\n                            <mat-card class=\"inputMatName\">\r\n                                Sq\r\n                              </mat-card>\r\n                        </div>\r\n                        <div class=\"flex-grow-1\" fxFlex=\"85%\" >\r\n                            \r\n                            <mat-card class=\"inputMatName\">\r\n                                <input matInput formControlName=\"propertyAreaSize\" class=\"alignment\" type=\"text\" \r\n                                (keypress)=\"_keyPress($event)\" />\r\n                              </mat-card>\r\n                              <mat-error\r\n                                *ngIf=\"assetValuation.get('propertyAreaSize').touched && !assetValuation.get('propertyAreaSize').valid\">\r\n                                 <small>Please enter Property Area!</small> \r\n                              </mat-error>\r\n                             \r\n                           \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <label  class=\"hint\">Borrowers MArket Value of Asset*</label>\r\n                    <mat-card class=\"inputMatName\">\r\n                      <input matInput formControlName=\"mktValOfAsset\" class=\"alignment\" type=\"text\" \r\n                      (keypress)=\"keyPress1($event)\"  (keyup)=\"onInput($event,true)\"  />\r\n                    </mat-card>\r\n                    <mat-error\r\n                     *ngIf=\"assetValuation.get('mktValOfAsset').touched && !assetValuation.get('mktValOfAsset').valid\">\r\n                     <small>Please enter Borrowers Market Value of Asset!</small> \r\n                     </mat-error>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <label  class=\"hint\">Asset Valuer*</label>\r\n                    <mat-card class=\"inputMatName\">\r\n                        <mat-select formControlName=\"assetValue\" disableOptionCentering>\r\n                            <mat-option value=\"\">Select</mat-option>\r\n                            <mat-option value=\"Bank Manager\">Bank Manager</mat-option>\r\n                            <mat-option value=\"Bank Clerk\">Bank Clerk</mat-option>\r\n                            <mat-option value=\"Bank Accountant\">Bank Accountant</mat-option>\r\n                          </mat-select>\r\n                    </mat-card>\r\n                    <mat-error\r\n                     *ngIf=\"assetValuation.get('assetValue').touched && !assetValuation.get('assetValue').valid\">\r\n                     <small>Please select Asset Valuer</small> \r\n                     </mat-error>\r\n                   \r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <label  class=\"hint\">Valuation Date*</label>\r\n                    <mat-card class=\"inputMatName\">\r\n                        <input matInput  class=\"alignment\" readonly formControlName=\"valuationDate\" \r\n                        [matDatepicker]=\"appDatepicker\"  />\r\n                        <div fxFlex=\"8%\" id=\"toggle\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" >\r\n                            </mat-datepicker-toggle>\r\n          \r\n                            <mat-datepicker #appDatepicker>\r\n                            </mat-datepicker>\r\n                          </div>\r\n                    </mat-card>\r\n                    <mat-error\r\n                     *ngIf=\"assetValuation.get('valuationDate').touched && !assetValuation.get('valuationDate').valid\">\r\n                     <small>Please Select Valuation Date!</small> \r\n                     </mat-error>\r\n                    \r\n                </div>\r\n               \r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div fxLayout=\"column\" fxFlex=\"100\">\r\n                    <label  class=\"hint\">Actual Area of the Property*</label>\r\n                    <div fxLayout=\"row\">\r\n                        <div class=\"flex-grow-1\" fxFlex=\"15%\">\r\n                    \r\n                            <mat-card class=\"inputMatName\">\r\n                                <mat-select class=\"alignment\" disableOptionCentering [formControl]=\"assetValuation.controls['actualPropertyAreaInUnits']\">\r\n                                    <mat-option >select</mat-option>\r\n                                    <mat-option *ngFor=\"let actualPropertyAreaInUnits of areaArr\" value=\"actualPropertyAreaInUnits\" >\r\n                                        {{actualPropertyAreaInUnits}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                              </mat-card>           \r\n                        </div>\r\n                        <div class=\"flex-grow-1\" fxFlex=\"85%\" >\r\n                            \r\n                            <mat-card class=\"inputMatName\">\r\n                              <input matInput formControlName=\"actualPropertyAreaSize\" class=\"alignment\" type=\"text\" \r\n                              (keypress)=\"_keyPress($event)\" />\r\n                            </mat-card>\r\n                            <mat-error\r\n                     *ngIf=\"assetValuation.get('actualPropertyAreaSize').touched && !assetValuation.get('actualPropertyAreaSize').valid\">\r\n                     <small>Please Select Actual Area of the Property!</small> \r\n                     </mat-error>\r\n                           \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <label  class=\"hint\">Face Value of Asset</label>\r\n                    <mat-card class=\"inputMatName\">   \r\n                        <mat-select disableOptionCentering>\r\n                            <mat-option value=\"\">Currency</mat-option>\r\n                            <mat-option value=\"\">INR</mat-option>\r\n                            \r\n                          </mat-select>\r\n                    </mat-card>\r\n                    <!-- <mat-error\r\n                     *ngIf=\"assetValuation.get('faceValueAsset').touched && !assetValuation.get('faceValueAsset').valid\">\r\n                     <small>Please Select Face Value of Asset!</small> \r\n                     </mat-error>-->\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                    <label  class=\"hint\">Market Value of Asset</label>\r\n                    <mat-card class=\"inputMatName\">\r\n                        <mat-select disableOptionCentering>\r\n                            <mat-option value=\"\">Currency</mat-option>\r\n                            <mat-option value=\"\">INR</mat-option>\r\n                          </mat-select>\r\n                    </mat-card>\r\n                    <!-- <mat-error\r\n                     *ngIf=\"assetValuation.get('marketValueAsset').touched && !assetValuation.get('marketValueAsset').valid\">\r\n                     <small>Please Select Market Value of Asset!</small> \r\n                     </mat-error>-->\r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                    <label  class=\"hint\">Forced Sale VAlue</label>\r\n                    <mat-card class=\"inputMatName\">\r\n                        <mat-select disableOptionCentering>\r\n                            <mat-option value=\"\">Currency</mat-option>\r\n                            <mat-option value=\"\" >INR</mat-option>\r\n                          </mat-select>\r\n                    </mat-card>\r\n                    <!-- <mat-error\r\n                     *ngIf=\"assetValuation.get('forcedSaleValue').touched && !assetValuation.get('forcedSaleValue').valid\">\r\n                     <small>Please Select Forced Sale Value!</small> \r\n                     </mat-error>-->\r\n                </div>\r\n    \r\n            </div>\r\n        </mat-card>\r\n        <div fxLayout=\"row\" class=\"button\">\r\n    \r\n            <button mat-button rounded  class=\"Back\" (click)=\"goBack()\" >\r\n              Back\r\n            </button>\r\n            <button mat-stroked-button class=\"Next\" [disabled]=\"!assetValuation.get('bankValuation').valid\" (click)=\"submit()\" >\r\n              Next\r\n            </button>\r\n            \r\n        </div>\r\n    </form>\r\n    \r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-legal-opinion',\r\n  templateUrl: './legal-opinion.component.html',\r\n  styleUrls: ['./legal-opinion.component.scss']\r\n})\r\nexport class LegalOpinionComponent implements OnInit {\r\n  legalOpinionId:any;\r\n  showEditOption: boolean = false;\r\n  lawyerArr:string[]=['John Asset','Peter','Henery Nicholus','Mountbaton'];\r\n  descriptionArr:string[]=['Title Deeds clear','sanction','Asset-backed securitisations'];\r\n  assetArea: number;\r\n  legalOpinion: FormGroup;\r\n  accountDetails: any;\r\n  loanInfo: any;\r\n  loanAccountId: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,private apiService:ApiService, private snack: MatSnackBar,private ls: \r\n    LocalStoreService,private loader: AppLoaderService,\r\n    private router: Router) {\r\n     \r\n        this.legalOpinion= this.formBuilder.group({\r\n\r\n          assetAreaSize: ['',[Validators.required]],\r\n          description:[''],\r\n          lawyerName:[''],\r\n          mktValOfAsset: ['',[Validators.required]],\r\n          opinion:[''],\r\n          opinionDate:[''],\r\n          valuationDate:[''],\r\n          \r\n        })\r\n     }\r\n\r\n  ngOnInit() {\r\n    \r\n    let isLegalOpinionScreen: boolean = JSON.parse(this.ls.getItem('legalScreen'));\r\n    //if (this.legalOpinionId != null && isLegalOpinionScreen) {\r\n      if (55655 != null && isLegalOpinionScreen) {\r\n      this.showEditOption = true;\r\n      this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n      if(this.loanInfo){\r\n        this.loanAccountId = this.loanInfo.loanAccountId;\r\n      }\r\n      setTimeout(() => {\r\n        this.getLegalOpinionDetails();\r\n      }, 10);\r\n     \r\n    }\r\n    else {\r\n      console.log(\"else\");\r\n      this.showEditOption = false;\r\n      this.buildOfferIssueForm();\r\n    }\r\n   \r\n  }\r\n  getLegalOpinionDetails(){\r\n    this.loader.open();\r\n    this.apiService.getLegalOpinion(112).subscribe((accountDetails) => {\r\n      this.loader.close();\r\n      this.accountDetails = accountDetails;\r\n      console.log(this.accountDetails);\r\n      this.buildOfferIssueForm(this.accountDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n\r\n\r\n  }\r\n  buildOfferIssueForm(data?){\r\n    this.legalOpinion = this.formBuilder.group({\r\n      assetAreaSize : [data ? data.assetAreaSize:''],\r\n      description:[data ? data.description:''],\r\n      lawyerName:[data ? data.lawyerName:''],\r\n      mktValOfAsset:[data ? data.mktValOfAsset:''],\r\n      opinion:[data ? data.opinion:''],    \r\n      opinionDate:[data ? data.opinionDate:''],  \r\n      valuationDate:[data ? data.valuationDate:''],\r\n      \r\n    \r\n    })\r\n\r\n  }\r\n  onclick(){\r\n    let now = new Date();\r\n    now=this.legalOpinion.value.opinionDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MM-DD HH:MM:SS');\r\n    console.log(\"dateStringWithTime\",dateStringWithTime);\r\n  }\r\n\r\n  Submit(){\r\n    let details:  any;\r\n    //details.push(this.legalOpinion.value);\r\n    let now = new Date();\r\n    now=this.legalOpinion.value.opinionDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    console.log(\"dateStringWithTime\",dateStringWithTime);\r\n    var pk=this.legalOpinion.value.assetAreaSize;\r\n    pk= parseInt(pk);\r\n    console.log(\"pk\",pk);\r\n    \r\n    //console.log(\"addbranch::\",details);\r\n    let payload={\r\n      \r\n      //assetAreaSize:this.legalOpinion.value.assetAreaSize,\r\n      assetAreaInUnits:this.legalOpinion.value.assetAreaInUnits,\r\n      assetAreaSize:pk,\r\n      description:this.legalOpinion.value.description,\r\n      isDecisionFavorable:\"yes\",\r\n      lawyerName:this.legalOpinion.value.lawyerName,\r\n      loanAccountId:112,\r\n      mktValOfAsset:this.legalOpinion.value.mktValOfAsset,\r\n      opinion:this.legalOpinion.value.opinion,\r\n      opinionDate:dateStringWithTime,\r\n      valuationDate:dateStringWithTime\r\n      \r\n      \r\n      //valuationDate:this.legalOpinion.value.valuationDate,\r\n      \r\n      \r\n      /*bankCode: this.holidaypopupForm.value.bankCode,\r\n      branchCode: this.holidaypopupForm.value.branchCode,\r\n      applicationDate:this.holidaypopupForm.value.applicationDate,\r\n      year:year,\r\n      id:this.holidaypopupForm.value.id,\r\n      month:month,\r\n     // calendar:calendar\r\n     calendar:date.toString()*/\r\n\r\n    }\r\n    this.apiService.UpdateLegalOpinion(payload).subscribe(response => {\r\n      console.log(response);\r\n      if (response === 200 || response !== null) {\r\n        this.snack.open('  Legal Opinion  Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.Next();\r\n      }\r\n      else if (response === 500) {\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n    \r\n  }\r\n  Next(){\r\n    this.ls.setItem('legalScreen', true);\r\n    this.router.navigate([\"/loan/account/list/offer-issue/offer-assessment\"]);\r\n  \r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([\"/loan/account/list/offer-issue/valuation-asset\"]);\r\n  }\r\n  _keyPress1(event: any) {\r\n    const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    const input = event.target.value;\r\n    if (input.length === 0 && event.which === 48) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  onInput(event: any, flag) {\r\n    if (flag) {\r\n      this.assetArea = event.target.value;\r\n    } else {\r\n      this.assetArea = event;\r\n    }\r\n  \r\n    console.log(\"this.salary)::\", this.assetArea);\r\n    let sal = this.assetArea.toString().replace(/,/g, '').split(\".\");\r\n    sal[0] = sal[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    let final = sal.join(\".\");\r\n    console.log(\"final\", final);\r\n    this.legalOpinion.controls.mktValOfAsset.setValue(final);\r\n  }\r\n  onInput1(event: any, flag) {\r\n    if (flag) {\r\n      this.assetArea = event.target.value;\r\n    } else {\r\n      this.assetArea = event;\r\n    }\r\n  \r\n    console.log(\"this.salary)::\", this.assetArea);\r\n    let sal = this.assetArea.toString().replace(/,/g, '').split(\".\");\r\n    sal[0] = sal[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    let final = sal.join(\".\");\r\n    console.log(\"final\", final);\r\n    this.legalOpinion.controls.assetAreaSize.setValue(final);\r\n  }\r\n}","<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n          <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-80\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n          <div class=\"main-title\"><b>Legal Opinion</b></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"column\">\r\n<form fxLayout=\"column\"  [formGroup]=\"legalOpinion\" >\r\n<div fxFlex=\"100\">\r\n    <mat-card fxLayout=\"column\" style=\"border-radius: 30px; margin-right: 1.5cm;\">\r\n        <mat-card-title >\r\n            <div class=\"card-title-text\">Legal Opinion<mat-divider></mat-divider></div>\r\n        </mat-card-title>\r\n\r\n        <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <label  class=\"hint\">Opinion </label>\r\n                <mat-card class=\"inputMatName\">\r\n                      <mat-select disableOptionCentering  class=\"alignment\" formControlName=\"opinion\"  >\r\n                        <mat-option >select</mat-option>\r\n                        <mat-option value=\"Bank Panel\" >Bank Panel</mat-option>\r\n                        <mat-option value=\"Bank Manager\" >Bank Manager</mat-option>\r\n                        <mat-option value=\"Bank Accountant\" >Bank Accountant</mat-option>\r\n                        <!--<mat-option *ngFor=\"let category of assetValuerArr\" value=\"agencyselect\">\r\n                            {{category}}\r\n                        </mat-option>-->\r\n                    </mat-select>\r\n                </mat-card>\r\n                <mat-error\r\n                *ngIf=\"legalOpinion.get('opinion').touched && !legalOpinion.get('opinion').valid\">\r\n                 <small>Please Select Opinion!</small> \r\n                </mat-error>\r\n               \r\n              </div>\r\n              <div fxLayout=\"column\" fxFlex=\"100\">\r\n                <label  class=\"hint\">Asset Area *</label>\r\n                <div fxLayout=\"row\">\r\n                    <div class=\"flex-grow-1\" fxFlex=\"15%\">\r\n                \r\n                        <mat-card class=\"inputMatName\">\r\n                            <mat-placeholder>Sq</mat-placeholder>\r\n                          </mat-card>\r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"85%\" >\r\n                        \r\n                        <mat-card class=\"inputMatName\">\r\n                          <input matInput\r\n                          formControlName=\"assetAreaSize\" \r\n                          (keypress)=\"_keyPress1($event)\"\r\n                            (keyup)=\"onInput1($event,true)\"  name=\"assetAreaSize\" \r\n                            maxlength=\"16\"\r\n                          \r\n                           class=\"alignment\" type=\"text\" \r\n                              />\r\n                        </mat-card>\r\n                        <mat-error\r\n                        *ngIf=\"legalOpinion.get('assetAreaSize').touched &&\r\n                        !legalOpinion.get('assetAreaSize').valid\">\r\n                        <small>Please enter Asset Area !</small> \r\n                    </mat-error>\r\n                       \r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <label  class=\"hint\">Market Value of Asset *</label>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input matInput  class=\"alignment\" type=\"text\" name=\"mktValOfAsset\" \r\n                  formControlName=\"mktValOfAsset\" \r\n                  (keypress)=\"_keyPress1($event)\"  (keyup)=\"onInput($event,true)\" maxlength=\"16\" />\r\n                </mat-card>\r\n                <mat-error\r\n                        *ngIf=\"legalOpinion.get('mktValOfAsset').touched &&\r\n                         !legalOpinion.get('mktValOfAsset').valid\">\r\n                        <small>Please enter Market Value of Asset !</small> \r\n                    </mat-error>\r\n               \r\n            </div>\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <label  class=\"hint\">Lawyer Name</label>\r\n                <mat-card class=\"inputMatName\">\r\n                      <mat-select disableOptionCentering class=\"alignment\" formControlName=\"lawyerName\"  >\r\n                        <mat-option >select</mat-option>\r\n                        <mat-option *ngFor=\"let lawyerName of lawyerArr\" [value]=\"lawyerName\">\r\n                            {{lawyerName}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>  \r\n                <mat-error\r\n                *ngIf=\"legalOpinion.get('lawyerName').touched && !legalOpinion.get('lawyerName').valid\">\r\n                 <small>Please Select Lawyer Name!</small> \r\n                </mat-error> \r\n            </div>\r\n              \r\n        </div>\r\n        <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <label  class=\"hint\">Opinion Date</label>\r\n                <mat-card class=\"inputMatLastName\" style=\"height:48px;\">\r\n                      <input matInput  id=\"dob\" class=\"alignment\" name=\"opinionDate\" readonly\r\n                        [matDatepicker]=\"picker\" \r\n                        formControlName=\"opinionDate\"  value=\"opinionDate\" placeholder=\"DD/MM/YYYY\">\r\n                    <div fxFlex=\"8%\" id=\"toggle\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\" >\r\n                        </mat-datepicker-toggle>\r\n      \r\n                        <mat-datepicker #picker>\r\n                        </mat-datepicker>\r\n                      </div>\r\n      \r\n                 </mat-card>\r\n                 <mat-error\r\n                *ngIf=\"legalOpinion.get('opinionDate').touched && !legalOpinion.get('opinionDate').valid\">\r\n                 <small>Please Select Opinion Date!</small> \r\n                </mat-error> \r\n  \r\n            </div>\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <label  class=\"hint\">Valuation Date</label>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input matInput  class=\"alignment\" type=\"text\" name=\"valuationDate\"\r\n                  placeholder=\"DD/MM/YYYY\" formControlName=\"valuationDate\" \r\n                     />\r\n                </mat-card>\r\n               \r\n            </div>\r\n           \r\n              \r\n        </div>\r\n        <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n           \r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <label  class=\"hint\">Description</label>\r\n                <mat-card class=\"inputMatName\">\r\n                      <mat-select disableOptionCentering class=\"alignment\" formControlName=\"description\">\r\n                        <mat-option >select</mat-option>\r\n                        <mat-option *ngFor=\"let description of descriptionArr\" [value]=\"description\">\r\n                            {{description}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-card>   \r\n                <mat-error\r\n                *ngIf=\"legalOpinion.get('description').touched && !legalOpinion.get('description').valid\">\r\n                 <small>Please Select Description!</small> \r\n                </mat-error>\r\n            </div>\r\n            <div class=\"pb-1\" style=\"padding-top: 1.5cm; \" >\r\n                Descision Favourable ? \r\n                <mat-slide-toggle\r\n                ></mat-slide-toggle>\r\n              </div>\r\n              \r\n        </div>\r\n\r\n    </mat-card>\r\n\r\n</div>\r\n<div class=\"button\">\r\n    <!-- -->\r\n    <button mat-button class=\"Back\" (click)=\"goBack()\" >Back</button>\r\n    <button mat-stroked-button class=\"Next\" (click)=\"Submit()\" [disabled]=\"!legalOpinion.valid\"  >Next</button>\r\n</div>\r\n</form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'app/shared/services/data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-assessment-summary',\r\n  templateUrl: './assessment-summary.component.html',\r\n  styleUrls: ['./assessment-summary.component.scss']\r\n})\r\nexport class AssessmentSummaryComponent implements OnInit {\r\n\r\n  \r\n   userRecommendation={'userRecommendation' :'Recomended For Approval'};\r\n  // assessmentDetails= {'requestedLoanAmount':'$200,000',\r\n  //                     'loanTenure'         :'5 years',\r\n  //                     'rateOfIntrested'    :'5%',\r\n  //                     'loanAmountRecomended':'$500,000',\r\n  //                     'approvedLoanAmount  ':'$200,000',\r\n  //                     'findLoanTenure'      :'5 years',\r\n  //                     'finalRate'           :'5%'\r\n  //                   };\r\n    public items: any;\r\n  \r\n\r\n  constructor(\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    public dialogRef: MatDialogRef<AssessmentSummaryComponent>,\r\n     private snack: MatSnackBar,\r\n     private dataService:DataService,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchAssessmentDetails();\r\n  }\r\n\r\n  fetchAssessmentDetails() {\r\n    this.apiService.getAssessmentDetails(1234)\r\n      .subscribe((data : any) => {\r\n        this.items = data;\r\n        console.log(this.items);\r\n      })\r\n  }\r\n\r\n  // getAccountDetails(){\r\n  //   this.apiService.getOfferIssueDetails(9998).subscribe((accountDetails : any) => {\r\n  //     console.log(\"All Account Service\",accountDetails);\r\n  //     this.accountDetails = accountDetails;\r\n  //     console.log(\"this.offerissuedetail\",this.offerissuedetail);\r\n      \r\n      \r\n  //     });\r\n  // }\r\n\r\n  edit(){\r\n    this.dataService.sendNavParam(this.items);\r\n    this.dialogRef.close();\r\n    this.router.navigate(['loan/account-approval/assessment-details']); \r\n  }\r\n  close(){\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/loan/account-approval/list`]);\r\n  }\r\n}\r\n","<div class=\"full-width\">\r\n    <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon class=\"backIcon\" (click)=\"close()\">close</mat-icon>\r\n    </div>\r\n    <div fxLayout=\"row\">\r\n        <h4 class=\"paraFont\">Assessment Summary</h4>\r\n    </div>\r\n\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n                <div class=\"full-width\">\r\n                    <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                            <ng-container>\r\n                                <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <div fxLayout=\"row wrap\">\r\n                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                <ng-container >\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Requested Loan Amount\r\n                                                        </mat-hint><br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{items.requestedLoanAmount}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Loan Tenure\r\n                                                        </mat-hint><br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{items.loanTenure}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Rate Of Interest\r\n                                                        </mat-hint><br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{items.rateOfInterest}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">System Recommendation\r\n                                                        </mat-hint><br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{items.systemRecommendation}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">User Recommendation\r\n                                                        </mat-hint><br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{items.userRecommendation}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Loan Amount Recommended\r\n                                                        </mat-hint><br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{items.loanAmountRecommendation}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Approved Loan Amount\r\n                                                        </mat-hint><br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{items.approvedLoanAmount}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Final Loan tenure\r\n                                                        </mat-hint><br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{items.finalLoanTenure}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Final Rate\r\n                                                        </mat-hint><br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{items.finalRate}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>       \r\n                                    </mat-card>\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p class=\"editButton\" (click)=\"edit()\">Edit</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/home/account.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-assesment-stage',\r\n  templateUrl: './loan-assesment-stage.component.html',\r\n  styleUrls: ['./loan-assesment-stage.component.scss']\r\n})\r\nexport class LoanAssesmentStageComponent implements OnInit {\r\n  isLoanQualitativeScoreboard:boolean=false;\r\n  isLoanAssessmentDetails:boolean=false;\r\n  accountId: any;\r\n  isAssessmentStageDone: boolean = false;\r\n  assessmentReportSummary:any;\r\n  loanAccountId: any;\r\n\r\n  constructor(private router: Router, private dialogService: DialogService, \r\n    private ls: LocalStoreService, private cdr: ChangeDetectorRef,\r\n     private accountService: AccountService, private apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    //this.accountId = this.ls.getItem('accountId');\r\n    this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    this.isAssessmentStageDone = this.ls.getItem('assessmentStage');\r\n    this.isLoanQualitativeScoreboard=this.ls.getItem('LOAN_QUALITATIVE_SCOREBOARD_DONE');\r\n    this.isLoanAssessmentDetails=this.ls.getItem('LOAN_ASSESSMENT_DETAILS_DONE');\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n    //  this.accountId = this.ls.getItem('accountId');\r\n      this.loanAccountId = this.ls.getItem('loanAccountId');\r\n      this.isLoanQualitativeScoreboard=this.ls.getItem('LOAN_QUALITATIVE_SCOREBOARD_DONE');\r\n      this.isLoanAssessmentDetails=this.ls.getItem('LOAN_ASSESSMENT_DETAILS_DONE');\r\n      this.cdr.markForCheck();\r\n    });\r\n  // this.getData(this.accountId);\r\n  }\r\n\r\n  qualitativeScoreboard(){\r\n    this.router.navigate([\"loan/account/assessment/qualitative\"]);\r\n  }\r\n\r\n  getData(id){\r\n    this.apiService.getApplnAssessmentDetails(id).subscribe((response) => {\r\n      this.assessmentReportSummary = response;\r\n      console.log( this.assessmentReportSummary);\r\n    });\r\n  }\r\n\r\n  viewSummary(){\r\n    this.router.navigate([`loan/account/assessment/summary`,]);\r\n  }\r\n\r\n  openLoanQualitativeDialog(){\r\n    this.dialogService.loanQualitativeSummaryDialog();\r\n  }\r\n\r\n  openLoanAssessmentDialog(){\r\n    this.dialogService.loanAssessmentSummaryDialog();\r\n  }\r\n\r\n  // goToLoanAssessmentSummary(){\r\n  //   this.dialogService.loanAssessmentStageSummary();\r\n  // }\r\n\r\n}","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <div class=\"propic text-center\">\r\n        <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n      </div> -->\r\n    <div class=\"profile-pic text-center\">\r\n       <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n      <i class=\"fa fa-edit upload-icon\"></i>\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title\"><b>Create Retain Loan Account</b></div>\r\n      <div class=\"text-muted\">\r\n        Open a Retain Loan Account with bank XYZ bank in a better way.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\" *ngIf=\"isLoanQualitativeScoreboard && isLoanAssessmentDetails\" class=\"mt-8\">\r\n    <mat-card\r\n    [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n  >\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <div fxFlex=\"10\">\r\n        <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n      </div>\r\n      <div fxFlex=\"30\">\r\n        <h6>Application Assesment Completed</h6>\r\n      </div>\r\n      <span fxFlex></span>\r\n      <button\r\n      mat-button\r\n      (click) =\"viewSummary()\"\r\n      color=\"primary\" \r\n    >\r\n      View Summary\r\n    </button>\r\n    </div>\r\n  </mat-card>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n  <div fxFlex=\"50\"  fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n    <!-- Card 1 start-->\r\n    <mat-card [ngClass]=\"{'border-size':isLoanQualitativeScoreboard || !isLoanQualitativeScoreboard}\">\r\n    <mat-card-header>\r\n        <mat-card-title>1. Qualitative Scorecard Details</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n           <p class=\"text-align\">Relevant evaluation details of the Applicant is captured and the scores are automatically displayed.</p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n               \r\n          <img [src]=\"'assets/images/svg/undraw_Scrum_board_re_wk7v.svg'\" class=\"card-img\">\r\n            </div>\r\n          </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isLoanQualitativeScoreboard\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <!-- <ng-container *ngIf=\"isChargesScreen && isQualitativeScreen; else showQualitative\"> -->\r\n            <!-- <ng-container *ngIf=\"isLoanQualitativeScoreboard\"; else showQualitative></ng-container> -->\r\n            <button\r\n            mat-button \r\n            [routerLink]=\"['/loan/account/assessment/qualitative']\"\r\n            color=\"primary\" *ngIf=\"!isLoanQualitativeScoreboard\" \r\n            >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        \r\n          <button\r\n            mat-button\r\n            color=\"primary\" *ngIf=\"isLoanQualitativeScoreboard\"\r\n            (click)=\"openLoanQualitativeDialog()\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n          <!-- </ng-container> -->\r\n          <ng-template #showQualitative>\r\n          \r\n          </ng-template>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\"  fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- card 2 start-->\r\n    <!-- <mat-card *ngIf=\"overDraftByStatus\"> -->\r\n    <mat-card [ngClass]=\"{'border-size':isLoanAssessmentDetails || !isLoanAssessmentDetails && isLoanQualitativeScoreboard}\">\r\n      <mat-card-header>\r\n          <mat-card-title>2. Assessment Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between start\" >\r\n              <div fxFlex=\"50%\"  class=\"notActive\">\r\n                 <p class=\"text-align\">The evaluation in terms of the qualitative and quantitative scores are recorded.</p>\r\n              </div>\r\n              <div fxFlex=\"50%\" class=\"notActive\">\r\n                  <img [src]=\"'assets/images/svg/MaskGroup_13.svg'\" class=\"card-img\">\r\n               </div>\r\n            </div>\r\n          <!--begin::Progress-->\r\n          <div class=\"mb-1\" *ngIf=\"isLoanAssessmentDetails\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n          </div>\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n          <mat-divider></mat-divider>\r\n          <mat-card-actions>\r\n            <ng-container *ngIf=\"isLoanQualitativeScoreboard && isLoanAssessmentDetails; else showReport\">\r\n              <!-- <ng-container> -->\r\n                \r\n            <button\r\n            mat-button\r\n            (click)=\"openLoanAssessmentDialog()\"\r\n            color=\"primary\"\r\n          >\r\n              View Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n            </ng-container>\r\n            <ng-template #showReport>\r\n              <button\r\n              mat-button\r\n              [routerLink]=\"[ '/loan/account/assessment/assessment-details']\"\r\n              color=\"primary\"  *ngIf=\"!isLoanAssessmentDetails\" \r\n              >\r\n              Add Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n            </ng-template>\r\n          </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 2 end-->\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-account-creation-summary',\r\n  templateUrl: './account-creation-summary.component.html',\r\n  styleUrls: ['./account-creation-summary.component.scss']\r\n})\r\nexport class AccountCreationSummaryComponent implements OnInit {\r\n  titleName = \"Account Creation Stage\";\r\n  accountCreateValue: any;\r\n  offerAcceptRejectvalue: any;\r\n  loanaccountID: any;\r\n  loanInfo: any;\r\n\r\n  constructor(private router:Router,private api: ApiService,private ls:LocalStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    this.getOfferAcceptReject();\r\n    this.getAccountCreateDetails();\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/loan/account/list`]);\r\n  }\r\n\r\n\r\n  done() {\r\n    this.router.navigate([`/loan/account/list`]);\r\n  }\r\n  getOfferAcceptReject() {\r\n    this.api.getOfferAcceptReject('200')\r\n     .subscribe((offerAcceptReject: any)=> {\r\n      console.log(offerAcceptReject);\r\n      this.offerAcceptRejectvalue=offerAcceptReject;\r\n      \r\n    });\r\n  }\r\n  getAccountCreateDetails() {\r\n    this.api.getAccountCreateDetails(this.loanaccountID)\r\n     .subscribe((accountCreateDetails: any)=> {\r\n      console.log(accountCreateDetails);\r\n      this.accountCreateValue=accountCreateDetails;\r\n      \r\n    });\r\n  }\r\n\r\n}\r\n","<div>\r\n    <img class=\"entryImg\" src=\"assets/images/entry.png\" alt=\"\">\r\n    <h4 class=\"para\">{{titleName}}</h4>\r\n\r\n<!--Offer Accept Reject Details-->\r\n\r\n<!-- <div class=\"full-width\">\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Offer Accept/Reject</h4>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Applicant Name</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.applicantName}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Approved Loan Amount </mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.approvedLoanAmount}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.loanTenure}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Installment Type</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.installmentType}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Installment Frequency</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.installmentFrequency}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Rate of Interest (in%)</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.rateOfInterest}}</mat-hint>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Approved Loan Amount</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.approvedLoanAmount}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.loanTenure}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Installment Type</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.installmentType}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n\r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Rate of Interest</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.rateOfInterest}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Principal</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.principal}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Interest</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.interest}}</mat-hint>\r\n                                        </div>\r\n                                      \r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Installment Amount</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.installmentAmount}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Charges</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.charges}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Offer Issue Date</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.offerIssueDate}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n\r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Generate Offer</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.generateOffer}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Customer Response</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.accept}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Date Of Offer Accept/Reject</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.dateOfOfferAcceptOrReject}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n\r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Offer Expiry Date </mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{offerAcceptRejectvalue.offerExpiryDate}}</mat-hint>\r\n\r\n                                        </div>\r\n                                      \r\n                                    </ng-container>\r\n                                </div>    \r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n\r\n<br>\r\n\r\n\r\n<!--account create Details-->\r\n<div class=\"full-width\">\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Account Create Details</h4>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"4%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Applicant Name</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.applicantName}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Approved Loan Amount </mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.approvedLoanAmount}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Offer Issue Date</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.offerIssueDate}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Offer Accepted Date</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.offerAcceptedDate}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.loanTenure}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Installment Type</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.installmentType}}</mat-hint>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Installment Frequency</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.installmentFrequency}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Rate of Interest</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.rateOfInterest}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Principal</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.principal}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n\r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Interest</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.interest}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Installment Amount</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.installmentAmount}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Charges</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.charges}}</mat-hint>\r\n                                        </div>\r\n                                      \r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Disbursement Amount</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.disbursementAmount}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Repayment Amount</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{accountCreateValue.repaymentAmount}}</mat-hint>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>                \r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n<div\r\nfxLayout=\"row\"\r\nfxLayoutAlign=\"space-between center\"\r\nfxLayoutGap=\"16px\"\r\nclass=\"mt-32\"\r\n>\r\n<button mat-button rounded color=\"primary\" (click)=\"goBack()\">\r\n  Back\r\n</button>\r\n<button\r\n  mat-raised-button\r\n  color=\"primary\"\r\n  (click)=\"done()\"\r\n>\r\n  Done\r\n</button>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\n\r\n@Component({\r\n  selector: 'app-credit-rating-details',\r\n  templateUrl: './credit-rating-details.component.html',\r\n  styleUrls: ['./credit-rating-details.component.scss']\r\n})\r\nexport class UnderWrittingCreditRatingDetailsComponent implements OnInit {\r\n  creditForms: FormGroup;\r\n  customerNames: any[]=[];\r\n\r\n  isCreditRatingDetails: any;\r\n  loanaccountID: any;\r\n  customerName: any;\r\n  loanInfo: any;\r\n  // customerNames=['Gayathri','joSmith'];\r\n  constructor(private formBuilder: FormBuilder,private ls: LocalStoreService,private appApiService: ApplicationEntryStageService,\r\n     private snack: MatSnackBar,private api: ApiService , private router: Router,private accountService:AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.customerName=this.ls.getItem('primaryCustomerName');\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    setTimeout(() => {\r\n      this.getCustomerInformationDetails();\r\n    }, 10);\r\n\r\nthis.isCreditRatingDetails = this.ls.getItem('CREDIT_RATING_DONE');\r\nif(this.isCreditRatingDetails==false){\r\n  this.buildCollateralForm();\r\n}\r\nelse{\r\n  this.gettingCreditRatingDetail();\r\n}\r\n    // this.buildCollateralForm();\r\n  console.log(this.isCreditRatingDetails);\r\n  }\r\n\r\n  gettingCreditRatingDetail() {\r\n    this.api.gettingCreditRatingDetails(this.loanaccountID)\r\n      .subscribe((resp: any) => {\r\n       console.log(resp);\r\n       this.buildCollateralForm(resp,true);\r\n      });\r\n  }\r\n \r\n  // buildCollateralForm(data?, isResponse?: boolean) {\r\n  buildCollateralForm(data?,isResponse?:boolean) {\r\n    console.log(data);\r\n \r\n    this.creditForms = this.formBuilder.group({\r\n      customerName:[data && data.customerName? data.customerName:'',Validators.required],\r\n      loanAccountId:this.loanaccountID,\r\n      agencyRating: this.formBuilder.array([this.addModFormGroup(data)])\r\n    });\r\n    console.log(this.creditForms);\r\n  }\r\n  getCustomerInformationDetails() {\r\n    this.appApiService.fetchCustomersByLoanAccId(this.loanaccountID,'loan')\r\n      .subscribe((resp: any) => {\r\n     console.log(\"resp for customer information names \",resp.data);\r\n     for (let index = 0; index < resp.data.length; index++) {\r\n       if(resp.data[index].middleName != null){\r\n      this.customerNames[index] = resp.data[index].firstName +\" \" +resp.data[index].middleName +\" \"+ resp.data[index].lastName;\r\n       }\r\n       else{\r\n        this.customerNames[index] = resp.data[index].firstName +\" \"+ resp.data[index].lastName;\r\n       }\r\n     }\r\n     console.log(\"customer name \",this.customerNames)\r\n     if(this.customerNames.length === 1){\r\n      this.creditForms.get('customerName').setValue(this.customerNames[0])\r\n     }\r\n      }, (err: any) => {\r\n      });\r\n  }\r\n    // convenience getters for easy access to form fields\r\n    get f() { return this.creditForms.controls; }\r\n    get c() { return this.f.agencyRating as FormArray; }\r\n \r\n  addFormGroup() {\r\n    this.c.push(this.formBuilder.group({\r\n      agencyId:[0],\r\n      agencyName: ['',Validators.required],\r\n      ratings: ['',Validators.required],\r\n      remarks: [''],\r\n\r\n    }));\r\n  }\r\n  \r\n\r\n  addModFormGroup(data): FormGroup {\r\n    console.log(data,\"inside addModeFormGrp\");\r\n    return this.formBuilder.group({\r\n      agencyId:[data?data.agencyId : 0],\r\n      agencyName: [data?data.agencyRating[0].agencyName : '',Validators.required],\r\n      ratings: [data?data.agencyRating[0].ratings : '',Validators.required],\r\n      remarks: [data?data.agencyRating[0].remarks : ''],\r\n\r\n    })\r\n  }\r\n  OnSubmit(val){\r\n    console.log(\"val\",val);\r\n    val.accountType =\"loan\";\r\n    // this.ls.setItem('CREDIT_RATING_DONE', true);\r\n    this.api.saveCreditDetails(val).subscribe((data: any) => {\r\n      console.log(data);\r\n      if (data === 200 || data !== null) {\r\n        this.snack.open(' Credit Score Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.ls.setItem('CREDIT_RATING_DONE', true);\r\n        this.accountService.refresh.next();\r\n        this.router.navigate([`/loan/account/list/underwritingStage/valuationofassets`]);\r\n      }\r\n      else if (data === 500) {\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  goBack() {\r\n    this.router.navigate([\"/loan/account/list/underwritingStage\"]);\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/Mask_Group_9.svg\" alt=\"\" class=\"w-90\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title1\"><h2>Credit Score Details</h2></div>\r\n      </div>\r\n    </div>\r\n  \r\n  <!-- </div> --> \r\n    <div fxFlex=\"100\">\r\n      <!-- <mat-progress-bar [mode]=\"determinate\" class=\"session-progress\"></mat-progress-bar> -->\r\n      <mat-card class=\"p-0\">     \r\n        \r\n        <mat-card-title>\r\n          <fieldset>\r\n          <legend visible=\"true\">Credit Score Details</legend>\r\n          </fieldset>\r\n        </mat-card-title> \r\n        <mat-card-content>\r\n          <form *ngIf=\"creditForms\" [formGroup]=\"creditForms\">\r\n         \r\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">            \r\n              \r\n              <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-2\">\r\n                <div class=\"flex-grow-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Customer Name*</mat-label>\r\n                <!-- <mat-card class=\" inputMatName mr-3\"> -->\r\n                  <input matInput [readonly]=\"true\" type=\"text\" class=\"alignment\" name=\"customerName\" formControlName=\"customerName\" >\r\n                    <!-- <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option value=\"GayathriR\">GayathriR</mat-option> -->\r\n                  \r\n  \r\n                <!-- </mat-card> -->\r\n                <mat-error *ngIf=\"!creditForms.get('customerName').valid && creditForms.get('customerName').touched\">\r\n                    Customer Name is Required!</mat-error>\r\n                  </mat-form-field>\r\n                  </div>\r\n              </div>\r\n           \r\n            </div>\r\n           \r\n            <div class=\"mt-16\" *ngFor=\"let mandate of c.controls; let i = index\"  >\r\n            <mat-accordion [formGroup]=\"mandate\" class=\"full-width mat-elevation-z0\">\r\n              <mat-expansion-panel class=\" borderStyle\" \r\n              >\r\n                <mat-expansion-panel-header class=\"marginData\">\r\n                  <mat-panel-title class=\"textDesign\">Score </mat-panel-title>\r\n                \r\n                </mat-expansion-panel-header>\r\n                <mat-divider class=\"design\"></mat-divider> \r\n                <!-- <mat-divider></mat-divider><br> -->\r\n                <div [formGroup]=\"mandate\">\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1 pt-2\">\r\n                        \r\n\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                                <mat-label>Select Agency*</mat-label>\r\n                                <!-- <mat-card class=\" inputMatName\"> -->\r\n                                  <mat-select name=\"agencyName\" disableOptionCentering formControlName=\"agencyName\">\r\n                                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                    <mat-option value=\"Test Agency\">Test Agency</mat-option>\r\n                                    <mat-option value=\"Ujjivan Agency\">Ujjivan Agency</mat-option>\r\n                                    <mat-option value=\"Fast Track Agency\">Fast Track Agency</mat-option>\r\n\r\n                                  </mat-select>\r\n                  \r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!mandate.controls['agencyName'].valid  && mandate.controls['agencyName'].touched\">\r\n                                    Agency is Required!</mat-error>\r\n                              </mat-form-field>\r\n                              </div>\r\n                              <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Remarks</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  \r\n                                  <input matInput formControlName=\"remarks\" class=\"alignment\" placeholder=\"remarks\"\r\n                                    type=\"text\" name=\"remarks\" />\r\n                                    \r\n                                <!-- </mat-card> -->\r\n                                <!-- <mat-error *ngIf=\"!mandate.controls['remarks'].valid  && mandate.controls['remarks'].touched\">\r\n                                    Remarks is Required!</mat-error> -->\r\n                                </mat-form-field>\r\n                              </div>\r\n                          \r\n                          </div>\r\n                          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pt-2\">\r\n                          \r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Ratings*</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName\"> -->\r\n                      \r\n                                  <input matInput formControlName=\"ratings\" class=\"alignment\" (keypress)=\"_keyPress($event)\" placeholder=\"ratings\"\r\n                                    type=\"text\" name=\"ratings\" />\r\n                                    \r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!mandate.controls['ratings'].valid  && mandate.controls['ratings'].touched\">\r\n                                    Ratings is Required!</mat-error>\r\n                              </mat-form-field>\r\n                              </div>\r\n\r\n                          </div>\r\n                     \r\n                    </div>\r\n                    <button mat-button color=\"primary\" class=\"PaddingChange\" (click)=\"addFormGroup()\">\r\n                        <mat-icon>add</mat-icon> ADD AGENCY\r\n                     </button> \r\n                  </div>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n\r\n          </div>           \r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n  \r\n        <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n          Back\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" class=\"Nextbtn\" (click)=\"OnSubmit(creditForms.value)\" [disabled]=\"!creditForms.valid\">\r\n          Next\r\n        </button>\r\n        \r\n      </div>\r\n    </div>  \r\n</div> \r\n  \r\n  \r\n  ","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-offer-accept-reject-details',\r\n  templateUrl: './offer-accept-reject-details.component.html',\r\n  styleUrls: ['./offer-accept-reject-details.component.scss']\r\n})\r\nexport class OfferAcceptRejectDetailsComponent implements OnInit {\r\n\r\n  public offerAcceptRejectForm: FormGroup;\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  customerResponse=['Accept', 'Reject'];\r\n  \r\n\r\n  constructor( private router:Router, private snack: MatSnackBar, private cdr: ChangeDetectorRef, private apiService: ApiService, private _location: Location, private fb: FormBuilder,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildOfferAcceptRejectForm({});\r\n  }\r\n\r\n  buildOfferAcceptRejectForm(data) {\r\n    this.offerAcceptRejectForm = this.fb.group({\r\n      offerAcceptOrRejectId:[data.offerAcceptOrRejectId = '12345'],\r\n      loanAccountId : '7654',  \r\n      applicantName: [data.applicantName],\r\n      approvedLoanAmount: [data.approvedLoanAmount],\r\n      loanTenure: [data.loanTenure],\r\n      installmentType: [data.installmentType],\r\n      installmentFrequency: [data.installmentFrequency],\r\n      rateOfInterest: [data.rateOfInterest],\r\n      principal: [data.principal],\r\n      interest: [data.interest],\r\n      installmentAmount: [data.installmentAmount],\r\n      charges: [data.charges],\r\n      dateOfOfferAcceptOrReject: [new Date(data.dateOfOfferAcceptOrReject)],\r\n      generateOffer: [new Date(data.generateOffer)],\r\n      offerIssueDate: [new Date(data.offerIssueDate)],\r\n      offerExpiryDate: [new Date(data.offerExpiryDate)],\r\n    });  \r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  convertDate(value) {\r\n    // let date = moment(value).format('YYYY-MMM-DD');\r\n    // let date = moment(value).format('YYYY-MMM-DD hh:mm:ss');\r\n    let date = moment(value).format(\"YYYY-MMM-DD HH:mm:ss\");\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  \r\n  next(){\r\n\r\n    let generateDate = this.convertDate(this.offerAcceptRejectForm.controls.generateOffer.value);\r\n    this.offerAcceptRejectForm.value['generateOffer'] = generateDate;\r\n    let offerAcceptDate = this.convertDate(this.offerAcceptRejectForm.controls.dateOfOfferAcceptOrReject.value);\r\n    this.offerAcceptRejectForm.value['dateOfOfferAcceptOrReject'] = offerAcceptDate;\r\n    let issueDate = this.convertDate(this.offerAcceptRejectForm.controls.offerIssueDate.value);\r\n    this.offerAcceptRejectForm.value['offerIssueDate'] = issueDate;\r\n    let expiryDate = this.convertDate(this.offerAcceptRejectForm.controls.offerExpiryDate.value);\r\n    this.offerAcceptRejectForm.value['offerExpiryDate'] = expiryDate;\r\n\r\n    this.apiService.offerDetails(this.offerAcceptRejectForm.value).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.cdr.markForCheck();\r\n      }\r\n    })\r\n\r\n    \r\n\r\n    this.router.navigate([`/loan/account-approval/loan-summary-details`]);\r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([`/loan/account-approval/assessment-details`]);\r\n  } \r\n\r\n}\r\n","<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/undraw_personal_information_re_vw8a.svg\" alt=\"\" class=\"w-80\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title\"><b>Offer Accept / Reject Details</b></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <mat-card class=\"p-0\">\r\n            <mat-card-title class=\"\">\r\n                <div class=\"card-title-text\">Offer Accept / Reject Details</div>\r\n                <mat-divider></mat-divider>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"offerAcceptRejectForm\">\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Applicant Name</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput maxlength=\"10\" formControlName=\"applicantName\"\r\n                                        placeholder=\"Applicant Name\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Approved Loan Amount</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                        formControlName=\"approvedLoanAmount\" placeholder=\"Approved Loan Amount\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Loan Tenure</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput type=\"text\" maxlength=\"10\"\r\n                                        formControlName=\"loanTenure\" placeholder=\"Loan Tenure\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Installment Type</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput type=\"text\" maxlength=\"10\"\r\n                                        formControlName=\"installmentType\" placeholder=\"Installment Type\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Installment Frequency</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput type=\"text\" maxlength=\"10\"\r\n                                        formControlName=\"installmentFrequency\" placeholder=\"Installment Frequency\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Rate Of Interest(in %)</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                        formControlName=\"rateOfInterest\" placeholder=\"Rate Of Interest\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Principal</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                        formControlName=\"principal\" placeholder=\"Principal\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Interest </mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput maxlength=\"8\" formControlName=\"interest\" placeholder=\"Interest\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Installment Amount</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                        formControlName=\"installmentAmount\" placeholder=\"Installment Amount\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Charges</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput maxlength=\"8\" formControlName=\"charges\" placeholder=\"Charges\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Offer Issue Date</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event)\r\n                                        formControlName=\"offerIssueDate\" placeholder=\"Offer Issue Date\"\r\n                                        [min]=\"offerAcceptRejectForm.get('offerIssueDate').value\"\r\n                                        [matDatepicker]=\"appDatepicker1\" readonly />\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                                </mat-form-field>\r\n                                <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Generate Offer</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) formControlName=\"generateOffer\"\r\n                                        placeholder=\"Generate Offer\"\r\n                                        [min]=\"offerAcceptRejectForm.get('generateOffer').value\"\r\n                                        [matDatepicker]=\"appDatepicker2\" readonly />\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker2\"></mat-datepicker-toggle>\r\n                                </mat-form-field>\r\n                                <mat-datepicker #appDatepicker2></mat-datepicker>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Customer Response</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Customer Response</mat-label>\r\n                                    <mat-select name=\"prefix\" formControlName=\"Customer Response\" disableOptionCentering>\r\n                                        <mat-option *ngFor=\"let i of customerResponse\" [value]=\"i\">{{ i }}</mat-option>\r\n                                    </mat-select>\r\n\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Date Of Offer Accept/Reject</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Date Of Offer Accept/Reject</mat-label>\r\n                                    <input readonly matInput name=\"dob\" formControlName=\"dateOfOfferAcceptOrReject\"\r\n                                        placeholder=\"Date Of Offer Accept/Reject\" [matDatepicker]=\"appDatepicker\"\r\n                                        [min]=\"offerAcceptRejectForm.get('dateOfOfferAcceptOrReject').value\"\r\n                                         />\r\n\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n\r\n                                </mat-form-field>\r\n\r\n                                <mat-datepicker #appDatepicker></mat-datepicker>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Offer Expiry Date</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                                    <mat-label>Offer Expiry Date</mat-label>\r\n                                    <input matInput name=\"dob\" formControlName=\"offerExpiryDate\"\r\n                                    [min]=\"offerAcceptRejectForm.get('offerExpiryDate').value\"\r\n                                        placeholder=\"Offer Expiry Date\" [matDatepicker]=\"appDatepicker3\" readonly />\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker3\"></mat-datepicker-toggle>\r\n\r\n                                </mat-form-field>\r\n\r\n                                <mat-datepicker #appDatepicker3></mat-datepicker>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div class=\"button\">\r\n\r\n                        <button mat-button class=\"Back\" (click)=\"goBack()\">Back</button>\r\n                        <button mat-stroked-button class=\"Next\" (click)=\"next()\">Next</button>\r\n\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as moment from 'moment';\r\nimport { AccountService } from '../../account.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\n\r\n@Component({\r\n  selector: 'app-account-create-details',\r\n  templateUrl: './account-create-details.component.html',\r\n  styleUrls: ['./account-create-details.component.scss']\r\n})\r\nexport class AccountCreateDetailsComponent implements OnInit {\r\n \r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  accountForm: FormGroup;\r\n  isAccountCreateDetails: boolean;\r\n  loanaccountID: any;\r\n  loanInfo: any;\r\n  loanTenure: any;\r\n  selectedDay: number = 1;\r\n  //day: number;\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  //year: number;\r\n  years: any[] = [];\r\n  cifNumber: any;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private ls: LocalStoreService,\r\n    private appApiService: ApplicationEntryStageService,private dialogService : DialogService,private api: ApiService,private apiService:ApiService,\r\n    private snack: MatSnackBar,private accountService:AccountService) { \r\n    this.accountForm= this.formBuilder.group({\r\n      applicantName: ['',[Validators.required]],\r\n      approvedLoanAmount:['',[Validators.required]],\r\n      loanTenure:[''],\r\n      installmentFrequency:[''],\r\n      installmentType:[''],\r\n      principal:[''],\r\n      installmentAmount:[''],\r\n      offerIssueDate:['',[Validators.required]],\r\n      offerAcceptedDate:[''],\r\n      accountCreateId:[''],\r\n      rateOfInterest:[''],\r\n      interest:[''],\r\n      charges:[''],\r\n      disbursementAmount:[''],\r\n      repaymentAmount:[''],\r\n      loanAccountId:[''],\r\n      year:[''],\r\n      month:[''],\r\n      day:['']\r\n      \r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedYear = new Date().getFullYear();\r\n \r\n    for (let year = 0; year <= 50; year++) {\r\n      this.years.push(year+ \" year\");\r\n    }\r\n   \r\n    for (let month = 0; month <= 11; month++) {\r\n      this.months.push(month+ \" month\");\r\n    }\r\n   \r\n    for (let day = 0; day <= 30; day++) {\r\n      this.days.push(day+ \" day\");\r\n    }\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    this.isAccountCreateDetails = this .ls.getItem('ACCOUNT_CREATE_DETAILS_DONE');\r\n    setTimeout(() => {\r\n      if(this.isAccountCreateDetails==false){\r\n        this.buildaccountForm();\r\n      }\r\n      else{\r\n        \r\n        this.getAccountCreateDetails();\r\n      }\r\n    }, 10);\r\n    this.fetchByCif();\r\n    this.loanData();\r\n    this.intrestData();\r\n    this.installmentTypeData();\r\n    this.interestLoadData();\r\n    this.dataLoad();\r\n}\r\n  getAccountCreateDetails() {\r\n        this.api.getAccountCreateDetails(this.loanaccountID)\r\n         .subscribe((resp: any) => {\r\n           console.log(resp);\r\n          \r\n           this.buildaccountForm(resp,true);\r\n      \r\n           });\r\n  }\r\n\r\n  buildaccountForm(data?,Response?:boolean) {\r\n    data.offerIssueDate = data ? moment(data.offerIssueDate).format() : '';\r\n    data.offerAcceptedDate = data ? moment(data.offerAcceptedDate).format() : '';\r\n    console.log(data);\r\n    \r\n    this.accountForm = this.formBuilder.group({\r\n      accountCreateId:[''],\r\n      loanAccountId:[data ? data.loanAccountId:''],\r\n      applicantName: [data ? data.applicantName:''],\r\n      approvedLoanAmount:[data ? data.approvedLoanAmount:''],\r\n      loanTenure:[data ? data.loanTenure:''],\r\n      installmentFrequency:[data ? data.installmentFrequency:''],\r\n      principal:[data ? data.principal:''],\r\n      installmentAmount:[data ? data.installmentAmount:''],\r\n      disbursementAmount:[data ? data.disbursementAmount:''], \r\n      offerAcceptedDate:[data ? data.offerAcceptedDate:''],\r\n      offerIssueDate:[data ? data.offerIssueDate:'',[Validators.required]],\r\n      installmentType:[data ? data.installmentType:''],\r\n      rateOfInterest:[data ? data.rateOfInterest:''],\r\n      interest:[data ? data.interest:''],\r\n      charges:[data ? data.charges:''],\r\n      repaymentAmount:[data ? data.repaymentAmount:''],\r\n      year:[data?data.loanTenure.split(\"-\")[0]:''],\r\n      month:[data?data.loanTenure.split(\"-\")[1]:''],\r\n      day:[data?data.loanTenure.split(\"-\")[2]:'']\r\n    });\r\n    console.log(\"this.accountForm\",this.accountForm);\r\n}\r\ngoBack() {\r\n  this.router.navigate(['loan/account/account-creation-stage']);\r\n}\r\n\r\nletterOnly(event) {\r\n  var charCode = event.keyCode;\r\n          if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n              return true;\r\n          else\r\n              return false;\r\n}\r\n_keyPress(event: any) {\r\n  const pattern = /[0-9]/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n\r\n  }\r\n}\r\n\r\nonSubmit(){\r\n  let now = new Date();\r\n  now=this.accountForm.value.offerIssueDate;\r\n  var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n  let now1 = new Date();\r\n  now1=this.accountForm.value.offerAcceptedDate;\r\n  var dateStringWithTime1 = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n  console.log(\"dateStringWithTime\",dateStringWithTime);\r\n  var aprloan=this.accountForm.value.approvedLoanAmount;\r\n  aprloan= parseInt(aprloan);\r\n  var rate=this.accountForm.value.rateOfInterest;\r\n  rate= parseInt(rate);\r\n    const renewData =\r\n    this.accountForm.value.year +\r\n    \"-\" +\r\n    this.accountForm.value.month +\r\n    \"-\" +\r\n    this.accountForm.value.day;\r\n  this.accountForm.get(\"loanTenure\").setValue(renewData);\r\n   this.accountForm.value.loanTenure=renewData;\r\n  let payload={\r\n    loanAccountId:this.loanaccountID,\r\n    approvedLoanAmount:aprloan,\r\n    applicantName:this.accountForm.value.applicantName,\r\n    loanTenure:renewData,\r\n    installmentType:this.accountForm.value.installmentType,\r\n    installmentFrequency:this.accountForm.value.installmentFrequency,\r\n    rateOfInterest:rate,\r\n    principal:this.accountForm.value.principal,\r\n    installmentAmount:this.accountForm.value.installmentAmount,\r\n    interest:this.accountForm.value.interest,\r\n    charges:this.accountForm.value.charges,\r\n    disbursementAmount:this.accountForm.value.disbursementAmount,\r\n    repaymentAmount:this.accountForm.value.repaymentAmount,\r\n    offerIssueDate:dateStringWithTime,\r\n    offerAcceptedDate:dateStringWithTime1\r\n  }\r\n  console.log(\"payload\",payload)\r\n  //val.offerIssueDate= moment(val.offerIssueDate).format('YYYY-MMM-DD HH:mm:ss');\r\n  //val.offerAcceptedDate= moment(val.offerAcceptedDate).format('YYYY-MMM-DD HH:mm:ss');\r\n this.api.saveAccountCreateDetails(payload).subscribe((data: any) => {\r\n  console.log(data);\r\n  \r\n  if (data === 200 || data !== null) {\r\n    this.snack.open(' Account Create Details Saved!', 'OK', {\r\n      duration: 4000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n    this.ls.setItem('ACCOUNT_CREATE_DETAILS_DONE', true);\r\n    this.ls.setItem('ACCOUNT_CREATTION_STAGE_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate(['loan/account/digitalsigning/list']);\r\n  }\r\n  // else if (data === 500) {\r\n  //   this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n  //     duration: 4000,\r\n  //     verticalPosition: 'top',\r\n  //     horizontalPosition: 'right'\r\n  //   });\r\n  // }\r\n}, err => {\r\n  console.log(err);\r\n});\r\n}\r\n\r\nfetchByCif(){\r\n  this.cifNumber=this.ls.getItem('cId');\r\n  this.appApiService.fetchByCif(this.cifNumber).subscribe((res: any) => {\r\n  this.accountForm.get('applicantName').setValue(res.customerInfoList[0].firstName +\" \"+ res.customerInfoList[0].lastName);\r\n  }, (err: any) => {\r\n    console.error(err);\r\n  })\r\n}\r\nloanData(){\r\n  console.log(this.loanaccountID);\r\n  this.apiService.fetchByLoanAccountId(this.loanaccountID).subscribe((res:any)=>{   \r\n    console.log(res); \r\n    this.accountForm.get('approvedLoanAmount').setValue(res.approvedLoanAmount); \r\n    console.log(res.loanTenure);       \r\n    let dataYear = res.loanTenure.split(\"-\")[0];\r\n    console.log(dataYear);\r\n    let dataMonth = res.loanTenure.split(\"-\")[1];\r\n    console.log(dataMonth);\r\n    let dataDay = res.loanTenure.split(\"-\")[2];\r\n    console.log(dataDay);    \r\n    this.accountForm.get('year').setValue(dataYear);\r\n    this.accountForm.get('month').setValue(dataMonth);\r\n    this.accountForm.get('day').setValue(dataDay);\r\n  \r\n  }, (err: any) => {\r\n    console.error(err);\r\n  })\r\n}\r\nintrestData(){\r\n  console.log(this.loanaccountID);\r\n  this.apiService.fetchLoanAssessment(this.loanaccountID).subscribe((res:any)=>{    \r\n    this.accountForm.get('rateOfInterest').setValue(res.rateOfInterest);\r\n  })\r\n}\r\ninstallmentTypeData(){\r\n  console.log(this.loanaccountID);\r\n  this.apiService.getOfferAcceptReject(this.loanaccountID).subscribe((res:any)=>{\r\n    console.log(res);\r\n     this.accountForm.get('installmentType').setValue(res.installmentType);\r\n     this.accountForm.get('installmentFrequency').setValue(res.installmentFrequency);\r\n     let issueDate =  moment(res.offerIssueDate).format();\r\n     this.accountForm.get('offerIssueDate').setValue(issueDate);\r\n     let acceptDate = moment(res.offerAcceptOrRejectDate).format();\r\n     this.accountForm.get('offerAcceptedDate').setValue(acceptDate);\r\n     console.log(issueDate);\r\n  });\r\n}\r\ninterestLoadData(){\r\n  console.log(this.loanaccountID);\r\n  this.apiService.getingOfferIssueDetails(this.loanaccountID).subscribe((res:any)=>{\r\n    console.log(res);\r\n     this.accountForm.get('interest').setValue(res.interest);    \r\n     this.accountForm.get('charges').setValue(res.charges);\r\n     this.accountForm.get('principal').setValue(res.principal);\r\n     this.accountForm.get('installmentAmount').setValue(res.installmentAmount);\r\n      \r\n  });\r\n}\r\n\r\ndataLoad(){\r\n  console.log(this.loanaccountID);\r\n  this.apiService.loanDisbursementFetchById(this.loanaccountID).subscribe((res:any)=>{\r\n    console.log(res);\r\n    this.accountForm.get('disbursementAmount').setValue(res.totalDisbursement);\r\n  })\r\n}\r\n\r\n}\r\n","<div fxLayout=\"column\">\r\n  <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/account details.png\" alt=\"\" class=\"w-80\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"card-title-text\"><h1><b>Account Create Details</b></h1></div>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"column\">\r\n  <form fxLayout=\"column\" [formGroup]=\"accountForm\">\r\n      <div fxFlex=\"100\">\r\n        <mat-card fxLayout=\"column\">              \r\n          <mat-card-title>\r\n            <fieldset class=\"alignChange\">\r\n            <legend visible=\"true\">Account Create Details</legend>\r\n            </fieldset>\r\n          </mat-card-title>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Applicant Name*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input matInput  class=\"alignment\" name=\"applicantName\"\r\n                          placeholder=\"Applicant Name\" formControlName=\"applicantName\"\r\n                          (keypress)=\"letterOnly($event)\"/>\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!accountForm.get('applicantName').valid  && accountForm.get('applicantName').touched\">\r\n                        &nbsp;&nbsp;&nbsp;Applicant Name is Required!\r\n                    </mat-error>\r\n                    </mat-form-field>\r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Approved Loan Amount*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input matInput  class=\"alignment\" name=\"loanAmmount\"  \r\n                         maxlength=\"16\" formControlName=\"approvedLoanAmount\"\r\n                         (keypress)=_keyPress($event)  placeholder=\"Approved Loan Amount\"/>\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!accountForm.get('approvedLoanAmount').valid  && accountForm.get('approvedLoanAmount').touched\">\r\n                        &nbsp;&nbsp;&nbsp;Approved Loan Amount is Required!\r\n                    </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label  class=\"hint\">Offer Issue Date*</mat-label>\r\n                    <!-- <mat-card class=\"inputMatLastName\" style=\"height:54px;\"> -->\r\n                          <input matInput  id=\"dob\" class=\"alignment\" name=\"OpinionDate\" \r\n                            [matDatepicker]=\"picker\"  value=\"OpinionDate\" placeholder=\"DD/MM/YYYY\"\r\n                            formControlName=\"offerIssueDate\"/>\r\n                            <div fxFlex=\"8%\" id=\"toggle\" class=\"datechange\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker></mat-datepicker>\r\n                            </div>\r\n                    <!-- </mat-card> -->\r\n                            <mat-error *ngIf=\"!accountForm.get('offerIssueDate').valid  && accountForm.get('offerIssueDate').touched\">\r\n                              &nbsp;&nbsp;&nbsp;Offer Issue Date is Required!\r\n                           </mat-error>\r\n                  </mat-form-field>\r\n                  </div>\r\n                          \r\n                            \r\n                \r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label  class=\"hint\">Offer Accepted Date</mat-label>\r\n                    <!-- <mat-card class=\"inputMatName\" style=\"height:54px;\"> -->\r\n                        <input matInput id=\"dob\" class=\"alignment\"  name=\"OpinionDate\" \r\n                        [matDatepicker]=\"appDatepicker\"  value=\"OpinionDate\" placeholder=\"DD/MM/YYYY\" [min]=\"accountForm.get('offerIssueDate').value\"\r\n                        formControlName=\"offerAcceptedDate\"/>\r\n                  \r\n                        <div fxFlex=\"8%\" id=\"toggle\"class=\"datechange\">\r\n                          <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                          <mat-datepicker #appDatepicker></mat-datepicker>\r\n                        </div>\r\n                    \r\n                    <!-- </mat-card> -->\r\n                  </mat-form-field>\r\n                   \r\n                  </div>   \r\n            </div>\r\n\r\n              <!-- <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Loan Tenure</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <input matInput  class=\"alignment\"  name=\"loanTenure\"\r\n                           (keypress)=_keyPress($event)\r\n                          placeholder=\"Years\" formControlName=\"loanTenure\"/>\r\n                          <mat-select matInput  class=\"alignment\" name=\"loanTenure\"\r\n                             placeholder=\"\" formControlName=\"loanTenure\">\r\n                             <mat-option >Select</mat-option>\r\n                             <mat-option *ngFor=\"let option of loanTenure\" value=\"{{option}}\">{{option}}</mat-option>\r\n                    \r\n                          </mat-select>\r\n                      </mat-card> -->\r\n\r\n                      <div class=\"flex-grow-1\">\r\n                        <div>\r\n                          \r\n                          <div fxLayout=\"row wrap\">\r\n                            <mat-hint class=\"tenre\"><b>Loan Tenure *</b></mat-hint>\r\n                            \r\n                            <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"23\">\r\n                              <mat-label>Year*</mat-label>\r\n                            <mat-select name=\"year\" placeholder=\"Year\" formControlName=\"year\" disableOptionCentering>\r\n                            <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                             </mat-select>\r\n                            </mat-form-field>\r\n        \r\n                           \r\n                            <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"21.5\">\r\n                              <mat-label>Month*</mat-label>\r\n                            <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" disableOptionCentering>\r\n                            <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                             </mat-select>\r\n                            </mat-form-field>\r\n                            \r\n                            <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"21.5\">\r\n                              <mat-label>Day*</mat-label>\r\n                            <mat-select name=\"day\" placeholder=\"Day\" formControlName=\"day\" disableOptionCentering>\r\n                            <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                             </mat-select>\r\n                            </mat-form-field>\r\n                            <!-- </mat-card> -->\r\n                          </div>\r\n                        </div>\r\n                    \r\n                          <div class=\"flex-grow-1\" fxFlex=\"49.5\" >\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label  class=\"hint\">Installment Type</mat-label>\r\n                            <!-- <mat-card class=\"inputMatName\"> -->\r\n                              <!-- <input matInput  class=\"alignment\"  name=\"installmentType\"\r\n                              placeholder=\"Type\" formControlName=\"installmentType\"/> -->\r\n        \r\n                              <mat-select disableOptionCentering class=\"alignment\" name=\"installmentType\"\r\n                              placeholder=\"Select\" formControlName=\"installmentType\">\r\n                              <!-- <mat-option >Select</mat-option> -->\r\n                              <mat-option value=\"EMI\">EMI</mat-option>              \r\n                           </mat-select>\r\n                            <!-- </mat-card> -->\r\n                            </mat-form-field>\r\n                           \r\n                          </div>\r\n                      </div>\r\n                  \r\n\r\n              <!-- </div> -->\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Installment Frequency</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input matInput  class=\"alignment\"  name=\"installmentFrequency\"\r\n                          (keypress)=_keyPress($event)\r\n                          placeholder=\"Installment Frequency\" formControlName=\"installmentFrequency\"/>\r\n                      <!-- </mat-card> -->\r\n                    </mat-form-field>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Rate of Interest</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input matInput  class=\"alignment\" name=\"rateofInterest\"\r\n                        placeholder=\"Percentage\" formControlName=\"rateOfInterest\"\r\n                        (keypress)=_keyPress($event)\r\n                        maxlength=\"2\" />\r\n                      <!-- </mat-card> -->\r\n                      </mat-form-field>\r\n                     \r\n                    </div>\r\n              </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label  class=\"hint\">Principal</mat-label>\r\n                    <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input matInput  class=\"alignment\"  name=\"principal\"\r\n                        (keypress)=_keyPress($event)\r\n                        placeholder=\"Amount\" formControlName=\"principal\" maxlength=\"8\"/>\r\n                    <!-- </mat-card> -->\r\n                  </mat-form-field>\r\n                   \r\n                  </div>\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label  class=\"hint\">Interest</mat-label>\r\n                    <!-- <mat-card class=\"inputMatName\"> -->\r\n                      <input matInput  class=\"alignment\"  name=\"interest\"\r\n                      placeholder=\"Amount\" formControlName=\"interest\"\r\n                      (keypress)=_keyPress($event)\r\n                      maxlength=\"2\"/>\r\n                    <!-- </mat-card> -->\r\n                    </mat-form-field>\r\n                   \r\n                  </div>\r\n            </div>\r\n    \r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Installment Amount</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input matInput  class=\"alignment\"  name=\"installmentAmount\" maxlength=\"8\"\r\n                          (keypress)=_keyPress($event)\r\n                          placeholder=\"Installment Amount\"  formControlName=\"installmentAmount\"/>\r\n                      <!-- </mat-card> -->\r\n                    </mat-form-field>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <!-- <mat-form-field> -->\r\n                      <mat-label  class=\"hint\">Charges</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input matInput  class=\"alignment\"  name=\"Amount\"\r\n                        placeholder=\"Amount\"formControlName=\"charges\" maxlength=\"5\"\r\n                        (keypress)=_keyPress($event)/>\r\n                      <!-- </mat-card> -->\r\n                      </mat-form-field>\r\n                    <!-- </mat-form-field> -->\r\n                     \r\n                    </div>\r\n              </div>\r\n\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label  class=\"hint\">Disbursement Account</mat-label>\r\n                  <!-- <mat-card class=\"inputMatName\"> -->\r\n                      <input matInput  class=\"alignment\" name=\"disbursementAmount\"\r\n                      placeholder=\"Disbursement Amount\" formControlName=\"disbursementAmount\"\r\n                      (keypress)=_keyPress($event) maxlength=\"8\" />\r\n                  <!-- </mat-card> -->\r\n                </mat-form-field>\r\n                 \r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label  class=\"hint\">Repayment Account</mat-label>\r\n                  <!-- <mat-card class=\"inputMatName\"> -->\r\n                    <input matInput  class=\"alignment\" name=\"repaymentAmount\"\r\n                    placeholder=\"Repayment Amount\" formControlName=\"repaymentAmount\" \r\n                    (keypress)=_keyPress($event)\r\n                    maxlength=\"8\"/>\r\n                  <!-- </mat-card> -->\r\n                  </mat-form-field>\r\n                 \r\n                </div>\r\n          </div>\r\n\r\n          \r\n    \r\n            </mat-card>\r\n\r\n          </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n      \r\n            <button mat-button (click)=\"goBack()\" rounded class=\"Back\">\r\n              Back\r\n            </button>\r\n\r\n            <button mat-raised-button (click)=\"onSubmit()\" class=\"Next\" [disabled]=\"!accountForm.valid\">\r\n              Next\r\n            </button>\r\n            <!-- [disabled]=\"accountForm.invalid\"  || isCifValid  -->\r\n          </div>\r\n      </form>\r\n    \r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { AccountService } from '../../account.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\n@Component({\r\n  selector: 'app-offer-accept-reject',\r\n  templateUrl: './offer-accept-reject.component.html',\r\n  styleUrls: ['./offer-accept-reject.component.scss']\r\n})\r\nexport class AcceptOfferAcceptRejectComponent implements OnInit {\r\n\r\n  generateArr:string[]=['With Schedule','without Schedule'];\r\n  approvedLoan: number;\r\n  disableDone:boolean =true;\r\n  offeracceptForm: FormGroup;\r\n   showEditOption: boolean = false;\r\n  isAssesmentDetailsScreen: boolean = false;\r\n  isOfferIssueScreen: boolean = false; \r\n  isOfferIssueRejectScreen: boolean  = false;\r\n  arraySystemRecommendation:any[]=['Approved','Rejected'];\r\n  loanaccountID: any;\r\n  loanInfo: any;\r\n  selectedDay: number = 1;\r\n // day: number;\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  //year: number;\r\n  years: any[] = [];\r\n  installmentTypes: string[] = ['EMI'];\r\n  cifNumber: any;\r\n  accountDetails: any;\r\n  \r\n  constructor(private router: Router,private ls: \r\n    LocalStoreService,private apiService:ApiService, private snack: MatSnackBar,private loader: AppLoaderService,\r\n    private formBuilder: FormBuilder,private appApiService: ApplicationEntryStageService,private accountService:AccountService) { \r\n    this.offeracceptForm = this.formBuilder.group({\r\n      //approvedLoan : ['',[Validators.required]],\r\n        approvedLoanAmount : ['',[Validators.required]],\r\n        applicantName:['',[Validators.required]],\r\n        loanTenure:[''],\r\n        installmentType:['',[Validators.required]],\r\n        installmentFrequency:[''],    \r\n        rateOfInterest:[], \r\n        customerResponse:[''], \r\n        offerIssueDate:['',[Validators.required]],\r\n        generateOffer:['', [Validators.required]],\r\n        offerExpiryDate:['',[Validators.required]],\r\n        dateOfOfferAcceptOrReject:['',[Validators.required]],\r\n        year:['',[Validators.required]],\r\n      month:['',[Validators.required]],\r\n      day:['',[Validators.required]],\r\n      \r\n    \r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedYear = new Date().getFullYear();\r\n  \r\n    for (let year = 0; year <= 50; year++) {\r\n      this.years.push(year+ \" year\");\r\n    }\r\n\r\n    for (let month = 0; month <= 11; month++) {\r\n      this.months.push(month+ \" month\");\r\n    }\r\n\r\n    for (let day = 0; day <= 30; day++) {\r\n      this.days.push(day+ \" day\");\r\n    }\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    let isOfferIssueRejectScreen: boolean = JSON.parse(this.ls.getItem('OfferIssueRejectScreen'));\r\n     setTimeout(() => {\r\n        if (this.loanaccountID != null && isOfferIssueRejectScreen) {\r\n          this.showEditOption = true;\r\n          \r\n          this.getAccountDetails();\r\n        } \r\n        else {\r\n          console.log(\"else\");\r\n          this.showEditOption = false;\r\n          this.buildOfferAcceptForm();\r\n        }\r\n      }, 10);\r\n    this.fetchByCif();\r\n    this.loanData();\r\n    this.intrestData();\r\n    this.installmentTypeData();\r\n  }\r\n  getAccountDetails() {\r\n    //this.loader.open();\r\n    this.apiService.getOfferAcceptReject(this.loanaccountID).subscribe((accountDetails) => {\r\n     // this.loader.close();\r\n      this.accountDetails = accountDetails;\r\n      console.log(this.accountDetails);\r\n      this.buildOfferAcceptForm(this.accountDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n\r\n\r\n  }\r\n   buildOfferAcceptForm(data?) {\r\n    data.offerIssueDate = data ? moment(data.offerIssueDate).format() : '';\r\n    data.generateOffer = data ? moment(data.generateOffer).format():'';\r\n    data.offerExpiryDate = data ? moment(data.offerExpiryDate).format():'';\r\n    data.dateOfOfferAcceptOrReject = data ? moment(data.offerAcceptOrRejectDate).format():'';\r\n    this.offeracceptForm = this.formBuilder.group({\r\n      approvedLoanAmount : [data ? data.approvedLoanAmount:''],\r\n      loanTenure:[data?data.loanTenure:''],\r\n      applicantName:[data ? data.applicantName:''],\r\n      installmentFrequency:[data ? data.installmentFrequency:''],    \r\n      rateOfInterest:[data ? data.rateOfInterest:''],  \r\n      offerIssueDate:[data ? data.offerIssueDate:''],\r\n      generateOffer:[data ? data.generateOffer:''],\r\n      offerExpiryDate:[data ? data.offerExpiryDate:''],\r\n      year:[data ? data.loanTenure.split(\"-\")[0]:''],\r\n      month:[data ? data.loanTenure.split(\"-\")[1]:''],\r\n      day:[data ? data.loanTenure.split(\"-\")[2]:''],\r\n      installmentType: [data ? data.installmentType: ''],\r\n      dateOfOfferAcceptOrReject:[data? data.dateOfOfferAcceptOrReject:''],\r\n      customerResponse:[data ? data.customerResponse:''],\r\n    })\r\n\r\n  }\r\n\r\n  //offeracceptForm()\r\ngoBack(){\r\n  this.router.navigate([\"/loan/account/offerstage/list\"]);\r\n}\r\nSubmit(){\r\n  let details:  any;\r\n    //details.push(this.legalOpinion.value);\r\n    let now = new Date();\r\n    now=this.offeracceptForm.value.offerIssueDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    let now1 = new Date();\r\n    now1=this.offeracceptForm.value.offerAcceptOrRejectDate;\r\n    var dateStringWithTime1 = moment(now1).format('YYYY-MMM-DD HH:MM:SS');\r\n    console.log(\"OAR\", dateStringWithTime1)\r\n    let now2 = new Date();\r\n    now2=this.offeracceptForm.value.offerExpiryDate;\r\n    var dateStringWithTime2 = moment(now2).format('YYYY-MMM-DD HH:MM:SS');\r\n    console.log(\"OE\", dateStringWithTime2)\r\n    let now3 = new Date();\r\n    now3=this.offeracceptForm.value.generateOffer;\r\n    var dateStringWithTime3 = moment(now3).format('YYYY-MMM-DD HH:MM:SS');\r\n    console.log(\"GO\", dateStringWithTime3)\r\n    var aprloan=this.offeracceptForm.value.approvedLoanAmount;\r\n    aprloan= parseInt(aprloan);\r\n    var rate=this.offeracceptForm.value.rateOfInterest;\r\n    rate= parseInt(rate);\r\n     const renewData =\r\n    this.offeracceptForm.value.year +\r\n    \"-\" +\r\n    this.offeracceptForm.value.month +\r\n    \"-\" +\r\n    this.offeracceptForm.value.day;\r\n  this.offeracceptForm.get(\"loanTenure\").setValue(renewData);\r\n  delete this.offeracceptForm.value.year;\r\n  delete this.offeracceptForm.value.month;\r\n  delete this.offeracceptForm.value.day;\r\n  this.offeracceptForm.value.interest =parseInt(this.offeracceptForm.value.interest);\r\n    this.offeracceptForm.value.installmentAmount =parseInt(this.offeracceptForm.value.installmentAmount);\r\n    let payload={\r\n      loanAccountId: this.loanaccountID,\r\n      approvedLoanAmount:aprloan,\r\n      applicantName:this.offeracceptForm.value.applicantName,\r\n      loanTenure:renewData,\r\n      installmentType:this.offeracceptForm.value.installmentType,\r\n      installmentFrequency:this.offeracceptForm.value.installmentFrequency,\r\n      rateOfInterest:rate,\r\n      offerIssueDate:dateStringWithTime,\r\n      interest: this.offeracceptForm.value.interest,\r\n      installmentAmount: this.offeracceptForm.value.installmentAmount,\r\n      dateOfOfferAcceptOrReject:dateStringWithTime1,\r\n      offerExpiryDate: dateStringWithTime2,\r\n      generateOffer: dateStringWithTime3,\r\n      customerResponse:this.offeracceptForm.value.customerResponse,\r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.offerDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null){\r\n        this.snack.open('Offer Issue Accept/Reject Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n     \r\n      }\r\n      this.Next();\r\n    })\r\n    \r\n  \r\n}\r\nNext(){\r\n  this.ls.setItem('OfferIssueRejectScreen', true);\r\n  this.ls.setItem('OfferIssueRejectStageScreen', true);\r\n  this.accountService.refresh.next();\r\n  this.router.navigate([\"/loan/account/post-offer-amend-stage/list\"]);\r\n\r\n}\r\n_keyPress1(event: any) {\r\n  const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n  }\r\n  const input = event.target.value;\r\n  if (input.length === 0 && event.which === 48) {\r\n    event.preventDefault();\r\n  }\r\n}\r\n\r\n_keyPress(event: any) {\r\n  const pattern = /[0-9]/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n  }\r\n}\r\nonInput(event: any, flag) {\r\n  if (flag) {\r\n    this.approvedLoan = event.target.value;\r\n  } else {\r\n    this.approvedLoan = event;\r\n  }\r\n\r\n  console.log(\"this.salary)::\", this.approvedLoan);\r\n  let sal = this.approvedLoan.toString().replace(/,/g, '').split(\".\");\r\n  sal[0] = sal[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  let final = sal.join(\".\");\r\n  console.log(\"final\", final);\r\n  this.offeracceptForm.controls.approvedLoan.setValue(final);\r\n}\r\nletterOnly(event) {\r\n  var charCode = event.keyCode;\r\n          if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n              return true;\r\n          else\r\n              return false;\r\n}\r\n\r\nfetchByCif(){\r\n  this.cifNumber=this.ls.getItem('cId');\r\n  this.appApiService.fetchByCif(this.cifNumber).subscribe((res: any) => {\r\n  this.offeracceptForm.get('applicantName').setValue(res.customerInfoList[0].firstName +\" \"+ res.customerInfoList[0].lastName);\r\n  }, (err: any) => {\r\n    console.error(err);\r\n  })\r\n}\r\nloanData(){\r\n  console.log(this.loanaccountID);\r\n  this.apiService.fetchByLoanAccountId(this.loanaccountID).subscribe((res:any)=>{   \r\n    console.log(res); \r\n    this.offeracceptForm.get('approvedLoanAmount').setValue(res.approvedLoanAmount); \r\n    console.log(res.loanTenure);       \r\n    let dataYear = res.loanTenure.split(\"-\")[0];\r\n    console.log(dataYear);\r\n    let dataMonth = res.loanTenure.split(\"-\")[1];\r\n    console.log(dataMonth);\r\n    let dataDay = res.loanTenure.split(\"-\")[2];\r\n    console.log(dataDay);    \r\n    this.offeracceptForm.get('year').setValue(dataYear);\r\n    this.offeracceptForm.get('month').setValue(dataMonth);\r\n    this.offeracceptForm.get('day').setValue(dataDay);\r\n  \r\n  }, (err: any) => {\r\n    console.error(err);\r\n  })\r\n}\r\nintrestData(){\r\n  console.log(this.loanaccountID);\r\n  this.apiService.fetchLoanAssessment(this.loanaccountID).subscribe((res:any)=>{    \r\n    this.offeracceptForm.get('rateOfInterest').setValue(res.rateOfInterest);\r\n  })\r\n}\r\ninstallmentTypeData(){\r\n  console.log(this.loanaccountID);\r\n  this.apiService.getingOfferIssueDetails(this.loanaccountID).subscribe((res:any)=>{\r\n    console.log(res);\r\n     this.offeracceptForm.get('installmentType').setValue(res.installmentType);\r\n     this.offeracceptForm.get('installmentFrequency').setValue(res.installmentFrequency);\r\n     let issueDate =  moment(res.offerIssueDate).format();\r\n     this.offeracceptForm.get('offerIssueDate').setValue(issueDate);\r\n     console.log(issueDate);    \r\n  });\r\n}\r\n\r\n}\r\n","<div fxLayout=\"column\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n          <img src=\"assets/images/svg/undraw_approve_qwp7.svg\" alt=\"\" class=\"w-90\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n          <div class=\"main-title1\"><b>Offer Accept / Reject</b></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"column\">\r\n    <form fxLayout=\"column\" [formGroup]=\"offeracceptForm\">\r\n        <div fxFlex=\"100\">\r\n          <mat-card fxLayout=\"column\">              \r\n            <mat-card-title>\r\n              <fieldset class=\"alignChange\">\r\n              <legend visible=\"true\">Offer Accept / Reject</legend>\r\n              </fieldset>\r\n            </mat-card-title>\r\n\r\n                <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <mat-label  class=\"hint\">Applicant Name*</mat-label>\r\n                        <!-- <mat-card class=\"inputMatName\"> -->\r\n                            <input matInput  class=\"alignment\" type=\"text\" name=\"applicantName\"\r\n                            formControlName=\"applicantName\"\r\n                            placeholder=\"Applicant Name\"\r\n                            readonly/>\r\n                        <!-- </mat-card> -->\r\n                       <mat-error *ngIf=\"!offeracceptForm.get('applicantName').valid  && offeracceptForm.get('applicantName').touched\">\r\n                          &nbsp;&nbsp;&nbsp; Applicant Name is Required!\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                      </div>\r\n                      <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <mat-label  class=\"hint\">Approved Loan Amount*</mat-label>\r\n                        <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"approvedLoanAmount\" placeholder=\"Approved Loan Account\"\r\n                          formControlName=\"approvedLoanAmount\" maxlength=\"16\"\r\n                          (keypress)=\"_keyPress1($event)\"  (keyup)=\"onInput($event,true)\"\r\n                           maxlength=\"16\"/>\r\n                        <!-- </mat-card> -->\r\n                        <mat-error *ngIf=\"!offeracceptForm.get('approvedLoanAmount').valid  && offeracceptForm.get('approvedLoanAmount').touched\">\r\n                          &nbsp;&nbsp;&nbsp; Approved Loan Amount is Required!\r\n                      </mat-error>\r\n                        </mat-form-field>\r\n                       \r\n                      </div>\r\n                </div>\r\n                <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                                       \r\n                      <div fxLayout=\"row wrap\"  >\r\n                        <!-- <div fxFlex=\"30\"> -->\r\n                          <label  class=\"size\">Loan Tenure*</label>  \r\n                          <!-- <mat-card class=\"inputMatName\"> -->\r\n                            <!-- <mat-select name=\"year\" placeholder=\"Year\" formControlName=\"year\"  > -->\r\n                              <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"23\">\r\n                                <mat-label>Year*</mat-label>\r\n                              <mat-select name=\"year\" placeholder=\"Year\" disableOptionCentering formControlName=\"year\">\r\n\r\n                            <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                            </mat-select>\r\n                              </mat-form-field>\r\n                          <!-- </mat-card> -->\r\n                        <!-- </div> -->\r\n                        <!-- <div fxFlex=\"30\"> -->\r\n                           <!-- <mat-card class=\"inputMatName\"> -->\r\n                            <!-- <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" > -->\r\n                              <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"22.5\">\r\n                                <mat-label>Month*</mat-label>\r\n                            <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" disableOptionCentering>\r\n                            <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                             </mat-select>\r\n                              </mat-form-field>\r\n                          <!-- </mat-card> -->\r\n                        <!-- </div> -->\r\n                        <!-- <div fxFlex=\"30\"> -->\r\n                           <!-- <mat-card class=\"inputMatName\"> -->\r\n                            <!-- <mat-select name=\"day\"  placeholder=\"Day\" formControlName=\"day\"  > -->\r\n                              <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"22\">\r\n                                <mat-label>Day*</mat-label>\r\n                            <mat-select name=\"day\"  placeholder=\"Day\" formControlName=\"day\" disableOptionCentering>\r\n                            <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                          </mat-select>\r\n                              </mat-form-field>\r\n                          <!-- </mat-card> -->\r\n                        <!-- </div>  -->\r\n                      </div>\r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label  class=\"hint\">Installment Type*</mat-label>\r\n                      <!-- <mat-card class=\" widthCard inputMatName\"> -->\r\n                          <mat-select   class=\"alignment\"  formControlName=\"installmentType\" \r\n                          placeholder=\"Select\" disableOptionCentering required>\r\n                              <!-- <mat-option  value =\"\">select</mat-option>  -->\r\n                              <mat-option *ngFor=\"let option of installmentTypes\" [value]=\"option\">\r\n                                  {{option}}\r\n                              </mat-option>\r\n                          </mat-select>\r\n                      <!-- </mat-card>                      -->\r\n                  </mat-form-field>\r\n                  </div>                      \r\n                </div>\r\n                <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <mat-label  class=\"hint\">Installment Frequency</mat-label>\r\n                        <!-- <mat-card class=\"inputMatName\"> -->\r\n                            <input matInput  class=\"alignment\" type=\"text\" name=\"applicantName\" (keypress)=\"_keyPress1($event)\" \r\n                            formControlName=\"installmentFrequency\" maxlength=\"2\" placeholder=\"Installment Frequency\"\r\n                           />\r\n                        <!-- </mat-card> -->\r\n                      </mat-form-field>\r\n                       \r\n                      </div>\r\n                      <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <mat-label  class=\"hint\">Rate of Interest in(%)</mat-label>\r\n                        <!-- <mat-card class=\"inputMatName\"> -->\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"loanAmmount\" (keypress)=\"_keyPress1($event)\" maxlength=\"2\"\r\n                          formControlName=\"rateOfInterest\" placeholder=\"Rate Of Interest\"\r\n                            />\r\n                        <!-- </mat-card> -->\r\n                        </mat-form-field>\r\n                       \r\n                      </div>\r\n                </div>\r\n                <!-- <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                        <label  class=\"hint\">Approved Loan Account*</label>\r\n                        <mat-card class=\"inputMatName\">\r\n                            <input matInput  class=\"alignment\" type=\"text\" name=\"applicantName\" (keypress)=\"_keyPress1($event)\" placeholder=\"Approved Loan Account\"\r\n                            formControlName=\"approvedLoanAmount\" \r\n                            />\r\n                        </mat-card>\r\n                        <mat-error *ngIf=\"!offeracceptForm.get('approvedLoanAmount').valid  && offeracceptForm.get('approvedLoanAmount').touched\">\r\n                          &nbsp;&nbsp;&nbsp; Approved Loan Account is Required!\r\n                      </mat-error>\r\n                      </div> -->\r\n                      <!-- <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                        <label  class=\"hint\">Loan Tenure</label>\r\n                        <mat-card class=\"inputMatName\"> \r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"loanAmmount\"\r\n                          formControlName=\"loanTenure\" (keypress)=\"_keyPress1($event)\" maxlength=\"2\"\r\n                            />\r\n                        </mat-card>\r\n                       \r\n                      </div> -->\r\n                <!-- </div> -->\r\n                <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <mat-label  class=\"hint\">Offer Issue Date*</mat-label>\r\n                        <!-- <mat-card class=\"widthCard inputMatName issuecard \" > -->\r\n                              <input matInput  id=\"dob\" class=\"alignment\" name=\"offerIssueDate\" readonly  formControlName=\"offerIssueDate\"\r\n                                [matDatepicker]=\"picker\"  value=\"offerIssueDate\" placeholder=\"DD/MM/YYYY\">\r\n                            <!-- <div fxFlex=\"8%\" id=\"toggle\"> -->\r\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\" >\r\n                                </mat-datepicker-toggle>\r\n              \r\n                                <mat-datepicker #picker>\r\n                                </mat-datepicker>\r\n                              <!-- </div> -->\r\n              \r\n                         <!-- </mat-card> -->\r\n                         <mat-error *ngIf=\"!offeracceptForm.get('offerIssueDate').valid  && offeracceptForm.get('offerIssueDate').touched\">\r\n                          &nbsp;&nbsp;&nbsp; Offer Issue Date is Required!\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n          \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <mat-label  class=\"hint\">Generate Offer*</mat-label>\r\n                        <!-- <mat-card class=\"widthCard inputMatName issuecard\"> -->\r\n                          <input matInput  id=\"generateOffer\" class=\"alignment\" name=\"generateOffer\" readonly  formControlName=\"generateOffer\"\r\n                          [matDatepicker]=\"picker3\"  value=\"generateOffer\" placeholder=\"DD/MM/YYYY\" [max]=\"offeracceptForm.get('offerIssueDate').value\" >\r\n                      <!-- <div fxFlex=\"8%\" id=\"toggle\"> -->\r\n                          <mat-datepicker-toggle matSuffix [for]=\"picker3\" >\r\n                          </mat-datepicker-toggle>\r\n        \r\n                          <mat-datepicker #picker3>\r\n                          </mat-datepicker>\r\n                        <!-- </div> -->\r\n                        <!-- </mat-card> -->\r\n                        <mat-error *ngIf=\"!offeracceptForm.get('generateOffer').valid  && offeracceptForm.get('generateOffer').touched\">\r\n                          &nbsp;&nbsp;&nbsp; Generate Offer Date is Required!\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                   \r\n                      \r\n                </div>\r\n                <!-- <mat-card-title >\r\n                  <div class=\"card-title-text\">Offer Accept / Reject<mat-divider></mat-divider></div>\r\n              </mat-card-title> -->\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label  class=\"hint\">Customer Response</mat-label>\r\n                    <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                          <mat-select name=\"customerResponse\" formControlName=\"customerResponse\" \r\n                                      disableOptionCenteringplaceholder=\"Select\">\r\n                            <mat-option value=\" \">Select</mat-option>\r\n                            <mat-option *ngFor=\"let systemRecommendation of arraySystemRecommendation\" [value]=\"systemRecommendation\"> \r\n                                {{systemRecommendation}} \r\n                              </mat-option>\r\n                          </mat-select>\r\n                        <!-- </mat-card>             -->\r\n                  </mat-form-field>\r\n                   \r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label  class=\"hint\">Date Of Offer Accept/Reject *</mat-label>\r\n                  <!-- <mat-card class=\"widthCard inputMatName issuecard\"> -->\r\n                    <input matInput  id=\"dob\" class=\"alignment\" name=\"dateOfOfferAcceptOrReject\" readonly formControlName=\"dateOfOfferAcceptOrReject\"\r\n                      [matDatepicker]=\"picker1\"  value=\"dateOfOfferAcceptOrReject\" placeholder=\"DD/MM/YYYY\" [min]=\"offeracceptForm.get('offerIssueDate').value\">\r\n                  <!-- <div fxFlex=\"8%\" id=\"toggle\"> -->\r\n                      <mat-datepicker-toggle matSuffix [for]=\"picker1\" >\r\n                      </mat-datepicker-toggle>\r\n    \r\n                      <mat-datepicker #picker1>\r\n                      </mat-datepicker>\r\n                    <!-- </div> -->\r\n    \r\n               <!-- </mat-card> -->\r\n               <mat-error *ngIf=\"offeracceptForm.get('dateOfOfferAcceptOrReject').invalid && offeracceptForm.get('dateOfOfferAcceptOrReject').touched\">\r\n                &nbsp;&nbsp;&nbsp; Date Of Offer Accept/Reject is Required!\r\n            </mat-error>\r\n                  </mat-form-field>\r\n               \r\n              </div>\r\n                  \r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label  class=\"hint\">Offer Expiry Date *</mat-label>\r\n                  <!-- <mat-card class=\"widthCard inputMatName issuecard\"> -->\r\n                    <input matInput  id=\"dobss\" class=\"alignment\" name=\"offerExpiryDate\" readonly formControlName=\"offerExpiryDate\"\r\n                      [matDatepicker]=\"picker2\"  value=\"Date\" placeholder=\"DD/MM/YYYY\" [min]=\"((offeracceptForm.get('offerIssueDate').value))\">\r\n                  <!-- <div fxFlex=\"8%\" id=\"toggle\"> -->\r\n                      <mat-datepicker-toggle matSuffix [for]=\"picker2\" >\r\n                      </mat-datepicker-toggle>\r\n    \r\n                      <mat-datepicker #picker2>\r\n                      </mat-datepicker>\r\n                    <!-- </div>        -->\r\n                  <!-- </mat-card> -->\r\n                  <mat-error *ngIf=\"offeracceptForm.get('offerExpiryDate').invalid && offeracceptForm.get('offerExpiryDate').touched\">\r\n                    &nbsp;&nbsp;&nbsp; Offer Expiry Date is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n                  \r\n                 \r\n              </div>\r\n             \r\n             \r\n                \r\n          </div>\r\n\r\n\r\n            </mat-card>\r\n\r\n        </div>        \r\n    </form>\r\n    <div\r\n  fxLayout=\"row\"\r\n  fxLayoutAlign=\"space-between center\"\r\n  fxLayoutGap=\"16px\"\r\n  class=\"mt-32\"\r\n>\r\n  <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n    Back\r\n  </button>\r\n  <button\r\n    mat-raised-button class=\"Nextbtn\"\r\n    color=\"primary\"  (click)=\"Submit()\" [disabled]=\"!offeracceptForm.valid\"           >\r\n    Next\r\n  </button>\r\n</div>\r\n\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\n\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { AccountService } from './account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-loan-account',\r\n  templateUrl: './loan-account.component.html',\r\n  styleUrls: ['./loan-account.component.scss']\r\n})\r\nexport class LoanAccountComponent implements OnInit {\r\n\r\n  public accountItems: any[];\r\n  private accountItemsSub: Subscription;\r\n   accountId: any;\r\n  isAssessmentStageDone: boolean = false;\r\n  assessmentReportSummary:any;\r\n  isChargesScreen: boolean = false;\r\n  overDraftByStatus:boolean;\r\n  isLoanQualitativeScoreboard: boolean=false;\r\n  isLoanAssessmentDetails:boolean=false;\r\n  isAssesmentDetailsScreen: boolean = false;\r\n\r\n  isOfferIssueScreenDone: boolean = false; \r\n  isOfferIssueScreen: boolean = false; \r\n\r\n  \r\n  isOfferIssueRejectScreen: boolean  = false;\r\n\r\n  isAccountApproveStageDone: boolean = false;\r\n  //isAssessmentStageDone: boolean = false;\r\n  isOfferAcceptRejectStageDone: boolean = false;\r\n  isOfferAcceptReject:boolean=false;\r\n  isLoanSummaryStageDone: boolean = false;\r\n\r\n  isSupervisorApprovalDone:boolean=false;\r\n  isApprovedDetails:boolean=false;\r\n \r\n  // PArent 3\r\n  isCreditRatingScreen: boolean = false;\r\n  isValuationAssetScreen: boolean = false;\r\n  islegalOpinionScreen: boolean = false;\r\n  //isAssesmentDetailsScreen:boolean = false;\r\n //isOfferIssueScreen:boolean = false;\r\n   \r\n     //ApplicationEnrichmentScreen\r\n     isLoanEnrichmentDone : boolean= false;\r\n     isLoanInterestDetails : boolean= false;\r\n     isLoanDisbursementDetails : boolean= false;\r\n     isLoanRepaymentDetails : boolean= false;\r\n     isChargeDetails : boolean= false;\r\n     isAccountServices : boolean= false;\r\n\r\n    // PArent 3\r\nisLoanApplicationEntryDone :boolean=false;\r\nisLoanDetailScreen :boolean=false;\r\nisAssetsDetailScreen :boolean=false;\r\nisVehicleDetailScreen :boolean=false;\r\nisAdmissionDetails : boolean=false;\r\nisCustomerInformation : boolean=false;\r\nisMandateDetails : boolean=false;\r\nisFinancialDetails : boolean=false;\r\nisCollateralDetails : boolean=false;\r\nisGuarantorDetails : boolean=false;\r\n// PArent 3\r\n    isUnderWritingStageDone: boolean = false;\r\n    // SUB TREES\r\n    isCreditRatingDetails: boolean = false;\r\n    isValuationofAsset: boolean = false;\r\n    isLegalOpinion: boolean = false;\r\n\r\n    isHomeLoan:boolean=false;\r\n    overDraftByStatus1:boolean;\r\n  isVehicleLoan:boolean=false;\r\n  isEducationLoan:boolean=false;\r\n\r\n    isPostOfferAmendStageDone:boolean=false;\r\n    isPostOfferAmendment:boolean = false;\r\n\r\n    isAccountCreationStageDone:boolean = false;\r\n    isAccountCreditStage:boolean = false;\r\n\r\n    isDigitalSigningDone:boolean=false;\r\n    isDigitalSigning:boolean=false;\r\n    isLoanEnrichment:boolean=false;\r\n    isLoanAssessmentStageScreen:boolean=false;\r\n    isApprovalScreen:boolean=false;\r\n    isSupervisorapprovalScreen:boolean=false;\r\n    isOfferIssueStageScreen:boolean=false;\r\n    isOfferIssueRejectStageScreen:boolean=false;\r\n    isPostAmmendementStageScreen:boolean=false;\r\n    isPostAmmendementScreen:boolean=false;\r\n    isAccountCreateDetailsScreen:boolean=false;\r\n    isAccountCreationStageScreenDone:boolean=false;\r\n  loanaccountID: any;\r\n  loanInfo: any;\r\n  constructor(private ls: LocalStoreService,private api: ApiService, private router: Router,private cdr:ChangeDetectorRef ,private accountService:AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountItemsSub = this.accountService.accountItems$.subscribe(menuItem => {\r\n      this.accountItems = menuItem;\r\n    });\r\n    console.log(\"reset\")\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.ls.setItem('LOAN_DETAIL_DONE',true);\r\n      this.ls.setItem('VEHICLE_DETAIL_DONE',true);\r\n      this.ls.setItem('ADMISSION_DETAIL_DONE',true);\r\n      this.ls.setItem('CUSTOMERINFO_DETAIL_DONE',true);\r\n      this.ls.setItem('ASSET_DETAIL_DONE',true);\r\n      this.ls.setItem('MANDATE_DETAIL_DONE',true);\r\n      this.ls.setItem('FINANCIAL_DETAIL_DONE',true);\r\n      this.ls.setItem('COLLATERAL_DETAIL_DONE',true);\r\n      this.ls.setItem('GUARANTOR_DETAIL_DONE',true);\r\n      this.ls.setItem('LOAN_ENRICHMENT_DONE',true);\r\n      this.ls.setItem('LOAN_INTERST_DETAIL_DONE',true);\r\n      this.ls.setItem('LOAN_DISBURSEMENT_DETAIL_DONE',true);\r\n      this.ls.setItem('LOAN_REPAYMENT_DETAIL_DONE',true);\r\n      this.ls.setItem('LOAN_CHARGE_DETAILS',true);\r\n      this.ls.setItem('LOAN_ACCOUNT_SERVICES_DONE',true);\r\n      this.ls.setItem('CREDIT_RATING_DONE',true);\r\n      this.ls.setItem('VALUATION_OF_ASSET_DONE',true);\r\n      this.ls.setItem('LEGAL_OPINION_DONE',true);\r\n      this.ls.setItem('underWritingStage',true);\r\n      this.ls.setItem('LOAN_QUALITATIVE_SCOREBOARD_DONE',true);\r\n      this.ls.setItem('LOAN_ASSESSMENT_DETAILS_DONE',true);\r\n      this.ls.setItem('LOAN_ASSESSMENT_STAGE_DONE',true);\r\n      this.ls.setItem('APPROVED_DETAILS',true);\r\n      this.ls.setItem('SUPERVISOR_APPROVAL_STAGE',true);\r\n      this.ls.setItem('assessmentScreen',true);\r\n      this.ls.setItem('OfferIssue',true);\r\n      this.ls.setItem('legalScreen',true);\r\n      this.ls.setItem('valuationAsset',true);\r\n      this.ls.setItem('CreditRatingDetails',true);\r\n      this.ls.setItem('OfferIssueStageDone',true);\r\n      this.ls.setItem('assessmentStage',true);\r\n      this.ls.setItem('ASSESSMENT_QA_DONE',true);\r\n      this.ls.setItem('assessmentScreen',true);\r\n      this.ls.setItem('OfferIssue',true);\r\n      this.ls.setItem('OfferIssueRejectScreen',true);\r\n      this.ls.setItem('OfferIssueRejectStageScreen',true);\r\n      this.ls.setItem('PostOfferAmmendementScreen',true);\r\n      this.ls.setItem('PostOfferAmmendementStageScreen',true);\r\n      this.ls.setItem('post-offer-amend-stage',true);\r\n      this.ls.setItem('ACCOUNT_CREATTION_STAGE_DONE',true);\r\n      this.ls.setItem('ACCOUNT_CREATE_DETAILS_DONE',true);\r\n      this.ls.setItem('eSignStage',true);\r\n    }\r\n    let isHomeLoan = this.ls.getItem('isHomeLoan') || null;\r\n    console.log(\"fetch\",isHomeLoan);\r\n    this.overDraftByStatus1 = isHomeLoan != null ? isHomeLoan.isActive : false; \r\n    console.log(this.overDraftByStatus1);\r\n    let isVehicleLoan = this.ls.getItem('accountType') || null;\r\n      console.log(\"fundStatus::\",isVehicleLoan)\r\n      if(isHomeLoan==null){\r\n        this.isVehicleLoan=false;\r\n        this.isHomeLoan=false;\r\n        this.isEducationLoan=false;\r\n      }\r\n      \r\n     else if(isVehicleLoan==\"Home Loan\"){\r\n        this.isVehicleLoan=false;\r\n        this.isHomeLoan=true;\r\n        this.isEducationLoan=false;\r\n\r\n      }\r\n      else if (isVehicleLoan==\"Vehicle Loan\"){\r\n        this.isHomeLoan=false;\r\n        this.isVehicleLoan=true;\r\n        this.isEducationLoan=false;\r\n       }\r\n       else{\r\n        this.isHomeLoan=false;\r\n        this.isVehicleLoan=false;\r\n        this.isEducationLoan=true;\r\n       }\r\n    this.isAccountApproveStageDone = this.ls.getItem('LOAN_ENRICHMENT_DONE');\r\n\r\n     // this.isAccountApproveStageDone = this.ls.getItem('account-approval');\r\n      this.isAssessmentStageDone = this.ls.getItem('assessment-details');\r\n      this.isOfferAcceptRejectStageDone = this.ls.getItem('offer-acceptReject-details');\r\n      this.isLoanSummaryStageDone = this.ls.getItem('loan-summary-details');\r\n         this.isAssesmentDetailsScreen = this.ls.getItem('assessmentScreen');\r\n         //parent\r\n         this.isOfferIssueStageScreen = this.ls.getItem('OfferIssueStageDone');\r\n         //submenu\r\n    this.isOfferIssueScreen = this.ls.getItem('OfferIssue');\r\n      //parent\r\n      this.isOfferIssueRejectStageScreen = this.ls.getItem('OfferIssueRejectStageScreen');\r\n      //submenu\r\n    this.isOfferIssueRejectScreen = this.ls.getItem('OfferIssueRejectScreen');\r\n    \r\n      // Parent 1\r\n     this.isUnderWritingStageDone = this.ls.getItem('underWritingStage');\r\n        // Parent 1 childs nav\r\n    this.isCreditRatingDetails = this.ls.getItem('CREDIT_RATING_DONE');\r\n    this.isValuationofAsset = this.ls.getItem('VALUATION_OF_ASSET_DONE');\r\n    this.isLegalOpinion = this.ls.getItem('LEGAL_OPINION_DONE');\r\n\r\n    //Parent 1\r\n    this.isLoanApplicationEntryDone = this.ls.getItem('LoanEntryStage');\r\n    //Parent 1 Child Nav\r\n    this.isLoanDetailScreen = this.ls.getItem('LOAN_DETAIL_DONE');\r\n    this.isAssetsDetailScreen = this.ls.getItem('ASSET_DETAIL_DONE');\r\n    this.isVehicleDetailScreen = this.ls.getItem('VEHICLE_DETAIL_DONE');\r\n    this.isAdmissionDetails = this.ls.getItem('ADMISSION_DETAIL_DONE');\r\n    this.isCustomerInformation = this.ls.getItem('CUSTOMERINFO_DETAIL_DONE');\r\n    this.isMandateDetails = this.ls.getItem('MANDATE_DETAIL_DONE');\r\n    this.isFinancialDetails = this.ls.getItem('FINANCIAL_DETAIL_DONE');\r\n    this.isCollateralDetails = this.ls.getItem('COLLATERAL_DETAIL_DONE');\r\n    this.isGuarantorDetails = this.ls.getItem('GUARANTOR_DETAIL_DONE');\r\n\r\n    this.isLoanInterestDetails = this.ls.getItem('LOAN_INTERST_DETAIL_DONE');\r\n    this.isLoanDisbursementDetails = this.ls.getItem('LOAN_DISBURSEMENT_DETAIL_DONE');\r\n    this.isLoanRepaymentDetails=this.ls.getItem('LOAN_REPAYMENT_DETAIL_DONE');\r\n    this.isChargeDetails=this.ls.getItem('LOAN_CHARGE_DETAILS');\r\n    this.isAccountServices=this.ls.getItem('LOAN_ACCOUNT_SERVICES_DONE');\r\n    \r\n\r\n    this.isLoanEnrichment= this.ls.getItem('LOAN_ENRICHMENT_DONE');\r\n\r\n      this.islegalOpinionScreen= this.ls.getItem('legalScreen');\r\n      this.isValuationAssetScreen = this.ls.getItem('valuationAsset');\r\n      this.isAssesmentDetailsScreen = this.ls.getItem('assessmentScreen');\r\n    // this.isOfferIssueScreen = this.ls.getItem('OfferIssue');\r\n     this.isCreditRatingScreen = this.ls.getItem('CreditRatingDetails');\r\n     this.isLoanQualitativeScoreboard=this.ls.getItem('LOAN_QUALITATIVE_SCOREBOARD_DONE');\r\n     this.isLoanAssessmentDetails=this.ls.getItem('LOAN_ASSESSMENT_DETAILS_DONE');\r\n     this.isLoanAssessmentStageScreen=this.ls.getItem('LOAN_ASSESSMENT_STAGE_DONE');\r\n     //supervisor stage\r\n     //parent\r\n     this.isSupervisorapprovalScreen=this.ls.getItem('SUPERVISOR_APPROVAL_STAGE');\r\n     //submenu\r\n     this.isApprovalScreen=this.ls.getItem('APPROVED_DETAILS');\r\n     //parent\r\n     this.isPostAmmendementStageScreen=this.ls.getItem('PostOfferAmmendementStageScreen');\r\n     //submenu\r\n     this.isPostAmmendementScreen=this.ls.getItem('PostOfferAmmendementScreen');\r\n     //parent\r\n     this.isAccountCreationStageScreenDone=this.ls.getItem('ACCOUNT_CREATTION_STAGE_DONE');\r\n     //submenu\r\n     this.isAccountCreateDetailsScreen=this.ls.getItem('ACCOUNT_CREATE_DETAILS_DONE');\r\n\r\n     this.accountService.refresh.subscribe((res: any) => {\r\n     \r\n      this.loanaccountID = this.ls.getItem('loanAccountId');\r\n      this.isAccountApproveStageDone = this.ls.getItem('LOAN_ENRICHMENT_DONE');\r\n\r\n      let isVehicleLoan = this.ls.getItem('accountType') || null;\r\n      console.log(\"fundStatus::\",isVehicleLoan)\r\n      \r\n      if(isVehicleLoan==\"Home Loan\"){\r\n        this.isVehicleLoan=false;\r\n        this.isHomeLoan=true;\r\n        this.isEducationLoan=false;\r\n\r\n      }\r\n      else if (isVehicleLoan==\"Vehicle Loan\"){\r\n        this.isHomeLoan=false;\r\n        this.isVehicleLoan=true;\r\n        this.isEducationLoan=false;\r\n       }\r\n       else{\r\n        this.isHomeLoan=false;\r\n        this.isVehicleLoan=false;\r\n        this.isEducationLoan=true;\r\n       }\r\n      \r\n       this.isAssessmentStageDone = this.ls.getItem('assessment-details');\r\n       this.isOfferAcceptRejectStageDone = this.ls.getItem('offer-acceptReject-details');\r\n       this.isLoanSummaryStageDone = this.ls.getItem('loan-summary-details');\r\n          this.isAssesmentDetailsScreen = this.ls.getItem('assessmentScreen');\r\n          //parent\r\n         this.isOfferIssueStageScreen = this.ls.getItem('OfferIssueStageDone');\r\n         //submenu\r\n     this.isOfferIssueScreen = this.ls.getItem('OfferIssue');\r\n     //parent\r\n     this.isOfferIssueRejectStageScreen = this.ls.getItem('OfferIssueRejectStageScreen');\r\n     //submenu\r\n     this.isOfferIssueRejectScreen = this.ls.getItem('OfferIssueRejectScreen');\r\n\r\n     //\r\n     this.isLoanEnrichment= this.ls.getItem('LOAN_ENRICHMENT_DONE');\r\n       \r\n       // Parent 1\r\n      this.isUnderWritingStageDone = this.ls.getItem('underWritingStage');\r\n         // Parent 1 childs nav\r\n     this.isCreditRatingDetails = this.ls.getItem('CREDIT_RATING_DONE');\r\n     this.isValuationofAsset = this.ls.getItem('VALUATION_OF_ASSET_DONE');\r\n     this.isLegalOpinion = this.ls.getItem('LEGAL_OPINION_DONE');\r\n \r\n     //Parent 1\r\n     this.isLoanApplicationEntryDone = this.ls.getItem('LoanEntryStage');\r\n     //Parent 1 Child Nav\r\n     this.isLoanDetailScreen = this.ls.getItem('LOAN_DETAIL_DONE');\r\n     this.isAssetsDetailScreen = this.ls.getItem('ASSET_DETAIL_DONE');\r\n     this.isVehicleDetailScreen = this.ls.getItem('VEHICLE_DETAIL_DONE');\r\n     this.isAdmissionDetails = this.ls.getItem('ADMISSION_DETAIL_DONE');\r\n     this.isCustomerInformation = this.ls.getItem('CUSTOMERINFO_DETAIL_DONE');\r\n     this.isMandateDetails = this.ls.getItem('MANDATE_DETAIL_DONE');\r\n     this.isFinancialDetails = this.ls.getItem('FINANCIAL_DETAIL_DONE');\r\n     this.isCollateralDetails = this.ls.getItem('COLLATERAL_DETAIL_DONE');\r\n     this.isGuarantorDetails = this.ls.getItem('GUARANTOR_DETAIL_DONE');\r\n \r\n     this.isLoanInterestDetails = this.ls.getItem('LOAN_INTERST_DETAIL_DONE');\r\n     this.isLoanDisbursementDetails = this.ls.getItem('LOAN_DISBURSEMENT_DETAIL_DONE');\r\n     this.isLoanRepaymentDetails=this.ls.getItem('LOAN_REPAYMENT_DETAIL_DONE');\r\n     this.isChargeDetails=this.ls.getItem('LOAN_CHARGE_DETAILS');\r\n     this.isAccountServices=this.ls.getItem('LOAN_ACCOUNT_SERVICES_DONE');\r\n \r\n \r\n \r\n       this.islegalOpinionScreen= this.ls.getItem('legalScreen');\r\n       this.isValuationAssetScreen = this.ls.getItem('valuationAsset');\r\n       this.isAssesmentDetailsScreen = this.ls.getItem('assessmentScreen');\r\n     // this.isOfferIssueScreen = this.ls.getItem('OfferIssue');\r\n      this.isCreditRatingScreen = this.ls.getItem('CreditRatingDetails');\r\n      this.isLoanQualitativeScoreboard=this.ls.getItem('LOAN_QUALITATIVE_SCOREBOARD_DONE');\r\n     this.isLoanAssessmentDetails=this.ls.getItem('LOAN_ASSESSMENT_DETAILS_DONE');\r\n     this.isLoanAssessmentStageScreen=this.ls.getItem('LOAN_ASSESSMENT_STAGE_DONE');\r\n      //supervisor stage\r\n     //parent\r\n     this.isSupervisorapprovalScreen=this.ls.getItem('SUPERVISOR_APPROVAL_STAGE');\r\n     //submenu\r\n     this.isApprovalScreen=this.ls.getItem('APPROVED_DETAILS');\r\n\r\n     //parent\r\n     this.isPostAmmendementStageScreen=this.ls.getItem('PostOfferAmmendementStageScreen');\r\n     //submenu\r\n     this.isPostAmmendementScreen=this.ls.getItem('PostOfferAmmendementScreen');\r\n     //parent\r\n     this.isAccountCreationStageScreenDone=this.ls.getItem('ACCOUNT_CREATTION_STAGE_DONE');\r\n     //submenu\r\n     this.isAccountCreateDetailsScreen=this.ls.getItem('ACCOUNT_CREATE_DETAILS_DONE');\r\n \r\n     })\r\n    //  this.ls.removeItem('LOAN_ACC_ARRAY');\r\n  }\r\n     goApproved(){\r\n      this.api.sendApprovedStatus(true);\r\n      // this.ls.removeItem('LOAN_ACC_ARRAY');\r\n      this.router.navigate([`/loan/account/supervisor-approveddetails`]);\r\n     }\r\n     ngOnDestroy() {\r\n      if (this.accountItemsSub) {\r\n        this.accountItemsSub.unsubscribe();\r\n      }\r\n    }\r\n    // this.accountService.refresh.subscribe((res: any) => {\r\n    //   this.accountId = this.ls.getItem('accountId');\r\n    //   let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n    //   this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n    //   this.isAssessmentStageDone = this.ls.getItem('assessmentStage');\r\n    //   this.isChargesScreen = this.ls.getItem('ENRICHMENT_CHARGES_DONE');\r\n    //   this.cdr.markForCheck();\r\n    // });\r\n    //this.getData(this.accountId);\r\n // }\r\n}","<div class=\"m-333\">\r\n  <mat-sidenav-container class=\"topSection\">\r\n    <mat-sidenav EgretSideNavToggle style=\"width: 300px;\" class=\"app-sidebar\">\r\n      <span class=\"sidenav-header\">Home > Create Loan Account</span>\r\n      <!-- <div class=\"app-filters-wraps\"> -->\r\n      <div class=\"sidenav-hold\">\r\n        <ul appDropdown class=\"sidenav mt-32\">\r\n            <!-- Application satge start -->\r\n\r\n          <li appDropdownLink routerLinkActive=\"open\">\r\n            <div class=\"lvl1\">\r\n              <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n              <a appDropdownToggle [ngClass]=\"isLoanApplicationEntryDone ? 'active' : 'notActive'\">\r\n                <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isLoanApplicationEntryDone ? 'active' : 'notActive'\">account_balance_wallet</mat-icon>\r\n                <span class=\"item-name lvl1\">Application Entry Stage</span>\r\n                <span fxFlex></span>\r\n                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n              </a>\r\n              <!-- LEVEL 2 -->\r\n              <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                     [routerLink]=\"['/loan/account/list']\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\"\r\n                   [routerLink]=\"['/loan/account/loan-details']\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isLoanDetailScreen ? 'enable' : 'disable'\"\r\n                   >\r\n                   \r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Loan Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <!--*ngIf=\"isHomeLoan; else hideNav\"-->\r\n                <li routerLinkActive=\"open\" *ngIf=\"isHomeLoan; else hideNav\" >\r\n                  <a class=\"side-menu\" [routerLink]=\"['/loan/account/asset-details']\"\r\n                  [ngClass]=\"isAssetsDetailScreen ? 'enable' : 'disable'\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                     \r\n                    >\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Asset Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\" *ngIf=\"isVehicleLoan; else hideNav\">\r\n                  <a class=\"side-menu\" [routerLink]=\"['/loan/account/vehicle-details']\"\r\n                  [ngClass]=\"isVehicleDetailScreen ? 'enable' : 'disable'\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                  >\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Vehicle Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n\r\n                <li routerLinkActive=\"open\" *ngIf=\"isEducationLoan; else hideNav\">\r\n                  <a class=\"side-menu\" [routerLink]=\"['/loan/account/admission-details']\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isAdmissionDetails ? 'enable' : 'disable'\"\r\n                    >\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Admission Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\" [routerLink]=\"['/loan/account/customer-information']\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isCustomerInformation ? 'enable' : 'disable'\"\r\n                   >\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Customer Information</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\" [routerLink]=\"['/loan/account/mandate-details']\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isMandateDetails ? 'enable' : 'disable'\"\r\n                    >\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Mandate Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\" [routerLink]=\"['/loan/account/financial-details']\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isFinancialDetails ? 'enable' : 'disable'\"\r\n                   >\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Financial Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\" [routerLink]=\"['/loan/account/collateral_details']\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isCollateralDetails ? 'enable' : 'disable'\"\r\n                   >\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Collateral Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\" [routerLink]=\"['/loan/account/guarantor_details']\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isGuarantorDetails ? 'enable' : 'disable'\"\r\n                   >\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Guarantor Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <ng-template #hideNav>\r\n            \r\n          </ng-template>\r\n          <!-- Application satge end -->\r\n\r\n            <!-- Enrichment satge start -->\r\n        <li appDropdownLink routerLinkActive=\"open\">\r\n          <div class=\"lvl1\">\r\n            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n            <a appDropdownToggle [ngClass]=\"isAccountApproveStageDone ? 'active' : 'notActive'\">\r\n              <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isAccountApproveStageDone ? 'active' : 'notActive'\">style</mat-icon>\r\n              <span class=\"item-name lvl1\">Application Enrichment</span>\r\n              <span fxFlex></span>\r\n              <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n            </a>\r\n            <!-- LEVEL 2 -->\r\n            <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n              <li routerLinkActive=\"open\">\r\n                <a class=\"side-menu\" [routerLink]=\"['/loan/account/application-enrichment']\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\">\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li>\r\n              <li routerLinkActive=\"open\">\r\n                <a class=\"side-menu\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\" \r\n                  [ngClass]=\"isLoanInterestDetails ? 'enable' : 'disable'\"\r\n                  [routerLink]=\"['/loan/account/application-enrichment/intrest-details']\">\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Loan Interest Details</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li>\r\n              <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isLoanDisbursementDetails ? 'enable' : 'disable'\"\r\n                    [routerLink]=\"['/loan/account/application-enrichment/loan-disbursement']\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Loan Disbursement Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n              <li routerLinkActive=\"open\">\r\n                <a class=\"side-menu\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                  [ngClass]=\"isLoanRepaymentDetails ? 'enable' : 'disable'\"\r\n                  [routerLink]=\"['/loan/account/application-enrichment/loan-repayment']\">\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Loan Repayment Details</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li>\r\n              <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isChargeDetails ? 'enable' : 'disable'\"\r\n                    [routerLink]=\"['/loan/account/application-enrichment/charge-details']\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Charge Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isAccountServices ? 'enable' : 'disable'\"\r\n                    [routerLink]=\"['/loan/account/application-enrichment/account-services']\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Account Services</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n            </ul>\r\n          </div>\r\n        </li>\r\n         <!-- Enrichment satge end -->\r\n         <!-- Underwriting start -->\r\n         <li appDropdownLink routerLinkActive=\"open\">\r\n          <div class=\"lvl1\">\r\n            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n            <a appDropdownToggle [ngClass]=\"isLoanEnrichment ? 'active' : 'notActive'\">\r\n               <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isLoanEnrichment ? 'active' : 'notActive'\">create</mat-icon>\r\n              <span class=\"item-name lvl1\">Underwriting Stage</span>\r\n              <span fxFlex></span>\r\n              <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n            </a>\r\n            <!-- LEVEL 2 -->\r\n            <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n              <li routerLinkActive=\"open\">\r\n                <a class=\"side-menu\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                  [routerLink]=\"['/loan/account/list/underwritingStage']\">\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li>\r\n              <li routerLinkActive=\"open\">\r\n                <a class=\"side-menu\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                  [ngClass]=\"isCreditRatingDetails ? 'enable' : 'disable'\"\r\n                  [routerLink]=\"['/loan/account/list/underwritingStage/creditrating']\">\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Credit Score Details</span>\r\n<span fxFlex></span>\r\n                </a>\r\n              </li>\r\n              <li routerLinkActive=\"open\">\r\n                <a class=\"side-menu\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                  [ngClass]=\"isValuationofAsset ? 'enable' : 'disable'\"\r\n                  [routerLink]=\"['/loan/account/list/underwritingStage/valuationofassets']\">\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Valuation of Asset</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li>\r\n              <li routerLinkActive=\"open\">\r\n                <a class=\"side-menu\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                  [ngClass]=\"isLegalOpinion ? 'enable' : 'disable'\"\r\n                  [routerLink]=\"['/loan/account/list/underwritingStage/legalopinion']\">\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Legal Opinion</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li>\r\n             \r\n            </ul>\r\n          </div>\r\n        </li>\r\n         <!-- Underwriting end -->\r\n\r\n          <!-- assessment start -->\r\n          <li appDropdownLink routerLinkActive=\"open\">\r\n            <div class=\"lvl1\">\r\n              <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n              <a appDropdownToggle [ngClass]=\"isUnderWritingStageDone ? 'active' : 'notActive'\">\r\n                 <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isUnderWritingStageDone ? 'active' : 'notActive'\">assessment</mat-icon>\r\n                <span class=\"item-name lvl1\">Assessment Stage</span>\r\n                <span fxFlex></span>\r\n                <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n              </a>\r\n              <!-- LEVEL 2 -->\r\n              <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [routerLink]=\"['/loan/account/assessment/list']\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\"> \r\n                  <a class=\"side-menu\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isLoanQualitativeScoreboard ? 'enable' : 'disable'\"\r\n                    [routerLink]=\"['/loan/account/assessment/qualitative/']\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Qualitative Scoreboard</span>\r\n                   <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\"> \r\n                  <a class=\"side-menu\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isLoanAssessmentDetails ? 'enable' : 'disable'\"\r\n                    [routerLink]=\"['/loan/account/assessment/assessment-details/']\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Assessment Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n             \r\n          <!-- assessment end -->\r\n\r\n           <!-- Supervisor Approval start -->\r\n           <li appDropdownLink routerLinkActive=\"open\">\r\n              <div class=\"lvl1\">\r\n                <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                <a appDropdownToggle [ngClass]=\"isLoanAssessmentStageScreen ? 'active' : 'notActive'\">\r\n                  <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isLoanAssessmentStageScreen ? 'active' : 'notActive'\">supervisor_account</mat-icon>\r\n                  <span class=\"item-name lvl1\">Supervisor Approval Stage</span>\r\n                  <span fxFlex></span>\r\n                  <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                </a>\r\n                <!-- LEVEL 2 -->\r\n                <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                  <li routerLinkActive=\"open\">\r\n                    <a class=\"side-menu\"\r\n                      style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                      [routerLink]=\"['/loan/account/supervisor-summary/']\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                  <!--<li routerLinkActive=\"open\">\r\n                    <a\r\n                      style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                      [routerLink]=\"['/loan/account/supervisor-assessmentdetails/']\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Loan Interest Details</span>\r\n<span fxFlex></span>\r\n                    </a>\r\n                  </li>-->\r\n                  <li routerLinkActive=\"open\">\r\n                    <a class=\"side-menu\"\r\n                    (click)=\"goApproved()\"\r\n                      style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n               \r\n                      [ngClass]=\"isApprovalScreen ? 'enable' : 'disable'\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Approved Details</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                 \r\n                </ul>\r\n              </div>\r\n          </li>\r\n          <!-- Supervisor Approval end -->\r\n\r\n\r\n           <!-- Offer start -->\r\n           <li appDropdownLink routerLinkActive=\"open\">\r\n              <div class=\"lvl1\">\r\n                <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                <a appDropdownToggle [ngClass]=\"isSupervisorapprovalScreen ? 'active' : 'notActive'\">\r\n                  <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isSupervisorapprovalScreen ? 'active' : 'notActive'\">credit_card</mat-icon>\r\n                  <span class=\"item-name lvl1\">Offer Issue Stage</span>\r\n                  <span fxFlex></span>\r\n                  <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                </a>\r\n                <!-- LEVEL 2 -->\r\n                <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                  <li routerLinkActive=\"open\">\r\n                    <a class=\"side-menu\"\r\n                      style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                      [routerLink]=\"['/loan/account/list/offer-issue']\"\r\n                           >\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                  <!--<li routerLinkActive=\"open\">\r\n                    <a\r\n                      style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                         [routerLink]=\"['/loan/account/list/offer-issue/credit-rating']\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Credit Rating Details</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                  <li routerLinkActive=\"open\">\r\n                    <a\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [routerLink]=\"['/loan/account/list/offer-issue/valuation-asset']\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Valuation of Asset</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                  \r\n                  <li routerLinkActive=\"open\">\r\n                    <a\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [routerLink]=\"['/loan/account/list/offer-issue/legal-opinion']\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Legal Opinion</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                  <li routerLinkActive=\"open\">\r\n                    <a\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [routerLink]=\"['/loan/account/list/offer-issue/offer-assessment']\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Assesment Details</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>-->\r\n                  <li routerLinkActive=\"open\">\r\n                    <a class=\"side-menu\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [ngClass]=\"isOfferIssueScreen ? 'enable' : 'disable'\"\r\n                    [routerLink]=\"['/loan/account/list/offer-issue/offerissue']\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Offer Issue</span>\r\n\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                 \r\n                </ul>\r\n              </div>\r\n          </li>\r\n          <!-- Offer Approval end -->\r\n          <!--offer Accept/reject stage start -->\r\n        \r\n              <li appDropdownLink routerLinkActive=\"open\">\r\n                <div class=\"lvl1\">\r\n                  <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                  <a appDropdownToggle [ngClass]=\"isOfferIssueStageScreen ? 'active' : 'notActive'\" >\r\n                    <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isOfferIssueStageScreen ? 'active' : 'notActive'\">border_color</mat-icon>\r\n                    <span class=\"item-name lvl1\">Offer Accept / Reject Stage</span>\r\n                    <span fxFlex></span>\r\n                    <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                  </a>\r\n              <!-- LEVEL 2 -->\r\n              \r\n              <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                  [routerLink]=\"['/loan/account/offerstage/list']\"\r\n                         >\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <!--<li routerLinkActive=\"open\">\r\n                  <a\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [routerLink]=\"['/loan/account/offerstage/offer-assessment']\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Assessment Details</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n                <li routerLinkActive=\"open\">\r\n                  <a\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [routerLink]=\"['/loan/account/offerstage/offer-issue']\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Offer issue</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>-->\r\n                <li routerLinkActive=\"open\">\r\n                  <a class=\"side-menu\"\r\n                    style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                    [routerLink]=\"['/loan/account/offerstage/offer-accept-reject']\"\r\n                    [ngClass]=\"isOfferIssueRejectScreen ? 'enable' : 'disable'\">\r\n                    <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Offer Accept / Reject</span>\r\n                    <span fxFlex></span>\r\n                  </a>\r\n                </li>\r\n               \r\n              </ul>\r\n            </div>\r\n        </li>\r\n       <!-- end of offer Accept -->\r\n\r\n        <!-- Post Offer Amend start -->\r\n        <li appDropdownLink routerLinkActive=\"open\">\r\n          <div class=\"lvl1\">\r\n            <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n            <a appDropdownToggle [ngClass]=\"isOfferIssueRejectStageScreen ? 'active' : 'notActive'\">\r\n              <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isOfferIssueRejectStageScreen ? 'active' : 'notActive'\">file_copy</mat-icon>\r\n              <span class=\"item-name lvl1\">Post Offer Amend Stage</span>\r\n              <span fxFlex></span>\r\n              <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n            </a>\r\n            <!-- LEVEL 2 -->\r\n            <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n\r\n              <li routerLinkActive=\"open\">\r\n                <a class=\"side-menu\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                   [routerLink]=\"['/loan/account/post-offer-amend-stage/list']\">\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li>\r\n              <!-- <li routerLinkActive=\"open\">\r\n                <a\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                 >\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Offer Issue</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li> -->\r\n              <li routerLinkActive=\"open\">\r\n                <a class=\"side-menu\"\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                  [ngClass]=\"isPostAmmendementScreen ? 'enable' : 'disable'\"\r\n                  [routerLink]=\"['/loan/account/post-offer-amendment']\"\r\n                  >\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Post Offer Amendment</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li>\r\n              <!-- <li routerLinkActive=\"open\">\r\n                <a\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                  >\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Loan Disbursement Details</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li> -->\r\n              <!-- <li routerLinkActive=\"open\">\r\n                <a\r\n                  style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                  >\r\n                  <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Loan Repayment Details</span>\r\n                  <span fxFlex></span>\r\n                </a>\r\n              </li> -->\r\n              \r\n            </ul>\r\n          </div>\r\n        </li>\r\n        <!-- Post Offer Amend end -->\r\n\r\n       <!--start of account Creation Stage-->\r\n       \r\n       <li appDropdownLink routerLinkActive=\"open\">\r\n        <div class=\"lvl1\">\r\n          <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n          <a appDropdownToggle [ngClass]=\"isPostAmmendementStageScreen ? 'active' : 'notActive'\">\r\n            <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isPostAmmendementStageScreen ? 'active' : 'notActive'\">person_add</mat-icon>\r\n            <span class=\"item-name lvl1\">Account Creation Stage</span>\r\n            <span fxFlex></span>\r\n            <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n          </a>\r\n          <!-- LEVEL 2 -->\r\n          <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n            <li routerLinkActive=\"open\">\r\n              <a class=\"side-menu\"\r\n                style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                [routerLink]=\"['/loan/account/account-creation-stage']\"\r\n                     >\r\n                <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                <span fxFlex></span>\r\n              </a>\r\n            </li>\r\n           \r\n            <li routerLinkActive=\"open\">\r\n              <a class=\"side-menu\"\r\n              style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n              [ngClass]=\"isAccountCreateDetailsScreen ? 'enable' : 'disable'\"\r\n              [routerLink]=\"['/loan/account/account-creation-stage/account-create-details']\">\r\n                <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Account Credit Details</span>\r\n\r\n                <span fxFlex></span>\r\n              </a>\r\n            </li>\r\n           \r\n          </ul>\r\n        </div>\r\n    </li>\r\n       \r\n           \r\n\r\n            <!-- Digital Signing start -->\r\n            <li appDropdownLink routerLinkActive=\"open\">\r\n              <div class=\"lvl1\">\r\n                <!-- [ngClass]=\"item.isActive ? 'active' : 'notActive'\" -->\r\n                <a appDropdownToggle [ngClass]=\"isAccountCreationStageScreenDone ? 'active' : 'notActive'\">\r\n                  <!--<mat-icon class=\"sidenav-mat-icon\">style</mat-icon>-->\r\n                  <mat-icon class=\"sidenav-mat-icon\" [ngClass]=\"isAccountCreationStageScreenDone ? 'active' : 'notActive'\">view_comfy</mat-icon>\r\n                  <span class=\"item-name lvl1\">Digital Signing</span>\r\n                  <span fxFlex></span>\r\n                  <mat-icon class=\"menu-caret\">keyboard_arrow_right</mat-icon>\r\n                </a>\r\n                <!-- LEVEL 2 -->\r\n                <ul class=\"lvl2\" appDropdown  style=\"margin-right: 8px;\">\r\n                  <li routerLinkActive=\"open\">\r\n                    <a class=\"side-menu\"\r\n                      style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                      [routerLink]=\"['/loan/account/digitalsigning/list']\" >\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Summary</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                  <li routerLinkActive=\"open\">\r\n                    <a class=\"side-menu\"\r\n                      style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                      [ngClass]=\"isDigitalSigning ? 'enable' : 'disable'\"\r\n                      [routerLink]=\"[\r\n                      '/loan/account/digitalsigning/list/options',\r\n                      accountId\r\n                    ]\">\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Digital Signing</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                  <li routerLinkActive=\"open\">\r\n                    <a class=\"side-menu\"\r\n                      style=\"margin-left: 9px; margin-top: 5px; height: 30px;margin-bottom: 15px;\"\r\n                      [routerLink]=\"['/loan/account/digitalsigning/options']\" >\r\n                      <span class=\"item-name lvl2\" style=\"margin-left: 10px\">Signing</span>\r\n                      <span fxFlex></span>\r\n                    </a>\r\n                  </li>\r\n                 \r\n                </ul>\r\n              </div>\r\n           </li>\r\n           <!-- Digital Signing end -->\r\n          </ul>\r\n        </div>\r\n  \r\n      </mat-sidenav>\r\n      <div class=\"app-wrap\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\r\n        <!-- Right side -->\r\n        <div class=\"full-width mt-32\">\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n\r\n      </div>\r\n   </mat-sidenav-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-asset-details',\r\n  templateUrl: './asset-details.component.html',\r\n  styleUrls: ['./asset-details.component.scss']\r\n})\r\nexport class AssetDetailsComponent implements OnInit {\r\n  assetForm:FormGroup;\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n  entityName: string;\r\n  assetDetails:any\r\n  showEditOption: boolean = false;\r\n  loanaccountId: any;\r\n  loanInfo: any;\r\n  mortgagedBranch: any;\r\n  arrayAccountBranch: any;  \r\n\r\n  constructor(private fb:FormBuilder,\r\n    private loader: AppLoaderService,private apiService:ApiService, \r\n    private snack: MatSnackBar,private ls: LocalStoreService,private router:Router,\r\n    private accountService: AccountService ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountId = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    this.getAccountBranchDetails();\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    console.log(\"this.loanaccountId\",this.loanaccountId);\r\n    this.buildformGroup();\r\n    this.getCountryName(\"country\");\r\n    this.getStateName(\"state\");\r\n    let isAssetDetailscreen: boolean = JSON.parse(this.ls.getItem('ASSET_DETAIL_DONE'));\r\n    //if (this.loanAccountId != null && isAssetDetailscreen) {\r\n      setTimeout(() => {\r\n        if (this.loanaccountId != null && isAssetDetailscreen) {\r\n          this.showEditOption = true;\r\n          \r\n          this.getAssetDetails();\r\n        } \r\n        else {\r\n          console.log(\"else\");\r\n          this.showEditOption = false;\r\n          this.buildformGroup();\r\n        }\r\n      }, 10);\r\n\r\n  }\r\n  getAssetDetails(){\r\n    this.loader.open();\r\n    //this.apiService.getAssetValuation(this.loacnAccountId).subscribe((accountDetails) => {\r\n    this.apiService.getAssetails(this.loanaccountId).subscribe((assetDetails) => {\r\n      this.loader.close();\r\n      this.assetDetails = assetDetails;\r\n      this.getStateName(this.assetDetails.country);\r\n      this.getCityName(this.assetDetails.state);\r\n      console.log(this.assetDetails);\r\n      this.buildformGroup(this.assetDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n\r\n    \r\n  }\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n     for(let i=0; i<data.length;i++){\r\n       if(data[i].authStatus==='A'){     \r\n         this.arrayCountry.push(data[i].countryName);\r\n         this.arrayCountry.sort();\r\n       }\r\n     }\r\n   });\r\n }\r\n getStateName(country) {\r\n  this.apiService.getAllCountries().subscribe((data: any) => {\r\n    for(let i=0; i<data.length;i++){       \r\n      if(data[i].countryName == country){\r\n        this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n        this.arrayState = resp\r\n        })\r\n        break;   \r\n      }\r\n    }\r\n  })\r\n}\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n      // this.applicant.valueChanges.subscribe(data=>{\r\n      //   console.log('data :: before ',data.city)\r\n      //   data.city='';\r\n      //   console.log('data :: after ',data.city)\r\n      // })\r\n      // this.applicant.value.city='';\r\n      // this.applicant.get('city').reset();\r\n  \r\n    });\r\n  }\r\n\r\ngetAccountBranchDetails() {\r\n    //debugger\r\n    this.apiService.getAccountBranch().subscribe((data) => {\r\n      console.log(\"data:: AccountBranch \", data)\r\n      this.arrayAccountBranch = data;\r\n    });\r\n  }\r\n  buildformGroup(data?){\r\n    console.log(\"data\",data);\r\n    this.assetForm = this.fb.group({\r\n      id:[''],\r\n      loanaccountId : this.loanaccountId,\r\n      mortgagedBranch:[data ? data.mortgagedBranch:'',Validators.required],\r\n      dimensions:[data ? data.dimensions:''],\r\n      assetStatus:[data ? data.assetStatus:''],\r\n      homeType:[data ? data.homeType:''],\r\n      marketValue:[data ? data.marketValue:'',Validators.required],\r\n      building:[data ? data.building:'',Validators.required],\r\n      street: [data ? data.street:'', Validators.required],\r\n      locality: [data ? data.locality:'', Validators.required],\r\n      city: [data ? data.city:'', Validators.required],\r\n      state: [data ? data.state:'', Validators.required],\r\n      country: [data ? data.country:'', Validators.required],\r\n      zipCode: [data ? data.zipCode:'',[Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{5,10}$\")]],\r\n\r\n    })\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([`/loan/account/loan-details`]);\r\n  }\r\n\r\n  next(){\r\n    this.ls.setItem('ASSET_DETAIL_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/loan/account/customer-information`]);\r\n  }\r\n  submitForm(){\r\n    \r\n    \r\n    \r\n    let payload={\r\n      loanAccountId:this.loanaccountId,\r\n      mortgagedBranch:this.assetForm.value.mortgagedBranch,\r\n      street:this.assetForm.value.street,\r\n      locality:this.assetForm.value.locality,\r\n      building:this.assetForm.value.building,\r\n      marketValue:this.assetForm.value.marketValue,\r\n      homeType:this.assetForm.value.homeType,\r\n      dimensions:this.assetForm.value.dimensions,\r\n      city:this.assetForm.value.city,\r\n      assetStatus:this.assetForm.value.assetStatus,\r\n      state:this.assetForm.value.state,\r\n      \r\n      country:this.assetForm.value.country,\r\n      zipCode:this.assetForm.value.zipCode,\r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.upsertAssetDetails(payload).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null){\r\n        this.snack.open('Asset Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n     \r\n      }\r\n      \r\n      \r\n      \r\n    })\r\n    \r\n  this.next();\r\n}\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/asset_screen.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><h1>Asset Details</h1></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <!-- <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Asset Details </div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title> -->\r\n      \r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Asset Details</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"assetForm\" [formGroup]=\"assetForm\">\r\n\r\n               <div fxLayout=\"row\" fxLayoutGap=\"30px\">\r\n                      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Mortgaged Branch*</mat-label>\r\n                          <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                            <mat-select name=\"mod\" formControlName=\"mortgagedBranch\" placeholder=\"Select\" disableOptionCentering>\r\n                              <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                              <mat-option *ngFor=\"let arrayAccountBranch of arrayAccountBranch\" [value]=\"arrayAccountBranch.branchName\" > \r\n                                {{arrayAccountBranch.branchName}} \r\n                              </mat-option> \r\n                            </mat-select>\r\n                          <!-- </mat-card> -->\r\n                          <mat-error *ngIf=\"!assetForm.get('mortgagedBranch').valid && assetForm.get('mortgagedBranch').touched\" >\r\n                             Mortgaged Branch is Required!\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                       \r\n                        <!-- <div class=\"flex-grow-1\">\r\n                          <mat-hint>Dimensions*</mat-hint>\r\n                          <mat-card class=\"inputMatName\">\r\n            \r\n                            <input formControlName=\"dimensions\"\r\n                                matInput\r\n                                name=\"a_sig\" class=\"alignment\"\r\n                                placeholder=\"Dimensions\"\r\n                              />\r\n                              \r\n                          </mat-card>\r\n                         \r\n                        </div> -->\r\n\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Dimensions</mat-label>\r\n                          <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                            <mat-select name=\"dimensions\" formControlName=\"dimensions\" disableOptionCentering>\r\n                              <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                              <mat-option value=\"Sq.Ft\">Sq.Ft</mat-option>\r\n                            </mat-select>\r\n                          <!-- </mat-card> -->\r\n                          <!-- <mat-error *ngIf=\"assetForm.get('dimensions').hasError('required')\">\r\n                            Dimensions is Required!\r\n                          </mat-error> -->\r\n                          <!-- <mat-error *ngIf=\"!assetForm.get('dimensions').valid && assetForm.get('dimensions').touched\" >\r\n                            &nbsp;&nbsp; Dimensions is Required!\r\n                        </mat-error> -->\r\n                          </mat-form-field>\r\n                        </div>\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Asset Status</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                        <mat-select name=\"mod\" formControlName=\"assetStatus\" disableOptionCentering>\r\n                          <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                          <mat-option value=\"Under Construction\">Under Construction</mat-option>\r\n                          <mat-option value=\"Completed Construction\">Completed Construction</mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card> -->\r\n                          </mat-form-field>\r\n                         \r\n                        </div>\r\n                      \r\n                      </div>\r\n                      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Home Type</mat-label>\r\n                          <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                            <mat-select name=\"homeType\" formControlName=\"homeType\" disableOptionCentering>\r\n                              <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                              <mat-option value=\"Villa\">Villa</mat-option>\r\n                              <mat-option value=\"Flat\">Flat</mat-option>\r\n                              <mat-option value=\"Apartment\">Apartment</mat-option>\r\n                            </mat-select>\r\n                          <!-- </mat-card> -->\r\n                          </mat-form-field>\r\n                        </div>\r\n                         \r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Market Value*</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName\"> -->\r\n            \r\n                            <input formControlName=\"marketValue\" (keypress)=\"_keyPress($event)\"\r\n                                matInput\r\n                                name=\"marketValue\" class=\"alignment\"\r\n                                placeholder=\"Market Value\" \r\n                              />\r\n                          <!-- </mat-card> -->\r\n                          <mat-error *ngIf=\"!assetForm.get('marketValue').valid && assetForm.get('marketValue').touched\" >\r\n                            Market Value is Required!\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                         \r\n                      </div>\r\n\r\n              </div>\r\n              <!--<div fxLayout=\"row\">\r\n                  <div fxFlex=\"50\">\r\n                    <div class=\"flex-grow-1\">\r\n                      <mat-hint>Asset Status</mat-hint>\r\n                      <mat-card class=\"widthCard inputMatName\">\r\n                        <mat-select name=\"mod\">\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                          <mat-option value=\"test\">test</mat-option>\r\n                        </mat-select>\r\n                      </mat-card>\r\n                    </div>\r\n                  </div>\r\n              </div>-->\r\n              <mat-card-title>\r\n                <fieldset class=\"alignChange\">\r\n                <legend visible=\"true\">Address</legend>\r\n                </fieldset>\r\n              </mat-card-title>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\" class=\"mt-16\">\r\n                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                    <div class=\"flex-grow-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Building*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input\r\n                            matInput formControlName=\"building\"\r\n                            name=\"building\" class=\"alignment\"\r\n                            placeholder=\"Building\"\r\n                            oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"\r\n                          />\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!assetForm.get('building').valid && assetForm.get('building').touched\" >\r\n                        &nbsp;&nbsp; Building is Required!\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"flex-grow-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Locality*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input\r\n                            matInput formControlName=\"locality\"\r\n                            name=\"locality\" class=\"alignment\"\r\n                            placeholder=\"Locality\"\r\n                            oninput=\"this.value = this.value.replace(/[^A-Za-z,.;'&/.() ]|^ /g,'')\"\r\n                          />\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!assetForm.get('locality').valid && assetForm.get('locality').touched\" >\r\n                        &nbsp;&nbsp; Locality is Required!\r\n                    </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"flex-grow-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>State*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                        <mat-select name=\"state\" formControlName=\"state\" placeholder=\"Select\" \r\n                        disableOptionCentering (selectionChange)=\"getCityName($event.value)\">\r\n                          <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                          <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n                            {{state.stateName}}</mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!assetForm.get('state').valid && assetForm.get('state').touched\" >\r\n                         State is Required!\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                   \r\n                    <div class=\"flex-grow-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Zip Code*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input \r\n                            matInput formControlName=\"zipCode\" minlength=\"5\" maxlength=\"10\" (keypress)=\"_keyPress($event)\"\r\n                            name=\"zipCode\" class=\"alignment\" \r\n                            placeholder=\"Zip Code\" autocomplete=\"off\"\r\n                          />\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!assetForm.get('zipCode').valid && assetForm.get('zipCode').touched\" >\r\n                         Valid Zip Code is Required!(5-10 digits)\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                   \r\n                  </div>\r\n                  <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                    <div class=\"flex-grow-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Street*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName\"> -->\r\n                        <input\r\n                            matInput formControlName=\"street\"\r\n                            name=\"street\" class=\"alignment\"\r\n                            placeholder=\"Street\"\r\n                            oninput=\"this.value = this.value.replace(/[^A-Za-z,.;'&/.() ]|^ /g,'')\"\r\n                          />\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!assetForm.get('street').valid && assetForm.get('street').touched\" >\r\n                         Street is Required!\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                   \r\n                    <div class=\"flex-grow-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Country*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                        <mat-select name=\"country\" formControlName=\"country\" (selectionChange)=\"getStateName($event.value)\"\r\n                        disableOptionCentering placeholder=\"Select\">\r\n                          <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                          <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                            {{country}}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!assetForm.get('country').valid && assetForm.get('country').touched\" >\r\n                         Country is Required!\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"flex-grow-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>City*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                        <mat-select name=\"city\" formControlName=\"city\" placeholder=\"Select\" disableOptionCentering>\r\n                          <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                          <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}</mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card> -->\r\n                      <!-- <mat-error *ngIf=\"assetForm.get('city').hasError('required')\">\r\n                        City is Required!\r\n                      </mat-error> -->\r\n                      <mat-error *ngIf=\"!assetForm.get('city').valid && assetForm.get('city').touched\" >\r\n                        City is Required!\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>       \r\n\r\n             \r\n       \r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"space-between center\"\r\n    fxLayoutGap=\"16px\"\r\n    class=\"mt-32\"\r\n  >\r\n    <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n      Back\r\n    </button>\r\n    <button\r\n      mat-raised-button class=\"Nextbtn\"\r\n      [disabled]=\"!assetForm.valid\"\r\n      color=\"primary\" (click)=\"submitForm()\"\r\n    >\r\n    Next\r\n    </button>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { EsignPopComponent } from '../esign-pop/esign-pop.component';\r\n\r\n@Component({\r\n  selector: 'app-upload-sign-or-esign',\r\n  templateUrl: './upload-sign-or-esign.component.html',\r\n  styleUrls: ['./upload-sign-or-esign.component.scss']\r\n})\r\nexport class UploadSignOrEsignComponent implements OnInit {\r\n  isDone: boolean = false;\r\n  show: any;\r\n  // dialog: any;\r\n  accountId: any;\r\n  // apiService: any;\r\n  accountdetailsForStatusUpdate: any;\r\n  previousUrl: string = '';\r\n  // accountService: any;\r\n  customerId: any;\r\n  disableDone: boolean = true;\r\n  imageURL1: any;\r\n  urlService: any;\r\n  selectedFile: any;\r\n  res: Object = {'enable':false, 'image':null};\r\n  image: string;\r\n  profileId: any;\r\n  @ViewChild(\"profileFile\") profileFile: ElementRef;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private dialogService: DialogService,\r\n    private dialog: MatDialog,\r\n    public dialogRef: MatDialogRef<UploadSignOrEsignComponent>,\r\n    private ls: LocalStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.image=this.ls.getItem('signedImage');\r\n    if(this.image){\r\n      this.imageURL1 =this.image;\r\n    }else{\r\n      this.imageURL1 = \"not_available\";\r\n    }\r\n    \r\n    this.accountId = this.ls.getItem('loanAccountId');\r\n\r\n    // this.urlService.previousUrl$\r\n    //   .subscribe((previousUrl: string) =>{\r\n    //     this.previousUrl = previousUrl\r\n    //   });\r\n  }\r\n\r\n  close1()\r\n  {\r\n    if(this.data.screen === \"NewCustomerOnboarding\") {\r\n      this.dialogRef.close(this.res);\r\n      \r\n    }\r\n    else {\r\n      this.dialogRef.close(true);\r\n      if(this.imageURL1 !== 'not_available' && this.ls.getItem('eSignStage')){\r\n        this.ls.setItem('enable',true);\r\n      }\r\n    //   this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n    //     this.router.navigate(['loan/account/digitalsigning/list/options']);\r\n    // });\r\n    }\r\n  }\r\n  close2(){\r\n    {\r\n      if(this.data.screen === \"NewCustomerOnboarding\") {\r\n        this.dialogRef.close(this.res);\r\n        \r\n      }\r\n      else {\r\n        this.dialogRef.close(true);\r\n        this.ls.setItem('enable',true);\r\n      }\r\n    }\r\n  }\r\n\r\n  openPopUp(data?: any) {\r\n    let response:any;\r\n    if(data === undefined ||data === null) {\r\n      response = {\r\n        isSignLater: false,\r\n        screen: 'Create Account'\r\n      };\r\n    } \r\n     if(!this.show) {\r\n      let dialogRef: MatDialogRef<any> = this.dialog.open(EsignPopComponent, {\r\n        width: '720px',\r\n        disableClose: true,\r\n        data: ((data === undefined ||data === null) ? response : data)\r\n      })\r\n      dialogRef.afterClosed().subscribe(res => {\r\n        console.log(\"dismiss res\",res);\r\n        if(res){\r\n          this.imageURL1 = res?.image;\r\n          this.disableDone = res?.image ? false : true;\r\n          this.ls.setItem('enable', true);\r\n          console.log(this.show);\r\n          //this.isDone=true;\r\n          // this.getByAccountId(this.accountId);\r\n        }\r\n      })\r\n     }\r\n\r\n}\r\n  // getByAccountId(accountId: any) {\r\n  //   this.apiService.getByAccountId(accountId)\r\n  // .subscribe(resp => {\r\n  //   this.accountdetailsForStatusUpdate = resp;\r\n  //       this.updateAccountStatus(resp);\r\n  // });\r\n  // }\r\n\r\n  // updateAccountStatus(accData) {\r\n  //   accData.status = 'BACKLOG';\r\n  //   this.apiService.updateAccountStatusService(accData)\r\n  //   .subscribe(updateResp => {\r\n  //     console.log(\"updateResp:: \", updateResp);\r\n  //   });\r\n  // }\r\n\r\n  // goBack() {\r\n  //   this.router.navigate([this.previousUrl]);\r\n  // }\r\n\r\n  onFileSelect(event) {\r\n    console.log(\"event -- \", event.target.files);\r\n    this.selectedFile = event.target.files[0]\r\n    console.log(this.selectedFile)\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (event2) => {\r\n      this.imageURL1 = reader.result;\r\n    };\r\n\r\n    const cId: string = this.customerId;\r\n    const url: string = this.selectedFile;\r\n    const uploadData = new FormData();\r\n    const data = {\r\n      customerId: this.customerId,\r\n      documentName: this.customerId + \"Signature\",\r\n      documentType: \"10\",\r\n      fileType: event.type,\r\n      fileName: event.name,\r\n      verificationType: \"Digital Signing\"\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n    // this.imageURL1 = this.selectedFile;\r\n    this.apiService.upload(uploadData).subscribe((res) => {\r\n      if(res){\r\n       \r\n        \r\n        // this.getByAccountId(this.accountId);\r\n      }\r\n     });\r\n    \r\n  }\r\n  onSubmit(){\r\n    this.isDone=true;\r\n    this.dialogRef.close(true);\r\n  //   this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n  //     this.router.navigate(['loan/account/digitalsigning/list/options']);\r\n  // });\r\n  }\r\n  deleteImg() {\r\n    this.dialogService.doConfirmDialog('').subscribe((response) => {\r\n      if (response == \"Yes\") {\r\n        this.ls.setItem('enable',false);\r\n        this.ls.removeItem('signedImage');\r\n        this.imageURL1 = \"not_available\";\r\n        this.profileFile.nativeElement.value = '';\r\n        this.apiService.deleteCustomerDoc(this.customerId, this.profileId).subscribe((data) => {\r\n\r\n        });\r\n        this.disableDone = true;\r\n        this.ls.setItem('enable',false);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // resetState() {\r\n  //   this.ls.removeItem('appEntryStage');\r\n  //   this.ls.removeItem('ACC_DONE');\r\n  //   this.ls.removeItem('ACC_OPEN_DONE');\r\n  //   this.ls.removeItem('ACC_SERVICE_DONE');\r\n  //   this.ls.removeItem('ACC_MANDATE_DONE');\r\n  //   this.ls.removeItem('ACC_NOMINEE_DONE');\r\n\r\n  //   this.ls.removeItem('limitEntryStage');\r\n  //   this.ls.removeItem('LIMIT_SECURED_DONE');\r\n  //   this.ls.removeItem('LIMIT_UNSECURED_DONE');\r\n  //   this.ls.removeItem('LIMIT_FIN_DONE');\r\n\r\n  //   // Parent 3\r\n  //   this.ls.removeItem('enrichmentStage');\r\n  //   // Subnave of parent 3\r\n  //   this.ls.removeItem('ENRICHMENT_CHARGES_DONE');\r\n  //   this.ls.removeItem('ENRICHMENT_INTEREST_DONE');\r\n\r\n  //   // PArent 4\r\n  //   this.ls.removeItem('assessmentStage');\r\n  //   // Subnave of parent 4\r\n  //   this.ls.removeItem('ASSESSMENT_QA_DONE');\r\n  //   this.ls.removeItem('ASSESSMENT_REPORT_DONE');\r\n  //   // PArent 5\r\n  //   this.ls.removeItem('fundingStage');\r\n  //   // Subnave of parent 5\r\n  //   this.ls.removeItem('FUNDING_INI_DONE');\r\n\r\n  //   // Parent 6\r\n  //   this.ls.removeItem('approvalStage');\r\n  //   // Parent 6 childs nav\r\n  //   this.ls.removeItem('APPROVAL_DETAILS_DONE');\r\n  //   this.ls.removeItem('accountId');\r\n  //   this.ls.removeItem('eSignStage');\r\n  //   this.ls.removeItem('PRODUCT_CUSTOMER_ID');\r\n  //   this.ls.removeItem('accountType');\r\n  //   this.ls.removeItem('intrestFlag');\r\n  //   this.ls.removeItem('Status');\r\n  //   this.ls.removeItem(\"CIF_NUM_PRIMARY\");\r\n  //   this.ls.removeItem(\"cId\");\r\n  //   this.ls.removeItem(\"fundByStatus\");\r\n  //   this.ls.removeItem(\"overDraftByStatus\");\r\n  //   sessionStorage.clear();\r\n  //   this.accountService.refresh.next();\r\n  //   this.router.navigate(['/loan-account']);\r\n  // }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\" fxLayoutAlign=\"end center\">\r\n        <button mat-icon-button (click)=\"close1()\" *ngIf=\"!isDone\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n        <button mat-icon-button (click)=\"close()\" *ngIf=\"isDone\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div fxFlex=\"100\" *ngIf=\"!isDone\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/esign.png\" alt=\"\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"100\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"50\" fxFlexOffset=\"20px\" *ngIf=\"!isDone\">\r\n                <h5 class=\"text-center mt-16 esignFont\">Signature!</h5>\r\n                <!-- <mat-card class=\"mat-elevation-z0\">\r\n              <mat-card-content> -->\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\r\n                    <div class=\"sub-section-1\">\r\n                        <button class=\"scanButton\" appearence=\"outline\" (click)=\"openPopUp()\">Digital Sign</button>\r\n                    </div>\r\n                    <div class=\"sub-section-2\">\r\n                        <button class=\"Upload scanButton\" (click)=\"fileInput.click()\">\r\n                            Upload\r\n                            <input style=\"display: none\" type=\"file\" class=\"changeInput\" accept=\"image/*\" required\r\n                                (change)=\"onFileSelect($event)\" #fileInput>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                    <div class=\"sub-section-1\">\r\n                        <div class=\"insertDriveImg\">\r\n                            <div *ngIf=\"imageURL1 == 'not_available'; else showAvatar\">\r\n                                <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"No Image\">\r\n                            </div>\r\n                            <ng-template #showAvatar>\r\n                                <img class=\"formImg\" required [src]=\"imageURL1\" alt=\"\">\r\n                            </ng-template>\r\n                            \r\n                        </div>\r\n                        <!-- <button mat-raised-button style=\"margin-left: 300px;\" (click)=\"deleteImg()\">\r\n                            <mat-icon style=\"color: red;\" >delete</mat-icon>\r\n                        </button> -->   \r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\r\n                        <button mat-raised-button color=\"red\" class=\"dltbtn\" (click)=\"deleteImg()\" >\r\n                            DELETE\r\n                        </button>\r\n                        <button mat-raised-button color=\"primary\" class=\"dbtn\" (click)=\"onSubmit()\" [disabled]=\"imageURL1 == 'not_available'\">\r\n                            SUBMIT\r\n                        </button>  \r\n                       </div>                   \r\n                       \r\n                        \r\n                    </div>\r\n                </div>\r\n                <!-- </mat-card-content>\r\n          </mat-card> -->\r\n                <!-- <div class=\"text-center\">\r\n                    <button mat-raised-button class=\"Next\" (click)=\"onSubmit()\" [disabled]=\"imageURL1 == 'not_available'\">\r\n                        DONE\r\n                    </button>\r\n                </div> --> \r\n            </div>\r\n            <!-- <div fxFlex=\"50\" fxFlexOffset=\"20px\" *ngIf=\"isDone\" class=\"text-center\">\r\n                <div class=\"propic text-center\">\r\n                    <img src=\"assets/images/esignlater.png\" alt=\"\" />\r\n                </div>\r\n                <br>\r\n                \r\n                <p *ngIf=\"accountId != null\">Keep Account Number for your future Reference: <b>{{ accountId }}</b></p>\r\n                \r\n                <div class=\"text-center\">\r\n                    <button mat-raised-button class=\"Next\" (click)=\"close2()\">\r\n                        DONE\r\n                    </button>\r\n                </div>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-charge-details-summary',\r\n  templateUrl: './loan-charge-details-summary.component.html',\r\n  styleUrls: ['./loan-charge-details-summary.component.scss']\r\n})\r\nexport class LoanChargeDetailsSummaryComponent implements OnInit {\r\n\r\n  form1: Boolean;\r\n  form2: Boolean;\r\n\r\n  chargeFormIT: FormGroup;\r\n  savingForm: FormGroup;\r\n  accountId: any;\r\n // accountType: any;\r\n  resp: { intrestType: string; amout: string; waiver: string; }[];\r\n  loanAccountId: any;\r\n  accountType: String = \"Home Loan\";\r\n  loanInfo: any;\r\n\r\n  constructor(private snack: MatSnackBar, private dialogRef: MatDialogRef<LoanChargeDetailsSummaryComponent>, private ls: LocalStoreService, private api: ApiService, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanAccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    this.chargeFormIT = this.formBuilder.group({\r\n      chargeIT: new FormArray([]),\r\n    });\r\n  //   this.resp=[{\"intrestType\": \"IT Charge\",\r\n  //   \"amount\":\"$120\",\"waiver\":\"Yes\"},\r\n  //   {\"intrestType\": \"Handling Charge\",\r\n  //   \"amount\":\"$100\",\"waiver\":'Yes'},\r\n   \r\n  // ]\r\n  \r\n  //   this.onChangeInterest(this.resp.length);\r\n  //   this.in.patchValue(this.resp);\r\n\r\n\r\n\r\n    this.api.getFlexcubeDetails(\"chargeDetails\", this.accountType)\r\n    .subscribe((response) => {\r\n      this.onChangeInterest(response.length);\r\n      this.in.patchValue(response);\r\n    });\r\nsetTimeout(() => {\r\n  this.api.loanCahrgeFetchById(this.loanAccountId).subscribe((resp) => {\r\n    console.log(\"resp from backend \", this.resp);\r\n    this.resp = resp;\r\n    this.onChangeInterest(this.resp.length);\r\n    this.in.patchValue(this.resp);\r\n  });\r\n}, 10);\r\n  \r\n\r\n  }\r\n \r\n\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [''],\r\n            amout: [''],\r\n            waiver: [false],\r\n            accountId: [''],\r\n            createdDate: [''],\r\n            craetedBy: [''],\r\n            lastModifiedDate: [''],\r\n            lastModifiedBy: ['']\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n \r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.chargeFormIT.controls;\r\n  }\r\n  get in() {\r\n    return this.f.chargeIT as FormArray;\r\n  }\r\n  \r\n\r\n  goBack() {\r\n    this.router.navigate([\"/home/application/enrichment/list\"]);\r\n  }\r\n\r\n  onSubmit(form) {\r\n    \r\n\r\n    \r\n\r\n  }\r\n  edit() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/loan/account/application-enrichment/charge-details`]);\r\n  }\r\n\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open)\r\n      this.snack.open('charge detail is empty', 'Error', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    }\r\n  }\r\n \r\n  _keyPress(event: any) {\r\n    const pattern = /[a-zA-Z]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  \r\n}\r\n\r\n\r\n","<mat-card class=\"matCard\">\r\n  <button mat-button id=\"close\" mat-dialog-close>\r\n    <mat-icon class=\"closeicon\">close</mat-icon>\r\n  </button>\r\n  <div class=\"spanDiv1\">\r\n    <span class=\"paraFont\">Charge Details Summary\r\n\r\n    </span>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"main\">\r\n    <div fxFlex=\"100\">\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"chargeFormIT\" [formGroup]=\"chargeFormIT\">\r\n        <table class=\"cart-table default-bg mat-elevation-z0\">\r\n          <tbody>\r\n            <tr class=\"mt-4\" *ngFor=\"let chargeIT of in.controls; let i = index\" class=\"chargeTable\">\r\n              <div class=\"row\" class=\"chargeLeft\">\r\n                <ng-container [formGroup]=\"chargeIT\">\r\n                  <div class=\"heading\">\r\n                    <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />\r\n                  </div>\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Amount</mat-label>\r\n                      <input matInput formControlName=\"amout\" name=\"account_branch\" class=\"input\" readonly />\r\n                    </mat-card>\r\n                  </td>\r\n                </ng-container>\r\n              </div>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <span class=\"spanDiv\" (click)=\"edit()\">Edit</span>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-underwriting-stage-summary',\r\n  templateUrl: './underwriting-stage-summary.component.html',\r\n  styleUrls: ['./underwriting-stage-summary.component.scss']\r\n})\r\nexport class UnderwritingStageSummaryComponent implements OnInit {\r\n  titleName = \"UnderWriting Stage\";\r\n  checkBook: any;\r\n  creditRatingValues: any;\r\n  ValuationDetailsValues: any;\r\n  opinionDetailsValue: any;\r\n  loanAccountId: any;\r\n  isApprovedSreen: any;\r\n  loanAccountID: any;\r\n  loanInfo: any;\r\n  constructor(private router:Router,private api:ApiService,private ls: LocalStoreService) { }\r\n  \r\n  \r\n    customerDetails: [{\r\n      agency: 'ab',\r\n      ratings: '60',\r\n      remarks: 'This is a credit rating details'\r\n    },{\r\n      agency: 'cd',\r\n      ratings: '80',\r\n      remarks: 'This is a credit rating details'\r\n    }]\r\n\r\n  ngOnInit(): void {\r\n    this.loanAccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanAccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    this.api.getApprovedStatus().subscribe((resp)=>{\r\n      console.log(\"message\",resp);\r\n      this.isApprovedSreen=resp;\r\n \r\n    })\r\n    this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    setTimeout(() => {\r\n      this.getunderwritingStageSummaryDetails(this.loanAccountId);\r\n      this.gettingCreditRatingDetail();\r\n    }, 10);\r\n   \r\n    \r\n  }\r\n  getunderwritingStageSummaryDetails(loanAccountId: any) {\r\n    this.api.gettingUnderWritingSummary(this.loanAccountId)\r\n      .subscribe((summaryInfo: any) => {\r\n       console.log(summaryInfo);\r\n      //  this.creditRatingValues=summaryInfo.creditRatingInfo;\r\n      //  console.log(this.creditRatingValues);\r\n       this.ValuationDetailsValues=summaryInfo.valuationOfAssetInfo;\r\n       console.log(this.ValuationDetailsValues)\r\n       this.opinionDetailsValue=summaryInfo.legalOpinionInfo;\r\n       console.log(this.opinionDetailsValue);\r\n      //  this.buildCollateralForm(resp,true);\r\n      });\r\n  }\r\n  gettingCreditRatingDetail() {\r\n    this.api.gettingCreditRatingDetails(this.loanAccountID)\r\n      .subscribe((creditDetails: any) => {\r\n       console.log(creditDetails);\r\n       this.creditRatingValues=creditDetails;\r\n      //  this.buildCollateralForm(resp,true);\r\n      });\r\n  }\r\n \r\n  \r\n  goBack() {\r\n    this.router.navigate([`/loan/account/list`]);\r\n  }\r\n\r\n\r\n  done() {\r\n    this.router.navigate([`/loan/account/list`]);\r\n  }\r\n\r\n  \r\n}\r\n","<div>\r\n    <img *ngIf=\"!isApprovedSreen\" class=\"entryImg\" src=\"assets/images/entry.png\" alt=\"\">\r\n    <h4 *ngIf=\"!isApprovedSreen\" class=\"para\">{{titleName}}</h4>\r\n     \r\n\r\n <!--Customer Information Details -->\r\n    <div class=\"full-width\">\r\n            <div class=\"fullcard\">\r\n                <div fxLayout=\"row\">\r\n                    <h4 class=\"paraFont\">Credit Rating Details</h4>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                    <div fxFlex=\"100%\">\r\n                        <mat-card class=\"chequecard\">\r\n                            <mat-card-content>\r\n                                <div class=\"full-width\" >\r\n                                        <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                    <ng-container>\r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            <mat-hint class=\"headingText\">CustomerName</mat-hint>\r\n                                                            <br>\r\n                                                            <mat-hint class=\"valueText\">{{creditRatingValues.customerName}}</mat-hint>\r\n                                                        </div>\r\n                                                       \r\n                                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                            \r\n                                                            \r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </div>\r\n                                        </div>\r\n                                </div>\r\n                            </mat-card-content>\r\n                        </mat-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"fullcard\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                    <div fxFlex=\"100%\">\r\n                        <mat-card class=\"chequecard\" *ngFor=\"let credit of creditRatingValues.agencyRating;let i=index\">\r\n                            <mat-card-content>\r\n                                <div class=\"full-width\" >\r\n                                        <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                    <ng-container>\r\n                                                      \r\n                                                        \r\n                                                        <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                                <mat-card class=\"inputCard\">\r\n                                                                    <mat-hint class=\"valueText\">Ratings</mat-hint><br>\r\n                                                                     <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                                        <ng-container>\r\n                                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                                <mat-hint class=\"headingText\">Agency</mat-hint><br>\r\n                                                                                <mat-hint class=\"valueText\">{{credit?.agencyName}}</mat-hint></div>\r\n                                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                                <mat-hint class=\"headingText\">Ratings</mat-hint><br>\r\n                                                                                <mat-hint class=\"valueText\">{{credit?.ratings}} </mat-hint>\r\n                                                                            </div>\r\n                                                                        </ng-container>\r\n                                                                    </div>\r\n                                                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                                        <ng-container>\r\n                                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                                <mat-hint class=\"headingText\">Remarks</mat-hint><br>\r\n                                                                                <mat-hint class=\"valueText\">{{credit?.remarks}}</mat-hint></div>\r\n                                                                           \r\n                                                                        </ng-container>\r\n                                                                    </div>\r\n                                                                    </div>\r\n                                                            </mat-card>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </div>        \r\n                                        </div>\r\n                                </div>\r\n                            </mat-card-content>\r\n                        </mat-card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n<br>\r\n\r\n<!-- Account Service Details -->\r\n\r\n<div class=\"full-width\">\r\n        <div class=\"fullcard\">\r\n            <div fxLayout=\"row\">\r\n                <h4 class=\"paraFont\">Valuation Details</h4>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <div fxFlex=\"100%\">\r\n                    <mat-card class=\"chequecard\">\r\n                        <mat-card-content>\r\n                            <div class=\"full-width\" >\r\n                                    <div fxLayout=\"column\" fxLayoutGap=\"4%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\" >\r\n                                                <ng-container>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Bank Valuation</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{ValuationDetailsValues.bankValuation}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Asset Type </mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\" >\r\n                                                            {{ValuationDetailsValues.assetType}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Property Area </mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\" >\r\n                                                            {{ValuationDetailsValues.propertyAreaInUnits}} {{ValuationDetailsValues.propertyAreaSize}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                      \r\n                                        <div>\r\n                                            <span layout=\"row\">\r\n                                                <hr class=\"line\" flex />\r\n                                            </span>\r\n                                        </div>\r\n                                     \r\n                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                <ng-container>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Borrowers Market Value of Asset</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{ValuationDetailsValues.borrowersMktValOfAsset}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Asset Valuer </mat-hint>\r\n                                                       <br>\r\n                                                        <mat-hint class=\"valueText\">{{ValuationDetailsValues.assetValue}}</mat-hint>\r\n                                                          \r\n                                                    </div>\r\n                                                 \r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Valuation Date </mat-hint>\r\n                                                       <br>\r\n                                                        <mat-hint class=\"valueText\">{{ValuationDetailsValues.valuationDate | date}}</mat-hint>\r\n                                                          \r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                            <div>\r\n                                                <span layout=\"row\">\r\n                                                    <hr class=\"line\" flex />\r\n                                                </span>\r\n                                            </div>\r\n                                            \r\n                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                <ng-container>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Actual Area of the Property</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{ValuationDetailsValues.actualPropertyAreaInUnits}} {{ValuationDetailsValues.actualPropertyAreaSize}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Face Value Of Asset</mat-hint>\r\n                                                       <br>\r\n                                                        <mat-hint class=\"valueText\">{{ValuationDetailsValues.faceValOfAsset}}</mat-hint>\r\n                                                          \r\n                                                    </div>\r\n                                                 \r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Market Value Of Asset </mat-hint>\r\n                                                       <br>\r\n                                                        <mat-hint class=\"valueText\">{{ValuationDetailsValues.mktValOfAsset}}</mat-hint>\r\n                                                          \r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                            <div>\r\n                                                <span layout=\"row\">\r\n                                                    <hr class=\"line\" flex />\r\n                                                </span>\r\n                                            </div>\r\n                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                <ng-container>\r\n                                                    <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Forced Sale Value</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">\r\n                                                            {{ValuationDetailsValues.forcedSaleValue}}\r\n                                                        </mat-hint>\r\n                                                    </div>\r\n                                                    \r\n                                                </ng-container>\r\n                                            </div>\r\n                                    </div>\r\n                            </div>\r\n                        </mat-card-content>\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n</div>\r\n<br>\r\n<!-- Legal Opinion -->\r\n<div class=\"full-width\">\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Legal Opinion</h4>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\" >\r\n                                <div fxLayout=\"column\" fxLayoutGap=\"4%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\" >\r\n                                            <ng-container>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"headingText\">Opinion</mat-hint>\r\n                                                    <br>\r\n                                                    <mat-hint class=\"valueText\">{{opinionDetailsValue.opinion}}</mat-hint>\r\n                                                </div>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"headingText\">Asset Area</mat-hint>\r\n                                                    <br>\r\n                                                    <mat-hint class=\"valueText\" >\r\n                                                        {{opinionDetailsValue.assetAreaInUnits}} {{opinionDetailsValue.assetAreaSize}}\r\n                                                    </mat-hint>\r\n                                                </div>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"headingText\">Market Value of Asset</mat-hint>\r\n                                                    <br>\r\n                                                    <mat-hint class=\"valueText\" >\r\n                                                        {{opinionDetailsValue.mktValOfAsset}}\r\n                                                    </mat-hint>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                  \r\n                                    <div>\r\n                                        <span layout=\"row\">\r\n                                            <hr class=\"line\" flex />\r\n                                        </span>\r\n                                    </div>\r\n                                 \r\n                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                            <ng-container>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"headingText\">Lawyer Name </mat-hint>\r\n                                                    <br>\r\n                                                    <mat-hint class=\"valueText\" >\r\n                                                        {{opinionDetailsValue.lawyerName}}\r\n                                                    </mat-hint>\r\n                                                </div>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"headingText\">Opinion Date</mat-hint>\r\n                                                   <br>\r\n                                                    <mat-hint class=\"valueText\">{{opinionDetailsValue.opinionDate | date}}\r\n                                                        </mat-hint>\r\n                                                </div>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"headingText\">Valuation Date</mat-hint>\r\n                                                   <br>\r\n                                                    <mat-hint class=\"valueText\">{{opinionDetailsValue.valuationDate | date}}\r\n                                                        </mat-hint>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span layout=\"row\">\r\n                                                <hr class=\"line\" flex />\r\n                                            </span>\r\n                                        </div>\r\n                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                            <ng-container>\r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"headingText\">Description</mat-hint>\r\n                                                    <br>\r\n                                                    <mat-hint class=\"valueText\" >\r\n                                                        {{opinionDetailsValue.description}}\r\n                                                    </mat-hint>\r\n                                                </div>\r\n                                               \r\n                                                <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                    <mat-hint class=\"headingText\">Decision Favorable ?</mat-hint>\r\n                                                    <br><div class=\"toggle\">\r\n                                                    <mat-slide-toggle disabled\r\n                                                    checked=\"opinionDetailsValue.isDecisionFavorable\">\r\n                                                </mat-slide-toggle></div>\r\n                                                </div>\r\n                                                \r\n                                            </ng-container>\r\n                                        </div>\r\n                                </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div >\r\n    \r\n    <div *ngIf=\"!isApprovedSreen\"\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"space-between center\"\r\n    fxLayoutGap=\"16px\"\r\n    class=\"mt-32\"\r\n  >\r\n    <button mat-button rounded color=\"primary\" (click)=\"goBack()\">\r\n      Back\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"done()\"\r\n    >\r\n      Done\r\n    </button>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-loan-disbursement',\r\n  templateUrl: './loan-disbursement.component.html',\r\n  styleUrls: ['./loan-disbursement.component.scss']\r\n})\r\nexport class LoanDisbursementComponent implements OnInit {\r\n  loanDisbursementForm:FormGroup;\r\n\r\n  constructor(private fb:FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildformGroup();\r\n  }\r\n\r\n  buildformGroup(){\r\n    this.loanDisbursementForm = this.fb.group({\r\n      id:[''],\r\n      loan_amount:[''],\r\n      first_disbursement_date:[''],\r\n      disbursement_mode:[''],\r\n      branch_code:[''],\r\n      disbursement_frequency:[''],\r\n      customer_account:['']\r\n    })\r\n  }\r\n\r\n}\r\n","\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-80\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Loan Disbursement Details</b></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">Loan Disbursement Details</div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form *ngIf=\"loanDisbursementForm\" [formGroup]=\"loanDisbursementForm\">\r\n\r\n                 <div fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"start center\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Loan Amount*</mat-label>\r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"$2,000,000\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>First Disbursement Date*</mat-label>\r\n                                <input matInput name=\"date\" \r\n                                  placeholder=\"12/03/2020\" [matDatepicker]=\"appDatepicker1\"/>\r\n                                <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                            </mat-form-field>\r\n                              <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Disbursement Mode</mat-label>\r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"Internal Account\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Branch Code</mat-label>\r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"009\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                        </div>\r\n                          \r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n\r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Disbursement Frequency*</mat-label>\r\n                                 <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"Monthly\"\r\n                                />\r\n                              </mat-form-field> \r\n                            </div>\r\n                            \r\n                                <a style=\"color:rgb(0, 153, 255);\"><u> Disbursement Schedule</u></a>\r\n                            \r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Customer Account</mat-label>\r\n                                    <input\r\n                                      matInput\r\n                                      name=\"a_sig\"\r\n                                      placeholder=\"1940048000\"\r\n                                    />\r\n                                  </mat-form-field> \r\n                            </div>\r\n      \r\n                        </div>\r\n                </div>\r\n\r\n                \r\n                <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"space-between center\"\r\n                fxLayoutGap=\"16px\"\r\n                class=\"mt-32\"\r\n              >\r\n                <button mat-button rounded color=\"primary\">\r\n                  Back\r\n                </button>\r\n                <button\r\n                  mat-raised-button\r\n                  color=\"primary\"\r\n                >\r\n                Next\r\n                </button>\r\n              </div>\r\n         \r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n  \r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-credit-rating-details',\r\n  templateUrl: './credit-rating-details.component.html',\r\n  styleUrls: ['./credit-rating-details.component.scss']\r\n})\r\nexport class CreditRatingDetailsComponent implements OnInit {\r\n  creditDetails: FormGroup;\r\n  agencyRating:  any[] = [];\r\n accountId: any;\r\n agencyId:any;\r\n  agencyArr:any[]=[ 'riyan', 'john daey','joo'];\r\n  customerArr:any[]=[ 'Jo Smith', 'David','Chris'];\r\n  rating: any;\r\n  loanAccountId:any;\r\n  showEditOption: boolean = false;\r\n  accountDetails: any;\r\n  loanInfo: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,private loader: AppLoaderService,\r\n    private apiService:ApiService, private snack: MatSnackBar, \r\n    private ls: \r\n    LocalStoreService,\r\n    private router: Router) {\r\n      this.creditDetails = this.formBuilder.group({\r\n        \r\n        agencyName: ['',[Validators.required]],\r\n        ratings: ['',[Validators.required]],\r\n        remarks: ['',[Validators.required]],\r\n        \r\n      })\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    console.log(\"this.accountId \",this.accountId);\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    if(this.loanInfo){\r\n      this.loanAccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    //this.productaccountID = this.ls.getItem('accountId');\r\n    let isCreditRateScreen: boolean = JSON.parse(this.ls.getItem('CreditRatingDetails'));\r\n    //if (this.loanAccountId != null && isCreditRateScreen) {\r\n      setTimeout(() => {\r\n        if (this.loanAccountId != null && isCreditRateScreen) {\r\n          this.showEditOption = true;\r\n         // this.cifNumberPrimary = this.ls.getItem(\"CIF_NUM_PRIMARY\");\r\n          //this.isCifValid = true;\r\n          this.getAccountDetails();\r\n        } else {\r\n          console.log(\"else\");\r\n          this.showEditOption = false;\r\n          this.buildAccountForm();\r\n        }\r\n      }, 10);\r\n \r\n  }\r\n  getAccountDetails(){\r\n    this.loader.open();\r\n    //this.apiService.getCreditRating(this.loanAccountId).subscribe((accountDetails) => {\r\n      this.apiService.getCreditRating(this.loanAccountId).subscribe((accountDetails) => {\r\n      this.loader.close();\r\n      this.accountDetails = accountDetails;\r\n      console.log(this.accountDetails);\r\n      this.buildAccountForm(this.accountDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n\r\n\r\n  }\r\n  buildAccountForm(data?){\r\n    this.creditDetails = this.formBuilder.group({\r\n      \r\n      customerName: [data ? this.ls.getItem('NAME') : ''],\r\n      agencyName: [data ? data.agencyName : '', Validators.required],\r\n      ratings: [data ? data.ratings : '', Validators.required],\r\n     remarks: [data ? data.remarks : '', Validators.required],\r\n      \r\n    });\r\n\r\n  }\r\n\r\n  submit(){\r\n    this.next();\r\n  }\r\n  next(){\r\n    //let details:  any[] = [];\r\n    this.agencyRating.push(this.creditDetails.value);\r\n    console.log(\"addbranch::\",this.agencyRating);\r\n    let payload={\r\n      agencyRating: this.agencyRating,\r\n      loanAccountId:this.loanAccountId\r\n      //loanAccountId:this.loanAccountId\r\n\r\n    }\r\n    this.apiService.UpdateCreditRating(payload).subscribe(response => {\r\n      console.log(response);\r\n      if (response === 200 || response !== null) {\r\n        this.snack.open('  Credit Rating  Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.ls.setItem('CreditRatingDetails', true);\r\n        //this.accountService.refresh.next();\r\n        this.router.navigate([\"/loan/account/list/offer-issue/valuation-asset\"]);\r\n      }\r\n      else if (response === 500) {\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n    console.log(\"payload\",payload);\r\n\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n          <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-80\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n          <div class=\"main-title\"><b>Credit Rating Details</b></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div  fxLayout=\"column\">\r\n    <form fxLayout=\"column\"  [formGroup]=\"creditDetails\" >\r\n        <div  fxFlex=\"100\">\r\n            <mat-card class=\"p-0\" style=\"border-radius: 30px; margin-right: 1.5cm;\">\r\n                \r\n                <mat-card-title >\r\n                    <div class=\"card-title-text\" >Credit Rating Details<mat-divider></mat-divider></div>\r\n                </mat-card-title>\r\n        \r\n                <mat-card-content>\r\n                    \r\n                        <div>\r\n                            <div fxFlex=\"40%\" class=\"form-group\">\r\n                                <label  class=\"hint\">Customer Name* </label>\r\n                                <mat-card class=\"inputMatName\">\r\n                                    <mat-select disableOptionCentering class=\"alignment\">\r\n                                        <mat-option disabled>select---</mat-option>\r\n                                        <mat-option *ngFor=\"let customerName of customerArr\" value=\"customerName\" >\r\n                                           {{customerName}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                   \r\n                                </mat-card>\r\n                                <!--<mat-error\r\n                                        *ngIf=\"creditDetails.get('customerName').touched && !creditDetails.get('customerName').valid\">\r\n                                        <small>Please select Customer Name!</small> \r\n                                    </mat-error>-->\r\n            \r\n                            </div><br><br>\r\n                            \r\n                        </div>\r\n                        \r\n                        <div class=\"form-group\">\r\n                            \r\n                             <mat-expansion-panel style=\"border: 1px solid #456EFE;\" class=\"mb-8\" expanded=\"true\">\r\n                                 <mat-expansion-panel-header style=\"border: 1px solid #456EFE;\" >\r\n                                     <mat-panel-title>Ratings </mat-panel-title>\r\n                                   </mat-expansion-panel-header>\r\n                                   <div>\r\n                                    <div fxFlex=\"100\" fxLayoutGap=\"10px\">\r\n                                        <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n                                            <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                                                <label  class=\"hint\">Select Agency* </label>\r\n                                              <mat-card class=\"inputMatName\">\r\n                                                    <mat-select formControlName=\"agencyName\" class=\"alignment\" disableOptionCentering>\r\n                                                        <mat-option disabled>select---</mat-option>\r\n                                                        <mat-option value=\"agencyName\" *ngFor=\"let agencyName of agencyArr\" >\r\n                                                           {{agencyName}}\r\n                                                        </mat-option>\r\n                                                    </mat-select>\r\n                                                   \r\n                                                </mat-card>\r\n                                                <mat-error\r\n                                                *ngIf=\"creditDetails.get('agencyName').touched && !creditDetails.get('agencyName').valid\">\r\n                                                <small>Please select Agency!</small> \r\n                                            </mat-error>\r\n\r\n                                                \r\n                                            </div>\r\n                                            <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                                                <label  class=\"hint\">Ratings* </label>\r\n                                                <mat-card class=\"inputMatName\">\r\n                                                    <input matInput maxlength=\"3\" \r\n                                                    (keypress)=\"_keyPress($event)\"  class=\"alignment\" type=\"text\" name=\"ratings\"\r\n                                                    formControlName=\"ratings\" />\r\n                                                  </mat-card>\r\n                                                  <mat-error\r\n                                                *ngIf=\"creditDetails.get('ratings').touched && !creditDetails.get('ratings').valid\">\r\n                                                <small>Please enter Ratings!</small> \r\n                                            </mat-error>\r\n                                                \r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                        <div fxLayoutGap=\"10px\">\r\n                                            <div fxFlex=\"40%\" class=\"form-group\">\r\n                                                <mat-label  class=\"hint\">Remarks</mat-label>\r\n                                                <mat-form-field  class=\"full-width\">\r\n                                                    \r\n                                                    <textarea matInput  formControlName=\"remarks\"></textarea>\r\n                                                    \r\n                                                  </mat-form-field>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                   </div>\r\n                             </mat-expansion-panel>\r\n                             \r\n                         </div>\r\n                        \r\n                    \r\n                </mat-card-content>\r\n                \r\n            </mat-card>\r\n        </div>\r\n        <div class=\"button\">\r\n            <!-- -->\r\n            <button mat-button class=\"Back\"  >Back</button>\r\n            <button mat-stroked-button class=\"Next\" [disabled]=\"!creditDetails.valid\"\r\n            (click)=\"submit()\">Next</button>\r\n        </div>\r\n    </form>\r\n</div>\r\n    \r\n  \r\n","import { DatePipe } from \"@angular/common\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AccountService } from \"../../account.service\";\r\n\r\n@Component({\r\n  selector: \"app-account-services\",\r\n  templateUrl: \"./account-services.component.html\",\r\n  styleUrls: [\"./account-services.component.scss\"],\r\n})\r\nexport class AccountServicesComponent implements OnInit {\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  lastData:any;\r\n  flag1: boolean=false;\r\n  flag2: boolean=false;\r\n  flag3: boolean=false;\r\n  flag4: boolean=false;\r\n  flag5: boolean=false;\r\n  flag6: boolean=false;\r\n  statementPreferencesForm: FormGroup;\r\n  holidayPreferenceForm: FormGroup;\r\n  maturityForm: FormGroup;\r\n  revisionForm: FormGroup;\r\n  loanaccountID: any;\r\n  loanInfo: any; \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public datepipe: DatePipe,\r\n    public api: ApiService,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private router:Router,\r\n    private ls: LocalStoreService,\r\n    private accountService: AccountService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    this.buildAccountForm();\r\n    this.lastUpdateByCif();\r\n    setTimeout(() => {\r\n      \r\n      this.api.AccountServicesFetchById(this.loanaccountID).subscribe((resp) => {\r\n        console.log(\"resp from backend \", resp);\r\n        // if (resp) {\r\n          this.buildStatmentPreferenceForm(resp);\r\n          resp.serviceDetails.find((obj) => obj.serviceName === \"Maturity\");\r\n          this.buildMaturityForm(\r\n            resp.serviceDetails.find((obj) => obj.serviceName === \"Maturity\")\r\n          );\r\n          this.buildRevisionForm(\r\n            resp.serviceDetails.find((obj) => obj.serviceName === \"Revision\")\r\n          );\r\n          this.buildHolidayForm(\r\n            resp.serviceDetails.find(\r\n              (obj) => obj.serviceName === \"Holiday Preference\"\r\n            )\r\n          );\r\n        // }\r\n      });\r\n    }, 10);\r\n   \r\n  }\r\n\r\n  buildAccountForm() {\r\n    this.statementPreferencesForm = this.formBuilder.group({\r\n      // requiredDisbursement: [true],\r\n      statementCycle: [\"\", Validators.required],\r\n      statementType: [\"\", Validators.required],\r\n      statementGeneration:[\"\",Validators.required],\r\n      startDate: [\"\", Validators.compose([ Validators.required, Validators.min(this.lastData)])],\r\n      accServiceId: [],\r\n      loanAccountId: [this.loanaccountID],\r\n      // firstDisburmentDate:['',Validators.required],\r\n      // disbursementMode:['',Validators.required],\r\n    });\r\n    this.holidayPreferenceForm = this.formBuilder.group({\r\n      ignoreHolidays: [true],\r\n      holidayCheck: [\"\", Validators.required],\r\n      moveAcrossMonth: [\"\", Validators.required],\r\n      cascadeSchedules: [\"\", Validators.required],\r\n      accServiceDetailsId: [\"\"],\r\n      accountServiceId: [\"\"],\r\n      serviceName: [\"Holiday Preference\"],\r\n    });\r\n    this.maturityForm = this.formBuilder.group({\r\n      ignoreHolidays: [true],\r\n      holidayCheck: [\"\", Validators.required],\r\n      moveAcrossMonth: [\"\", Validators.required],\r\n      cascadeSchedules: [\"\", Validators.required],\r\n      accServiceDetailsId: [\"\"],\r\n      accountServiceId: [\"\"],\r\n      serviceName: [\"Maturity\"],\r\n    });\r\n    this.revisionForm = this.formBuilder.group({\r\n      ignoreHolidays: [true],\r\n      holidayCheck: [\"\", Validators.required],\r\n      moveAcrossMonth: [\"\", Validators.required],\r\n      cascadeSchedules: [\"\", Validators.required],\r\n      accServiceDetailsId: [\"\"],\r\n      accountServiceId: [\"\"],\r\n      serviceName: [\"Revision\"],\r\n    });\r\n  }\r\n  goBack() {\r\n   this.router.navigate([\r\n      `/loan/account/application-enrichment`,\r\n    ]);\r\n  }\r\n  clickToggle1(){\r\n    this.flag1=!this.flag1;\r\n  }\r\n  clickToggle2(){\r\n    this.flag2=!this.flag2;\r\n  }clickToggle3(){\r\n    this.flag3=!this.flag3;\r\n  }\r\n  clickToggle4(){\r\n    this.flag4=!this.flag4;\r\n  }\r\n   clickToggle5(){\r\n    this.flag5=!this.flag5;\r\n  }\r\n   clickToggle6(){\r\n    this.flag6=!this.flag6;\r\n  }\r\n  buildMaturityForm(item) {\r\n    this.maturityForm = this.formBuilder.group({\r\n      ignoreHolidays: [item ? item.ignoreHolidays : true],\r\n      holidayCheck: [item ? item.holidayCheck : \"\", Validators.required],\r\n      moveAcrossMonth: [item ? item.moveAcrossMonth : \"\", Validators.required],\r\n      cascadeSchedules: [\r\n        item ? item.cascadeSchedules : true,\r\n        Validators.required,\r\n      ],\r\n      accServiceDetailsId: [item ? item.accServiceDetailsId : \"\"],\r\n      accountServiceId: [item ? item.accountServiceId : \"\"],\r\n      serviceName: [\"Maturity\"],\r\n    });\r\n  }\r\n  buildRevisionForm(item) {\r\n    this.revisionForm = this.formBuilder.group({\r\n      ignoreHolidays: [item ? item.ignoreHolidays : true],\r\n      holidayCheck: [item ? item.holidayCheck : \"\", Validators.required],\r\n      moveAcrossMonth: [item ? item.moveAcrossMonth : \"\", Validators.required],\r\n      cascadeSchedules: [\r\n        item ? item.cascadeSchedules : true,\r\n        Validators.required,\r\n      ],\r\n      accServiceDetailsId: [item ? item.accServiceDetailsId : \"\"],\r\n      accountServiceId: [item ? item.accountServiceId : \"\"],\r\n      serviceName: [\"Revision\"],\r\n    });\r\n  }\r\n  buildHolidayForm(item) {\r\n    this.holidayPreferenceForm = this.formBuilder.group({\r\n      ignoreHolidays: [item ? item.ignoreHolidays : true],\r\n      holidayCheck: [item ? item.holidayCheck : \"\", Validators.required],\r\n      moveAcrossMonth: [item ? item.moveAcrossMonth : \"\", Validators.required],\r\n      cascadeSchedules: [\r\n        item ? item.cascadeSchedules : true,\r\n        Validators.required,\r\n      ],\r\n      accServiceDetailsId: [item ? item.accServiceDetailsId : \"\"],\r\n      accountServiceId: [item ? item.accountServiceId : \"\"],\r\n      serviceName: [\"Holiday Preference\"],\r\n    });\r\n  }\r\n  buildStatmentPreferenceForm(item) {\r\n    let latest_date = new Date(item.startDate).toISOString().substring(0, 10);\r\n    this.statementPreferencesForm = this.formBuilder.group({\r\n      statementCycle: [item ? item.statementCycle : \"\", Validators.required],\r\n      statementType: [item ? item.statementType : \"\", Validators.required],\r\n      statementGeneration: [item ? item.statementGeneration : \"\", Validators.required],\r\n      startDate: [item ? latest_date : \"\", Validators.required],\r\n      accServiceId: [item ? item.accServiceId : \"\"],\r\n      loanAccountId: [this.loanaccountID],\r\n    });\r\n  }\r\n  submit() {\r\n    let obj_test: any = {};\r\n    obj_test.serviceDetails = [];\r\n    let latest_date = this.datepipe.transform(\r\n      this.statementPreferencesForm.value.startDate,\r\n      \"yyyy-MMM-dd\"\r\n    );\r\n    obj_test.statementCycle = this.statementPreferencesForm.value.statementCycle;\r\n    obj_test.statementType = this.statementPreferencesForm.value.statementType;\r\n    obj_test.statementGeneration = this.statementPreferencesForm.value.statementGeneration;\r\n    obj_test.startDate = latest_date;\r\n    (obj_test.accServiceId = this.statementPreferencesForm.value.accServiceId),\r\n      (obj_test.loanAccountId =\r\n        this.statementPreferencesForm.value.loanAccountId),\r\n      (obj_test.serviceDetails[0] = this.maturityForm.value);\r\n    obj_test.serviceDetails[1] = this.revisionForm.value;\r\n    obj_test.serviceDetails[2] = this.holidayPreferenceForm.value;\r\n    console.log(\"obj_test \", obj_test);\r\n    this.api.saveAccountService(obj_test).subscribe((resp) => {\r\n      console.log(\"resp \", resp);\r\n      this.snack.open(\"Account Services Saved!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.next();\r\n    },\r\n    (err) => {\r\n      this.snack.open(\r\n        \"Not able to connect to server!\",\r\n        \"INTERNAL SERVER ERROR\",\r\n        {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        }\r\n      );\r\n    });\r\n  }\r\n  lastUpdateByCif(){\r\n    this.apiService.getLoanDetails(this.loanaccountID).subscribe((resp:any)=>{\r\n     \r\n     this.lastData = this.datepipe.transform(resp.applicationDate,\"yyyy-MM-dd\");\r\n   \r\n    }, (err: any) => {\r\n      console.error(err);\r\n    })\r\n  }\r\n  next(){\r\n    this.ls.setItem('LOAN_ACCOUNT_SERVICES_DONE', true);\r\n    this.ls.setItem('LOAN_ENRICHMENT_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([\r\n      `/loan/account/list/underwritingStage`,\r\n    ]);\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img [src]=\"'assets/images/svg/accountService.svg'\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Account Services</b></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">          \r\n      <mat-card-title class=\"alignChange\">\r\n        <fieldset>\r\n        <legend visible=\"true\">Account Services</legend>\r\n        </fieldset>\r\n      </mat-card-title>           \r\n      <mat-card-title class=\"alignChange\">\r\n        <fieldset class=\"marginTop\">\r\n        <legend class=\"headingName\" visible=\"true\">Statement Preferences</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"statementPreferencesForm\">\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Statement Cycle*</mat-label>\r\n                <!-- <mat-card class=\" inputMatName\" id=\"select\"> -->\r\n                  <mat-select placeholder=\"Statement Cycle\" name=\"statementCycle\" disableOptionCentering formControlName=\"statementCycle\">\r\n                    <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option value=\"Monthly\">Monthly</mat-option>\r\n                    <mat-option value=\"Quaterly\">Quaterly</mat-option>\r\n                    <mat-option value=\"Half-yearly\">Half-yearly</mat-option>\r\n                    <mat-option value=\"Yearly\">Yearly</mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error *ngIf=\"!statementPreferencesForm.get('statementCycle').valid && statementPreferencesForm.get('statementCycle').touched\">\r\n                  Statement Cycle is Required!</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Statement Type*</mat-label>\r\n                <!-- <mat-card class=\"widthCard inputMatName\" id=\"select\"> -->\r\n                  <mat-select placeholder=\"Statement Type\" name=\"opinion\" formControlName=\"statementType\" disableOptionCentering>\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"Detailed\">Detailed</mat-option>\r\n                    <mat-option value=\"Summary\">Summary</mat-option>\r\n\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!statementPreferencesForm.get('statementType').valid && statementPreferencesForm.get('statementType').touched\">\r\n                  Statement Type is Required!</mat-error>\r\n                </mat-form-field>\r\n              </div>             \r\n            </div>           \r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n\r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Start Date*</mat-label>\r\n                <!-- <mat-card class=\" inputMatName1 dataChange\" id=\"select\"> -->\r\n                  <input placeholder=\"DD/MM/YYYY\" matInput name=\"valuationDate\" class=\"alignment\" [min]=\"lastData\"\r\n                    formControlName=\"startDate\" [matDatepicker]=\"appDatepicker\"/>\r\n                    <div fxFlex=\"8%\" id=\"toggle\" class=\"datechange\">\r\n                      <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                      <mat-datepicker #appDatepicker></mat-datepicker>\r\n                       </div>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!statementPreferencesForm.get('startDate').valid && statementPreferencesForm.get('startDate').touched\">\r\n                  Start Date is Required!</mat-error>\r\n                </mat-form-field>\r\n              </div>              \r\n            </div>   \r\n          </div>\r\n          <mat-card-title>\r\n            <fieldset class=\"alignChange\">\r\n            <legend class=\"headingName\" visible=\"true\">Statement Generation*</legend>\r\n            </fieldset>\r\n          </mat-card-title>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n          <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n           <div class=\"flex-grow-2\">            \r\n             <div fxLayout=\"row wrap\">\r\n                 <div class=\"sqInput1\">\r\n            <mat-checkbox formControlName=\"statementGeneration\" color=\"primary\">&nbsp;Email </mat-checkbox>&nbsp;\r\n          </div>\r\n          <div class=\"sqInput1\">\r\n            <mat-checkbox formControlName=\"statementGeneration\" color=\"primary\">&nbsp;Mobile </mat-checkbox>&nbsp;\r\n          </div>\r\n          <div class=\"sqInput1\">\r\n            <mat-checkbox formControlName=\"statementGeneration\" color=\"primary\">&nbsp;Hard Copy </mat-checkbox>\r\n            </div>\r\n              </div>\r\n           </div>\r\n          </div>\r\n         </div>\r\n        </form>\r\n        </mat-card-content>\r\n        <!-- <div class=\"spanDiv1\">\r\n          <span class=\"span\">Holiday Preferences\r\n          </span>\r\n          <mat-divider class=\"divider marginL-0\"></mat-divider>\r\n        </div> -->   \r\n       \r\n        <mat-card-title class=\"alignChange\">\r\n          <fieldset class=\"marginTop\">\r\n          <legend class=\"headingName\" visible=\"true\">Holiday Preferences</legend>\r\n          </fieldset>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n        <form [formGroup]=\"holidayPreferenceForm\">\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\" class=\"toggle\">\r\n                <div fxFlex=\"100\" class=\"pr-1\">\r\n                  <div class=\"pb-1\">\r\n                    Ignore Holidays ??\r\n                    <mat-slide-toggle formControlName=\"ignoreHolidays\" name=\"ignoreHolidays\" (change)=\"clickToggle1()\"></mat-slide-toggle>\r\n                  </div><br>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"flex-grow-2\" *ngIf=\"flag1\">\r\n\r\n                <mat-hint>Move Across Month*</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName\">\r\n                  <mat-select placeholder=\"Move Across Month\" name=\"moveAcrossMonth\" formControlName=\"moveAcrossMonth\" disableOptionCentering>\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"Yes\">Yes</mat-option>\r\n                    <mat-option value=\"No\">No</mat-option>\r\n                    \r\n                  </mat-select>\r\n                </mat-card>\r\n                <mat-error\r\n                  *ngIf=\"!holidayPreferenceForm.get('moveAcrossMonth').valid && holidayPreferenceForm.get('moveAcrossMonth').touched\">\r\n                  Move Across Month is Required!</mat-error>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n\r\n              <div class=\"flex-grow-2\"  *ngIf=\"flag1\">\r\n\r\n                <mat-hint>Holiday Check*</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName\">\r\n                  <mat-select placeholder=\"Holiday Check\" name=\"holidayCheck\" formControlName=\"holidayCheck\" disableOptionCentering>\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"Currency\">Currency</mat-option>\r\n                    <mat-option value=\"Local\">Local</mat-option>\r\n                    <mat-option value=\"Clearing\">Clearing</mat-option>\r\n                  </mat-select>\r\n                </mat-card>\r\n                <mat-error\r\n                  *ngIf=\"!holidayPreferenceForm.get('holidayCheck').valid && holidayPreferenceForm.get('holidayCheck').touched\">\r\n                  Holiday Check is Required!</mat-error>\r\n              </div>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\" class=\"toggle\">\r\n                <div fxFlex=\"100\" class=\"pr-1\">\r\n                  <div class=\"pb-1\">\r\n                    Cascade Schedules ?\r\n                    <mat-slide-toggle formControlName=\"cascadeSchedules\" (change)=\"clickToggle4()\"></mat-slide-toggle>\r\n                    <!-- <mat-slide-toggle formControlName=\"cascadeSchedules\"></mat-slide-toggle> -->\r\n                  </div><br>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <div class=\"pb-1\">\r\n          <mat-checkbox formControlName=\"isSameAsHolidayDate\" name=\"isSameAsHolidayDate\" color=\"primary\">&nbsp;Same as Holiday Date? </mat-checkbox>&nbsp;          \r\n          \r\n        </div>\r\n        </mat-card-content>\r\n        <!-- <div class=\"spanDiv1\">\r\n          <span class=\"span\">\r\n            Maturity Date\r\n          </span>\r\n          <mat-divider class=\"divider marginL-0\"></mat-divider>\r\n        </div> -->\r\n        <mat-card-title class=\"alignChange\">\r\n          <fieldset class=\"marginTop\">\r\n          <legend class=\"headingName\" visible=\"true\">Maturity Date</legend>\r\n          </fieldset>\r\n        </mat-card-title>       \r\n        <mat-card-content>\r\n        <form [formGroup]=\"maturityForm\">\r\n\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\" class=\"toggle\">\r\n                <div fxFlex=\"100\" class=\"pr-1\">\r\n                  <div class=\"pb-1\">\r\n                    Ignore Holidays ??\r\n                    <mat-slide-toggle formControlName=\"ignoreHolidays\" (change)=\"clickToggle2()\"></mat-slide-toggle>\r\n                  </div><br>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"flex-grow-2\" *ngIf=\"flag2\">\r\n\r\n                <mat-hint>Move Across Month*</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName\">\r\n                  <mat-select placeholder=\"Move Across Month\" name=\"opinion\" formControlName=\"moveAcrossMonth\" disableOptionCentering>\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"Yes\">Yes</mat-option>\r\n                    <mat-option value=\"No\">No</mat-option>\r\n                    \r\n                  </mat-select>\r\n                </mat-card>\r\n                <mat-error\r\n                  *ngIf=\"!maturityForm.get('moveAcrossMonth').valid && maturityForm.get('moveAcrossMonth').touched\">\r\n                  Move Across Month is Required!</mat-error>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n\r\n              <div class=\"flex-grow-2\" *ngIf=\"flag2\">\r\n\r\n                <mat-hint>Holiday Check*</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName\">\r\n                  <mat-select placeholder=\"Holiday Check\" name=\"opinion\" formControlName=\"holidayCheck\" disableOptionCentering>\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"Currency\">Currency</mat-option>\r\n                    <mat-option value=\"Local\">Local</mat-option>\r\n                    <mat-option value=\"Clearing\">Clearing</mat-option>\r\n                  </mat-select>\r\n                </mat-card>\r\n                <mat-error *ngIf=\"!maturityForm.get('holidayCheck').valid && maturityForm.get('holidayCheck').touched\">\r\n                  Holiday Check is Required!</mat-error>\r\n              </div>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\" class=\"toggle\">\r\n                <div fxFlex=\"100\" class=\"pr-1\">\r\n                  <div class=\"pb-1\">\r\n                    Cascade Schedules ?\r\n                    <mat-slide-toggle formControlName=\"cascadeSchedules\" (change)=\"clickToggle5()\"></mat-slide-toggle>\r\n                    <!-- <mat-slide-toggle formControlName=\"cascadeSchedules\"></mat-slide-toggle> -->\r\n                  </div><br>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <div class=\"pb-1\">\r\n          <mat-checkbox formControlName=\"isSameAsRevisionSchedules\" color=\"primary\">&nbsp;Same as Revision Schedules? </mat-checkbox>&nbsp;\r\n        </div>\r\n        </mat-card-content>\r\n        <!-- <div class=\"spanDiv1\">\r\n          <span class=\"span\">\r\n            Revision Schedules\r\n          </span>\r\n          <mat-divider class=\"divider marginL-0\"></mat-divider>\r\n        </div> -->\r\n        <mat-card-title class=\"alignChange\">\r\n          <fieldset class=\"marginTop\">\r\n          <legend class=\"headingName\" visible=\"true\">Revision Schedules</legend>\r\n          </fieldset>\r\n        </mat-card-title>        \r\n        <mat-card-content>\r\n        <form [formGroup]=\"revisionForm\">\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\" class=\"toggle\">\r\n                <div fxFlex=\"100\" class=\"pr-1\">\r\n                  <div class=\"pb-1\">\r\n                    Ignore Holidays ??\r\n                    <mat-slide-toggle formControlName=\"ignoreHolidays\" (change)=\"clickToggle3()\"></mat-slide-toggle>\r\n                  </div><br>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"flex-grow-2\" *ngIf=\"flag3\">\r\n\r\n                <mat-hint>Move Across Month*</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName\">\r\n                  <mat-select placeholder=\"Move Across Month\" name=\"opinion\" formControlName=\"moveAcrossMonth\" disableOptionCentering>\r\n                    <mat-option value=\"Yes\">Yes</mat-option>\r\n                    <mat-option value=\"No\">No</mat-option>\r\n                   \r\n                  </mat-select>\r\n                </mat-card>\r\n                <mat-error\r\n                  *ngIf=\"!revisionForm.get('moveAcrossMonth').valid && revisionForm.get('moveAcrossMonth').touched\">\r\n                  Move Across Month is Required!</mat-error>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"flex-grow-2\" *ngIf=\"flag3\">\r\n                <mat-hint>Holiday Check*</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName\">\r\n                  <mat-select placeholder=\"Holiday Check\" name=\"opinion\" formControlName=\"holidayCheck\" disableOptionCentering>\r\n                    <mat-option value=\"Currency\">Currency</mat-option>\r\n                    <mat-option value=\"Local\">Local</mat-option>\r\n                    <mat-option value=\"Clearing\">Clearing</mat-option>\r\n                  </mat-select>\r\n                </mat-card>\r\n                <mat-error *ngIf=\"!revisionForm.get('holidayCheck').valid && revisionForm.get('holidayCheck').touched\">\r\n                  Holiday Check is Required!</mat-error>\r\n              </div>\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\" class=\"toggle\">\r\n                <div fxFlex=\"100\" class=\"pr-1\">\r\n                  <div class=\"pb-1\">\r\n                    Cascade Schedules ?\r\n                     <mat-slide-toggle formControlName=\"cascadeSchedules\" (change)=\"clickToggle6()\"></mat-slide-toggle>\r\n                    <!-- <mat-slide-toggle formControlName=\"cascadeSchedules\"></mat-slide-toggle> -->\r\n                  </div><br>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>        \r\n          \r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n      <button mat-button rounded class=\"Backbtn\"  (click)=\"goBack()\">Back</button>\r\n      <button mat-raised-button color=\"primary\" class=\"Nextbtn\" (click)=\"submit()\" [disabled]=\"!statementPreferencesForm.valid\">\r\n        Next\r\n      </button>\r\n      <!-- [disabled]=\"loanRepaymentForm.invalid\"  || isCifValid  -->\r\n    </div>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\n\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatProgressBar } from '@angular/material/progress-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { UrlService } from 'app/views/home/url.service';\r\nimport { pairwise } from 'rxjs/operators';\r\nimport { AccountService } from '../../account.service';\r\nimport { type } from 'os';\r\n\r\n@Component({\r\n  selector: 'app-loan-assessment-details',\r\n  templateUrl: './loan-assessment-details.component.html',\r\n  styleUrls: ['./loan-assessment-details.component.scss']\r\n})\r\nexport class LoanAssessmentDetailsComponent implements OnInit {\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  submitted = false;\r\n  loanAssessmentForm: FormGroup;\r\n  arraySystemRecommendation:any[]=['Approved','Rejected'];\r\n  arrayUserRecommendation:any[]=['Approved','Rejected'];\r\n  //arrayLoanAmountRecommendation:any[]=['Approved','Rejected'];\r\n   approvedLoanAmount: any;\r\n  loanaccountID: any;\r\n  showEditOption: boolean=false;\r\n  isAssessmentStageDone:any;\r\n  loanDetails: any;\r\n  requestedLoanAmount: any;\r\n  loanAmountRecommendation:any;\r\n  loanAccountId: any;\r\n  accountOwnershipForm:FormGroup;\r\n  applicantForms: FormGroup;\r\n  customerInfo: FormGroup;\r\n  customerInfo_array: FormArray;\r\n  accountOwnership:any;\r\n  arrayOwnership: string[];\r\n  arrrayResidence:any[]=[];\r\n  arrayCountry:any[]=[];\r\n  country:any;\r\n  arrayDocumentType:any[]=[];\r\n  doc:any;\r\n  arrayPrefix:any[]=[];\r\n  prefix:any;\r\n  arrayGender:any[]=[];\r\n  gender:any;\r\n  arrayResidence:any[]=[];\r\n  arrayCity:any[]=[];\r\n  city:any;\r\n  arrayAddressType:any[]=[];\r\n  addressType:any;\r\n  arrayState:any[]=[];\r\n  state:any;\r\n  entityName: string;\r\n  residence:any;\r\n  accountId: string;\r\n  customerInfoForm: FormGroup;\r\n  applicantDetails = [];\r\n  navSubscription: any;\r\n  isCifValid: boolean = false;\r\n  selectedApplicant: any = null;\r\n  listOfAccounts: any = [];\r\n  subscription: Subscription;\r\n  displayResponse: any;\r\n  cifNumberPrimary: any;\r\n  isAccountOpenScreen: boolean = false;\r\n  formData = {}\r\n  console = console;\r\n  data: any;\r\n // customerIdProofs: any = [];\r\n  applicantDetailsArray: any[] = [];\r\n  toggle: boolean = false;\r\n  customerDetails: any = {};\r\n  routeparams: any;\r\n  custInfo: string[];\r\n  tomorrow = new Date();\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  validDate= new Date();\r\n  showNewForm: boolean = true;\r\n  toggleClick: boolean = false;\r\n  existingCustomer: boolean;\r\n  productCustomerId: any;\r\n  previousUrl: string = '';\r\n  addFunc: boolean = true;\r\n  index: any;\r\n  removedButton: boolean = false;\r\n  cifNumber: any;\r\n  isAllSameDigitVal: boolean =false;\r\n  userAddress:any[];\r\n  address1:any;\r\n  address2:any;\r\n  zipCode: any;\r\n  accountDetails: any;\r\n  repaymentDetails: any;\r\n  loanTenure: any;\r\n  rate: any;\r\n  rateOfInterest:any;\r\n  estimatedCost:any;\r\n  flag: boolean;\r\n  approvedAmount: any;\r\n  loanInfo: any;\r\n  selectedDay: number = 1;\r\n // day: number;\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n // year: number;\r\n  years: any[] = [];\r\n \r\n \r\n\r\n  constructor( private formBuilder: FormBuilder,private route: ActivatedRoute, private router: Router, private ls:LocalStoreService,private dataService: DataService,\r\n    private loader: AppLoaderService,private accountService: AccountService,private confirmService: AppConfirmService,\r\n    private apiService:ApiService, private snack: MatSnackBar,private cdr: ChangeDetectorRef, \r\n    private appApiService: ApplicationEntryStageService,  private dialog: MatDialog, private elRef: ElementRef,private renderer: Renderer2,\r\n    private urlService: UrlService\r\n    ) {\r\n    this.loanAssessmentForm = this.formBuilder.group({\r\n      // loanAccountId:[''],\r\n      // loanAccountId:['61261',[Validators.required]],\r\n      rateOfInterest : [''],\r\n      requestedLoanAmount : [''],\r\n      loanTenure: [''],\r\n      approvedLoanAmount:['',[Validators.required]],\r\n      loanAmountRecommendation:['',[Validators.required]],\r\n      userRecommendation:[''],\r\n      systemRecommendation:[''],\r\n      day:['',[Validators.required]],\r\n      month:['',[Validators.required]],\r\n      year:['',[Validators.required]],\r\n      \r\n    })\r\n   }\r\n\r\n\r\n ngOnInit(): void {\r\n  this.selectedYear = new Date().getFullYear();\r\n  \r\n    for (let year = 0; year <= 50; year++) {\r\n      this.years.push(year+ \" year\");\r\n    }\r\n\r\n    for (let month = 0; month <= 11; month++) {\r\n      this.months.push(month+ \" month\");\r\n    }\r\n\r\n    for (let day = 0; day <= 30; day++) {\r\n      this.days.push(day+ \" day\");\r\n    }\r\n  this.accountId = this.ls.getItem('accountId');\r\n  let applicantId = this.route.snapshot.params['id'];\r\n\r\n  console.log(\"applicantId\", applicantId);\r\n  this.isAccountOpenScreen = JSON.parse(this.ls.getItem('ACC_OPEN_DONE'));\r\n  this.cifNumberPrimary =  this.ls.getItem(\"CIF_NUM_PRIMARY\");\r\n  console.log(\"check if\", this.accountId, this.isAccountOpenScreen);\r\n  this.loanaccountID = this.ls.getItem('loanAccountId');\r\n  this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n  console.log(this.loanInfo);\r\n  if(this.loanInfo){\r\n    this.loanAccountId = this.loanInfo.loanAccountId;\r\n  }\r\n  console.log(\"LOAN ACCOUNT ID:: \",this.loanaccountID);\r\n  let isAssessmentStageDone: boolean = JSON.parse(this.ls.getItem('LOAN_DETAIL_DONE'));\r\n  setTimeout(() => {\r\n    this.getListOfAccounts();\r\n    this.buildCustomerForm();\r\n    this.getAccountDetails();\r\n  }, 10);\r\n\r\n  //this.updateLoanAssessmentDetails();\r\n\r\n  if (this.accountId != null && this.isAssessmentStageDone) {\r\n   this.showEditOption = true;\r\n    this.approvedLoanAmount=this.accountDetails.approvedLoanAmount;\r\n  } else {\r\n    this.showEditOption = false;\r\n   \r\n    this.subscription = this.apiService.getaccParam.subscribe((data : any) => {\r\n      console.log(\"data::\",data);\r\n      sessionStorage.setItem('customerName', data.firstName + ' ' + data.lastName);\r\n      this.displayResponse = data;\r\n     \r\n      if (this.isObjectEmpty(this.displayResponse)){\r\n        if(this.listOfAccounts.length != 0){\r\n       //   this.fetchByCif(this.cifNumberPrimary,true);\r\n        }\r\n      }else{\r\n      //  this.populatePrimaryApplicant(data);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\nthis.urlService.previousUrl$\r\n  .subscribe((previousUrl: string) => {\r\n    this.previousUrl = previousUrl\r\n  });\r\n\r\nthis.accountService.refresh.subscribe((res: any) => {\r\n  this.isAccountOpenScreen = JSON.parse(this.ls.getItem('ACC_OPEN_DONE'));\r\n  this.cdr.markForCheck();\r\n});\r\nthis.cifNumber=this.ls.getItem('CIF_NUM_PRIMARY');\r\nthis.console.log(\"cifNumber=\",this.cifNumber);\r\n  setTimeout(() => {\r\n    if (this.loanaccountID != null && isAssessmentStageDone) {\r\n      this.showEditOption = true;\r\n   \r\n      // this.getAccountDetails();\r\n    } \r\n    else {\r\n      console.log(\"else\");\r\n      this.showEditOption = false;\r\n      this.buildformGroup();\r\n      }\r\n      this.getAccountDetails();\r\n  }, 10);\r\n    \r\n    \r\n  }\r\n\r\n\r\n  createCustomerInfoDetail(item): FormGroup {\r\n    return this.formBuilder.group({\r\n      cifNumber: item ? item.cifNumber : [''],\r\n      prefix: item ? item.prefix : [''],\r\n      firstName: item ? item.firstName : [''],\r\n      middleName: item ? item.middleName : [''],\r\n      lastName: item ? item.lastName : [''],\r\n      gender: item ? item.gender : [''],\r\n      addressType: item ? item.addressType : [''],\r\n      building: item ? item.building : [''],\r\n      street: item ? item.street : [''],\r\n      locality: item ? item.locality : [''],\r\n      city: item ? item.city : [''],\r\n      state: item ? item.state : [''],\r\n      country: item ? item.country : [''],\r\n      pinCode: item ? item.pinCode : [''],\r\n      phoneNumber: item ? item.phoneNumber : [''],\r\n      mobileNumber: item ? item.mobileNumber : [''],\r\n      email: item ? item.email : [''],\r\n    })\r\n  }\r\n  getCustomerInformationDetails() {\r\n    this.apiService.getCustomerInformationDetailsById(this.accountId)\r\n      .subscribe((resp: any) => {\r\n        console.log(\"All Customer Details\", resp);\r\n        this.buildCustomerForm(resp);\r\n      }, (err: any) => {\r\n      });\r\n  }\r\n\r\n  buildCustomerForm(data?) {\r\n    this.applicantForms = this.formBuilder.group({\r\n      productAccountId: data ? data.productAccountId : this.accountId,\r\n      ownership: data ? data.ownership : 'Self',\r\n      numOfApplicants: data ? data.numOfApplicants : 1,\r\n      applicantDetails: this.addCustFormGroup()\r\n    });\r\n  }\r\n  isObjectEmpty(value) {\r\n    return (\r\n      Object.prototype.toString.call(value) === '[object Object]' &&\r\n      JSON.stringify(value) === '{}'\r\n    );\r\n  }\r\n\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  populatePrimaryApplicant(data: any) {\r\n    // this.getStateName(data.country);\r\n    // this.getCityName(data.state);\r\n    let applicantData = {\r\n      cifNumber:this.cifNumberPrimary,\r\n      prefix: data.prefix,\r\n      existingCustomer:true,\r\n      primaryCustomer:true,\r\n      customerId: data.customerId,\r\n      firstName: data.firstName,\r\n      middleName: data.middleName,\r\n      lastName: data.lastName,\r\n      gender: data.gender,\r\n      dateOfBirth: this.convertDate(data.dateOfBirth),\r\n      addressType: data.addressType,\r\n      address1: data.address1,\r\n      address2: data.address2,\r\n      city: data.city,\r\n      country: data.country,\r\n      state: data.state,\r\n      zipCode: data.zipCode,\r\n      phoneNumber: data.phoneNumber,\r\n      landlineNumber: data.landlineNumber,\r\n      primaryEmailAdress: data.primaryEmailAdress\r\n      \r\n    }\r\n    \r\n    this.applicant.patchValue(applicantData);\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DD'); // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n  \r\n  \r\n  getAccountDetails(){\r\n  //  this.loader.open();\r\n    //  this.loader.close();\r\n    console.log(\"LoanAccountId:\",this.loanaccountID)\r\n    this.apiService.fetchLoanAssessment(this.loanaccountID).subscribe((accountDetails) => {\r\n    this.rateOfInterest=accountDetails.rateOfInterest;\r\n    this.loanTenure = accountDetails.loanTenure;     \r\n     var day = (this.loanTenure.split(\"-\")[2]);\r\n    console.log(day);    \r\n    var month = (this.loanTenure.split(\"-\")[1]);\r\n    console.log(month);\r\n    var year = (this.loanTenure.split(\"-\")[0]);\r\n    console.log(year);\r\n\r\n    // this.loanAmountRecommendation=accountDetails.loanAmountRecommendation;\r\n    console.log(\"LoanAccountId:\",accountDetails.loanAccountId)\r\n    console.log(\"rateofinterest:\",accountDetails.loanAmount)\r\n    console.log(\"loan tenure:\",accountDetails.loanTenure)\r\n      console.log(accountDetails);\r\n      this.buildformGroup(accountDetails);\r\n      if(this.approvedLoanAmount!=null)\r\n      {\r\n         this.updateLoanAssessmentDetails();\r\n      \r\n      }\r\n    }, (err: any) => {\r\n  //    this.loader.close();\r\n    });\r\n\r\n  }\r\n\r\n  \r\n  addCustomerFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      cifNumber: [''],\r\n      customerId: [''],\r\n      prefix: [''],\r\n      firstName: [''],\r\n      middleName: [''],\r\n      lastName: [''],\r\n      gender: [''],\r\n      dateOfBirth: [''],\r\n      addressType: [''],\r\n      address1: [''],\r\n      address2: [''],\r\n      city: [''],\r\n      state: [''],\r\n      country: [''],\r\n      zipCode: [''],\r\n      phoneNumber: [''],\r\n      landlineNumber: [''],\r\n      primaryEmailAdress: [''],\r\n      \r\n    })\r\n  }\r\n\r\n  buildformGroup(data?) {\r\n    console.log(data);\r\n    this.loanAssessmentForm = this.formBuilder.group({\r\n    // loanAccountId: this.loanaccountID,\r\n    // loanAccountId:[data ? data.loanAccountId:'999612'],\r\n    rateOfInterest:[data ? data.rateOfInterest:'',[Validators.required]],\r\n    loanTenure:[data ? data.loanTenure:''],\r\n    approvedLoanAmount:[data ? data.approvedLoanAmount:'',[Validators.required]],\r\n    // loanAmountRecommendation:[data ? '400000':'400000'],\r\n    loanAmountRecommendation:[data ? data.loanAmountRecommendation:'',[Validators.required]],\r\n    userRecommendation:[data ? data.userRecommendation:'',[Validators.required]],\r\n    systemRecommendation:[data ? data.systemRecommendation:'',[Validators.required]],\r\n    requestedLoanAmount:[data ? data.requestedLoanAmount:'',[Validators.required]],\r\n    year:[data ? data.loanTenure.split(\"-\")[0]:''],\r\n    month:[data ? data.loanTenure.split(\"-\")[1]:''],\r\n    day:[data ? data.loanTenure.split(\"-\")[2]:''],\r\n\r\n    })\r\n  }\r\n\r\n\r\n  // fetchByCif(cifNumber, isExistingCustomer) {\r\n  //   this.appApiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n  //     console.log(res);\r\n  //     if (!res) {\r\n  //       this.isCifValid = false;\r\n  //       this.snack.open('Invalid CIF Number', 'OK', {\r\n  //         duration: 4000,\r\n  //         verticalPosition: 'top',\r\n  //         horizontalPosition: 'right'\r\n  //       });\r\n  //       this.customerInfo.get('cifNumber').patchValue('');\r\n  //       return;\r\n  //     } else {\r\n  //       this.isCifValid = true;\r\n  //       this.ls.setItem(\"cId\", res.customerInfoList[0].customerId);\r\n  //       let address: any;\r\n  //       console.log(res.customerInfoList[0].userAddress.length);\r\n  //       if (res.customerInfoList[0].userAddress.length > 1) {\r\n  //         address = res.customerInfoList[0].userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n  //       } else {\r\n  //         address = res.customerInfoList[0].userAddress[0];\r\n  //       }\r\n  //       this.getStateName(address.country);\r\n  //       this.getCityName(address.state);\r\n  //       let applicantData = {\r\n  //         prefix: res.customerInfoList[0].prefix,\r\n  //         cifNumber: res.customerInfoList[0].cifNumber,\r\n  //         existingCustomer:isExistingCustomer,\r\n  //         customerId: res.customerInfoList[0].customerId,\r\n  //         firstName: res.customerInfoList[0].firstName,\r\n  //         middleName: res.customerInfoList[0].middleName,\r\n  //         lastName: res.customerInfoList[0].lastName,\r\n  //         gender: res.customerInfoList[0].gender,\r\n  //         dateOfBirth: this.convertDate(res.customerInfoList[0].dateOfBirth),\r\n  //         placeOfBirth: res.customerInfoList[0].placeOfBirth,\r\n  //         residenceStatus: res.customerInfoList[0].residenceStatus,\r\n  //         nationality: res.customerInfoList[0].nationality,\r\n  //         countryOfResidence: res.customerInfoList[0].countryOfResidence,\r\n  //         occupationType: res.customerInfoList[0].occupationType,\r\n  //         idType: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idType : '',\r\n  //         idNumber: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idNumber : '',\r\n  //         expiryDate: res.customerInfoList[0].custIdProofs.length > 0 ? this.convertDate(res.customerInfoList[0].custIdProofs[0].expiryDate) : '',\r\n  //         addressType: address.addressType,\r\n  //         address1: address.address1,\r\n  //         address2: address.address2,\r\n  //         city: address.city,\r\n  //         country: address.country,\r\n  //         state: address.state,\r\n  //         zipCode: address.zipCode,\r\n  //         phoneNumber: res.customerInfoList[0].phoneNumber,\r\n  //         landlineNumber: res.customerInfoList[0].landlineNumber,\r\n  //         primaryEmailAdress: res.customerInfoList[0].primaryEmailAdress\r\n  //       }\r\n  //       console.log(\"res.customerInfoList[0].firstName=\",res.customerInfoList[0].firstName);\r\n  //       this.applicant.patchValue(applicantData);\r\n  //       console.log(this.applicant);\r\n  //     }\r\n  //     this.cdr.markForCheck();\r\n  //   }, (err: any) => {\r\n  //     console.error(err);\r\n  //   })\r\n  // }\r\n\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.submitted = false;\r\n    this.applicantForms.reset({});\r\n  }\r\n\r\n  onClear() {\r\n    // clear errors and reset ticket fields\r\n    this.submitted = false;\r\n  }\r\n  resetAndClose(){\r\n    this.closeDetails();\r\n  }\r\n\r\n  closeDetails(): void {\r\n    this.selectedApplicant = null;\r\n    this.applicant.reset();\r\n    this.applicantForms.get('numOfApplicants').enable({onlySelf:true});\r\n    \r\n  }\r\n\r\n  toggleDetails(account) {\r\n    console.log(\"customerId incomming\", account);\r\n    this.applicantForms.get('numOfApplicants').disable({onlySelf:true, emitEvent:false});\r\n    let address: any;\r\n    console.log(account.userAddress.length);\r\n    if (account.userAddress.length > 1) {\r\n      address = account.userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n    } else {\r\n      address = account.userAddress[0];\r\n    }\r\n    // this.getStateName(address.country);\r\n    // this.getCityName(address.state);\r\n\r\n    let payLoadModel = {\r\n      existingCustomer: account.existingCustomer,\r\n      dependentId: account.dependentId,\r\n      primaryCustomer: account.primaryCustomer,\r\n      cifNumber: account.cifNumber,\r\n      prefix: account.prefix,\r\n      firstName: account.firstName,\r\n      middleName: account.middleName,\r\n      lastName: account.lastName,\r\n      gender: account.gender,\r\n      dateOfBirth: account.dateOfBirth,\r\n      addressType: address.addressType,\r\n      address1: address.address1,\r\n      address2: address.address2,\r\n      city: address.city,\r\n      state: address.state,\r\n      country: address.country,\r\n      zipCode: address.zipCode,\r\n      phoneNumber: account.phoneNumber,\r\n      landlineNumber: account.landlineNumber,\r\n      primaryEmailAdress: account.primaryEmailAdress\r\n    };\r\n    console.log(\"account.firstName=\",account.firstName);\r\n    this.selectedApplicant = account;\r\n    this.applicant.patchValue(payLoadModel, {onlySelf:false, emitEvent:false});\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  getListOfAccounts() {\r\n   // this.loader.open();\r\n    this.appApiService.fetchCustomersByLoanAccId(this.loanaccountID,'loan')\r\n      .subscribe((resp: any) => {\r\n        this.console.log(\"resp:\",resp)\r\n        this.console.log(\"address1:\",resp.data[0].userAddress[0].address1)\r\n        this.address1=resp.data[0].userAddress[0].address1;\r\n        this.address2=resp.data[0].userAddress[0].address2;\r\n        this.city=resp.data[0].userAddress[0].city;\r\n        this.state=resp.data[0].userAddress[0].state;\r\n        this.country=resp.data[0].userAddress[0].country;\r\n        this.zipCode=resp.data[0].userAddress[0].zipCode;\r\n        this.listOfAccounts = resp.status == 200 ? resp.data.map(value => ({ ...value, _id: Math.round(Math.random() * 10000000000) })) : [];\r\n        this.loader.close();\r\n        console.log(\"All Customer Details\", this.listOfAccounts.length);\r\n        resp.status == 200 ? this.ls.setItem(\"cId\", resp.data[0].customerId) : null;\r\n        console.log(\"Length check??\",this.listOfAccounts.length);\r\n\r\n        if(this.listOfAccounts.length == 0){\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(true);\r\n        }else if(this.listOfAccounts.length == 1){\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(false);\r\n        }else if(this.listOfAccounts.length >= 2){\r\n          this.applicantForms.get('ownership').patchValue('Join');\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            const element = resp.data[index];\r\n            this.applicantForms.get('numOfApplicants').patchValue(resp.data[index].numOfApplicants);\r\n          }\r\n        }\r\n\r\n        this.cdr.markForCheck();\r\n\r\n        this.toggleChanges();\r\n      }, (err: any) => {\r\n        this.loader.close();\r\n      });\r\n  }\r\n\r\n  toggleChanges() {\r\n    if (this.applicant.get('existingCustomer').value == true) {\r\n      this.applicant.get('cifNumber').enable();\r\n      this.applicant.get('cifNumber').setValidators([Validators.required]);\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n    }\r\n    else {\r\n      this.applicant.get('cifNumber').disable();\r\n      this.applicant.get('cifNumber').clearValidators();\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  toggleAddForm() {\r\n    this.showNewForm = !this.showNewForm;\r\n  }\r\n\r\n  addCustFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      existingCustomer: [null, []],\r\n      primaryCustomer: [null, []],\r\n      cifNumber: [''],\r\n      customerId: [''],\r\n      dependentId: [null],\r\n      prefix: [''],\r\n      firstName: [''],\r\n      middleName: [''],\r\n      lastName: [''],\r\n      gender: [''],\r\n      dateOfBirth: [''],\r\n      // placeOfBirth: [''],\r\n      // residenceStatus: [''],\r\n      // nationality: [''],\r\n      // countryOfResidence: [''],\r\n      // occupationType: [''],\r\n      // idType: [''],\r\n      // idNumber: [''],\r\n      // expiryDate: [''],\r\n      addressType: [''],\r\n      address1: [''],\r\n      address2: [''],\r\n      city: [''],\r\n      state: [''],\r\n      country: [''],\r\n      zipCode: [''],\r\n      phoneNumber: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10), Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      landlineNumber: ['', [Validators.required, Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      primaryEmailAdress: ['', [Validators.required,\r\n      Validators.email]],\r\n    })\r\n  }\r\n\r\n\r\n  get f() { return this.applicantForms.controls; }\r\n  get applicantCount() { return this.f.numOfApplicants; }\r\n  get applicant() { return this.f.applicantDetails; }\r\n\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log('saveapplicant')\r\n    this.isCifValid= false;\r\n    if (this.applicantForms.invalid) {\r\n      console.log(\"test\");\r\n\r\n      return;\r\n    }\r\n    this.loader.open();\r\n\r\n    let payloadObj: any = {};\r\n    const control = this.applicantForms.controls['applicantDetails'].value;\r\n    let addressObj: any = {};\r\n    // let custIdProofs: any = {};\r\n    // let custIdProofsArray: any[] = [];\r\n    let addressObjArray: any[] = [];\r\n\r\n    payloadObj.customerId = this.ls.getItem(\"cId\");\r\n    payloadObj.cifNumber = control.cifNumber;\r\n    payloadObj.dependentId = control.dependentId;\r\n    payloadObj.existingCustomer = control.existingCustomer;\r\n    payloadObj.primaryCustomer = control.primaryCustomer;\r\n    payloadObj.phoneNumber = control.phoneNumber;\r\n    payloadObj.primaryEmailAdress = control.primaryEmailAdress;\r\n    payloadObj.prefix = control.prefix;\r\n    payloadObj.firstName = control.firstName;\r\n    payloadObj.middleName = control.middleName;\r\n    payloadObj.lastName = control.lastName;\r\n    payloadObj.cifNumber = control.cifNumber;\r\n    payloadObj.gender = control.gender;\r\n    payloadObj.dateOfBirth = this.convertDate(control.dateOfBirth);\r\n    payloadObj.accountId = this.accountId;\r\n    payloadObj.landlineNumber = control.landlineNumber;\r\n    payloadObj.ownership = this.applicantForms.get('ownership').value;\r\n    payloadObj.numOfApplicants = this.applicantForms.get('numOfApplicants').value;\r\n    addressObj.address1 = control.address1;\r\n    addressObj.address2 = control.address2;\r\n    addressObj.country = control.country;\r\n    addressObj.state = control.state;\r\n    addressObj.city = control.city;\r\n    addressObj.zipCode = control.zipCode;\r\n    addressObj.addressType = control.addressType;\r\n    addressObjArray.push(addressObj);\r\n\r\n    // custIdProofs.expiryDate = this.convertDate(control.expiryDate);\r\n    // custIdProofs.idType = control.idType;\r\n    // custIdProofs.idNumber = control.idNumber;\r\n    // custIdProofsArray.push(custIdProofs);\r\n    // payloadObj.custIdProofs = custIdProofsArray;\r\n    payloadObj.userAddress = addressObjArray;\r\n  \r\n\r\n    console.log(\"payloadObj\",payloadObj);\r\n\r\n    // this.appApiService.createAndUpdateAccountants(payloadObj)\r\n    //   .subscribe((data: any) => {\r\n    //     console.log(\"data::\",data)\r\n    //     this.closeDetails();\r\n    //     this.loader.close();\r\n    //     console.log(\"Response of service 2 ---> \", data)\r\n    //     if (data.status === 200) {\r\n    //       this.getListOfAccounts();\r\n    //       this.snack.open('Customer Information Details Saved!', 'OK', {\r\n    //         duration: 4000,\r\n    //         verticalPosition: 'top',\r\n    //         horizontalPosition: 'right'\r\n    //       });\r\n\r\n    //     this.applicantForms.get('ownership').patchValue(data.custDependentModel.ownership);\r\n    //     this.applicantForms.get('numOfApplicants').patchValue(data.custDependentModel.numOfApplicants);\r\n\r\n    //       if(this.applicantForms.get('ownership').value == 'Self'){\r\n    //      //  this.goToNext();\r\n    //       }\r\n    //     }\r\n    //   }, (err: any) => {\r\n    //     console.log(err);\r\n    //     this.loader.close();\r\n    //     this.snack.open('Error', 'INTERNAL SERVER ERROR', {\r\n    //       duration: 4000,\r\n    //       verticalPosition: 'top',\r\n    //       horizontalPosition: 'right'\r\n    //     });\r\n    //   })\r\n  }\r\n  \r\n\r\n  \r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.dataService.sendNavParam({});\r\n  }\r\n\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count , number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    }else{\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n  \r\n  goBack(){\r\n    this.router.navigate([\"/loan/account/assessment/qualitative\"]);\r\n  }\r\n\r\n  goToNext() {\r\n    this.ls.setItem('ACC_OPEN_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.ls.setItem('NO_OF_APPLICANTS', this.applicantForms.get('numOfApplicants').value);\r\n   // this.router.navigate([`/home/application/mandate/${this.accountId}`]);\r\n    this.router.navigate([\"/loan/account/list\"]);\r\n  }\r\n  goNext(){\r\n    var aprloan=this.loanAssessmentForm.value.approvedLoanAmount;\r\n    aprloan= parseInt(aprloan);\r\n    var rate=this.loanAssessmentForm.value.rateOfInterest;\r\n    rate= parseInt(rate);\r\n    var loanTenureData = this.loanAssessmentForm.value.loanTenure;   \r\n    var requestLoan=this.loanAssessmentForm.value.requestedLoanAmount;\r\n    requestLoan=parseInt(requestLoan)\r\n    let payload = {\r\n      // \"loanAccountId\": this.showEditOption ? this.loanaccountID : null,\r\n      loanAccountId: this.loanaccountID,\r\n      approvedLoanAmount:aprloan,\r\n      requestedLoanAmount:requestLoan,\r\n      rateOfInterest:rate,\r\n      loanTenure:loanTenureData,\r\n     // loanTenure:this.loanAssessmentForm.value.loanTenure,\r\n     // loanAmountRecommendation:this.loanAssessmentForm.value.loanAmountRecommendation,\r\n      loanAmountRecommendation:this.loanAssessmentForm.value.loanAmountRecommendation,\r\n      userRecommendation:this.loanAssessmentForm.value.userRecommendation,\r\n      systemRecommendation:this.loanAssessmentForm.value.systemRecommendation,\r\n    }\r\n    console.log(\"payload\",payload)\r\n    \r\n      this.updateLoanAssessmentDetails();\r\n  }\r\n   \r\n  updateLoanAssessmentDetails(){\r\n    var aprloan=this.loanAssessmentForm.value.approvedLoanAmount;\r\n    aprloan= parseInt(aprloan);\r\n    var loanRecommendation = this.loanAssessmentForm.value.loanAmountRecommendation;\r\n    loanRecommendation = parseInt(loanRecommendation);\r\n    let payload = {\r\n      loanAccountId:this.loanaccountID,\r\n      approvedLoanAmount:aprloan,\r\n      requestedLoanAmount:this.loanAssessmentForm.value.requestedLoanAmount,\r\n      rateOfInterest:this.loanAssessmentForm.value.rateOfInterest,\r\n      loanTenure:this.loanAssessmentForm.value.loanTenure,\r\n     loanAmountRecommendation:this.loanAssessmentForm.value.loanAmountRecommendation,\r\n      userRecommendation:this.loanAssessmentForm.value.userRecommendation,\r\n      systemRecommendation:this.loanAssessmentForm.value.systemRecommendation,\r\n    }\r\n    console.log(\"payload\",payload);\r\n\r\n    this.apiService.updateAssessmentDetails(payload).subscribe((data) => {\r\n      console.log(\"approvedLoanAmount:\",data.approvedLoanAmount)\r\n        this.snack.open('Loan Assessment Details Updated!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n\r\n         console.log(data);\r\n        this.ls.setItem('LOAN_ASSESSMENT_DETAILS_DONE', true);  \r\n        this.ls.setItem('LOAN_ASSESSMENT_STAGE_DONE', true); \r\n        this.accountService.refresh.next(); \r\n        this.router.navigate([\"/loan/account/supervisor-summary/\"]);\r\n  \r\n      }, err => {\r\n        this.snack.open('Server Error!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      })\r\n\r\n  }\r\n\r\n  onInput(event: any, flag) {\r\n    if (flag) {\r\n      this.approvedLoanAmount = event.target.value;\r\n    } else {\r\n      this.approvedLoanAmount= event;\r\n    }\r\n  \r\n    console.log(\"this.salary)::\", this.approvedLoanAmount);\r\n    let sal = this.approvedLoanAmount.toString().replace(/,/g, '').split(\".\");\r\n    sal[0] = sal[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    let final = sal.join(\".\");\r\n    console.log(\"final\", final);\r\n    this.loanAssessmentForm.controls.approvedLoanAmount.setValue(final);\r\n  }\r\n  \r\n  keyPress1(event: any) {\r\n    const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    const input = event.target.value;\r\n    if (input.length === 0 && event.which === 48) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  \r\n  _keyPress1(event: any) {\r\n    const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    const input = event.target.value;\r\n    if (input.length === 0 && event.which === 48) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  OnInput(event: any, loanAmountRecommendation:any, requestedLoanAmount : any) {\r\n    this.approvedLoanAmount = event.target.value;\r\n    // var approvedAmount=this.removeComma(this.approvedLoanAmount);\r\n    console.log(Number(this.approvedLoanAmount),Number(loanAmountRecommendation),Number(requestedLoanAmount));\r\n    \r\n  if((Number(this.approvedLoanAmount) > Number(loanAmountRecommendation)) || (Number(this.approvedLoanAmount) > Number(requestedLoanAmount))){\r\n    this.flag=true;\r\n  }\r\n  // else if( Number(approvedAmount) < Number(loanAmountRecommendation)){\r\n  //   this.flag=false;\r\n  // }\r\n  else{\r\n    this.flag=false;\r\n  }\r\n\r\n  const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n}\r\n\r\n  removeComma(num:any){\r\n    var numb =num.replace(/,/g, \"\");\r\n    console.log(\"numb\",numb)\r\n    return numb;\r\n\r\n  }\r\n \r\n\r\n  \r\n}\r\n\r\n\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img\r\n        src=\"assets/images/svg/MaskGroup_13.svg\"\r\n        alt=\"\"\r\n        class=\"w-90\"\r\n      />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Assessment Details</b></div>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"full-width\"> \r\n    <div fxFlex=\"100\">\r\n      <!-- <mat-progress-bar [mode]=\"determinate\" class=\"session-progress\"></mat-progress-bar> -->\r\n      <mat-card class=\"p-0\">        \r\n        <mat-card-title class=\"alignChange\">\r\n          <fieldset>\r\n          <legend visible=\"true\">Customer Information</legend>\r\n          </fieldset>\r\n        </mat-card-title>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n          <div fxFlex=\"100%\">\r\n              <div class=\"full-width\">\r\n                  <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                      \r\n                      <div *ngFor=\"let account of listOfAccounts; let i=index\" >\r\n                   \r\n                          <div class=\"full-width\">\r\n                              <mat-card>\r\n                                  <div fxLayout=\"row wrap\" class=\"full-width\" >\r\n                                      <!-- <div  class=\"pt-16\" class=\"pb-16\" fxFlex=\"7%\" fxFlex.xs=\"50%\" fxFlex.md=\"10%\" fxFlex.sm=\"15%\">\r\n                                          <img height=\"50px\" width=\"50px\"\r\n                                              src=\"assets/images/backgrounds/defaultProfileBackground.png\"\r\n                                              class=\"rounded-circle\" />\r\n                                      </div> -->\r\n                                      <div class=\"bg-light p-8\" fxFlex=\"93%\" fxFlex.xs=\"100%\" fxFlex.md=\"90%\"\r\n                                          fxFlex.sm=\"85%\">\r\n                                          <div>\r\n                                              <div>\r\n                                                  <div class=\"full-width\">\r\n                                                      <div class=\"pl-16\">\r\n                                                          <small class=\"valueText\"><span>Customer Name:  {{account?.prefix}}</span>&nbsp;\r\n                                                              <span>{{account?.firstName}}</span>&nbsp;\r\n                                                              <span>{{account?.middleName}}</span>&nbsp;\r\n                                                              <span>{{account?.lastName}}</span></small>\r\n                                                      </div>\r\n                                                  </div>\r\n                                              </div>\r\n                                          </div>\r\n                                        \r\n                                          <div class=\"full-width\">\r\n                                              <div class=\"pl-16 pr-16\" >\r\n                                                  <small class=\"valueTextName\">CIF Number: \r\n                                                      #{{account?.cifNumber}}</small>\r\n                                              </div>\r\n                                          </div>\r\n\r\n                                          <div>\r\n                                             <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                              <small class=\"valueTextName\">Address: <span>{{account?.userAddress[0].address1}}</span>&nbsp; <span>{{account?.userAddress[0].address2}}</span>&nbsp; <span>{{account?.userAddress[0].city}}</span>&nbsp; <span>{{account?.userAddress[0].state}}</span>&nbsp; <span>{{account?.userAddress[0].country}}</span>&nbsp; <span>{{account?.userAddress[0].zipCode}}</span>&nbsp;</small>                                              \r\n                                             </div>\r\n                                              <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                                  <small class=\"valueTextName\">Email ID: <span>{{account?.primaryEmailAdress}}</span></small>     \r\n                                              </div>\r\n                                            \r\n                                              <div class=\"pl-16 pr-16\" fxFlex.xs=\"100%\">\r\n                                                  <small class=\"valueTextName\">Phone Number: <span>{{account?.phoneNumber}}</span></small>                                              \r\n                                              </div>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                              </mat-card>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <br>\r\n            \r\n          </div>\r\n      </div>\r\n    \r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!--Assessment Details starts here-->\r\n  <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0\">       \r\n       <mat-card-title class=\"alignChange\">\r\n        <fieldset>\r\n        <legend visible=\"true\">Assessment Details</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <div>\r\n    <form [formGroup]=\"loanAssessmentForm\">\r\n    <div fxLayout=\"column\" fxLayoutGap=\"25px\">\r\n      <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">       \r\n        <div class=\"flex-grow-1 marginnpadding\" fxFlex=\"49%\" >\r\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n            <mat-label class=\"hint\">Request Loan Amount*</mat-label>\r\n            <!-- <mat-card class=\"inputMatName\"> -->\r\n              <input matInput formControlName=\"requestedLoanAmount\" (keypress)=\"_keyPress1($event)\"\r\n               class=\"alignment\" type=\"text\" readonly />{{accountDetails?.loanAmount}}\r\n            <!-- </mat-card> -->\r\n            <mat-error *ngIf=\"!loanAssessmentForm.get('requestedLoanAmount').valid && loanAssessmentForm.get('requestedLoanAmount').touched\" >\r\n              &nbsp;&nbsp; Please enter the Request Loan Amount\r\n          </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        \r\n          <div class=\"flex-grow-1 loanCard marginnpadding\" fxFlex=\"49%\">      \r\n              \r\n                <div fxLayout=\"row wrap\">\r\n                  <label class=\"size\">Loan Tenure*</label>                  \r\n                      <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"22.5\">\r\n                        <mat-label>Year*</mat-label>\r\n                      <mat-select name=\"year\" placeholder=\"Year\" formControlName=\"year\" disableOptionCentering >\r\n                      <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                      </mat-select>\r\n                      </mat-form-field>                  \r\n                    <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"22.5\">\r\n                      <mat-label>Month*</mat-label>\r\n                    <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" disableOptionCentering>\r\n                    <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                     </mat-select>\r\n                    </mat-form-field>                 \r\n                      <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"22\">\r\n                        <mat-label>Day*</mat-label>\r\n                      <mat-select name=\"day\"   formControlName=\"day\" disableOptionCentering >\r\n                      <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                    </mat-select>\r\n                    </mat-form-field>                    \r\n                    <mat-error *ngIf=\"!loanAssessmentForm.get('year').valid && loanAssessmentForm.get('year').touched \">\r\n                                       Loan Tenure is Required!</mat-error>\r\n                                       <mat-error *ngIf=\"!loanAssessmentForm.get('month').valid && loanAssessmentForm.get('month').touched \">\r\n                                       Loan Tenure is Required!</mat-error>\r\n                                       <mat-error *ngIf=\"!loanAssessmentForm.get('day').valid && loanAssessmentForm.get('day').touched \">\r\n                                       Loan Tenure is Required!</mat-error>\r\n                                        <mat-error *ngIf=\"(loanAssessmentForm.get('year').value == '0 year') && (loanAssessmentForm.get('month').value == '0 month') && (loanAssessmentForm.get('day').value == '0 day')  \">\r\n                                       Please Input Valid Loan Tenure!</mat-error>                  \r\n                </div>\r\n          </div>\r\n      </div>\r\n      <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n      <div class=\"flex-grow-1 marginnpadding\" fxFlex=\"49%\" >\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label class=\"hint\">Rate Of Interest*</mat-label>\r\n          <!-- <mat-card class=\"inputMatName\"> -->\r\n            <input matInput formControlName=\"rateOfInterest\" (keypress)=\"_keyPress1($event)\"\r\n             class=\"alignment\" type=\"text\" placeholder=\"Rate Of Interest\" readonly/>{{accountDetails?.rateOfInterest}}\r\n          <!-- </mat-card> -->\r\n          <mat-error *ngIf=\"!loanAssessmentForm.get('rateOfInterest').valid && loanAssessmentForm.get('rateOfInterest').touched\" >\r\n            &nbsp;&nbsp; Please enter the Rate Of Interest\r\n        </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"flex-grow-1 loanCard marginpadding\" fxFlex=\"49%\" >\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label class=\"hint\">System Recommendation*</mat-label>\r\n          <!-- <mat-card class=\"inputMatName\"> -->\r\n            <mat-select formControlName=\"systemRecommendation\" placeholder=\"Select\" disableOptionCentering>\r\n              <mat-option *ngFor=\"let systemRecommendation of arraySystemRecommendation\" [value]=\"systemRecommendation\"> \r\n                {{systemRecommendation}} \r\n              </mat-option> \r\n            </mat-select>\r\n          <!-- </mat-card> -->\r\n          <mat-error *ngIf=\"!loanAssessmentForm.get('systemRecommendation').valid && loanAssessmentForm.get('systemRecommendation').touched\" >\r\n            &nbsp;&nbsp; Please enter the System Recommendation\r\n        </mat-error>\r\n        </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n       <div class=\"flex-grow-1 marginnpadding\" fxFlex=\"49%\" >\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n        <mat-label class=\"hint\">User Recommendation*</mat-label>\r\n        <!-- <mat-card class=\"inputMatName\"> -->\r\n          <mat-select formControlName=\"userRecommendation\" placeholder=\"Select\" disableOptionCentering>\r\n            <mat-option *ngFor=\"let userRecommendation of arrayUserRecommendation\" [value]=\"userRecommendation\"> \r\n              {{userRecommendation}} \r\n            </mat-option> \r\n          </mat-select>\r\n        <!-- </mat-card> -->\r\n        <mat-error *ngIf=\"!loanAssessmentForm.get('userRecommendation').valid && loanAssessmentForm.get('userRecommendation').touched\" >\r\n          &nbsp;&nbsp; Please enter the User Recommendation\r\n      </mat-error>\r\n        </mat-form-field>\r\n       </div>\r\n      <div class=\"flex-grow-1 marginpadding\" fxFlex=\"49%\" >\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n        <mat-label class=\"hint\">Loan Amount Recommendation*</mat-label>\r\n        <!-- <mat-card class=\"inputMatName\"> -->\r\n          <input type=\"text\" matInput name=\"loanAmountRecommendation\" autocomplete=\"off\" (keypress)=\"_keyPress1($event)\" formControlName=\"loanAmountRecommendation\" placeholder=\"Loan amount Recommendation\"\r\n           class=\"alignment\" >\r\n        <!-- </mat-card> -->\r\n        <mat-error *ngIf=\"!loanAssessmentForm.get('loanAmountRecommendation').valid && loanAssessmentForm.get('loanAmountRecommendation').touched\" >\r\n          &nbsp;&nbsp; Please enter the Loan Amount Recommendation\r\n      </mat-error>\r\n        </mat-form-field>\r\n    </div>\r\n      </div> \r\n      <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n       <div class=\"flex-grow-1 marginnpadding\" fxFlex=\"49%\" >\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n      <mat-label  class=\"hint\">Approved Loan Amount*</mat-label>\r\n      <!-- <mat-card class=\"inputMatName\"> -->\r\n        <input matInput formControlName=\"approvedLoanAmount\" pattern=\"^[1-9][0-9]*$\" autocomplete=\"off\"\r\n        (input)=\"OnInput($event,loanAmountRecommendation,loanAssessmentForm.get('requestedLoanAmount').value)\"\r\n        class=\"alignment\" type=\"text\" placeholder=\"Approved Loan Amount\"/>\r\n      <!-- </mat-card> -->\r\n\r\n      <mat-error *ngIf=\"!loanAssessmentForm.get('approvedLoanAmount').valid && loanAssessmentForm.get('approvedLoanAmount').touched\" >\r\n          &nbsp;&nbsp; Please enter the Approved Loan Amount\r\n      </mat-error>\r\n        </mat-form-field>\r\n      <div>\r\n        <small style=\"color:red;\" *ngIf='flag'>\r\n        Approved Loan Amount should not be greater than the Loan Amount Requested.\r\n        </small>\r\n      </div>\r\n       \r\n              \r\n      </div>\r\n      </div>\r\n    </div>   \r\n         </form>\r\n    </div>\r\n      </mat-card>\r\n      <div\r\n              fxLayout=\"row\"\r\n              fxLayoutAlign=\"space-between center\"\r\n              fxLayoutGap=\"16px\"\r\n              class=\"mt-32\"\r\n            >\r\n              <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n                Back\r\n              </button>\r\n              <button\r\n                mat-raised-button class=\"Nextbtn\"\r\n                color=\"primary\"  [disabled]=\"!loanAssessmentForm.valid || flag\" (click)=\"goNext()\"             >\r\n                Next\r\n              </button>\r\n            </div>\r\n    </div>\r\n</div>\r\n\r\n \r\n \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-post-offer-amendment-summary',\r\n  templateUrl: './post-offer-amendment-summary.component.html',\r\n  styleUrls: ['./post-offer-amendment-summary.component.scss']\r\n})\r\nexport class PostOfferAmendmentSummaryComponent implements OnInit {\r\n  offerDetails: any;\r\n  loanAccountId: any;\r\n  loanInfo: any;\r\n\r\n  constructor(public dialogRef: MatDialogRef<PostOfferAmendmentSummaryComponent>,private apiService: ApiService,\r\n    private dataService:DataService, private ls: LocalStoreService,private router: Router,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    console.log(this.loanAccountId);\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanAccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    setTimeout(() => {\r\n      this.fetchPostOfferAmendmentDetails();\r\n    }, 10);\r\n   \r\n  }\r\n\r\n  fetchPostOfferAmendmentDetails() {\r\n    this.apiService.getOfferAmendmentDetails( this.loanAccountId )\r\n      .subscribe((data : any)=> {\r\n        console.log(data);\r\n        this.offerDetails = data;\r\n        console.log(\"details\",this.offerDetails);\r\n      })\r\n  }\r\n\r\nedit(){\r\n  this.dataService.sendNavParam(this.offerDetails);\r\n  this.dialogRef.close();\r\n  this.router.navigate(['loan/account/post-offer-amendment']);\r\n  \r\n}\r\nclose(){\r\n  this.dialogRef.close();\r\n  this.router.navigate([`/loan/account/post-offer-amend-stage/list`]);\r\n}\r\n}\r\n","<div class=\"full-width\">\r\n    <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon class=\"backIcon\" (click)=\"close()\">close</mat-icon>\r\n    </div>\r\n    <div fxLayout=\"row\">\r\n        <h4 class=\"paraFont\">Post Offer Amendment Summary</h4>\r\n    </div>\r\n\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n                <div class=\"full-width\">\r\n                    <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                            <ng-container>\r\n                                <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                    <mat-card class=\"inputCard\">\r\n                                        <div fxLayout=\"row wrap\">\r\n\r\n                                            <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                <ng-container>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Applicant Name</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.applicantName}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                        <mat-hint class=\"headingText\">Offer Issue Date</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.offerIssueDate}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Offer Exipiry Date</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.offerExpiryDate}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Offer Amend Date</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.offerAmendDate}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Approved Loan Amount</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.approvedLoanAmount}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Loan Amount Recommended</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.loanAmmountRecommended}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.loanTenure}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Installment Type</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.installmentType}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Rate Of Interest(%)</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.rateOfInterest}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Margin(%))</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.margin}}</mat-hint>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                        <mat-hint class=\"headingText\">Effective Rate(%)</mat-hint>\r\n                                                        <br>\r\n                                                        <mat-hint class=\"valueText\">{{offerDetails?.effectiveRate}}</mat-hint>\r\n                                                    </div>\r\n                                                    \r\n                                                </ng-container>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </mat-card>\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p class=\"editButton\" (click)=\"edit()\">Edit</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, Validators, FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatExpansionPanel } from '@angular/material/expansion';\r\nimport { MatProgressBar } from '@angular/material/progress-bar';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { UrlService } from 'app/views/home/url.service';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\nimport { pairwise } from 'rxjs/operators';\r\nimport { AccountService } from '../../account.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-information',\r\n  templateUrl: './customer-information.component.html',\r\n  styleUrls: ['./customer-information.component.scss']\r\n})\r\nexport class CustomerInformationComponent implements OnInit {\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n\r\n  cifNumberForm = new FormControl();\r\n  timer: any;\r\n  listOfCustByCif: any = [];\r\n\r\n  submitted = false;\r\n  formData = {}\r\n  console = console;\r\n  customerInfoForm: FormGroup;\r\n  accountId: string;\r\n  data: any;\r\n  customerIdProofs: any = [];\r\n\r\n  arrayPrefix: any[] = [];\r\n  arrayGender: any[] = [];\r\n  arrayCountry: any[] = [];\r\n  arrayState: any[] = [];\r\n  arrayCity: any[] = [];\r\n  arrayResidence: any[] = [];\r\n  arrayDocumentType: any[] = [];\r\n  arrayAddressType: any[] = [];\r\n  applicantDetailsArray: any[] = [];\r\n  toggle: boolean = false;\r\n  maritalStatusList: string[];\r\n  // customerDetails: IcustProductCustomerInfo = new IcustProductCustomerInfo();\r\n  customerDetails: any = {};\r\n  applicantDetails = [];\r\n  navSubscription: any;\r\n  routeparams: any;\r\n  showEditOption: boolean = false;\r\n  custInfo: string[];\r\n  tomorrow = new Date();\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  validDate= new Date();\r\n  showNewForm: boolean = true;\r\n  isCifValid: boolean = false;\r\n  toggleClick: boolean = false;\r\n  existingCustomer: boolean;\r\n  productCustomerId: any;\r\n  isAccountOpenScreen: boolean = false;\r\n  previousUrl: string = '';\r\n  addFunc: boolean = true;\r\n  index: any;\r\n  entityName: string;\r\n  removedButton: boolean = false;\r\n  selectedApplicant: any = null;\r\n  cifNumberPrimary: any;\r\n  listOfAccounts: any = [];\r\n  subscription: Subscription;\r\n  dispResponse: any;\r\n  arrayOwnership: string[];\r\n  cifNumber: any;\r\n  isAllSameDigitVal: boolean =false;\r\n  loanaccountID: any;\r\n  noOfapplicants: any;\r\n  ownershipStatus: any;\r\n  isChecked : boolean;\r\n  disabled : boolean;\r\n  disabledToggle: boolean;\r\n  @Input() i: any;\r\n  customerName: string;\r\n  loanInfo: any;\r\n  isDuplicateCIF: boolean;\r\n  disableSaveBtn: boolean;\r\n  productName: any;\r\n  birthCountryImage: string;\r\n  citizenshipImage: string;\r\n  countryResidenceImage: string;\r\n  isBirthCountry: boolean = false;\r\n  \r\n\r\n  constructor(private router: Router, private dialog: MatDialog, private route: ActivatedRoute, private accountService: AccountService, private elRef: ElementRef, private api: ApiService,\r\n    private renderer: Renderer2, private ls: LocalStoreService, private apiService: ApiService, private formBuilder: FormBuilder, private confirmService: AppConfirmService, private cdr: ChangeDetectorRef, private appApiService: ApplicationEntryStageService,\r\n    private snack: MatSnackBar,private dialogService: DialogService, private dataService: DataService, private urlService: UrlService, private loader: AppLoaderService) {\r\n    this.tomorrow.setDate(this.tomorrow.getDate()),\r\n    this.validDate.setDate(this.validDate.getDate());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.console.log(this.i);\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.accountId = this.ls.getItem('accountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    this.productName = this.ls.getItem('productName');\r\n    this.isDuplicateCIF = false;\r\n    this.disableSaveBtn = false;\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    let applicantId = this.route.snapshot.params['id'];\r\n    console.log(\"applicantId\", applicantId);\r\n    this.isAccountOpenScreen = JSON.parse(this.ls.getItem('CUSTOMERINFO_DETAIL_DONE'));\r\n    this.cifNumberPrimary =  this.ls.getItem(\"CIF_NUM_PRIMARY\");\r\n    console.log(\"check if\", this.loanaccountID, this.isAccountOpenScreen);\r\n    this.buildCustomerForm();\r\n    this.getListOfAccounts();\r\n    this.getOwnershipValue(\"ownership\");\r\n    this.getPrefixValue(\"prefix\");\r\n    this.getGenderValue(\"gender\");\r\n    this.getResidenceDetails(\"residence\");\r\n    this.getCountryName(\"country\");\r\n    this.getAdressType(\"address_type\");\r\n    // this.getStateName(\"state\");\r\n    // this.getCityName(\"city\");\r\n\r\n    this.getDocumentType(\"document_type\");\r\n    this.getMaritalStatus(\"maritial_Status\");\r\n    // this.onFocusOutEvent('783',0);\r\n    this.isChecked=true;\r\n    this.disabled=true;\r\n    this.disabledToggle=true;\r\nsetTimeout(() => {\r\n  if (this.loanaccountID != null && this.isAccountOpenScreen) {\r\n    this.showEditOption = true;\r\n    this.getCustomerInformationDetails();\r\n    this.getListOfAccounts();\r\n    this. dataExtracted();\r\n  } \r\n}, 10);\r\n   \r\n    this.customerInfoForm.get('ownership').valueChanges.subscribe(val => {\r\n      console.log(\"ownership ?\", val);\r\n      if (val == 'Joint') {\r\n        this.customerInfoForm.get('numOfApplicants').patchValue(2, {onlySelf:true, emitEvent:false});\r\n      } else {\r\n        this.customerInfoForm.get('numOfApplicants').patchValue(1, {onlySelf:true, emitEvent:false});\r\n      }\r\n    });    \r\n  }\r\n  dataExtracted(){\r\n    this.ownershipStatus = this.ls.getItem('ownership_value');\r\n      console.log(\"ownership ?\",  this.ownershipStatus );\r\n      if ( this.ownershipStatus  == \"Joint\") {\r\n        console.log(\"calling\")\r\n        this.customerInfoForm.get('numOfApplicants').setValue(2);\r\n      } else {\r\n        this.customerInfoForm.get('numOfApplicants').setValue(1);\r\n      }\r\n    \r\n    this.noOfapplicants = this.ls.getItem('LoanNoOfApplicants');\r\n    this.console.log(this.noOfapplicants)\r\n      if (this.noOfapplicants == 1) {\r\n        this.customerInfoForm.get('ownership').setValue('Self');\r\n      } else {\r\n        this.customerInfoForm.get('ownership').setValue('Joint');\r\n      }\r\n    \r\n\r\n    this.applicant.get('idType')\r\n      .valueChanges\r\n      .pipe(pairwise())\r\n      .subscribe(([prev, next]: [any, any]) => {\r\n        this.applicant.get('idNumber').patchValue('');\r\n        this.applicant.get('expiryDate').patchValue('');\r\n      });\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) => {\r\n        this.previousUrl = previousUrl\r\n      });\r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.isAccountOpenScreen = JSON.parse(this.ls.getItem('CUSTOMERINFO_DETAIL_DONE'));\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.cifNumber=this.ls.getItem('CIF_NUM_PRIMARY');\r\n    this.console.log(\"cifNumber=\",this.cifNumber);\r\n   \r\n  }\r\n  onKeyPress1(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    } console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.listOfCustByCif = []\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.isCifValid = false;\r\n      this.applicant.reset();\r\n      this.applicant.get('cifNumber').clearValidators();\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n      this.applicant.get('existingCustomer').patchValue(true);\r\n      this.applicant.get('primaryCustomer').patchValue(true);\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => { \r\n          console.log(res.cifNumber);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n  \r\n  \r\n  changeIdType(doc){\r\n    console.log(\"doc::\",doc)\r\n    console.log(\"this.customerIdProofs::\",this.customerIdProofs)\r\n   let idProofs:any = this.customerIdProofs.filter(item =>{\r\n     return item.idType == doc;\r\n   })\r\n   console.log(\"idProofs::\",idProofs)\r\n   if(idProofs.length > 0){\r\n    this.applicant.get('idNumber').patchValue(idProofs[0].idNumber);\r\n    this.applicant.get('expiryDate').patchValue(this.convertDate(idProofs[0].expiryDate));\r\n   } else {\r\n    this.applicant.get('idNumber').patchValue('');\r\n    this.applicant.get('expiryDate').patchValue('');\r\n   }\r\n  }\r\n\r\n  isObjectEmpty(value) {\r\n    return (\r\n      Object.prototype.toString.call(value) === '[object Object]' &&\r\n      JSON.stringify(value) === '{}'\r\n    );\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  toggleDetails(account) {\r\n    console.log(\"customerId incomming\", account);    \r\n    this.customerInfoForm.get('numOfApplicants').disable({onlySelf:true, emitEvent:false});\r\n    // if (this.selectedApplicant && this.selectedApplicant._id === account._id) {\r\n    //   // Close the details\r\n    //   this.closeDetails();\r\n    //   return;\r\n    // }\r\n    let address: any;\r\n    this.console.log(account.userAddress.length);\r\n    if (account.userAddress.length > 1) {\r\n      address = account.userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n    } else {\r\n      address = account.userAddress[0];\r\n    }\r\n    this.getStateName(address.country);\r\n    this.getCityName(address.state);\r\n\r\n    let payLoadModel = {\r\n      existingCustomer: account.existingCustomer,\r\n      dependentId: account.dependentId,\r\n      primaryCustomer: account.primaryCustomer,\r\n      cifNumber: account.cifNumber,\r\n      prefix: account.prefix,\r\n      firstName: account.firstName,\r\n      \r\n      middleName: account.middleName,\r\n      lastName: account.lastName,\r\n      gender: account.gender,\r\n      dateOfBirth: account.dateOfBirth,\r\n      placeOfBirth: account.placeOfBirth,\r\n      birthCountry:account.birthCountry,\r\n      maritalStatus:account.maritalStatus,\r\n      residenceStatus: account.residenceStatus,\r\n      nationality: account.nationality,\r\n      countryOfResidence: account.countryOfResidence,\r\n      occupationType: account.occupationType,\r\n      idType: account.custIdProofs[0].idType,\r\n      idNumber: account.custIdProofs[0].idNumber,\r\n      expiryDate: account.custIdProofs[0].expiryDate,\r\n      addressType: address.addressType,\r\n      address1: address.address1,\r\n      address2: address.address2,\r\n      city: address.city,\r\n      state: address.state,\r\n      country: address.country,\r\n      zipCode: address.zipCode,\r\n      phoneNumber: account.phoneNumber,\r\n      landlineNumber: account.landlineNumber,\r\n      primaryEmailAdress: account.primaryEmailAdress\r\n    };\r\n\r\n    this.onSelectionCountryOfresidence(payLoadModel.countryOfResidence);\r\n    this.onSelectionBirthCountry(payLoadModel.birthCountry);\r\n    this.onSelectionCitizenship(payLoadModel.nationality);\r\n    console.log(\"account.firstName=\",account.firstName);\r\n    //console.log(\"firstName=\",this.firstName);\r\n    this.selectedApplicant = account;\r\n    console.log(\"payLoadModel\",payLoadModel);\r\n    this.applicant.patchValue(payLoadModel, {onlySelf:false, emitEvent:false});\r\n    //this.applicant.patchValue(payLoadModel);\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  resetAndClose(){\r\n    this.closeDetails();\r\n  }\r\n\r\n  /**\r\n   * Close the details\r\n   */\r\n  closeDetails(): void {\r\n    this.selectedApplicant = null;\r\n    this.applicant.reset();\r\n    this.customerInfoForm.get('numOfApplicants').enable({onlySelf:true});\r\n    \r\n  }\r\n\r\n  getListOfAccounts() {\r\n    this.isBirthCountry = false;\r\n    this.appApiService.fetchCustomersByLoanAccId(this.loanaccountID,'loan')\r\n      .subscribe((resp: any) => {\r\n        this.listOfAccounts = resp.status == 200 ? resp.data.map(value => ({ ...value, _id: Math.round(Math.random() * 10000000000) })) : [];\r\n       this.console.log(\" this.listOfAccounts\", this.listOfAccounts)\r\n        console.log(\"All Customer Details\", this.listOfAccounts.length);\r\n        resp.status == 200 ? this.ls.setItem(\"cId\", resp.data[0].customerId) : null;\r\n        console.log(\"Length check??\",this.listOfAccounts.length);\r\n\r\n        if(this.listOfAccounts.length == 0){\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(true);\r\n        }else if(this.listOfAccounts.length == 1){\r\n          this.applicant.get('existingCustomer').patchValue(true);\r\n          this.applicant.get('primaryCustomer').patchValue(false);\r\n        }else if(this.listOfAccounts.length >= 2){\r\n          this.customerInfoForm.get('ownership').patchValue('Joint');\r\n         this.applicant.get('existingCustomer').patchValue(true);\r\n         this.applicant.get('primaryCustomer').patchValue(false);\r\n          for (let index = 0; index < resp.data.length; index++) {\r\n            const element = resp.data[index];\r\n            this.customerInfoForm.get('numOfApplicants').patchValue(resp.data[index].numOfApplicants);\r\n          }\r\n        }\r\n\r\n        this.cdr.markForCheck();\r\n\r\n        this.toggleChanges();\r\n      }, (err: any) => {\r\n        \r\n      });\r\n  }\r\n\r\n  removeApplicant(account) {\r\n    this.confirmService\r\n      .confirm({ title: \"Confirm\", message: \"Are you sure want to delete?\", ok: \"Yes\", cancel: \"No\" })\r\n      .subscribe(res => {\r\n        console.log(\"res:: removed \", res);\r\n        if (res) {\r\n          this.appApiService.deleteApplicant(account.customerId, account.dependentId)\r\n            .subscribe((res: any) => {\r\n            }, (err: any) => {\r\n              console.log(err);\r\n              if (err.status == 200) {\r\n                this.snack.open(`Dependent ${account.firstName} ${err.error.text}!`, 'OK', {\r\n                  duration: 4000,\r\n                  verticalPosition: 'top',\r\n                  horizontalPosition: 'right'\r\n                });\r\n                this.getListOfAccounts();\r\n              }\r\n            })\r\n        } else return;\r\n      });\r\n  }\r\n\r\n  fetchByCif(cifNumber, isExistingCustomer) {\r\n    if (this.listOfAccounts.some(acc => acc.cifNumber == cifNumber)) {\r\n      this.isDuplicateCIF = true;\r\n      this.disableSaveBtn = true;\r\n      this.snack.open('Duplicate CIF Number', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    } else {\r\n      this.isDuplicateCIF = false;\r\n      this.disableSaveBtn = false;\r\n      cifNumber && this.appApiService.fetchByCif(cifNumber).subscribe((res: any) => {\r\n        console.log(res)\r\n        \r\n        if (!res) {\r\n          this.isCifValid = false;\r\n          this.snack.open('Invalid CIF Number', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          this.applicant.get('cifNumber').patchValue('');\r\n          return;\r\n        } else {\r\n          if (res){\r\n            this.isCifValid = true;\r\n            this.api.fetchAccountIdByCustId(cifNumber).subscribe((accountNo: [])=>{\r\n              console.log(accountNo);\r\n              if(accountNo){\r\n                this.ls.setItem(\"cId\", res.customerInfoList[0].customerId);\r\n                let address: any;\r\n                this.console.log(res.customerInfoList[0].userAddress.length);\r\n                if (res.customerInfoList[0].userAddress.length > 1) {\r\n                  address = res.customerInfoList[0].userAddress.find((item: any) => item.addressType == \"Permanent\");\r\n                  console.log(address)\r\n                } else {\r\n                  address = res.customerInfoList[0].userAddress[0];\r\n                  console.log(address)\r\n                }                \r\n                this.getStateName(address.country);\r\n                this.getCityName(address.state);\r\n                let applicantData = {\r\n                  \r\n                  prefix: res.customerInfoList[0].prefix,\r\n                  cifNumber: res.customerInfoList[0].cifNumber,\r\n                  existingCustomer:isExistingCustomer,\r\n                  customerId: res.customerInfoList[0].customerId,\r\n                  firstName: res.customerInfoList[0].firstName,\r\n                  middleName: res.customerInfoList[0].middleName,\r\n                  lastName: res.customerInfoList[0].lastName,\r\n                  gender: res.customerInfoList[0].gender,\r\n                  dateOfBirth: this.convertDate(res.customerInfoList[0].dateOfBirth),\r\n                  maritalStatus:res.customerInfoList[0].maritalStatus,\r\n                  placeOfBirth: res.customerInfoList[0].placeOfBirth,\r\n                  birthCountry:res.customerInfoList[0].birthCountry,\r\n                  residenceStatus: res.customerInfoList[0].residenceStatus,         \r\n                  nationality: res.customerInfoList[0].citizenship,\r\n                  countryOfResidence: res.customerInfoList[0].countryOfResidence,\r\n                  occupationType: res.customerInfoList[0].occupationType,\r\n                  idType: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idType : '',\r\n                  idNumber: res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].idNumber : '',  \r\n                  expiryDate:res.customerInfoList[0].custIdProofs.length > 0 ? res.customerInfoList[0].custIdProofs[0].expiryDate : '',\r\n                  // expiryDate: this.convertDate(res.customerInfoList[0].custIdProofs[0].expiryDate),    \r\n                  addressType: address.addressType,\r\n                  address1: address.address1,\r\n                  address2: address.address2,\r\n                  city: address.city,\r\n                  country: address.country,\r\n                  state: address.state,\r\n                  zipCode: address.zipCode,\r\n                  phoneNumber: res.customerInfoList[0].phoneNumber,\r\n                  landlineNumber: res.customerInfoList[0].landlineNumber,\r\n                  primaryEmailAdress: res.customerInfoList[0].primaryEmailAdress\r\n                }\r\n                this.onSelectionCountryOfresidence(applicantData.countryOfResidence);\r\n                this.onSelectionBirthCountry(applicantData.birthCountry);\r\n                this.onSelectionCitizenship(applicantData.nationality);\r\n                this.console.log(\"res.customerInfoList[0].firstName=\",res.customerInfoList[0].firstName);\r\n                this.customerName = res.customerInfoList[0].firstName + ' ' + res.customerInfoList[0].lastName;\r\n                this.applicant.patchValue(applicantData);\r\n                console.log(this.applicant);\r\n              }\r\n              else{\r\n                this.isCifValid = false;               \r\n                this.dialogService.alertForCustomerDialog().subscribe((response) => {\r\n                  console.log(\"response ::\", response);                 \r\n                });            \r\n                this.applicant.get('cifNumber').patchValue('');\r\n              }           \r\n             \r\n            }     \r\n              ); \r\n          }         \r\n      }\r\n        this.cdr.markForCheck();\r\n      }, (err: any) => {\r\n        console.error(err);\r\n      });\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  getCustomerInformationDetails() {\r\n    this.appApiService.fetchCustomersByLoanAccId(this.loanaccountID,'loan')\r\n      .subscribe((resp: any) => {\r\n        this.buildCustomerForm(resp);\r\n      }, (err: any) => {\r\n      });\r\n  }\r\n\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DD'); // ISO 8601 format\r\n    // let date = new Date(value).format('yyyy-MMM-dd');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n\r\n\r\n  buildCustomerForm(data?) {\r\n    this.console.log(data)\r\n    this.customerInfoForm = this.formBuilder.group({\r\n      productAccountId: data ? data.productAccountId : this.accountId,\r\n      ownership: data ? data[0].ownership : 'Self',\r\n      numOfApplicants: data ? data[0].numOfApplicants : 1,\r\n      applicantDetails: this.addCustFormGroup()\r\n    });\r\n  }\r\n\r\n  toggleChanges() {\r\n    if (this.applicant.get('existingCustomer').value == true) {\r\n      this.applicant.get('cifNumber').enable();\r\n      this.applicant.get('cifNumber').setValidators([Validators.required]);\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n    }\r\n    else {\r\n      this.applicant.get('cifNumber').disable();\r\n      this.applicant.get('cifNumber').clearValidators();\r\n      this.applicant.get('cifNumber').updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  toggleAddForm() {\r\n    this.showNewForm = !this.showNewForm;\r\n  }\r\n\r\n  addCustFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      existingCustomer: [null, []],\r\n      primaryCustomer: [null, []],\r\n      cifNumber: [''],\r\n      customerId: [''],\r\n      dependentId: [null],\r\n      prefix: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      middleName: [''],\r\n      maritalStatus: [''],\r\n      birthCountry: [''],\r\n      lastName: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      placeOfBirth: ['', Validators.required],\r\n      residenceStatus: ['', Validators.required],\r\n      nationality: ['', Validators.required],\r\n      countryOfResidence: ['', Validators.required],\r\n      occupationType: ['', Validators.required],\r\n      idType: ['', Validators.required],\r\n      idNumber: ['', Validators.required],\r\n      expiryDate: [''],\r\n      addressType: ['', Validators.required],\r\n      address1: ['', [Validators.required,Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      address2: ['', [Validators.required,Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      zipCode: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n      phoneNumber: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10), Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      landlineNumber:  ['', [Validators.pattern(\"^[0-9]{10,12}$\")]],\r\n      primaryEmailAdress: ['', [Validators.required,\r\n      Validators.email]],\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  _keyPress(event: any) {\r\n    console.log(event.target.value)\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  validateNumber(event) {\r\n    const keyCode = event.keyCode;\r\n\r\n    const excludedKeys = [8, 37, 39, 46];\r\n\r\n    if (!((keyCode >= 48 && keyCode <= 57) ||\r\n      (keyCode >= 96 && keyCode <= 105) ||\r\n      (excludedKeys.includes(keyCode)))) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() { return this.customerInfoForm.controls; }\r\n  get applicantCount() { return this.f.numOfApplicants; }\r\n  get applicant() { return this.f.applicantDetails; }\r\n\r\n\r\n\r\n  getPrefixValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayPrefix = data;\r\n    });\r\n  }\r\n  getMaritalStatus(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.maritalStatusList = data;\r\n    });\r\n  }\r\n\r\n  getOwnershipValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayOwnership = data;\r\n    });\r\n  }\r\n\r\n  getGenderValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayGender = data;\r\n    });\r\n  }\r\n\r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n     for(let i=0; i<data.length;i++){\r\n       if(data[i].authStatus==='A'){     \r\n         this.arrayCountry.push(data[i].countryName);\r\n         this.arrayCountry.sort();\r\n       }\r\n     }\r\n   });\r\n }\r\n  getAdressType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayAddressType = data;\r\n    });\r\n  }\r\n  \r\n\r\n  getStateName(country) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName == country){\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n          this.arrayState = resp\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n      // this.applicant.valueChanges.subscribe(data=>{\r\n      //   console.log('data :: before ',data.city)\r\n      //   data.city='';\r\n      //   console.log('data :: after ',data.city)\r\n      // })\r\n      // this.applicant.value.city='';\r\n      // this.applicant.get('city').reset();\r\n    console.log('this.applicant', this.applicant)\r\n    });\r\n  }\r\n\r\n\r\n  getResidenceDetails(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayResidence = data;\r\n    });\r\n  }\r\n\r\n  getDocumentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.console.log(data);\r\n      this.arrayDocumentType = data;\r\n    });\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log('saveapplicant')\r\n    this.isCifValid= false;\r\n    // if (this.customerInfoForm.invalid) {\r\n    //   console.log(\"test\");\r\n\r\n    //   return;\r\n    // }\r\n    // this.loader.open();\r\n\r\n    let payloadObj: any = {};\r\n    const control = this.customerInfoForm.controls['applicantDetails'].value;\r\n    console.log(control);\r\n    let addressObj: any = {};\r\n    let custIdProofs: any = {};\r\n    let custIdProofsArray: any[] = [];\r\n    let addressObjArray: any[] = [];\r\n\r\n    payloadObj.customerId = this.ls.getItem(\"cId\");\r\n    payloadObj.cifNumber = control.cifNumber;\r\n    payloadObj.dependentId = control.dependentId;\r\n    payloadObj.existingCustomer = control.existingCustomer;\r\n    payloadObj.primaryCustomer = control.primaryCustomer;\r\n    payloadObj.residenceStatus = control.residenceStatus;\r\n    payloadObj.placeOfBirth = control.placeOfBirth;\r\n    payloadObj.countryOfResidence = control.countryOfResidence;\r\n    payloadObj.occupationType = control.occupationType;\r\n    payloadObj.phoneNumber = control.phoneNumber;\r\n    payloadObj.primaryEmailAdress = control.primaryEmailAdress;\r\n    payloadObj.prefix = control.prefix;\r\n    payloadObj.firstName = control.firstName;\r\n    payloadObj.middleName = control.middleName;\r\n    payloadObj.lastName = control.lastName;\r\n    payloadObj.cifNumber = control.cifNumber;\r\n    payloadObj.gender = control.gender;\r\n    payloadObj.dateOfBirth = (control.dateOfBirth);\r\n    \r\n    payloadObj.birthCountry = control.birthCountry;\r\n    payloadObj.maritalStatus = control.maritalStatus;\r\n    payloadObj.nationality = control.nationality;\r\n    payloadObj.loanAccountId = this.loanaccountID;\r\n    payloadObj.accountType=\"loan\";\r\n    payloadObj.landlineNumber = control.landlineNumber;\r\n    payloadObj.ownership = this.customerInfoForm.get('ownership').value;\r\n    payloadObj.numOfApplicants = this.customerInfoForm.get('numOfApplicants').value;\r\n    addressObj.address1 = control.address1;\r\n    addressObj.address2 = control.address2;\r\n    addressObj.country = control.country;\r\n    addressObj.state = control.state;\r\n    addressObj.city = control.city;\r\n    addressObj.zipCode = control.zipCode;\r\n    addressObj.addressType = control.addressType;\r\n    addressObjArray.push(addressObj);\r\n\r\n    custIdProofs.expiryDate = (control.expiryDate);\r\n    custIdProofs.idType = control.idType;\r\n    custIdProofs.idNumber = control.idNumber;\r\n    custIdProofsArray.push(custIdProofs);\r\n\r\n    payloadObj.userAddress = addressObjArray;\r\n    payloadObj.custIdProofs = custIdProofsArray;\r\n\r\n    console.log(\"payloadObj\",payloadObj);\r\n    this.isChecked=false;\r\n    this.disabled=false;\r\n    this.appApiService.createAndUpdateAccountants(payloadObj)\r\n      .subscribe((data: any) => {\r\n        console.log(\"data::\",data)\r\n        this.closeDetails();\r\n        this.loader.close();\r\n        console.log(\"Response of service 2 ---> \", data)\r\n        if (data.status === 200) {\r\n        \r\n          this.getListOfAccounts();\r\n          this.snack.open(' Applicant is creating successfully!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n\r\n          if(data.custDependentModel.primaryCustomer==true){\r\n            this.ls.setItem('primaryCustomerName', data.custDependentModel.firstName + ' ' + data.custDependentModel.lastName);\r\n          }\r\n   \r\n        this.customerInfoForm.get('ownership').patchValue(data.custDependentModel.ownership);\r\n        this.customerInfoForm.get('numOfApplicants').patchValue(data.custDependentModel.numOfApplicants);\r\n\r\n          if(this.customerInfoForm.get('ownership').value == 'Self'){\r\n            this.goToNext();\r\n          }\r\n        }\r\n      }, (err: any) => {\r\n        console.log(err);\r\n        this.loader.close();\r\n        this.snack.open('Error', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      })\r\n  }\r\n\r\n\r\n\r\n  uploadImage() {\r\n    console.log(\"Upload Image\");\r\n  }\r\n\r\n  onReset() {\r\n    // reset whole form back to initial state\r\n    this.submitted = false;\r\n    this.customerInfoForm.reset({});\r\n  }\r\n\r\n  onClear() {\r\n    // clear errors and reset ticket fields\r\n    this.submitted = false;\r\n  }\r\n\r\n  goBack() {\r\n    // console.log(\"previousUrl ::\", this.previousUrl);\r\n    // this.router.navigate([this.previousUrl]);\r\n    if(this.productName == \"Classic Home Loan\") {\r\n      this.router.navigate([`/loan/account/asset-details`]);\r\n    }\r\n    else if(this.productName == \"Vehicle Loan\") {\r\n      this.router.navigate([`/loan/account/vehicle-details`]);\r\n    }\r\n    else {\r\n      this.router.navigate([`/loan/account/admission-details`]);\r\n    }\r\n\r\n  }\r\n\r\n  goToNext() {\r\n   // this.onSubmit();\r\n    this.ls.setItem('CUSTOMERINFO_DETAIL_DONE', true);\r\n   \r\n  //  if(this.ls.getItem.accountType!=)\r\n  this.accountService.refresh.next();\r\n  //  this.router.navigate([`/home/application/mandate/${this.accountId}`]);\r\n  this.ls.setItem('LoanNoOfApplicants', this.customerInfoForm.get('numOfApplicants').value);\r\n  this.ls.setItem('ownership_value', this.customerInfoForm.get('ownership').value);\r\n  \r\n  this.router.navigate([`/loan/account/mandate-details`]);\r\n  }\r\n\r\n  isAllSameDigit(event) {\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('number :: ', number);\r\n      console.log('isAllSameDigitVal :: ', count , number.length)\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    }else{\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    this.dataService.sendNavParam({});\r\n  }\r\n\r\n  onSelectionBirthCountry(data: any) {\r\n    this.isBirthCountry = true;\r\n    this.birthCountryImage='';\r\n      this.apiService.countryCurrencyFlaglists(data).subscribe(value => {\r\n        console.log(value);\r\n        this.birthCountryImage = value.currencyId.currencyCode.toLowerCase()\r\n      })\r\n        \r\n  }\r\n\r\n  onSelectionCitizenship(data: any) {   \r\n    this.citizenshipImage = ''; \r\n    if (data != null) {\r\n      this.apiService.countryCurrencyFlaglists(data).subscribe(value => {\r\n        console.log(value);\r\n        \r\n        this.citizenshipImage = value.currencyId.currencyCode.toLowerCase();\r\n        console.log(this.citizenshipImage);\r\n        \r\n      })\r\n    }\r\n  }\r\n\r\n  onSelectionCountryOfresidence(data: any) {\r\n    this.countryResidenceImage = '';\r\n    if (data != null) {\r\n      console.log(data);\r\n      \r\n      this.apiService.countryCurrencyFlaglists(data).subscribe(value => {\r\n        this.countryResidenceImage = value.currencyId.currencyCode.toLowerCase()\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_personal_information_re_vw8a.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><h1>Customer Information</h1></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <mat-progress-bar [mode]=\"determinate\" class=\"session-progress\"></mat-progress-bar> -->\r\n    <mat-card class=\"p-0\">\r\n      <!-- <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Customer Information</div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title> -->\r\n           \r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Customer Information Details</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"customerInfoForm\" [formGroup]=\"customerInfoForm\" novalidate>\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"pb-1\">\r\n                <div class=\"flex-grow-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Ownership*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                        <mat-select name=\"owner\" formControlName=\"ownership\" placeholder=\"Select\" disableOptionCentering>\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                          <mat-option *ngFor=\"let ownership of arrayOwnership\" [value]=\"ownership\">{{ownership}}</mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card> -->\r\n                      <!-- <mat-error *ngIf=\"assetForm.get('city').hasError('required')\">\r\n                        City is Required!\r\n                      </mat-error> -->\r\n                      <mat-error *ngIf=\"customerInfoForm.get('ownership').hasError('required')\">\r\n                    &nbsp;&nbsp; Ownership is Required!\r\n                  </mat-error>\r\n                  </mat-form-field>\r\n                    </div>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"pb-1\">\r\n                <ng-container *ngIf=\"customerInfoForm.get('ownership').value == 'Joint'; else showAdd\">\r\n                  <div class=\"flex-grow-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Number of Applicants*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                        <mat-select formControlName=\"numOfApplicants\" name=\"account\" disableOptionCentering>\r\n                          <mat-option>Select</mat-option>\r\n                      <mat-option [value]=\"1\">1</mat-option>\r\n                      <mat-option [value]=\"2\">2</mat-option>\r\n                      <mat-option [value]=\"3\">3</mat-option>\r\n                      <mat-option [value]=\"4\">4</mat-option>\r\n                      <mat-option [value]=\"5\">5</mat-option>\r\n                    </mat-select>\r\n                      <!-- </mat-card> -->\r\n                    </mat-form-field>\r\n                    </div>                    \r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <mat-card-title>\r\n            <fieldset class=\"marginChange\">\r\n            <legend visible=\"true\">Details Of The Applicant</legend>\r\n            </fieldset>\r\n          </mat-card-title>          \r\n          <div fxLayout=\"row\" fxLayoutGap=\"16px\" fxLayoutAlign=\"end end\">\r\n            <div class=\"mb-1\">\r\n              <p class=\"m-0 text-right\">Completed {{ listOfAccounts.length }} /\r\n                {{ customerInfoForm.get('numOfApplicants').value }}</p>\r\n              <mat-progress-bar\r\n                [color]=\"customerInfoForm.get('numOfApplicants').value === listOfAccounts.length ? 'primary' : 'accent'\"\r\n                mode=\"determinate\"\r\n                [value]=\"customerInfoForm.get('numOfApplicants').value === listOfAccounts.length ? 100 : 50\"\r\n                class=\"rounded\" style=\"height: 5px\">\r\n              </mat-progress-bar>\r\n              <mat-hint><small> completed / total applicants </small></mat-hint>\r\n            </div>\r\n          </div>\r\n      \r\n          <!-- *ngIf=\"!showNewForm\" -->\r\n          <div class=\"mt-12\">\r\n            <mat-accordion multi=\"true\">\r\n              <mat-expansion-panel class=\"mb-8\" *ngFor=\"let account of listOfAccounts; let i=index\" expanded=\"true\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <mat-icon class=\"check-circle\">check_circle</mat-icon> <span class=\"ml-8\">Applicant {{ i+1 }}</span>\r\n                  </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <mat-card>\r\n                  <mat-card-header style=\"margin-bottom: -16px !important;\">\r\n                      <div mat-card-avatar>\r\n                        <app-avatar-photo [name]=\"account.firstName + ' ' + account.lastName\"></app-avatar-photo>\r\n                      </div>\r\n                      <mat-card-title>\r\n                        <div fxLayout=\"row\">\r\n                          <h6 class=\"m-0 mr-16\">{{ account.firstName + ' ' + account.lastName }}</h6>\r\n                          <span fxFlex></span>\r\n                          <mat-chip mat-sm-chip [color]=\"'warn'\" *ngIf=\"account.primaryCustomer\"\r\n                            [selected]=\"account.primaryCustomer\">{{account.primaryCustomer ? 'primary' : ''}}</mat-chip>\r\n                        </div>\r\n  \r\n                      </mat-card-title>\r\n                      <mat-card-subtitle><span class=\"mat-caption\">CIF\r\n                          {{ account.cifNumber != null ? '#' + account.cifNumber : '- n/a' }}</span></mat-card-subtitle>\r\n                      <div fxLayout=\"row\" fxFlex=\"1 1 0%\" fxLayoutAlign=\"end end\">\r\n                        <span class=\"group-btn-bg\">\r\n                          <ng-container *ngIf=\"selectedApplicant?._id === account._id; else showEdit\">\r\n                            <a type=\"reset\" mat-icon-button color=\"primary\" (click)=\"resetAndClose()\">\r\n                              <mat-icon>close</mat-icon>\r\n                            </a>\r\n                          </ng-container>\r\n                          <ng-template #showEdit>\r\n                            <a type=\"submit\" mat-icon-button color=\"primary\" (click)=\"toggleDetails(account)\">\r\n                              <mat-icon>edit</mat-icon>\r\n                            </a>\r\n                          </ng-template>\r\n  \r\n                          <a *ngIf=\"account.dependentId\" mat-icon-button color=\"warn\" (click)=\"removeApplicant(account)\">\r\n                            <mat-icon>delete</mat-icon>\r\n                          </a>\r\n                        </span>\r\n                      </div>\r\n                    </mat-card-header>\r\n                    <mat-card-container>\r\n                      <ng-container *ngIf=\"selectedApplicant?._id === account._id\">\r\n                        <ng-container *ngTemplateOutlet=\"detailApplicant; context: {$implicit: account}\"></ng-container>\r\n                      </ng-container>\r\n                   \r\n\r\n                    <ng-template #detailApplicant let-account>\r\n                      <form [formGroup]=\"customerInfoForm\" class=\"mt-32\">\r\n                        <div formGroupName=\"applicantDetails\">\r\n                          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                              <div class=\"pb-1\">\r\n                                <label>Is the applicant an existing customer?</label>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <mat-slide-toggle (change)=\"toggleChanges($event)\" formControlName=\"existingCustomer\">\r\n\t\t\t\t</mat-slide-toggle>\r\n                                <div class=\"mb-16\"></div>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Prefix*</mat-label>\r\n                                  <mat-select name=\"prefix\" formControlName=\"prefix\" disableOptionCentering>\r\n                                    <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                                      {{prefix}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('prefix').hasError('required')\">\r\n                                    Prefix is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Middle Name</mat-label>\r\n                                  <input matInput name=\"mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Date of Birth*</mat-label>\r\n                                  <input matInput name=\"date\" readonly formControlName=\"dateOfBirth\"\r\n                                    placeholder=\"DD/MM/YYYY\" [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\"\r\n                                    [max]=\"maxDate\" />\r\n\r\n                                  <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                  <mat-error *ngIf=\"applicant.get('dateOfBirth').hasError('required')\">\r\n                                    Date of Birth is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                                <mat-datepicker #appDatepicker></mat-datepicker>\r\n                              </div>\r\n                              \r\n                              <!-- <div  class=\"pb-1\" >\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Birth Country*</mat-label>\r\n                                      <mat-select name=\"birthCountry\" formControlName=\"birthCountry\" disableOptionCentering>\r\n                                           <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                              {{country}}\r\n                                            </mat-option>\r\n                                      </mat-select>\r\n                                      <mat-error *ngIf=\"applicant.get('birthCountry').hasError('required')\">\r\n                                        Birth Country is Required!\r\n                                      </mat-error>\r\n                                  </mat-form-field>\r\n                              </div> -->\r\n\r\n                              <div  class=\"pb-1\" >\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\" >\r\n                                <mat-label>Birth Country</mat-label>\r\n                                <div fxFlex=\"20\">\r\n                                  <div matPrefix>\r\n                                     <div *ngIf=\"birthCountryImage\" class=\"currency-flag currency-flag-{{birthCountryImage}}\"id=\"flag\"></div>\r\n                                     \r\n                                  </div>\r\n                                </div>\r\n                                <mat-select name=\"birthCountry\" formControlName=\"birthCountry\" required\r\n                                (selectionChange)=\"onSelectionBirthCountry($event.value)\" disableOptionCentering>\r\n                                     <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                        {{country}}\r\n                                      </mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                                <mat-error *ngIf=\"applicant.get('birthCountry').hasError('required')\">\r\n                                  Country of Residence is Required!\r\n                                </mat-error>\r\n                            </div>\r\n\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Resident Status*</mat-label>\r\n                                  <mat-select name=\"residenceType\" formControlName=\"residenceStatus\" disableOptionCentering>\r\n                                    <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\">\r\n                                      {{residence}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('residenceStatus').hasError('required')\">\r\n                                    Resident Status is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n\r\n                              </div>\r\n\r\n\r\n\r\n                              <!-- <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Country of Residence*</mat-label>\r\n                                  <mat-select name=\"resident\" formControlName=\"countryOfResidence\" disableOptionCentering>\r\n                                    <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                      {{country}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('countryOfResidence').hasError('required')\">\r\n                                    Country of Residence is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div> -->\r\n\r\n\r\n                              <div  class=\"pb-1\" >\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\" >\r\n                                  <mat-label>Country of Residence</mat-label>\r\n                                  <div fxFlex=\"20\">\r\n                                    <div matPrefix>\r\n                                      <div *ngIf=\"countryResidenceImage\" class=\"currency-flag currency-flag-{{countryResidenceImage}}\">\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <mat-select name=\"resident\" formControlName=\"countryOfResidence\" required\r\n                                  (selectionChange)=\"onSelectionCountryOfresidence($event.value)\" disableOptionCentering>\r\n                                       <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                          {{country}}\r\n                                        </mat-option>\r\n                                  </mat-select>\r\n                                </mat-form-field>\r\n                                  <mat-error *ngIf=\"!applicant.get('countryOfResidence').valid && applicant.get('countryOfResidence').touched\">\r\n                                    Country of Residence is Required!\r\n                                  </mat-error>\r\n                              </div>\r\n\r\n\r\n\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>ID Type*</mat-label>\r\n                                  <mat-select name=\"idtype\" formControlName=\"idType\" disableOptionCentering\r\n                                    (selectionChange)=\"changeIdType(applicant.get('idType').value)\">\r\n                                    <mat-option *ngFor=\"let doc of arrayDocumentType\" [value]=\"doc\">\r\n                                      {{doc}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('idType').hasError('required')\">\r\n                                    ID Type is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\" *ngIf=\"applicant.get('idType').value == 'Passport'\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>ID Type Valid Till</mat-label>\r\n                                  <input matInput name=\"date\"  [required]=\"applicant.get('idType').value == 'Passport'\"\r\n                                    formControlName=\"expiryDate\" \r\n                                    placeholder=\"ID Type Valid Till\" \r\n                                    [matDatepicker]=\"appDatepicker1\" \r\n                                    [min]=\"minDate\"\r\n                                  />\r\n\r\n                                  <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                                  <mat-error *ngIf=\"applicant.get('expiryDate').hasError('required')\">\r\n                                    ID Type Valid Till is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                                <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                              </div>\r\n                            </div>\r\n                            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                              <div class=\"pb-1\">\r\n                                <label>Is the applicant a primary customer?</label>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <mat-slide-toggle  formControlName=\"primaryCustomer\">\r\n                                </mat-slide-toggle>\r\n\r\n                                <div class=\"mb-16\"></div>\r\n                              </div>\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>First Name*</mat-label>\r\n                                  <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                                  <mat-error *ngIf=\"applicant.get('firstName').hasError('required')\">\r\n                                    First Name is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Last Name*</mat-label>\r\n                                  <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                                    (keypress)=\"letterOnly($event)\" />\r\n                                  <mat-error *ngIf=\"applicant.get('lastName').hasError('required')\">\r\n                                    Last Name is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Gender*</mat-label>\r\n                                  <mat-select name=\"gender\" formControlName=\"gender\" disableOptionCentering>\r\n                                    <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\">\r\n                                      {{gender}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('gender').hasError('required')\">\r\n                                    Gender is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Birth Place*</mat-label>\r\n                                  <input matInput name=\"bplace\" formControlName=\"placeOfBirth\"\r\n                                    placeholder=\"Birth Place\" />\r\n                                  <mat-error *ngIf=\"applicant.get('placeOfBirth').hasError('required')\">\r\n                                    Birth Place is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <!-- <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Citizenship By*</mat-label>\r\n                                  <mat-select name=\"citizen\" formControlName=\"nationality\" disableOptionCentering>\r\n                                    <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                      {{country}}\r\n                                    </mat-option>\r\n                                  </mat-select>\r\n                                  <mat-error *ngIf=\"applicant.get('nationality').hasError('required')\">\r\n                                    Citizenship By is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div> -->\r\n\r\n                              <div  class=\"pb-1\" >\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\" >\r\n                                  <mat-label>Citizenship By</mat-label>\r\n                                  <div fxFlex=\"20\">\r\n                                    <div matPrefix>\r\n                                      <div *ngIf=\"citizenshipImage\" class=\"currency-flag currency-flag-{{citizenshipImage}}\">\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <mat-select name=\"citizen\" formControlName=\"nationality\" required\r\n                                  (selectionChange)=\"onSelectionCitizenship($event.value)\" disableOptionCentering>\r\n                                       <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                          {{country}}\r\n                                        </mat-option>\r\n                                  </mat-select>\r\n                                </mat-form-field>\r\n                                  <mat-error *ngIf=\"applicant.get('nationality').hasError('required')\">\r\n                                    Citizenship is Required!\r\n                                  </mat-error>\r\n                              </div>\r\n\r\n                              <div  class=\"p-1\" >\r\n                                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Marital Status</mat-label>\r\n                                      <mat-select name=\"maritalStatus\" formControlName=\"maritalStatus\" disableOptionCentering>\r\n                                          <mat-option *ngFor=\"let status of maritalStatusList\" [value]=\"status\">{{ status }}\r\n                                          </mat-option>\r\n                                      </mat-select>\r\n                                      <mat-error *ngIf=\"applicant.get('maritalStatus').hasError('required')\">\r\n                                        Marital Status is Required!\r\n                                      </mat-error>\r\n                                  </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Occupation Type*</mat-label>\r\n                                  <input matInput name=\"occupation\" formControlName=\"occupationType\"\r\n                                    placeholder=\"Occupation Type\" />\r\n                                  <mat-error *ngIf=\"applicant.get('occupationType').hasError('required')\">\r\n                                    Occupation Type is Required!\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Unique ID Number *</mat-label>\r\n                                  <input matInput name=\"uniqueidentity\" formControlName=\"idNumber\"\r\n                                    placeholder=\"Unique ID Number\" maxlength=\"12\"\r\n                                    pattern=\"^[+]?([0-9]+(?:[\\.][0-9]*)?|\\.[0-9]+)$\" />\r\n                                  <mat-error\r\n                                    *ngIf=\"applicant.get('idNumber').touched && !applicant.get('idNumber').valid\">\r\n                                    <div *ngIf=\"applicant.get('idNumber').hasError('required')\">Unique ID Number is\r\n                                      Required!</div>\r\n                                    <div *ngIf=\"applicant.get('idNumber').hasError('pattern')\">This is a numeric field\r\n                                    </div>\r\n                                  </mat-error>\r\n                                </mat-form-field>\r\n                              </div>\r\n\r\n                            </div>\r\n                          </div>\r\n                          <!-- Address Section start-->\r\n                          <mat-accordion>\r\n                            <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                              <mat-expansion-panel-header>\r\n                                <mat-panel-title>Communication Address </mat-panel-title>\r\n                              </mat-expansion-panel-header>\r\n\r\n                              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Address Line 1*</mat-label>\r\n                                      <textarea matInput formControlName=\"address1\" placeholder=\"Address 1\"></textarea>\r\n                                      <mat-error *ngIf=\"applicant.get('address1').hasError('required')\">\r\n                                        Address Line 1 is Required!\r\n                                      </mat-error>\r\n                                      <mat-error *ngIf=\" applicant.get('address1').touched && applicant.get('address1').hasError('pattern')\">\r\n                                        Please Enter Valid Address \r\n                                       </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Residence Type*</mat-label>\r\n                                      <mat-select name=\"addressType\" formControlName=\"addressType\" disableOptionCentering>\r\n                                        <mat-option *ngFor=\"let addressType of arrayAddressType\" [value]=\"addressType\">\r\n                                          {{addressType}}\r\n                                        </mat-option>\r\n                                      </mat-select>\r\n                                      <mat-error *ngIf=\"applicant.get('addressType').hasError('required')\">\r\n                                        Residence Type is Required!\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>State*</mat-label>\r\n                                      <mat-select name=\"state\" formControlName=\"state\" disableOptionCentering\r\n                                        (selectionChange)=\"getCityName($event.value)\">\r\n                                        <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n                                          {{state.stateName}}</mat-option>\r\n\r\n                                      </mat-select>\r\n                                      <mat-error *ngIf=\"applicant.get('state').hasError('required')\">\r\n                                        State is Required!\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Zip Code*</mat-label>\r\n                                      <input minlength=\"5\" maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"a_zip\"\r\n                                        formControlName=\"zipCode\" onlyNumber placeholder=\"Zip Code\"\r\n                                        (keyup)=\"isAllSameDigit($event)\" />\r\n                                      <mat-error *ngIf=\"applicant.get('zipCode').hasError('required') &&\r\n                                        !applicant.controls['zipCode'].valid && applicant.controls['zipCode']?.touched\">\r\n                                        Please enter valid Zip Code!(5-10 digits)\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                    <h5 *ngIf=\"isAllSameDigitVal\" style=\"color: #E74C3C;\">Please enter valid Zip Code!(5-10 digits)\r\n                                    </h5>\r\n\r\n                                  </div>\r\n\r\n                                 \r\n\r\n                                </div>\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Address Line 2*</mat-label>\r\n                                      <textarea matInput formControlName=\"address2\" placeholder=\"Address 2\"></textarea>\r\n                                      <mat-error *ngIf=\"applicant.get('address2').hasError('required')\">\r\n                                        Address Line 2 is Required!\r\n                                      </mat-error>\r\n                                      <mat-error *ngIf=\" applicant.get('address2').touched && applicant.get('address2').hasError('pattern')\">\r\n                                        Please Enter Valid Address \r\n                                       </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n\r\n                              \r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Country*</mat-label>\r\n                                      <mat-select name=\"country\" formControlName=\"country\" disableOptionCentering\r\n                                        (selectionChange)=\"getStateName($event.value)\">\r\n                                        <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                          {{country}}\r\n                                        </mat-option>\r\n                                      </mat-select>\r\n                                      <mat-error *ngIf=\"applicant.get('country').hasError('required')\">\r\n                                        Country is Required!\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>City*</mat-label>\r\n                                      <mat-select name=\"city\" formControlName=\"city\" disableOptionCentering>\r\n                                        <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}\r\n                                        </mat-option>\r\n                                      </mat-select>\r\n                                      <mat-error *ngIf=\"applicant.get('city').hasError('required')\">\r\n                                        City is Required!\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n\r\n                                \r\n\r\n\r\n                                </div>\r\n                              </div>\r\n                            </mat-expansion-panel>\r\n                          </mat-accordion>\r\n                          <!-- Address Section end -->\r\n                          <!-- Contact Information -->\r\n                          <mat-accordion>\r\n                            <mat-expansion-panel class=\"mb-8\" expanded=\"true\">\r\n                              <mat-expansion-panel-header>\r\n                                <mat-panel-title>Contact Information </mat-panel-title>\r\n                              </mat-expansion-panel-header>\r\n\r\n                              <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Mobile Number*</mat-label>\r\n                                      <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput\r\n                                        formControlName=\"phoneNumber\" name=\"phone\" placeholder=\"Mobile Number\" />\r\n                                      <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('required')\">\r\n                                        Mobile Number is Required!\r\n                                      </mat-error>\r\n                                      <mat-error *ngIf=\"applicant.get('phoneNumber').hasError('pattern')\">\r\n                                        Please, Enter 10 digit Mobile Number!\r\n                                      </mat-error>\r\n\r\n                                  </mat-form-field>\r\n                                  <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('phoneNumber').value == '0000000000'\">\r\n                                    &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                                 </mat-error>\r\n                                  </div>\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>E-mail*</mat-label>\r\n                                      <input matInput name=\"email\" formControlName=\"primaryEmailAdress\"\r\n                                        placeholder=\"e-mail\" />\r\n                                      <mat-error *ngIf=\"applicant.get('primaryEmailAdress').hasError('required')\">\r\n                                        E-mail is Required!\r\n                                      </mat-error>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n                                </div>\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                                  <div class=\"pb-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                      <mat-label>Landline Number</mat-label>\r\n                                      <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"mobile\"\r\n                                        formControlName=\"landlineNumber\" placeholder=\"Landline Number\" />\r\n                                      <!-- <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('required')\">\r\n                                        Landline Number is Required!\r\n                                      </mat-error>\r\n                                      <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('pattern')\">\r\n                                        Please, Enter 10 digit Landline Number!\r\n                                      </mat-error> -->\r\n                                    </mat-form-field>\r\n                                    <mat-error style=\"margin-top:-20px\" *ngIf=\"applicant.get('landlineNumber').value == '0000000000'\">\r\n                                      &nbsp; &nbsp; Please Enter Correct Landline Number\r\n                                   </mat-error>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                            </mat-expansion-panel>\r\n                            <div class=\"pb-1\">\r\n                              <button mat-button color=\"primary\" class=\"paddingChange\" [disabled]=\"applicant.invalid\" (click)=\"onSubmit()\">\r\n                                 UPDATE APPLICANT\r\n                              </button>\r\n\r\n\r\n                            </div>\r\n                          </mat-accordion>\r\n                          <!-- Contact Information -->\r\n                        </div>\r\n                      </form>\r\n                    </ng-template>\r\n                  </mat-card-container>\r\n                </mat-card>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n\r\n          </div>\r\n          <!-- *ngIf=\"showNewForm\" -->\r\n          <div class=\"mt-16\"\r\n            *ngIf=\" customerInfoForm.get('numOfApplicants').value !== listOfAccounts.length\">\r\n            <mat-accordion>\r\n              <mat-expansion-panel class=\"mb-8 borderStyle\"\r\n                [expanded]=\"customerInfoForm.get('numOfApplicants').value === listOfAccounts.length ? false : true\">\r\n                <mat-expansion-panel-header class=\"marginData\">\r\n                  <mat-panel-title class=\"textDesign\">Create New Applicant </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <mat-divider class=\"design\"></mat-divider> \r\n                <div formGroupName=\"applicantDetails\">\r\n                  <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                     \r\n                      <div class=\"pb-1 pt-3\">\r\n                        <label>Is the applicant an existing customer? </label>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <!-- {{ listOfAccounts.length }} -->\r\n                        <mat-slide-toggle (change)=\"toggleChanges($event)\" formControlName=\"existingCustomer\" [(ngModel)]=\"isChecked\" [disabled]=\"disabled\"\r\n                         ></mat-slide-toggle>\r\n                        <div class=\"mb-16\"></div>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\" >\r\n                        <div fxLayout=\"row\" fxLayoutGap=\"2px\" fxLayoutAlign=\"space-between\">\r\n                          <div fxFlex=\"100\" fxFlexAlign=\"center\">\r\n                             <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>CIF Number</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\" style=\"display: flex;\"> -->\r\n                           <input matInput (keypress)=_keyPress($event)\r\n                                (change)=\"fetchByCif(applicant.get('cifNumber').value,applicant.get('existingCustomer').value)\"\r\n                                required formControlName=\"cifNumber\" name=\"cif\"\r\n                                placeholder=\"CIF Number\"\r\n                                [readonly]=\"applicant.get('existingCustomer').value == true ? false : true\"\r\n                                (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\" />\r\n                              <mat-icon *ngIf=\"isCifValid\" matSuffix color=\"primary\">check_circle</mat-icon>\r\n                          <!-- </mat-card> -->\r\n                           <mat-error *ngIf=\"applicant.get('cifNumber').hasError('required') && !applicant.get('cifNumber').valid && applicant.get('cifNumber').touched  && !isCifValid\">\r\n                                CIF Number is Required!\r\n                              </mat-error>\r\n                              <mat-hint class=\"err-msg\" *ngIf=\"isDuplicateCIF\">Duplicate CIF Number</mat-hint>\r\n                              <mat-hint class=\"hintColor\" *ngIf=\"!isCifValid && onbackSpace\">\r\n                                Enter valid CIF Number!</mat-hint>\r\n                               \r\n                               \r\n                              </mat-form-field>\r\n                        </div>                             \r\n                            <div>\r\n                              <mat-autocomplete #auto=\"matAutocomplete\">\r\n                                <mat-option *ngFor=\"let option of listOfCustByCif\" [value]=\"option.customerId\">\r\n                                  <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                                    <div fxFlex=\" 100\">\r\n                                      <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\" class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                                        <h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n                                          {{option?.firstName | slice:0:1 | uppercase}}{{option?.lastName | slice:0:1 | uppercase}}\r\n                                        </h3>\r\n                                      </div>\r\n                                      <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar fxFlex=\"10\">\r\n                                        <img matListAvatar\r\n                                          style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 90%;margin-bottom: 50px;\" align=\"center\"\r\n                                          [src]=\"option?.profileImage\" alt=\"...\">\r\n                                      </div>\r\n                                      <div fxFlex=\"80\">\r\n                                        <h5 style=\"margin-bottom: 0px;\">\r\n                                          {{option?.firstName | uppercase}}\r\n                                          {{option?.middleName | uppercase}}\r\n                                          {{option?.lastName | uppercase}}\r\n                                        </h5>\r\n                                        <h6 style=\"margin-top: 0px;\">#{{option?.cifNumber}}</h6>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </mat-option>\r\n                              </mat-autocomplete>\r\n                            </div>\r\n                          </div>\r\n                          <!-- <div fxFlex=\"15\" fxFlexAlign=\"center\">\r\n                              <a class=\"mb-16\" mat-flat-button color=\"primary\" (click)=\"fetchByCif(applicant.get('cifNumber').value)\">fetch</a>\r\n                            </div> -->\r\n                        </div>\r\n                      </div>\r\n                       \r\n                      <div class=\"pb-1\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>First Name</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                          <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                            (keypress)=\"letterOnly($event)\" />                             \r\n                          <!-- </mat-card>  -->\r\n                          <mat-error *ngIf=\"!applicant.get('firstName').valid && applicant.get('firstName').touched\">\r\n                               First Name is Required!\r\n                          </mat-error> \r\n                          </mat-form-field>                          \r\n                        </div>                          \r\n                      </div>\r\n                      <!-- <div class=\"pb-1\">\r\n                        <div class=\"flex-grow-1\">\r\n                      <mat-hint class=\"p-3\">Customer Prefix*</mat-hint>\r\n                      <mat-card class=\"widthCard inputMatName\">\r\n                         <mat-select name=\"prefix\" formControlName=\"prefix\" disableOptionCentering>\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                          <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                              {{prefix}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                      </mat-card>\r\n                      <mat-error *ngIf=\"!applicant.get('prefix').valid && applicant.get('prefix').touched\" >\r\n                        &nbsp;&nbsp; Prefix is Required!\r\n                      </mat-error>\r\n                    </div>                          \r\n                      </div>  -->\r\n                      \r\n                      <div class=\"pb-1\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Last Name*</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                          <input matInput name=\"lname\" formControlName=\"lastName\" placeholder=\"Last Name\"\r\n                            (keypress)=\"letterOnly($event)\" />                             \r\n                          <!-- </mat-card>  -->\r\n                          <mat-error *ngIf=\"!applicant.get('lastName').valid && applicant.get('lastName').touched\">\r\n                              Last Name is Required!\r\n                          </mat-error>\r\n                          </mat-form-field>                           \r\n                        </div>                           \r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                         <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Date of Birth*</mat-label>\r\n                            <!-- <mat-card class=\"inputMatName marginAlign\"> -->\r\n                              <input matInput name=\"date\" readonly formControlName=\"dateOfBirth\" placeholder=\"DD/MM/YYYY\"\r\n                            [matDatepicker]=\"appDatepicker\" [max]=\"tomorrow\" [max]=\"maxDate\" />                            \r\n                              <!-- <div fxFlex=\"8%\" id=\"toggle\"> -->\r\n                                 <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #appDatepicker></mat-datepicker>\r\n                              <!-- </div> -->\r\n                            <!-- </mat-card>                             -->\r\n                            <mat-error *ngIf=\"!applicant.get('dateOfBirth').valid && applicant.get('dateOfBirth').touched\">\r\n                               &nbsp;&nbsp;  Date of Birth is Required!\r\n                            </mat-error>    \r\n                          </mat-form-field>                                                  \r\n                          </div>                           \r\n                                                 \r\n                      </div>\r\n\r\n                      <!-- <div class=\"p-1\" >\r\n                         <div class=\"flex-grow-1\">\r\n                      <mat-hint class=\"p-3\">Birth Country*</mat-hint>\r\n                      <mat-card class=\"widthCard inputMatName\">\r\n                         <mat-select name=\"birthCountry\" formControlName=\"birthCountry\" placeholder=\"Select\" required disableOptionCentering>\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                          <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                      {{country}}\r\n                                    </mat-option>\r\n                        </mat-select>\r\n                      </mat-card>\r\n                      <mat-error *ngIf=\"!applicant.get('birthCountry').valid && applicant.get('birthCountry').touched\" >\r\n                        &nbsp;&nbsp; Birth Country is Required!\r\n                      </mat-error>\r\n                    </div>                            \r\n                      </div> -->\r\n\r\n                      <div  class=\"pb-1\" >\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                        <mat-label >Birth Country</mat-label>\r\n                        <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                          <div fxFlex=\"20\" >\r\n                            <div matPrefix>\r\n                              <div *ngIf=\"birthCountryImage\" class=\"currency-flag currency-flag-{{birthCountryImage}}\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <mat-select name=\"birthCountry\" formControlName=\"birthCountry\" placeholder=\"Select\" required\r\n                          (selectionChange)=\"onSelectionBirthCountry($event.value)\" disableOptionCentering>\r\n                               <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                  {{country}}\r\n                                </mat-option>\r\n                          </mat-select>\r\n                        <!-- </mat-card> -->\r\n                          <mat-error *ngIf=\"!applicant.get('countryOfResidence').valid && applicant.get('countryOfResidence').touched\">\r\n                            Country of Residence is Required!\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Resident Status*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                         <mat-select name=\"residenceType\" formControlName=\"residenceStatus\" disableOptionCentering>\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                          <mat-option *ngFor=\"let residence of arrayResidence\" [value]=\"residence\">\r\n                              {{residence}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!applicant.get('residenceStatus').valid && applicant.get('residenceStatus').touched\" >\r\n                        &nbsp;&nbsp; Resident Status  is Required!\r\n                      </mat-error>\r\n                          </mat-form-field>\r\n                    </div>           \r\n\r\n                      </div>  \r\n\r\n\r\n              \r\n                      <!-- <div class=\"pb-1\">\r\n                         <div class=\"flex-grow-1\">\r\n                      <mat-hint class=\"p-3\">Country of Residence*</mat-hint>\r\n                      <mat-card class=\"widthCard inputMatName\">\r\n                         <mat-select name=\"resident\" formControlName=\"countryOfResidence\" disableOptionCentering>\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                           <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                              {{country}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                      </mat-card>\r\n                      <mat-error *ngIf=\"!applicant.get('countryOfResidence').valid && applicant.get('countryOfResidence').touched\" >\r\n                        &nbsp;&nbsp;  Country of Residence  is Required!\r\n                      </mat-error>\r\n                    </div>                          \r\n                      </div>   -->\r\n\r\n                      <div  class=\"pb-1\" >\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label >Country of Residence*</mat-label>\r\n                          <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                            <div fxFlex=\"20\">\r\n                              <div matPrefix>\r\n                                <div *ngIf=\"countryResidenceImage\" class=\"currency-flag currency-flag-{{countryResidenceImage}}\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <mat-select name=\"resident\" formControlName=\"countryOfResidence\" required placeholder=\"Select\"\r\n                            (selectionChange)=\"onSelectionCountryOfresidence($event.value)\" disableOptionCentering>\r\n                                 <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                    {{country}}\r\n                                  </mat-option>\r\n                            </mat-select>\r\n                          <!-- </mat-card> -->\r\n                            <mat-error *ngIf=\"!applicant.get('countryOfResidence').valid && applicant.get('countryOfResidence').touched\">\r\n                              Country of Residence is Required!\r\n                            </mat-error>\r\n                          </mat-form-field>\r\n                          </div>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                         <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>ID Type*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                         <mat-select name=\"idtype\" formControlName=\"idType\" disableOptionCentering\r\n                            (selectionChange)=\"changeIdType(applicant.get('idType').value)\">\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                           <mat-option *ngFor=\"let doc of arrayDocumentType\" [value]=\"doc\">\r\n                              {{doc}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!applicant.get('idType').valid && applicant.get('idType').touched\" >\r\n                        &nbsp;&nbsp;   ID Type is Required!\r\n                      </mat-error>\r\n                          </mat-form-field>\r\n                    </div>                         \r\n                      </div>  \r\n                      <div class=\"pb-1\" *ngIf=\"applicant.get('idType').value == 'Passport'\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>ID Type Valid Till</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginAlign\"> -->\r\n                            <input matInput name=\"date\" readonly formControlName=\"expiryDate\" placeholder=\"ID Type Valid Till\"\r\n                          [matDatepicker]=\"appDatepicker1\" [min]=\"minDate\"  />                            \r\n                            <div fxFlex=\"8%\" id=\"toggle\">\r\n                               <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                            </div>\r\n                          <!-- </mat-card>                             -->\r\n                          <mat-error *ngIf=\"!applicant.get('expiryDate').valid && applicant.get('expiryDate').touched\">\r\n                             &nbsp;&nbsp; Id Valid Till date  is Required!\r\n                          </mat-error> \r\n                          </mat-form-field>                                                     \r\n                        </div>                          \r\n                      </div>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                      <div class=\"pb-1 pt-3\" *ngIf=\"listOfAccounts.length == 0\">\r\n                        <label>Is the applicant a primary customer?</label>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <mat-slide-toggle formControlName=\"primaryCustomer\" \r\n                          [disabled]=\"listOfAccounts.length == 0 ? true : false\">\r\n                        </mat-slide-toggle>\r\n\r\n                        <div class=\"mb-16\"></div>\r\n                      </div>\r\n                      <div class=\"pb-1 topChange\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Customer Prefix*</mat-label>\r\n                          <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                            <mat-select name=\"prefix\" formControlName=\"prefix\" disableOptionCentering>\r\n                            <mat-option value=\"\">Select</mat-option>\r\n                            <mat-option *ngFor=\"let prefix of arrayPrefix\" [value]=\"prefix\">\r\n                              {{prefix}}\r\n                            </mat-option>\r\n                            </mat-select>\r\n                          <!-- </mat-card> -->\r\n                          <mat-error *ngIf=\"!applicant.get('prefix').valid && applicant.get('prefix').touched\" >\r\n                          &nbsp;&nbsp; Prefix is Required!\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                        </div>     \r\n                      </div>\r\n                      <!-- <div class=\"pb-1\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-hint class=\"p-3\">First Name*</mat-hint>\r\n                          <mat-card class=\"inputMatName\">\r\n                          <input matInput name=\"fname\" formControlName=\"firstName\" placeholder=\"First Name\"\r\n                            (keypress)=\"letterOnly($event)\" />                             \r\n                          </mat-card> \r\n                          <mat-error *ngIf=\"!applicant.get('firstName').valid && applicant.get('firstName').touched\">\r\n                               First Name is Required!\r\n                          </mat-error>                           \r\n                        </div>                          \r\n                      </div> -->\r\n\r\n\r\n                      <div class=\"pb-1\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label >Middle Name</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                          <input matInput name=\"mname\" formControlName=\"middleName\" placeholder=\"Middle Name\"\r\n                            (keypress)=\"letterOnly($event)\" />                                \r\n                          <!-- </mat-card> -->\r\n                          </mat-form-field>\r\n                        </div>                         \r\n                      </div>\r\n\r\n\r\n                      <div class=\"pb-1\">\r\n                         <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label >Gender*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                          <mat-select name=\"gender\" formControlName=\"gender\" disableOptionCentering>\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                            <mat-option *ngFor=\"let gender of arrayGender\" [value]=\"gender\">\r\n                              {{gender}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!applicant.get('gender').valid && applicant.get('gender').touched\" >\r\n                        &nbsp;&nbsp;   Gender is Required!\r\n                      </mat-error>\r\n                          </mat-form-field>\r\n                    </div> \r\n                        \r\n                      </div>  \r\n                      <div class=\"pb-1\">\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Birth Place*</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                          <input matInput name=\"bplace\" formControlName=\"placeOfBirth\" placeholder=\"Birth Place\" \r\n                          oninput=\"this.value = this.value.replace(/[^A-Za-z,.;'&/.() ]|^ /g,'')\"/>                           \r\n                          <!-- </mat-card>  -->\r\n                          <mat-error *ngIf=\"!applicant.get('placeOfBirth').valid && applicant.get('placeOfBirth').touched\">\r\n                              Last Name is Required!\r\n                          </mat-error> \r\n                          </mat-form-field>                          \r\n                        </div>                         \r\n                      </div>\r\n\r\n                      <!-- <div class=\"pb-1\">\r\n                        <div class=\"flex-grow-1\">\r\n                      <mat-hint class=\"p-3\">Citizenship By*</mat-hint>\r\n                      <mat-card class=\"widthCard inputMatName\">\r\n                          <mat-select name=\"citizen\" formControlName=\"nationality\" placeholder=\"Select\" disableOptionCentering>\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                            <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                              {{country}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                      </mat-card>\r\n                      <mat-error *ngIf=\"!applicant.get('nationality').valid && applicant.get('nationality').touched\" >\r\n                        &nbsp;&nbsp;  Citizenship By is Required!\r\n                      </mat-error>\r\n                    </div>                         \r\n                      </div> -->\r\n\r\n                      <div  class=\"pb-1\" >\r\n                        <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Citizenship By</mat-label>\r\n                          <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                          <div fxFlex=\"20\">\r\n                            <div matPrefix>\r\n                              <div *ngIf=\"citizenshipImage\" class=\"currency-flag currency-flag-{{citizenshipImage}}\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <mat-select name=\"citizen\" formControlName=\"nationality\" placeholder=\"Select\" required\r\n                          (selectionChange)=\"onSelectionCitizenship($event.value)\" disableOptionCentering>\r\n                               <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                  {{country}}\r\n                                </mat-option>\r\n                          </mat-select>\r\n                        <!-- </mat-card> -->\r\n                          <mat-error *ngIf=\"!applicant.get('nationality').valid && applicant.get('nationality').touched\">\r\n                            Citizenship is Required!\r\n                          </mat-error>\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"pb-1\" >\r\n                         <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Marital Status*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                          <mat-select name=\"maritalStatus\" formControlName=\"maritalStatus\" required disableOptionCentering>\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                             <mat-option *ngFor=\"let status of maritalStatusList\" [value]=\"status\">{{ status }}\r\n                                  </mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!applicant.get('maritalStatus').valid && applicant.get('maritalStatus').touched\" >\r\n                        &nbsp;&nbsp;   Marital Status is Required!\r\n                      </mat-error>\r\n                          </mat-form-field>\r\n                    </div>                            \r\n                      </div>\r\n                      <div class=\"pb-1\">\r\n                         <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Occupation Type*</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                          <input matInput name=\"occupation\" formControlName=\"occupationType\"\r\n                            placeholder=\"Occupation Type\" \r\n                            oninput=\"this.value = this.value.replace(/[^A-Za-z,.;'&/.() ]|^ /g,'')\"/>                           \r\n                          <!-- </mat-card>  -->\r\n                          <mat-error *ngIf=\"!applicant.get('occupationType').valid && applicant.get('occupationType').touched\">\r\n                               Occupation Type is Required!\r\n                          </mat-error> \r\n                          </mat-form-field>                          \r\n                        </div>                          \r\n                      </div>\r\n\r\n                      <div class=\"pb-1\">\r\n                         <div class=\"flex-grow-1\">\r\n                          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Unique ID *</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                          <input matInput name=\"uniqueidentity\" formControlName=\"idNumber\" placeholder=\"Unique ID\"\r\n                            maxlength=\"12\" (keypress)=\"keyPressAlphanumeric($event)\" />                         \r\n                          <!-- </mat-card>  -->\r\n                          <mat-error *ngIf=\"applicant.get('idNumber').touched && !applicant.get('idNumber').valid\">\r\n                            <div *ngIf=\"applicant.get('idNumber').hasError('required')\">Unique ID is Required!</div>\r\n                            <div *ngIf=\"applicant.get('idNumber').hasError('pattern')\">This is a alphanumeric field\r\n                            </div>\r\n                          </mat-error>  \r\n                          </mat-form-field>                       \r\n                        </div>                           \r\n                      </div> \r\n                    </div>\r\n                  </div>\r\n                  <!-- Address Section start-->\r\n                  <mat-accordion>\r\n                    <mat-expansion-panel class=\"mb-8\" expanded=\"true\">                     \r\n                        <mat-card-title>\r\n                          <fieldset class=\"marginChange\">\r\n                          <legend visible=\"true\">Communication Address</legend>\r\n                          </fieldset>\r\n                        </mat-card-title>\r\n                      \r\n\r\n                      <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" >\r\n                          <div class=\"pb-1\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label >Address Line 1*</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                           <textarea matInput formControlName=\"address1\" placeholder=\"Address 1\"></textarea>\r\n                          <!-- </mat-card> -->\r\n                          <mat-error *ngIf=\"!applicant.get('address1').valid  && applicant.get('address1').touched && applicant.get('address1').hasError('required')\">\r\n                            Address Line 1 is Required!</mat-error> \r\n                            <mat-error *ngIf=\" applicant.get('address1').touched && applicant.get('address1').hasError('pattern')\">\r\n                             Please Enter Valid Address \r\n                            </mat-error>\r\n                              </mat-form-field>\r\n                        </div>                              \r\n                          </div>\r\n                         \r\n                          <div class=\"pb-1\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Residence Type*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                        <mat-select name=\"addressType\" formControlName=\"addressType\" disableOptionCentering>\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                          <mat-option *ngFor=\"let addressType of arrayAddressType\" [value]=\"addressType\">\r\n                                  {{addressType}}\r\n                                </mat-option>  \r\n                        </mat-select>\r\n                      <!-- </mat-card>                        -->\r\n                      <mat-error *ngIf=\"!applicant.get('addressType').valid && applicant.get('addressType').touched\" >\r\n                        &nbsp;&nbsp; Residence Type is Required!\r\n                      </mat-error>\r\n                              </mat-form-field>\r\n                    </div> \r\n                          </div>\r\n                        \r\n                          <div class=\"pb-1\">\r\n                             <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>State*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                        <mat-select name=\"state\" formControlName=\"state\" disableOptionCentering\r\n                                (selectionChange)=\"getCityName($event.value)\">\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                          <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">{{state.stateName}}\r\n                                </mat-option>\r\n\r\n                        </mat-select>\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\"!applicant.get('state').valid && applicant.get('state').touched\" >\r\n                        &nbsp;&nbsp; State is Required!\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                    </div> \r\n                          </div>\r\n                          \r\n                          <div class=\"pb-1\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label>Zip Code*</mat-label>\r\n                      <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                       <input minlength=\"5\" maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"a_zip\"\r\n                                formControlName=\"zipCode\" onlyNumber placeholder=\"Zip Code\"\r\n                                (keyup)=\"isAllSameDigit($event)\" />\r\n                      <!-- </mat-card> -->\r\n                      <mat-error *ngIf=\" !applicant.controls['zipCode'].valid && \r\n                              applicant.controls['zipCode']?.touched\" >\r\n                        &nbsp;&nbsp; Valid Zip Code is Required!(5-10 digits)\r\n                      </mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                            \r\n                          </div>\r\n\r\n\r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">                            \r\n                          <div class=\"pb-1\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Address Line 2*</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                           <textarea matInput formControlName=\"address2\" placeholder=\"Address 2\"></textarea>\r\n                          <!-- </mat-card> -->\r\n                          <mat-error *ngIf=\"!applicant.get('address2').valid  && applicant.get('address2').touched && applicant.get('address2').hasError('required')\">\r\n                            Address Line 2 is Required!</mat-error> \r\n                            <mat-error *ngIf=\" applicant.get('address2').touched && applicant.get('address2').hasError('pattern')\">\r\n                             Please Enter Valid Address \r\n                            </mat-error>\r\n                              </mat-form-field>\r\n                        </div>\r\n                          </div>\r\n                          \r\n                          <div class=\"pb-1\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label >Country*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                        <mat-select name=\"\" formControlName=\"country\" disableOptionCentering\r\n                                (selectionChange)=\"getStateName($event.value)\"\r\n                                (selectionChange)=\"getCityName($event.value)\">\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                          <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                  {{country}}\r\n                                </mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card>-->\r\n                      <mat-error *ngIf=\"!applicant.get('country').valid && applicant.get('country').touched\" >\r\n                        &nbsp;&nbsp; City is Required!\r\n                      </mat-error>\r\n                              </mat-form-field>\r\n                    </div>                              \r\n                          </div>\r\n                           <div class=\"pb-1\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                      <mat-label >City*</mat-label>\r\n                      <!-- <mat-card class=\"widthCard inputMatName marginChange\"> -->\r\n                        <mat-select name=\"city\" formControlName=\"city\" disableOptionCentering>\r\n                          <mat-option value=\"\">Select</mat-option>\r\n                          <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}</mat-option>\r\n                        </mat-select>\r\n                      <!-- </mat-card>                        -->\r\n                      <mat-error *ngIf=\"!applicant.get('city').valid && applicant.get('city').touched\" >\r\n                        &nbsp;&nbsp; City is Required!\r\n                      </mat-error>\r\n                              </mat-form-field>\r\n                    </div>                              \r\n                          </div>     \r\n\r\n                        </div>\r\n                      </div>\r\n                    </mat-expansion-panel>\r\n                  </mat-accordion>\r\n                  <!-- Address Section end -->\r\n                  <!-- Contact Information -->\r\n                  <mat-accordion>\r\n                    <mat-expansion-panel class=\"mb-8\" expanded=\"true\">                     \r\n                        <mat-card-title>\r\n                          <fieldset class=\"marginChange\">\r\n                          <legend visible=\"true\">Contact Information</legend>\r\n                          </fieldset>\r\n                        </mat-card-title>                      \r\n\r\n                      <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                             <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Mobile Number*</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange \"> -->\r\n                           <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput\r\n                                formControlName=\"phoneNumber\" name=\"phone\" placeholder=\"Mobile Number\" />                             \r\n                          <!-- </mat-card> -->\r\n                          <mat-error *ngIf=\"!applicant.get('phoneNumber').valid  && applicant.get('phoneNumber').touched\">\r\n                                 Please, Enter 10 digit Mobile Number!\r\n                              </mat-error> \r\n                              <mat-error *ngIf=\"applicant.get('phoneNumber').value == '0000000000'\">\r\n                                &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                             </mat-error> \r\n                              </mat-form-field>      \r\n                                                      \r\n                        </div>                             \r\n                          </div>\r\n                          <div class=\"pb-1\">                          \r\n                          <div class=\"flex-grow-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>E-mail*</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                           <input matInput name=\"email\" formControlName=\"primaryEmailAdress\" placeholder=\"e-mail\" />                             \r\n                          <!-- </mat-card> -->\r\n                          <mat-error *ngIf=\"!applicant.get('primaryEmailAdress').valid  && applicant.get('primaryEmailAdress').touched\">\r\n                                E-mail is Required!\r\n                              </mat-error>  \r\n                            </mat-form-field>                          \r\n                        </div>                                 \r\n                          </div>\r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n                          <div class=\"pb-1\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <mat-label>Landline Number</mat-label>\r\n                          <!-- <mat-card class=\"inputMatName marginChange\"> -->\r\n                           <input maxlength=\"10\" (keypress)=\"onKeyPress1($event)\" matInput name=\"mobile\"\r\n                                formControlName=\"landlineNumber\" placeholder=\"Landline Number\" />                                \r\n                          <!-- </mat-card>    -->\r\n                          <mat-error *ngIf=\"applicant.get('landlineNumber').value == '0000000000'\">\r\n                            &nbsp; &nbsp; Please Enter Correct Landline Number\r\n                         </mat-error>    \r\n                              </mat-form-field>                         \r\n                        </div>                            \r\n                              \r\n                              <!-- <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('required')\">\r\n                                Landline Number is Required!\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\"applicant.get('landlineNumber').hasError('pattern')\">\r\n                                Please, Enter 10 digit Landline Number!\r\n                              </mat-error> -->\r\n                            \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </mat-expansion-panel>\r\n                    <div class=\"pb-1\">\r\n\r\n                      <!-- <button\r\n                      mat-button\r\n                      color=\"warn\"\r\n                      (click)=\"removeApplicant()\"\r\n                    >\r\n                      <mat-icon></mat-icon> RESET APPLICANT\r\n                    </button> -->\r\n                    </div>\r\n                    <div class=\"pb-1\">\r\n                      <a mat-button color=\"primary\" class=\"paddingChange\"\r\n                      *ngIf=\"applicant.invalid ||isDuplicateCIF || disableSaveBtn; else openSave\"\r\n                       [disabled]=\"applicant.invalid||isDuplicateCIF\"(click)=\"onSubmit()\">\r\n                         ADD APPLICANT\r\n                      </a>\r\n\r\n                      <ng-template #openSave>\r\n                        <a mat-button color=\"primary\" (click)=\"onSubmit()\" class=\"paddingChange\">\r\n                           ADD APPLICANT\r\n                        </a>\r\n                        </ng-template>\r\n\r\n                      <!-- <button\r\n                      mat-button\r\n                      color=\"warn\"\r\n                      (click)=\"removeApplicant()\"\r\n                    >\r\n                      <mat-icon></mat-icon> RESET APPLICANT\r\n                    </button> -->\r\n                    </div>\r\n\r\n                  </mat-accordion>\r\n                  <!-- Contact Information -->\r\n                </div>\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n\r\n          </div>\r\n\r\n          <!-- <pre><code>{{applicant.getRawValue() | json}}</code></pre> -->\r\n          \r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n      <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n        Back\r\n      </button>\r\n      <ng-container *ngIf=\"customerInfoForm.get('ownership').value == 'Joint'; else hideBtn\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"goToNext()\" class=\"Nextbtn\"\r\n        [disabled]=\"customerInfoForm.get('numOfApplicants').value === listOfAccounts.length ? 'false' : 'true'\">\r\n          Next\r\n        </button>\r\n      </ng-container>\r\n      <ng-template #hideBtn>\r\n        <button mat-raised-button color=\"primary\" (click)=\"goToNext()\" class=\"Nextbtn\"\r\n        [disabled]=\"customerInfoForm.get('numOfApplicants').value === listOfAccounts.length ? 'false' : 'true'\">\r\n          Next\r\n        </button>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { PostOfferAmendmentSummaryComponent } from 'app/views/loan-account/post-offer-amend-stage/post-offer-amendment-summary/post-offer-amendment-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-repayment-schedule',\r\n  templateUrl: './repayment-schedule.component.html',\r\n  styleUrls: ['./repayment-schedule.component.scss']\r\n})\r\nexport class RepaymentScheduleComponent implements OnInit {\r\n  scheduleLink: FormGroup;\r\n  data: any;\r\n  // loanAccountId: any;\r\n  scheduleStatus: any;\r\n  scheduleForm: FormGroup;\r\n  loanaccountId: any;\r\n  loanInfo: any;\r\n \r\n  constructor( private fb: FormBuilder, private ls: LocalStoreService,private router: Router, private formBuilder: FormBuilder,public dialogRef: MatDialogRef<PostOfferAmendmentSummaryComponent>, private apiService: ApiService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountId = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    this.scheduleStatus = JSON.parse(localStorage.getItem('fetchRescheduleData'));\r\n    console.log(this.scheduleStatus)\r\n    console.log(this.scheduleStatus[0].paymentDate)\r\n    // if(this.scheduleStatus.length > 0){\r\n    //   for(let i=0; i < this.scheduleStatus.length; i++){\r\n    //     this.scheduleStatus[i]\r\n    //     console.log(this.scheduleStatus[i])\r\n    //   }\r\n      \r\n    // }\r\n  }\r\n\r\n  close(){\r\n    this.dialogRef.close();\r\n    this.router.navigateByUrl('/loan/account/application-enrichment/loan-repayment');\r\n  }\r\n}\r\n","<div fxLayout=\"row\" class=\"contain\">\r\n    <mat-icon class=\"backIcon\" (click)=\"close()\">close</mat-icon>\r\n</div>\r\n\r\n<form>\r\n    <table class=\"cart-table default-bg mat-elevation-z0\">\r\n      <tbody>\r\n        <tr >\r\n          <div >\r\n            <ng-container >\r\n              <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"heading\" >\r\n                <th class=\"label\">Payment Number</th>\r\n                <th class=\"label\">Payment Date</th>\r\n                <th class=\"label\">Principal To Be Paid</th>\r\n                <!-- <th class=\"label\">Accumulated Interest</th>\r\n                <th class=\"label\">Balance</th>\r\n                <th class=\"label\">Interest Paid</th> -->\r\n              </div>\r\n              <div *ngFor=\"let data of scheduleStatus\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <td class=\"headingText1\" >{{data.paymentNumber}}</td>\r\n                <td class=\"headingText2\" >{{data.paymentDate}}</td>\r\n                <td class=\"headingText3\" >{{data.principalPaid}}</td>\r\n                <!-- <td class=\"headingText\">{{data.accumulatedInterest}}</td>\r\n                <td class=\"headingText\">{{data.balance}}</td>\r\n                <td class=\"headingText\">{{data.interestPaid}}</td> -->\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account-approval-details-summary',\r\n  templateUrl: './account-approval-details-summary.component.html',\r\n  styleUrls: ['./account-approval-details-summary.component.scss']\r\n})\r\nexport class AccountApprovalDetailsSummaryComponent implements OnInit {\r\n\r\n  previousUrl: string = '';\r\n  userRecommendation={'userRecommendation':'Recomended For Approval'};\r\n  details = {\r\n    'requestedLoanAmount' :'$200,000',\r\n    'loanTenure'          :'5 years',\r\n    'rateOfIntrested'     :'5%',\r\n    'loanAmountRecomended':'$500,000',\r\n    'approvedLoanAmount'  :'$200,000',\r\n    'findLoanTenure'      :'5 years',\r\n    'finalRate'           :'5%',\r\n    'applicantName'       :'ABC',\r\n    'applicantType'       :'Home Loan',\r\n    'accountBranch'       : '000',\r\n    'productCode'         : 'HMN 03',\r\n    'productName'         : 'New Home Loan',\r\n    'rateOfIntrest'       :'5.9',\r\n    'loanAmount'          :'$500,000',\r\n    'installmentType'     :'EMI',\r\n    'stage'               :'HML/Stage1',\r\n    'installmentAmount'   :'$100,000',\r\n    'installmentFreq'     :'Monthly',\r\n    'assessmentApprovedMethod':'Internal Score Card',\r\n    'userAction'          :'Action',    \r\n    'date'                :'12/2/2021',\r\n    'charge'              :'$200,000',\r\n    'principle'           :'$100,000',\r\n    'intrest'             :'$100,000',    \r\n                \r\n  };\r\n  \r\n  constructor(private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`${this.previousUrl}`]);\r\n  }\r\n\r\n  accountApprovalStageSummary(){\r\n    this.router.navigate([`/loan/account-approval/list`]);\r\n  }\r\n}\r\n","<div>\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"100\">\r\n            <div class=\"propic text-center\">\r\n                <img src=\"assets/images/svg/undraw_secure_files_re_6vdh.svg\" alt=\"\" class=\"w-90\" />\r\n            </div>\r\n            <div class=\"profile-title text-center mt-8\">\r\n                <div class=\"main-title\"><b>Account Approval Summary Details</b></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"full-width\"> \r\n    <div fxLayout=\"row\">\r\n        <h4 class=\"paraFont\">Assessment Details</h4>\r\n    </div>\r\n\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n        \r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                            <mat-card class=\"inputCard\">\r\n\r\n                                                <div fxLayout=\"row wrap\">\r\n                                                    \r\n                                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                        <ng-container>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">Requested Loan Amount\r\n                                                                </mat-hint><br>\r\n                                                                <mat-hint class=\"valueText\">{{details.requestedLoanAmount}}</mat-hint>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">Loan Tenure</mat-hint><br>\r\n                                                                <mat-hint class=\"valueText\">{{details.loanTenure}} </mat-hint>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">Rate Of Interest\r\n                                                                </mat-hint><br>\r\n                                                                <mat-hint class=\"valueText\">{{details.rateOfIntrested}} </mat-hint>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">System Recommendation\r\n                                                                </mat-hint><br>\r\n                                                                <mat-hint class=\"valueText\">{{userRecommendation.userRecommendation}} </mat-hint>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">User Recommendation\r\n                                                                </mat-hint><br>\r\n                                                                <mat-hint class=\"valueText\">{{userRecommendation.userRecommendation}} </mat-hint>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">Loan Amount Recommended\r\n                                                                </mat-hint><br>\r\n                                                                <mat-hint class=\"valueText\">{{details.loanAmountRecomended}} </mat-hint>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">Approved Loan Amount\r\n                                                                </mat-hint><br>\r\n                                                                <mat-hint class=\"valueText\">{{details.approvedLoanAmount}} </mat-hint>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">Final Loan tenure\r\n                                                                </mat-hint><br>\r\n                                                                <mat-hint class=\"valueText\">{{details.findLoanTenure}} </mat-hint>\r\n                                                            </div>\r\n                                                            <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                                                <mat-hint class=\"headingText\">Final Rate</mat-hint><br>\r\n                                                                <mat-hint class=\"valueText\">{{details.finalRate}} </mat-hint>\r\n                                                            </div>\r\n                                                            \r\n                                                             \r\n                                                        </ng-container>\r\n                                                    </div> \r\n \r\n                                                </div>\r\n                                            </mat-card>\r\n                                        </div>\r\n\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <br>\r\n    <div class=\"fullcard\">\r\n   <div fxLayout=\"row\">\r\n        <h4 class=\"paraFont\">Offer Accept / Reject Details</h4>\r\n    </div>\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" >\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"headingText\">Applicant Name</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.applicantName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"headingText\">Approved Loan Amount</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.approvedLoanAmount}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.loanTenure}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Installment Type</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.installmentType}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Installment Frequency</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.installmentFreq}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Rate Of Interest(in %)</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.rateOfIntrested}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Principal</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.principle}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Interest</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.intrest}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Installment Amount</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.installmentAmount}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Charges</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.charge}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Offer Issue Date</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.date}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Generate Date</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.date}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Customer Response</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{userRecommendation.userRecommendation}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Date Of Offer Accept/Reject</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.date}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Offer Expiry Date</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.date}}</mat-hint>\r\n                                            </div>\r\n                                        </ng-container>\r\n                                    </div>\r\n                            </div>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n    \r\n    <br>\r\n    <div class=\"fullcard\">\r\n   <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Loan Summary Details </h4>\r\n        </div>\r\n    </div>\r\n   <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"100%\">\r\n            <mat-card class=\"chequecard\">\r\n                <mat-card-content>\r\n                    <div class=\"full-width\" >\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"headingText\">Applicant Name</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.applicantName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"headingText\">Account Type</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.applicantType}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Account Branch</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.accountBranch}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Product Code</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.productCode}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Product Name</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.productName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Host Product Code</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.productCode}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Host Product Description</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.productName}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"headingText\">Loan Amount</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.loanAmount}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.loanTenure}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Interest Rate(in %)</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.rateOfIntrested}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Repayment Method</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.assessmentApprovedMethod}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Repayment Frequency</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.installmentFreq}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Application Date</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.date}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Assessment Approval Method</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.assessmentApprovedMethod}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Offer Approved Date</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.date}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"headingText\">Approver ID</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.productCode}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Stage</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.stage}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Date</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.date}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">Offer Issue Date</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.date}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                <mat-hint class=\"headingText\">User Recommendation</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{userRecommendation.userRecommendation}}</mat-hint>\r\n                                            </div>\r\n                                            <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                <mat-hint class=\"headingText\">User Action</mat-hint>\r\n                                                <br>\r\n                                                <mat-hint class=\"valueText\">{{details.userAction}}</mat-hint>\r\n                                            </div>\r\n                                            \r\n                                        </ng-container>\r\n                                    </div>\r\n                            </div>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>    \r\n    <br>\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16x\" class=\"mt-32\">\r\n            <button mat-button rounded color=\"grey\" (click)=\"goBack()\">\r\n                Back\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" type=\"submit\" (click)=accountApprovalStageSummary()>\r\n                Done\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-offer-assessment',\r\n  templateUrl: './offer-assessment.component.html',\r\n  styleUrls: ['./offer-assessment.component.scss']\r\n})\r\nexport class OfferAssessmentComponent implements OnInit {\r\n  offerAssessmentFormGroup: FormGroup;\r\n  disableDone:boolean =true;\r\n  isAssesmentDetailsScreen: boolean = false;\r\n  isOfferIssueScreen: boolean = false; \r\n  isOfferIssueRejectScreen: boolean  = false;\r\n  arraySystemRecommendation:any[]=['Approved','Rejected'];\r\n \r\n  \r\n    \r\n    \r\n    constructor( private formBuilder: FormBuilder,\r\n      private ls: LocalStoreService,\r\n      private apiService: ApiService,\r\n      private snack: MatSnackBar, \r\n      private router: Router) {\r\n      this.offerAssessmentFormGroup = this.formBuilder.group({\r\n        loanAccountId:['520',[Validators.required]],\r\n        rateOfInterest : ['',[Validators.required]],\r\n        requestedLoanAmount: ['',[Validators.required]],\r\n        loanTenure: ['',[Validators.required]],\r\n        approvedLoanAmount:['',[Validators.required]],\r\n        userRecommendation:['',[Validators.required]],\r\n        systemRecommendation:['',[Validators.required]],\r\n        loanAmountRecommendation:['',[Validators.required]]\r\n      })\r\n     }\r\n\r\n\r\n     \r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/loan/account/offerstage/list\"]);\r\n  }\r\n  goNext(){\r\n   \r\n      this.apiService.updateAssessment(this.offerAssessmentFormGroup.value).subscribe(data => {\r\n        console.log(\"data\",data);\r\n        if(data != null){\r\n          this.snack.open('Data Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          //this.cdr.markForCheck();\r\n        }\r\n      })\r\n      \r\n     \r\n    \r\n \r\n     \r\n    \r\n    this.ls.setItem('assessmentScreen', true);\r\n    this.router.navigate([\"/loan/account/list/offer-issue/offerissue\"]);\r\n  }\r\n  \r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img\r\n        src=\"assets/images/svg/undraw_report_mx0a.svg\"\r\n        alt=\"\"\r\n        class=\"w-80\"\r\n      />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title\"><b>Assessment Details</b></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"column\">\r\n  <form fxLayout=\"column\"  [formGroup]=\"offerAssessmentFormGroup\">\r\n      <div fxFlex=\"100\">\r\n          <mat-card  fxLayout=\"column\" style=\"border-radius: 30px; margin-right: 1.5cm;\">\r\n           <mat-card-title class=\"\">\r\n              <div class=\"card-title-text\" >Assessment Details<mat-divider></mat-divider></div>\r\n           </mat-card-title>\r\n        \r\n          <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <label  class=\"hint\">Request Loan Amount</label>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input matInput formControlName=\"requestedLoanAmount\" class=\"alignment\" type=\"text\" placeholder=\"Request Loan Amount\" />\r\n                </mat-card>\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <label  class=\"hint\">Loan Tenure</label>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input matInput formControlName=\"loanTenure\" class=\"alignment\" type=\"text\" placeholder=\"Loan Tenure\"/>\r\n                </mat-card>\r\n              </div>\r\n          </div>\r\n          <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n          <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n              <label  class=\"hint\">Rate Of Interest</label>\r\n              <mat-card class=\"inputMatName\">\r\n                <input matInput formControlName=\"rateOfInterest\" class=\"alignment\" type=\"text\" placeholder=\"Rate Of Interest\"/>\r\n              </mat-card>\r\n            </div>\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n              <label class=\"hint\">System Recommendation</label>\r\n              <mat-card class=\"inputMatName\">\r\n                <mat-select placeholder=\"Recommended for Approval\" formControlName=\"systemRecommendation\" disableOptionCentering>\r\n                  <mat-option *ngFor=\"let systemRecommendation of arraySystemRecommendation\" [value]=\"systemRecommendation\"> \r\n                    {{systemRecommendation}} \r\n                  </mat-option> \r\n                </mat-select>\r\n                <!-- <input matInput formControlName=\"systemRecommendation\" class=\"alignment\" type=\"text\" placeholder=\"System Recommendation\"/> -->\r\n              </mat-card>\r\n            </div>\r\n          </div>\r\n          <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n           <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n            <label class=\"hint\">User Recommendation</label>\r\n            <mat-card class=\"inputMatName\">\r\n              <mat-select placeholder=\"User Recommendation\" formControlName=\"userRecommendation\" disableOptionCentering>\r\n                <mat-option *ngFor=\"let systemRecommendation of arraySystemRecommendation\" [value]=\"systemRecommendation\"> \r\n                  {{systemRecommendation}} \r\n                </mat-option> \r\n              </mat-select>\r\n              <!-- <input matInput formControlName=\"userRecommendation\" class=\"alignment\" type=\"text\" placeholder=\"Rate Of Interest\"/> -->\r\n            </mat-card>\r\n          </div>\r\n          <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n            <label class=\"hint\">Loan Amount Recommended</label>\r\n            <mat-card class=\"inputMatName\">\r\n               <input matInput formControlName=\"loanAmountRecommendation\" class=\"alignment\" type=\"text\" placeholder=\"loanAmountRecommendation\"/> \r\n            </mat-card>\r\n           \r\n          </div>\r\n          </div>\r\n          <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n           <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n          <label  class=\"hint\">Approved Loan Amount</label>\r\n          <mat-card class=\"inputMatName\">\r\n            <input matInput formControlName=\"approvedLoanAmount\" class=\"alignment\" type=\"text\" placeholder=\"Approved Loan Amount\"/>\r\n          </mat-card>\r\n        </div>\r\n      \r\n          </div>\r\n        \r\n          </mat-card>\r\n        </div>\r\n        <div class=\"button\">\r\n          <!-- -->\r\n          <button mat-button class=\"Back\" (click)=\"goBack()\" >Back</button>\r\n          <button mat-stroked-button class=\"Next\" (click)=\"goNext()\" [disabled]=\"!offerAssessmentFormGroup.valid\">Next</button>\r\n      </div>\r\n  </form>\r\n</div>","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { AccountService } from '../../account.service';\r\n\r\n@Component({\r\n  selector: 'app-valuation-of-assets',\r\n  templateUrl: './valuation-of-assets.component.html',\r\n  styleUrls: ['./valuation-of-assets.component.scss']\r\n})\r\nexport class ValuationOfAssetsComponent implements OnInit {\r\n  \r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  lastData:any;\r\n  accountForm: FormGroup;\r\n  isValuationofAsset: any;\r\n  showEditOption: boolean = false;\r\n  loanaccountID: any;\r\n  loanInfo: any;  \r\n  constructor(private formBuilder: FormBuilder,private ls: LocalStoreService,\r\n    private snack: MatSnackBar,private loader: AppLoaderService,private api: ApiService, private apiService: ApiService,public datepipe: DatePipe, private router: Router,private accountService:AccountService) { \r\n      this.accountForm = this.formBuilder.group({\r\n      bankValuation : [''],\r\n      assetType: [''],\r\n      propertyAreaSize: [''],\r\n      mktValOfAsset: [''],\r\n      assetValue: [''],\r\n      valuationDate: [''],\r\n      actualPropertyAreaSize: [''],\r\n      actualPropertyAreaInUnits: [''],\r\n      borrowersMktValOfAsset:[''],\r\n      forcedSaleValue: [''],\r\n      faceValOfAsset: [''],\r\n     // propertyAreaInUnits: ['']\r\n      })\r\n     \r\n      \r\n    }\r\n\r\n  ngOnInit(): void {\r\n    /*this.isValuationofAsset = this.ls.getItem('VALUATION_OF_ASSET_DONE');\r\n    if(this.isValuationofAsset == false){\r\n      this.buildAccountForm();\r\n    }\r\nelse{\r\n  this.gettingValuationDetail();\r\n}*/\r\n//this.gettingValuationDetail();\r\nthis.loanaccountID = this.ls.getItem('loanAccountId');\r\nthis.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\nconsole.log(this.loanInfo);\r\nif(this.loanInfo){\r\n  this.loanaccountID = this.loanInfo.loanAccountId;\r\n}\r\nlet isValuationofAsset: boolean = JSON.parse(this.ls.getItem('VALUATION_OF_ASSET_DONE'));\r\n    //if (this.legalOpinionId != null && isValuationofAsset) {\r\n      if (this.loanaccountID != null && isValuationofAsset) {\r\n      this.showEditOption = true;\r\n      setTimeout(() => {\r\n        this.gettingValuationDetail();\r\n      }, 10);\r\n      \r\n    }\r\n    else {\r\n      console.log(\"else\");\r\n      this.showEditOption = false;\r\n      this.buildAccountForm();\r\n    }\r\n   \r\n\r\n    this.lastUpdateByCif();\r\n  }\r\n\r\n  gettingValuationDetail() {\r\n   /* this.api.gettingValuationDetails('200')\r\n      .subscribe((resp: any) => {\r\n       console.log(resp);\r\n       this.buildAccountForm(resp,true);\r\n      });*/\r\n      this.loader.open();\r\n    this.api.gettingValuationDetails(this.loanaccountID)\r\n      .subscribe((resp: any) => {\r\n        this.loader.close();\r\n       console.log(resp);\r\n       this.buildAccountForm(resp,true);\r\n      }, (err: any) => {\r\n        this.loader.close();\r\n      });\r\n  }\r\n\r\n  buildAccountForm(data?,isResponse?:boolean) {\r\n    console.log(data);\r\n    let applicationDate = data ? moment(data.valuationDate).format() : '';\r\n    //let valuation_date= new Date(data.valuationDate).toISOString().substring(0, 10);\r\n    this.accountForm = this.formBuilder.group({\r\n      actualPropertyAreaInUnits: [data? data.actualPropertyAreaInUnits:'',Validators.required],\r\n      actualPropertyAreaSize:[data? data.actualPropertyAreaSize:'',Validators.required],\r\n      assetType:[data? data.assetType:'',Validators.required],\r\n      assetValue:[data? data.assetValue:'',Validators.required],\r\n      bankValuation:[data? data.bankValuation:'',Validators.required],\r\n      borrowersMktValOfAsset:[data? data.borrowersMktValOfAsset:'',Validators.required],\r\n      forcedSaleValue:[data? data.forcedSaleValue:'',Validators.required],\r\n      faceValOfAsset:[data? data.faceValOfAsset:'',Validators.required],\r\n      loanAccountId:[ this.loanaccountID],\r\n     // loanAccountId:[data?data.loanaccountID:''],\r\n      mktValOfAsset:[data? data.mktValOfAsset:'',Validators.required],\r\n     // propertyAreaInUnits:[data? data.propertyAreaInUnits:'',Validators.required],\r\n      propertyAreaSize:[data? data.propertyAreaSize:'',Validators.required],\r\n      valuationDate:[data? applicationDate:'',Validators.compose([ Validators.required, Validators.min(this.lastData)])],\r\n      valuationId:[data? data.valuationId:'']\r\n    });\r\n    console.log(\"this.form\",this.accountForm)\r\n \r\n  }\r\n\r\n  OnSubmit(val){\r\n    console.log(val,\"Values\");\r\n    val.valuationDate= moment(val.valuationDate).format('YYYY-MMM-DD HH:mm:ss');\r\n    // this.ls.setItem('CREDIT_RATING_DONE', true);\r\n    this.api.saveValuationDetails(val).subscribe((data: any) => {\r\n      console.log(data);\r\n      if (data === 200 || data !== null) {\r\n        this.snack.open(' Valuation Assets Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        //this.ls.setItem('VALUATION_OF_ASSET_DONE', true);\r\n        this.next();\r\n      }\r\n      else if (data === 500) {\r\n        this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\nnext(){\r\n  this.ls.setItem('VALUATION_OF_ASSET_DONE', true);\r\n  this.accountService.refresh.next();\r\n  this.router.navigate([`/loan/account/list/underwritingStage/legalopinion`]);\r\n\r\n}\r\nlastUpdateByCif(){\r\n  this.apiService.getLoanDetails(this.loanaccountID).subscribe((resp:any)=>{\r\n   \r\n   this.lastData = this.datepipe.transform(resp.applicationDate,\"yyyy-MM-dd\");\r\n \r\n  }, (err: any) => {\r\n    console.error(err);\r\n  })\r\n}\r\ngoBack(){\r\n   this.router.navigate([\r\n      `/loan/account/list/underwritingStage/creditrating`,\r\n    ]);\r\n}\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/Mask Group 11.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Valuation of Asset</b></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <!-- <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Valuation Details</div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title> -->\r\n      <!-- <div class=\"divider-line\" id=\"mat-line\">\r\n        <span class=\"mat-title\">Valuation Details</span>\r\n        <mat-divider class=\"mat-line-position\"></mat-divider>\r\n      </div> -->\r\n      <fieldset>\r\n        <legend visible=\"true\">Valuation Details</legend>\r\n    </fieldset>\r\n      <mat-card-content>\r\n        <form  [formGroup]=\"accountForm\">\r\n          <!-- <mat-spinner class=\"spinner\" [diameter]=\"80\" *ngIf=\"showSpinn\"></mat-spinner> -->\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                  <mat-label>Bank Valuation*</mat-label>\r\n                  <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                    <mat-select name=\"bankValuation\" formControlName=\"bankValuation\" \r\n                                disableOptionCentering placeholder=\"Enter Bank Valuation\">\r\n                      <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                      <mat-option value=\"INTERNAL\">Internal</mat-option>\r\n                      <mat-option value=\"EXTERNAL\">External</mat-option>\r\n                    </mat-select>\r\n                  <!-- </mat-card> -->\r\n                  <mat-error *ngIf=\"!accountForm.get('bankValuation').valid && accountForm.get('bankValuation').touched\">\r\n                      Bank Valuation is Required!</mat-error>\r\n                </mat-form-field>\r\n                </div>\r\n              \r\n           <div>\r\n\r\n              <!-- <mat-hint>Property Area</mat-hint> -->\r\n              <div fxLayout=\"row\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"15%\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                    <mat-label>sq</mat-label>\r\n                    <b><input readonly  matInput formControlName=\"sq\" placeholder=\"sq\" /></b>\r\n                  <!-- <mat-card class=\"inputMatName\">\r\n                      Sq\r\n                    </mat-card> -->\r\n                  </mat-form-field>\r\n                </div>\r\n              \r\n              <div class=\"flex-grow-1 gap\" fxFlex=\"83.3%\" >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Property Area*</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                    <input matInput formControlName=\"propertyAreaSize\" class=\"alignment\" \r\n                    (keypress)=_keyPress($event) name=\"remarks\" />\r\n                  <!-- </mat-card> -->\r\n                </mat-form-field>\r\n              </div>\r\n                    <!--<mat-error *ngIf=\"!accountForm.get('propertyAreaSize').valid && accountForm.get('propertyAreaSize').touched\">\r\n                        Property Area is Required!</mat-error>-->\r\n                      </div>\r\n            </div>\r\n         \r\n          <div class=\"flex-grow-1\">\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Asset Valuer*</mat-label>\r\n              <!-- <mat-card class=\"inputMatName\"> -->\r\n\r\n                <!--<input matInput formControlName=\"assetValue\" class=\"alignment\"\r\n                  type=\"text\" name=\"assetValue\" />-->\r\n                  <mat-select name=\"assetValue\" formControlName=\"assetValue\" disableOptionCentering>\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"Bank Manager\">Bank Manager</mat-option>\r\n                    <mat-option value=\"Bank Clerk\">Bank Clerk</mat-option>\r\n                    <mat-option value=\"Bank Accountant\">Bank Accountant</mat-option>\r\n                  </mat-select>\r\n                  \r\n              <!-- </mat-card> -->\r\n              <mat-error *ngIf=\"!accountForm.get('assetValue').valid  && accountForm.get('assetValue').touched\">\r\n                  Asset Valuer is Required!</mat-error>\r\n            </mat-form-field>\r\n            </div>\r\n         \r\n      <div>          \r\n        <div fxLayout=\"row \">\r\n          <div class=\"flex-grow-1\" fxFlex=\"20%\">\r\n            <mat-hint class=\"size\"><b>Actual Property Area *</b></mat-hint>\r\n          </div>            \r\n          <div class=\"flex-grow-1 gap\" fxflex=\"20%\">\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Asset Valuer*</mat-label>          \r\n              <mat-select name=\"actualPropertyAreaInUnits\" disableOptionCentering formControlName=\"actualPropertyAreaInUnits\">\r\n              \r\n                <mat-option value=\"Sq\">Sq</mat-option>\r\n                <mat-option value=\"Acr\">Acr</mat-option>\r\n                <mat-option value=\"Cent\">Cent</mat-option>\r\n              </mat-select>  \r\n              <mat-error *ngIf=\"!accountForm.get('actualPropertyAreaInUnits').valid && accountForm.get('actualPropertyAreaInUnits').touched\">\r\n                Actual Area of the Property is Required!\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"flex-grow-1 gap\" fxflex=\"25%\">\r\n            <mat-form-field appearance=\"outline\" class=\"full-width\">              \r\n              <input matInput formControlName=\"actualPropertyAreaSize\" name=\"actualPropertyAreaSize\"\r\n                  (keypress)=_keyPress($event) name=\"remarks\" class=\"alignment\"/>              \r\n               \r\n                <mat-error *ngIf=\"!accountForm.get('actualPropertyAreaSize').valid && accountForm.get('actualPropertyAreaSize').touched\">\r\n                  Actual Area of the Property is Required!\r\n                </mat-error>\r\n            </mat-form-field>\r\n          </div>                \r\n        </div>\r\n      </div>\r\n          \r\n        <div class=\"flex-grow-2\">\r\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n          <mat-label>Market Value Of Asset*</mat-label>\r\n          <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n            <!--<mat-select name=\"mktValOfAsset\" disableOptionCentering formControlName=\"mktValOfAsset\">\r\n              <mat-option value=\"\">Select</mat-option>\r\n              <mat-option value=\"INR\">  Market Value Of Asset</mat-option>\r\n            </mat-select>-->\r\n            <input matInput formControlName=\"mktValOfAsset\" name=\"mktValOfAsset\" placeholder=\"Enter Market Value\"\r\n            (keypress)=_keyPress($event) name=\"remarks\" class=\"alignment\"/>\r\n          <!-- </mat-card> -->\r\n          <mat-error *ngIf=\"!accountForm.get('mktValOfAsset').valid && accountForm.get('mktValOfAsset').touched\">\r\n              Market Value Of Asset is Required!</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n             \r\n       </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"flex-grow-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Asset Type*</mat-label>\r\n                  <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n    \r\n                    <!--<input matInput formControlName=\"assetType\" class=\"alignment\"\r\n                      type=\"text\" name=\"assetType\" />-->\r\n                      <mat-select name=\"assetType\" formControlName=\"assetType\" disableOptionCentering>\r\n                        <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                        <mat-option value=\"Personal\">Personal</mat-option>\r\n                        <mat-option value=\"Vehicle\">Vehicle</mat-option>\r\n                        <mat-option value=\"Home\">Home</mat-option>\r\n                      </mat-select>\r\n                      \r\n                  <!-- </mat-card> -->\r\n                  <mat-error *ngIf=\"!accountForm.get('assetType').valid  && accountForm.get('assetType').touched\">\r\n                      Asset Type is Required!</mat-error>\r\n                </mat-form-field>\r\n                </div>\r\n             \r\n                <div class=\"flex-grow-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Borrowers Market Value of Asset*</mat-label>\r\n                  <!-- <mat-card class=\"inputMatName\"> -->\r\n    \r\n                    <input matInput formControlName=\"borrowersMktValOfAsset\" class=\"alignment\" placeholder=\"Borrowers Market Value \"\r\n                    (keypress)=_keyPress($event) name=\"borrowersMktValOfAsset\" />\r\n                      \r\n                  <!-- </mat-card> -->\r\n                  <mat-error *ngIf=\"!accountForm.get('borrowersMktValOfAsset').valid  && accountForm.get('borrowersMktValOfAsset').touched\">\r\n                      Borrowers Market Value of Asset is Required!</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n               \r\n                <div class=\"flex-grow-1\">\r\n                  <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Valuation Date*</mat-label>\r\n                  <!-- <mat-card class=\"inputMatName\" style=\"height:48px;\"> -->\r\n                      <input matInput name=\"valuationDate\" class=\"alignment\" formControlName=\"valuationDate\" placeholder=\"DD/MM/YYYY\"\r\n                      [matDatepicker]=\"appDatepicker\" [min]=\"lastData\" disableOptionCentering/>\r\n                    <!--<mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"  id=\"toggle\"></mat-datepicker-toggle>-->\r\n                    <div fxFlex=\"8%\" id=\"toggle\" class=\"datechange\">\r\n                      <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\" >\r\n                      </mat-datepicker-toggle>\r\n    \r\n                      <mat-datepicker #appDatepicker>\r\n                      </mat-datepicker>\r\n                    </div> \r\n                  <!-- </mat-card> -->\r\n                  <mat-error *ngIf=\"!accountForm.get('valuationDate').valid && accountForm.get('valuationDate').touched\">\r\n                    Valuation Date is Required!</mat-error>\r\n                  </mat-form-field>\r\n                      <!--<mat-datepicker #appDatepicker></mat-datepicker>-->\r\n                </div>\r\n           \r\n            <div class=\"flex-grow-2\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n              <mat-label>Face Value Of Asset*</mat-label>\r\n              <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                <!--<mat-select name=\"faceValOfAsset\" formControlName=\"faceValOfAsset\" disableOptionCentering>\r\n                  <mat-option value=\"\">Select</mat-option>\r\n                  <mat-option value=\"Face Value Of Asset\">Face Value Of Asset</mat-option>\r\n                </mat-select>-->\r\n                <input matInput formControlName=\"faceValOfAsset\" class=\"alignment\" placeholder=\"Enter Face Value\"\r\n                (keypress)=_keyPress($event) name=\"faceValOfAsset\" />\r\n              <!-- </mat-card> -->\r\n              <mat-error *ngIf=\"!accountForm.get('faceValOfAsset').valid && accountForm.get('faceValOfAsset').touched\">\r\n                  Face Value Of Asset is Required!</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n           \r\n            <div class=\"flex-grow-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n              <mat-label>Forced Sale Value*</mat-label>\r\n              <!-- <mat-card class=\"inputMatName\"> -->\r\n\r\n                <input matInput formControlName=\"forcedSaleValue\" class=\"alignment\" placeholder=\"Enter Forced Sale Value\"\r\n                (keypress)=_keyPress($event) name=\"forcedSaleValue\" />\r\n                  \r\n              <!-- </mat-card> -->\r\n              <mat-error *ngIf=\"!accountForm.get('forcedSaleValue').valid  && accountForm.get('forcedSaleValue').touched\">\r\n                Forced Sale Value is Required</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n       \r\n\r\n            </div>\r\n          </div>          \r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n\r\n      <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n        Back\r\n      </button>\r\n\r\n      <button mat-raised-button color=\"primary\" class=\"Nextbtn\" (click)=\"OnSubmit(accountForm.value)\" [disabled]=\"!accountForm.controls['bankValuation'].valid || !accountForm.controls['assetValue'].valid || !accountForm.controls['actualPropertyAreaInUnits'].valid || !accountForm.controls['actualPropertyAreaSize'].valid || !accountForm.controls['mktValOfAsset'].valid ||! accountForm.controls['assetType'].valid \r\n      || !accountForm.controls['borrowersMktValOfAsset'].valid || !accountForm.controls['valuationDate'].valid || !accountForm.controls['faceValOfAsset'].valid || !accountForm.controls['forcedSaleValue'].valid\">\r\n       Next\r\n     </button>\r\n    \r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { AutofillMonitor } from '@angular/cdk/text-field';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountServiceSummaryComponent } from './account-services/account-service-summary/account-service-summary.component';\r\n//import { AccountServiceSummaryComponent } from 'app/views/home/application-entry-stage/account-service-summary/account-service-summary.component';\r\nimport { AccountServicesComponent } from './account-services/account-services.component';\r\nimport { LoanChargeDetailsSummaryComponent } from './loan-charge-details/loan-charge-details-summary/loan-charge-details-summary.component';\r\nimport { LoanDisbursementDetailsComponent } from './loan-disbursement-details/loan-disbursement-details.component';\r\nimport { LoanDisbursementSummaryComponent } from './loan-disbursement-details/loan-disbursement-summary/loan-disbursement-summary.component';\r\nimport { LoanInterestSummaryComponent } from './loan-intrest-details/loan-interest-summary/loan-interest-summary.component';\r\nimport { LoanRepaymentSummaryComponent } from './loan-repayment-component/loan-repayment-summary/loan-repayment-summary.component';\r\n\r\n@Component({\r\n  selector: 'app-loan-enrichment',\r\n  templateUrl: './loan-enrichment.component.html',\r\n  styleUrls: ['./loan-enrichment.component.scss']\r\n})\r\nexport class LoanEnrichmentComponent implements OnInit {\r\n  loanInterestDetailsScreen: boolean=false;\r\n  loanDisbursementDetailsScreen: boolean=false;\r\n  loanRepaymentDetailsScreen: boolean=false;\r\n  loanChargeDetailsScreen: boolean=false;\r\n  loanAccountServicesScreen: boolean=false;\r\n  isLoanApplicationEnrichementDone: boolean= false;\r\n\r\n  constructor(private router:Router,public dialog: MatDialog,private ls: LocalStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanInterestDetailsScreen = this.ls.getItem('LOAN_INTERST_DETAIL_DONE');\r\n    this.loanDisbursementDetailsScreen= this.ls.getItem('LOAN_DISBURSEMENT_DETAIL_DONE');\r\n    this.loanRepaymentDetailsScreen = this.ls.getItem('LOAN_REPAYMENT_DETAIL_DONE');\r\n    this.loanChargeDetailsScreen = this.ls.getItem('LOAN_CHARGE_DETAILS');\r\n    this.loanAccountServicesScreen = this.ls.getItem('LOAN_ACCOUNT_SERVICES_DONE');\r\n   \r\n    if(this.loanInterestDetailsScreen && this.loanDisbursementDetailsScreen && this.loanRepaymentDetailsScreen\r\n      && this.loanChargeDetailsScreen && this.loanAccountServicesScreen){\r\n        this.isLoanApplicationEnrichementDone=true;\r\n      }\r\n\r\n  }\r\n  goToLoanInterest(){\r\n  \r\n      const dialogRef = this.dialog.open(LoanInterestSummaryComponent, { data: { number: '9656849771', type: 'Mobile Number' }, disableClose: true });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n    \r\n  \r\n    })\r\n   \r\n  }\r\n  goToLoanDisbursement(){\r\n  \r\n    const dialogRef = this.dialog.open(LoanDisbursementSummaryComponent, { data: { number: '9656849771', type: 'Mobile Number' }, disableClose: true });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n  \r\n\r\n  })\r\n\r\n}\r\ngoToLoanRepayment(){\r\n  \r\n  const dialogRef = this.dialog.open(LoanRepaymentSummaryComponent, { data: { number: '9656849771', type: 'Mobile Number' }, disableClose: true });\r\n  dialogRef.afterClosed().subscribe((submit) => {\r\n\r\n\r\n})}\r\n\r\n\r\ngoChargeSummary(){\r\n  \r\n  const dialogRef = this.dialog.open(LoanChargeDetailsSummaryComponent, { data: { number: '9656849771', type: 'Mobile Number' }, disableClose: true });\r\n  dialogRef.afterClosed().subscribe((submit) => {\r\n\r\n\r\n})}\r\ngoToAccountSummary(){\r\n  \r\n  const dialogRef = this.dialog.open(AccountServiceSummaryComponent,  { height:'auto',data: { number: '9656849771', type: 'Mobile Number' }, disableClose: true });\r\n  dialogRef.afterClosed().subscribe((submit) => {\r\n\r\n\r\n})}\r\n\r\nnavigate(){\r\n  //this.router.navigate([`/home/application/enrichment/fullSummary`, this.accountId]);\r\n  this.router.navigate([`/loan/account/application-enrichment/Summary`]);\r\n}\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"profile-pic text-center\">\r\n        <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Create Retail Loan Account</b></div>\r\n        <div class=\"text-muted\">\r\n            Open a Retail Loan Account with XYZ Bank in a better way. ­­­­\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div fxFlex=\"100\" *ngIf=\"isLoanApplicationEnrichementDone\" class=\"mt-8\">\r\n      <mat-card [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div fxFlex=\"10\"><mat-icon class=\"text-green\">check_circle</mat-icon></div>\r\n          <div fxFlex=\"30\">\r\n            <h6>Application Enrichment Completed</h6>\r\n          </div>\r\n          <span fxFlex></span>\r\n          <button mat-button color=\"primary\" (click)=\"navigate()\">View Summary</button>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n    <!-- <div fxFlex=\"100\" class=\"mt-8\"> -->\r\n    \r\n      \r\n      <!-- <mat-card\r\n        [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n      >\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div fxFlex=\"10\">\r\n            <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n          </div>\r\n          <!-- <div fxFlex=\"30\">\r\n            <h6>Application Entry Stage Completed</h6>\r\n          </div>\r\n          <span fxFlex></span>\r\n          <button\r\n            mat-button\r\n            color=\"primary\"\r\n          >\r\n            View Summary\r\n          </button>\r\n        </div>\r\n      </mat-card>\r\n    <!-- </div>\r\n  </div> -->\r\n\r\n\r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n      <!-- Card 1 start-->\r\n      <mat-card  [ngClass]=\"{'border-size':loanInterestDetailsScreen || !loanInterestDetailsScreen}\">\r\n        <mat-card-header>\r\n          <mat-card-title>1.Loan Interest Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                Interest Type and Effective Interest Rate is captured.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/loanInterest.svg'\" class=\"card-img1\" />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"loanInterestDetailsScreen\">\r\n            <button mat-button\r\n            color=\"primary\"\r\n            (click)=\"goToLoanInterest()\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!loanInterestDetailsScreen\" >\r\n          <button \r\n        mat-button\r\n        [routerLink]=\"['/loan/account/application-enrichment/intrest-details']\"\r\n        color=\"primary\"\r\n      >\r\n        Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n      </ng-container >\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card [ngClass]=\"{'border-size':loanDisbursementDetailsScreen || !loanDisbursementDetailsScreen && loanInterestDetailsScreen }\">\r\n        <mat-card-header>\r\n          <mat-card-title>2. Loan Disbursement Details </mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                Loan disbursement mode and corresponding details are captured.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/loanDisbursement.svg'\r\n                \"\r\n                class=\"card-img1\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n        \r\n          <ng-container *ngIf=\"loanDisbursementDetailsScreen && loanInterestDetailsScreen; else showLoanDetail\">\r\n            <button\r\n            mat-button\r\n            color=\"primary\"\r\n           (click)=\"goToLoanDisbursement()\"\r\n          >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n        <ng-template #showLoanDetail>\r\n          <button\r\n          mat-button\r\n          [routerLink]=\"['/loan/account/application-enrichment/loan-disbursement']\"\r\n          [disabled]=\"!loanInterestDetailsScreen\"\r\n          color=\"primary\"\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-template>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>\r\n\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card [ngClass]=\"{'border-size':loanRepaymentDetailsScreen || !loanRepaymentDetailsScreen && loanDisbursementDetailsScreen }\"> \r\n        <mat-card-header>\r\n          <mat-card-title>3. Loan Repayment Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                All the primary information about the customer is captured.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/loanRepayment.svg'\r\n                \"\r\n                class=\"card-img1\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n         \r\n          <ng-container *ngIf=\"loanRepaymentDetailsScreen && loanDisbursementDetailsScreen; else showLoanRepayment\">\r\n            <button\r\n            mat-button\r\n            color=\"primary\"\r\n         (click)=\"goToLoanRepayment()\"\r\n          >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n        <ng-template #showLoanRepayment>\r\n          <button\r\n          mat-button\r\n          [routerLink]=\"['/loan/account/application-enrichment/loan-repayment']\"\r\n          [disabled]=\"!loanDisbursementDetailsScreen\"\r\n          color=\"primary\"\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-template>\r\n         \r\n        </mat-card-actions>\r\n        \r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card [ngClass]=\"{'border-size':loanChargeDetailsScreen || !loanChargeDetailsScreen && loanRepaymentDetailsScreen }\">\r\n        <mat-card-header>\r\n          <mat-card-title>4. Charge Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                Charge Details are dispalyed.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/chargeDetails.svg'\r\n                \"\r\n                class=\"card-img1\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n         \r\n          <ng-container *ngIf=\"loanChargeDetailsScreen && loanRepaymentDetailsScreen; else showLoanCharge\">\r\n            <button\r\n            mat-button\r\n            color=\"primary\" (click)=\"goChargeSummary()\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n        <ng-template #showLoanCharge>\r\n          <button\r\n          mat-button\r\n          [routerLink]=\"['/loan/account/application-enrichment/charge-details']\"\r\n          [disabled]=\"!loanRepaymentDetailsScreen\"\r\n          color=\"primary\"\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-template>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>\r\n    <!-- card 3 start -->\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card [ngClass]=\"{'border-size':loanAccountServicesScreen || !loanAccountServicesScreen && loanChargeDetailsScreen }\">\r\n        <mat-card-header>\r\n          <mat-card-title>5.Account Services</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>Statement preference and the holiday preferences are captured.</p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"'assets/images/svg/accountService.svg'\"\r\n                class=\"card-img1\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n        \r\n          <ng-container *ngIf=\"loanChargeDetailsScreen && loanAccountServicesScreen; else showLoanAccountService\">\r\n            <button\r\n            mat-button\r\n            color=\"primary\" (click)=\"goToAccountSummary()\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n        <ng-template #showLoanAccountService>\r\n          <button\r\n          mat-button\r\n          [routerLink]=\"['/loan/account/application-enrichment/account-services']\"\r\n          [disabled]=\"!loanChargeDetailsScreen\"\r\n          color=\"primary\"\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-template>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <!-- Card 3 end -->\r\n    <!-- card 4 start -->\r\n \r\n    <!-- card 4 end -->\r\n    <!-- card -5 start -->\r\n  \r\n    <!-- card 5 end -->\r\n\r\n     <!-- card -6 start -->\r\n   \r\n      <!-- card 6 end -->\r\n\r\n      <!-- card -7 start -->\r\n   \r\n      <!-- card 7 end -->\r\n  </div>\r\n  \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-underwriting-stage',\r\n  templateUrl: './underwriting-stage.component.html',\r\n  styleUrls: ['./underwriting-stage.component.scss']\r\n})\r\nexport class UnderwritingStageComponent implements OnInit {\r\n // PArent 3\r\n isUnderWritingStageDone: boolean = false;\r\n // SUB TREES\r\n isCreditRatingDetails: boolean = false;\r\n isValuationofAsset: boolean = false;\r\n isLegalOpinion: boolean = false;\r\n  loanAccId: any;\r\n  constructor(private ls: LocalStoreService,private dialogService : DialogService,private router: Router) { \r\n    this.loanAccId = \"200\";\r\n  }\r\n\r\n  ngOnInit(): void {\r\n     // Parent 1\r\n     this.isUnderWritingStageDone = this.ls.getItem('underWritingStage');\r\n        // Parent 1 childs nav\r\n    this.isCreditRatingDetails = this.ls.getItem('CREDIT_RATING_DONE');\r\n    this.isValuationofAsset = this.ls.getItem('VALUATION_OF_ASSET_DONE');\r\n    this.isLegalOpinion = this.ls.getItem('LEGAL_OPINION_DONE');\r\n\r\n  }\r\n\r\n  goToCreditRatingSummary(){\r\n    this.dialogService.creditRatingSummaryDialog();\r\n  }\r\n\r\n  goToValuationAssetsSummary(){\r\n    this.dialogService.valuationAssetsSummaryDialog();\r\n  }\r\n\r\n  goToLegalOpinionSummary(){\r\n    this.dialogService.legalOpinionSummaryDialog();\r\n  }\r\n  viewSummary(){\r\n    this.router.navigate([`loan/account/list/underwritingStage/summary`,]);\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n        <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n      </div> -->\r\n      <div class=\"profile-pic text-center\">\r\n        <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Create Retail Loan Account</b></div>\r\n        <div class=\"text-muted\">\r\n            Open a Retail Loan Account with XYZ Bank in a better way. ­­­­\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"mt-8\"  *ngIf=\"isUnderWritingStageDone\">\r\n      <mat-card\r\n        [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n      >\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div fxFlex=\"10\">\r\n            <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n          </div>\r\n          <div fxFlex=\"30\">\r\n            <h6>Underwriting Stage</h6>\r\n          </div>\r\n          <span fxFlex></span>\r\n          <button\r\n            mat-button\r\n            (click) =\"viewSummary()\"\r\n            color=\"primary\" \r\n          >\r\n            View Summary\r\n          </button>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n      <!-- Card 1 start-->\r\n      <mat-card [ngClass]=\"{'border-size':isCreditRatingDetails || !isCreditRatingDetails}\">\r\n        <mat-card-header>\r\n          <mat-card-title>1. Credit Rating Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                The information on the External Rating Agencies Rating / Scores for the Loan Applicant is collected.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/Mask_Group_9.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\" *ngIf=\"isCreditRatingDetails\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> \r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n            <ng-container *ngIf=\"isCreditRatingDetails; else showCredit\">\r\n                <button\r\n              mat-button\r\n              (click)=\"goToCreditRatingSummary()\"\r\n              color=\"primary\"\r\n            >\r\n              View Details <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n            </ng-container>\r\n\r\n            <ng-template #showCredit>\r\n                <button \r\n              mat-button\r\n              [routerLink]=\"['/loan/account/list/underwritingStage/creditrating']\"\r\n              color=\"primary\"\r\n            >\r\n              Add Details <mat-icon>chevron_right</mat-icon>\r\n                </button>\r\n            </ng-template>\r\n        \r\n            \r\n          </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card [ngClass]=\"{'border-size':isValuationofAsset || !isValuationofAsset && isCreditRatingDetails}\">\r\n        <mat-card-header>\r\n          <mat-card-title>2. Valuation of Asset</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                The information on the asset valuation done by the bank approved valuator is captured.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/Mask Group 11.svg'\r\n                \"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\"  *ngIf=\"isValuationofAsset\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            \r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container  *ngIf=\"isValuationofAsset; else showValuation\">\r\n              <button\r\n            mat-button\r\n            (click)=\"goToValuationAssetsSummary()\"\r\n            color=\"primary\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-container>\r\n\r\n          <ng-template #showValuation>\r\n              <button \r\n            mat-button\r\n            [routerLink]=\"['/loan/account/list/underwritingStage/valuationofassets']\"\r\n            color=\"primary\"\r\n            [disabled]=\"!isCreditRatingDetails\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-template>\r\n      \r\n          \r\n        </mat-card-actions>\r\n     \r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>\r\n    <!-- card 3 start -->\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card [ngClass]=\"{'border-size':isLegalOpinion || !isLegalOpinion && isValuationofAsset}\">\r\n        <mat-card-header>\r\n          <mat-card-title>3. Legal Opinion</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>The legal opinion provided by the bank approved lawyer and decision provided thereon is captured.</p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"'assets/images/svg/Mask Group 10.svg'\"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\" *ngIf=\"isLegalOpinion\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            \r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container  *ngIf=\"isLegalOpinion; else showOpinion\">\r\n              <button\r\n            mat-button\r\n            (click)=\"goToLegalOpinionSummary()\"\r\n            color=\"primary\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-container>\r\n\r\n          <ng-template #showOpinion>\r\n              <button \r\n            mat-button\r\n            [routerLink]=\"['/loan/account/list/underwritingStage/legalopinion']\"\r\n            color=\"primary\"\r\n            [disabled]=\"!isValuationofAsset\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-template>\r\n      \r\n          \r\n        </mat-card-actions>\r\n      \r\n      </mat-card>\r\n    </div>\r\n    <!-- Card 3 end -->\r\n\r\n  </div>\r\n  ","import { DatePipe } from \"@angular/common\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { RepaymentScheduleComponent } from \"./repayment-schedule/repayment-schedule.component\";\r\nimport { AccountService } from \"../../account.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport * as moment from 'moment';\r\n// import { Year } from \"@syncfusion/ej2-schedule\";\r\n@Component({\r\n  selector: \"app-loan-repayment-component\",\r\n  templateUrl: \"./loan-repayment-component.component.html\",\r\n  styleUrls: [\"./loan-repayment-component.component.scss\"],\r\n})\r\nexport class LoanRepaymentComponentComponent implements OnInit {\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  loanRepaymentForm: FormGroup;\r\n  internalAccount: FormGroup;\r\n  scheduleLink: FormGroup;\r\n  selectedDay: number = 1;\r\n  days: any[] = [];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  years: any[] = [];\r\n  // day: number;\r\n   year: string[];\r\n  month:string[];\r\n //  day: string[];\r\n  loanaccountId: any;\r\n  data: any;\r\n  fetchRescheduleData: any;\r\n  showEditOption: boolean;\r\n  repaymentDetails: any;\r\n  date: void;\r\n  scheduleDate: any;\r\n  loanInfo: any;\r\n  cifNumber: any;\r\n accountNoArr = [];\r\n loanTenure:string;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public datepipe: DatePipe,\r\n    private snack: MatSnackBar,\r\n    private api: ApiService,\r\n    private apiService:ApiService,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    public dialog: MatDialog,\r\n    private loader: AppLoaderService,\r\n    private accountService: AccountService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountId = this.ls.getItem(\"loanAccountId\");\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    this.selectedYear = new Date().getFullYear();    \r\n    for (let year = 0; year <= 50; year++) {\r\n      this.years.push(year + \" year\");\r\n    }\r\n\r\n    for (let month = 0; month <= 11; month++) {\r\n      this.months.push(month + \" month\");\r\n    }\r\n\r\n    for (let day = 0; day <= 30; day++) {\r\n      this.days.push(day + \" day\");\r\n    }\r\n    \r\n    // this.months = [\r\n    //   \"Jan\",\r\n    //   \"Feb\",\r\n    //   \"Mar\",\r\n    //   \"Apr\",\r\n    //   \"May\",\r\n    //   \"Jun\",\r\n    //   \"Jul\",\r\n    //   \"Aug\",\r\n    //   \"Sep\",\r\n    //   \"Oct\",\r\n    //   \"Nov\",\r\n    //   \"Dec\",\r\n    // ];\r\n\r\n    let isLoanDisbursementDetails = this.ls.getItem(\r\n      \"LOAN_DISBURSEMENT_DETAIL_DONE\"\r\n    );\r\n    // setTimeout(() => {\r\n    // }, 10);\r\n    if (this.loanaccountId != null && isLoanDisbursementDetails) {\r\n      this.showEditOption = true;\r\n      this.getRepaymenttDetails();\r\n    } else {\r\n      this.showEditOption = false;\r\n      this.buildAccountForm();\r\n    }\r\n  this.fetchByCif();\r\n  this.loanData();\r\n  }\r\n\r\n  getRepaymenttDetails() {\r\n    //this.loader.open();\r\n    this.api.loanRepaymentFetchById(this.loanaccountId).subscribe(\r\n      (repaymentDetails) => {\r\n       // this.loader.close();\r\n        this.repaymentDetails = repaymentDetails;\r\n        this.buildAccountForm(this.repaymentDetails);\r\n      },\r\n      (err: any) => {\r\n        this.loader.close();\r\n      }\r\n    );\r\n  }\r\n\r\n  buildAccountForm(item?) {\r\n    this.loanRepaymentForm = this.formBuilder.group({\r\n      branchCode: [\"\"],\r\n      customerAccount: [\"\"],\r\n      bankName: [\"\"],\r\n      firstRepaymentDate: [\r\n        item\r\n          ? new Date(item.firstRepaymentDate).toISOString().substring(0, 10)\r\n          : \"\",\r\n        Validators.required,\r\n      ],\r\n      loanAccountId: this.loanaccountId,\r\n      loanRepaymentId: [item ? item.loanRepaymentId : \"\"],\r\n      loanTenure: [item ? item.loanTenure : \"\"],\r\n      maturityDate: [\r\n        item ? new Date(item.maturityDate).toISOString().substring(0, 10) : \"\",\r\n        Validators.required,\r\n      ],\r\n      moraturioumPeriod: [\r\n        item ? item.moraturioumPeriod : \"\",\r\n        Validators.required,\r\n      ],\r\n      repaymentFrequency: [\r\n        item ? item.repaymentFrequency : \"\",\r\n        Validators.required,\r\n      ],\r\n      repaymentMode: [item ? item.repaymentMode : \"\", Validators.required],\r\n      typeOfRepayment: [item ? item.typeOfRepayment : \"\", Validators.required],\r\n      day: [item ? item.loanTenure.split(\"-\")[2] : \"\",  [Validators.required]],\r\n      month: [item ? item.loanTenure.split(\"-\")[1] : \"\",  [Validators.required]],\r\n      year: [item ? item.loanTenure.split(\"-\")[0] : \"\", [Validators.required]],\r\n    });\r\n   console.log(this.loanRepaymentForm.value);\r\n    this.scheduleLink = this.formBuilder.group({\r\n      firstRepaymentDate: this.loanRepaymentForm.get(\"firstRepaymentDate\"),\r\n      loanAccountId: this.loanaccountId,\r\n    });\r\n\r\n    this.internalAccount = this.formBuilder.group({\r\n      branchCode: [item ? item.branchCode : \"\", [Validators.required,Validators.pattern(\".*[a-zA-Z0-9].*\")]],\r\n      customerAccount: [item ? item.customerAccount : \"\", [Validators.required,Validators.pattern(\".*[0-9].*\")]],\r\n      bankName: [item ? item.bankName : \"\", [Validators.required,Validators.pattern(\".*[a-zA-Z0-9].*\")]],\r\n    });\r\n  }\r\ngetDays(year1,month1,day1){\r\n  \r\nvar yr=moment(new Date()).add(parseInt(year1.split(\" \")[0]), 'months').format('LLL');\r\nvar month=moment(yr).add(parseInt(month1.split(\" \")[0]), 'year').format('LLL');\r\nvar finalDate=moment(month).add(parseInt(day1.split(\" \")[0]), 'days').format('LLL');\r\nconsole.log(\"finalDate--->\",finalDate);\r\nthis.loanRepaymentForm.get(\"maturityDate\").setValue(new Date(finalDate));\r\n}\r\n\r\n  openPopup() {\r\n    console.log(this.loanRepaymentForm.value);\r\n    console.log(this.internalAccount.value);\r\n    console.log(\"payload\", this.scheduleLink.value);\r\n    let latest_date = moment(this.scheduleLink.value).format(\"DD-MMM-YYYY\");\r\n\r\n    console.log(latest_date);\r\n    let payload = {\r\n      firstRepaymentDate: latest_date,\r\n      loanAccountId: this.loanaccountId,\r\n    };\r\n\r\n    console.log(\"payload\", payload);\r\n    this.api.scheduleLink(payload).subscribe((resp) => {\r\n      this.fetchRescheduleData = resp;\r\n      console.log(this.fetchRescheduleData);\r\n\r\n      this.loanaccountId = this.ls.getItem(\"loanAccountId\");\r\n      localStorage.setItem(\r\n        \"fetchRescheduleData\",\r\n        JSON.stringify(this.fetchRescheduleData)\r\n      );\r\n      console.log(this.fetchRescheduleData);\r\n\r\n      const dialogRef = this.dialog.open(RepaymentScheduleComponent, {\r\n        width: \"55%\",\r\n        backdropClass: \"dialog-bg-trans\",\r\n        height: \"55%\",\r\n        disableClose: true,\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe((result) => {\r\n        console.log(\"The dialog was closed\", result);\r\n      });\r\n    });\r\n\r\n    if (latest_date != null) {\r\n      latest_date = moment(this.scheduleLink.value).format(\"YYYY-MMM-DD\");\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    let latest_date = this.datepipe.transform(\r\n      this.loanRepaymentForm.value.firstRepaymentDate,\r\n      \"yyyy-MMM-dd\"\r\n    );\r\n    let latest_dateMaturity = this.datepipe.transform(\r\n      this.loanRepaymentForm.value.maturityDate,\r\n      \"yyyy-MMM-dd\"\r\n    );\r\n    const renewData =\r\n      this.loanRepaymentForm.value.year +\r\n      \"-\" +\r\n      this.loanRepaymentForm.value.month +\r\n      \"-\" +\r\n      this.loanRepaymentForm.value.day;\r\n    this.loanRepaymentForm.get(\"loanTenure\").setValue(renewData);\r\n    this.loanRepaymentForm.value.loanTenure=renewData;\r\n    this.loanRepaymentForm\r\n      .get(\"branchCode\")\r\n      .setValue(this.internalAccount.value.branchCode),\r\n      this.loanRepaymentForm\r\n        .get(\"customerAccount\")\r\n        .setValue(this.internalAccount.value.customerAccount),\r\n    this.loanRepaymentForm\r\n      .get(\"bankName\")\r\n      .setValue(this.internalAccount.value.bankName),\r\n      this.loanRepaymentForm.get(\"firstRepaymentDate\").setValue(latest_date),\r\n      this.loanRepaymentForm.get(\"loanTenure\").setValue(renewData);\r\n      this.loanRepaymentForm.get(\"maturityDate\").setValue(latest_dateMaturity);\r\n    \r\n    // delete this.loanRepaymentForm.value.year;\r\n    // delete this.loanRepaymentForm.value.month;\r\n    // delete this.loanRepaymentForm.value.day;\r\n\r\n    console.log(this.loanRepaymentForm.value);\r\n    this.api.loanRepaymentSave(this.loanRepaymentForm.value).subscribe(\r\n      (resp) => {\r\n        this.snack.open(\"Loan Repayment Details Saved!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.next();\r\n      },\r\n      (err) => {\r\n        this.snack.open(\r\n          \"Not able to connect to server!\",\r\n          \"INTERNAL SERVER ERROR\",\r\n          {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n  goBack() {\r\n    this.router.navigate([\r\n      `/loan/account/application-enrichment/loan-disbursement`,\r\n    ]);\r\n  }\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format(\"YYYY-MMM-DD\");\r\n    console.log(\"date\", date);\r\n    if (date) return date;\r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem(\"LOAN_REPAYMENT_DETAIL_DONE\", true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([\r\n      `/loan/account/application-enrichment/charge-details`,\r\n    ]);\r\n  }\r\n  _keyPress(e) {   \r\n    let val = e.target.value\r\n    if (e.which === 32 && !val.length) {\r\n    e.preventDefault();\r\n}\r\n  }\r\n  fetchByCif(){\r\n    this.cifNumber=this.ls.getItem('cId');\r\n    this.api.fetchAccountIdByCustId(this.cifNumber).subscribe((accountNo: [])=>{\r\n      this.accountNoArr = accountNo;\r\n      console.log(this.accountNoArr);                 \r\n      this.internalAccount.get('customerAccount').setValue(this.accountNoArr?.[0]);\r\n    }     \r\n      );       \r\n  }\r\n  loanData(){ \r\n  this.apiService.fetchByLoanAccountId(this.loanaccountId).subscribe((res:any)=>{      \r\n    let dataYear = res.loanTenure.split(\"-\")[0];    \r\n    let dataMonth = res.loanTenure.split(\"-\")[1];   \r\n    let dataDay = res.loanTenure.split(\"-\")[2];      \r\n    this.loanRepaymentForm.get(\"year\").setValue(dataYear);        \r\n    this.loanRepaymentForm.get('month').setValue(dataMonth);\r\n    this.loanRepaymentForm.get('day').setValue(dataDay);  \r\n  }, (err: any) => {\r\n    console.error(err);\r\n  })\r\n}\r\n  \r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_Payments_re_77x0.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Loan Repayment Details</b></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <!-- <div class=\"spanDivider1 marginL-0\" style=\"margin: 16px 0;\">\r\n        <span class=\"span\">Loan Repayment Details </span>\r\n        <mat-divider class=\"divider\"></mat-divider>\r\n      </div> -->\r\n      <!-- <div class=\"divider-line\" id=\"mat-line\">\r\n        <span class=\"mat-title\">Loan Repayment Details</span>\r\n        <mat-divider class=\"mat-line-position\"></mat-divider>\r\n      </div> -->\r\n      <fieldset>\r\n        <legend visible=\"true\">Loan Repayment Details</legend>\r\n    </fieldset>\r\n      <mat-card-content>\r\n        <form *ngIf=\"loanRepaymentForm\" [formGroup]=\"loanRepaymentForm\">\r\n          <!-- <mat-spinner class=\"spinner\" [diameter]=\"80\" *ngIf=\"showSpinn\"></mat-spinner> -->\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Repayment Mode*</mat-label>\r\n                <!-- <mat-card class=\"widthCard inputMatName\" id=\"heightDate\"> -->\r\n                  <mat-select disableOptionCentering\r\n                    placeholder=\"Repayment Mode\"\r\n                    name=\"repaymentMode\"\r\n                    formControlName=\"repaymentMode\"\r\n                  >\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"Internal\">Internal</mat-option>\r\n                    <mat-option value=\"External\">External</mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <!-- <mat-error *ngIf=\"!loanRepaymentForm.get('repaymentMode').valid && loanRepaymentForm.get('repaymentMode').touched\">\r\n                  Repayment Mode is Required!\r\n                </mat-error> -->\r\n                </mat-form-field>\r\n               \r\n              </div>\r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Type of Repayment*</mat-label>\r\n                <!-- <mat-card class=\"widthCard inputMatName\" id=\"heightDate\"> -->\r\n                  <mat-select disableOptionCentering\r\n                    placeholder=\"Type of Repayment\"\r\n                    name=\"opinion\"\r\n                    formControlName=\"typeOfRepayment\"\r\n                  >\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"EMI\">EMI</mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !loanRepaymentForm.get('typeOfRepayment').valid &&\r\n                    loanRepaymentForm.get('typeOfRepayment').touched\r\n                  \"\r\n                >\r\n                  Type of Repayment is Required!</mat-error\r\n                >\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width \" >\r\n                <mat-label>First Repayment Date*</mat-label>\r\n                <!-- <mat-card class=\"widthCard inputMatName1\" id=\"heightDate\"> -->\r\n                  <input\r\n                    placeholder=\"DD/MM/YYYY\"\r\n                    matInput\r\n                    [min]=\"loanRepaymentForm.get('firstRepaymentDate').value\"\r\n                    name=\"valuationDate\"  [matDatepicker]=\"appDatepicker1\"\r\n                    class=\"alignment\"\r\n                    formControlName=\"firstRepaymentDate\"\r\n                 \r\n                  />\r\n                  <div fxFlex=\"8%\" id=\"toggle\"class=\"datechange\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                  </div>\r\n                \r\n                <!-- </mat-card> -->\r\n                \r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !loanRepaymentForm.get('firstRepaymentDate').valid &&\r\n                    loanRepaymentForm.get('firstRepaymentDate').touched\r\n                  \"\r\n                >\r\n                  First Repayment Date is Required!</mat-error\r\n                >\r\n                </mat-form-field>\r\n                \r\n              </div>\r\n\r\n                \r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Maturity Date*</mat-label>\r\n                <!-- <mat-card class=\"widthCard inputMatName1\" id=\"heightDate\"> -->\r\n                  <input\r\n                    placeholder=\"DD/MM/YYYY\"\r\n                    matInput\r\n                    name=\"valuationDate\" [matDatepicker]=\"appDatepicker\"\r\n                    class=\"alignment\"\r\n                    formControlName=\"maturityDate\" [max]=\"getDays(loanRepaymentForm.get('month').value,loanRepaymentForm.get('year').value,loanRepaymentForm.get('day').value)\" readonly\r\n                  \r\n                  />\r\n                  <div fxFlex=\"8%\" id=\"toggle\"class=\"datechange\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #appDatepicker></mat-datepicker>\r\n                     </div>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !loanRepaymentForm.get('maturityDate').valid &&\r\n                    loanRepaymentForm.get('maturityDate').touched\r\n                  \"\r\n                >\r\n                  Maturity Date is Required!</mat-error\r\n                >\r\n                </mat-form-field>\r\n                \r\n              </div>\r\n\r\n              <div class=\"flex-grow-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Moratorium Period ( in months) *</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Moratorium Period\"\r\n                    formControlName=\"moraturioumPeriod\"\r\n                    class=\"alignment\"\r\n                    type=\"number\"\r\n                    name=\"MarketValueofAsset\"\r\n                    min=\"0\"\r\n                  />\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !loanRepaymentForm.get('moraturioumPeriod').valid &&\r\n                    loanRepaymentForm.get('moraturioumPeriod').touched\r\n                  \"\r\n                >\r\n                  Moratorium Period is Required!</mat-error\r\n                >\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Repayment Frequency*</mat-label>\r\n                <!-- <mat-card class=\"widthCard inputMatName\" id=\"heightDate\"> -->\r\n                  <mat-select disableOptionCentering\r\n                    placeholder=\"Repayment Frequency\"\r\n                    name=\"opinion\"\r\n                    formControlName=\"repaymentFrequency\"\r\n                  >\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"opinion\">opinion</mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !loanRepaymentForm.get('repaymentFrequency').valid &&\r\n                    loanRepaymentForm.get('repaymentFrequency').touched\r\n                  \"\r\n                >\r\n                  Repayment Frequency is Required!</mat-error\r\n                >\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"flex-grow-1\">\r\n                <div>\r\n                  \r\n                  <div fxLayout=\"row wrap\">\r\n                    <mat-hint class=\"tenre\"><b>Loan Tenure *</b></mat-hint>\r\n                    \r\n                    <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"22.5\">\r\n                      <mat-label>Year*</mat-label>\r\n                    <mat-select name=\"year\" placeholder=\"Year\" formControlName=\"year\" disableOptionCentering>\r\n                    <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</mat-option> \r\n                     </mat-select>\r\n                    </mat-form-field>\r\n\r\n                   \r\n                    <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"21.5\">\r\n                      <mat-label>Month*</mat-label>\r\n                    <mat-select name=\"month\" placeholder=\"Month\" formControlName=\"month\" disableOptionCentering>\r\n                    <mat-option *ngFor=\"let month of months\" [value]=\"month\">{{ month }}</mat-option> \r\n                     </mat-select>\r\n                    </mat-form-field>\r\n                    \r\n                    <mat-form-field class=\"full-width tenure1\" appearance=\"outline\" fxFlex=\"21.5\">\r\n                      <mat-label>Day*</mat-label>\r\n                    <mat-select name=\"day\" placeholder=\"Day\" formControlName=\"day\" \r\n                    (selectionChange)=\"getDays(loanRepaymentForm.get('month').value,loanRepaymentForm.get('year').value,loanRepaymentForm.get('day').value)\" disableOptionCentering>\r\n                    <mat-option *ngFor=\"let day of days\" [value]=\"day\">{{ day }}</mat-option> \r\n                     </mat-select>\r\n                    </mat-form-field>\r\n                    <!-- </mat-card> -->\r\n                  </div>\r\n                </div>\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !loanRepaymentForm.get('loanTenure').valid &&\r\n                    loanRepaymentForm.get('loanTenure').touched\r\n                  \"\r\n                >\r\n                  Loan Tenure is Required!</mat-error\r\n                >\r\n              </div>\r\n\r\n              <!-- <div class=\"flex-grow-2\">\r\n                <mat-hint>Repayment Mode*</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName\" id=\"heightRepay\">\r\n                  <mat-select disableOptionCentering\r\n                    placeholder=\"Repayment Mode\"\r\n                    name=\"opinion\"\r\n                    formControlName=\"repaymentMode\"\r\n                  >\r\n                   <mat-option value=\"\">Select</mat-option> -->\r\n                    <!-- <mat-option value=\"opinion\">opinion</mat-option>\r\n                  </mat-select>\r\n                </mat-card>\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !loanRepaymentForm.get('repaymentMode').valid &&\r\n                    loanRepaymentForm.get('repaymentMode').touched\r\n                  \"\r\n                >\r\n                  Repayment Mode is Required!</mat-error\r\n                > -->\r\n              <!-- </div> -->\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\" class=\"showShedule\" *ngIf=\"scheduleLink\" [formGroup]=\"loanRepaymentForm\">\r\n                <div fxFlex=\"100\" class=\"pr-1\">\r\n                  <a class=\"link\"  [routerLink]=\"\" (click) = \"openPopup()\">Show Repayment Schedule</a>\r\n                  <br />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        </mat-card-content>\r\n        <!-- <div class=\"spanDivider1\">\r\n          <span class=\"span\">Internal Account </span>\r\n          <mat-divider class=\"divider marginL-0\"></mat-divider>\r\n        </div> -->\r\n        <!-- <div class=\"divider-line\" id=\"mat-line2\">\r\n          <span class=\"mat-title\">Internal Account</span>\r\n          <mat-divider class=\"mat-line-position\"></mat-divider>\r\n        </div> -->\r\n        <fieldset>\r\n          <legend visible=\"true\">Internal Account</legend>\r\n      </fieldset>\r\n        <mat-card-content>\r\n        <form *ngIf=\"internalAccount\" [formGroup]=\"internalAccount\">\r\n          <!-- <mat-spinner class=\"spinner\" [diameter]=\"80\" *ngIf=\"showSpinn\"></mat-spinner> -->\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\"  class=\"pr-1\">\r\n              <!-- <div class=\"flex-grow-2\">\r\n\r\n                  <mat-hint>Customer Account*</mat-hint>\r\n                  <mat-card class=\"widthCard inputMatName\">\r\n                    <mat-select disableOptionCentering formControlName=\"customerAccount\">\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option value=\"saving\">Saving</mat-option>\r\n                      <mat-option value=\"fixed\">Fixed</mat-option>\r\n                      <mat-option value=\"current\">Current</mat-option>\r\n                    </mat-select>\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"!internalAccount.get('customerAccount').valid && internalAccount.get('customerAccount').touched\">\r\n                      Customer Account is Required!</mat-error>\r\n              </div> -->\r\n\r\n              <div class=\"flex-grow-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Customer Account Number*</mat-label>\r\n                  <!-- <mat-card appearance=\"outline\" class=\"full-width\" class=\"alignment\" >                 -->\r\n                  <mat-select formControlName=\"customerAccount\"\r\n                              disableOptionCentering placeholder=\"Customer Account\">\r\n                    <mat-option [value]=\"accNo\" *ngFor=\"let accNo of accountNoArr\">{{accNo}}</mat-option>\r\n                  </mat-select>                  \r\n                <!-- </mat-card>    -->\r\n                  <mat-error *ngIf=\"internalAccount.get('customerAccount').hasError('required') && internalAccount.get('customerAccount').touched\">\r\n                   &nbsp;&nbsp;  Customer Account Number is Required!\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"internalAccount.get('customerAccount').hasError('pattern')  && internalAccount.get('customerAccount').touched\">\r\n                   &nbsp;&nbsp; Please Enter Valid Customer Account number\r\n                 </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <!-- <div class=\"flex-grow-1\" style=\"padding-left: 12px;\"> -->\r\n                <div class=\"flex-grow-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                  <mat-label>Bank Name*</mat-label>\r\n                  <!-- <mat-card class=\"inputMatName\"> -->\r\n\r\n                    <input matInput placeholder=\"Bank Name\" formControlName=\"bankName\" class=\"alignment\"\r\n                      type=\"text\" name=\"MarketValueofAsset\" (keypress)=\"_keyPress($event)\" />\r\n\r\n                  <!-- </mat-card> -->\r\n                  <mat-error *ngIf=\"internalAccount.get('bankName').hasError('required')  && internalAccount.get('bankName').touched\">\r\n                    &nbsp; Bank Name is Required!\r\n                  </mat-error>\r\n                  <!-- <mat-error *ngIf=\"!collateralInfo.get('noOfCollateral').valid && collateralInfo.get('noOfCollateral').touched\" >\r\n                                                                &nbsp;&nbsp; Number of Collateral is Required!\r\n                                                            </mat-error> -->\r\n                                                            <mat-error *ngIf=\"internalAccount.get('bankName').hasError('pattern')  && internalAccount.get('bankName').touched\">\r\n                                                            &nbsp;  Please Enter Valid Bank Name\r\n                                                           </mat-error>   \r\n                </mat-form-field>                                      \r\n              </div>\r\n           </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" >\r\n\r\n              <div class=\"flex-grow-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Branch Code*</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"Branch Code\"\r\n                    formControlName=\"branchCode\"\r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                    name=\"MarketValueofAsset\"\r\n                    (keypress)=\"_keyPress($event)\"\r\n                  />\r\n                <!-- </mat-card> -->\r\n                <mat-error *ngIf=\"internalAccount.get('branchCode').hasError('required') && internalAccount.get('branchCode').touched\">\r\n                &nbsp;&nbsp;  Branch Code is Required!\r\n               </mat-error>\r\n               <mat-error *ngIf=\"internalAccount.get('branchCode').hasError('pattern')  && internalAccount.get('branchCode').touched\">\r\n                &nbsp;&nbsp; Please Enter Valid Branch Code\r\n              </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            \r\n              <div class=\"flex-grow-1\" *ngIf=\"repaymentMode == 'external'\">\r\n                <mat-hint>IFSC Code*</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    matInput\r\n                    placeholder=\"IFSC Code\"\r\n                    formControlName=\"ifscCode\"\r\n                    class=\"alignment\"\r\n                    type=\"text\"\r\n                    name=\"MarketValueofAsset\"\r\n                  />\r\n                </mat-card>\r\n                <mat-error\r\n          \r\n                *ngIf=\"!internalAccount.get('ifscCode').valid && internalAccount.get('ifscCode').touched\">\r\n                  IFSC Code is Required!\r\n                </mat-error>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n        </form>        \r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n\r\n      <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n        Back\r\n      </button>\r\n      <button mat-raised-button color=\"primary\" class=\"Nextbtn\" (click)=\"submit()\" [disabled]=\"\r\n      !loanRepaymentForm?.get('typeOfRepayment').valid ||  \r\n      !loanRepaymentForm?.get('firstRepaymentDate').valid || \r\n      !loanRepaymentForm?.get('maturityDate').valid || \r\n      !loanRepaymentForm?.get('moraturioumPeriod').valid || \r\n      !loanRepaymentForm?.get('repaymentFrequency').valid ||  \r\n      !loanRepaymentForm?.get('loanTenure').valid ||\r\n      !internalAccount?.get('customerAccount').valid || \r\n      !internalAccount?.get('bankName').valid || \r\n      !internalAccount?.get('branchCode').valid\"\r\n      \r\n      >\r\n        Next\r\n      </button>\r\n      \r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AdmissionDetailsViewComponent } from './admission-details/admission-details-view/admission-details-view.component';\r\nimport { CollateralDetailsSummmaryComponent } from './collateral-details/collateral-details-summmary/collateral-details-summmary.component';\r\nimport { CustomerInfoViewComponent } from './customer-information/customer-info-view/customer-info-view.component';\r\nimport { FinancialDetailsViewComponent } from './financial-details/financial-details-view/financial-details-view.component';\r\nimport { GuarantorDetailsViewComponent } from './guarantor-details/guarantor-details-view/guarantor-details-view.component';\r\nimport { MandateDetailsViewComponent } from './mandate-details/mandate-details-view/mandate-details-view.component';\r\n\r\n@Component({\r\n  selector: 'app-loan-entry-stage',\r\n  templateUrl: './loan-entry-stage.component.html',\r\n  styleUrls: ['./loan-entry-stage.component.scss'],\r\n  animations:rumangoAnimations\r\n})\r\nexport class LoanEntryStageComponent implements OnInit {\r\n\r\n  isLoanApplicationEntryDone :boolean=false;\r\n  isLoanDetailScreen :boolean=false;\r\n  isAssetsDetailScreen :boolean=false;\r\n  isVehicleDetailScreen :boolean=false;\r\n  isAdmissionDetailScreen :boolean=false;\r\n  isFinancialDetailScreen :boolean=false;\r\n  isMandateDetailScreen :boolean=false;\r\n  isGuarantorDetailScreen :boolean=false;\r\n  isCustomerInformationScreen:boolean=false;\r\n  isCollateralDetailsScreen:boolean=false;\r\n  isAnyScreen:boolean=false;\r\n\r\n\r\n  isCustomerDetailScreen :boolean=false;\r\n\r\n  loanaccountID : any;\r\n\r\n\r\n  constructor(private router:Router,private dialogService : DialogService,private ls: LocalStoreService, public dialog: MatDialog) { }\r\n  isHomeLoan: boolean=false;\r\n  isVehicleLoan: boolean=false;\r\n  isEducationLoan: boolean=false;\r\n\r\n  ngOnInit(): void {\r\n     //Parent 1\r\n     this.isLoanApplicationEntryDone = this.ls.getItem('LoanEntryStage');\r\n     //Parent 1 Child Nav\r\n     this.isLoanDetailScreen = this.ls.getItem('LOAN_DETAIL_DONE');\r\n     this.isAssetsDetailScreen = this.ls.getItem('ASSET_DETAIL_DONE');\r\n     this.isVehicleDetailScreen = this.ls.getItem('VEHICLE_DETAIL_DONE');\r\n     this.isAdmissionDetailScreen = this.ls.getItem('ADMISSION_DETAIL_DONE');\r\n     this.isCustomerInformationScreen = this.ls.getItem('CUSTOMERINFO_DETAIL_DONE');\r\n     this.isFinancialDetailScreen = this.ls.getItem('FINANCIAL_DETAIL_DONE');\r\n     this.isMandateDetailScreen = this.ls.getItem('MANDATE_DETAIL_DONE');\r\n     this.isGuarantorDetailScreen = this.ls.getItem('GUARANTOR_DETAIL_DONE');\r\n     this.isCollateralDetailsScreen = this.ls.getItem('COLLATERAL_DETAIL_DONE');\r\n     this.isCustomerDetailScreen = this.ls.getItem('CUSTOMERINFO_DETAIL_DONE');\r\n     if(this.isAssetsDetailScreen==true || this.isVehicleDetailScreen ==true || this.isAdmissionDetailScreen==true){\r\n       this.isAnyScreen=true;\r\n     }\r\n\r\n    \r\n\r\n     if(this.ls.getItem('accountType')==\"Home Loan\"){\r\n      this.isHomeLoan=true;\r\n      this.isVehicleLoan=false;\r\n      this.isEducationLoan=false;\r\n     }\r\n     else if (this.ls.getItem('accountType')==\"Vehicle Loan\"){\r\n      this.isHomeLoan=false;\r\n      this.isVehicleLoan=true;\r\n      this.isEducationLoan=false;\r\n     }\r\n     else if(this.ls.getItem('accountType')==\"Education Loan\"){\r\n      this.isHomeLoan=false;\r\n      this.isVehicleLoan=false;\r\n      this.isEducationLoan=true;\r\n     }\r\n\r\n  }\r\n\r\n  goToAdmissionDetails() {\r\n    if (this.isAdmissionDetailScreen) {\r\n      const dialogRef = this.dialog.open(AdmissionDetailsViewComponent, { disableClose: true });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n      })\r\n    }\r\n    else {\r\n      this.router.navigate([`/loan/account/admission-details`]);\r\n    }\r\n  }\r\n\r\n  goToFinancialDetails() {\r\n    if (this.isFinancialDetailScreen) {\r\n      const dialogRef = this.dialog.open(FinancialDetailsViewComponent, { disableClose: true });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n      })\r\n    }\r\n    else {\r\n      this.router.navigate([`/loan/account/financial-details`]);\r\n    }\r\n  }\r\n\r\n  goToMandateDetails() {\r\n    if (this.isMandateDetailScreen) {\r\n      const dialogRef = this.dialog.open(MandateDetailsViewComponent, { disableClose: true });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n      })\r\n    }\r\n    else {\r\n      this.router.navigate([`/loan/account/mandate-details`]);\r\n    }\r\n  }\r\n\r\n  goToGuarantorDetails() {\r\n    if (this.isMandateDetailScreen) {\r\n      const dialogRef = this.dialog.open(GuarantorDetailsViewComponent, { disableClose: true });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n      })\r\n    }\r\n    else {\r\n      this.router.navigate([`/loan/account/guarantor_details`]);\r\n    }\r\n  }\r\n\r\n  goToCollateralDetails(){\r\n    if (this.isCollateralDetailsScreen && this.isFinancialDetailScreen) {\r\n      const dialogRef = this.dialog.open(CollateralDetailsSummmaryComponent, { disableClose: true });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n      })\r\n    }\r\n    else {\r\n      this.router.navigate([`/loan/account/collateral_details`]);\r\n    }\r\n  }\r\n\r\n  goToCustomerInfoDetails() {\r\n    if (this.isCustomerDetailScreen) {\r\n      const dialogRef = this.dialog.open(CustomerInfoViewComponent, { disableClose: true, maxHeight : '90%', width : '70%' });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n      })\r\n    }\r\n    else {\r\n      this.router.navigate([`/loan/account/customer-information`]);\r\n    }\r\n  }\r\n\r\n  goToLoan(){\r\n    this.router.navigate([`/loan/account/loan-details`]);\r\n  }\r\n  goToLoanSummary(){\r\n   this.dialogService.loanDetailsSummaryDialog();\r\n  }\r\n  goToLoanEntry(){\r\n    this.dialogService.assetDetailsSummaryDialog();\r\n  }\r\n  goToVehicleDetails(){\r\n    this.dialogService.vehicleDetailsSummaryDialog();\r\n  }\r\n\r\n  openLoanEntryStageViewSummary(){\r\n    this.dialogService.loanAppEntryStageViewSummary();\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n        <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n      </div> -->\r\n      <div class=\"profile-pic text-center\">\r\n        <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Create Retail Loan Account</b></div>\r\n        <div class=\"text-muted\">\r\n            Open a Retail Loan Account with XYZ Bank in a better way. ­­­­\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\"  *ngIf=\"isLoanApplicationEntryDone\" class=\"mt-8\">\r\n      <mat-card class=\"border-size\"\r\n        [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n      >\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div fxFlex=\"10\">\r\n            <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n          </div>\r\n          <div fxFlex=\"30\">\r\n            <h6>Application Entry Stage Completed</h6>\r\n          </div>\r\n          <span fxFlex></span>\r\n          <button\r\n            mat-button\r\n            color=\"primary\"\r\n            (click)=\"openLoanEntryStageViewSummary()\"\r\n          >\r\n            View Summary\r\n          </button>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n      <!-- Card 1 start-->\r\n      <mat-card [ngClass]=\"{'border-size':isLoanDetailScreen || !isLoanDetailScreen}\">\r\n        <mat-card-header>\r\n          <mat-card-title class=\"titleName\">1. Loan Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\" class=\"fontStyle\"\r\n          >\r\n            <div fxFlex=\"50%\"  class=\"notActive\">\r\n              <p class=\"text-align\">\r\n                Basic Details for Loan Account is captured.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/Group 673.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"isLoanDetailScreen\">\r\n              <button\r\n            mat-button\r\n            (click)=\"goToLoanSummary()\"\r\n            color=\"primary\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-container>\r\n\r\n          <ng-container *ngIf=\"!isLoanDetailScreen\" >\r\n              <button \r\n            mat-button\r\n            (click)=\"goToLoan()\"\r\n            color=\"primary\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-container >\r\n      \r\n          \r\n        </mat-card-actions>\r\n       \r\n      </mat-card>\r\n      <!-- Card 1 end -->\r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card [ngClass]=\"{'border-size':isAssetsDetailScreen || !isAssetsDetailScreen && isLoanDetailScreen}\">\r\n        <mat-card-header>\r\n          <mat-card-title class=\"titleName\">2. Asset Details / Vehicle Details / Admission Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\" class=\"fontStyle\"\r\n          >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n              <p class=\"text-align\">\r\n                Details about asset or vehicle or admission is added.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/MaskGroup1_1.svg'\r\n                \"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>        \r\n        </mat-card-content>        \r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"!isLoanDetailScreen; else hideNav\">\r\n            <button\r\n          mat-button [disabled]=\"!isLoanDetailScreen\"        \r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n        </ng-container>\r\n          <div *ngIf=\"isHomeLoan; else hideNav\">\r\n          <ng-container *ngIf=\"isAssetsDetailScreen && isLoanDetailScreen; else showAsset\">\r\n              <button\r\n            mat-button\r\n           (click)=\"goToLoanEntry()\"\r\n            color=\"primary\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-container>\r\n\r\n          <ng-template #showAsset>\r\n              <button \r\n            mat-button\r\n            [routerLink]=\"[ '/loan/account/asset-details' ]\"\r\n            color=\"primary\" [disabled]=\"!isLoanDetailScreen\">\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n          </ng-template>\r\n          </div>\r\n          <div *ngIf=\"isVehicleLoan; else hideNav\">\r\n          <ng-container *ngIf=\"isVehicleDetailScreen && isLoanDetailScreen; else showVehicle\">\r\n            <button\r\n          mat-button\r\n         (click)=\"goToVehicleDetails()\"\r\n          color=\"primary\"\r\n        >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n        </ng-container>\r\n\r\n        <ng-template #showVehicle>\r\n            <button \r\n          mat-button\r\n          [routerLink]=\"[ '/loan/account/vehicle-details' ]\"\r\n          color=\"primary\"\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n        </ng-template>\r\n        </div>\r\n        <div *ngIf=\"isEducationLoan; else hideNav\">\r\n        <ng-container *ngIf=\"isAdmissionDetailScreen && isLoanDetailScreen; else showAdmission\">\r\n          <button\r\n          mat-button\r\n          color=\"primary\"\r\n          (click)=\"goToAdmissionDetails()\"\r\n        >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-container>\r\n          \r\n        <ng-template #showAdmission>\r\n          <button \r\n        mat-button\r\n        [routerLink]=\"[ '/loan/account/admission-details' ]\"\r\n        color=\"primary\"\r\n      >\r\n        Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n      </ng-template>\r\n      </div>\r\n        </mat-card-actions>      \r\n        \r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>    \r\n    <!-- card 3 start -->\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\" >\r\n      <mat-card [ngClass]=\"{'border-size':isCustomerInformationScreen || !isCustomerInformationScreen && (isAssetsDetailScreen || isAdmissionDetailScreen ||isVehicleDetailScreen)}\">\r\n        <mat-card-header>\r\n          <mat-card-title class=\"titleName\">3. Customer Information</mat-card-title>\r\n          <!-- <mat-card-title *ngIf=\"!isLoanDetailScreen\" >2. Customer Information</mat-card-title> -->\r\n          <!-- <mat-card-title *ngIf=\"isLoanDetailScreen\">3. Customer Information</mat-card-title> -->\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\" class=\"fontStyle\"\r\n          >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n              <p class=\"text-align\">All the primary information about the customer is captured.</p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"'assets/images/svg/undraw_personal_information_re_vw8a.svg'\"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"isCustomerInformationScreen && (isAssetsDetailScreen || isAdmissionDetailScreen ||isVehicleDetailScreen); else showCustomerInfo\">\r\n            <button\r\n            mat-button\r\n            color=\"primary\"\r\n            (click)=\"goToCustomerInfoDetails()\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n        <ng-template #showCustomerInfo>\r\n          <button \r\n        mat-button\r\n        [routerLink]=\"[ '/loan/account/customer-information' ]\"\r\n        color=\"primary\"\r\n        [disabled]=\"!isAnyScreen\"\r\n      >\r\n        Add Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n      </ng-template>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <ng-template #hideNav>\r\n            \r\n    </ng-template>\r\n    <!-- Card 3 end -->\r\n    <!-- card 4 start -->\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card [ngClass]=\"{'border-size':isMandateDetailScreen || !isMandateDetailScreen && isCustomerInformationScreen}\">\r\n        <mat-card-header>\r\n          <mat-card-title class=\"titleName\">4. Mandate Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\" class=\"fontStyle\"\r\n          >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n              <p class=\"text-align\">\r\n                Mode of operation, Signatory details of the customer is added.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"'assets/images/svg/undraw_Terms_re_6ak_4.svg'\"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"isMandateDetailScreen && isCustomerInformationScreen; else showMandte\">\r\n            <button\r\n            mat-button\r\n            color=\"primary\"\r\n            (click)=\"goToMandateDetails()\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n          </ng-container>\r\n          <ng-template #showMandte>\r\n            <button\r\n            mat-button\r\n            color=\"primary\"\r\n            [routerLink]=\"[ '/loan/account/mandate-details' ]\"\r\n            [disabled]=\"!isCustomerInformationScreen\"\r\n          >\r\n            Add Details<mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n          </ng-template>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <!-- card 4 end -->\r\n    <!-- card -5 start -->\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card [ngClass]=\"{'border-size':isFinancialDetailScreen || !isFinancialDetailScreen && isMandateDetailScreen}\">\r\n        <mat-card-header>\r\n          <mat-card-title class=\"titleName\">5. Financial Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\" class=\"fontStyle\"\r\n          >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n              <p class=\"text-align\">\r\n                The basic details and the income and expense details are captured.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/MaskGroup_2.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <ng-container *ngIf=\"isFinancialDetailScreen && isMandateDetailScreen; else showFinance\">\r\n            <button\r\n              mat-button\r\n              color=\"primary\"\r\n              (click)=\"goToFinancialDetails()\"\r\n            >\r\n              View Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n          </ng-container>\r\n            <ng-template #showFinance>\r\n              <button\r\n              mat-button\r\n              color=\"primary\"\r\n              [routerLink]=\"[ '/loan/account/financial-details' ]\"\r\n              [disabled]=\"!isMandateDetailScreen\"\r\n            >\r\n              Add Details<mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n            </ng-template>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <!-- card 5 end -->\r\n\r\n     <!-- card -6 start -->\r\n     <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <mat-card [ngClass]=\"{'border-size':isCollateralDetailsScreen || !isCollateralDetailsScreen && isFinancialDetailScreen}\">\r\n          <mat-card-header>\r\n            <mat-card-title class=\"titleName\">6. Collateral Details</mat-card-title>\r\n            <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div\r\n              fxLayout=\"row\"\r\n              fxLayoutGap=\"10px\"\r\n              fxLayoutAlign=\"space-between start\" class=\"fontStyle\"\r\n            >\r\n              <div fxFlex=\"50%\" class=\"notActive\">\r\n                <p class=\"text-align\">\r\n                    The additional collateral which is offered by the customer as security for the loan is added.\r\n                </p>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                <img [src]=\"'assets/images/svg/MaskGroup_3.svg'\" class=\"card-img\" />\r\n              </div>\r\n            </div>\r\n            <!--begin::Progress-->\r\n            <!-- <div class=\"mb-1\">\r\n              <mat-progress-bar\r\n                [color]=\"'primary'\"\r\n                mode=\"determinate\"\r\n                [value]=\"100\"\r\n                class=\"rounded\"\r\n                style=\"height: 6px\"\r\n              >\r\n              </mat-progress-bar>\r\n              <p class=\"m-0 text-right\">Completed</p>\r\n              <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n            </div> -->\r\n            <!--end::Progress-->\r\n          </mat-card-content>\r\n          <!--begin:: Card body-->\r\n          <mat-divider></mat-divider>\r\n          <mat-card-actions>\r\n            <ng-container *ngIf=\"isCollateralDetailsScreen && isFinancialDetailScreen; else showCollateral\">\r\n              <button\r\n                mat-button\r\n                color=\"primary\"\r\n                (click)=\"goToCollateralDetails()\" >\r\n                View Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n            </ng-container>\r\n              <ng-template #showCollateral>\r\n                <button\r\n                mat-button\r\n                color=\"primary\"\r\n                [routerLink]=\"[ '/loan/account/collateral_details' ]\"\r\n                [disabled]=\"!isFinancialDetailScreen\"\r\n              >\r\n                Add Details<mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n              </ng-template>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n      </div>\r\n      <!-- card 6 end -->\r\n\r\n      <!-- card -7 start -->\r\n     <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n        <mat-card [ngClass]=\"{'border-size':isGuarantorDetailScreen || !isGuarantorDetailScreen && isCollateralDetailsScreen}\">\r\n          <mat-card-header>\r\n            <mat-card-title class=\"titleName\">7. Guarantor Details</mat-card-title>\r\n            <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div\r\n              fxLayout=\"row\"\r\n              fxLayoutGap=\"10px\"\r\n              fxLayoutAlign=\"space-between start\" class=\"fontStyle\"\r\n            >\r\n              <div fxFlex=\"50%\" class=\"notActive\">\r\n                <p class=\"text-align\">\r\n                    Any number of guarantor details can be added.\r\n                </p>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                <img [src]=\"'assets/images/svg/MaskGroup_4.svg'\" class=\"card-img\" />\r\n              </div>\r\n            </div>\r\n            <!--begin::Progress-->\r\n            <!-- <div class=\"mb-1\">\r\n              <mat-progress-bar\r\n                [color]=\"'primary'\"\r\n                mode=\"determinate\"\r\n                [value]=\"100\"\r\n                class=\"rounded\"\r\n                style=\"height: 6px\"\r\n              >\r\n              </mat-progress-bar>\r\n              <p class=\"m-0 text-right\">Completed</p>\r\n              <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n            </div> -->\r\n            <!--end::Progress-->\r\n          </mat-card-content>\r\n          <!--begin:: Card body-->\r\n          <mat-divider></mat-divider>\r\n          <mat-card-actions>\r\n            <ng-container *ngIf=\"isGuarantorDetailScreen && isCollateralDetailsScreen; else showGuarantor\">\r\n              <button\r\n                mat-button\r\n                color=\"primary\"\r\n                (click)=\"goToGuarantorDetails()\"\r\n              >\r\n                View Details <mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n            </ng-container>\r\n              <ng-template #showGuarantor>\r\n                <button\r\n                mat-button\r\n                color=\"primary\"\r\n                [routerLink]=\"[ '/loan/account/guarantor_details' ]\"\r\n                [disabled]=\"!isCollateralDetailsScreen\"\r\n              >\r\n                Add Details<mat-icon>chevron_right</mat-icon>\r\n              </button>\r\n              </ng-template>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n      </div>\r\n      <!-- card 7 end -->\r\n  </div>\r\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { STEP_STATE } from '@angular/cdk/stepper';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\n\r\n\r\nimport { MatVerticalStepper } from '@angular/material/stepper';\r\nimport { AccountService } from '../../account.service';\r\n@Component({\r\n  selector: 'app-supervisor-approved-details',\r\n  templateUrl: './supervisor-approved-details.component.html',\r\n  styleUrls: ['./supervisor-approved-details.component.scss']\r\n})\r\nexport class SupervisorApprovedDetailsComponent implements OnInit {\r\n  \r\n  isLinear = false;\r\n\r\n\r\n  @ViewChild(MatVerticalStepper) stepper: MatVerticalStepper;\r\n  loanInfo: any;\r\n  ngAfterViewInit() {\r\n    console.log('in afterview init')\r\n    this.stepper._getIndicatorType = () =>  STEP_STATE.NUMBER; //'number'\r\n  }\r\n  data: any;\r\n  customerInfoResp: any;\r\n  loanEntrySummaryInfo: { isAppEntryView: boolean; data: any; };\r\n  loanEnrichmentSummaryInfo: { isAppEntryView: boolean; data: any; };\r\n  customerInfo: { isAppEntryView: boolean; data: any; };\r\n  loanaccountID: any;\r\n\r\n\r\n\r\n  constructor(\r\n    public appEntryService: ApplicationEntryStageService, private ls: LocalStoreService,private apiService:ApiService,\r\n    private router: Router,private accountService : AccountService, private dialogService:DialogService\r\n    // private cdk: ChangeDetectorRef\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ls.setItem('isapprovedSupervisor', true);\r\n    this.apiService.sendApprovedStatus(true);\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    console.log(\"this.loanaccountID\", this.loanaccountID);\r\n    setTimeout(() => {\r\n      this.getLoanEntryStageInfo(this.loanaccountID);\r\n    }, 10);\r\n  \r\n    //this.getLoanEnrichmentStageInfo(this.loanaccountID);\r\n  }\r\n\r\n  getLoanEntryStageInfo(loanaccountID) {\r\n    this.appEntryService.getLoanEntryStageInfo(loanaccountID)\r\n      .subscribe(loanResp => {\r\n        this.data = loanResp;\r\n        if (this.data != null) {\r\n          console.log('data :: ', this.data);\r\n        //  this.setData(loanResp)\r\n          this.fetchCustomersByLoanAccIdForViewSummary(loanaccountID);\r\n        }\r\n      });\r\n  }\r\n  /*getLoanEnrichmentStageInfo(loanaccountID) {\r\n    this.appEntryService.getLoanENtrichmentInfo(loanaccountID)\r\n      .subscribe(loanResp => {\r\n        this.data = loanResp;\r\n        if (this.data != null) {\r\n          console.log('data :: ', this.data);\r\n          //this.setData1(loanResp)\r\n          this.fetchCustomersByLoanAccIdForViewSummary(loanaccountID);\r\n        }\r\n      });\r\n  }*/\r\n  fetchCustomersByLoanAccIdForViewSummary(loanaccountID) {\r\n    this.appEntryService.fetchCustomersByLoanAccIdForViewSummary(loanaccountID)\r\n      .subscribe(custResp => {\r\n        console.log('custResp :: ', custResp);\r\n        this.customerInfoResp = custResp;\r\n        if (this.customerInfoResp != null) {\r\n          this.customerInfo = {\r\n            'isAppEntryView': true,\r\n            'data': this.customerInfoResp.data\r\n          }\r\n        }\r\n        // this.cdk.markForCheck();\r\n        // this.cdk.detectChanges();\r\n      });\r\n  }\r\n\r\n  \r\n  Done(){\r\n    this.ls.setItem('APPROVED_DETAILS', true);\r\n    this.ls.setItem('SUPERVISOR_APPROVAL_STAGE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/loan/account/offer-issue/list`]);\r\n  }\r\n  Back(){\r\n    this.router.navigate([`/loan/account/supervisor-summary`]);\r\n  }\r\n    \r\n  // getAllData(id) {\r\n  //   this.apiService.getQualitativeScorecardDetails(id).subscribe((response) => {\r\n  //     this.qualitativeScoreboardSummary = response;\r\n  //   });\r\n\r\n}","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/MaskGroup_16.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title\"><b>Approval Details</b></div>\r\n    </div>\r\n  </div>\r\n<mat-vertical-stepper  [linear]=\"isLinear\" #stepper>\r\n  <mat-step>\r\n     <ng-template matStepLabel>Loan Entry Stage Details</ng-template>\r\n    <app-loan-app-entry-stage-view-summary></app-loan-app-entry-stage-view-summary>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Loan Application Enrichment</ng-template>\r\n    <app-loan-enrichment-view-summary> </app-loan-enrichment-view-summary>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Underwriting Stage</ng-template>\r\n    <app-underwriting-stage-summary></app-underwriting-stage-summary>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Assessment Stage</ng-template>\r\n    <app-loan-assessment-view-summary></app-loan-assessment-view-summary>\r\n  </mat-step>\r\n</mat-vertical-stepper>\r\n\r\n</div>\r\n\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n  <button mat-button rounded class=\"Back\"  (click)=\"Back()\">\r\n    Back\r\n  </button>\r\n  <button  mat-raised-button class=\"Next\" (click)=\"Done()\">\r\n    Next\r\n  </button>\r\n</div>\r\n ","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-assessment-details',\r\n  templateUrl: './assessment-details.component.html',\r\n  styleUrls: ['./assessment-details.component.scss']\r\n})\r\nexport class AssessmentDetailsComponent implements OnInit {\r\n\r\n  public assessmentForm: FormGroup;\r\n\r\n  userRecommendation=['Recomended For Approval', 'Recommended For Reject'];\r\n  systemRecommendation=['Recomended For Approval', 'Recommended For Reject'];\r\n  \r\n  \r\n  constructor( private router:Router, private snack: MatSnackBar, private cdr: ChangeDetectorRef, private apiService: ApiService, private _location: Location, private fb: FormBuilder,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildAssessmentForm({});\r\n  }\r\n\r\n  buildAssessmentForm(item) {\r\n    this.assessmentForm = this.fb.group({\r\n      loanAccountId:[item.loanAccountId = \"1234567\"],\r\n      requestedLoanAmount: [item.requestedLoanAmount],\r\n      loanTenure: [item.loanTenure],\r\n      rateOfInterest: [item.rateOfInterest],\r\n      systemRecommendation: [item.systemRecommendation],\r\n      userRecommendation: [item.userRecommendation || ''],\r\n      loanAmountRecommendation: [item.loanAmountRecommendation || ''],\r\n      approvedLoanAmount: [item.approvedLoanAmount],\r\n      finalLoanTenure: [item.finalLoanTenure],\r\n      finalRate: [item.finalRate],\r\n    });  \r\n  }\r\n\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  next(){\r\n    this.apiService.assessmentDetails(this.assessmentForm.value).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.cdr.markForCheck();\r\n      }\r\n    })\r\n    this.router.navigate([`/loan/account-approval/offer-acceptReject-details`]);\r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([`/loan/account-approval/list`]);\r\n  } \r\n}\r\n","\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/undraw_personal_information_re_vw8a.svg\" alt=\"\" class=\"w-80\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title\"><b>Assessment Details</b></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <!-- <mat-progress-bar [mode]=\"determinate\" class=\"session-progress\"></mat-progress-bar> -->\r\n        <mat-card class=\"p-0\">\r\n            <mat-card-title class=\"\">\r\n                <div class=\"card-title-text\">Assessment Details</div>\r\n                <mat-divider></mat-divider>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"assessmentForm\">\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Requested Loan Amount</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input \r\n                                    matInput (keypress)=_keyPress($event) \r\n                                    maxlength=\"10\" \r\n                                    \r\n                                    formControlName=\"requestedLoanAmount\" \r\n                                    placeholder=\"Requested Loan Amount\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Loan Tenure</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input \r\n                                    matInput maxlength=\"8\" \r\n                                    \r\n                                    formControlName=\"loanTenure\" \r\n                                    placeholder=\"Loan Tenure\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Rate Of Interest</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input \r\n                                    matInput (keypress)=_keyPress($event)\r\n                                     maxlength=\"10\" \r\n                                    \r\n                                     formControlName=\"rateOfInterest\" \r\n                                     placeholder=\"Rate Of Interest\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>System Recommendation</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>System Recommendation</mat-label>\r\n                                    <mat-select disableOptionCentering\r\n                                    name=\"prefix\" \r\n                                    formControlName=\"systemRecommendation\"\r\n                                    >\r\n                                    <mat-option value=\"\" >Select</mat-option>\r\n                                        <mat-option *ngFor=\"let i of systemRecommendation\" [value]=\"i\">{{ i }}</mat-option>\r\n                                    </mat-select>\r\n\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>User Recommendation</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>User Recommendation</mat-label>\r\n                                    <mat-select disableOptionCentering\r\n                                    name=\"prefix\" \r\n                                    formControlName=\"userRecommendation\"\r\n                                   >\r\n                                   <mat-option value=\"\" >Select</mat-option>\r\n                                        <mat-option *ngFor=\"let i of userRecommendation\" [value]=\"i\">{{ i }}</mat-option>\r\n                                    </mat-select>\r\n\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Loan Amount Recommended</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input \r\n                                    matInput (keypress)=_keyPress($event) \r\n                                    maxlength=\"10\" \r\n                                    \r\n                                    formControlName=\"loanAmountRecommendation\" \r\n                                    placeholder=\"Loan Amount Recommended\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Approved Loan Amount</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input \r\n                                    matInput (keypress)=_keyPress($event) \r\n                                    maxlength=\"10\" \r\n                                   \r\n                                    formControlName=\"approvedLoanAmount\" \r\n                                    placeholder=\"Approved Loan Amount\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Final Loan tenure</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input \r\n                                    matInput maxlength=\"8\" \r\n                                   \r\n                                    formControlName=\"finalLoanTenure\" \r\n                                    placeholder=\"Final Loan Tenure\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Final Rate</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input \r\n                                    matInput (keypress)=_keyPress($event) \r\n                                    maxlength=\"10\" \r\n                                    \r\n                                    formControlName=\"finalRate\" \r\n                                    placeholder=\"Final Rate\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"button\">\r\n                        <!-- -->\r\n                        <button mat-button class=\"Back\" (click)=\"goBack()\" >Back</button>\r\n                        <button mat-stroked-button class=\"Next\"  (click)=\"next()\">Next</button>\r\n                 \r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { rumangoAnimations } from 'app/shared/animations/rumango-animations';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/home/account.service';\r\n\r\n@Component({\r\n     selector: 'app-offer-accept-reject-stage',\r\n    templateUrl: './offer-accept-reject-stage.component.html',\r\n     styleUrls: ['./offer-accept-reject-stage.component.scss']\r\n   })\r\nexport class OfferAcceptRejectStageComponent implements OnInit {\r\n  isQualitativeScreen:boolean = false;\r\n  isReportScreen:boolean = false;\r\n  accountId: any;\r\n  isAssessmentStageDone: boolean = false;\r\n  assessmentReportSummary:any;\r\n  isChargesScreen: boolean = false;\r\n  overDraftByStatus:boolean;\r\n  isAssesmentDetailsScreen: boolean = false;\r\n  isOfferIssueScreen: boolean = false; \r\n  isOfferIssueRejectScreen: boolean  = false;\r\n  \r\n  constructor(private router: Router, private dialogService: DialogService, \r\n    private ls: LocalStoreService, private cdr: ChangeDetectorRef,\r\n     private accountService: AccountService, private apiService: ApiService) { }\r\n\r\n  // ngOnInit(): void {\r\n    \r\n  // }\r\n  ngOnInit() {\r\n    this.accountId = this.ls.getItem('accountId');\r\n    let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n    console.log(\"fetch\",overdraftStatus);\r\n    this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n    console.log(this.overDraftByStatus);\r\n    this.isAssesmentDetailsScreen = this.ls.getItem('assessmentScreen');\r\n    this.isOfferIssueScreen = this.ls.getItem('OfferIssue');\r\n    this.isOfferIssueRejectScreen = this.ls.getItem('OfferIssueRejectScreen');\r\n   \r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n      this.accountId = this.ls.getItem('accountId');\r\n      let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n      this.overDraftByStatus = overdraftStatus != null ? overdraftStatus.isActive : false; \r\n      this.isAssessmentStageDone = this.ls.getItem('assessmentStage');\r\n      this.isQualitativeScreen = this.ls.getItem('ASSESSMENT_QA_DONE');\r\n      this.isAssesmentDetailsScreen = this.ls.getItem('assessmentScreen');\r\n     this.isOfferIssueScreen = this.ls.getItem('OfferIssue');\r\n     this.isOfferIssueRejectScreen = this.ls.getItem('OfferIssueRejectScreen');\r\n     \r\n      this.cdr.markForCheck();\r\n    });\r\n    this.getData(this.accountId);\r\n  }\r\n\r\n  getData(id){\r\n    this.apiService.getApplnAssessmentDetails(id).subscribe((response) => {\r\n      this.assessmentReportSummary = response;\r\n      console.log( this.assessmentReportSummary);\r\n    });\r\n  }\r\n\r\n  popupAssessment(){\r\n    this.dialogService.offerAssessmentSummaryDialog();\r\n  }\r\n\r\n  popup(){\r\n    this.dialogService.offerIssueSummaryDialog();\r\n  }\r\n\r\n  popupOfferIssue(){\r\n    this.dialogService.offerAcceptRejectSummaryDialog();\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <!-- <div class=\"propic text-center\">\r\n      <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n    </div> -->\r\n    <div class=\"profile-pic text-center\">\r\n      <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n      <i class=\"fa fa-edit upload-icon\"></i>\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title\"><b>Create Retail Loan Account</b></div>\r\n      <div class=\"text-muted\">\r\n          Open a Retail Loan Account with XYZ Bank in a better way. ­­­­\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\"  *ngIf=\"isOfferIssueRejectScreen\" class=\"mt-8\">\r\n    <mat-card\r\n      [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n    >\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n        <div fxFlex=\"10\">\r\n          <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n        </div>\r\n        <div fxFlex=\"30\">\r\n          <h6>Offer Accept/Reject Stage Completed</h6>\r\n        </div>\r\n        <span fxFlex></span>\r\n        <button\r\n          mat-button\r\n          color=\"primary\"\r\n          (click)=\"popupOfferIssue()\"\r\n        >\r\n          View Summary\r\n        </button>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"row wrap\" class=\"mt-12\">\r\n  <!--<div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n     [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n    <!-- Card 1 start\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <mat-card-title>1. Assessment Details</mat-card-title>\r\n        <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"10px\"\r\n          fxLayoutAlign=\"space-between start\"\r\n        >\r\n          <div fxFlex=\"50%\">\r\n            <p>\r\n              The evaluation in terms of qualitative and quantitative scores are recorded.\r\n            </p>\r\n          </div>\r\n          <div fxFlex=\"50%\">\r\n            <img [src]=\"'assets/images/svg/Group 673.svg'\" class=\"card-img\" />\r\n          </div>\r\n        </div>\r\n        <!--begin::Progress\r\n        <div class=\"mb-1\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> \r\n        </div>\r\n        <!--end::Progress\r\n      </mat-card-content>\r\n      <!--begin:: Card body\r\n      <mat-divider></mat-divider>\r\n      <mat-card-actions>\r\n        <a mat-button\r\n          color=\"primary\"  *ngIf=\"!isAssesmentDetailsScreen\" \r\n          [routerLink]=\"['/loan/account/offerstage/offer-assessment']\"\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </a>\r\n        <a mat-button\r\n          color=\"primary\" *ngIf=\"isAssesmentDetailsScreen\" \r\n          (click)=\"popupAssessment()\" \r\n        >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </a>\r\n        \r\n        \r\n       \r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <!-- Card 1 end\r\n  </div>\r\n  <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <!-- card 2 start\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <mat-card-title>2. Offer Issue</mat-card-title>\r\n        <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"10px\"\r\n          fxLayoutAlign=\"space-between start\"\r\n        >\r\n          <div fxFlex=\"50%\">\r\n            <p>\r\n              Enables the apllication to capture the offer issue date.\r\n            </p>\r\n          </div>\r\n          <div fxFlex=\"50%\">\r\n            <img\r\n              [src]=\"\r\n                'assets/images/svg/undraw_personal_information_re_vw8a.svg'\r\n              \"\r\n              class=\"card-img\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <!--begin::Progress\r\n        <div class=\"mb-1\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n        </div>\r\n        <!--end::Progress\r\n      </mat-card-content>\r\n      <!--begin:: Card body\r\n      <mat-divider></mat-divider>\r\n      <mat-card-actions>\r\n       \r\n          <button\r\n          mat-button\r\n          color=\"primary\" [disabled]=\"!isAssesmentDetailsScreen \"\r\n          *ngIf=\"!isAssesmentDetailsScreen\"\r\n          [routerLink]=\"['/loan/account/offerstage/offer-issue']\"\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        <a mat-button\r\n          color=\"primary\" *ngIf=\"isAssesmentDetailsScreen  &&  isOfferIssueScreen\" \r\n          (click)=\"popup()\"\r\n        >\r\n           View Details <mat-icon>chevron_right</mat-icon>\r\n        </a>\r\n       \r\n      </mat-card-actions>\r\n    </mat-card> -->\r\n    <!-- Card 2 end\r\n  </div>\r\n  <!-- card 3 start -->\r\n  <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <mat-card-title>1. Offer Accept / Reject Details</mat-card-title>\r\n        <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutGap=\"10px\"\r\n          fxLayoutAlign=\"space-between start\"\r\n        >\r\n          <div fxFlex=\"50%\" class=\"notActive\">\r\n            <p class=\"text-align\">Offer Accept or Reject Details are provided.</p>\r\n          </div>\r\n          <div fxFlex=\"50%\">\r\n            <img\r\n              [src]=\"'assets/images/svg/undraw_approve_qwp7.svg'\"\r\n              class=\"card-img\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <!--begin::Progress-->\r\n        <div class=\"mb-1\" *ngIf=\"isOfferIssueRejectScreen\">\r\n          <mat-progress-bar\r\n            [color]=\"'primary'\"\r\n            mode=\"determinate\"\r\n            [value]=\"100\"\r\n            class=\"rounded\"\r\n            style=\"height: 6px\"\r\n          >\r\n          </mat-progress-bar>\r\n          <p class=\"m-0 text-right\">Completed</p>\r\n          <!-- <span class=\"text-muted\">| {{ item.percentage }}%</span> -->\r\n        </div>\r\n        <!--end::Progress-->\r\n      </mat-card-content>\r\n      <!--begin:: Card body-->\r\n      <mat-divider></mat-divider>\r\n      <mat-card-actions>\r\n        <ng-container *ngIf=\"isOfferIssueRejectScreen; else showReport\">\r\n        <button\r\n        mat-button\r\n        (click)=\"popupOfferIssue()\"\r\n        color=\"primary\"\r\n      >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-container>\r\n        <ng-template #showReport>\r\n          <button\r\n          mat-button\r\n          [routerLink]=\"['/loan/account/offerstage/offer-accept-reject']\"\r\n          color=\"primary\" \r\n          >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        </ng-template>\r\n      </mat-card-actions>\r\n      <!-- <mat-card-actions>\r\n          <button\r\n          mat-button\r\n          color=\"primary\" [disabled]=\"!isOfferIssueScreen \"\r\n        \r\n          [routerLink]=\"['/loan/account/offerstage/offer-accept-reject']\">\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n        </button>\r\n        <a mat-button\r\n          color=\"primary\"\r\n          *ngIf=\"isOfferIssueScreen && isOfferIssueRejectScreen\"\r\n          (click)=\"popupOfferIssue()\" \r\n        >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n        </a>\r\n      </mat-card-actions> -->\r\n    </mat-card>\r\n  </div>\r\n  <!-- Card 3 end -->\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-supervisor-approval-stage',\r\n  templateUrl: './supervisor-approval-stage.component.html',\r\n  styleUrls: ['./supervisor-approval-stage.component.scss']\r\n})\r\nexport class SupervisorApprovalStageComponent implements OnInit {\r\n  loanApprovedDetailsScreen: boolean=false;\r\n\r\n  constructor(private ls: LocalStoreService,private router: Router,private apiService:ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanApprovedDetailsScreen = this.ls.getItem('APPROVED_DETAILS');\r\n  \r\n  }\r\naddDetails(){\r\n  console.log(\"calling\")\r\n  this.apiService.sendApprovedStatus(true);\r\n  this.router.navigate([\"/loan/account/supervisor-approveddetails\"]);\r\n}\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n        <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n      </div> -->\r\n      <div class=\"profile-pic text-center\">\r\n         <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Create Retail Loan Account</b></div>\r\n        <div class=\"text-muted\">\r\n            Open a Retail Loan Account with XYZ Bank in a better way. ­­­­\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\" *ngIf=\"loanApprovedDetailsScreen\" class=\"mt-8\">\r\n      <mat-card\r\n        [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n      >\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <div fxFlex=\"10\">\r\n            <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n          </div>\r\n          <div fxFlex=\"30\">\r\n            <h6>Supervisor Approval Stage</h6>\r\n          </div>\r\n          <span fxFlex></span>\r\n          <button\r\n            mat-button\r\n            color=\"primary\"\r\n            (click)=\"addDetails()\"\r\n          >\r\n          <!-- (click)=\"openLoanEntryStageViewSummary()\" -->\r\n            View Details\r\n          </button>\r\n        </div>\r\n      </mat-card>\r\n    </div>    \r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <!--<div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n       [ngClass]=\"{'not-active':item.status == ''}\" \r\n      <!-- Card 1 start\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>1. Assesment Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> \r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                Evalution report in terms of the qualitive and quantitative score is displayed.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/Group 673.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n          </div> -->\r\n          <!--end::Progress\r\n        </mat-card-content>\r\n        <!--begin:: Card body\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <a mat-button\r\n            color=\"primary\"\r\n            [routerLink]=\"['/loan/account/supervisor-assessmentdetails/']\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end\r\n    </div> -->\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start-->\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>1. Approval Details </mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n              <p class=\"text-align\">\r\n                Approval details are captured.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/MaskGroup_16.svg'\r\n                \"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n          <!-- <div class=\"mb-1\">\r\n            <mat-progress-bar\r\n              [color]=\"'primary'\"\r\n              mode=\"determinate\"\r\n              [value]=\"100\"\r\n              class=\"rounded\"\r\n              style=\"height: 6px\"\r\n            >\r\n            </mat-progress-bar>\r\n            <p class=\"m-0 text-right\">Completed</p>\r\n            <span class=\"text-muted\">| {{ item.percentage }}%</span>\r\n          </div> -->\r\n          <!--end::Progress-->\r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <!--<ng-container >\r\n            <button\r\n            mat-button\r\n            color=\"primary\" \r\n          >\r\n            view Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>-->\r\n        <ng-container >\r\n            <button\r\n            mat-button\r\n            color=\"primary\"\r\n            (click)=\"addDetails()\" \r\n          >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n          </button>\r\n        </ng-container>\r\n         \r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-repayment-summary',\r\n  templateUrl: './loan-repayment-summary.component.html',\r\n  styleUrls: ['./loan-repayment-summary.component.scss']\r\n})\r\nexport class LoanRepaymentSummaryComponent implements OnInit {\r\n  resp: any;\r\n  loanAccountId: any;\r\n  loanInfo: any;\r\n  constructor(\r\n    public ls: LocalStoreService,\r\n    public dialogRef: MatDialogRef<LoanRepaymentSummaryComponent>, private api:ApiService,private router: Router) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.loanAccountId = this.ls.getItem(\"loanAccountId\");\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanAccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    setTimeout(() => {\r\n      this.api.loanRepaymentFetchById(this.loanAccountId).subscribe(resp=>{\r\n        this.resp=resp;\r\n        console.log(this.resp)\r\n      }\r\n        )\r\n    }, 10);\r\n    \r\n    \r\n  }\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  goToEdit() {\r\n    this.dialogRef.close();\r\n    this.router.navigate([`/loan/account/application-enrichment/loan-repayment/${this.loanAccountId}`]);\r\n\r\n    // this.router.navigate([`/home/application/customer-information/${this.productAccountIdCust}`]);\r\n  }\r\n}","<div class=\"full-width\">\r\n    <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Loan Repayment Details Summary</h4>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\" *ngIf=\"resp\">\r\n                <h7 fxLayout=\"row\">Loan Repayment Details</h7>\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                      \r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Type of Repayment</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.typeOfRepayment}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Repayment Frequency</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.repaymentFrequency}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">First Repayment Date</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.firstRepaymentDate}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                    \r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.loanTenure}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Maturity Date</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.maturityDate}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Repayment Mode</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.repaymentMode}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                      \r\n                                    </ng-container>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Moratorium Period ( in months)</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.moraturioumPeriod}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                       \r\n                                      \r\n                                    </ng-container>\r\n                                </div>\r\n                            \r\n\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <h7 fxLayout=\"row\">Internal Account</h7>\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Customer Account</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.customerAccount}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Branch Code</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.branchCode}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Bank Name</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.bankName}}</mat-hint>\r\n                                        </div>\r\n                                        <!-- <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">IFSC Code</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.ifscCode}}</mat-hint>\r\n                                        </div> -->\r\n                                    </ng-container>\r\n                                </div>\r\n                          \r\n\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n                              \r\n\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <p class=\"editButton\" (click)=\"goToEdit()\">Edit</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> ","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { AccountService } from \"../../account.service\";\r\n\r\n\r\n@Component({\r\n  selector: \"app-loan-charge-details\",\r\n  templateUrl: \"./loan-charge-details.component.html\",\r\n  styleUrls: [\"./loan-charge-details.component.scss\"],\r\n})\r\nexport class LoanChargeDetailsComponent implements OnInit {\r\n  interestForm: FormGroup;\r\n  accountId: any;\r\n  intrestFlag: Boolean;\r\n  interestResp: any;\r\n  accountType: String = \"Home Loan\";\r\n  resp: { intrestType: string; amout: string; waiver: string }[];\r\n  loanaccountID: any;\r\n  loanInfo: any;\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private snack: MatSnackBar,\r\n    private ls: LocalStoreService,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    this.accountId = this.ls.getItem(\"accountId\");\r\n\r\n    this.interestForm = this.formBuilder.group({\r\n      chargeInfo: new FormArray([]),\r\n    });\r\n    this.api\r\n      .getFlexcubeDetails(\"chargeDetails\", this.accountType)\r\n      .subscribe((response) => {\r\n        this.onChangeInterest(response.length);\r\n        this.in.patchValue(response);\r\n      });\r\nsetTimeout(() => {\r\n  this.api.loanCahrgeFetchById(this.loanaccountID).subscribe((resp) => {\r\n    console.log(\"resp from backend \", this.resp);\r\n    this.resp = resp;\r\n    this.onChangeInterest(this.resp.length);\r\n    this.in.patchValue(this.resp);\r\n  });\r\n}, 10);\r\n  \r\n  }\r\n  assign(accountId) {\r\n    // this.accountId = accountId;\r\n  }\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            amout: [\"\",Validators.required],\r\n            waiver: [true],\r\n            loanAccountId: [this.loanaccountID],\r\n            chargeDetailsId: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.chargeInfo as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n    console.log(this.accountId);\r\n    this.router.navigate([\r\n      `/loan/account/application-enrichment`,\r\n    ]);\r\n  }\r\n  appendPercentage(event) {\r\n    // console.log(event.key)\r\n    console.log(event.target.value);\r\n\r\n    if (!event.target.value.length) return;\r\n\r\n    if (event.target.value.length === 1) {\r\n      event.target.value = `${event.target.value}%`;\r\n    }\r\n    if (event.target.value.length > 1) {\r\n      event.target.value = `${event.target.value.slice(0, -1)}%`;\r\n    }\r\n  }\r\n\r\n  onSubmit(form) {\r\n    console.log(\"form\", form.chargeInfo);\r\n    form.chargeInfo = form.chargeInfo.map((chargeInfo) => ({\r\n      ...chargeInfo,\r\n      loanAccountId: this.loanaccountID,\r\n    }));\r\n\r\n    this.api.loanchargeSave(form).subscribe(\r\n      (resp) => {\r\n        this.snack.open(\"Charge Details Saved!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.next();\r\n        console.log(\"backend response from intrest saving\", resp);\r\n      },\r\n      (err) => {\r\n        this.snack.open(\r\n          \"Not able to connect to server!\",\r\n          \"INTERNAL SERVER ERROR\",\r\n          {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"chargeInfo detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n  checkbox(event) {\r\n    console.log(event.checked);\r\n  }\r\n  next(){\r\n    this.ls.setItem('LOAN_CHARGE_DETAILS', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([\r\n    `/loan/account/application-enrichment/account-services`,\r\n  ]);\r\n}\r\n  \r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/chargeDetails.svg\" alt=\"\" class=\"w-81\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title\"><h2>Charge Details</h2></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\" class=\"m-333\">\r\n    <div class=\"mt-24\"></div>\r\n    <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\" class=\"chargeForm\">\r\n      <!-- <div class=\"spanDivider1\">\r\n        <span class=\"span\">Charge Details \r\n        </span>\r\n        <mat-divider class=\"divider\"></mat-divider>\r\n      </div> -->\r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Charge Details</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <table class=\"cart-table default-bg mat-elevation-z0\">\r\n        <thead class=\"tr\">\r\n          <tr class=\"theadClass\">\r\n            <th>Interest Type</th>\r\n            <th>Amount</th>\r\n            <th>waiver</th>\r\n\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let chargeInfo of in.controls; let i = index\" class=\"tableRow\">\r\n            <ng-container [formGroup]=\"chargeInfo\">\r\n              <td>\r\n                <mat-card class=\"matCardBox\">\r\n                  <input class=\"input\" matInput formControlName=\"intrestType\" name=\"account_branch\"\r\n                    placeholder=\"Interest Type\" readonly/>\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <mat-card class=\"matCardBox\"><span>&#8377;</span>\r\n                  <input class=\"input\" type=\"number\" matInput formControlName=\"amout\" name=\"account_branch\"\r\n                    placeholder=\"Amount\"/>\r\n\r\n                </mat-card>\r\n              </td>\r\n              <td>\r\n                <div class=\"waiver-pos\">\r\n                  <mat-checkbox formControlName=\"waiver\" (change)='checkbox($event)' color=\"primary\"></mat-checkbox>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <a mat-button rounded  (click)=\"goBack()\">Back</a>\r\n    <span fxFlex></span>\r\n    <button mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"interestForm.invalid\" class=\"Nextbtn\"\r\n      (click)=\"onSubmit(interestForm.value)\">Next</button>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-disbursement-summary',\r\n  templateUrl: './loan-disbursement-summary.component.html',\r\n  styleUrls: ['./loan-disbursement-summary.component.scss']\r\n})\r\nexport class LoanDisbursementSummaryComponent implements OnInit {\r\n  resp: any;\r\n  CheckboxVar:boolean;\r\n  loanaccountId: any;\r\n  loanInfo: any;\r\n  constructor(\r\n    private ls: LocalStoreService,public api:ApiService,public dialogRef: MatDialogRef<LoanDisbursementSummaryComponent>, private router: Router) { }\r\n  ngOnInit(): void {\r\n    this.loanaccountId = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    setTimeout(() => {\r\n      this.api.loanDisbursementFetchById(this.loanaccountId).subscribe(resp=>{\r\n        this.resp=resp;\r\n        this.CheckboxVar=resp.mutipleDisbursementRequired;\r\n      }\r\n  \r\n        )\r\n    }, 10);\r\n  \r\n  }\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  goToEdit() {\r\n    this.dialogRef.close();\r\n     this.router.navigate([`/loan/account/application-enrichment/loan-disbursement`]);\r\n  }\r\n}","<div class=\"full-width\">\r\n    <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Loan Disbursement Details Summary </h4>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\">\r\n                <h7 fxLayout=\"row\">Loan Disbursement Details</h7>\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Required Multiple Disbursement ?</mat-hint>\r\n                                            <br>\r\n                                            <div class=\"toggle\">\r\n                                                <mat-slide-toggle [checked]=\"CheckboxVar\">\r\n                                                </mat-slide-toggle>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Loan Amount</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.loanAmount}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Number of Disbursement </mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.numberOfDisbursement}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n\r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">First Disbursement Date</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.firstDisbursementDate}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Total Disbursement</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.totalDisbursement}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Disbursement Mode</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.disbursementMode}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n\r\n                                    </ng-container>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <h7 fxLayout=\"row\">Internal Account</h7>\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Customer Account</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.customerAccount}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Branch Code</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.branchCode}}</mat-hint>\r\n                                        </div>\r\n\r\n                                    </ng-container>\r\n                                </div>\r\n\r\n\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <p class=\"editButton\" (click)=\"goToEdit()\">Edit</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/home/account.service';\r\n\r\n@Component({\r\n  selector: 'app-offer-issue-stage',\r\n  templateUrl: './offer-issue-stage.component.html',\r\n  styleUrls: ['./offer-issue-stage.component.scss']\r\n})\r\nexport class OfferIssueStageComponent implements OnInit {\r\n  isCreditRatingScreen: boolean = false;\r\n  isValuationAssetScreen: boolean = false;\r\n  islegalOpinionScreen: boolean = false;\r\n  isAssesmentDetailsScreen:boolean = false;\r\n  isOfferIssueScreen:boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,private dialogService : DialogService,private route: ActivatedRoute,private ls: \r\n    LocalStoreService,private cdr:ChangeDetectorRef ,private accountService:AccountService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  \r\n    let overdraftStatus = this.ls.getItem('overDraftByStatus') || null;\r\n    console.log(\"fetch\",overdraftStatus);\r\n    \r\n    this.isAssesmentDetailsScreen = this.ls.getItem('assessmentScreen');\r\n    this.isOfferIssueScreen = this.ls.getItem('OfferIssue');\r\n    this.islegalOpinionScreen= this.ls.getItem('legalScreen');\r\n    this.isValuationAssetScreen = this.ls.getItem('valuationAsset');\r\n    this.isCreditRatingScreen = this.ls.getItem('CreditRatingDetails');\r\n   \r\n\r\n    this.accountService.refresh.subscribe((res: any) => {\r\n     \r\n       \r\n      this.islegalOpinionScreen= this.ls.getItem('legalScreen');\r\n      this.isValuationAssetScreen = this.ls.getItem('valuationAsset');\r\n      this.isAssesmentDetailsScreen = this.ls.getItem('assessmentScreen');\r\n     this.isOfferIssueScreen = this.ls.getItem('OfferIssue');\r\n     this.isCreditRatingScreen = this.ls.getItem('CreditRatingDetails');\r\n     \r\n      this.cdr.markForCheck();\r\n    });\r\n   \r\n  }\r\n  goToAccountDetails(){\r\n    this.dialogService.assetValutionSummaryDialog();\r\n  }\r\n  goToLegalOpinion(){\r\n    this.dialogService.legalopinionSummaryDialog();\r\n  }\r\n  goToAssesmentDetails(){\r\n    this.dialogService.offeredAssessmentSummaryDialog();\r\n  }\r\n  goToOfferIssue(){\r\n    this.dialogService.offerIssue1SummaryDialog();\r\n  }\r\n  goCreditDetails(){\r\n    this.dialogService.CreditRatingDetailsDialog();\r\n  }\r\n\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <!-- <div class=\"propic text-center\">\r\n        <img src=\"assets/images/face-7.png\" alt=\"\" class=\"w-80\" />\r\n      </div> -->\r\n      <div class=\"profile-pic text-center\">\r\n         <img src=\"assets/images/face-7.png\" class=\"main-profile-img\" />\r\n        <i class=\"fa fa-edit upload-icon\"></i>\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Create Retail Loan Account</b></div>\r\n        <div class=\"text-muted\">\r\n            Open a Retail Loan Account with XYZ Bank in a better way. ­­­­\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n <div fxFlex=\"100\"  *ngIf=\"isOfferIssueScreen\" class=\"mt-8\">\r\n  <mat-card\r\n    [@animate]=\"{ value: '*', params: { y: '50px', delay: '300ms' } }\"\r\n  >\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <div fxFlex=\"10\">\r\n        <mat-icon class=\"text-green\">check_circle</mat-icon>\r\n      </div>\r\n      <div fxFlex=\"30\">\r\n        <h6>Offer Issue Stage Completed</h6>\r\n      </div>\r\n      <span fxFlex></span>\r\n      <button\r\n        mat-button\r\n        color=\"primary\"\r\n        (click)=\"goToOfferIssue()\"\r\n      >\r\n        View Summary\r\n      </button>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n</div>\r\n  <div fxLayout=\"row wrap\" class=\"mt-12\">\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- [ngClass]=\"{'not-active':item.status == ''}\" -->\r\n      <!-- Card 1 start-->\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>1. Offer Issue</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\" class=\"notActive\">\r\n              <p class=\"text-align\">\r\n                Enables the Approver to capture the OfferIssue date.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/MaskGroup_17.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          \r\n        </mat-card-content>\r\n        <!--begin:: Card body-->\r\n        <mat-divider></mat-divider>\r\n        \r\n        <mat-card-actions>\r\n          \r\n          <!--*ngIf=\"isAssesmentDetailsScreen && isOfferIssueScreen\"-->\r\n\r\n          <ng-container *ngIf=\"isOfferIssueScreen; else showOffer\">\r\n            <button\r\n          mat-button\r\n          (click)=\"goToOfferIssue()\"\r\n          color=\"primary\"\r\n        >\r\n          View Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n        </ng-container>\r\n\r\n        <ng-template #showOffer>\r\n            <button \r\n          mat-button\r\n          [routerLink]=\"['/loan/account/list/offer-issue/offerissue']\"\r\n          color=\"primary\"\r\n        >\r\n          Add Details <mat-icon>chevron_right</mat-icon>\r\n            </button>\r\n        </ng-template>\r\n\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!--<mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>1. Credit Rating Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> \r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                The information on the External Rating Agencies Rating/Scores for the Loan applicant is \r\n                collected.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/Group 673.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          <!--begin::Progress-->\r\n         \r\n          <!--end::Progress\r\n        </mat-card-content>\r\n        <!--begin:: Card body\r\n        <mat-divider></mat-divider>\r\n        <!--<<mat-card-actions>\r\n\r\n          <a mat-button\r\n            color=\"primary\"\r\n            [routerLink]=\"['/loan/offer-issue/credit-rating']\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n         \r\n        </mat-card-actions>>\r\n        <mat-card-actions>\r\n          <a\r\n          *ngIf=\"!isCreditRatingScreen\"\r\n            mat-button\r\n            [routerLink]=\"['/loan/offer-issue/credit-rating']\"\r\n            color=\"primary\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n          <a\r\n          *ngIf=\"isCreditRatingScreen\"\r\n            mat-button\r\n            (click)=\"goCreditDetails()\"\r\n            color=\"primary\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 1 end \r\n    </div>\r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <!-- card 2 start\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>2. Valuation of Asset</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> \r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                The information on the asset valuation is done by the bank approved vluator is captured.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"\r\n                  'assets/images/svg/undraw_personal_information_re_vw8a.svg'\r\n                \"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n        </mat-card-content>\r\n        <!--begin:: Card body\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <a\r\n            [disabled]=\"!isCreditRatingScreen\"\r\n            \r\n            mat-button\r\n            [routerLink]=\"['/loan/offer-issue/valuation-asset']\"\r\n            color=\"primary\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n          <a\r\n            *ngIf=\"isCreditRatingScreen && isValuationAssetScreen\"\r\n            mat-button\r\n            (click)=\"goToAccountDetails()\"\r\n            color=\"primary\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n\r\n        </mat-card-actions>\r\n      </mat-card>\r\n      <!-- Card 2 end-->\r\n    </div>\r\n    <!-- card 3 start \r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>3. Legal Opinion</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> \r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>The legal opinion provided by the bank approved lawyer and desicion provided thereon is captured.</p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"'assets/images/svg/undraw_Terms_re_6ak4.svg'\"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n        <!--begin:: Card body\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <a\r\n          [disabled]=\"!isValuationAssetScreen\"\r\n          \r\n            mat-button\r\n            [routerLink]=\"['/loan/offer-issue/legal-opinion']\"\r\n            color=\"primary\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n          <a\r\n            *ngIf=\"islegalOpinionScreen && isValuationAssetScreen\"\r\n            mat-button\r\n            (click)=\"goToLegalOpinion()\"\r\n            color=\"primary\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <!-- Card 3 end -->\r\n    <!-- card 4 start \r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>4. Assesment Details</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> \r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                The evalution in terms of quantitative and qualitative scores are recorded .\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img\r\n                [src]=\"'assets/images/svg/undraw_opinion_dxp8.svg'\"\r\n                class=\"card-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n        \r\n        </mat-card-content>\r\n        <!--begin:: Card body\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <a\r\n            [disabled]=\"!islegalOpinionScreen\"\r\n          \r\n            mat-button\r\n            [routerLink]=\"['/loan/offer-issue/offer-assessment']\"\r\n            color=\"primary\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n          \r\n          <a\r\n          *ngIf=\"isAssesmentDetailsScreen && islegalOpinionScreen\"\r\n            mat-button\r\n            (click)=\"goToAssesmentDetails()\"\r\n            color=\"primary\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n     card 4 end -->\r\n    <!-- card -5 start \r\n    <div fxFlex=\"50\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"50\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>5. Offer Issue</mat-card-title>\r\n          <!-- <mat-card-subtitle> {{ item?.content }}</mat-card-subtitle> \r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"space-between start\"\r\n          >\r\n            <div fxFlex=\"50%\">\r\n              <p>\r\n                Enables the Approver to capture the OfferIssue date.\r\n              </p>\r\n            </div>\r\n            <div fxFlex=\"50%\">\r\n              <img [src]=\"'assets/images/svg/Group 47.svg'\" class=\"card-img\" />\r\n            </div>\r\n          </div>\r\n          \r\n        </mat-card-content>\r\n        <!--begin:: Card body\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n          <a\r\n            [disabled]=\"!isAssesmentDetailsScreen\"\r\n           \r\n            mat-button\r\n            [routerLink]=\"['/loan/offer-issue/offerissue']\"\r\n            color=\"primary\"\r\n          >\r\n            Add Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n          <!--*ngIf=\"isAssesmentDetailsScreen && isOfferIssueScreen\"\r\n          <a\r\n          *ngIf=\"isAssesmentDetailsScreen && isOfferIssueScreen\"\r\n            mat-button\r\n            (click)=\"goToOfferIssue()\"\r\n            color=\"primary\"\r\n          >\r\n            View Details <mat-icon>chevron_right</mat-icon>\r\n          </a>\r\n\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n    <!-- card 5 end -->\r\n\r\n     \r\n  </div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n\r\n@Component({\r\n  selector: \"app-loan-interest-summary\",\r\n  templateUrl: \"./loan-interest-summary.component.html\",\r\n  styleUrls: [\"./loan-interest-summary.component.scss\"],\r\n})\r\nexport class LoanInterestSummaryComponent implements OnInit {\r\n  interestForm: FormGroup;\r\n  savingForm: FormGroup;\r\n  loanForm: FormGroup;\r\n  accountType: any;\r\n  accountId: any;\r\n  resp: {\r\n    intrestType: string;\r\n    intrestRateApplicable: number;\r\n    marginIn: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  loanAccountId: any;\r\n  loanInfo: any;\r\n  constructor(\r\n    private ls: LocalStoreService,\r\n    private snack: MatSnackBar,\r\n    private dialogRef: MatDialogRef<LoanInterestSummaryComponent>,\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanAccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    this.interestForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    this.savingForm = this.formBuilder.group({\r\n      saving: new FormArray([]),\r\n    });\r\n\r\n    this.loanForm = this.formBuilder.group({\r\n      loan: new FormArray([]),\r\n    });\r\nsetTimeout(() => {\r\n  this.api.loanInterestFetchById(this.loanAccountId).subscribe((resp) => {\r\n    console.log(\"resp from backend \", this.resp);\r\n    this.resp = resp;\r\n    this.onChangeInterest(this.resp.length);\r\n    this.in.patchValue(this.resp);\r\n  });\r\n}, 10);\r\n  \r\n  }\r\n  assignAccountType(accountType) {\r\n    this.accountType = accountType;\r\n  }\r\n\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            accountId: [this.accountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  onChangeSaving(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.is.length < numberOfItems) {\r\n      for (let i = this.is.length; i < numberOfItems; i++) {\r\n        this.is.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            accountId: [this.accountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.is.length; i >= numberOfItems; i--) {\r\n        this.is.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  onChangeLoan(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.iloan.length < numberOfItems) {\r\n      for (let i = this.iloan.length; i < numberOfItems; i++) {\r\n        this.iloan.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            accountId: [this.accountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.iloan.length; i >= numberOfItems; i--) {\r\n        this.iloan.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n  get fs() {\r\n    return this.savingForm.controls;\r\n  }\r\n  get is() {\r\n    return this.fs.saving as FormArray;\r\n  }\r\n  get floan() {\r\n    return this.loanForm.controls;\r\n  }\r\n  get iloan() {\r\n    return this.floan.loan as FormArray;\r\n  }\r\n\r\n  goBack() {\r\n\r\n \r\n      this.router.navigate([\r\n        `/loan/account/application-enrichment`,\r\n      ]);\r\n    \r\n  }\r\n\r\n  onSubmit(form) {}\r\n  edit() {\r\n    this.dialogRef.close();\r\n    this.api.setFlag({\r\n      flag: true,\r\n    });\r\n    this.router.navigate([\r\n      `/loan/account/application-enrichment/intrest-details`,\r\n    ]);\r\n  }\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"Intrest detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n  \r\n}\r\n","<mat-card class=\"matCard\">\r\n  <button mat-button id=\"close\" mat-dialog-close>\r\n    <mat-icon class=\"closeicon\">close</mat-icon>\r\n  </button>\r\n  <div class=\"spanDiv1\">\r\n    <span class=\"span\">Interest Details\r\n\r\n    </span>\r\n    <mat-divider class=\"divider\"></mat-divider>\r\n  </div>\r\n  <div fxLayout=\"row wrap\" class=\"main\">\r\n    <div fxFlex=\"100\">\r\n    </div>\r\n    <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\">\r\n        <table class=\"cart-table default-bg mat-elevation-z0\">\r\n          <tbody>\r\n            <tr [formGroup]=\"interest\" class=\"mt-4\" *ngFor=\"let interest of in.controls; let i = index\" class=\"form\">\r\n              <div class=\"row\">\r\n                <ng-container>\r\n\r\n                  <div class=\"heading\">\r\n                    <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />\r\n                  </div>\r\n\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Interest Rate Applicable</mat-label>\r\n                      <input matInput formControlName=\"intrestRateApplicable\" name=\"intrestRateApplicable\" class=\"input\"\r\n                        readonly />\r\n                    </mat-card>\r\n                  </td>\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Margin in %</mat-label>\r\n                      <input matInput formControlName=\"marginIn\" name=\"marginIn\" class=\"input\" readonly />\r\n                    </mat-card>\r\n                  </td>\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Effective Rate %</mat-label>\r\n                      <input matInput formControlName=\"effectiveRate\" name=\"account_branch\" value=\"\" class=\"input\"\r\n                        readonly />\r\n\r\n                    </mat-card>\r\n                  </td>\r\n                </ng-container>\r\n              </div>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- <div fxFlex=\"100\" class=\"mt-16\">\r\n      <span mat-stroked-button color=\"primary\" (click)=\"goBack()\">edit</span>\r\n      <span fxFlex></span>\r\n      <!-- <button mat-raised-button color=\"primary\" type=\"button\" [disabled]=\"interestForm.invalid\" (click)=\"onSubmit(interestForm.value)\">DONE</button> -->\r\n    <!-- </div> -->\r\n\r\n  </div>\r\n\r\n\r\n  <span class=\"spanDiv\" (click)=\"edit()\">Edit</span>\r\n</mat-card>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DatePipe } from '@angular/common'\r\nimport { AccountService } from '../../account.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { Timezone } from '@syncfusion/ej2-schedule';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-financial-details',\r\n  templateUrl: './financial-details.component.html',\r\n  styleUrls: ['./financial-details.component.scss']\r\n})\r\nexport class FinancialDetailsComponent implements OnInit {\r\n\r\n  financialDetailsForm: FormGroup;\r\n  loanaccountID : any = 0;\r\n  showEditOption: boolean = false;\r\n  financialDetails: any[] = [];\r\n  accountId : any;\r\n  loggedInUser : any;\r\n  noOfApplicants : any;\r\n  financialDetails_array : FormArray;\r\n  isMonthlyIncome:boolean=true;\r\n  arrayEmploymentType: string[];\r\n  arrayEmploymentCategory: string[];\r\n  loanInfo: any;\r\n  incomeErrMsg: string;\r\n  ExpensesErrMsg: any;\r\n  LiabilitiesErrMsg: any;\r\n  assetErrMsg: string;\r\n  liabilitiesErrMsg: string;\r\n  expensesErrMsg: string;\r\n  disableNext: boolean = false;\r\n  totalExpenses: any;\r\n  totalAsset: number;\r\n  totalIncome: number;\r\n  totalMonthlyIncome: number;\r\n  totalMonthlyAsset: number;\r\n  totalMonthlyExpense: number;\r\n  totalLiability: number;\r\n  totalMonthlyLiability: number;\r\n  cifNumber: any;\r\n  applicantName: string[]; \r\n  lastData:any;\r\n  constructor\r\n  (\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    public datepipe: DatePipe,\r\n    private accountService:AccountService,\r\n    private appApiService: ApplicationEntryStageService,\r\n    private cdr:ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    this.applicantName=this.ls.getItem('primaryCustomerName');\r\n    console.log(this.loanInfo);   \r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    this.loggedInUser = String(this.ls.getItem('userName'));\r\n    this.noOfApplicants=this.ls.getItem('LoanNoOfApplicants');\r\n    this.getEmploymentType(\"fin_employment_type\");\r\n    this.getEmploymentCategory(\"employment_category\");\r\n\r\n    let financialDetailscreen: boolean = JSON.parse(this.ls.getItem('FINANCIAL_DETAIL_DONE'));\r\n    this.financialDetailsForm = this.fb.group({\r\n      financialDetails_array: this.fb.array([])\r\n    }); \r\n    if((this.noOfApplicants ==1) ||this.noOfApplicants ==2){\r\n      this.addApplicant();   \r\n            \r\n    }\r\n    setTimeout(() => {\r\n      if (this.loanaccountID && financialDetailscreen) {\r\n        this.showEditOption = true;\r\n        this.getFinancialDetails();\r\n      }\r\n      else {\r\n        this.showEditOption = false;\r\n      }\r\n    }, 10);\r\n    this.fetchByCif();\r\n    this.lastUpdateByCif();\r\n  }\r\n\r\n  createFinancialDetail(data?): FormGroup {\r\n    return this.fb.group({\r\n      applicantName: [data ? data.applicantName : this.ls.getItem('primaryCustomerName'), Validators.required],\r\n      applicantTotalIncome: [data ? data.applicantTotalIncome : ''],\r\n     // totalIncome: [data ? data.totalIncome : ''],\r\n      applicantTotalExpense: [data ? data.applicantTotalExpense : ''],\r\n      lastUpdatedon: [data ? data.lastUpdatedon : '',Validators.compose([ Validators.required, Validators.min(this.lastData)])],\r\n      employmentStartDate:[data?new Date(data.employmentStartDate).toISOString().substring(0, 10):''],\r\n     // employmentStartDate: [data ? data.employmentStartDate : ''],\r\n      employmentEndDate: [data ? data.employmentEndDate : ''],\r\n      assetTotal: [data ? data.assetTotal : ''],\r\n      liabilityTotal: [data ? data.liabilityTotal : ''],\r\n      employmentType: [data ? data.employmentType : '', Validators.required],\r\n      employmentCategory: [data ? data.employmentCategory : ''],\r\n      employeeNumber: [data ? data.employeeNumber : ''],\r\n      officeName: [data ? data.officeName : ''],\r\n      designation: [data ? data.designation : ''],\r\n      bonus: [data ? data.bonus : ''],\r\n      business: [data ? data.business : ''],\r\n      interestIncome: [data ? data.interestIncome : ''],\r\n      pension: [data ? data.pension : ''],\r\n      salary: [data ? data.salary : ''],\r\n      monthlyExpenseRentals: [data ? data.monthlyExpenseRentals : ''],\r\n      monthlyExpenseTotal: [data ? data.monthlyExpenseTotal : ''],\r\n      cashGifts: [data ? data.cashGifts : ''],\r\n      assetOthers: [data ? data.assetOthers : ''],\r\n      liabilityOthers: [data ? data.liabilityOthers : ''],\r\n      monthlyExpenseOthers: [data ? data.monthlyExpenseOthers : ''],\r\n      monthlyIncomeOthers: [data ? data.monthlyIncomeOthers : ''],\r\n      monthlyIncomeRentals: [data ? data.monthlyIncomeRentals : ''],\r\n      monthlyIncomeTotal: [data ? data.monthlyIncomeTotal : ''],\r\n      household: [data ? data.household : ''],\r\n      medical: [data ? data.medical : ''],\r\n      education: [data ? data.education : ''],\r\n      travel: [data ? data.travel : ''],\r\n      vehicleMaintenance: [data ? data.vehicleMaintenance : ''],\r\n      propertyLoan: [data ? data.propertyLoan : ''],\r\n      vehicleLoan: [data ? data.vehicleLoan : ''],\r\n      personalLoans: [data ? data.personalLoans : ''],\r\n      cardOutstandings: [data ? data.cardOutstandings : ''],\r\n      overdraft: [data ? data.overdraft : ''], \r\n      savingDeposits: [data ? data.savingDeposits : ''],\r\n      stocks: [data ? data.stocks : ''],\r\n      properties: [data ? data.properties : ''],\r\n      automobiles: [data ? data.automobiles : ''],\r\n      fixedDeposits: [data ? data.fixedDeposits : ''],\r\n      lands: [data ? data.lands : ''],\r\n    },\r\n    {validator:(formGroup:FormGroup)=>{\r\n      return this.validateInputGroups(formGroup)\r\n    }\r\n  });\r\n  }\r\n\r\n validateInputGroups(formgroup:FormGroup) {\r\n   if(formgroup.controls[\"salary\"].value || formgroup.controls[\"interestIncome\"].value || \r\n   formgroup.controls[\"bonus\"].value || formgroup.controls[\"cashGifts\"].value || \r\n   formgroup.controls[\"business\"].value || formgroup.controls[\"pension\"].value || \r\n   formgroup.controls[\"monthlyIncomeRentals\"].value || formgroup.controls[\"monthlyIncomeOthers\"].value) {\r\n    \r\n     this.incomeErrMsg = null\r\n       this.disableNext = true;\r\n     \r\n   }\r\n   else {\r\n     this.incomeErrMsg = \"Entering any one field is mandatory for Monthly Income Section\";\r\n     this.disableNext = false;\r\n   }\r\n   \r\n   if(formgroup.controls[\"household\"].value || formgroup.controls[\"education\"].value ||\r\n   formgroup.controls[\"vehicleMaintenance\"].value || formgroup.controls[\"monthlyExpenseRentals\"].value ||\r\n   formgroup.controls[\"monthlyExpenseOthers\"].value || formgroup.controls[\"medical\"].value || \r\n   formgroup.controls[\"travel\"].value) {\r\n\r\n     this.ExpensesErrMsg = null;\r\n       this.disableNext = true;\r\n     \r\n   }\r\n   else {\r\n     this.ExpensesErrMsg = \"Entering any one field is mandatory for Monthly Expenses Section\";\r\n     this.disableNext = false;\r\n   }\r\n   \r\n   if(formgroup.controls[\"propertyLoan\"].value || formgroup.controls[\"vehicleLoan\"].value ||\r\n   formgroup.controls[\"personalLoans\"].value || formgroup.controls[\"overdraft\"].value ||\r\n   formgroup.controls[\"cardOutstandings\"].value || formgroup.controls[\"liabilityOthers\"].value) {\r\n     \r\n     this.LiabilitiesErrMsg = null;\r\n       this.disableNext = true;\r\n     \r\n   }\r\n   else {\r\n     this.LiabilitiesErrMsg = \"Entering any one field is mandatory for Annual Liabilities Section\";\r\n     this.disableNext = false;\r\n   }\r\n   \r\n   if(formgroup.controls[\"savingDeposits\"].value || formgroup.controls[\"properties\"].value ||\r\n   formgroup.controls[\"automobiles\"].value || formgroup.controls[\"fixedDeposits\"].value ||\r\n   formgroup.controls[\"lands\"].value || formgroup.controls[\"assetOthers\"].value || \r\n   formgroup.controls[\"stocks\"].value) {\r\n\r\n     this.assetErrMsg = null;\r\n       this.disableNext = true;\r\n     \r\n   }\r\n   else {\r\n     this.assetErrMsg = \"Entering any one field is mandatory for Asset Section\";\r\n     this.disableNext = false;\r\n   }\r\n }\r\n\r\n  addApplicant(){\r\n    this.financialDetails_array = this.financialDetailsForm.get('financialDetails_array') as FormArray;\r\n    this.financialDetails_array.push(this.createFinancialDetail());\r\n  }\r\n\r\n\r\n  getFinancialDetails() {\r\n    this.loader.open();\r\n    this.apiService.getFinancialDetailsByLoanAccId(this.loanaccountID).subscribe((financialDetailsList) => {\r\n      this.loader.close();\r\n     // this.financialDetails_array = this.financialDetailsForm.get('financialDetails_array') as FormArray;\r\n      for (let index = 0; index < financialDetailsList.length; index++) {\r\n        this.financialDetails_array.patchValue(financialDetailsList);\r\n        console.log(financialDetailsList[0].employmentStartDate);\r\n        //financialDetailsList[index].employmentStartDate.patchValue((this.datepipe.transform(financialDetailsList[index].employmentStartDate, 'yyyy-MM-dd')));\r\n\r\n        //const formArray = this.financialDetailsForm.get('financialDetails_array') as FormArray;\r\n        //formArray.controls[0].get('employmentStartDate').setValue(financialDetailsList[0].employmentStartDate);\r\n\r\n\r\n      }\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/loan/account/mandate-details`]);\r\n  }\r\n\r\n  submitForm() {\r\n    let payloadArray: any[] = [];\r\n    this.financialDetails_array = this.financialDetailsForm.get('financialDetails_array') as FormArray;\r\n    payloadArray = this.financialDetails_array.value;\r\n    for (let index = 0; index < this.financialDetails_array.length; index++) {\r\n      payloadArray[index].lastUpdatedon = this.datepipe.transform(payloadArray[index].lastUpdatedon, 'yyyy-MM-dd');\r\n      payloadArray[index].employmentStartDate = this.datepipe.transform(payloadArray[index].employmentStartDate, 'yyyy-MMM-dd');\r\n      payloadArray[index].employmentEndDate = this.datepipe.transform(payloadArray[index].employmentEndDate, 'yyyy-MMM-dd');\r\n      payloadArray[index].accountId = this.accountId;\r\n      payloadArray[index].loanAccountId = this.loanaccountID;\r\n      payloadArray[index].loggedInUser = this.loggedInUser;\r\n      payloadArray[index].accountType = \"loan\";\r\n    }\r\n    this.apiService.upsertfinancialDetailsLoan(payloadArray).subscribe(data => {\r\n      console.log(\"data\", data);\r\n      if (data != null) {\r\n        this.snack.open('Financial Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.next();\r\n      }\r\n    })\r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem('FINANCIAL_DETAIL_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/loan/account/collateral_details`]);\r\n  }\r\n\r\n  getEmploymentType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      console.log(data);\r\n      this.arrayEmploymentType = data;\r\n    });\r\n  }\r\n  getEmploymentCategory(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayEmploymentCategory = data;\r\n    });\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n        event.preventDefault();\r\n    }\r\n   }\r\n   letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n                return true;\r\n            else\r\n                return false;\r\n  }\r\n  calculateTotalMonthlyIncome(value) {\r\n    let income:number = Number(value.financialDetails_array[0].salary) + Number(value.financialDetails_array[0].business) + \r\n    Number(value.financialDetails_array[0].interestIncome) + Number(value.financialDetails_array[0].pension) + \r\n    Number(value.financialDetails_array[0].bonus) + Number(value.financialDetails_array[0].monthlyIncomeOthers) + \r\n    Number(value.financialDetails_array[0].monthlyIncomeRentals) + Number(value.financialDetails_array[0].cashGifts);\r\n\r\n    const formArray = this.financialDetailsForm.get('financialDetails_array') as FormArray;\r\n    formArray.controls[0].get('monthlyIncomeTotal').setValue(income);\r\n    this.totalMonthlyIncome= income;\r\n     this.totalIncome= income*12 + this.totalAsset;\r\n     formArray.controls[0].get('applicantTotalIncome').setValue(this.totalIncome);\r\n  }\r\n  calculateMonthlyExpenseTotal(value) {\r\n    let income:number = Number(value.financialDetails_array[0].household) + Number(value.financialDetails_array[0].medical) + \r\n    Number(value.financialDetails_array[0].education) + Number(value.financialDetails_array[0].travel) + \r\n    Number(value.financialDetails_array[0].vehicleMaintenance) + Number(value.financialDetails_array[0].monthlyExpenseRentals) + \r\n    Number(value.financialDetails_array[0].monthlyExpenseOthers) ;\r\n\r\n    const formArray = this.financialDetailsForm.get('financialDetails_array') as FormArray;\r\n    formArray.controls[0].get('monthlyExpenseTotal').setValue(income);\r\n    this.totalMonthlyExpense= income;\r\n    this.totalExpenses= income*12 + this.totalLiability;\r\n    formArray.controls[0].get('applicantTotalExpense').setValue(this.totalExpenses);\r\n  }\r\n  calculateLiabilityTotal(value) {\r\n    let income:number = Number(value.financialDetails_array[0].propertyLoan) + Number(value.financialDetails_array[0].vehicleLoan) + \r\n    Number(value.financialDetails_array[0].personalLoans) + Number(value.financialDetails_array[0].overdraft) + \r\n    Number(value.financialDetails_array[0].cardOutstandings) + Number(value.financialDetails_array[0].liabilityOthers) ;\r\n\r\n    const formArray = this.financialDetailsForm.get('financialDetails_array') as FormArray;\r\n    formArray.controls[0].get('liabilityTotal').setValue(income);\r\n    this.totalMonthlyLiability= income;\r\n    this.totalExpenses= income+ this.totalMonthlyExpense*12;\r\n    formArray.controls[0].get('applicantTotalExpense').setValue(this.totalExpenses);\r\n  }\r\n  calculateAssetTotal(value) {\r\n    let income:number = Number(value.financialDetails_array[0].savingDeposits) + Number(value.financialDetails_array[0].stocks) + \r\n    Number(value.financialDetails_array[0].properties) + Number(value.financialDetails_array[0].automobiles) + \r\n    Number(value.financialDetails_array[0].fixedDeposits) + Number(value.financialDetails_array[0].lands) + \r\n    Number(value.financialDetails_array[0].assetOthers) ;\r\n\r\n    const formArray = this.financialDetailsForm.get('financialDetails_array') as FormArray;\r\n    formArray.controls[0].get('assetTotal').setValue(income);\r\n    this.totalMonthlyAsset= income;\r\n    this.totalIncome= income+ this.totalMonthlyIncome*12;\r\n    formArray.controls[0].get('applicantTotalIncome').setValue(this.totalIncome);\r\n  }\r\n  fetchByCif(){\r\n    this.cifNumber=this.ls.getItem('cId');\r\n    this.appApiService.fetchByCif(this.cifNumber).subscribe((res: any) => {\r\n      const formArray = this.financialDetailsForm.get('financialDetails_array') as FormArray;\r\n      formArray.controls[0].get('applicantName').setValue(res.customerInfoList[0].firstName +\" \"+ res.customerInfoList[0].lastName);\r\n    }, (err: any) => {\r\n      console.error(err);\r\n    })\r\n  }\r\n  lastUpdateByCif(){\r\n    this.apiService.getLoanDetails(this.loanaccountID).subscribe((resp:any)=>{\r\n     \r\n     this.lastData = this.datepipe.transform(resp.applicationDate,\"yyyy-MM-dd\");\r\n   \r\n    }, (err: any) => {\r\n      console.error(err);\r\n    })\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/MaskGroup_2.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><h1>Financial Details</h1></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">\r\n      <!-- <mat-card-title class=\"\">\r\n        <div class=\"card-title-text\">Financial Details</div>\r\n        <mat-divider></mat-divider>\r\n      </mat-card-title> -->      \r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Financial Details</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"financialDetailsForm\" [formGroup]=\"financialDetailsForm\">\r\n          <div class=\"full-width\">\r\n            <div\r\n              class=\"full-width\"\r\n              formArrayName=\"financialDetails_array\"\r\n              *ngFor=\"\r\n                let report of financialDetailsForm.get(\r\n                  'financialDetails_array'\r\n                )['controls'];\r\n                let i = index\r\n              \"\r\n            >\r\n              <div class=\"full-width pt-16\" [formGroupName]=\"i\">\r\n                <!-- <mat-accordion class=\"full-width mat-elevation-z0\">\r\n                  <mat-expansion-panel\r\n                    class=\"mat-elevation-z0 border border-primary\"\r\n                    (opened)=\"panelOpenState = true\"\r\n                    (closed)=\"panelOpenState = false\"\r\n                  >\r\n                    <mat-expansion-panel-header class=\"marginData\">\r\n                      <mat-panel-title class=\"textDesign\"> Applicant Details </mat-panel-title>                     \r\n                    </mat-expansion-panel-header> -->\r\n                    <div>\r\n                      <div\r\n                        fxLayout=\"row wrap\"\r\n                        class=\"pt-16 \"\r\n                        fxLayoutAlign=\"space-between center\"\r\n                      >\r\n                        <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                          <div class=\"flex-grow-1\"> \r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">                        \r\n                            <mat-label>Applicant Name</mat-label>\r\n                            <!-- <mat-card class=\"inputMatName alignChange\"> -->\r\n                            <input\r\n                              matInput\r\n                              name=\"applicantName\"\r\n                              formControlName=\"applicantName\"\r\n                              (keypress)=\"letterOnly($event)\"\r\n                              required\r\n                            />\r\n                            <input\r\n                              *ngIf=\"isExistingCustomer\"\r\n                              matInput\r\n                              class=\"alignment\"\r\n                              type=\"text\"\r\n                              readonly\r\n                              formControlName=\"applicantName\"\r\n                              placeholder=\"Applicant Name\"\r\n                            />\r\n                          <!-- </mat-card> -->\r\n                            <mat-error\r\n                              *ngIf=\"\r\n                                !report.controls.applicantName.valid &&\r\n                                report.controls.applicantName.touched\r\n                              \"\r\n                            >\r\n                              Please enter the Applicant Name\r\n                            </mat-error>\r\n                            </mat-form-field>\r\n                          \r\n                        </div>\r\n                        </div>\r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                          <div class=\"flex-grow-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n\r\n                              <mat-label>Last Update On</mat-label>\r\n                              <input matInput name=\"lastUpdatedon\" class=\"alignment\" formControlName=\"lastUpdatedon\" placeholder=\"DD/MM/YYYY\"\r\n                              [matDatepicker]=\"pickerUpdatedDate\" [max]=\"lastData\" readonly required/>                             \r\n                              <mat-datepicker-toggle matSuffix [for]=\"pickerUpdatedDate\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #pickerUpdatedDate></mat-datepicker>\r\n                             \r\n                            </mat-form-field>                            \r\n\r\n                            <!-- </mat-card>                             -->\r\n                            <mat-error *ngIf=\"!report.controls.lastUpdatedon.valid && report.controls.lastUpdatedon.touched\">\r\n                             &nbsp;&nbsp; Please enter the Last Update On\r\n                            </mat-error>   \r\n                                                                            \r\n                           </div>                         \r\n                        </div>\r\n                      </div>\r\n                      <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\" >\r\n                        <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                          <div class=\"flex-grow-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Total Income</mat-label>\r\n                            <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                              <input matInput  name=\"applicantTotalIncome\" formControlName=\"applicantTotalIncome\" (keypress)=\"_keyPress($event)\"   />                             \r\n                            <!-- </mat-card> -->\r\n                            <!-- <mat-error *ngIf=\"!report.controls.applicantTotalIncome.valid && report.controls.applicantTotalIncome.touched\">\r\n                              &nbsp;&nbsp; Please enter the Total Income\r\n                            </mat-error> -->\r\n                            </mat-form-field>\r\n                          </div>                          \r\n                        </div>\r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                          <div class=\"flex-grow-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                            <mat-label>Total Expenses</mat-label>\r\n                            <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                              <input matInput  name=\"applicantTotalExpense\" formControlName=\"applicantTotalExpense\" (keypress)=\"_keyPress($event)\"   />                             \r\n                            <!-- </mat-card> -->\r\n                            <!-- <mat-error *ngIf=\"!report.controls.applicantTotalExpense.valid && report.controls.applicantTotalExpense.touched\">\r\n                              &nbsp;&nbsp; Please enter the Total Expenses\r\n                            </mat-error> -->\r\n                            </mat-form-field>\r\n                          </div>                           \r\n                        </div>                        \r\n                        <!-- <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                          <button mat-button color=\"primary\">Edit</button>\r\n                        </div> -->\r\n                      </div>\r\n                      <div>                       \r\n                        <mat-card-title>\r\n                          <fieldset class=\"alignChange\">\r\n                          <legend visible=\"true\">Basic Details</legend>\r\n                          </fieldset>\r\n                        </mat-card-title>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\">\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Employment Type</mat-label>\r\n                              <!-- <mat-card class=\"widthCard inputMatName alignChange\"> -->\r\n                                <mat-select name=\"employmentType\" formControlName=\"employmentType\" required disableOptionCentering>\r\n                                  <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                  <mat-option *ngFor=\"let employmentType of arrayEmploymentType\" [value]=\"employmentType\">\r\n                                     {{ employmentType }}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                              <!-- </mat-card> -->\r\n                              <mat-error *ngIf=\"!report.controls.employmentType.valid && report.controls.employmentType.touched\">\r\n                               &nbsp;&nbsp; Please select the Employment Type\r\n                              </mat-error>\r\n                              </mat-form-field>\r\n                            </div>                           \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Employment Category* </mat-label>\r\n                              <!-- <mat-card class=\"widthCard inputMatName alignChange\"> -->\r\n                                <mat-select name=\"employmentCategory\" formControlName=\"employmentCategory\" \r\n                                                  [required]=\"(report.controls.employmentType == 'Salaried')\" disableOptionCentering>\r\n                                  <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                  <mat-option *ngFor=\"let employmentCategory of arrayEmploymentCategory\" [value]=\"employmentCategory\">\r\n                                     {{ employmentCategory }}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                              <!-- </mat-card> -->\r\n                              <!-- <mat-error *ngIf=\"!report.controls.employmentCategory.valid && report.controls.employmentCategory.touched\">\r\n                               &nbsp;&nbsp; Please select the Employment Category\r\n                              </mat-error> -->\r\n                              </mat-form-field>\r\n                            </div>                             \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Employee Number</mat-label>\r\n                                <input\r\n                                 matInput name=\"employeeNumber\"\r\n                                formControlName=\"employeeNumber\" \r\n                                maxlength=\"5\" (keypress)=\"_keyPress($event)\"\r\n                                [required]=\"report.controls.\r\n                                  employmentType.value == 'Salaried'\" />   \r\n                              <!-- <mat-error *ngIf=\"!report.controls.employeeNumber.valid && report.controls.employeeNumber.touched\">\r\n                                &nbsp;&nbsp; Please enter the Employee Number\r\n                              </mat-error> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Designation </mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input\r\n                                 matInput name=\"designation\" \r\n                                 formControlName=\"designation\" \r\n                                 (keypress)=\"letterOnly($event)\"  \r\n                                 [required]=\"report.controls.\r\n                                  employmentType.value == 'Salaried'\"/>                             \r\n                              <!-- </mat-card> -->\r\n                              <!-- <mat-error *ngIf=\"!report.controls.designation.valid && report.controls.designation.touched\">\r\n                                &nbsp;&nbsp; Please enter the Designation\r\n                              </mat-error> -->\r\n                              </mat-form-field>\r\n                            </div>                             \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Employment Start Date</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName1 dataChange\"> -->\r\n                                <input matInput  name=\"employmentStartDate\" class=\"alignment\" formControlName=\"employmentStartDate\"\r\n                                [matDatepicker]=\"pickerStartDate\"  placeholder=\"DD/MM/YYYY\"  [max]=\"maxDate\"  readonly/>\r\n\r\n                                  <mat-datepicker-toggle matSuffix [for]=\"pickerStartDate\"></mat-datepicker-toggle>\r\n                                  <mat-datepicker #pickerStartDate></mat-datepicker>\r\n                                \r\n                              <!-- </mat-card> -->\r\n                              <!-- <mat-error *ngIf=\"!report.controls.employmentStartDate.valid && report.controls.employmentStartDate.touched\">\r\n                                 &nbsp;&nbsp; Please enter the Employment Start Date\r\n                              </mat-error> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Employment End Date</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName1 dataChange\" > -->\r\n                                <input matInput name=\"employmentEndDate\" class=\"alignment\" formControlName=\"employmentEndDate\"\r\n                                [matDatepicker]=\"pickerEndDate\"  placeholder=\"DD/MM/YYYY\" [min]=\"report.get('employmentStartDate').value\" [max]=\"maxDate\" readonly/>\r\n                              \r\n\r\n\r\n                                  <mat-datepicker-toggle matSuffix [for]=\"pickerEndDate\"></mat-datepicker-toggle>\r\n                                  <mat-datepicker #pickerEndDate></mat-datepicker>\r\n                               \r\n                              <!-- </mat-card> -->\r\n                              <!-- <mat-error *ngIf=\"!report.controls.employmentEndDate.valid && report.controls.employmentEndDate.touched\">\r\n                                &nbsp;&nbsp; Please enter the Employment End Date\r\n                              </mat-error>    -->\r\n                              </mat-form-field>\r\n                           </div>                             \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Office Name</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input \r\n                                matInput name=\"officeName\" \r\n                                formControlName=\"officeName\" \r\n                                (keypress)=\"letterOnly($event)\"  \r\n                                [required]=\"report.controls.\r\n                                  employmentType.value == 'Salaried'\" />                             \r\n                              <!-- </mat-card> -->\r\n                              <mat-error *ngIf=\"!report.controls.officeName.valid && report.controls.officeName.touched\">\r\n                                &nbsp;&nbsp; Please enter the Office Name\r\n                              </mat-error>\r\n                              </mat-form-field>\r\n                            </div>                             \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div>                      \r\n                          \r\n                          <!-- <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                        </div> -->\r\n                        <div>\r\n                          <mat-card-title>\r\n                            <fieldset class=\"alignChange\">\r\n                            <legend visible=\"true\">Monthly Income</legend>\r\n                            </fieldset>\r\n                          </mat-card-title>\r\n                          <div class=\"ErrMsg\">&nbsp;&nbsp;{{ incomeErrMsg }}</div>\r\n                          <!-- <span *ngIf=\"isMonthlyIncome\"\r\n                            >\"Entering any one field is mandatory for Asset\r\n                            Section\"</span\r\n                          > -->\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\">\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Bonus</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\"> -->\r\n                                <input matInput  name=\"bonus\" formControlName=\"bonus\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateTotalMonthlyIncome(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Business</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\"> -->\r\n                                <input matInput  name=\"business\" formControlName=\"business\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateTotalMonthlyIncome(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Interest Income</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"interestIncome\" formControlName=\"interestIncome\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateTotalMonthlyIncome(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Pension</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"pension\" formControlName=\"pension\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateTotalMonthlyIncome(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card>   -->\r\n                              </mat-form-field>\r\n                            </div>                             \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Salary</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"salary\" formControlName=\"salary\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateTotalMonthlyIncome(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Rentals</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"monthlyIncomeRentals\" formControlName=\"monthlyIncomeRentals\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateTotalMonthlyIncome(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Cash Gifts</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\"> -->\r\n                                <input matInput  name=\"cashGifts\" formControlName=\"cashGifts\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateTotalMonthlyIncome(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Others</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"monthlyIncomeOthers\" formControlName=\"monthlyIncomeOthers\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateTotalMonthlyIncome(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Total</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput type=\"number\" name=\"monthlyIncomeTotal\" formControlName=\"monthlyIncomeTotal\" readonly />\r\n                              <!-- </mat-card>-->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div>                     \r\n                        <mat-card-title>\r\n                          <fieldset class=\"alignChange\">\r\n                          <legend visible=\"true\">Monthly Expenses</legend>\r\n                          </fieldset>\r\n                        </mat-card-title>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                        </div>\r\n                        <div>\r\n                          <div class=\"ErrMsg\">&nbsp;&nbsp;{{ ExpensesErrMsg }}</div>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\">\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Household</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput name=\"household\" formControlName=\"household\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateMonthlyExpenseTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card>-->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label>Medical</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput name=\"medical\" formControlName=\"medical\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateMonthlyExpenseTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Education</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput name=\"education\" formControlName=\"education\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateMonthlyExpenseTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Travel</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput name=\"travel\" formControlName=\"travel\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateMonthlyExpenseTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card>  -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Vehicle Maintenance</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput name=\"vehicleMaintenance\" formControlName=\"vehicleMaintenance\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateMonthlyExpenseTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Rentals</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput name=\"monthlyExpenseRentals\" formControlName=\"monthlyExpenseRentals\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateMonthlyExpenseTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Others</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput name=\"monthlyExpenseOthers\" formControlName=\"monthlyExpenseOthers\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateMonthlyExpenseTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\" >\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Total</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput type=\"number\"   name=\"monthlyExpenseTotal\" formControlName=\"monthlyExpenseTotal\" readonly />\r\n                              <!-- </mat-card>-->\r\n                              </mat-form-field>\r\n                            </div>                             \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div>                        \r\n                        <mat-card-title>\r\n                          <fieldset class=\"alignChange\">\r\n                          <legend visible=\"true\">Liabilitiess</legend>\r\n                          </fieldset>\r\n                        </mat-card-title>\r\n                        <!-- <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                          <div class=\"card-title-text p-2\">Liabilities</div>\r\n                        </div> -->\r\n                        <div>\r\n                          <div class=\"ErrMsg\">&nbsp;&nbsp;{{ LiabilitiesErrMsg }}</div>\r\n                        </div>\r\n                        <div\r\n                          fxLayout=\"row wrap\"\r\n                          class=\"full-width\"\r\n                          fxLayoutAlign=\"space-between center\"\r\n                        >\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Property Loans</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput   name=\"propertyLoan\" formControlName=\"propertyLoan\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateLiabilityTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card>-->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Vehicle Loans</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput   name=\"vehicleLoan\" formControlName=\"vehicleLoan\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateLiabilityTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Personal Loans</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput   name=\"personalLoans\" formControlName=\"personalLoans\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateLiabilityTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card>-->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Cards outstandings</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput   name=\"cardOutstandings\" formControlName=\"cardOutstandings\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateLiabilityTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Overdrafts</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput   name=\"overdraft\" formControlName=\"overdraft\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateLiabilityTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Others</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput   name=\"liabilityOthers\" formControlName=\"liabilityOthers\" (keypress)=\"_keyPress($event)\"\r\n                                (input)=\"calculateLiabilityTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                        </div>\r\n                        <div\r\n                          fxLayout=\"row wrap\"\r\n                          class=\"full-width\"\r\n                          fxLayoutAlign=\"space-between center\"\r\n                        >\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Total</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput type=\"number\"  name=\"liabilityTotal\" formControlName=\"liabilityTotal\" readonly />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <!-- <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                          <div class=\"card-title-text p-2\">Asset</div>\r\n                        </div> -->                        \r\n                        <mat-card-title>\r\n                          <fieldset class=\"alignChange\">\r\n                          <legend visible=\"true\">Asset</legend>\r\n                          </fieldset>\r\n                        </mat-card-title>\r\n                        <div>\r\n                          <div class=\"ErrMsg\">&nbsp;&nbsp;{{ assetErrMsg }}</div>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\">\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Savings Deposits</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"savingDeposits\" formControlName=\"savingDeposits\" (keypress)=\"_keyPress($event)\" (input)=\"calculateAssetTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card>-->\r\n                              </mat-form-field>\r\n                            </div>                             \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Stocks/Funds</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"stocks\" formControlName=\"stocks\" (keypress)=\"_keyPress($event)\" (input)=\"calculateAssetTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Properties</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"properties\" formControlName=\"properties\" (keypress)=\"_keyPress($event)\" (input)=\"calculateAssetTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Automobiles</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"automobiles\" formControlName=\"automobiles\" (keypress)=\"_keyPress($event)\" (input)=\"calculateAssetTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card>     -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Fixed Deposits</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"fixedDeposits\" formControlName=\"fixedDeposits\" (keypress)=\"_keyPress($event)\" (input)=\"calculateAssetTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Lands</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"lands\" formControlName=\"lands\" (keypress)=\"_keyPress($event)\" (input)=\"calculateAssetTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card> -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Others</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput  name=\"assetOthers\" formControlName=\"assetOthers\" (keypress)=\"_keyPress($event)\" (input)=\"calculateAssetTotal(financialDetailsForm.value)\" />\r\n                              <!-- </mat-card>   -->\r\n                              </mat-form-field>\r\n                            </div>                            \r\n                          </div>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\">\r\n                          <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Total</mat-label>\r\n                              <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                <input matInput type=\"number\" name=\"assetTotal\" formControlName=\"assetTotal\" readonly />\r\n                              <!-- </mat-card>  -->\r\n                              </mat-form-field>\r\n                            </div>                             \r\n                          </div>\r\n                        </div>                        \r\n                      </div>\r\n                    </div>\r\n                  <!-- </mat-expansion-panel>\r\n                </mat-accordion> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\" >\r\n      <button  type=\"button\" class=\"Backbtn\" mat-button rounded  (click)=\"goBack()\" >\r\n        Back\r\n      </button>\r\n      <!-- <button type=\"button\"\r\n        (click)=\"submitForm()\" mat-raised-button class=\"submitForm\" color=\"primary\">\r\n        Next\r\n      </button> -->\r\n      <button type=\"button\" [disabled]=\"incomeErrMsg || ExpensesErrMsg || LiabilitiesErrMsg || assetErrMsg || !financialDetailsForm.valid\"\r\n        (click)=\"submitForm()\" mat-raised-button class=\"Nextbtn\" color=\"primary\">\r\n        Next\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormArray,FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-enrichment-view-summary',\r\n  templateUrl: './loan-enrichment-view-summary.component.html',\r\n  styleUrls: ['./loan-enrichment-view-summary.component.scss']\r\n})\r\nexport class LoanEnrichmentViewSummaryComponent implements OnInit {\r\n  \r\n  appEntrySummaryView: boolean = false;\r\n  accountDetails: any;\r\n  interestForm: FormGroup;\r\n  chargeFormIT: FormGroup;\r\n  savingForm:FormGroup;\r\n  loanForm:FormGroup;\r\n  interestForm1:FormGroup;\r\n  accountId: any;\r\n  //for loan interest details\r\n  loanInterestResp: {\r\n    intrestType: string;\r\n    // interestRateApplicable: string;\r\n    intrestRateApplicable: string;\r\n    // margin: number;\r\n    marginIn: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  intererstInfo: {\r\n    intrestType: string;\r\n    //interestRateApplicable: string;\r\n    intrestRateApplicable: string;\r\n    //margin: number;\r\n    marginIn: number;\r\n    effectiveRate: number;\r\n  }[];\r\n  CheckboxVar:boolean;\r\n  accountType: String = \"Home Loan\";//for charge details summary\r\n  loanChargeResp: { interestType: string; amount1: string; waiver: string; }[];\r\n  loanRepaymentResp:any;\r\n\r\n  //Account Services Summary\r\n  maturity: any;\r\n  revision: any;\r\n  holiday: any;\r\n  cascadeVarMaturity: boolean;\r\n  cascadeVarRevison: boolean;\r\n  cascadeVarHoliday: boolean;\r\n  ignoreHolidayVarMaturity: boolean;\r\n  ignoreHolidayVarRevison: boolean;\r\n  ignoreHolidayVarHoliday: boolean;\r\n  accServResp: any;\r\n  loanDisbursementResp:any;\r\n  accServiceInfo:any;\r\n  loanAccountId:any;\r\n  disbursementInfo: any;\r\n  repaymentInfo: any;\r\n  chargeInfo: any;\r\n  isApprovedSreen: any;\r\n  loanInfo: any;\r\n  \r\n  constructor(private formBuilder:FormBuilder,private ls: LocalStoreService,private snack: MatSnackBar,private api:ApiService,private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  //  this.accountId = this.ls.getItem('accountId');\r\n    //this.accountType=this.ls.getItem('accountType');\r\n    this.api.getApprovedStatus().subscribe((resp)=>{\r\n      console.log(\"message\",resp);\r\n      this.isApprovedSreen=resp;\r\n \r\n    })\r\n    this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanAccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    setTimeout(() => {\r\n      this.getLoanEnrichmentDetails(this.loanAccountId);\r\n    }, 10);\r\n   \r\n    this.interestForm = this.formBuilder.group({\r\n      interest: new FormArray([]),\r\n    });\r\n    this.savingForm = this.formBuilder.group({\r\n      saving: new FormArray([]),\r\n    });\r\n    this.chargeFormIT = this.formBuilder.group({\r\n      chargeIT: new FormArray([]),\r\n    });\r\n    this.loanForm = this.formBuilder.group({\r\n      loan: new FormArray([]),\r\n    });\r\n\r\n    // this.chargeFormIT = this.formBuilder.group({\r\n    //   chargeInfo: new FormArray([]),\r\n    // });\r\n    // this.interestForm1 = this.formBuilder.group({\r\n    //   chargeInfo: new FormArray([]),\r\n    // });\r\n\r\n\r\n\r\n\r\n//for Charge Details\r\n  this.api.getFlexcubeDetails(\"chargeDetails\", this.accountType)\r\n  .subscribe((response) => {\r\n    this.onloanCharge(response.length);\r\n    this.in2.patchValue(response);\r\n  });\r\n\r\n// this.api.loanCahrgeFetchById(this.loanAccountId).subscribe((loanChargeResp) => {\r\n//   console.log(\"loan charge details resp from backend \", this.loanChargeResp);\r\n//   this.loanChargeResp = loanChargeResp;\r\n//   this.onloanCharge(this.loanChargeResp.length);\r\n//   this.in2.patchValue(this.loanChargeResp);\r\n// });\r\n\r\n\r\n  }\r\n\r\n  getLoanEnrichmentDetails(loanAccountId:any){\r\n    this.api.getLoanEnrichmentSummmary(this.loanAccountId)\r\n      .subscribe((summaryInfo: any) => {\r\n       console.log(summaryInfo);\r\n       this.intererstInfo=summaryInfo.intererstInfo;\r\n       console.log(this.intererstInfo);\r\n       this.onChangeInterest(this.intererstInfo.length);\r\n       this.in.patchValue(this.intererstInfo);\r\n       this.disbursementInfo=summaryInfo.disbursementInfo;\r\n       this.CheckboxVar=this.disbursementInfo.mutipleDisbursementRequired;\r\n       console.log(this.disbursementInfo)\r\n       this.repaymentInfo=summaryInfo.repaymentInfo;\r\n       console.log(this.repaymentInfo);\r\n       this.chargeInfo = summaryInfo.chargeInfo;\r\n       this.onloanCharge(this.chargeInfo.length);\r\n       this.in2.patchValue(this.chargeInfo);\r\n      this.accServiceInfo=summaryInfo.accServiceInfo;\r\n      this.maturity= this.accServiceInfo.serviceDetails.find(obj => obj.serviceName === 'Maturity')\r\n      this.revision= this.accServiceInfo.serviceDetails.find(obj => obj.serviceName === 'Revision')\r\n      this.holiday=this.accServiceInfo.serviceDetails.find(obj => obj.serviceName === 'Holiday Preference')\r\n      this.cascadeVarMaturity=  this.maturity.cascadeSchedules;\r\n      this.cascadeVarRevison=   this.revision.cascadeSchedules;\r\n      this.cascadeVarHoliday= this.holiday.cascadeSchedules; \r\n      this.ignoreHolidayVarMaturity=  this.maturity.ignoreHolidays;\r\n      this.ignoreHolidayVarRevison=   this.revision.ignoreHolidays;\r\n      this.ignoreHolidayVarHoliday= this.holiday.ignoreHolidays; \r\n      });\r\n  }\r\n\r\n\r\n  //for loan interest details\r\n  onChangeInterest(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in.length < numberOfItems) {\r\n      for (let i = this.in.length; i < numberOfItems; i++) {\r\n        this.in.push(\r\n          this.formBuilder.group({\r\n           \r\n            intrestType: [\"\"],\r\n            //interestRateApplicable: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            //margin: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n           // accountId: [this.accountId],\r\n            loanAccountId:[this.loanAccountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in.length; i >= numberOfItems; i--) {\r\n        this.in.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  //for loan interest details\r\n  onChangeSaving(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.is.length < numberOfItems) {\r\n      for (let i = this.is.length; i < numberOfItems; i++) {\r\n        this.is.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            // interestRateApplicable: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            // margin: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n           // accountId: [this.accountId],\r\n            loanAccountId:[this.loanAccountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.is.length; i >= numberOfItems; i--) {\r\n        this.is.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n  //for loan interest details\r\n  onChangeLoan(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.iloan.length < numberOfItems) {\r\n      for (let i = this.iloan.length; i < numberOfItems; i++) {\r\n        this.iloan.push(\r\n          this.formBuilder.group({\r\n           \r\n            intrestType: [\"\"],\r\n            //interestRateApplicable: [\"\"],\r\n            intrestRateApplicable: [\"\"],\r\n            // margin: [\"\"],\r\n            marginIn: [\"\"],\r\n            effectiveRate: [\"\"],\r\n            //accountId: [this.accountId],\r\n            loanAccountId:[this.loanAccountId],\r\n            createdDate: [\"\"],\r\n            createdBy: [\"\"],\r\n            lastModifiedDate: [\"\"],\r\n            lastModifiedBy: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.iloan.length; i >= numberOfItems; i--) {\r\n        this.iloan.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  //loan charge details\r\n  onloanCharge(e) {\r\n    const numberOfItems = e || 0;\r\n    if (this.in2.length < numberOfItems) {\r\n      for (let i = this.in2.length; i < numberOfItems; i++) {\r\n        this.in2.push(\r\n          this.formBuilder.group({\r\n            intrestType: [\"\"],\r\n            amout: [\"\"],\r\n            waiver: [true],\r\n            loanAccountId: [this.loanAccountId],\r\n            chargeDetailsId: [\"\"],\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = this.in2.length; i >= numberOfItems; i--) {\r\n        this.in2.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f2() {\r\n    return this.chargeFormIT.controls;\r\n  }\r\n  get in2() {\r\n    return this.f2.chargeIT as FormArray;\r\n  }\r\n \r\n\r\n\r\n\r\n  // convenience getters for easy access to form fields\r\n  get f() {\r\n    return this.interestForm.controls;\r\n  }\r\n  get in() {\r\n    return this.f.interest as FormArray;\r\n  }\r\n  get fs() {\r\n    return this.savingForm.controls;\r\n  }\r\n  get is() {\r\n    return this.fs.saving as FormArray;\r\n  }\r\n  get floan() {\r\n    return this.loanForm.controls;\r\n  }\r\n  get iloan() {\r\n    return this.floan.loan as FormArray;\r\n  }\r\n  get fCharge() {\r\n    return this.chargeFormIT.controls;\r\n  }\r\n  // get inCharge() {\r\n  //   return this.fCharge.chargeIT as FormArray;\r\n  // }\r\n\r\n\r\n  check(accountType) {\r\n    if (accountType) {\r\n      console.log(this.snack.open);\r\n      this.snack.open(\"chargeInfo detail is empty\", \"Error\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n  checkbox(event) {\r\n    console.log(event.checked);\r\n  }\r\n\r\n\r\n  assignAccountType(accountType) {\r\n    this.accountType = accountType;\r\n  }\r\n\r\n  Done(){\r\n    this.router.navigate([`/loan/account/list/underwritingStage`]);\r\n  }\r\n  Back(){\r\n    this.router.navigate([`/loan/account/application-enrichment`]);\r\n  }\r\n\r\n}\r\n","<div class=\"propic text-center\" *ngIf=\"!isApprovedSreen\">\r\n    <img class=\"entryImg\" src=\"assets/images/svg/undraw_statistic_chart_38b6.svg\" alt=\"\" />\r\n</div>\r\n<div class=\"profile-title text-center mt-8\"  *ngIf=\"!isApprovedSreen\" >\r\n    <div class=\"main-title\"><b>Loan Application Enrichment</b></div>\r\n</div> \r\n\r\n<!--Loan Interest Details--> \r\n<div class=\"spanDiv1\">\r\n    <!-- <span class=\"span\"> Loan Interest Details</span>\r\n    <mat-divider class=\"divider\"></mat-divider> -->\r\n    <h4 class=\"paraFont\">Loan Interest Details</h4>\r\n</div>\r\n <div fxLayout=\"row wrap\" class=\"main\">\r\n\r\n    <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n      <div class=\"mt-24\"></div>\r\n      <form *ngIf=\"interestForm\" [formGroup]=\"interestForm\">\r\n        <!-- <table\r\n          class=\"cart-table default-bg mat-elevation-z0\"\r\n          [@animate]=\"{ value: '*', params: { delay: '100ms', x: '-50px' } }\"\r\n        > -->\r\n        <table\r\n          \r\n        >\r\n       \r\n          <tbody>\r\n            <tr class=\"mt-4\" *ngFor=\"let interest of in.controls; let i = index\" style=\"display: flex;flex-wrap: wrap;\">\r\n              <div class=\"row\">\r\n              <ng-container [formGroup]=\"interest\">\r\n                <div class=\"heading\">\r\n                  <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />                   \r\n                </div>\r\n                  <td>\r\n                      <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Interest Rate Applicable</mat-label>\r\n                      <input matInput formControlName=\"intrestRateApplicable\" name=\"account_branch\" class=\"input\" readonly />                  \r\n                      </mat-card>\r\n                  </td>\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Margin in %</mat-label>\r\n                      <input matInput formControlName=\"marginIn\" name=\"account_branch\" class=\"input\" readonly />\r\n                   \r\n                    </mat-card>\r\n                  </td>\r\n                  <td>\r\n                    <mat-card class=\"matCardBox\">\r\n                      <mat-label class=\"label\">Effective Rate %</mat-label>\r\n                      <input matInput formControlName=\"effectiveRate\" name=\"account_branch\" value=\"\"   class=\"input\" readonly />  \r\n                    </mat-card>\r\n                  </td>\r\n              </ng-container>\r\n              </div>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n     \r\n      <br>\r\n      <!--Loan Disbursement Details Summary-->    \r\n        <div class=\"fullcard\">\r\n          <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Loan Disbursement Details</h4>\r\n          </div>\r\n          <div class=\"spanDiv1\">\r\n            <!-- <span class=\"span\"> Loan Disbursement Details</span> -->\r\n            <mat-divider class=\"divider\"></mat-divider>\r\n        </div>\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n              <div fxFlex=\"100%\">\r\n                  <!-- <h7 fxLayout=\"row\">Loan Disbursement Details</h7> -->\r\n                  <mat-card class=\"chequecard\">\r\n                      <mat-card-content>\r\n                          <div class=\"full-width\">\r\n                              <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                      <ng-container>\r\n                                          <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Required Multiple Disbursement ?</mat-hint>\r\n                                              <br>\r\n                                              <div class=\"toggle\">\r\n                                                  <mat-slide-toggle [checked]=\"CheckboxVar\">\r\n                                                  </mat-slide-toggle>\r\n                                              </div>\r\n                                          </div>\r\n                                          <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Loan Amount</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{disbursementInfo.loanAmount}}</mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Number of Disbursement </mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{disbursementInfo.numberOfDisbursement}}</mat-hint>\r\n                                          </div>  \r\n                                      </ng-container>\r\n                                  </div>\r\n                                  <div>\r\n                                      <span layout=\"row\">\r\n                                          <hr class=\"line\" flex />\r\n                                      </span>\r\n                                  </div>\r\n                                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                      <ng-container>\r\n                                          <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">First Disbursement Date</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{disbursementInfo.firstDisbursementDate}} </mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Total Disbursement</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{disbursementInfo.totalDisbursement}}</mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Disbursement Mode</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{disbursementInfo.disbursementMode}} </mat-hint>\r\n                                          </div>\r\n                                      </ng-container>\r\n                                  </div>\r\n                                  <div>\r\n                                      <span layout=\"row\">\r\n                                          <hr class=\"line\" flex />\r\n                                      </span>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </mat-card-content>\r\n                  </mat-card>\r\n                  <h7 fxLayout=\"row\" class=\"paraFont\">Internal Account</h7>\r\n                  <mat-card class=\"chequecard\">\r\n                      <mat-card-content>\r\n                          <div class=\"full-width\">\r\n                              <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                      <ng-container>\r\n                                          <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Customer Account</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{disbursementInfo.customerAccount}}</mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Branch Code</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{disbursementInfo.branchCode}}</mat-hint>\r\n                                          </div>\r\n                                      </ng-container>\r\n                                  </div>\r\n                                  <div>\r\n                                      <span layout=\"row\">\r\n                                          <hr class=\"line\" flex />\r\n                                      </span>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </mat-card-content>\r\n                  </mat-card>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  \r\n\r\n      <br>\r\n\r\n    <!--Loan Repayment Details Summary-->\r\n    <div class=\"fullcard\">\r\n      <div fxLayout=\"row\">\r\n          <h4 class=\"paraFont\">Loan Repayment Details</h4>\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n          <div fxFlex=\"100%\" *ngIf=\"disbursementInfo\">\r\n              <!-- <h3 fxLayout=\"row\"  class=\"paraFont\">Loan Repayment Details</h3> -->\r\n              <mat-card class=\"chequecard\">\r\n                  <mat-card-content>\r\n                      <div class=\"full-width\">\r\n                          <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                              <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                  <ng-container>     \r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">Type of Repayment</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.typeOfRepayment}}</mat-hint>\r\n                                      </div>\r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">Repayment Frequency</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.repaymentFrequency}}\r\n                                          </mat-hint>\r\n                                      </div>\r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">First Repayment Date</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.firstRepaymentDate}}\r\n                                          </mat-hint>\r\n                                      </div>                                  \r\n                                  </ng-container>\r\n                              </div>\r\n                              <div>\r\n                                  <span layout=\"row\">\r\n                                      <hr class=\"line\" flex />\r\n                                  </span>\r\n                              </div>\r\n                              <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                  <ng-container>\r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.loanTenure}}\r\n                                          </mat-hint>\r\n                                      </div>\r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">Maturity Date</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.maturityDate}}</mat-hint>\r\n                                      </div>\r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">Repayment Mode</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.repaymentMode}}\r\n                                          </mat-hint>\r\n                                      </div>     \r\n                                  </ng-container>\r\n                              </div>\r\n                              <div>\r\n                                  <span layout=\"row\">\r\n                                      <hr class=\"line\" flex />\r\n                                  </span>\r\n                              </div>\r\n                              <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                  <ng-container>\r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">Moratorium Period ( in months)</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.moraturioumPeriod}}\r\n                                          </mat-hint>\r\n                                      </div>\r\n                                  </ng-container>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </mat-card-content>\r\n              </mat-card>\r\n              <h3 fxLayout=\"row\"  class=\"paraFont\">Internal Account</h3>\r\n              <mat-card class=\"chequecard\">\r\n                  <mat-card-content>\r\n                      <div class=\"full-width\">\r\n                          <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                              <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                  <ng-container>\r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">Customer Account</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.customerAccount}}</mat-hint>\r\n                                      </div>\r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">Branch Code</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.branchCode}}</mat-hint>\r\n                                      </div>\r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">Bank Name</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.bankName}}</mat-hint>\r\n                                      </div>\r\n                                      <div fxFlex=\"33%\" fxFlex.xs=\"100%\">\r\n                                          <mat-hint class=\"headingText\">IFSC Code</mat-hint>\r\n                                          <br>\r\n                                          <mat-hint class=\"valueText\">{{repaymentInfo.ifscCode}}</mat-hint>\r\n                                      </div>\r\n                                  </ng-container>\r\n                              </div>\r\n                              <div>\r\n                                  <span layout=\"row\">\r\n                                      <hr class=\"line\" flex />\r\n                                  </span>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </mat-card-content>\r\n              </mat-card>\r\n          </div>\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n<br>\r\n      <!--Charge Details Summary-->\r\n      <div>\r\n        <h4 class=\"paraFont\">Loan Charge Details</h4>\r\n      </div>\r\n      <mat-card class=\"matCard\">\r\n        \r\n        <div fxLayout=\"row wrap\" class=\"main\">\r\n          <div fxFlex=\"100\">\r\n          </div>\r\n          <div fxFlex=\"100\" class=\"m-333\" class=\"mainDiv\">\r\n            <div class=\"mt-24\"></div>\r\n            <form *ngIf=\"chargeFormIT\" [formGroup]=\"chargeFormIT\">\r\n              <table class=\"cart-table default-bg mat-elevation-z0\">\r\n                <tbody>\r\n                  <tr class=\"mt-4\" *ngFor=\"let chargeIT of in2.controls; let i = index\" class=\"chargeTable\">\r\n                    <div class=\"row\" class=\"chargeLeft\">\r\n                      <ng-container [formGroup]=\"chargeIT\">\r\n                        <div class=\"heading\">\r\n                          <input matInput formControlName=\"intrestType\" name=\"account_branch\" id=\"headingInput\" readonly />\r\n                        </div>\r\n                        <td>\r\n                          <mat-card class=\"matCardBox\">\r\n                            <mat-label class=\"label\">Amount</mat-label>\r\n                            <input matInput formControlName=\"amout\" name=\"account_branch\" class=\"input\" readonly />\r\n                          </mat-card>\r\n                        </td>\r\n                      </ng-container>\r\n                    </div>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n\r\n\r\n     <!--Account Services Summary-->\r\n     <div class=\"spanDiv1\">\r\n      <h4 class=\"paraFont\">Loan Account Services</h4>\r\n    </div>\r\n    <mat-card class=\"matCard\">\r\n    <div class=\"full-width\" style=\"height:auto\">\r\n      <div class=\"fullcard\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n              <div fxFlex=\"100%\" *ngIf=\"accServiceInfo\">\r\n                  <h3 fxLayout=\"row\" class=\"paraFont\">Statement Preferences</h3>\r\n                  <mat-card class=\"chequecard\">\r\n                      <mat-card-content>\r\n                          <div class=\"full-width\">\r\n                              <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                      <ng-container>\r\n  \r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Statement Cycle</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{accServiceInfo.statementCycle}}</mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Statement Type</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{accServiceInfo.statementType}}\r\n                                              </mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Start Date</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{accServiceInfo.startDate}}\r\n                                              </mat-hint>\r\n                                          </div>\r\n                                         \r\n                                      </ng-container>\r\n                                  </div>\r\n                                  <div>\r\n                                      <span layout=\"row\">\r\n                                          <hr class=\"line\" flex />\r\n                                      </span>\r\n                                  </div>\r\n                              \r\n                              </div>\r\n                          </div>\r\n                      </mat-card-content>\r\n                  </mat-card>\r\n                  <h3 fxLayout=\"row\" class=\"paraFont\">Holiday Preferences</h3>\r\n                  <mat-card class=\"chequecard\">\r\n                      <mat-card-content>\r\n                          <div class=\"full-width\">\r\n                              <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                      <ng-container>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Ignore Holidays ?</mat-hint>\r\n                                              <br>\r\n                                              <div class=\"toggle\">\r\n                                                  <mat-slide-toggle [checked]=\"ignoreHolidayVarHoliday\">\r\n                                                  </mat-slide-toggle>\r\n                                              </div>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Holiday Check</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{holiday.holidayCheck}}</mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Move Across Month</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{holiday.moveAcrossMonth}}</mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Cascade Schedules ?</mat-hint>\r\n                                              <br>\r\n                                              <div class=\"toggle\">\r\n                                                  <mat-slide-toggle [checked]=\"cascadeVarHoliday\">\r\n                                                  </mat-slide-toggle>\r\n                                              </div>\r\n                                          </div>\r\n                                      </ng-container>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </mat-card-content>\r\n                  </mat-card>\r\n                  <h7 fxLayout=\"row\" class=\"paraFont\">Maturity Date</h7>\r\n                  <mat-card class=\"chequecard\">\r\n                      <mat-card-content>\r\n                          <div class=\"full-width\">\r\n                              <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                      <ng-container>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Ignore Holidays ?</mat-hint>\r\n                                              <br>\r\n                                              <div class=\"toggle\">\r\n                                                  <mat-slide-toggle [checked]=\"ignoreHolidayVarMaturity\">\r\n                                                  </mat-slide-toggle>\r\n                                              </div>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Holiday Check</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{maturity.holidayCheck}}</mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Move Across Month</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{maturity.moveAcrossMonth}}</mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Cascade Schedules ?</mat-hint>\r\n                                              <br>\r\n                                              <div class=\"toggle\">\r\n                                                  <mat-slide-toggle [checked]=\"cascadeVarMaturity\">\r\n                                                  </mat-slide-toggle>\r\n                                              </div>\r\n                                          </div>\r\n                                      </ng-container>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </mat-card-content>\r\n                  </mat-card>\r\n                  <h7 fxLayout=\"row\" class=\"paraFont\">Revision Schedules</h7>\r\n                  <mat-card class=\"chequecard\">\r\n                      <mat-card-content>\r\n                          <div class=\"full-width\">\r\n                              <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                  <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                      <ng-container>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Ignore Holidays ?</mat-hint>\r\n                                              <br>\r\n                                              <div class=\"toggle\">\r\n                                                  <mat-slide-toggle [checked]=\"ignoreHolidayVarRevison\">\r\n                                                  </mat-slide-toggle>\r\n                                              </div>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Holiday Check</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{revision.holidayCheck}}</mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Move Across Month</mat-hint>\r\n                                              <br>\r\n                                              <mat-hint class=\"valueText\">{{revision.moveAcrossMonth}}</mat-hint>\r\n                                          </div>\r\n                                          <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                              <mat-hint class=\"headingText\">Cascade Schedules ?</mat-hint>\r\n                                              <br>\r\n                                              <div class=\"toggle\">\r\n                                                  <mat-slide-toggle [checked]=\"cascadeVarRevison\">\r\n                                                  </mat-slide-toggle>\r\n                                              </div>\r\n                                          </div>\r\n                                      </ng-container>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </mat-card-content>\r\n                  </mat-card>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n   </mat-card>\r\n    </div>\r\n  </div> \r\n\r\n\r\n  <div  *ngIf=\"!isApprovedSreen\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n  <button mat-button rounded color=\"primary\"  (click)=\"Back()\">\r\n    Back\r\n  </button>\r\n  <button  mat-raised-button color=\"primary\"(click)=\"Done()\">\r\n    Done\r\n  </button>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { AccountApprovalDetailsSummaryComponent } from './account-approval-stage/account-approval-details-summary/account-approval-details-summary.component';\r\nimport { AccountApprovalStageComponent } from './account-approval-stage/account-approval-stage.component';\r\nimport { AssessmentDetailsComponent } from './account-approval-stage/assessment-details/assessment-details.component';\r\nimport { LoanSummaryDetailsComponent } from './account-approval-stage/loan-summary-details/loan-summary-details.component';\r\nimport { OfferAcceptRejectDetailsComponent } from './account-approval-stage/offer-accept-reject-details/offer-accept-reject-details.component';\r\n\r\nimport { AccountService } from '../home/account.service';\r\n// import { LoanAccountComponent } from './loan-account.component';\r\nimport { AccountServicesComponent } from './loan-enrichment/account-services/account-services.component';\r\nimport { LoanChargeDetailsComponent } from './loan-enrichment/loan-charge-details/loan-charge-details.component';\r\nimport { LoanDisbursementDetailsComponent } from './loan-enrichment/loan-disbursement-details/loan-disbursement-details.component';\r\nimport { LoanEnrichmentComponent } from './loan-enrichment/loan-enrichment.component';\r\nimport { LoanIntrestDetailsComponent } from './loan-enrichment/loan-intrest-details/loan-intrest-details.component';\r\nimport { LoanRepaymentComponentComponent } from './loan-enrichment/loan-repayment-component/loan-repayment-component.component';\r\nimport { FinancialDetailsComponent } from './loan-entry-stage/financial-details/financial-details.component';\r\nimport { LoanAccountComponent } from './loan-account.component';\r\nimport { LoanAssesmentStageComponent } from './loan-assesment-stage/loan-assesment-stage.component';\r\nimport { LoanAssessmentDetailsComponent } from './loan-assesment-stage/loan-assessment-details/loan-assessment-details.component';\r\nimport { LoanQualitativeScoreboardComponent } from './loan-assesment-stage/loan-qualitative-scoreboard/loan-qualitative-scoreboard.component';\r\n\r\nimport { AssetDetailsSummaryComponent } from './loan-entry-stage/asset-details/asset-details-summary/asset-details-summary.component';\r\nimport { AssetDetailsComponent } from './loan-entry-stage/asset-details/asset-details.component';\r\nimport { LoanDetailsSummaryComponent } from './loan-entry-stage/loan-details/loan-details-summary/loan-details-summary.component';\r\nimport { LoanDetailsComponent } from './loan-entry-stage/loan-details/loan-details.component';\r\nimport { LoanEntryStageComponent } from './loan-entry-stage/loan-entry-stage.component';\r\nimport { PostOfferAmendStageComponent } from './post-offer-amend-stage/post-offer-amend-stage.component';\r\nimport { PostOfferIssueComponent } from './post-offer-amend-stage/offer-issue/offer-issue.component';\r\nimport { PostOfferAmendmentComponent } from './post-offer-amend-stage/post-offer-amendment/post-offer-amendment.component';\r\nimport { LoanDisbursementComponent } from './post-offer-amend-stage/loan-disbursement/loan-disbursement.component';\r\nimport { VehicleDetailsComponent } from './loan-entry-stage/vehicle-details/vehicle-details.component';\r\nimport { LoanRepaymentComponent } from './post-offer-amend-stage/loan-repayment/loan-repayment.component';\r\nimport { OfferAcceptRejectStageComponent } from './offer-accept-reject-stage/offer-accept-reject-stage.component';\r\nimport { AcceptOfferAcceptRejectComponent } from './offer-accept-reject-stage/offer-accept-reject/offer-accept-reject.component';\r\nimport { OfferAssessmentDetailsComponent } from './offer-accept-reject-stage/offer-assessment-details/offer-assessment-details.component';\r\n\r\n// import { AssetValuationComponent } from './offer-issue-stage/asset-valuation/asset-valuation.component';\r\nimport { CreditRatingDetailsComponent } from './offer-issue-stage/credit-rating-details/credit-rating-details.component';\r\nimport { LegalOpinionComponent } from './offer-issue-stage/legal-opinion/legal-opinion.component';\r\nimport { OfferAssessmentComponent } from './offer-issue-stage/offer-assessment/offer-assessment.component';\r\n// import { OfferIssueStageComponent } from './offer-issue-stage/offer-issue-stage.component';\r\nimport { OfferissueComponent } from './offer-issue-stage/offerissue/offerissue.component';\r\n\r\n\r\nimport { VehicleDetailsSummaryComponent } from './loan-entry-stage/vehicle-details/vehicle-details-summary/vehicle-details-summary.component';\r\nimport { AdmissionDetailsComponent } from './loan-entry-stage/admission-details/admission-details.component';\r\nimport { CustomerInformationComponent } from './loan-entry-stage/customer-information/customer-information.component';\r\nimport { AssetValuationComponent } from './offer-issue-stage/asset-valuation/asset-valuation.component';\r\nimport { OfferIssueStageComponent } from './offer-issue-stage/offer-issue-stage.component';\r\nimport { MandateDetailsComponent } from './loan-entry-stage/mandate-details/mandate-details.component';\r\nimport { UnderWrittingCreditRatingDetailsComponent } from './underwriting-stage/credit-rating-details/credit-rating-details.component';\r\nimport { UnderWritingCreditRatingSummaryComponent } from './underwriting-stage/credit-rating-details/credit-rating-summary/credit-rating-summary.component';\r\nimport { UnderWritingLegalOpinionSummaryComponent } from './underwriting-stage/legal-opinion/legal-opinion-summary/legal-opinion-summary.component';\r\nimport { UnderWrittingLegalOpinionComponent } from './underwriting-stage/legal-opinion/legal-opinion.component';\r\nimport { UnderwritingStageSummaryComponent } from './underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component';\r\nimport { UnderwritingStageComponent } from './underwriting-stage/underwriting-stage.component';\r\nimport { ValuationAssetsSummaryComponent } from './underwriting-stage/valuation-of-assets/valuation-assets-summary/valuation-assets-summary.component';\r\nimport { ValuationOfAssetsComponent } from './underwriting-stage/valuation-of-assets/valuation-of-assets.component';\r\n//import { VehicleDetailsComponent } from './loan-entry-stage/vehicle-details/vehicle-details.component';\r\nimport { DigitalSigningComponent } from './digital-signing/digital-signing.component';\r\nimport { SupervisorApprovalStageComponent } from './supervisor-approval-stage/supervisor-approval-stage.component';\r\nimport { SupervisorApprovedDetailsComponent } from './supervisor-approval-stage/supervisor-approved-details/supervisor-approved-details.component';\r\nimport { SupervisorAssessmentDetailsComponent } from './supervisor-approval-stage/supervisor-assessment-details/supervisor-assessment-details.component';\r\nimport { AccountCreationStageComponent } from './account-creation-stage/account-creation-stage.component';\r\nimport { OfferAcceptRejectComponent } from './account-creation-stage/offer-accept-reject/offer-accept-reject.component';\r\nimport { AccountCreateDetailsComponent } from './account-creation-stage/account-create-details/account-create-details.component';\r\nimport { OfferAcceptRejectSummaryComponent } from './account-creation-stage/offer-accept-reject/offer-accept-reject-summary/offer-accept-reject-summary.component';\r\nimport { AccountCreateSummaryComponent } from './account-creation-stage/account-create-details/account-create-summary/account-create-summary.component';\r\nimport { AccountCreationSummaryComponent } from './account-creation-stage/account-creation-summary/account-creation-summary.component';\r\nimport { GuarantorDetailsComponent } from './loan-entry-stage/guarantor-details/guarantor-details.component';\r\nimport { CollateralDetailsComponent } from './loan-entry-stage/collateral-details/collateral-details.component';\r\nimport { OfferAcceptRejectSumaryComponent } from './account-approval-stage/offer-accept-reject-summary/offer-accept-reject-summary.component';\r\n// import { ListComponent } from '../home/digital-signing/list/list.component';\r\n// import { ListComponent } from './digital-signing/list/list.component';\r\nimport { OfferIssueComponent } from './offer-accept-reject-stage/offer-issue/offer-issue.component';\r\nimport { PostOfferAmendmentStageSummaryComponent } from './post-offer-amend-stage/post-offer-amendment-stage-summary/post-offer-amendment-stage-summary.component';\r\nimport { DigitalSignInNowOrLaterComponent } from './digital-signing/digital-sign-in-now-or-later/digital-sign-in-now-or-later.component';\r\nimport { LoanEnrichmentViewSummaryComponent } from './loan-enrichment/loan-enrichment-view-summary/loan-enrichment-view-summary.component';\r\nimport { UploadSignOrEsignComponent } from './digital-signing/upload-sign-or-esign/upload-sign-or-esign.component';\r\nimport { LoanAssessmentDetailsSummaryComponent } from './loan-assesment-stage/loan-assessment-details-summary/loan-assessment-details-summary.component';\r\nimport { LoanAssessmentViewSummaryComponent } from './loan-assesment-stage/loan-assessment-view-summary/loan-assessment-view-summary.component';\r\n\r\n\r\nexport const LoanAccountRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoanAccountComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'account/list',\r\n        pathMatch: 'full'\r\n      },{\r\n        path: 'account/list',\r\n        component: LoanEntryStageComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/offerstage/list',\r\n        component: OfferAcceptRejectStageComponent ,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/offerstage/offer-assessment',\r\n        component: OfferAssessmentDetailsComponent ,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' } \r\n      },{\r\n        path: 'account/offerstage/offer-issue',\r\n        component: OfferIssueComponent ,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/offerstage/offer-accept-reject',\r\n        component: AcceptOfferAcceptRejectComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' } \r\n      },\r\n\r\n      // Account Approval Stage Starts\r\n      {\r\n        path: 'account-approval/list',\r\n        component: AccountApprovalStageComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account-approval/assessment-details',\r\n        component: AssessmentDetailsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account-approval/offer-acceptReject-details',\r\n        component: OfferAcceptRejectDetailsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account-approval/offer-acceptReject-summary-details',\r\n        component: OfferAcceptRejectSumaryComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },\r\n      {\r\n        path: 'account-approval/loan-summary-details',\r\n        component: LoanSummaryDetailsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account-approval/account-approval-summary-details',\r\n        component: AccountApprovalDetailsSummaryComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },\r\n      // Account Approval Stage Ends\r\n      {\r\n        path: 'account/list/underwritingStage',\r\n        component: UnderwritingStageComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/list/underwritingStage/creditrating',\r\n        component: UnderWrittingCreditRatingDetailsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/list/underwritingStage/creditrating/edit',\r\n        component: UnderWritingCreditRatingSummaryComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/list/underwritingStage/legalopinion',\r\n        component: UnderWrittingLegalOpinionComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/list/underwritingStage/legalopinion/edit',\r\n        component: UnderWritingLegalOpinionSummaryComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/list/underwritingStage/valuationofassets',\r\n        component: ValuationOfAssetsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/list/underwritingStage/valuationofassets/edit',\r\n        component: ValuationAssetsSummaryComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/list/underwritingStage/summary',\r\n        component: UnderwritingStageSummaryComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/assessment/list',\r\n        component: LoanAssesmentStageComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },\r\n      {\r\n        path: 'account/assessment/summary',\r\n        component: LoanAssessmentViewSummaryComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },\r\n      {\r\n        path: 'account/loan-details',\r\n        component: LoanDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Loan Details' }\r\n      },\r\n      {\r\n        path: 'account/application-enrichment',\r\n        component: LoanEnrichmentComponent,\r\n        data: { title: 'Home', breadcrumb: 'Application Enrichment' }\r\n      },\r\n      {\r\n        path:'account/application-enrichment/Summary',\r\n        component:LoanEnrichmentViewSummaryComponent,\r\n        data : {title: 'Home', breadcrumb: 'Application Enrichment'}\r\n      },\r\n      {\r\n        path: 'account/application-enrichment/intrest-details',\r\n        component: LoanIntrestDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Application Enrichment' }\r\n      },\r\n      {\r\n        path: 'account/application-enrichment/loan-disbursement',\r\n        component: LoanDisbursementDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Application Enrichment' }\r\n      },\r\n      {\r\n        path: 'account/application-enrichment/loan-repayment',\r\n        component: LoanRepaymentComponentComponent,\r\n        data: { title: 'Home', breadcrumb: 'Application Enrichment' }\r\n      },\r\n      {\r\n        path: 'account/application-enrichment/loan-repayment/:id',\r\n        component: LoanRepaymentComponentComponent,\r\n        data: { title: 'Home', breadcrumb: 'Application Enrichment' }\r\n      },\r\n      {\r\n        path: 'account/application-enrichment/account-services',\r\n        component: AccountServicesComponent,\r\n        data: { title: 'Home', breadcrumb: 'Application Enrichment' }\r\n      },\r\n      {\r\n        path: 'account/application-enrichment/charge-details',\r\n        component: LoanChargeDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Application Enrichment' }\r\n      },\r\n     {\r\n        path: 'account/loan-details/summary',\r\n        component: LoanDetailsSummaryComponent,\r\n        data: { title: 'Home', breadcrumb: 'Loan Details' }\r\n      },{\r\n        path: 'account/asset-details',\r\n        component: AssetDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Asset Details' }\r\n      },{\r\n        path: 'account/asset-details/summary',\r\n        component: AssetDetailsSummaryComponent,\r\n        data: { title: 'Home', breadcrumb: 'Asset Details' }\r\n      },{\r\n        path: 'account/vehicle-details',\r\n        component: VehicleDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Vehicle Details' }\r\n      },{\r\n        path: 'account/digitalsigning/list',\r\n        component: DigitalSigningComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/digitalsigning/list/options',\r\n        // component: ListComponent,\r\n        component: DigitalSignInNowOrLaterComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/digitalsigning/options',\r\n        // component: ListComponent,\r\n        component: UploadSignOrEsignComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/vehicle-details/summary',\r\n        component: VehicleDetailsSummaryComponent,\r\n        data: { title: 'Home', breadcrumb: 'Vehicle Details' }\r\n      },\r\n      {\r\n        path: 'account/offer-issue/list',\r\n        component: OfferIssueStageComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },\r\n      {\r\n        path: 'account/list/offer-issue/credit-rating',\r\n        component: CreditRatingDetailsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/list/offer-issue/valuation-asset',\r\n        component: AssetValuationComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },\r\n      {\r\n        path: 'account/list/offer-issue/legal-opinion',\r\n        component: LegalOpinionComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },\r\n      {\r\n        path: 'account/list/offer-issue/offer-assessment',\r\n        component: OfferAssessmentComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },\r\n      {\r\n        path: 'account/list/offer-issue/offerissue',\r\n        component: OfferissueComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },\r\n        {\r\n        path: 'account/admission-details',\r\n        component: AdmissionDetailsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Admission Details' }\r\n      },\r\n      {\r\n        path: 'account/customer-information',\r\n        component: CustomerInformationComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Customer Information' }\r\n      },\r\n      {\r\n        path: 'account/mandate-details',\r\n        component: MandateDetailsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Mandate Details' }\r\n      },\r\n      {\r\n        path: 'account/financial-details',\r\n        component: FinancialDetailsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Financial Details' }\r\n\r\n      },\r\n    /*  {\r\n        path: 'offer-issue/list',\r\n        component: OfferIssueStageComponent,\r\n        data: { title: 'Loan Account', breadcrumb: 'Create Loan Account' }\r\n      }, */\r\n      {\r\n        path: 'account/collateral_details',\r\n        component: CollateralDetailsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Collateral Details' }\r\n      },\r\n      {\r\n        path: 'account/account-creation-stage',\r\n        component: AccountCreationStageComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n          path: 'account/account-creation-stage/account-create-details',\r\n          component: AccountCreateDetailsComponent,\r\n          data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n        },{\r\n          path: 'account/account-creation-stage/account-create-summary',\r\n          component: AccountCreateSummaryComponent ,\r\n          data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n        },{\r\n          path: 'account/account-creation-stage/offer-accept-reject',\r\n          component: OfferAcceptRejectComponent,\r\n          data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n        },{\r\n          path: 'account/account-creation-stage/offer-accept-reject-summary',\r\n          component: OfferAcceptRejectSummaryComponent,\r\n          data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n        },\r\n        {\r\n          path: 'account/account-creation-stage/account-creation-summary',\r\n          component: AccountCreationSummaryComponent,\r\n          data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n        },\r\n      {\r\n        path: 'account/guarantor_details',\r\n        component: GuarantorDetailsComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Guarantor Details' }\r\n      },\r\n      {\r\n        path: 'account/supervisor-summary',\r\n        component: SupervisorApprovalStageComponent,\r\n        data: { title: 'Home', breadcrumb: 'Vehicle Details' }\r\n      },\r\n      {\r\n        path: 'account/supervisor/list',\r\n        component: SupervisorApprovalStageComponent,\r\n        data: { title: 'Home', breadcrumb: 'Vehicle Details' }\r\n      },\r\n      {\r\n        path: 'account/supervisor-assessmentdetails',\r\n        component: SupervisorAssessmentDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Vehicle Details' }\r\n      },\r\n      {\r\n        path: 'account/supervisor-approveddetails',\r\n        component: SupervisorApprovedDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Vehicle Details' }\r\n      },\r\n      {\r\n        path: 'account/assessment-summary',\r\n        component: LoanAssesmentStageComponent,\r\n        data: { title: 'Home', breadcrumb: 'Create Retain Loan Account' }\r\n      },\r\n      {\r\n        path: 'account/post-offer-amend-stage/list',\r\n        component: PostOfferAmendStageComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },\r\n      {\r\n        path: 'account/post-offer-amend-stage-summary',\r\n        component: PostOfferAmendmentStageSummaryComponent,\r\n        data: { title: 'Loan', breadcrumb: 'Create Loan Account' }\r\n      },{\r\n        path: 'account/offer-issue',\r\n        component: PostOfferIssueComponent,\r\n        data: { title: 'Home', breadcrumb: 'Offer Issue' }\r\n      },{\r\n        path: 'account/post-offer-amendment',\r\n        component: PostOfferAmendmentComponent,\r\n        data: { title: 'Home', breadcrumb: 'Offer Issue' }\r\n      },{\r\n        path: 'account/loan-disbursement',\r\n        component: LoanDisbursementComponent,\r\n        data: { title: 'Home', breadcrumb: 'Offer Issue' }\r\n      },{\r\n        path: 'account/loan-repayment',\r\n        component: LoanRepaymentComponent,\r\n        data: { title: 'Home', breadcrumb: 'Offer Issue' }\r\n      },\r\n      {\r\n       path:'account/assessment/summary',\r\n       component:LoanAssesmentStageComponent,\r\n       data:{title: 'Home', breadcrumb: 'Assessment Details'}\r\n      },\r\n      {\r\n        path: 'account/assessment/qualitative',\r\n        component: LoanQualitativeScoreboardComponent,\r\n        data: { title: 'Home', breadcrumb: 'Qualitative Scoreboard Details' }\r\n      },{\r\n        path:'account/assessment/assessment-details',\r\n        component:LoanAssessmentDetailsComponent,\r\n        data: { title: 'Home', breadcrumb: 'Assessment Details' }\r\n        \r\n      }\r\n    ]\r\n\r\n  }\r\n];","import { ChangeDetectorRef, Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SignaturePad } from 'angular2-signaturepad';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/home/account.service';\r\n// import { AccountService } from '../../account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-esign-pop',\r\n  templateUrl: './esign-pop.component.html',\r\n  styleUrls: ['./esign-pop.component.scss']\r\n})\r\nexport class EsignPopComponent implements OnInit {\r\n  signatureImg: string;\r\n  @ViewChild(SignaturePad) signaturePad: SignaturePad;\r\n  isDone: boolean = false;\r\n  accountId:any;\r\n  signaturePadOptions: Object = {\r\n    'minWidth': 2,\r\n    'canvasWidth': 250,\r\n    'canvasHeight': 150\r\n  };\r\n  accountdetailsForStatusUpdate: Object;\r\n  count: any=0;\r\n  show: boolean;\r\n  res: Object = {'enable':false, 'image':null};\r\n  disableDone: boolean=true;\r\n  signupload:boolean=true;\r\n  selectedFile: any;\r\n  imageurl: any;\r\n  loanInfo: any;\r\n\r\n  constructor\r\n    (\r\n      @Inject(MAT_DIALOG_DATA) public data: any,\r\n      public dialogRef: MatDialogRef<EsignPopComponent>,\r\n      private ls: LocalStoreService,\r\n      private accountService: AccountService,\r\n      private apiService: ApiService,\r\n      private router: Router,\r\n      private appEntryService: ApplicationEntryStageService,\r\n      private cdr:ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.accountId = this.ls.getItem('loanAccountId');\r\n    this.accountId = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.accountId = this.loanInfo.loanAccountId;\r\n    }\r\n    console.log(\"popup response data:\",this.data);\r\n    this.isDone = this.data.isSignLater;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.signaturePad is now available\r\n    this.signaturePad.set('minWidth', 2);\r\n    this.signaturePad.clear();\r\n  }\r\n\r\n  drawComplete() {\r\n    console.log(this.signaturePad.toDataURL());\r\n    const value=this.signaturePad.toDataURL();\r\n    // this.ls.setItem('signedImage',value);\r\n    // this.imageurl=this.ls.getItem('signedImage'),\r\n    this.imageurl = value ;\r\n    console.log(\"this.imageurl\",this.imageurl);\r\n    if(value.toString().includes('data:image/png;base64')){\r\n      this.disableDone=false;\r\n    }else{\r\n      this.disableDone=true;\r\n    }\r\n  }\r\n\r\n  drawStart() {\r\n    console.log('begin drawing');\r\n  }\r\n\r\n  clearSignature() {\r\n    this.signaturePad.clear();\r\n  }\r\n\r\n  savePad() {\r\n    const base64Data = this.signaturePad.toDataURL();\r\n    this.signatureImg = base64Data;\r\n  }\r\n\r\n\r\n\r\n  close1()\r\n  {\r\n    if(this.data.screen === \"NewCustomerOnboarding\") {\r\n      this.dialogRef.close(this.res);\r\n    }\r\n    else {\r\n      //this.dialogRef.close(false);\r\n      this.dialogRef.close({image: this.imageurl});\r\n      this.ls.setItem('enable',false);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    if(this.data.screen === \"NewCustomerOnboarding\") {\r\n      this.dialogRef.close(this.res);\r\n    }\r\n    else {\r\n      console.log('else ::')\r\n      //this.dialogRef.close(true);\r\n      this.dialogRef.close({image: this.imageurl});\r\n      //this.ls.setItem('enable',true);\r\n    }\r\n  \r\n  }\r\n\r\n  onFileChanged(event) {\r\n    this.selectedFile = event.target.files[0]\r\n    console.log(this.selectedFile)\r\n\r\n    this.disableDone=false;\r\n    \r\n  }\r\n  \r\n  onSubmit() {\r\n    console.log(this.signaturePad.toDataURL());    \r\n    let data: any = {};\r\n    console.log(\"this.data::\",this.data)\r\n    if(this.data.screen !== \"NewCustomerOnboarding\") {\r\n      // data.accountId = this.ls.getItem('accountId');\r\n      data.accountId = this.accountId;\r\n      setTimeout(() => {\r\n        this.getByAccountId(data.accountId);\r\n      }, 10);\r\n\r\n    }\r\n    else {\r\n      let customerId = this.data.customerId;\r\n      this.apiService.getAccountIdByCusId(customerId).subscribe(res => {\r\n        console.log(\"Account Id response -- \", res);\r\n        data.accountId = res;\r\n      })\r\n      this.res = {enable:true, image:this.signaturePad.toDataURL()};\r\n    }\r\n\r\n    data.customerId = this.data.customerId;\r\n    data.documentName = this.data.customerId + \"Signature\";\r\n    data.documentType = \"10\"\r\n    data.fileType = \"image/jpeg\";\r\n    data.fileName = \"signature\";\r\n\r\n    const dataURL = this.signaturePad.toDataURL('image/png');\r\n    const datam = atob(dataURL.substring('data:image/png;base64,'.length)),\r\n      asArray = new Uint8Array(datam.length);\r\n    for (var i = 0, len = datam.length; i < len; ++i) {\r\n      asArray[i] = datam.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([asArray], { type: 'image/png' });\r\n\r\n    const uploadData = new FormData();\r\n    uploadData.append('data', JSON.stringify(data));\r\n    uploadData.append('file', blob);\r\n    uploadData.append('accType', \"savings\")\r\n\r\n    this.apiService.uploadDocument(uploadData).subscribe((op) => {\r\n      console.log(op);\r\n      if(op)\r\n      {\r\n        this.ls.setItem('signedImage',this.imageurl);\r\n        console.log(this.imageurl);\r\n        console.log(this.ls.getItem('signedImage'));\r\n        this.close();\r\n      this.show=true;\r\n      this.res = op;\r\n      }\r\n    },err=>{\r\n      this.close();\r\n      this.res = false;\r\n    });\r\n    if(this.data.screen !== \"NewCustomerOnboarding\") {\r\n      this.isDone = false;\r\n    }\r\n    else {\r\n      this.close();\r\n    }\r\n    console.log(this.isDone);   \r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n      this.router.navigate(['loan/account/digitalsigning/list/options/']);\r\n  });\r\n    this.ls.setItem('eSignStage', true);\r\n  }\r\n\r\n  getByAccountId(accountId: any) {\r\n    this.apiService.fetchByLoanAccountId(accountId)\r\n      .subscribe(resp => {\r\n        console.log('updateStatus :: ',resp);\r\n        this.accountdetailsForStatusUpdate = resp;\r\n        this.updateAccountStatus(resp);\r\n      });\r\n  }\r\n\r\n  updateAccountStatus(accData) {\r\n    accData.status = 'BACKLOG';\r\n    this.apiService.updateLoanDetailsStatus(accData)\r\n      .subscribe(updateResp => {\r\n        console.log(\"updateResp:: \", updateResp);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\" fxLayoutAlign=\"end center\">\r\n      <button mat-icon-button (click)=\"close1()\" *ngIf=\"!isDone\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n      <button mat-icon-button (click)=\"close()\" *ngIf=\"isDone\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div fxFlex=\"100\" *ngIf=\"!isDone\">\r\n      <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/esign.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  \r\n    <div fxFlex=\"100\">\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <div fxFlex=\"50\" fxFlexOffset=\"20px\" *ngIf=\"!isDone\">\r\n\r\n          <!-- <div class=\"text-center\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"fileInput.click()\">Upload\r\n              <input style=\"display: none\" type=\"file\" (change)=\"onFileChanged($event)\" #fileInput>\r\n            </button>\r\n          </div>\r\n\r\n            <div class=\"text-center\">\r\n              <button mat-button class=\"full-width\">OR</button>\r\n            </div> -->\r\n\r\n          <h5 class=\"text-center mt-16 esignFont\">Please e-sign the application!</h5>\r\n          <mat-card class=\"signaturePad\"  class=\"mt-16\">\r\n            <mat-card-content>\r\n              <signature-pad\r\n                [options]=\"signaturePadOptions\"\r\n                (onBeginEvent)=\"drawStart()\"\r\n                (onEndEvent)=\"drawComplete()\"\r\n              ></signature-pad>\r\n            </mat-card-content>\r\n          </mat-card>\r\n          <div class=\"text-center\">\r\n            <button mat-raised-button class=\"Next\" (click)=\"onSubmit()\" [disabled]=\"disableDone\">\r\n              SUBMIT\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <!-- <div fxFlex=\"50\" fxFlexOffset=\"20px\" *ngIf=\"isDone\" class=\"text-center\">\r\n          <div class=\"propic text-center\">\r\n              <img\r\n                src=\"assets/images/esignlater.png\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <br>\r\n          -<h5 class=\"text-center mt-16\">Sign Link on your Email!</h5>\r\n          <p *ngIf=\"accountId != null\">Keep Account Number for your future Reference: <b>{{ accountId }}</b></p>\r\n         - <p>An email has been sent to <b>{{ data?.email }}</b> with the sign link.</p>\r\n          <div class=\"text-center\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"close()\">\r\n              DONE\r\n            </button>\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n@Component({\r\n  selector: 'app-offer-assessment-details',\r\n  templateUrl: './offer-assessment-details.component.html',\r\n  styleUrls: ['./offer-assessment-details.component.scss']\r\n})\r\nexport class OfferAssessmentDetailsComponent implements OnInit {\r\n  offerAssessmentFormGroup: FormGroup;\r\n  disableDone:boolean =true;\r\n  isAssesmentDetailsScreen: boolean = false;\r\n  isOfferIssueScreen: boolean = false; \r\n  isOfferIssueRejectScreen: boolean  = false;\r\n  arraySystemRecommendation:any[]=['Approved','Rejected'];\r\n \r\n  \r\n    \r\n    \r\n    constructor( private formBuilder: FormBuilder,\r\n      private ls: LocalStoreService,\r\n      private apiService: ApiService,\r\n      private snack: MatSnackBar, \r\n      private router: Router) {\r\n      this.offerAssessmentFormGroup = this.formBuilder.group({\r\n        loanAccountId:['566',[Validators.required]],\r\n        rateOfInterest : ['',[Validators.required]],\r\n        requestedLoanAmount: ['',[Validators.required]],\r\n        loanTenure: ['',[Validators.required]],\r\n        approvedLoanAmount:['',[Validators.required]],\r\n        userRecommendation:['',[Validators.required]],\r\n        systemRecommendation:['',[Validators.required]],\r\n        loanAmountRecommendation:['',[Validators.required]]\r\n      })\r\n     }\r\n\r\n\r\n     \r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/loan/account/offerstage/list\"]);\r\n  }\r\n  goNext(){\r\n   \r\n      this.apiService.updateAssessment(this.offerAssessmentFormGroup.value).subscribe(data => {\r\n        console.log(\"data\",data);\r\n        if(data != null){\r\n          this.snack.open('Data Saved!', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n          //this.cdr.markForCheck();\r\n        }\r\n      })\r\n      \r\n     \r\n    \r\n    this.ls.setItem('assessmentScreen', true);\r\n    this.router.navigate([\"/loan/account/offerstage/offer-issue\"]);\r\n  }\r\n  \r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img\r\n          src=\"assets/images/svg/undraw_report_mx0a.svg\"\r\n          alt=\"\"\r\n          class=\"w-80\"\r\n        />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Assessment Details</b></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxLayout=\"column\">\r\n    <form fxLayout=\"column\"  [formGroup]=\"offerAssessmentFormGroup\">\r\n        <div fxFlex=\"100\">\r\n            <mat-card  fxLayout=\"column\" style=\"border-radius: 30px; margin-right: 1.5cm;\">\r\n             <mat-card-title class=\"\">\r\n                <div class=\"card-title-text\" >Assessment Details<mat-divider></mat-divider></div>\r\n             </mat-card-title>\r\n          \r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <label  class=\"hint\">Request Loan Amount</label>\r\n                  <mat-card class=\"inputMatName\">\r\n                    <input matInput formControlName=\"requestedLoanAmount\" class=\"alignment\" type=\"text\" placeholder=\"Request Loan Amount\" />\r\n                  </mat-card>\r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <label  class=\"hint\">Loan Tenure</label>\r\n                  <mat-card class=\"inputMatName\">\r\n                    <input matInput formControlName=\"loanTenure\" class=\"alignment\" type=\"text\" placeholder=\"Loan Tenure\"/>\r\n                  </mat-card>\r\n                </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <label  class=\"hint\">Rate Of Interest</label>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input matInput formControlName=\"rateOfInterest\" class=\"alignment\" type=\"text\" placeholder=\"Rate Of Interest\"/>\r\n                </mat-card>\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <label class=\"hint\">System Recommendation</label>\r\n                <mat-card class=\"inputMatName\">\r\n                  <mat-select placeholder=\"Recommended for Approval\" formControlName=\"systemRecommendation\" disableOptionCentering>\r\n                    <mat-option *ngFor=\"let systemRecommendation of arraySystemRecommendation\" [value]=\"systemRecommendation\"> \r\n                      {{systemRecommendation}} \r\n                    </mat-option> \r\n                  </mat-select>\r\n                  <!-- <input matInput formControlName=\"systemRecommendation\" class=\"alignment\" type=\"text\" placeholder=\"System Recommendation\"/> -->\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n             <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n              <label class=\"hint\">User Recommendation</label>\r\n              <mat-card class=\"inputMatName\">\r\n                <mat-select placeholder=\"User Recommendation\" formControlName=\"userRecommendation\" disableOptionCentering>\r\n                  <mat-option *ngFor=\"let systemRecommendation of arraySystemRecommendation\" [value]=\"systemRecommendation\"> \r\n                    {{systemRecommendation}} \r\n                  </mat-option> \r\n                </mat-select>\r\n                <!-- <input matInput formControlName=\"userRecommendation\" class=\"alignment\" type=\"text\" placeholder=\"Rate Of Interest\"/> -->\r\n              </mat-card>\r\n            </div>\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n              <label class=\"hint\">Loan Amount Recommended</label>\r\n              <mat-card class=\"inputMatName\">\r\n                 <input matInput formControlName=\"loanAmountRecommendation\" class=\"alignment\" type=\"text\" placeholder=\"loanAmountRecommendation\"/> \r\n              </mat-card>\r\n             \r\n            </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n             <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n            <label  class=\"hint\">Approved Loan Amount</label>\r\n            <mat-card class=\"inputMatName\">\r\n              <input matInput formControlName=\"approvedLoanAmount\" class=\"alignment\" type=\"text\" placeholder=\"Approved Loan Amount\"/>\r\n            </mat-card>\r\n          </div>\r\n        \r\n            </div>\r\n          \r\n            </mat-card>\r\n          </div>\r\n          <div class=\"button\">\r\n            <!-- -->\r\n            <button mat-button class=\"Back\" (click)=\"goBack()\" >Back</button>\r\n            <button mat-stroked-button class=\"Next\" (click)=\"goNext()\" [disabled]=\"!offerAssessmentFormGroup.valid\">Next</button>\r\n        </div>\r\n    </form>\r\n  </div>","import { Component,ChangeDetectorRef, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\nimport { AppConfirmService } from 'app/shared/services/app-confirm/app-confirm.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\n@Component({\r\n  selector: 'app-mandate-details',\r\n  templateUrl: './mandate-details.component.html',\r\n  styleUrls: ['./mandate-details.component.scss']\r\n})\r\nexport class MandateDetailsComponent implements OnInit {\r\n\r\n  panelOpenState = false;\r\n  loanaccountID: any;\r\n  showEditOption: boolean = false;\r\n  mandateDetails : any;\r\n  mandateId : any = 0;\r\n  applicantName:any;\r\n  collateralShare:any;\r\n\r\n  mandateInfo: FormGroup;\r\n  mandateInfo_array: FormArray;\r\n\r\n\r\n  mandateDetailsForm: FormGroup;\r\n  noOfApplicants:any;\r\n  loanInfo: any;\r\n  cifNumber: any;\r\n  count: any = 0;\r\n\r\n  constructor\r\n  (\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private accountService: AccountService,\r\n    private confirmService: AppConfirmService, \r\n    private cdr: ChangeDetectorRef,\r\n    private appApiService: ApplicationEntryStageService,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildformGroup();\r\n    this.noOfApplicants=this.ls.getItem('LoanNoOfApplicants');\r\n    this.mandateInfo = this.fb.group({\r\n      mandateInfo_array: this.fb.array([])\r\n    });\r\n    this.mandateId = 0;\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n   \r\n    let isMandateDetailscreen: boolean = JSON.parse(this.ls.getItem('MANDATE_DETAIL_DONE'));\r\n    setTimeout(() => {\r\n      if (this.loanaccountID && isMandateDetailscreen) {\r\n        this.showEditOption = true;\r\n        this.getMandateDetails();\r\n      }\r\n      else {\r\n        this.addMandate('');\r\n        this.showEditOption = false;\r\n        this.buildformGroup();\r\n      }\r\n    }, 10);\r\n  \r\n   console.log(\"FORM::\",this.mandateInfo.get('mandateInfo_array')['controls']);\r\n  }\r\n\r\n  getMandateDetails() {\r\n    this.loader.open();\r\n    this.apiService.getMandateDetailsByLoanAccId(this.loanaccountID).subscribe((mandateDetails) => {\r\n      this.loader.close();\r\n      this.mandateDetails = mandateDetails;\r\n      console.log(this.mandateDetails);\r\n      this.buildformGroup(this.mandateDetails);\r\n      if(mandateDetails){\r\n        for (let index = 0; index < mandateDetails.mandateDetails.length; index++) {\r\n          this.addMandate(mandateDetails.mandateDetails[index]);\r\n        }\r\n      }\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n\r\n  buildformGroup(data?) {\r\n    this.mandateDetailsForm = this.fb.group({\r\n      noOfApplicants: [data ? data.noOfApplicants : '', Validators.required],\r\n      registered: [data ? data.registered : false, Validators.required],\r\n      \r\n    })\r\n this.mandateDetailsForm.get('noOfApplicants').setValue(this.noOfApplicants);\r\n  }\r\n\r\n\r\n  createMandateDetail(item): FormGroup {\r\n    return this.fb.group({\r\n      applicantName: item ? item.applicantName : ['',Validators.required],\r\n      collateralShare: item ? item.collateralShare : ['',[Validators.required, Validators.minLength(1), Validators.maxLength(2)]],\r\n      repaymentShare: item ? item.repaymentShare : [''],\r\n      mandateId: '',\r\n      mandateDetailsId: '',\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  addMandate(item){\r\n    console.log(item);\r\n    this.mandateInfo_array = this.mandateInfo.get('mandateInfo_array') as FormArray; \r\n    this.mandateInfo_array.push(this.createMandateDetail(item));\r\n    this.count ++;\r\n    console.log(this.count)\r\n    this.applicantNameFetch();\r\n    \r\n  }\r\n  applicantNameFetch(){\r\n    this.appApiService.fetchCustomersByLoanAccId(this.loanaccountID,'loan')\r\n      .subscribe((resp: any) =>{\r\n        const formArray = this.mandateInfo.get('mandateInfo_array') as FormArray;\r\n        switch (this.count) {\r\n          case 1:\r\n            console.log(formArray);\r\n            \r\n             formArray.controls[0].get('applicantName').setValue(resp.data[0].firstName+ \" \"+ resp.data[0].lastName);\r\n            break;\r\n            \r\n          case 2:\r\n            \r\n            \r\n             this.mandateInfo_array.controls[1].get('applicantName').setValue(resp.data[1].firstName+ \" \"+ resp.data[1].lastName);\r\n            break;\r\n          case 3:\r\n             this.mandateInfo_array.controls[2].get('applicantName').setValue(resp.data[2].firstName+ \" \"+ resp.data[2].lastName);\r\n            break;\r\n          case 4:\r\n              this.mandateInfo_array.controls[3].get('applicantName').setValue(resp.data[3].firstName+ \" \"+ resp.data[3].lastName);\r\n            break;\r\n         \r\n        \r\n          default:\r\n               this.mandateInfo_array.controls[4].get('applicantName').setValue(resp.data[4].firstName+ \" \"+ resp.data[4].lastName);\r\n            break;\r\n        }\r\n    \r\n      });\r\n\r\n  }\r\n  removeMandate(item: number) {\r\n    console.log(\"i\", item);\r\n    this.confirmService\r\n      .confirm({ title: \"Confirm\", message: \"Are you sure want to remove?\", ok: \"Yes\", cancel: \"No\" })\r\n      .subscribe(res => {\r\n        console.log(\"res:: removed \", res);\r\n        if (res) {\r\n          const control = <FormArray>this.mandateInfo.controls['mandateInfo_array'];\r\n          control.removeAt(item);\r\n          this.count--;\r\n          this.cdr.markForCheck();\r\n        } else return;\r\n      });\r\n  }\r\n\r\n\r\n\r\n  goBack() {\r\n    this.router.navigate([`/loan/account/customer-information`]);\r\n  }\r\n\r\n  submitForm() {\r\n    let payload: any = {};\r\n    this.mandateDetailsForm.get('noOfApplicants').setValue(this.noOfApplicants);\r\n    console.log(\"NumOfApplicants:\",    this.mandateDetailsForm.get('noOfApplicants').setValue(this.noOfApplicants));\r\n    // this.ls.setItem('LoanNoOfApplicants', this.mandateDetailsForm.get('noOfApplicants').value);\r\n    // console.log(\"NumOfApplicants:\",    this.ls.setItem('LoanNoOfApplicants', this.mandateDetailsForm.get('LoanNoOfApplicants').value));\r\n    \r\n    payload = this.mandateDetailsForm.value;\r\n    console.log(\"Mandate Details:\", this.mandateDetailsForm.value)\r\n    payload.loanAccountId = this.loanaccountID;  \r\n    payload.mandateDetails = this.mandateInfo_array.value;\r\n    if(this.ls.getItem('MANDATE_DETAIL_DONE')){\r\n      payload.mandateId = this.mandateId;\r\n    }\r\n    this.apiService.upsertMandateDetails(payload).subscribe(data => {\r\n      console.log(\"data\", data);\r\n      if (data != null) {\r\n        this.snack.open('Mandate Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.next();\r\n      }\r\n    })\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem('MANDATE_DETAIL_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/loan/account/financial-details`]);\r\n  }    \r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/mandate_screen.svg\" alt=\"\" class=\"w-90\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><h1>Mandate Details</h1></div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n        <mat-card class=\"p-0\">\r\n            <!-- <mat-card-title class=\"\">\r\n                <div class=\"card-title-text\">Mandate Details</div>\r\n                <mat-divider></mat-divider>\r\n            </mat-card-title> -->           \r\n              <mat-card-title>\r\n                <fieldset>\r\n                <legend visible=\"true\">Mandate Details</legend>\r\n                </fieldset>\r\n              </mat-card-title>\r\n            <mat-card-content>\r\n                <form *ngIf=\"mandateDetailsForm\" [formGroup]=\"mandateDetailsForm\">\r\n\r\n                    <div fxLayout=\"row\" class=\"pt-16\" fxLayoutGap=\"30px\" fxLayoutAlign=\"start center\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Number of Applicants</mat-label>\r\n                                    <!-- <mat-select name=\"noOfApplicants\" formControlName=\"noOfApplicants\" required>\r\n                                        <mat-option value=\"\"> Select </mat-option>\r\n                                        <mat-option value=\"1\"> 1</mat-option>\r\n                                    </mat-select> -->\r\n                                    <input matInput name=\"noOfApplicants\" readonly\r\n                                    placeholder=\"Number Of Applicants\" formControlName=\"noOfApplicants\" required />\r\n                                    <mat-error *ngIf=\"!mandateDetailsForm.get('noOfApplicants').valid && mandateDetailsForm.get('noOfApplicants').touched\" >\r\n                                        &nbsp;&nbsp; Number of Applicants is Required!\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"p-16\">\r\n                                <div class=\"pb-16\">\r\n                                    <div class=\"pb-4\">\r\n                                        <div class=\"pb-1\">\r\n                                            <mat-slide-toggle name=\"registered\" formControlName=\"registered\" [checked]=\"registered\">\r\n                                                Registered\r\n                                            </mat-slide-toggle>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                    </div>\r\n                    <div fxLayout=\"row\" class=\"full-width\">\r\n                        <form class=\"full-width\" [formGroup]=\"mandateInfo\">\r\n                            <div fxLayout=\"row\" class=\"full-width pt-16\"  formArrayName=\"mandateInfo_array\"*ngFor=\"let report of mandateInfo.get('mandateInfo_array')['controls']; let i=index;\">\r\n                                <div class=\"full-width\" [formGroupName]=\"i\">\r\n                                    <mat-accordion class=\"full-width mat-elevation-z0\">\r\n                                        <mat-expansion-panel class=\"mat-elevation-z0 borderStyle\"\r\n                                            (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                                            <mat-expansion-panel-header class=\"marginData\">\r\n                                                <mat-panel-title class=\"textDesign\">\r\n                                                    Mandate {{i + 1}}\r\n                                                </mat-panel-title>\r\n                                            </mat-expansion-panel-header>\r\n                                             <mat-divider class=\"design\"></mat-divider> \r\n                                            <div>\r\n                                                <div fxLayout=\"row wrap\" class=\"pt-16 full-width\"\r\n                                                    fxLayoutAlign=\"space-between center\">\r\n                                                    <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Applicant Name</mat-label>\r\n                                                            <input matInput name=\"applicantName\"\r\n                                                                placeholder=\"Applicant Name\" formControlName=\"applicantName\" readonly required />\r\n                                                            <mat-error *ngIf=\"!report.controls.applicantName.valid && report.controls.applicantName.touched\" >\r\n                                                                &nbsp;&nbsp;  Applicant Name is Required!\r\n                                                            </mat-error>\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                    <div fxFlex=\"50%\" class=\"p-1\" fxFlex.xs=\"100%\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Collateral Share Percentage</mat-label>\r\n                                                            <input matInput name=\"collateralShare\"\r\n                                                                placeholder=\"Collateral Share Percentage\" minlength=\"1\" maxlength=\"2\" formControlName=\"collateralShare\"\r\n                                                                (keypress)=_keyPress($event) required />\r\n                                                        <mat-error *ngIf=\"!report.controls.collateralShare.valid && report.controls.collateralShare.touched\" >\r\n                                                            &nbsp;&nbsp;  Collateral Share Percentage is Required!\r\n                                                        </mat-error>\r\n                                                        </mat-form-field>\r\n                                                     \r\n                                                    </div>\r\n                                                    <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                            <mat-label>Repayment Share Percentage</mat-label>\r\n                                                            <input matInput minlength=\"1\" maxlength=\"2\" name=\"repaymentShare\"\r\n                                                                placeholder=\"Repayment Share Percentage\" formControlName=\"repaymentShare\" />\r\n                                                        </mat-form-field>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div fxLayout=\"row\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n                                                <div>\r\n                                                    <button mat-button color=\"primary\" class=\"paddingChange\" [disabled]=\"(mandateInfo?.invalid || (noOfApplicants == this.count))\" (click)=\"addMandate('')\"> ADD MANDATE</button>\r\n                                                </div>                         \r\n                                               \r\n                                           \r\n                                            </div>\r\n                                        </mat-expansion-panel>\r\n                                    </mat-accordion>                                  \r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <!-- <div fxLayout=\"row\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n                        <div>\r\n                            <button mat-button color=\"primary\"  [disabled]=\"(mandateInfo?.invalid || (noOfApplicants == this.count))\" (click)=\"addMandate('')\"> ADD MANDATE</button>\r\n                        </div>\r\n             \r\n                        <!-- <div>\r\n                            <button mat-button color=\"warn\" (click)=\"removeMandate(item)\">\r\n                                <mat-icon>delete</mat-icon>REMOVE MANDATE\r\n                            </button>\r\n                        </div> \r\n                   \r\n                    </div> -->\r\n                   \r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n            <button type=\"button\" class=\"Backbtn\" (click)=\"goBack()\" mat-button rounded >\r\n                Back\r\n            </button>\r\n            <button type=\"button\" [disabled]=\"!mandateDetailsForm.valid || !mandateInfo.valid\" mat-raised-button class=\"Nextbtn\" (click)=\"submitForm()\" color=\"primary\">\r\n                Next\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { LoanAccountComponent } from './loan-account.component';\r\nimport { LoanEntryStageComponent } from './loan-entry-stage/loan-entry-stage.component';\r\nimport { LoanEnrichmentComponent } from './loan-enrichment/loan-enrichment.component';\r\nimport { UnderwritingStageComponent } from './underwriting-stage/underwriting-stage.component';\r\nimport { LoanAssesmentStageComponent } from './loan-assesment-stage/loan-assesment-stage.component';\r\nimport { SupervisorApprovalStageComponent } from './supervisor-approval-stage/supervisor-approval-stage.component';\r\nimport { OfferIssueStageComponent } from './offer-issue-stage/offer-issue-stage.component';\r\nimport { LoanAccountRoutes } from './loan-account.routing';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\nimport { SharedDirectivesModule } from 'app/shared/directives/shared-directives.module';\r\nimport { SharedPipesModule } from 'app/shared/pipes/shared-pipes.module';\r\nimport { SharedMaterialModule } from 'app/shared/shared-material.module';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { OfferAcceptRejectStageComponent } from './offer-accept-reject-stage/offer-accept-reject-stage.component';\r\nimport { OfferAssessmentDetailsComponent } from './offer-accept-reject-stage/offer-assessment-details/offer-assessment-details.component';\r\nimport { AcceptOfferAcceptRejectComponent } from './offer-accept-reject-stage/offer-accept-reject/offer-accept-reject.component';\r\nimport { AcceptOfferIssueSummaryComponent } from './offer-accept-reject-stage/offer-issue-summary/offer-issue-summary.component';\r\nimport { AssessmentDetailsSummaryComponent } from './offer-accept-reject-stage/assessment-details-summary/assessment-details-summary.component';\r\nimport {  AcceptOfferAcceptRejectSummaryComponent } from './offer-accept-reject-stage/offer-accept-reject-summary/offer-accept-reject-summary.component';\r\nimport { AccountApprovalStageComponent } from './account-approval-stage/account-approval-stage.component';\r\nimport { AssessmentDetailsComponent } from './account-approval-stage/assessment-details/assessment-details.component';\r\nimport { OfferAcceptRejectDetailsComponent } from './account-approval-stage/offer-accept-reject-details/offer-accept-reject-details.component';\r\nimport { LoanSummaryDetailsComponent } from './account-approval-stage/loan-summary-details/loan-summary-details.component';\r\nimport { AccountApprovalDetailsSummaryComponent } from './account-approval-stage/account-approval-details-summary/account-approval-details-summary.component';\r\nimport { AssessmentSummaryComponent } from './account-approval-stage/assessment-summary/assessment-summary.component';\r\nimport { OfferAcceptRejectSumaryComponent } from './account-approval-stage/offer-accept-reject-summary/offer-accept-reject-summary.component';\r\nimport { LoanViewSummaryComponent } from './account-approval-stage/loan-view-summary/loan-view-summary.component';\r\n\r\nimport { CreditRatingDetailsComponent } from './offer-issue-stage/credit-rating-details/credit-rating-details.component';\r\nimport { LegalOpinionComponent } from './offer-issue-stage/legal-opinion/legal-opinion.component';\r\nimport { OfferAssessmentComponent } from './offer-issue-stage/offer-assessment/offer-assessment.component';\r\nimport { OfferissueComponent } from './offer-issue-stage/offerissue/offerissue.component';\r\nimport { AssetValuationSummaryComponent } from './offer-issue-stage/asset-valuation/asset-valuation-summary/asset-valuation-summary.component';\r\nimport { LegalOpinionSummaryComponent } from './offer-issue-stage/legal-opinion/legal-opinion-summary/legal-opinion-summary.component';\r\nimport { OfferAssessmentSummaryComponent } from './offer-issue-stage/offer-assessment/offer-assessment-summary/offer-assessment-summary.component';\r\nimport { OfferIssueSummaryComponent } from './offer-issue-stage/offerissue/offer-issue-summary/offer-issue-summary.component';\r\nimport { CreditRatingSummaryComponent } from './offer-issue-stage/credit-rating-details/credit-rating-summary/credit-rating-summary.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nimport { AssetValuationComponent } from './offer-issue-stage/asset-valuation/asset-valuation.component';\r\nimport { ValuationOfAssetsComponent } from './underwriting-stage/valuation-of-assets/valuation-of-assets.component';\r\nimport {  UnderWritingCreditRatingSummaryComponent } from './underwriting-stage/credit-rating-details/credit-rating-summary/credit-rating-summary.component';\r\nimport { ValuationAssetsSummaryComponent } from './underwriting-stage/valuation-of-assets/valuation-assets-summary/valuation-assets-summary.component';\r\nimport { UnderwritingStageSummaryComponent } from './underwriting-stage/underwriting-stage-summary/underwriting-stage-summary.component';\r\nimport { LoanDetailsComponent } from './loan-entry-stage/loan-details/loan-details.component';\r\nimport { AssetDetailsComponent } from './loan-entry-stage/asset-details/asset-details.component';\r\nimport { VehicleDetailsComponent } from './loan-entry-stage/vehicle-details/vehicle-details.component';\r\nimport { PostOfferAmendStageComponent } from './post-offer-amend-stage/post-offer-amend-stage.component';\r\nimport { PostOfferIssueComponent } from './post-offer-amend-stage/offer-issue/offer-issue.component';\r\nimport { PostOfferAmendmentComponent } from './post-offer-amend-stage/post-offer-amendment/post-offer-amendment.component';\r\nimport { LoanDisbursementComponent } from './post-offer-amend-stage/loan-disbursement/loan-disbursement.component';\r\nimport { LoanRepaymentComponent } from './post-offer-amend-stage/loan-repayment/loan-repayment.component';\r\nimport { DigitalSigningComponent } from './digital-signing/digital-signing.component';import { LoanQualitativeScoreboardComponent } from './loan-assesment-stage/loan-qualitative-scoreboard/loan-qualitative-scoreboard.component';\r\nimport { LoanAssessmentDetailsComponent } from './loan-assesment-stage/loan-assessment-details/loan-assessment-details.component';\r\nimport { LoanQualitativeScoreboardDetailsComponent } from './loan-assesment-stage/loan-qualitative-scoreboard-details/loan-qualitative-scoreboard-details.component';\r\nimport { LoanAssessmentDetailsSummaryComponent } from './loan-assesment-stage/loan-assessment-details-summary/loan-assessment-details-summary.component';\r\nimport { SupervisorAssessmentDetailsComponent } from './supervisor-approval-stage/supervisor-assessment-details/supervisor-assessment-details.component';\r\nimport { SupervisorApprovedDetailsComponent } from './supervisor-approval-stage/supervisor-approved-details/supervisor-approved-details.component';\r\nimport { LoanIntrestDetailsComponent } from './loan-enrichment/loan-intrest-details/loan-intrest-details.component';\r\nimport { LoanChargeDetailsComponent } from './loan-enrichment/loan-charge-details/loan-charge-details.component';\r\nimport { LoanDisbursementDetailsComponent } from './loan-enrichment/loan-disbursement-details/loan-disbursement-details.component';\r\nimport { LoanRepaymentComponentComponent } from './loan-enrichment/loan-repayment-component/loan-repayment-component.component';\r\nimport { AccountServicesComponent } from './loan-enrichment/account-services/account-services.component';\r\nimport { LoanInterestSummaryComponent } from './loan-enrichment/loan-intrest-details/loan-interest-summary/loan-interest-summary.component';\r\nimport { LoanDisbursementSummaryComponent } from './loan-enrichment/loan-disbursement-details/loan-disbursement-summary/loan-disbursement-summary.component';\r\nimport { LoanRepaymentSummaryComponent } from './loan-enrichment/loan-repayment-component/loan-repayment-summary/loan-repayment-summary.component';\r\nimport { LoanChargeDetailsSummaryComponent } from './loan-enrichment/loan-charge-details/loan-charge-details-summary/loan-charge-details-summary.component';\r\nimport { AccountServiceSummaryComponent } from './loan-enrichment/account-services/account-service-summary/account-service-summary.component';\r\nimport { LoanDetailsSummaryComponent } from './loan-entry-stage/loan-details/loan-details-summary/loan-details-summary.component';\r\nimport { AssetDetailsSummaryComponent } from './loan-entry-stage/asset-details/asset-details-summary/asset-details-summary.component';\r\nimport { VehicleDetailsSummaryComponent } from './loan-entry-stage/vehicle-details/vehicle-details-summary/vehicle-details-summary.component';\r\nimport { AdmissionDetailsComponent } from './loan-entry-stage/admission-details/admission-details.component';\r\nimport { CustomerInformationComponent } from './loan-entry-stage/customer-information/customer-information.component';\r\nimport { MandateDetailsComponent } from './loan-entry-stage/mandate-details/mandate-details.component';\r\nimport { FinancialDetailsComponent } from './loan-entry-stage/financial-details/financial-details.component';\r\nimport { AccountCreationStageComponent } from './account-creation-stage/account-creation-stage.component';\r\nimport { OfferAcceptRejectComponent } from './account-creation-stage/offer-accept-reject/offer-accept-reject.component';\r\nimport { AccountCreateDetailsComponent } from './account-creation-stage/account-create-details/account-create-details.component';\r\nimport { OfferAcceptRejectSummaryComponent } from './account-creation-stage/offer-accept-reject/offer-accept-reject-summary/offer-accept-reject-summary.component';\r\nimport { AccountCreateSummaryComponent } from './account-creation-stage/account-create-details/account-create-summary/account-create-summary.component';\r\nimport { AccountCreationSummaryComponent } from './account-creation-stage/account-creation-summary/account-creation-summary.component';\r\nimport { GuarantorDetailsComponent } from './loan-entry-stage/guarantor-details/guarantor-details.component';\r\n\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\n\r\nimport { CollateralDetailsComponent } from './loan-entry-stage/collateral-details/collateral-details.component';\r\nimport { UnderWrittingCreditRatingDetailsComponent } from './underwriting-stage/credit-rating-details/credit-rating-details.component';\r\nimport { UnderWrittingLegalOpinionComponent } from './underwriting-stage/legal-opinion/legal-opinion.component';\r\nimport { UnderWritingLegalOpinionSummaryComponent } from './underwriting-stage/legal-opinion/legal-opinion-summary/legal-opinion-summary.component';\r\n// import { ListComponent } from './digital-signing/list/list.component';\r\nimport { EsignPopComponent } from './digital-signing/esign-pop/esign-pop.component';\r\n// import { ListComponent } from '../home/digital-signing/list/list.component';\r\nimport { OfferIssueComponent } from './offer-accept-reject-stage/offer-issue/offer-issue.component';\r\nimport { PostOfferAmendmentSummaryComponent } from './post-offer-amend-stage/post-offer-amendment-summary/post-offer-amendment-summary.component';\r\nimport { PostOfferAmendmentStageSummaryComponent } from './post-offer-amend-stage/post-offer-amendment-stage-summary/post-offer-amendment-stage-summary.component';\r\nimport { AdmissionDetailsViewComponent } from './loan-entry-stage/admission-details/admission-details-view/admission-details-view.component';\r\nimport { FinancialDetailsViewComponent } from './loan-entry-stage/financial-details/financial-details-view/financial-details-view.component';\r\nimport { MandateDetailsViewComponent } from './loan-entry-stage/mandate-details/mandate-details-view/mandate-details-view.component';\r\nimport { GuarantorDetailsViewComponent } from './loan-entry-stage/guarantor-details/guarantor-details-view/guarantor-details-view.component';\r\nimport { DigitalSignInNowOrLaterComponent } from './digital-signing/digital-sign-in-now-or-later/digital-sign-in-now-or-later.component';\r\nimport { CustomerInfoViewComponent } from './loan-entry-stage/customer-information/customer-info-view/customer-info-view.component';\r\nimport { LoanAppEntryStageViewSummaryComponent } from './loan-entry-stage/loan-app-entry-stage-view-summary/loan-app-entry-stage-view-summary.component';\r\nimport { LoanEnrichmentViewSummaryComponent } from './loan-enrichment/loan-enrichment-view-summary/loan-enrichment-view-summary.component';\r\nimport { UploadSignOrEsignComponent } from './digital-signing/upload-sign-or-esign/upload-sign-or-esign.component';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RepaymentScheduleComponent } from './loan-enrichment/loan-repayment-component/repayment-schedule/repayment-schedule.component';\r\nimport { CollateralDetailsSummmaryComponent } from './loan-entry-stage/collateral-details/collateral-details-summmary/collateral-details-summmary.component';\r\nimport { LoanAssessmentViewSummaryComponent } from './loan-assesment-stage/loan-assessment-view-summary/loan-assessment-view-summary.component';\r\nimport { CustomerAlertDialogComponent } from './loan-entry-stage/customer-information/customer-alert-dialog/customer-alert-dialog.component';\r\nimport { SuccessAlertLoanComponent } from './digital-signing/success-alert-loan/success-alert-loan.component';\r\nimport { SignLaterLoanComponent } from './digital-signing/sign-later-loan/sign-later-loan.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoanAccountComponent, \r\n    LoanEntryStageComponent, \r\n    LoanEnrichmentComponent, \r\n    UnderwritingStageComponent, \r\n    LoanAssesmentStageComponent,\r\n    SupervisorApprovalStageComponent, \r\n    OfferIssueStageComponent, LoanDetailsComponent, AssetDetailsComponent, VehicleDetailsComponent, PostOfferAmendStageComponent, \r\n    OfferIssueComponent, PostOfferAmendmentComponent, LoanDisbursementComponent, LoanRepaymentComponent,\r\n   DigitalSigningComponent,\r\n     LoanQualitativeScoreboardComponent, LoanAssessmentDetailsComponent, LoanQualitativeScoreboardDetailsComponent, LoanAssessmentDetailsSummaryComponent,\r\n     OfferAcceptRejectStageComponent, OfferAssessmentDetailsComponent, PostOfferIssueComponent, OfferAcceptRejectComponent, AcceptOfferIssueSummaryComponent, AssessmentDetailsSummaryComponent,  AcceptOfferAcceptRejectSummaryComponent,\r\n    \r\n    AccountApprovalStageComponent, \r\n    AssessmentDetailsComponent, \r\n    OfferAcceptRejectDetailsComponent, \r\n    LoanSummaryDetailsComponent, \r\n    AccountApprovalDetailsSummaryComponent,\r\n    AssessmentSummaryComponent, \r\n    OfferAcceptRejectSumaryComponent, \r\n    AcceptOfferAcceptRejectComponent,\r\n    LoanViewSummaryComponent,\r\n    \r\n    CreditRatingDetailsComponent, \r\n    AssetValuationComponent, \r\n    LegalOpinionComponent, \r\n    OfferAssessmentComponent, \r\n    OfferissueComponent, \r\n    AssetValuationSummaryComponent, \r\n    LegalOpinionSummaryComponent,\r\n     OfferAssessmentSummaryComponent, \r\n     OfferIssueSummaryComponent, \r\n     CreditRatingSummaryComponent,\r\n    AdmissionDetailsComponent, \r\n    CustomerInformationComponent, \r\n    MandateDetailsComponent, \r\n    FinancialDetailsComponent,  \r\n    VehicleDetailsComponent, \r\n    SupervisorAssessmentDetailsComponent, \r\n    SupervisorApprovedDetailsComponent,\r\n    LoanIntrestDetailsComponent,\r\n    LoanChargeDetailsComponent, \r\n    LoanDisbursementDetailsComponent, \r\n    LoanRepaymentComponentComponent, \r\n    AccountServicesComponent, \r\n    LoanInterestSummaryComponent, \r\n    LoanDisbursementSummaryComponent, \r\n    LoanRepaymentSummaryComponent, \r\n    LoanChargeDetailsSummaryComponent, \r\n    AccountServiceSummaryComponent,\r\n    AssetValuationComponent,\r\n    LoanDetailsSummaryComponent, \r\n    AssetDetailsSummaryComponent, \r\n    VehicleDetailsSummaryComponent,\r\n    GuarantorDetailsComponent,\r\n    AssetValuationComponent,\r\n    AdmissionDetailsComponent, \r\n    CustomerInformationComponent, \r\n    MandateDetailsComponent, \r\n    FinancialDetailsComponent,  \r\n    CreditRatingDetailsComponent, \r\n    ValuationOfAssetsComponent, \r\n    LegalOpinionComponent,\r\n     ValuationAssetsSummaryComponent, \r\n     LegalOpinionSummaryComponent,     \r\n    OfferIssueStageComponent,\r\n     LoanDetailsComponent, \r\n     AssetDetailsComponent,\r\n    CreditRatingSummaryComponent, \r\n    ValuationAssetsSummaryComponent, \r\n     CollateralDetailsComponent,\r\n     LegalOpinionSummaryComponent,\r\n      UnderwritingStageSummaryComponent,\r\n    AccountCreationStageComponent, \r\n    OfferAcceptRejectComponent,\r\n     AccountCreateDetailsComponent, \r\n    OfferAcceptRejectSummaryComponent, \r\n    AccountCreateSummaryComponent, \r\n    AccountCreationSummaryComponent,\r\n    UnderWrittingCreditRatingDetailsComponent,\r\n    UnderWrittingLegalOpinionComponent,\r\n    UnderWritingCreditRatingSummaryComponent,\r\n    UnderWritingLegalOpinionSummaryComponent,\r\n    DigitalSigningComponent,\r\n    EsignPopComponent,\r\n    PostOfferAmendmentSummaryComponent,\r\n    PostOfferAmendmentStageSummaryComponent,\r\n    AdmissionDetailsViewComponent,\r\n    FinancialDetailsViewComponent,\r\n    MandateDetailsViewComponent,\r\n    GuarantorDetailsViewComponent,\r\n    DigitalSignInNowOrLaterComponent,\r\n    CustomerInfoViewComponent,\r\n    LoanAppEntryStageViewSummaryComponent,\r\n    LoanEnrichmentViewSummaryComponent,\r\n    UploadSignOrEsignComponent,\r\n    RepaymentScheduleComponent,\r\n    CollateralDetailsSummmaryComponent,\r\n    LoanAssessmentViewSummaryComponent,\r\n    CustomerAlertDialogComponent,\r\n    SuccessAlertLoanComponent,\r\n    SignLaterLoanComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedMaterialModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedPipesModule,\r\n    SharedDirectivesModule,\r\n    SharedMaterialModule,\r\n    SignaturePadModule,\r\n    MatAutocompleteModule,\r\n    RouterModule.forChild(LoanAccountRoutes)\r\n  ],\r\n  providers: [\r\n    DatePipe,\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n    { provide: MatDialogRef, useValue: {} },\r\n    { provide: MAT_DIALOG_DATA, useValue: [] }\r\n  ]\r\n})\r\nexport class LoanAccountModule { }\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-post-offer-amendment-stage-summary',\r\n  templateUrl: './post-offer-amendment-stage-summary.component.html',\r\n  styleUrls: ['./post-offer-amendment-stage-summary.component.scss']\r\n})\r\nexport class PostOfferAmendmentStageSummaryComponent implements OnInit {\r\n  offerDetailsList: any;\r\n  offerDetails : any;\r\n  loanAccountId: any;\r\n  loanInfo: any;\r\n\r\n  constructor(private router: Router,private apiService: ApiService, private ls: LocalStoreService ,private cdr:ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cdr.markForCheck()\r\n    this.loanAccountId=this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanAccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    setTimeout(() => {\r\n      this.getViewSummary();\r\n    }, 10);\r\n   \r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`loan/account/post-offer-amend-stage/list`]);\r\n  }\r\n\r\n  done(){\r\n    this.router.navigate([`/loan/account/account-creation-stage/`]);\r\n  }\r\n\r\n  getViewSummary(){\r\n    this.apiService.getOfferAmendDetails(this.loanAccountId).subscribe(result=>\r\n      {\r\n        console.log(\"result\",result);\r\n        // this.offerDetailsList=result[3];\r\n        this.offerDetails=result[3];\r\n        console.log(\"result\",result);\r\n        // console.log(\"offerDetails::\",this.offerDetailsList);\r\n        console.log(\"offerDetails::\",this.offerDetails);\r\n      })\r\n  }\r\n}","<div>\r\n    <div fxLayout=\"row\">\r\n        <div fxFlex=\"100\">\r\n            <div class=\"propic text-center\">\r\n                <img src=\"assets/images/svg/undraw_secure_files_re_6vdh.svg\" alt=\"\" class=\"w-90\" />\r\n            </div>\r\n            <div class=\"profile-title text-center mt-8\">\r\n                <div class=\"main-title\"><b>Post Offer Amendment Stage</b></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"full-width\">\r\n    <div fxLayout=\"row\">\r\n            <h4 class=\"paraFont\">Post Offer Amendment Stage Summary</h4>\r\n    </div>\r\n\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <div fxFlex=\"100%\">\r\n                    <!-- <mat-card class=\"chequecard\" > -->\r\n                        <!-- <mat-card-content> -->\r\n                            <div class=\"full-width\" >\r\n                                <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                    <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                        <ng-container>\r\n                                            <div fxFlex fxFlex.xs=\"100%\" class=\"inputCardclass\">\r\n                                                <mat-card class=\"inputCard\" >\r\n                                                    <div fxLayout=\"column\" fxLayoutGap=\"6%\" fxLayoutAlign=\"space-between none\">\r\n                                                        <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                                            <ng-container>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                                    <mat-hint class=\"headingText\">Applicant Name</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.applicantName}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\">\r\n                                                                    <mat-hint class=\"headingText\">Offer Issue Date</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.offerIssueDate}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                                    <mat-hint class=\"headingText\">Offer Exipiry Date</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.offerExpiryDate}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                                    <mat-hint class=\"headingText\">Offer Amend Date</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.offerAmendDate}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                                    <mat-hint class=\"headingText\">Approved Loan Amount</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.approvedLoanAmount}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                                    <mat-hint class=\"headingText\">Loan Amount Recommended</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.loanAmmountRecommended}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                                    <mat-hint class=\"headingText\">Loan Tenure</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.loanTenure}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                                    <mat-hint class=\"headingText\">Installment Type</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.installmentType}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                                    <mat-hint class=\"headingText\">Rate Of Interest(%)</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.rateOfInterest}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                                    <mat-hint class=\"headingText\">Margin(%))</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.margin}}</mat-hint>\r\n                                                                </div>\r\n                                                                <div fxFlex=\"30%\" fxFlex.xs=\"100%\" >\r\n                                                                    <mat-hint class=\"headingText\">Effective Rate(%)</mat-hint>\r\n                                                                    <br>\r\n                                                                    <mat-hint class=\"valueText\">{{offerDetails?.effectiveRate}}</mat-hint>\r\n                                                                </div>\r\n                                                                \r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </mat-card>\r\n                                            </div>\r\n                                         \r\n                                        </ng-container>\r\n                                    </div>     \r\n                                </div>\r\n                            </div>\r\n                        <!-- </mat-card-content> -->\r\n                    <!-- </mat-card> -->\r\n                </div>  \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row\">\r\n        <div fxFlex=\"100\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16x\" class=\"mt-32\">\r\n                <button mat-button rounded color=\"grey\" (click)=\"goBack()\">\r\n                    Back\r\n                </button>\r\n                <button mat-raised-button color=\"primary\" type=\"submit\" (click)=done()>\r\n                    Done\r\n                </button>\r\n            </div>\r\n        </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-collateral-details',\r\n  templateUrl: './collateral-details.component.html',\r\n  styleUrls: ['./collateral-details.component.scss']\r\n})\r\nexport class CollateralDetailsComponent implements OnInit {\r\n  panelOpenState = false;\r\n  collateralDetailsForm: FormGroup;\r\n  collateralInfo: FormGroup;\r\n  collateralInfo_array: FormArray;\r\n  loanaccountID : any;\r\n  showEditOption: boolean = false;\r\n  //collateralDetails: any = [];\r\n  collateralDetails:any;\r\n  collateralId:any=0;\r\n  noOfCollateral:any;\r\n  accountId : any;\r\n  entityName: string;\r\n  arrayCountry:any[]=[];\r\n  arrayState:any[]=[];\r\n  arrayCity:any[]=[];\r\n  arrayCollateralType: string[];\r\n  arrayRateValue: string[];\r\n  loanInfo: any;\r\n  flag: boolean=false;\r\n  flag1: boolean=false;\r\n \r\n\r\n  constructor\r\n  (\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private accountService: AccountService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildformGroup();\r\n    this.collateralInfo = this.fb.group({\r\n      collateralInfo_array: this.fb.array([])\r\n    });\r\n    this.collateralId = 0;\r\n    // this.addMandate('');\r\n   this.getCountryName(\"country\");\r\n   this.getCollateralType(\"collateral_type\");\r\n   this.getRateValue(\"currency\");\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    let collateralDetailscreen: boolean = JSON.parse(this.ls.getItem('COLLATERAL_DETAIL_DONE'));\r\n   setTimeout(() => {\r\n    if (this.loanaccountID && collateralDetailscreen) {\r\n      this.showEditOption = true;\r\n      this.getCollateralDetails();\r\n    }\r\n    else {\r\n      this.showEditOption = false;\r\n      this.buildformGroup();\r\n    //  this.createCollateralDetail();\r\n      this.addMandate('');\r\n    }\r\n   }, 10);\r\n \r\n  }\r\n\r\n  buildformGroup(data?) {\r\n    console.log(\"data\",data)\r\n    if(data){ \r\n      this.getStateName(data.country);\r\n      this.getCityName(data.state);\r\n    }\r\n      \r\n    this.collateralDetailsForm = this.fb.group({\r\n      collateralType: [data ? data.collateralType : '', Validators.required],\r\n      collateralCurrency: [data ? data.collateralCurrency : '', Validators.required],\r\n      collateralValue: [data ? data.collateralValue : '', Validators.required],\r\n      attributes: [data ? data.attributes : '', Validators.required],\r\n     // sqFt: [data ? data.sqFt : '', Validators.required],\r\n      dimensions: [data ? data.dimensions : '', Validators.required],\r\n      thirdPartyCollateral: [data ? data.thirdPartyCollateral : false, Validators.required],\r\n      building: [data ? data.building : '',[Validators.required,Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      street: [data ? data.street : '', [Validators.required ,Validators.pattern(\".*[a-zA-Z].*\")]],\r\n      locality: [data ? data.locality : '', Validators.required],\r\n      city: [data ? data.city : '', Validators.required],\r\n      state: [data ? data.state : '', Validators.required],\r\n      country: [data ? data.country : '', Validators.required],\r\n      zipCode: [data ? data.zipCode:'',[Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{5,10}$\")]],\r\n    })\r\n  }\r\n\r\n  createCollateralDetail(item): FormGroup {\r\n    return this.fb.group({\r\n      noOfCollateral: item ? item.noOfCollateral : ['',Validators.required],\r\n      totalCollateralValue: item ? item.totalCollateralValue : ['',Validators.required],\r\n      utilizedPreviously: item ? item.utilizedPreviously : ['',Validators.required],\r\n      secondaryChargeAllowed: [item ? item.secondaryChargeAllowed : false],\r\n      coverAvailable: item ? item.coverAvailable : ['',Validators.required],\r\n      collateralDetailsId:'',\r\n      collateralId:'',\r\n    })\r\n  }\r\n\r\n  addMandate(item){\r\n    console.log(\"i\", item);\r\n    this.collateralInfo_array = this.collateralInfo.get('collateralInfo_array') as FormArray;\r\n    this.collateralInfo_array.push(this.createCollateralDetail(item));\r\n  }\r\n \r\n  \r\n  getCollateralDetails() {\r\n    this.loader.open();\r\n    this.apiService.getCollateralByLoanAccId(this.loanaccountID).subscribe((collateralDetails) => {\r\n      this.loader.close();\r\n      this.collateralDetails = collateralDetails;\r\n      console.log(this.collateralDetails.collateralDetails.length);\r\n      console.log(this.collateralDetails);\r\n      this.buildformGroup(this.collateralDetails);\r\n      this.populateCollateral(this.collateralDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n  }\r\n  populateCollateral(item){\r\n    let j:any;\r\n    for(let i = 0; i<=item.collateralDetails.length;i++){\r\n    let collateralData = {\r\n      noOfCollateral: item.collateralDetails[i].noOfCollateral,\r\n      totalCollateralValue:  item.collateralDetails[i].totalCollateralValue,\r\n      utilizedPreviously:   item.collateralDetails[i].utilizedPreviously,\r\n      secondaryChargeAllowed: item ? item.collateralDetails[i].secondaryChargeAllowed : false,\r\n      coverAvailable:  item.collateralDetails[i].coverAvailable,\r\n      collateralDetailsId:'',\r\n      collateralId:'',\r\n    }\r\n    this.addMandate(collateralData);\r\n    // console.log(this.collateralInfo.get('collateralInfo_array'))\r\n    // this.collateralInfo.get('collateralInfo_array')['controls'][i].patchValue(collateralData);\r\n    // console.log(this.collateralInfo.get('collateralInfo_array'))\r\n  }\r\n  }\r\n  getCollateralType(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayCollateralType = data;\r\n    });\r\n  }\r\n\r\n  getRateValue(key: string) {\r\n    this.apiService.getDropDownValues(key).subscribe((data) => {\r\n      this.arrayRateValue = data;\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([`/loan/account/financial-details`]);\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  submitForm() {        \r\n    let payload: any = {};\r\n    payload = this.collateralDetailsForm.value;\r\n    payload.accountId = this.accountId;\r\n    payload.loanAccountId = this.loanaccountID;\r\n    payload.collateralDetails = this.collateralInfo_array.value;\r\n    payload.loggedInUser = this.ls.getItem('loggedInUser');\r\n    if(this.ls.getItem('COLLATERAL_DETAIL_DONE')){\r\n      payload.mandateId = this.collateralId;\r\n    }\r\n    this.apiService.upsertCollateralDetails(payload).subscribe(data => {\r\n      console.log(\"data\", data);\r\n      if (data != null) {\r\n        this.snack.open('Collateral Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.next();\r\n      }\r\n    })\r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem('COLLATERAL_DETAIL_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/loan/account/guarantor_details`]);\r\n  }\r\n\r\n  \r\n  getCountryName(key: string) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n     for(let i=0; i<data.length;i++){\r\n       if(data[i].authStatus==='A'){     \r\n         this.arrayCountry.push(data[i].countryName);\r\n         this.arrayCountry.sort();\r\n       }\r\n     }\r\n   });\r\n }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/^[a-zA-Z0-9_ ]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getStateName(country) {\r\n    this.apiService.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName == country){\r\n          this.apiService.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n          this.arrayState = resp\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.apiService.getDropDownValues1(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n    });\r\n  }\r\n  \r\n\r\n  calculateUtilizedPrev(value){\r\n    if(value.totalCollateralValue === '')\r\n    return\r\n    else{\r\n      if(Number(value.totalCollateralValue) < Number(value.coverAvailable)){\r\n        return\r\n      }\r\n      else{\r\n          let utilPrev = Number(value.totalCollateralValue) - Number(value.coverAvailable)\r\nthis.collateralInfo.get('collateralInfo_array')['controls'][0].get('utilizedPreviously').setValue(utilPrev)\r\n\r\n      }\r\n    \r\n    }\r\n\r\n  }\r\n  calculateCoverAvail(value){\r\n    if(value.totalCollateralValue === '')\r\n    return\r\n    else{\r\n      if(Number(value.totalCollateralValue) < Number(value.utilizedPreviously) && Number(value.totalCollateralValue) < Number(value.coverAvailable )){\r\n        this.flag = true;\r\n        return;\r\n      }\r\n     \r\n      \r\n      else  if(Number(value.totalCollateralValue) < Number(value.utilizedPreviously)){\r\n        return;\r\n      }\r\n      else{\r\n        this.flag = false\r\n        let coverAvail = Number(value.totalCollateralValue) - Number(value.utilizedPreviously)\r\n   this.collateralInfo.get('collateralInfo_array')['controls'][0].get('coverAvailable').setValue(coverAvail)\r\n      }\r\n       \r\n    }\r\n  \r\n\r\n  }\r\n  calculateTotalColVal(value){\r\n\r\nif(value.utilizedPreviously === '' || value.coverAvailable === '')\r\nreturn;\r\nelse {\r\n   let totalColVal = Number(value.utilizedPreviously) + Number(value.coverAvailable)\r\n   this.collateralInfo.get('collateralInfo_array')['controls'][0].get('totalCollateralValue').setValue(totalColVal)\r\n}\r\n\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/collatorial_screen.svg\" alt=\"\" class=\"w-90\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title1\"><h1>Collateral Details</h1></div>\r\n        </div>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n        <mat-card class=\"p-0\">\r\n            <!-- <mat-card-title class=\"\">\r\n                <div class=\"card-title-text\">Collateral Details</div>\r\n                <mat-divider></mat-divider>\r\n            </mat-card-title> -->            \r\n              <mat-card-title>\r\n                <fieldset>\r\n                <legend visible=\"true\">Collateral Details</legend>\r\n                </fieldset>\r\n              </mat-card-title>\r\n            <mat-card-content>\r\n                <form *ngIf=\"collateralDetailsForm\" [formGroup]=\"collateralDetailsForm\">\r\n                    <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\">\r\n                        <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Collateral Type</mat-label>\r\n                              <!-- <mat-card class=\"widthCard inputMatName alignChange\"> -->\r\n                                <mat-select name=\"collateralType\" formControlName=\"collateralType\" required disableOptionCentering>\r\n                                  <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                  <mat-option *ngFor=\"let collateralType of arrayCollateralType\" [value]=\"collateralType\">\r\n                                     {{ collateralType }}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                              <!-- </mat-card> -->\r\n                              <mat-error *ngIf=\"!collateralDetailsForm.get('collateralType').valid && collateralDetailsForm.get('collateralType').touched\" >\r\n                                &nbsp;&nbsp; Collateral Type is Required!\r\n                              </mat-error>\r\n                                </mat-form-field>\r\n                            </div>                            \r\n                        </div>\r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                        </div>\r\n                        <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Currency </mat-label>\r\n                              <!-- <mat-card class=\"widthCard inputMatName alignChange\"> -->\r\n                                <mat-select name=\"collateralCurrency\" formControlName=\"collateralCurrency\" required disableOptionCentering>\r\n                                  <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                  <mat-option *ngFor=\"let collateralCurrency of arrayRateValue\" [value]=\"collateralCurrency\">\r\n                                     {{collateralCurrency }}\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                              <!-- </mat-card> -->\r\n                              <mat-error *ngIf=\"!collateralDetailsForm.get('collateralCurrency').valid && collateralDetailsForm.get('collateralCurrency').touched\" >\r\n                                &nbsp;&nbsp; Currency is Required!\r\n                              </mat-error>\r\n                                </mat-form-field>\r\n                            </div>                            \r\n                        </div>\r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Collateral Value</mat-label>\r\n                                <!-- <mat-card class=\"inputMatName dataChange\">               -->\r\n                                   <input matInput  name=\"collateralValue\" formControlName=\"collateralValue\" (keypress)=\"_keyPress($event)\" maxlength=\"12\"  required />                             \r\n                                <!-- </mat-card> -->\r\n                                <mat-error *ngIf=\"!collateralDetailsForm.get('collateralValue').valid && collateralDetailsForm.get('collateralValue').touched\" >\r\n                                    &nbsp;&nbsp; Collateral Value is Required!\r\n                                </mat-error>\r\n                                </mat-form-field>\r\n                            </div>                            \r\n                        </div>\r\n                        <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div class=\"flex-grow-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                              <mat-label >Attributes</mat-label>\r\n                              <!-- <mat-card class=\"widthCard inputMatName alignChange\"> -->\r\n                                <mat-select name=\"attributes\" formControlName=\"attributes\" required disableOptionCentering>\r\n                                  <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                  <mat-option value=\"1\">Attributes 1</mat-option>\r\n                                  <mat-option value=\"2\">Attributes 2</mat-option>\r\n                                </mat-select>\r\n                              <!-- </mat-card> -->\r\n                              <mat-error *ngIf=\"!collateralDetailsForm.get('attributes').valid && collateralDetailsForm.get('attributes').touched\" >\r\n                                &nbsp;&nbsp; Attributes is Required!\r\n                              </mat-error>\r\n                                </mat-form-field>\r\n                            </div>                            \r\n                        </div>\r\n                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                            <div class=\"p-16\">\r\n                                <div class=\"pb-16\">\r\n                                    <div class=\"pb-4\">\r\n                                        <div class=\"pb-1\" style=\"margin-top: 38px;\">\r\n                                           Third Party Collateral  &nbsp;&nbsp; &nbsp;&nbsp;<mat-slide-toggle name=\"thirdPartyCollateral\" formControlName=\"thirdPartyCollateral\" ></mat-slide-toggle>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                            <div fxLayout=\"row wrap\" class=\"full-width\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Dimensions</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                       <input matInput name=\"dimensions\" formControlName=\"dimensions\" (keypress)=\"_keyPress($event)\" required />                             \r\n                                    <!-- </mat-card> -->\r\n                                    <mat-error *ngIf=\"!collateralDetailsForm.get('dimensions').valid && collateralDetailsForm.get('dimensions').touched\" >\r\n                                       &nbsp;&nbsp; Dimensions is Required!\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                    \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        \r\n                        <mat-card-title>\r\n                            <fieldset class=\"alignChange\">\r\n                            <legend visible=\"true\">Address</legend>\r\n                            </fieldset>\r\n                          </mat-card-title>\r\n                        <div fxLayout=\"row wrap\" class=\"full-width\" fxLayoutAlign=\"space-between center\">\r\n                            <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Building</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                       <input matInput name=\"building\" formControlName=\"building\" (keypress)=\"keyPressAlphanumeric($event)\" required />                             \r\n                                    <!-- </mat-card> --> \r\n                                    <mat-error *ngIf=\"(collateralDetailsForm.get('building') && collateralDetailsForm.get('building').touched && !collateralDetailsForm.get('building').valid) || (collateralDetailsForm.get('building').touched && collateralDetailsForm.get('building').hasError('pattern'))\" >\r\n                                        &nbsp;&nbsp; Building is Required!\r\n                                    </mat-error>                                   \r\n                                    </mat-form-field>                                    \r\n                                    \r\n                                </div>                                \r\n                            </div>\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">                                \r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Street</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName dataChange\">               -->\r\n                                       <input matInput name=\"street\" formControlName=\"street\" (keypress)=\"keyPressAlphanumeric($event)\" required />                            \r\n                                    <!-- </mat-card> -->\r\n                                    <mat-error *ngIf=\"(collateralDetailsForm.get('street') && collateralDetailsForm.get('street').touched && !collateralDetailsForm.get('street').valid) || (collateralDetailsForm.get('street').touched && collateralDetailsForm.get('street').hasError('pattern'))\"  >\r\n                                        &nbsp;&nbsp; Street is Required!\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                     \r\n                            </div>\r\n                            <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label >Locality</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                       <input matInput name=\"locality\" formControlName=\"locality\" (keypress)=\"letterOnly($event)\" required />                            \r\n                                    <!-- </mat-card> -->\r\n                                    <mat-error *ngIf=\"!collateralDetailsForm.get('locality').valid && collateralDetailsForm.get('locality').touched\" >\r\n                                        &nbsp;&nbsp; Locality is Required!\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                \r\n                            </div>\r\n                          \r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label >Country</mat-label>\r\n                                   <!-- <mat-card class=\"widthCard inputMatName dataChange\"> -->\r\n                                      <mat-select name=\"country\" formControlName=\"country\" required\r\n                                        (selectionChange)=\"getStateName($event.value)\"\r\n                                        (selectionChange)=\"getCityName($event.value)\" disableOptionCentering>\r\n                                        <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                        <mat-option *ngFor=\"let country of arrayCountry\" [value]=\"country\">\r\n                                          {{country}}\r\n                                        </mat-option>\r\n                                       </mat-select>\r\n                                   <!-- </mat-card> -->\r\n                                   <mat-error *ngIf=\"!collateralDetailsForm.get('country').valid && collateralDetailsForm.get('country').touched\" >\r\n                                       &nbsp;&nbsp; Country is Required!\r\n                                   </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                \r\n                            </div>\r\n                            <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label >State</mat-label>\r\n                                   <!-- <mat-card class=\"widthCard inputMatName alignChange\"> -->\r\n                                      <mat-select name=\"state\" formControlName=\"state\" required\r\n                                     (selectionChange)=\"getCityName($event.value)\" disableOptionCentering>\r\n                                        <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                        <mat-option *ngFor=\"let state of arrayState\" [value]=\"state.stateName\">\r\n                                       {{state.stateName}}</mat-option>\r\n                                       </mat-select>\r\n                                   <!-- </mat-card> -->\r\n                                   <mat-error *ngIf=\"!collateralDetailsForm.get('state').valid && collateralDetailsForm.get('state').touched\" >\r\n                                        &nbsp;&nbsp; State is Required!\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                 \r\n                            </div>\r\n                            <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label >City</mat-label>\r\n                                   <!-- <mat-card class=\"widthCard inputMatName dataChange\"> -->\r\n                                      <mat-select name=\"city\" formControlName=\"city\" required disableOptionCentering>\r\n                                        <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                                        <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city.value1\">{{city.value1}}\r\n                                        </mat-option>\r\n                                       </mat-select>\r\n                                   <!-- </mat-card> -->\r\n                                   <mat-error *ngIf=\"!collateralDetailsForm.get('city').valid && collateralDetailsForm.get('city').touched\" >\r\n                                        &nbsp;&nbsp; City is Required!\r\n                                    </mat-error> \r\n                                    </mat-form-field>\r\n                                </div>                                \r\n                            </div>\r\n                            <div fxFlex=\"50%\"  fxFlex.xs=\"100%\">\r\n                                <div class=\"flex-grow-1\">\r\n                                    <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label >Zip Code</mat-label>\r\n                                    <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                       <input matInput name=\"zipCode\" formControlName=\"zipCode\" minlength=\"5\" maxlength=\"10\" (keypress)=\"_keyPress($event)\" required />                            \r\n                                    <!-- </mat-card> -->\r\n                                     <mat-error *ngIf=\"!collateralDetailsForm.get('zipCode').valid && collateralDetailsForm.get('zipCode').touched\" >\r\n                                        &nbsp;&nbsp;Valid Zip Code is Required!(5-10 digits)\r\n                                    </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>                                \r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                    <div>\r\n                      <div fxLayout=\"row\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n                        <div>\r\n                            <button mat-button class=\"paddingChange\" (click)=\"addMandate('')\" color=\"primary\" [disabled]=\"collateralInfo?.invalid\">+ ADD COLLATERAL</button>\r\n                        </div>\r\n                    </div> \r\n                        <div fxLayout=\"row\" class=\"full-width\">\r\n                            <form class=\"full-width\" [formGroup]=\"collateralInfo\">\r\n                                <div fxLayout=\"row\" class=\"full-width pt-16\" formArrayName=\"collateralInfo_array\" *ngFor=\"let report of collateralInfo.get('collateralInfo_array')['controls']; let i=index;\">\r\n                                    <div class=\"full-width\" [formGroupName]=\"i\">\r\n                                        <mat-accordion class=\"full-width mat-elevation-z0\">\r\n                                            <mat-expansion-panel class=\"mat-elevation-z0 borderStyle\"\r\n                                                (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n                                                <mat-expansion-panel-header class=\"marginData\">\r\n                                                    <mat-panel-title class=\"textDesign\">\r\n                                                        <!-- Collateral {{i + 1}} -->\r\n                                                        Add Collateral\r\n                                                    </mat-panel-title>\r\n                                                    <!-- <mat-card-title>\r\n                                                        <fieldset class=\"alignChange\">\r\n                                                        <legend visible=\"true\">Add Collateral</legend>\r\n                                                        </fieldset>\r\n                                                      </mat-card-title> -->\r\n                                                </mat-expansion-panel-header>\r\n                                                <mat-divider class=\"design\"></mat-divider>\r\n                                                <div>\r\n                                                    <div fxLayout=\"row wrap\" class=\"pt-16 full-width\"\r\n                                                        fxLayoutAlign=\"space-between center\">\r\n                                                        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n                                                            <div class=\"flex-grow-1\">\r\n                                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                                <mat-label >Number of Collateral*</mat-label>\r\n                                                                <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                                                    <input matInput name=\"noOfCollateral\" formControlName=\"noOfCollateral\"\r\n                                                                    (keypress)=\"_keyPress($event)\" \r\n                                                                        />                           \r\n                                                                <!-- </mat-card> -->\r\n                                                            </mat-form-field>\r\n                                                                <mat-error *ngIf=\"report.get('noOfCollateral').hasError('required') && report.get('noOfCollateral').hasError('touched')\">\r\n                                                                    Number of Collateral is Required!\r\n                                                                  </mat-error>\r\n                                                                \r\n                                                            </div>  \r\n                                                            <!--  -->\r\n                                                        </div>\r\n                                                        <div fxFlex=\"50%\" class=\"p-1\" fxFlex.xs=\"100%\">\r\n                                                            <div class=\"flex-grow-1\">\r\n                                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                                <mat-label >Total Collateral Value*</mat-label>\r\n                                                                <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                                                    <input matInput name=\"totalCollateralValue\" formControlName=\"totalCollateralValue\"  \r\n                                                                (keypress)=\"_keyPress($event)\"   \r\n                                                                (input)=\"calculateCoverAvail(collateralInfo_array.value[0])\"\r\n                                                                (input)=\"calculateUtilizedPrev(collateralInfo_array.value[0])\"                                                     \r\n                                                                    />                        \r\n                                                                <!-- </mat-card> -->\r\n                                                            </mat-form-field>  \r\n                                                                <mat-error *ngIf=\"report.get('totalCollateralValue').hasError('required') && report.get('totalCollateralValue').hasError('touched')\">\r\n                                                                    Total Collateral Value is Required!\r\n                                                                  </mat-error> \r\n                                                                                                                         </div>  \r\n                                                           \r\n                                                            <div>\r\n                                                                <small style=\"color:red;\"   *ngIf='flag'>\r\n                                                                Cover Available or Utilized Previously can't be greater than Total Collateral Value\r\n                                                                </small>\r\n                                                              </div>\r\n                                                        </div>\r\n                                                        <div fxFlex=\"50%\" class=\"p-1\" fxFlex.xs=\"100%\">\r\n                                                            <div class=\"flex-grow-1\">\r\n                                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                                <mat-label >Utilized Previously *</mat-label>\r\n                                                                <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                                                    <input matInput name=\"utilizedPreviously\" formControlName=\"utilizedPreviously\" \r\n                                                                    (keypress)=\"_keyPress($event)\"\r\n                                                                    (input)=\"calculateCoverAvail(collateralInfo_array.value[0])\"\r\n                                                                    (input)=\"calculateTotalColVal(collateralInfo_array.value[0])\"/>                      \r\n                                                                <!-- </mat-card> -->\r\n                                                            </mat-form-field>\r\n                                                                <mat-error *ngIf=\"report.get('utilizedPreviously').hasError('required') && report.get('utilizedPreviously').hasError('touched')\">\r\n                                                                    Utilized Previously is Required!\r\n                                                                  </mat-error> \r\n                                                                \r\n                                                            </div>                                                           \r\n                                                                                                                      \r\n                                                        </div>\r\n                                                        <div fxFlex=\"50%\" class=\"p-1\" fxFlex.xs=\"100%\">\r\n                                                            <div class=\"flex-grow-1\">\r\n                                                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                                                <mat-label >Cover Available*</mat-label>\r\n                                                                <!-- <mat-card class=\"inputMatName alignChange\">               -->\r\n                                                                    <input matInput name=\"coverAvailable\" formControlName=\"coverAvailable\" \r\n                                                                    (keypress)=\"_keyPress($event)\" \r\n                                                                    (input)=\"calculateTotalColVal(collateralInfo_array.value[0])\"\r\n                                                                    (input)=\"calculateUtilizedPrev(collateralInfo_array.value[0])\"\r\n                                                                   \r\n                                                                        />                   \r\n                                                                <!-- </mat-card> -->\r\n                                                            </mat-form-field>\r\n                                                                <mat-error *ngIf=\"report.get('coverAvailable').hasError('required') && report.get('coverAvailable').hasError('touched')\">\r\n                                                                    Cover Available is Required!\r\n                                                                  </mat-error>\r\n                                                                \r\n                                                            </div>                                                      \r\n\r\n                                                        </div>\r\n                                                        <div fxFlex=\"50%\" class=\"p-2\" fxFlex.xs=\"100%\">\r\n                                                            <div>\r\n                                                                <div class=\"pb-16\">\r\n                                                                    <div class=\"pb-4\">\r\n                                                                        <div class=\"pb-1\">\r\n                                                                            Secondary Charge Allowed ?&nbsp;&nbsp;&nbsp;&nbsp;  <mat-slide-toggle name=\"secondaryChargeAllowed\" formControlName=\"secondaryChargeAllowed\" ></mat-slide-toggle>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </mat-expansion-panel>\r\n                                        </mat-accordion>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div fxLayout=\"row\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n                        <div>\r\n                            <button mat-button (click)=\"addMandate('')\" color=\"primary\" [disabled]=\"collateralInfo?.invalid\">+ ADD COLLATERAL</button>\r\n                        </div>\r\n                    </div> -->\r\n                   \r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n            <button type=\"button\" class=\"Backbtn\" (click)=\"goBack()\" mat-button rounded >\r\n                Back\r\n            </button>\r\n            <button type=\"button\" class=\"Nextbtn\" (click)=\"submitForm()\" [disabled]=\"!(collateralDetailsForm.valid && collateralInfo.valid)\" mat-raised-button color=\"primary\">\r\n                Next\r\n            </button>\r\n            \r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from 'app/views/loan-account/account.service';\r\nimport { UrlService } from 'app/views/home/url.service';\r\nimport { EsignPopComponent } from '../esign-pop/esign-pop.component';\r\nimport { UploadSignOrEsignComponent } from '../upload-sign-or-esign/upload-sign-or-esign.component';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-digital-sign-in-now-or-later',\r\n  templateUrl: './digital-sign-in-now-or-later.component.html',\r\n  styleUrls: ['./digital-sign-in-now-or-later.component.scss']\r\n})\r\nexport class DigitalSignInNowOrLaterComponent implements OnInit {\r\n  accountId: any;\r\n  accountdetailsForStatusUpdate: Object;\r\n  previousUrl: string = '';\r\n  show: boolean=false;\r\n  show1: boolean = false;\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  loanInfo: any;\r\n  isDone: boolean = false;\r\n  constructor(private dialog: MatDialog,\r\n    private router: Router,\r\n    private ls: LocalStoreService,\r\n    private accountService: AccountService,\r\n    private apiService: ApplicationEntryStageService,\r\n    private dialogService: DialogService,\r\n    private urlService: UrlService,\r\n    private api: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    this.show1 = this.ls.getItem('eSignStage') && (this.ls.getItem('signedImage') !== null)\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    this.accountId = this.ls.getItem('accountId');\r\n\r\n    this.urlService.previousUrl$\r\n      .subscribe((previousUrl: string) =>{\r\n        this.previousUrl = previousUrl\r\n      });\r\n  }\r\n\r\n  openPopUp(data?: any) {\r\n    let response:any;\r\n    if(data === undefined ||data === null) {\r\n      response = {\r\n        isSignLater: false,\r\n        screen: 'Create Account'\r\n      };\r\n    } \r\n    if(!this.show) {\r\n      let dialogRef: MatDialogRef<any> = this.dialog.open(UploadSignOrEsignComponent, {\r\n        width: '720px',\r\n        disableClose: true,\r\n        data: ((data === undefined ||data === null) ? response : data)\r\n      })\r\n      dialogRef.afterClosed().subscribe(res => {\r\n        this.loanAccountId =  this.loanaccountID;\r\n        console.log(\"dismiss res\",res);\r\n        if(res){\r\n          this.show=this.ls.getItem(\"enable\");\r\n          // this.show = this.ls.getItem('eSignStage')\r\n          this.show1=this.ls.getItem(\"enable\");\r\n\r\n          console.log(this.show);\r\n          this.getByAccountId(this.loanAccountId);\r\n        }\r\n      })\r\n    }\r\n\r\n} \r\n getByAccountId(loanAccountId: any) {\r\n  this.api.fetchByLoanAccountId(loanAccountId)\r\n  .subscribe(resp => {\r\n    this.accountdetailsForStatusUpdate = resp;\r\n        this.updateAccountStatus(resp);\r\n  });\r\n  }\r\n  updateAccountStatus(accData) {\r\n    accData.status = 'BACKLOG';\r\n    this.api.updateLoanDetailsStatus(accData)\r\n    .subscribe(updateResp => {\r\n      console.log(\"updateResp:: \", updateResp);\r\n    });\r\n  }\r\n  onDone(){\r\n    this.isDone=true;\r\n    this.dialogService.alertForLoanFinishButton().subscribe((response) => {\r\n      console.log(\"response ::\", response);                 \r\n    });    \r\n\r\n  }\r\n  goBack() {\r\n    this.router.navigate([this.previousUrl]);\r\n  }\r\n\r\n  resetState() {\r\n    this.ls.removeItem('LoanEntryStage');\r\n    this.ls.removeItem('LOAN_DETAIL_DONE');\r\n    this.ls.removeItem('ASSET_DETAIL_DONE');\r\n    this.ls.removeItem('VEHICLE_DETAIL_DONE');\r\n    this.ls.removeItem('ADMISSION_DETAIL_DONE');\r\n    this.ls.removeItem('CUSTOMERINFO_DETAIL_DONE');\r\n    this.ls.removeItem('MANDATE_DETAIL_DONE');\r\n    this.ls.removeItem('FINANCIAL_DETAIL_DONE');\r\n    this.ls.removeItem('COLLATERAL_DETAIL_DONE');\r\n    this.ls.removeItem('GUARANTOR_DETAIL_DONE');\r\n\r\n    this.ls.removeItem('LOAN_ENRICHMENT_DONE');\r\n    this.ls.removeItem('LOAN_INTERST_DETAIL_DONE');\r\n    this.ls.removeItem('LOAN_DISBURSEMENT_DETAIL_DONE');\r\n    this.ls.removeItem('LOAN_REPAYMENT_DETAIL_DONE');\r\n    this.ls.removeItem('LOAN_CHARGE_DETAILS');\r\n    this.ls.removeItem('LOAN_ACCOUNT_SERVICES_DONE');\r\n    this.ls.removeItem('LOAN_ENRICHMENT_DONE');\r\n\r\n    this.ls.removeItem('assessment-details');\r\n    this.ls.removeItem('offer-acceptReject-details');\r\n    this.ls.removeItem('loan-summary-details');\r\n    this.ls.removeItem('assessmentScreen');\r\n    this.ls.removeItem('OfferIssueStageDone');\r\n\r\n    this.ls.removeItem('OfferIssue');\r\n    this.ls.removeItem('OfferIssueRejectStageScreen');\r\n    this.ls.removeItem('OfferIssueRejectScreen');\r\n\r\n    this.ls.removeItem('underWritingStage');\r\n    this.ls.removeItem('CREDIT_RATING_DONE');\r\n    this.ls.removeItem('VALUATION_OF_ASSET_DONE');\r\n    this.ls.removeItem('LEGAL_OPINION_DONE');\r\n    this.ls.removeItem('legalScreen');\r\n    this.ls.removeItem('valuationAsset');\r\n    this.ls.removeItem('CreditRatingDetails');\r\n\r\n    this.ls.removeItem('LOAN_QUALITATIVE_SCOREBOARD_DONE');\r\n    this.ls.removeItem('LOAN_ASSESSMENT_DETAILS_DONE');\r\n    this.ls.removeItem('LOAN_ASSESSMENT_STAGE_DONE');\r\n\r\n    this.ls.removeItem('SUPERVISOR_APPROVAL_STAGE');\r\n    this.ls.removeItem('isapprovedSupervisor');\r\n    this.ls.removeItem('APPROVED_DETAILS');\r\n    this.ls.removeItem('PostOfferAmmendementStageScreen');\r\n    this.ls.removeItem('PostOfferAmmendementScreen');\r\n    this.ls.removeItem('post-offer-amend-stage');\r\n\r\n    this.ls.removeItem('ACCOUNT_CREATTION_STAGE_DONE');\r\n    this.ls.removeItem('ACCOUNT_CREATE_DETAILS_DONE');\r\n    this.ls.removeItem('eSignStage');\r\n    this.ls.removeItem('loanAccountId');\r\n    this.ls.removeItem('enable');\r\n    this.ls.removeItem('primaryCustomerName');\r\n    this.ls.removeItem('cardownership_value');\r\n    this.ls.removeItem('cId');\r\n    this.ls.removeItem('signedImage');\r\n    this.ls.removeItem('LoanNoOfApplicants');\r\n    this.ls.removeItem('isHomeLoan');\r\n    this.ls.removeItem('productName');\r\n    this.ls.removeItem('signedImage');\r\n\r\n    sessionStorage.clear();\r\n    this.accountService.refresh.next();\r\n    this.router.navigate(['/loan']);\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.loanaccountID);\r\n    \r\n    let payload = {\r\n      loanAccountId:this.loanaccountID,\r\n      subject:\"Link to sign later\",\r\n      esignLink:\"http:bxjcks.com\",\r\n    };\r\n    this.api.signInLater(payload)\r\n      .subscribe((data: any) => {\r\n        console.log(\"data::\",data);\r\n        this.getByAccountId(this.loanaccountID);\r\n        this.ls.setItem('eSignStage', true);\r\n        this.ls.setItem('enable',true);\r\n        this.accountService.refresh.next();\r\n        let response: any = {\r\n          email: data.email,\r\n          customerId: data.customerId,\r\n          subject: data.subject,\r\n          isSignLater: true,\r\n          screen: 'Loan Account'\r\n        };\r\n        this.isDone=true;\r\n    this.dialogService.alertForLoanSignLater().subscribe((response) => {\r\n      console.log(\"response ::\", response);                 \r\n    });  \r\n    this.show = this.ls.setItem(\"enable\",true);\r\n        \r\n      }, (err: any) => {\r\n\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/digi.svg\" alt=\"\" class=\"w-80\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Digital Signing</b></div>\r\n      </div>\r\n    </div>\r\n  <mat-card class=\"mat-card-img\">\r\n    <div fxFlex=\"100\" class=\"mt-32\">\r\n        <mat-card\r\n          class=\"rounded-circle\" (click)=\"openPopUp()\"\r\n        >\r\n          <mat-card-content class=\"p-0\">\r\n            <mat-list class=\"compact-list mb-16\">\r\n              <mat-list-item class=\"\" >\r\n                <img\r\n                  mat-list-avatar\r\n                  class=\"mr-16\"\r\n                  src=\"assets/images/signnow.png\"\r\n                  alt=\"\"\r\n                />\r\n                <!-- [ngClass]=\" show ? 'primary' : 'secondary'\" -->\r\n                <div fxLayout=\"column\" fxFlex=\"100\"  >\r\n                  <h3 class=\"m-0 mr-16\">Sign Now</h3>\r\n                  <span fxFlex></span>\r\n                  <div fxFlex=\"40\" class=\"mt-4 notActive\">\r\n                    Enables you to digitally sign the document. To e sign the\r\n                    document, click on it, create your eSignature or Upload your signature, click on Done and\r\n                    it will add to your\r\n                  </div>\r\n                </div>\r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div fxFlex=\"100\">\r\n        <div class=\"text-center\">\r\n          <button mat-button class=\"full-width notActive\">OR</button>\r\n        </div>\r\n      </div>\r\n      <div fxFlex=\"100\">\r\n        <mat-card\r\n          class=\"rounded-circle\"  (click)=\"onSubmit()\">\r\n          <mat-card-content class=\"p-0\">\r\n            <mat-list class=\"compact-list mb-16\">\r\n              <mat-list-item class=\"\" >\r\n                <img\r\n                  mat-list-avatar\r\n                  class=\"mr-16\"\r\n                  src=\"assets/images/signlater.png\"\r\n                  alt=\"\"\r\n                />\r\n                <!-- [ngClass]=\" show ? 'primary' : 'primary'\" -->\r\n                <div fxLayout=\"column\" fxFlex=\"100\"  >\r\n                  <h3 class=\"m-0 mr-16\">Sign Later</h3>\r\n                  <span fxFlex></span>\r\n                  <div fxFlex=\"40\" class=\"mt-4 notActive\">\r\n                    Enables you to sign the document later. To sign later, click\r\n                    here, an email will be sent to the respective email id provided\r\n                    with a sign link. You can verify and sign later.\r\n                  </div>\r\n                </div>\r\n    \r\n              </mat-list-item>\r\n            </mat-list>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n  </mat-card>\r\n      <div fxFlex=\"100\" class=\"mt-16\">\r\n        <button mat-button class=\"Back\" (click)=\"goBack()\">BACK</button>\r\n        <span fxFlex></span>\r\n    \r\n        <button mat-raised-button class=\"Next\" type=\"button\" [disabled]=\"!show1\" (click)=\"onDone()\">FINISH</button>\r\n      </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DatePipe } from '@angular/common'\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { AccountService } from '../../account.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\n@Component({\r\n  selector: 'app-loan-disbursement-details',\r\n  templateUrl: './loan-disbursement-details.component.html',\r\n  styleUrls: ['./loan-disbursement-details.component.scss']\r\n})\r\nexport class LoanDisbursementDetailsComponent implements OnInit {\r\n\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  loanDisbursementForm: FormGroup;\r\n  internalAccount: FormGroup;\r\n  resp: any;\r\ncifNumber: any;\r\n accountNoArr = [];\r\n  showEditOption: boolean = false;\r\n  loanaccountId: any;\r\n  disbursementDetails: any;\r\n  loanInfo: any;\r\n  constructor(\r\n    private loader: AppLoaderService,\r\n    private ls: LocalStoreService,\r\n    public datepipe: DatePipe,private router:Router,private formBuilder: FormBuilder,private api: ApiService,\r\n    private snack: MatSnackBar,private accountService:AccountService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountId = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    let isLoanDisbursementDetails = this.ls.getItem('LOAN_DISBURSEMENT_DETAIL_DONE');\r\n    setTimeout(() => {\r\n      if (this.loanaccountId != null && isLoanDisbursementDetails) {\r\n        this.showEditOption = true;\r\n        this.getDisbursementDetails();\r\n      } else {\r\n        this.showEditOption = false;\r\n        this.buildformGroup();\r\n      }\r\n    }, 10);   \r\n    this.fetchByCif(); \r\n  }\r\n\r\n  getDisbursementDetails(){\r\n    this.loader.open();\r\n      this.api.loanDisbursementFetchById(this.loanaccountId).subscribe(disbursementDetails=>{\r\n        this.loader.close();\r\n        this.disbursementDetails = disbursementDetails;\r\n        this.buildformGroup(this.disbursementDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    }); \r\n  }\r\n\r\n\r\n  buildformGroup(item?) {\r\n    const lsLoanAmount = this.ls.getItem('loanAmount') || '';\r\n\r\n    // let latest_date= new Date(item.firstDisbursementDate).toISOString().substring(0, 10);\r\n     this.loanDisbursementForm = this.formBuilder.group({\r\n      mutipleDisbursementRequired: [item?item.mutipleDisbursementRequired:true],\r\n      loanAccountId:this.loanaccountId,\r\n      loanDisbursementId:[item?item.loanDisbursementId:''],\r\n      numberOfDisbursement:[item?item.numberOfDisbursement:'',Validators.required],\r\n      totalDisbursement:[item?item.totalDisbursement:'',Validators.required],\r\n      loanAmount:[item?item.loanAmount:lsLoanAmount,Validators.required],\r\n      firstDisbursementDate:[item?new Date(item.firstDisbursementDate).toISOString().substring(0, 10):'',Validators.required],\r\n      disbursementMode:[item?item.disbursementMode:'',Validators.required],\r\n    });\r\n    this.internalAccount = this.formBuilder.group({\r\n      customerAccount:[item?item.customerAccount:'',Validators.required],\r\n      branchCode:[item?item.branchCode:'',Validators.required],\r\n  \r\n     \r\n    });\r\n\r\n  }\r\nsubmit(){\r\n\r\n  let latest_date =this.datepipe.transform(this.loanDisbursementForm.value.firstDisbursementDate, 'yyyy-MMM-dd');\r\n  \r\n\r\n  this.loanDisbursementForm.value.branchCode=this.internalAccount.value.branchCode,\r\n  this.loanDisbursementForm.value.customerAccount=this.internalAccount.value.customerAccount\r\n  this.loanDisbursementForm.value.firstDisbursementDate=latest_date\r\n  this.api.loanDisbursementSave(this.loanDisbursementForm.value).subscribe(resp => {\r\n    this.snack.open('Loan Disbursement Details Saved!', 'OK', {\r\n      duration: 4000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n    this.next();\r\n  \r\n  }, err => {\r\n    this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n      duration: 4000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n  })\r\n  \r\n}\r\n\r\n_keyPress(event: any) {\r\n  const pattern = /[0-9]/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n  }\r\n}\r\n\r\nnext(){\r\n  this.ls.setItem('LOAN_DISBURSEMENT_DETAIL_DONE', true);\r\n  this.accountService.refresh.next();\r\n  this.router.navigate([`/loan/account/application-enrichment/loan-repayment`]);\r\n}\r\ngoBack() {\r\n \r\n  this.router.navigate([\r\n    `/loan/account/application-enrichment/intrest-details`,\r\n  ]);\r\n}\r\nfetchByCif(){\r\n    this.cifNumber=this.ls.getItem('cId');\r\n    this.api.fetchAccountIdByCustId(this.cifNumber).subscribe((accountNo: [])=>{\r\n      this.accountNoArr = accountNo;         \r\n      this.internalAccount.get('customerAccount').setValue(this.accountNoArr?.[0]);\r\n    }     \r\n      );       \r\n  }\r\n}","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/loanDisbursement.svg\" alt=\"\" class=\"w-80\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><h2>Loan Disbursement Details </h2></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">      \r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Loan Disbursement  Details</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"loanDisbursementForm\" [formGroup]=\"loanDisbursementForm\">\r\n          <!-- <mat-spinner class=\"spinner\" [diameter]=\"80\" *ngIf=\"showSpinn\"></mat-spinner> -->\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div fxLayout=\"row\" fxLayoutGap=\"25px\" >\r\n                <div fxFlex=\"100\" class=\"pr-1\">\r\n                  <div class=\"pb-1\">\r\n                    Required Multiple Disbursement ?&nbsp;&nbsp;&nbsp;\r\n                    <mat-slide-toggle formControlName=\"mutipleDisbursementRequired\"></mat-slide-toggle>\r\n                  </div><br>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Disbursement Mode*</mat-label>\r\n                <!-- <mat-card class=\"widthCard inputMatName\" id=\"select\"> -->\r\n                  <mat-select placeholder=\"Disbursement Mode\" \r\n                  formControlName=\"disbursementMode\" disableOptionCentering>\r\n                    <!-- <mat-option value=\"\">Select</mat-option> -->\r\n                    <mat-option value=\"Auto Disbursement\">Auto Disbursement</mat-option>\r\n                    <mat-option value=\"Manual Disbursement\">Manual Disbursement </mat-option>\r\n                  </mat-select>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!loanDisbursementForm.get('disbursementMode').valid && loanDisbursementForm.get('disbursementMode').touched\">\r\n                  Disbursement Mode is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              \r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Number of Disbursement*</mat-label>\r\n                <!-- <mat-card class=\"widthCard inputMatName\"> -->\r\n                  <input matInput placeholder=\"Number of Disbursement\" formControlName=\"numberOfDisbursement\"\r\n                    class=\"alignment\" name=\"MarketValueofAsset\" (keypress)=\"_keyPress($event)\" autocomplete=\"off\"/>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!loanDisbursementForm.get('numberOfDisbursement').valid && loanDisbursementForm.get('numberOfDisbursement').touched\">\r\n                  Number of Disbursement is Required!</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n\r\n              <div class=\"flex-grow-2\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Total Disbursement*</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n\r\n                  <input matInput placeholder=\"Total Disbursement\" formControlName=\"totalDisbursement\" class=\"alignment\"\r\n                  (keypress)=_keyPress($event)  name=\"MarketValueofAsset\" autocomplete=\"off\" />\r\n\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!loanDisbursementForm.get('totalDisbursement').valid  && loanDisbursementForm.get('totalDisbursement').touched\">\r\n                  Total Disbursement is Required!</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"padding\">\r\n              <div class=\"flex-grow-2 \">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>Loan Amount*</mat-label>\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n\r\n                  <input placeholder=\"Loan Amount\" matInput formControlName=\"loanAmount\" class=\"alignment\" readonly \r\n                    name=\"MarketValueofAsset\" />\r\n\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!loanDisbursementForm.get('loanAmount').valid  && loanDisbursementForm.get('loanAmount').touched\">\r\n                  Loan Amount is Required!</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n\r\n              <div class=\"flex-grow-2 \">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label>First Disbursement Date*</mat-label>\r\n                <!-- <mat-card class=\"inputMatName1\" id=\"heightDate\"> -->\r\n                  <input placeholder=\"DD/MM/YYYY\" matInput name=\"valuationDate\" class=\"alignment\"\r\n                    formControlName=\"firstDisbursementDate\" [min]=\"minDate\"\r\n                     [matDatepicker]=\"appDatepicker\" readonly />\r\n                    <div fxFlex=\"8%\" id=\"toggle\">\r\n                  <mat-datepicker-toggle class=\"date_picker\" matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #appDatepicker></mat-datepicker>\r\n                   </div>\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!loanDisbursementForm.get('firstDisbursementDate').valid && loanDisbursementForm.get('firstDisbursementDate').touched\">\r\n                  First Disbursement Date is Required!</mat-error>\r\n                </mat-form-field>\r\n             \r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </form>\r\n      </mat-card-content>\r\n        <!-- <div class=\"spanDiv1\">\r\n          <span class=\"span\">Internal Account\r\n          </span>\r\n          <mat-divider class=\"divider marginL-0\"></mat-divider>\r\n        </div> -->        \r\n        <mat-card-title>\r\n          <fieldset>\r\n          <legend visible=\"true\">Internal Account</legend>\r\n          </fieldset>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n        <form *ngIf=\"internalAccount\" [formGroup]=\"internalAccount\">\r\n          <!-- <mat-spinner class=\"spinner\" [diameter]=\"80\" *ngIf=\"showSpinn\"></mat-spinner> -->\r\n          <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" style=\"padding-right: 5px;\">\r\n\r\n\r\n              <!-- <div class=\"flex-grow-2\">\r\n\r\n                    <mat-hint>Customer Account*</mat-hint>\r\n                    <mat-card class=\"widthCard inputMatName\">\r\n                      <mat-select disableOptionCentering formControlName=\"customerAccount\">\r\n                        <mat-option value=\"\">Select</mat-option>\r\n                        <mat-option value=\"saving\">Saving</mat-option>\r\n                        <mat-option value=\"fixed\">Fixed</mat-option>\r\n                        <mat-option value=\"current\">Current</mat-option>\r\n                      </mat-select>\r\n                    </mat-card>\r\n                    <mat-error *ngIf=\"!internalAccount.get('customerAccount').valid && internalAccount.get('customerAccount').touched\">\r\n                        Customer Account is Required!</mat-error>\r\n                  </div> -->\r\n\r\n\r\n              <div class=\"flex-grow-1\"  >\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <mat-label> Customer Account*</mat-label>\r\n                <!-- <mat-card class=\"alignChange\">                 -->\r\n                  <mat-select formControlName=\"customerAccount\" disableOptionCentering placeholder=\"Customer Account\">\r\n                    <mat-option [value]=\"accNo\" *ngFor=\"let accNo of accountNoArr\">{{accNo}}</mat-option>\r\n                  </mat-select>                  \r\n                <!-- </mat-card>                 -->\r\n                <mat-error\r\n                *ngIf=\"!internalAccount.get('customerAccount').valid  && internalAccount.get('customerAccount').touched\">\r\n                &nbsp;&nbsp; Customer Account is Required!\r\n               </mat-error>\r\n                </mat-form-field>\r\n                \r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\">\r\n              <div class=\"flex-grow-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                <!-- <mat-card class=\"inputMatName\"> -->\r\n                  <input matInput placeholder=\"Branch Code\" formControlName=\"branchCode\" class=\"alignment\" (keypress)=_keyPress($event) \r\n                    name=\"MarketValueofAsset\" />\r\n                <!-- </mat-card> -->\r\n                <mat-error\r\n                  *ngIf=\"!internalAccount.get('branchCode').valid  && internalAccount.get('branchCode').touched\">\r\n                  Branch Code is Required!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n\r\n      <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">\r\n        Back\r\n      </button>\r\n      <button mat-raised-button color=\"primary\" class=\"Nextbtn\" [disabled]=\"!(loanDisbursementForm.valid) || !(internalAccount.valid)\" (click)=\"submit()\">\r\n        Next\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-offer-issue',\r\n  templateUrl: './offer-issue.component.html',\r\n  styleUrls: ['./offer-issue.component.scss']\r\n})\r\nexport class OfferIssueComponent implements OnInit {\r\n\r\n  generateArr:string[]=['With Schedule','without Schedule'];\r\n  approvedLoan: number;\r\n  accountDetails: any;\r\n  OfferIssueForm: FormGroup;\r\n  showEditOption: boolean = false;\r\n  disableDone:boolean =true;\r\n  isAssesmentDetailsScreen: boolean = false;\r\n  isOfferIssueScreen: boolean = false; \r\n  isOfferIssueRejectScreen: boolean  = false;\r\n  loanInfo: any;\r\n  loanaccountID: any;\r\n\r\n\r\n  constructor(private router: Router,private ls: \r\n    LocalStoreService,private apiService:ApiService, private snack: MatSnackBar,private loader: AppLoaderService,\r\n    private formBuilder: FormBuilder) { \r\n    this.OfferIssueForm = this.formBuilder.group({\r\n      approvedLoanAmount : [],\r\n      applicantName:[''],\r\n      loanTenure:[],\r\n      installmentType:[''],\r\n      installmentFrequency:[''],    \r\n      rateOfInterest:[],  \r\n      offerIssueDate:[''],\r\n      generateOffer:[''],\r\n    \r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    let isOfferIssueScreen: boolean = JSON.parse(this.ls.getItem('OfferIssue'));\r\n    setTimeout(() => {\r\n      if (44444 != null && isOfferIssueScreen) {\r\n        this.showEditOption = true;\r\n        \r\n        this.getAccountDetails();\r\n      } \r\n      else {\r\n        console.log(\"else\");\r\n        this.showEditOption = false;\r\n        this.buildOfferIssueForm();\r\n      }\r\n    }, 10);\r\n   \r\n    //this.getAccountType(\"account_type\");\r\n  }\r\n  getAccountDetails() {\r\n    this.loader.open();\r\n    this.apiService.getOfferIssueDetails(this.loanaccountID?this.loanaccountID:44444).subscribe((accountDetails) => {\r\n      this.loader.close();\r\n      this.accountDetails = accountDetails;\r\n      console.log(this.accountDetails);\r\n      this.buildOfferIssueForm(this.accountDetails);\r\n    }, (err: any) => {\r\n      this.loader.close();\r\n    });\r\n\r\n\r\n  }\r\n  buildOfferIssueForm(data?) {\r\n    this.OfferIssueForm = this.formBuilder.group({\r\n      approvedLoanAmount : [data ? data.approvedLoanAmount:''],\r\n      applicantName:[data ? data.applicantName:''],\r\n      loanTenure:[data ? data.loanTenure:''],\r\n      installmentType:[data ? data.installmentType:''],\r\n      installmentFrequency:[data ? data.installmentFrequency:''],    \r\n      rateOfInterest:[data ? data.rateOfInterest:''],  \r\n      offerIssueDate:[data ? data.offerIssueDate:''],\r\n      generateOffer:[data ? data.generateOffer:''],\r\n    \r\n    })\r\n\r\n  }\r\n  goBack(){\r\n    this.router.navigate([\"/loan/account/offerstage/offer-assessment\"]);\r\n  }\r\nSubmit(){\r\n  let details:  any;\r\n    //details.push(this.legalOpinion.value);\r\n    let now = new Date();\r\n    now=this.OfferIssueForm.value.opinionDate;\r\n    var dateStringWithTime = moment(now).format('YYYY-MMM-DD HH:MM:SS');\r\n    console.log(\"dateStringWithTime\",dateStringWithTime);\r\n    var aprloan=this.OfferIssueForm.value.approvedLoanAmount;\r\n    aprloan= parseInt(aprloan);\r\n    var rate=this.OfferIssueForm.value.rateOfInterest;\r\n    rate= parseInt(rate);\r\n    let payload={\r\n      loanAccountId:parseInt(\"44444\"),\r\n      approvedLoanAmount:aprloan,\r\n      applicantName:this.OfferIssueForm.value.applicantName,\r\n      loanTenure:this.OfferIssueForm.value.loanTenure,\r\n      installmentType:this.OfferIssueForm.value.installmentType,\r\n      installmentFrequency:this.OfferIssueForm.value.installmentFrequency,\r\n      rateOfInterest:rate,\r\n      offerIssueDate:dateStringWithTime,\r\n      generateOffer:this.OfferIssueForm.value.generateOffer,\r\n    }\r\n    console.log(\"payload\",payload)\r\n    this.apiService.upsertOfferIssue(payload).subscribe(data => {\r\n      console.log(\"data\",data);\r\n      if(data != null){\r\n        this.snack.open('Data Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n     \r\n      }\r\n    })\r\n    \r\n  this.Next();\r\n}\r\nNext(){\r\n  this.ls.setItem('OfferIssue', true);\r\n  this.router.navigate([\"/loan/account/offerstage/offer-accept-reject\"]);\r\n\r\n}\r\n\r\n_keyPress1(event: any) {\r\n  const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n  }\r\n  const input = event.target.value;\r\n  if (input.length === 0 && event.which === 48) {\r\n    event.preventDefault();\r\n  }\r\n}\r\n\r\n_keyPress(event: any) {\r\n  const pattern = /[0-9]/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n  }\r\n}\r\nonInput(event: any, flag) {\r\n  if (flag) {\r\n    this.approvedLoan = event.target.value;\r\n  } else {\r\n    this.approvedLoan = event;\r\n  }\r\n\r\n  console.log(\"this.salary)::\", this.approvedLoan);\r\n  let sal = this.approvedLoan.toString().replace(/,/g, '').split(\".\");\r\n  sal[0] = sal[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  let final = sal.join(\".\");\r\n  console.log(\"final\", final);\r\n  this.OfferIssueForm.controls.approvedLoanAmount.setValue(final);\r\n}\r\n}","<div fxLayout=\"column\">\r\n  <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-80\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"card-title-text\"><h1>Offer Issue Details</h1></div>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"column\">\r\n  <form fxLayout=\"column\" [formGroup]=\"OfferIssueForm\">\r\n      <div fxFlex=\"100\">\r\n          <mat-card fxLayout=\"column\" style=\"border-radius: 30px; margin-right: 1.5cm;\">\r\n              <mat-card-title >\r\n                  <div class=\"card-title-text\">Offer Issue Details<mat-divider></mat-divider></div>\r\n              </mat-card-title>\r\n\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Applicant Name*</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"applicantName\"\r\n                          placeholder=\"Applicant Name\" formControlName=\"applicantName\"/>\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Approved Loan Amount*</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                        <input matInput  class=\"alignment\" type=\"text\" name=\"approvedLoanAmount\" placeholder=\"Approved Loan Amount\"\r\n                        (keypress)=\"_keyPress1($event)\"  (keyup)=\"onInput($event,true)\"\r\n                         maxlength=\"16\"formControlName=\"approvedLoanAmount\" />\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n              </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Loan Tenure</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"loanTenure\"\r\n                          formControlName=\"loanTenure\" \r\n                          placeholder=\"in years\"/>\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Installment Type</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                        <input matInput  class=\"alignment\" type=\"text\" name=\"installmentType\" placeholder=\"Installment Type\"\r\n                        formControlName=\"installmentType\" \r\n                          />\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n              </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Installment Frequency</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"installmentFrequency\"\r\n                          formControlName=\"installmentFrequency\"/>\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Rate of Interest in(%)</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                        <input matInput  class=\"alignment\" type=\"text\" name=\"rateOfInterest\"\r\n                        formControlName=\"rateOfInterest\" min=\"0\" max=\"100\" />\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n              </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                      <label  class=\"hint\">Approved Loan Account</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"approvedLoanAmount\"\r\n                          formControlName=\"approvedLoanAmount\"/>\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Loan Tenure</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                        <input matInput  class=\"alignment\" type=\"text\" name=\"loanTenure\"\r\n                        formControlName=\"loanTenure\" />\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n              </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Offer Issue Date</label>\r\n                      <mat-card class=\"inputMatLastName\" style=\"height:48px;\">\r\n                            <input matInput  id=\"dob\" class=\"alignment\" name=\"offerIssueDate\" readonly\r\n                              [matDatepicker]=\"picker\"  value=\"offerIssueDate\" placeholder=\"DD/MM/YYYY\"\r\n                              formControlName=\"offerIssueDate\">\r\n                          <div fxFlex=\"8%\" id=\"toggle\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker\" >\r\n                              </mat-datepicker-toggle>\r\n            \r\n                              <mat-datepicker #picker>\r\n                              </mat-datepicker>\r\n                            </div>\r\n            \r\n                       </mat-card>\r\n        \r\n                  </div>\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Generate Offer</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <mat-select class=\"alignment\" formControlName=\"generateOffer\" disableOptionCentering>\r\n                              <mat-option >select</mat-option>\r\n                              <mat-option *ngFor=\"let generateOffer of generateArr\" [value]=\"generateOffer\">\r\n                                  {{generateOffer}}\r\n                              </mat-option>\r\n                          </mat-select>\r\n                      </mat-card>\r\n                     \r\n                  </div>\r\n                 \r\n                    \r\n              </div>\r\n\r\n\r\n          </mat-card>\r\n\r\n      </div>\r\n      <div class=\"button\">\r\n          <!-- -->\r\n          <button mat-button class=\"Back\" (click)=\"goBack()\" >Back</button>\r\n          <button mat-stroked-button class=\"Next\" (click)=\"Submit()\" [disabled]=\"!OfferIssueForm.valid\">Done</button>\r\n      </div>\r\n  </form>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { AppLoaderService } from 'app/shared/services/app-loader/app-loader.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport * as moment from 'moment';\r\nimport { AccountService } from '../../account.service';\r\nimport { DatePipe } from '@angular/common'\r\n\r\n@Component({\r\n  selector: 'app-vehicle-details',\r\n  templateUrl: './vehicle-details.component.html',\r\n  styleUrls: ['./vehicle-details.component.scss'],\r\n})\r\nexport class VehicleDetailsComponent implements OnInit {\r\n  vehicleForm: FormGroup;\r\n  vehicleDetails: any;\r\n  showEditOption: boolean = false;\r\n  loanaccountID: any;\r\n  productName: any;\r\n  arrayCity: string[];\r\n  arrayState: string[];\r\n  months: any[] = [];\r\n  selectedYear: number;\r\n  years: any[] = [];\r\n  month: string[];\r\n   year: string[];\r\n   make:string[];\r\n  policyNumber: any = true;\r\n  loanInfo: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private ls: LocalStoreService,\r\n    private loader: AppLoaderService,\r\n    private apiService: ApiService,\r\n    private snack: MatSnackBar,\r\n    private accountService: AccountService,\r\n    private router: Router,\r\n     public datepipe: DatePipe\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    this.productName = this.ls.getItem('productName');\r\n\r\n    this.selectedYear = new Date().getFullYear();\r\n    for (let year = this.selectedYear; year >= 1990; year--) {\r\n      this.years.push(year);\r\n    }\r\n    this.months = [\r\n      '01',\r\n      '02',\r\n      '03',\r\n      '04',\r\n      '05',\r\n      '06',\r\n      '07',\r\n      '08',\r\n      '09',\r\n      '10',\r\n      '11',\r\n      '12',\r\n    ];\r\n    let isVehicleDetailsScreen: boolean = JSON.parse(\r\n      this.ls.getItem('VEHICLE_DETAIL_DONE')\r\n    );\r\n    //if (this.loanAccountId != null && isVehicleDetailsScreen) {\r\n      setTimeout(() => {\r\n        if (this.loanaccountID != null && isVehicleDetailsScreen) {\r\n          this.showEditOption = true;\r\n    \r\n          this.getVehicleDetails();\r\n        } else {\r\n          console.log('else');\r\n          this.showEditOption = false;\r\n          this.buildformGroup();\r\n        }\r\n      }, 10);\r\n  \r\n    this.vehicleForm.get('productName').patchValue(this.productName);\r\n    this.getStateName();\r\n  }\r\n\r\n  changeInput(inp) {\r\n    this.policyNumber = inp.length ? false : true;\r\n  }\r\n\r\n  getVehicleDetails() {\r\n    this.loader.open();\r\n    //this.apiService.getAssetValuation(this.loacnAccountId).subscribe((accountDetails) => {\r\n    this.apiService.getVehicleDetails(this.loanaccountID).subscribe(\r\n      (vehicleDetails) => {\r\n        this.loader.close();\r\n        this.vehicleDetails = vehicleDetails;\r\n        console.log(this.vehicleDetails);        \r\n        this.buildformGroup(this.vehicleDetails);\r\n      },\r\n      (err: any) => {\r\n        this.loader.close();\r\n      }\r\n    );\r\n  }\r\n\r\n  buildformGroup(data?) {\r\n    this.getStateName();\r\n    this.vehicleForm = this.fb.group({\r\n      id: [''],\r\n      insuranceDetails: [data ? data.insuranceDetails : ''],\r\n      distanceRun: [data ? data.distanceRun : ''],\r\n      engineNumber: [data ? data.engineNumber : ''],\r\n      expectedSellingPrice: [data ? data.expectedSellingPrice : ''],\r\n      insuranceCompany: [data ? data.insuranceCompany : ''],\r\n      model: [data ? data.model : ''],\r\n      policyCommencementDate: [data ?data.policyCommencementDate : '',[Validators.required]],\r\n      policyNumber: [data ? data.policyNumber : ''],\r\n      policyRenewalDate: [data ? data.policyRenewalDate : '',[Validators.required]],\r\n      premiunAmount: [data ? data.premiunAmount : ''],\r\n      premiunFrequency: [data ? data.premiunFrequency : ''],\r\n      productName: [data ? data.productName : '', Validators.required],\r\n      maker: [data ? data.maker : '', Validators.required],\r\n      hypothecatedBranch: [data ? data.hypothecatedBranch : ''],\r\n      registrationCity: [data ? data.registrationCity : ''],\r\n      registrationNumber: [data ? data.registrationNumber : ''],\r\n      registrationState: [data ? data.registrationState : ''],\r\n      vehicleClass: [data ? data.vehicleClass : '', [Validators.required]],\r\n      chassisNumber: [data ? data.chassisNumber : ''],\r\n      make: [ data ? data.make : ''],\r\n     month: [data ? data.make.split(\"-\")[1] : \"\", [Validators.required]],\r\n      year: [data ? data.make.split(\"-\")[0] : \"\", [Validators.required]],\r\n    });\r\n  }\r\n  goBack() {\r\n    this.router.navigate([`/loan/account/loan-details`]);\r\n  }\r\n\r\n  getStateName() {\r\n    let entityName = 'state';\r\n    this.apiService.getDropDownValues(entityName).subscribe((data) => {\r\n      this.arrayState = data.sort();\r\n      console.log('-->', this.arrayState);\r\n    });\r\n  }\r\n  getCityName(state: any) {\r\n    console.log('inside getCityName::', state);\r\n    let entityName = 'city';\r\n    this.apiService.getDropDownValues1(entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log('-->', this.arrayCity);\r\n    });\r\n  }\r\n\r\n  next() {\r\n    this.ls.setItem('VEHICLE_DETAIL_DONE', true);\r\n    this.accountService.refresh.next();\r\n    this.router.navigate([`/loan/account/customer-information`]);\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    const input = event.target.value;\r\n    if (input.length === 0 && event.which === 48) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n   convertDate(value) {\r\n    let date = moment(value).format('YYYY-MM-DD'); // ISO 8601 format\r\n   // let date =  moment(value).format('yyyy-MMM-dd');\r\n    console.log(\"date\", date);\r\n    if (date)\r\n      return date;\r\n  }\r\n  submitForm() {\r\n    var pk = this.vehicleForm.value.expectedSellingPrice;\r\n    pk = parseInt(pk);\r\n    var prAmmount = this.vehicleForm.value.premiunAmount;\r\n    prAmmount = parseInt(prAmmount);\r\n    const renewData =\r\n    this.vehicleForm.value.year +\r\n    \"-\" +\r\n    this.vehicleForm.value.month ;\r\n   \r\n  this.vehicleForm.get(\"make\").setValue(renewData);  \r\n // delete this.vehicleForm.value.month;  \r\n    let payload = {\r\n      loanAccountId: this.loanaccountID,\r\n      insuranceDetails: this.vehicleForm.value.insuranceDetails,\r\n      distanceRun: this.vehicleForm.value.distanceRun,\r\n      engineNumber: this.vehicleForm.value.engineNumber,\r\n\r\n      expectedSellingPrice: pk,\r\n     // loanAmount: pk,\r\n      insuranceCompany: this.vehicleForm.value.insuranceCompany,\r\n      purposeOfLoan: this.vehicleForm.value.purposeOfLoan,\r\n      model: this.vehicleForm.value.model,\r\n     // policyCommencementDate:this.vehicleForm.value.policyCommencementDate==null? dateStringWithTime1 :null,\r\n      policyNumber: this.vehicleForm.value.policyNumber,\r\n     // policyRenewalDate:this.vehicleForm.value.policyRenewalDate==null?  dateStringWithTime2 :null,\r\n      policyRenewalDate : this.datepipe.transform(this.vehicleForm.value.policyRenewalDate, 'yyyy-MMM-dd'),\r\n      //policyCommencementDate:this.convertDate(this.vehicleForm.value.policyCommencementDate),\r\n      policyCommencementDate : this.datepipe.transform(this.vehicleForm.value.policyCommencementDate, 'yyyy-MMM-dd'),\r\n      premiunAmount: prAmmount,\r\n      premiunFrequency: this.vehicleForm.value.premiunFrequency,\r\n      productName: this.vehicleForm.value.productName,\r\n      registrationCity: this.vehicleForm.value.registrationCity,\r\n      registrationNumber: this.vehicleForm.value.registrationNumber,\r\n      registrationState: this.vehicleForm.value.registrationState,\r\n      vehicleClass: this.vehicleForm.value.vehicleClass,\r\n      chassisNumber: this.vehicleForm.value.chassisNumber,\r\n      maker:this.vehicleForm.value.maker,\r\n      hypothecatedBranch: this.vehicleForm.value.hypothecatedBranch,\r\n      make:renewData,\r\n    };\r\n    console.log('payload', payload);\r\n    this.apiService.saveVehicleDetails(payload).subscribe((data) => {\r\n      console.log('data', data);\r\n      if (data != null) {\r\n        this.snack.open('Vehicle Details saved Successfully', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right',\r\n        });\r\n      }\r\n      if (data === 500) {\r\n        this.snack.open(\r\n          'Not able to connect to server!',\r\n          'INTERNAL SERVER ERROR',\r\n          {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right',\r\n          }\r\n        );\r\n        console.log('500 error');\r\n      }\r\n    });\r\n\r\n    this.next();\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/asset_screen.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title1\"><b>Vehicle Details</b></div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\">\r\n    <mat-card class=\"p-0\">      \r\n      <mat-card-title>\r\n        <fieldset>\r\n        <legend visible=\"true\">Vehicle Information</legend>\r\n        </fieldset>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form *ngIf=\"vehicleForm\" [formGroup]=\"vehicleForm\">\r\n          <div fxLayout=\"column\">\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Product Name*</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    formControlName=\"productName\" autocomplete=\"off\"\r\n                    matInput\r\n                    name=\"a_sig\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Product Name\"\r\n                     oninput=\"this.value = this.value.replace(/[^A-Za-z,.;'&/.() ]|^ /g,'')\"\r\n                  />\r\n                </mat-card>\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !vehicleForm.get('productName').valid &&\r\n                    vehicleForm.get('productName').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Product Name is Required!\r\n                </mat-error>\r\n                <!-- <mat-error *ngIf=\"!mandate.controls['remarks'].valid  && mandate.controls['remarks'].touched\">\r\n                                Remarks is Required!</mat-error> -->\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Hypothecated Branch</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName1\">\r\n                  <mat-select name=\"hypothecatedBranch\" placeholder=\"Select\" \r\n                              disableOptionCentering formControlName=\"hypothecatedBranch\">\r\n                    <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option value=\"test\">test</mat-option>\r\n                  </mat-select>\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Vehicle Class*</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName1\">\r\n                  <mat-select\r\n                    name=\"vehicleClass\" placeholder=\"Select\"\r\n                    formControlName=\"vehicleClass\" disableOptionCentering\r\n                  >\r\n                    <mat-option >Select</mat-option>\r\n                    <mat-option value=\"New\">New</mat-option>\r\n                  </mat-select>\r\n                </mat-card>\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !vehicleForm.get('vehicleClass').valid &&\r\n                    vehicleForm.get('vehicleClass').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Vehicle Class is Required!\r\n                </mat-error>\r\n                <!-- <mat-card class=\"inputMatName\">\r\n              \r\n                              <input formControlName=\"vehicleClass\"\r\n                                  matInput\r\n                                  name=\"a_sig\" class=\"alignment\"\r\n                                  placeholder=\"Vehicle Class\"\r\n                                />\r\n                                \r\n                            </mat-card> -->\r\n                <!-- <mat-error *ngIf=\"!mandate.controls['remarks'].valid  && mandate.controls['remarks'].touched\">\r\n                                Remarks is Required!</mat-error> -->\r\n              </div>\r\n\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Maker*</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                  formControlName=\"maker\" autocomplete=\"off\"\r\n                    matInput\r\n                    name=\"maker\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Maker\"\r\n                    oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"\r\n                  />\r\n                </mat-card>\r\n                 <mat-error\r\n                  *ngIf=\"\r\n                    !vehicleForm.get('maker').valid &&\r\n                    vehicleForm.get('maker').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Maker is Required!\r\n                </mat-error>\r\n                <!-- <mat-error *ngIf=\"!vehicleForm.get('productName').valid && vehicleForm.get('productName').touched\" >\r\n                              &nbsp;&nbsp; Product Name is Required!\r\n                            </mat-error> -->\r\n              </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Model</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    formControlName=\"model\" autocomplete=\"off\"\r\n                    matInput\r\n                    name=\"model\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Model\"\r\n                    oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"\r\n                  />\r\n                </mat-card>\r\n                <!-- <mat-error *ngIf=\"!mandate.controls['remarks'].valid  && mandate.controls['remarks'].touched\">\r\n                                Remarks is Required!</mat-error> -->\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Maker MM/YYYY *</mat-hint>\r\n                <div\r\n                  fxLayout=\"row\"\r\n                  fxLayoutGap=\"5px\"\r\n                  fxLayoutAlign=\"start center\"\r\n                >\r\n                <div fxFlex=\"30\">\r\n                    <mat-card\r\n                      class=\"widthCard inputMatName1\"                     \r\n                    >\r\n                      <mat-select name=\"year\" placeholder=\"YYYY\" formControlName=\"year\" disableOptionCentering>\r\n                        <mat-option>Select</mat-option>                       \r\n                        <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{\r\n                          year\r\n                        }}</mat-option>\r\n                      </mat-select>\r\n                    </mat-card>\r\n                  </div>\r\n                  <div fxFlex=\"30\">\r\n                    <mat-card\r\n                      class=\"widthCard inputMatName1\"\r\n                      \r\n                    >\r\n                      <mat-select name=\"month\" placeholder=\"MM\" formControlName=\"month\" disableOptionCentering>\r\n                        <mat-option>Select</mat-option>\r\n\r\n                        <mat-option\r\n                          *ngFor=\"let month of months\"\r\n                          [value]=\"month\"\r\n                          >{{ month }}</mat-option\r\n                        >\r\n                      </mat-select>\r\n                    </mat-card>\r\n                  </div>                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Chassis Number</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    formControlName=\"chassisNumber\" autocomplete=\"off\"\r\n                    maxlength=\"17\"\r\n                    matInput\r\n                    name=\"a_sig\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Chassis Number\"\r\n                    oninput=\"this.value = this.value.replace(/[^0-9-,.;'&/.() ]|^ /g,'')\"\r\n                    image.png\r\n                  />\r\n                </mat-card>\r\n                <!-- <mat-error *ngIf=\"!mandate.controls['remarks'].valid  && mandate.controls['remarks'].touched\">\r\n                                Remarks is Required!</mat-error> -->\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Engine Number</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"engineNumber\" autocomplete=\"off\"\r\n                    maxlength=\"12\"\r\n                    name=\"a_sig\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Engine Number\"\r\n                    oninput=\"this.value = this.value.replace(/[^0-9-,.;'&/.() ]|^ /g,'')\"\r\n                  />\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Registration Number</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    formControlName=\"registrationNumber\" autocomplete=\"off\"\r\n                    matInput\r\n                    name=\"a_sig\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Registration Number\"\r\n                    oninput=\"this.value = this.value.replace(/[^0-9-,.;'&/.() ]|^ /g,'')\"\r\n                  />\r\n                </mat-card>\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Registration State</mat-hint>\r\n                <mat-card class=\" widthCard inputMatName1\">\r\n                  <mat-select disableOptionCentering\r\n                    name=\"registrationState\" placeholder=\"Select\"\r\n                    formControlName=\"registrationState\"\r\n                    (selectionChange)=\"getCityName($event.value)\"\r\n                  >\r\n                    <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let state of arrayState\"\r\n                      [value]=\"state\"\r\n                      >{{ state }}</mat-option\r\n                    >\r\n                  </mat-select>\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Registration City</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName1\">\r\n                  <mat-select disableOptionCentering\r\n                    name=\"registrationCity\" placeholder=\"Select\"\r\n                    formControlName=\"registrationCity\"\r\n                  >\r\n                    <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option\r\n                      *ngFor=\"let city of arrayCity\"\r\n                      [value]=\"city.value1\"\r\n                      >{{ city.value1 }}</mat-option\r\n                    >\r\n                  </mat-select>\r\n                </mat-card>\r\n                <!-- <mat-card class=\"inputMatName\">\r\n              \r\n                              <input formControlName=\"registrationCity\"\r\n                                  matInput\r\n                                  name=\"a_sig\" class=\"alignment\"\r\n                                  placeholder=\"Registration City\"\r\n                                />\r\n                                \r\n                            </mat-card> -->\r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                <mat-hint>Expected Selling Price</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"expectedSellingPrice\" autocomplete=\"off\"\r\n                    (keypress)=\"_keyPress($event)\"\r\n                    name=\"a_sig\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Expected Selling Price\"\r\n                    oninput=\"this.value = this.value.replace(/[^0-9-,.;'&/.() ]|^ /g,'')\"\r\n                  />\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"49.5%\">\r\n                <mat-hint>Distance Run</mat-hint>\r\n                <mat-card class=\"widthCard inputMatName\">\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"distanceRun\" autocomplete=\"off\"\r\n                    name=\"a_sig\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Distance Run\"\r\n                    oninput=\"this.value = this.value.replace(/[^0-9-,.;'&/.() ]|^ /g,'')\"\r\n                  />\r\n                </mat-card>\r\n              </div>\r\n            </div>\r\n            <!-- <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" > -->\r\n            <!-- <div class=\"flex-grow-1\">\r\n\r\n                            <mat-hint>Hypothecated Branch</mat-hint>\r\n                            <mat-card class=\"widthCard inputMatName\">\r\n                              <mat-select name=\"mod\" disableOptionCentering>\r\n                                <mat-option value=\"\">Select</mat-option>\r\n                                <mat-option>test</mat-option>\r\n                              </mat-select>\r\n                            </mat-card>\r\n                           \r\n                          </div>\r\n                           -->\r\n\r\n            <!--    <div class=\"flex-grow-1\">\r\n                              <mat-hint>Make MM/YYYY</mat-hint>\r\n                                <div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"start center\">\r\n                                  <div fxFlex=\"30\">\r\n                                  \r\n                                    <mat-card class=\"widthCard inputMatName1\" class=\"full-width\">\r\n                                     <mat-select name=\"mod\" disableOptionCentering>\r\n                                       <mat-option>Make MM</mat-option>\r\n                                       <mat-option value=\"10px\">10</mat-option>\r\n                                             <mat-option value=\"12\">12</mat-option>\r\n                                             <mat-option value=\"14\">14</mat-option>\r\n                                             <mat-option value=\"16\">16</mat-option>\r\n                                             <mat-option value=\"18\">18</mat-option>\r\n                                             <mat-option value=\"20\">20</mat-option>\r\n                                     </mat-select>\r\n                                   </mat-card>\r\n                               \r\n                                 </div>\r\n                                 <div fxFlex=\"flex-grow-1\">\r\n                                  \r\n                                  <mat-card class=\"widthCard inputMatName1\" class=\"full-width\">\r\n                                   <mat-select name=\"mod\" disableOptionCentering>\r\n                                     <mat-option>Make YYYY</mat-option>\r\n                                     <mat-option value=\"10px\">10</mat-option>\r\n                                           <mat-option value=\"12\">12</mat-option>\r\n                                           <mat-option value=\"14\">14</mat-option>\r\n                                           <mat-option value=\"16\">16</mat-option>\r\n                                           <mat-option value=\"18\">18</mat-option>\r\n                                           <mat-option value=\"20\">20</mat-option>\r\n                                   </mat-select>\r\n                                 </mat-card>\r\n                             \r\n                               </div>\r\n                                  \r\n                                </div>\r\n                               \r\n                            </div>\r\n\r\n                            \r\n                            \r\n                          \r\n                            \r\n\r\n                        </div>-->\r\n          </div>\r\n          \r\n          <!-- Insurance -->\r\n\r\n          <mat-card-title>\r\n            <fieldset class=\"alignChange\">\r\n            <legend  visible=\"true\">Insurance Details</legend>\r\n            </fieldset>\r\n    \r\n          </mat-card-title>\r\n\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutAlign=\"start center\"\r\n            class=\"mt-16\"\r\n          >\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"flex-grow-1\">\r\n                <mat-hint>Insurance Details</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    formControlName=\"insuranceDetails\" autocomplete=\"off\"\r\n                    matInput\r\n                    name=\"a_sig\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Insurance Details\"\r\n                    oninput=\"this.value = this.value.replace(/[^A-Za-z0-9-,.;'&/.() ]|^ /g,'')\"\r\n                  />\r\n                </mat-card>\r\n                <!-- <mat-error\r\n                  *ngIf=\"\r\n                    !vehicleForm.get('insuranceDetails').valid &&\r\n                    vehicleForm.get('insuranceDetails').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Insurance Details is Required!\r\n                </mat-error> -->\r\n              </div>\r\n\r\n              <div class=\"flex-grow-1\">\r\n                <mat-hint>Policy Number</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    formControlName=\"policyNumber\" autocomplete=\"off\"\r\n                    minlength=\"6\"\r\n                    maxlength=\"9\"\r\n                    (keypress)=\"_keyPress($event)\"\r\n                    matInput\r\n                    name=\"a_sig\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Policy Number\"\r\n                    (ngModelChange)=\"changeInput($event)\"\r\n                  />\r\n                </mat-card>\r\n                <!-- <mat-error\r\n                  *ngIf=\"\r\n                    vehicleForm.get('policyNumber').touched && policyNumber\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; policy number is required!\r\n                </mat-error> -->\r\n                <mat-error\r\n                  *ngIf=\"\r\n                    !vehicleForm.get('policyNumber').valid &&\r\n                    vehicleForm.get('policyNumber').errors.minlength\r\n                  \"\r\n                >\r\n                  Enter the valid policy number {{ minlength }} .\r\n                </mat-error>\r\n              </div>\r\n\r\n              <div class=\"flex-grow-1\">\r\n                <mat-hint>Premium Amount</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    formControlName=\"premiunAmount\" autocomplete=\"off\"\r\n                    (keypress)=\"_keyPress($event)\"\r\n                    matInput\r\n                    name=\"a_sig\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Premium Amount\"\r\n                  />\r\n                </mat-card>\r\n                <!-- <mat-error\r\n                  *ngIf=\"\r\n                    !vehicleForm.get('premiunAmount').valid &&\r\n                    vehicleForm.get('premiunAmount').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Premium Amount is Required!\r\n                </mat-error> -->\r\n              </div>\r\n            </div>\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n              <div class=\"flex-grow-1\">\r\n                <mat-hint>Insurance Company</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    formControlName=\"insuranceCompany\" autocomplete=\"off\"\r\n                    matInput\r\n                    name=\"a_sig\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Insurance Company\"\r\n                    oninput=\"this.value = this.value.replace(/[^A-Za-z,.;'&/.() ]|^ /g,'')\"\r\n                  />\r\n                </mat-card>\r\n              </div>\r\n\r\n              <div class=\"flex-grow-1\">\r\n                <mat-hint>Policy Commencement Date *</mat-hint>\r\n                <mat-card class=\"inputMatName1\" style=\"height: 48px\">\r\n                  <input\r\n                    matInput\r\n                    name=\"policyCommencementDate\" autocomplete=\"off\"\r\n                    class=\"alignment\"\r\n                    formControlName=\"policyCommencementDate\"\r\n                    readonly\r\n                    placeholder=\"DD/MM/YYYY\"\r\n                    [matDatepicker]=\"appDatepicker1\"\r\n                    disableOptionCentering\r\n                  />\r\n                  <div fxFlex=\"8%\" id=\"toggle\">\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"appDatepicker1\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                  </div>\r\n                  \r\n                </mat-card>\r\n                <!-- <mat-error\r\n                  *ngIf=\"\r\n                    !vehicleForm.get('policyCommencementDate').valid &&\r\n                    vehicleForm.get('policyCommencementDate').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Policy Commencment Date is Required!\r\n                </mat-error> -->\r\n              </div>\r\n              <!-- <div class=\"flex-grow-1\">\r\n                          <mat-hint>Application Date*</mat-hint>\r\n                          <mat-card class=\"inputMatName1\" style=\"height:48px;\">\r\n                              <input matInput name=\"date\" class=\"alignment\" formControlName=\"applicationDate\" readonly\r\n                              [matDatepicker]=\"appDatepicker\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n                            \r\n                              <div fxFlex=\"8%\" id=\"toggle\">\r\n                                <mat-datepicker-toggle matSuffix [for]=\"appDatepicker\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #appDatepicker></mat-datepicker>\r\n                              </div>\r\n                          </mat-card>\r\n                         <mat-error *ngIf=\"!loanForm.get('applicationDate').valid  && loanForm.get('applicationDate').touched\">\r\n                              Application Date is Required!</mat-error>\r\n                              \r\n              \r\n                              \r\n                        </div>\r\n           -->\r\n              <div class=\"flex-grow-1\">\r\n                <mat-hint>Premium Frequency</mat-hint>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"premiunFrequency\" autocomplete=\"off\"\r\n                    name=\"premiunFrequency\"\r\n                    class=\"alignment\"\r\n                    placeholder=\"Premium Frequency\"\r\n                    oninput=\"this.value = this.value.replace(/[^A-Za-z,.;'&/.() ]|^ /g,'')\"\r\n                  />\r\n                </mat-card>\r\n                <!-- <mat-error\r\n                  *ngIf=\"\r\n                    !vehicleForm.get('premiunFrequency').valid &&\r\n                    vehicleForm.get('premiunFrequency').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Premium Frequency is Required!\r\n                </mat-error> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div fxLayout=\"row\">\r\n            <div fxFlex=\"100\" fxFlex.gt-xs=\"49.5%\">\r\n              <div class=\"flex-grow-1\">\r\n                <mat-hint>Policy Renewal Date *</mat-hint>\r\n                <mat-card class=\"inputMatName1\">\r\n                  <input\r\n                    matInput\r\n                    name=\"policyRenewalDate\" autocomplete=\"off\"\r\n                    class=\"alignment\"\r\n                    formControlName=\"policyRenewalDate\" [min]=\"vehicleForm.get('policyCommencementDate').value\"\r\n                    readonly\r\n                    placeholder=\"DD/MM/YYYY\"\r\n                    [matDatepicker]=\"appDatepicker2\"\r\n                    disableOptionCentering\r\n                  />\r\n                  <div fxFlex=\"8%\" id=\"toggle\">\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"appDatepicker2\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #appDatepicker2></mat-datepicker>\r\n                  </div>\r\n                </mat-card>\r\n                <!-- <mat-error\r\n                  *ngIf=\"\r\n                    !vehicleForm.get('policyRenewalDate').valid &&\r\n                    vehicleForm.get('policyRenewalDate').touched\r\n                  \"\r\n                >\r\n                  &nbsp;&nbsp; Policy Renewal Date is Required!\r\n                </mat-error> -->\r\n              </div>\r\n            </div>\r\n          </div>         \r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n            fxLayoutGap=\"16px\"\r\n            class=\"mt-32\"\r\n          >\r\n            <button mat-button class=\"Backbtn\" rounded  (click)=\"goBack()\">\r\n              Back\r\n            </button>\r\n            <button\r\n              mat-raised-button class=\"Nextbtn\"\r\n              color=\"primary\"\r\n              [disabled]=\"!vehicleForm.valid\"\r\n              (click)=\"submitForm()\"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-offer-accept-reject',\r\n  templateUrl: './offer-accept-reject.component.html',\r\n  styleUrls: ['./offer-accept-reject.component.scss']\r\n})\r\nexport class OfferAcceptRejectComponent implements OnInit {\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  offerForm: FormGroup;\r\n  submitted: boolean;\r\n  isOfferAcceptReject: boolean;\r\n  loanaccountID: any;\r\n  loanInfo: any;\r\n\r\n  constructor(private api: ApiService,private formBuilder: FormBuilder, private router: Router,\r\n     private ls: LocalStoreService,private dialogService : DialogService,private snack: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isOfferAcceptReject = this .ls.getItem('OFFER_ACCEPT_REJECT_DONE');\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanaccountID = this.loanInfo.loanAccountId;\r\n    }\r\n    setTimeout(() => {\r\n      if(this.isOfferAcceptReject==false){\r\n        this.buildofferForm();\r\n        }\r\n        else{\r\n         this.getOfferAcceptReject();\r\n      }\r\n    }, 10);\r\n  \r\n}\r\n\r\n     getOfferAcceptReject() {\r\n     this.api.getOfferAcceptReject('200')\r\n     .subscribe((resp: any) => {\r\n       console.log(resp);\r\n       this.buildofferForm(resp,true);\r\n   });\r\n}\r\n  buildofferForm(data?,Response?:boolean) {\r\n    console.log(data);\r\n    this.offerForm = this.formBuilder.group({\r\n      accept:[''],\r\n      applicantName: [''],\r\n      loanTenure:[0],\r\n      installmentFrequency:[''],\r\n      installmentType:[''],\r\n      principal:[0],\r\n      installmentAmount:[0],\r\n      offerIssueDate:[''],\r\n      approvedLoanAmount:[0],\r\n      rateOfInterest:[0],\r\n      interest:[0],\r\n      charges:[0],\r\n      generateOffer:[''],\r\n      offerExpiryDate:[''],   \r\n      dateOfOfferAcceptOrReject:[''],\r\n      loanAccountId:[10],\r\n      offerAcceptOrRejectId:['']\r\n    });\r\n }\r\n\r\n_keyPress1(event: any) {\r\n  const pattern = /^[0-9]*\\.?[0-9]*$/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  if (!pattern.test(inputChar)) {\r\n    event.preventDefault();\r\n  }\r\n  const input = event.target.value;\r\n  if (input.length === 0 && event.which === 48) {\r\n    event.preventDefault();\r\n  }\r\n}\r\nletterOnly(event) {\r\n  var charCode = event.keyCode;\r\n  if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n    return true;\r\n  else\r\n    return false;\r\n} \r\ngoBack() {\r\n  this.router.navigate(['loan/account/account-creation-stage']);\r\n}\r\n\r\n\r\nonSubmit() {\r\n  this.offerForm.value.offerIssueDate= moment(this.offerForm.value.offerIssueDate).format('YYYY-MMM-DD HH:mm:ss');\r\n  this.offerForm.value.generateOffer= moment(this.offerForm.value.generateOffer).format('YYYY-MMM-DD HH:mm:ss\"');\r\n  this.offerForm.value.offerExpiryDate= moment(this.offerForm.value.offerExpiryDate).format('YYYY-MMM-DD HH:mm:ss');\r\n  this.offerForm.value.dateOfOfferAcceptOrReject= moment(this.offerForm.value.dateOfOfferAcceptOrReject).format('YYYY-MMM-DD HH:mm:ss');\r\n    this.api.saveOfferAcceptReject(this.offerForm.value).subscribe((data: any) => {\r\n      console.log(data);\r\n     \r\n      if (data === 200 || data !== null) {\r\n        this.snack.open(' Credit Details Saved!', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.ls.setItem('OFFER_ACCEPT_REJECT_DONE', true);\r\n        this.router.navigate(['loan/account/account-creation-stage/account-create-details']);\r\n      }\r\n      // else if (data === 500) {\r\n      //   this.snack.open('Not able to connect to server!', 'INTERNAL SERVER ERROR', {\r\n      //     duration: 4000,\r\n      //     verticalPosition: 'top',\r\n      //     horizontalPosition: 'right'\r\n      //   });\r\n      // }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n \r\n\r\n}\r\n","<div fxLayout=\"column\">\r\n  <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/offer.png\" alt=\"\" class=\"w-80\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"card-title-text\"><h1>Offer Accept/Reject</h1></div>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div fxLayout=\"column\">\r\n  <form fxLayout=\"column\" [formGroup]=\"offerForm\">\r\n      <div fxFlex=\"100\">\r\n          <mat-card fxLayout=\"column\" style=\"border-radius: 30px; margin-right: 1.5cm;\">\r\n              <mat-card-title >\r\n                  <div class=\"card-title-text\">Offer Accept/Reject<mat-divider></mat-divider></div>\r\n              </mat-card-title>\r\n\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Applicant Name*</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <input matInput name=\"applicantName\"  class=\"alignment\" type=\"text\" \r\n                          formControlName=\"applicantName\" placeholder=\"Applicant Name\"/>\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Approved Loan Amount*</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                        <input matInput  class=\"alignment\" type=\"text\" name=\"loanAmmount\"\r\n                         (keypress)=\"_keyPress1($event)\"  \r\n                         maxlength=\"16\" formControlName=\"approvedLoanAmount\" />\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n              </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Loan Tenure</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"loanTenure\"\r\n                          formControlName=\"loanTenure\"  placeholder=\"in years\"/>\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Installment Type</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                        <input matInput  class=\"alignment\" type=\"text\" name=\"installmentType\"\r\n                        formControlName=\"installmentType\" />\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n              </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Installment Frequency</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"installmentFrequency\"\r\n                          formControlName=\"installmentFrequency\" />\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Rate of Interest (in%)</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                        <input matInput  class=\"alignment\" type=\"text\" name=\"loanAmmount\"\r\n                        formControlName=\"rateOfInterest\"  />\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n              </div>\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Approved Loan Amount</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                          <input matInput  class=\"alignment\" type=\"text\" name=\"approvedloanAmmount\"\r\n                          formControlName=\"approvedLoanAmount\" />\r\n                      </mat-card>\r\n                     \r\n                    </div>\r\n                    <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Loan Tenure</label>\r\n                      <mat-card class=\"inputMatName\">\r\n                        <input matInput  class=\"alignment\" type=\"text\" name=\"loanAmmount\"\r\n                        formControlName=\"loanTenure\"   />\r\n                      </mat-card>\r\n                    \r\n                     \r\n                    </div>\r\n              </div>\r\n\r\n            <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <label  class=\"hint\">Installment Type</label>\r\n                  <mat-card class=\"inputMatName\">\r\n                      <input matInput  class=\"alignment\" type=\"text\" name=\"installmentType\"\r\n                      formControlName=\"installmentType\"  />\r\n                  </mat-card>\r\n                 \r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <label  class=\"hint\">Rate of Interest</label>\r\n                  <mat-card class=\"inputMatName\">\r\n                    <input matInput  class=\"alignment\" type=\"text\" name=\"loanAmmount\"\r\n                    formControlName=\"rateOfInterest\"  />\r\n                  </mat-card>\r\n                 \r\n                </div>\r\n          </div>\r\n\r\n          <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <label  class=\"hint\">Principal</label>\r\n                <mat-card class=\"inputMatName\">\r\n                    <input matInput  class=\"alignment\" type=\"text\" name=\"principal\"\r\n                    formControlName=\"principal\"/>\r\n                </mat-card>\r\n               \r\n              </div>\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                <label  class=\"hint\">Interest</label>\r\n                <mat-card class=\"inputMatName\">\r\n                  <input matInput  class=\"alignment\" type=\"text\" name=\"interest\"\r\n                  formControlName=\"interest\" />\r\n                </mat-card>\r\n               \r\n              </div>\r\n        </div>\r\n\r\n        <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n          <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n              <label  class=\"hint\">Installment Amount</label>\r\n              <mat-card class=\"inputMatName\">\r\n                  <input matInput  class=\"alignment\" type=\"text\" name=\"installmentAmount\"\r\n                  formControlName=\"installmentAmount\"/>\r\n              </mat-card>\r\n             \r\n            </div>\r\n            <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n              <label  class=\"hint\">Charges</label>\r\n              <mat-card class=\"inputMatName\">\r\n                <input matInput  class=\"alignment\" type=\"text\" name=\"charges\"\r\n                formControlName=\"charges\" />\r\n              </mat-card>\r\n             \r\n            </div>\r\n      </div>\r\n\r\n              <div fxFlex=\"70%\" fxLayoutGap=\"10px\">\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Offer Issue Date</label>\r\n                      <mat-card class=\"inputMatLastName\" style=\"height: 54px;\">\r\n                            <input matInput  id=\"dob\" class=\"alignment\" name=\"OpinionDate\" readonly\r\n                              [matDatepicker]=\"picker\"  value=\"OpinionDate\" placeholder=\"DD/MM/YYYY\"\r\n                              formControlName=\"offerIssueDate\">\r\n                          \r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker\" >\r\n                              </mat-datepicker-toggle>\r\n            \r\n                              <mat-datepicker #picker>\r\n                              </mat-datepicker>\r\n                            \r\n            \r\n                       </mat-card>\r\n        \r\n                  </div>\r\n                  <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                      <label  class=\"hint\">Generate Offer</label>\r\n                      <mat-card class=\"inputMatName\" style=\"height: 54px;\">\r\n                        <input matInput  id=\"dob\" class=\"alignment\" name=\"OpinionDate\" readonly\r\n                        [matDatepicker]=\"datapicker\"  value=\"OpinionDate\" placeholder=\"DD/MM/YYYY\"\r\n                        formControlName=\"generateOffer\">\r\n                   \r\n                        <mat-datepicker-toggle matSuffix [for]=\"datapicker\" >\r\n                        </mat-datepicker-toggle>\r\n      \r\n                        <mat-datepicker #datapicker>\r\n                        </mat-datepicker>\r\n                   \r\n                      </mat-card>\r\n                   </div>\r\n                       \r\n              </div>\r\n\r\n\r\n              <!--sub page-->\r\n              \r\n              <fieldset style=\"border-top: 1px solid lightgray;margin-left: 20px; margin-right: 20px;\">\r\n                <legend visible=\"true\">Offer Accept/Reject</legend>\r\n\r\n                <div fxLayout=\"row wrap\">\r\n              <div fxFlex=\"100%\" fxLayoutGap=\"10px\">\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <label  class=\"hint\">Customer Response</label>\r\n                    <mat-card class=\"inputMatLastName\" >\r\n                          <mat-select matInput disableOptionCentering class=\"alignment\" name=\"customerResponse\"\r\n                             placeholder=\"\" formControlName=\"accept\">\r\n                             <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option value=\"accept\">Accept</mat-option>\r\n                          </mat-select>\r\n          \r\n                     </mat-card>\r\n      \r\n                </div>\r\n                <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                    <label  class=\"hint\">Date Of Offer Accept/Reject</label>\r\n                    <mat-card class=\"inputMatName\" style=\"height: 54px;\">\r\n                      <input matInput  id=\"dob\" class=\"alignment\" name=\"OpinionDate\" readonly\r\n                      [matDatepicker]=\"appDatapicker\"  value=\"OpinionDate\" placeholder=\"DD/MM/YYYY\"\r\n                      formControlName=\"dateOfOfferAcceptOrReject\">\r\n                  \r\n                      <mat-datepicker-toggle matSuffix [for]=\"appDatapicker\" >\r\n                      </mat-datepicker-toggle>\r\n    \r\n                      <mat-datepicker #appDatapicker>\r\n                      </mat-datepicker>\r\n                 \r\n                    </mat-card>\r\n                 </div>\r\n               \r\n                  \r\n            </div>\r\n\r\n            <div fxFlex=\"100%\" fxLayoutGap=\"10px\">\r\n              <div class=\"flex-grow-1\" fxFlex=\"50%\" >\r\n                  <label  class=\"hint\">Offer Expiry Date</label>\r\n                  <mat-card class=\"inputMatName\" style=\"height: 54px;\">\r\n                    <input matInput  id=\"dob\" class=\"alignment\" name=\"offerExpiryDate\" readonly\r\n                    [matDatepicker]=\"expiryDate\"  value=\"OpinionDate\" placeholder=\"DD/MM/YYYY\"\r\n                    formControlName=\"offerExpiryDate\">\r\n                \r\n                    <mat-datepicker-toggle matSuffix [for]=\"expiryDate\" >\r\n                    </mat-datepicker-toggle>\r\n  \r\n                    <mat-datepicker #expiryDate>\r\n                    </mat-datepicker>\r\n                \r\n                  </mat-card>\r\n                 \r\n                </div>\r\n                \r\n              \r\n          </div>\r\n        </div>\r\n    </fieldset>\r\n\r\n\r\n                \r\n              \r\n                 \r\n              \r\n                \r\n              \r\n              \r\n             \r\n        \r\n    \r\n\r\n\r\n\r\n\r\n\r\n          </mat-card>\r\n\r\n      </div>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"16px\" class=\"mt-32\">\r\n  \r\n        <button mat-button (click)=\"goBack()\" color=\"primary\">\r\n          Back\r\n        </button>\r\n        <button mat-raised-button (click)=\"onSubmit()\" color=\"primary\" [disabled]=\"offerForm.invalid\">\r\n          Done\r\n        </button>\r\n        <!-- [disabled]=\"accountForm.invalid\"  || isCifValid  -->\r\n      </div>\r\n  </form>\r\n\r\n</div>","\r\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AssessmentReportSummary } from 'app/shared/models/AssessmentReportSummary';\r\nimport { QualitativeScoreboardSummary } from 'app/shared/models/qualitativeScoreboardSummary';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\nimport { AccountService } from '../../account.service';\r\n// import { AccountService } from '../../account.service';\r\n// import { UrlService } from '../../url.service';\r\n\r\n@Component({\r\n   selector: 'app-loan-qualitative-scoreboard',\r\n   templateUrl: './loan-qualitative-scoreboard.component.html',\r\n   styleUrls: ['./loan-qualitative-scoreboard.component.scss']\r\n})\r\nexport class LoanQualitativeScoreboardComponent implements OnInit {\r\n  qsForm: FormGroup;\r\n  qsFormArray: FormArray;\r\n  accountId: any;\r\n  accountType: any;\r\n  loggedInUser: any;\r\n  sbMultiSelectAnswer: any[] = [];\r\n  scoreboardQuestionsArray: { applicantId: any, scoreCardDetails: any[],scorecardQuestion:any }[] = [];\r\n  scoreCardMappingArray: { applicantId: any, scoreCardDetails: { scoreCardQuestionId: any, scorecardAnswer: any, scoreCardMappingId: any ,scoreData :any }[] }[] = [];\r\n  numberOfApplicant = new FormControl('');\r\n  scoreCardId = new FormControl('');\r\n  assessmentReportSummary: AssessmentReportSummary;\r\n  qualitativeScoreboardSummary: QualitativeScoreboardSummary;\r\n  isDataSaved: boolean = false;\r\n  disableDoneBtn: boolean = true;\r\n  anyErrorExist: boolean = false;\r\n  isQualitativeScreen: boolean = false;\r\n  isQualitative: any;\r\n  previousUrl: string = '';\r\n  showEditOption: boolean = false;\r\n  overDraftByStatus:boolean;\r\n  no_of_applicants: any;\r\n  isLoanQualitativeScoreboard:boolean=false;\r\n  loanAccountId: any;\r\n  loanaccountID: any;\r\n  sA: any;\r\n  scoreCardDetails:any;\r\n  loanInfo: any;\r\n  isLoanAssessmentDetails: any;\r\n  inputValue: any;\r\n  scorevalue: any;\r\n  applicantId: any;\r\n  sbSwlwctAnswer: any[];\r\n  sbSelectAnswer1: any;\r\n  sbSelectAnswer: string=\"\";\r\n  constructor\r\n    (\r\n      private router: Router,\r\n      private api: ApiService,\r\n      private snack: MatSnackBar,\r\n      private fb: FormBuilder,\r\n      private ls: LocalStoreService,\r\n      //private accountService: AccountService,\r\n      private elRef: ElementRef,\r\n      private renderer: Renderer2,\r\n      //private urlService: UrlService,\r\n      private cdr:ChangeDetectorRef,private accountService:AccountService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loanaccountID = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanAccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    console.log(\"LOAN ACCOUNT ID:: \",this.loanaccountID);\r\n    this.accountType = this.ls.getItem('accountType');\r\n    this.loggedInUser = this.ls.getItem('ICUST_USER');\r\n    this.isQualitative = localStorage.getItem('Status');\r\n    this.no_of_applicants = this.ls.getItem('NO_OF_APPLICANTS');\r\n    console.log(this.no_of_applicants);\r\n    console.log(this.loggedInUser);\r\n    let isScoreCardScreen: boolean = JSON.parse(this.ls.getItem('ASSESSMENT_QA_DONE'));\r\n\r\n    this.isLoanQualitativeScoreboard=this.ls.getItem('LOAN_QUALITATIVE_SCOREBOARD_DONE');\r\n    \r\n    if (this.loanaccountID != null && this.isLoanQualitativeScoreboard) {       \r\n      this.showEditOption = true;\r\n      this.isQualitativeScreen = true;\r\n      this.getAllQualitative();\r\n    } else {\r\n      console.log(\"else\");\r\n      this.showEditOption = false;\r\n      this.loadData();\r\n    }\r\n  //  this.getAccountDetails();\r\n \r\n  //  this.accountType == \"current\" ? this.accountType = \"saving\" : this.accountType = \"saving\";//This line because we have backend data only for savings. This line is temporary.\r\n  // this.accountType == \"current\" ? this.accountType = \"loan\" : this.accountType = \"loan\";\r\n   /// this.accountType == \"current\" ? this.accountType = \"Home Loan\" : this.accountType = \"Home Loan\";\r\n   \r\n    // this.urlService.previousUrl$\r\n    //   .subscribe((previousUrl: string) => {\r\n    //     this.previousUrl = previousUrl\r\n    //   });\r\n\r\n   \r\n\r\n  }\r\n  counter(i: number) {\r\n    return new Array(i);\r\n}\r\n  loadData(){\r\n    this.api.getScorecardQuestions(this.accountType).subscribe((response) => {  \r\n      console.log(response);\r\n\r\n    \r\n      console.log(this.no_of_applicants);\r\n      if(!this.no_of_applicants && response){\r\n        this.no_of_applicants=response.length;\r\n      }\r\n\r\n\r\n      for (let n = 0; n < this.no_of_applicants; n++) {\r\n          this.scoreboardQuestionsArray.push({scorecardQuestion: response,applicantId: n + 1, scoreCardDetails: response});\r\n          let mapDataAns: any[] = [];\r\n          console.log(\"data\",this.scoreCardDetails);\r\n          for (let p = 0; p < response.length; p++){\r\n            mapDataAns.push({scoreCardQuestionId: response[p].scoreCardQuestionId, scorecardAnswer: null, scoreCardMappingId: null});\r\n      \r\n          }\r\n          this.scoreCardMappingArray.push({applicantId: n + 1, scoreCardDetails: mapDataAns});\r\n      }\r\n\r\n      console.log(\"data\",this.scoreCardDetails);\r\n      console.log(\"ques:\",this.scoreboardQuestionsArray)\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  getAllQualitative() {\r\n    console.log(this.isQualitativeScreen);\r\n      this.api.getLoanQualitativeScorecardDetails(this.loanaccountID).subscribe((response) => {\r\n      this.qualitativeScoreboardSummary = response;\r\n      console.log(this.qualitativeScoreboardSummary.scoreCardId + \" : \" + this.qualitativeScoreboardSummary.numberOfApplicant);\r\n      this.scoreCardId.setValue(this.qualitativeScoreboardSummary.scoreCardId);\r\n      this.numberOfApplicant.setValue(this.qualitativeScoreboardSummary.numberOfApplicant);\r\n      console.log(\"scorecard id: \", this.scoreCardId)\r\n      console.log(\"numberOfApplicant : \", this.numberOfApplicant)\r\n      console.log(this.qualitativeScoreboardSummary);\r\n      this.scoreboardQuestionsArray = [];\r\n      // for (let i = 0; i < this.qualitativeScoreboardSummary.scoreCardMapping.length; i++) {\r\n      //   if (this.qualitativeScoreboardSummary.scoreCardMapping[i].attributeType == \"checkbox\") {\r\n      //     var scAns = this.qualitativeScoreboardSummary.scoreCardMapping[i].scorecardAnswer.split(',');\r\n\r\n      //     for (let m = 0; m < scAns.length; m++) {\r\n      //       this.sbMultiSelectAnswer.push(scAns[m]);\r\n      //       //  this.sbMultiSelectAnswer[this.qualitativeScoreboardSummary.icustScorecardMapping[i].scoreCardQuestionId].selectedAnswer.push(scAns[m]);\r\n      //     }\r\n      //     console.log(this.sbMultiSelectAnswer);\r\n         \r\n      //   }\r\n      //   this.scoreCardMappingArray = this.scoreboardQuestionsArray;\r\n      // }\r\n      for (let i = 0; i < this.qualitativeScoreboardSummary.scoreCardMapping.length; i++) {\r\n        console.log(\"inside for\", this.qualitativeScoreboardSummary.scoreCardMapping)\r\n        this.api.getScorecardQuestions(this.accountType).subscribe((response) => {\r\n          console.log(response);\r\n  \r\n          console.log(this.no_of_applicants);\r\n          if (!this.no_of_applicants && response) {\r\n            this.no_of_applicants = response.length;\r\n          }\r\n  \r\n          for (let n = 0; n < this.no_of_applicants; n++) {\r\n            this.scoreboardQuestionsArray.push({ scorecardQuestion: response, applicantId: n + 1, scoreCardDetails: response });\r\n            console.log(this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails.length)\r\n            for (let j = 0; j < this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails.length; j++) {\r\n              console.log(this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails)\r\n              var scAns = this.qualitativeScoreboardSummary.scoreCardMapping[i].scoreCardDetails;\r\n              console.log(scAns)\r\n             \r\n              \r\n              this.sbMultiSelectAnswer.push(scAns[j].scorecardAnswer);              \r\n              \r\n              // for(let k=0; k < this.sbMultiSelectAnswer.length; k++){\r\n              //   if(this.sbMultiSelectAnswer[0]){\r\n              //     this.sbSelectAnswer = this.sbMultiSelectAnswer[2];\r\n              //     console.log(this.sbSwlwctAnswer);\r\n              //   }\r\n              //   else if(this.sbMultiSelectAnswer[0]){\r\n              //     this.sbSelectAnswer1 = this.sbMultiSelectAnswer[0];\r\n              //     console.log(this.sbSelectAnswer1);\r\n              //   }\r\n              // }\r\n              console.log(this.sbMultiSelectAnswer);\r\n            }\r\n          }\r\n  \r\n          console.log(\"data\", this.scoreCardDetails);\r\n          console.log(\"ques:\", this.scoreboardQuestionsArray)\r\n          this.cdr.markForCheck();\r\n        });\r\n  \r\n        this.scoreCardMappingArray = this.scoreboardQuestionsArray;\r\n      }\r\n\r\n      console.log(this.scoreboardQuestionsArray, \"scoreBoardQuestionArray\");\r\n      this.disableDoneBtn=false;\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  insertData(id: any, answer: any, qtype: string, mapId: any,index:any, applcantId: any) {\r\n    console.log(\"Answer: \",answer,index, applcantId);\r\n    console.log('score vaue', this.scorevalue);\r\n    if (qtype == 'checkbox') {\r\n      answer = answer.toString();\r\n    }\r\n    let dataUpdated: boolean = false ;\r\n    let aplcntExists: boolean = false ;\r\n    for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n      if (this.scoreCardMappingArray[m].applicantId == applcantId ) {\r\n        for (let n = 0; n < this.scoreCardMappingArray[m].scoreCardDetails.length; n++) {\r\n          console.log(n, this.scoreCardMappingArray[m].scoreCardDetails[n]);\r\n          if (this.scoreCardMappingArray[m].scoreCardDetails[n].scoreCardQuestionId == id) {\r\n            this.scoreCardMappingArray[m].scoreCardDetails[n].scorecardAnswer = answer;\r\n            dataUpdated = true;\r\n          }\r\n        }\r\n        aplcntExists = true ;\r\n      }\r\n    }\r\n    if (!dataUpdated) {\r\n      let dataOject: any = {};\r\n      dataOject.scoreCardQuestionId = id;\r\n      dataOject.scorecardAnswer = answer;\r\n      if (mapId != null) {\r\n        dataOject.scoreCardMappingId = mapId;\r\n\r\n      }\r\n      if (!aplcntExists) {\r\n        let idx = this.scoreCardMappingArray.length ;\r\n        this.scoreCardMappingArray.push({applicantId: applcantId, scoreCardDetails: dataOject});\r\n      } else {\r\n        for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n          if (this.scoreCardMappingArray[m].applicantId == applcantId ) {\r\n              this.scoreCardMappingArray[m].scoreCardDetails.push(dataOject);\r\n              console.log(this.scoreCardMappingArray[m].scoreCardDetails);\r\n          }\r\n        }\r\n      }\r\n      // console.log(dataOject,\"Dataobject\");\r\n    }\r\n\r\n    if (this.scoreCardMappingArray.length == this.scoreboardQuestionsArray.length) {\r\n      let disableDoneBtn: number = 0;\r\n      for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n        for (let i = 0; i < this.scoreCardMappingArray[m].scoreCardDetails.length; i++) {\r\n          let answerIs: any = this.scoreCardMappingArray[m].scoreCardDetails[i].scorecardAnswer;\r\n          if (answerIs == '' || answerIs == null || answerIs == undefined) {\r\n            disableDoneBtn++;\r\n          }\r\n        }\r\n      }\r\n      if (disableDoneBtn > 0) {\r\n        this.disableDoneBtn = true;\r\n      }\r\n      else if (this.anyErrorExist == false && disableDoneBtn == 0) {\r\n        this.disableDoneBtn = false;\r\n      }\r\n    }\r\n    console.log(\"Map Array: \", this.scoreCardMappingArray)\r\n    \r\n  }\r\n\r\n  validateInputValue(inputValue: any, index: any, validationName: string) {\r\n    // console.log(inputValue, index);\r\n    let eleid: any = '#inputError' + index;\r\n    if (inputValue == '' || inputValue == null || inputValue == undefined) {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n    }\r\n    else {\r\n      if (!isNaN(inputValue) && validationName == \"Name\") {\r\n        this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n        this.anyErrorExist = true;\r\n      }\r\n      else {\r\n        this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'hidden');\r\n        this.anyErrorExist = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  validateSelectValue(selectValue: any, index: any) {\r\n    // console.log(selectValue, index);\r\n    let eleid: any = '#selectError' + index;\r\n    if (selectValue == '' || selectValue == null || selectValue == undefined) {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'visible');\r\n    }\r\n    else {\r\n      this.renderer.setStyle(this.elRef.nativeElement.querySelector(eleid), 'visibility', 'hidden');\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate([\"/loan/account/assessment/list\"]);\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n  let inputChar = String.fromCharCode(event.charCode);\r\n  console.log(\"inputChar\",inputChar);\r\n  inputChar = inputChar.toString();\r\n  console.log(\"inputChar1\",inputChar);\r\n  inputChar=inputChar\r\n  if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n  }  \r\n  }\r\n scoreCardValue(event){  \r\n  console.log(event.target.value);\r\n  this.scorevalue = event.target.value;\r\n  this.applicantId = this.scoreboardQuestionsArray[0].applicantId;\r\n   this.saveData()\r\n }\r\n saveData(){\r\n  console.log(\"scoreValue\" , this.scorevalue);  \r\n  for (let m = 0; m < this.scoreCardMappingArray.length; m++) {\r\n      if (this.scoreCardMappingArray[m].applicantId == this.applicantId ) {\r\n        for (let n = 0; n < this.scoreCardMappingArray[m].scoreCardDetails.length; n++) {\r\n          console.log(n, this.scoreCardMappingArray[m].scoreCardDetails[n]);\r\n         \r\n            this.scoreCardMappingArray[m].scoreCardDetails[n].scoreData = this.scorevalue;\r\n\r\n            console.log(this.scoreCardMappingArray[m].scoreCardDetails[n].scoreData);\r\n            \r\n        }\r\n        \r\n      }\r\n    }\r\n  \r\n }\r\n\r\n  getAllData(id) {\r\n    this.api.getAssessmentReportDetails(id).subscribe((response) => {\r\n      this.assessmentReportSummary = response;\r\n      console.log(this.assessmentReportSummary);\r\n    });\r\n  }\r\n  saveQualitativeScore(){\r\n    let submitData: any = {};\r\n    console.log(this.no_of_applicants);\r\n    let numberOfApplicant = this.no_of_applicants;\r\n    submitData.loanAccountId=this.loanaccountID;    \r\n    // submitData.loanAccountId = this.loanAccountId? this.loanAccountId : 999612;// loanAccountId: this.loanaccountID,\r\n    submitData.numberOfApplicant = numberOfApplicant;\r\n    submitData.scoreCardId = this.scoreCardId.value;\r\n    submitData.loggedInUser = 123;\r\n    submitData.accountType=\"loan\";\r\n    \r\n    submitData.scoreCardMapping = this.scoreCardMappingArray;\r\n    console.log(submitData);\r\n    this.api.saveQualitativeScorecard(submitData).subscribe((resp) => {\r\n       console.log(\"data\",submitData.loanaccountID);\r\n      this.snack.open('Loan Qualitative Scoreboard Saved!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n      // console.log(resp);\r\n      this.isDataSaved = true;\r\n      // this.ls.setItem('LOAN_QUALITATIVE_SCOREBOARD_DONE', true);\r\n      // this.disableDoneBtn=false\r\n    //  this.accountService.refresh.next();\r\n    \r\n    }, err => {\r\n      this.snack.open('Server Error!', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n    })\r\n    this.ls.setItem('LOAN_QUALITATIVE_SCOREBOARD_DONE', true);\r\n    this.accountService.refresh.next();\r\n     this.router.navigate([\"/loan/account/assessment/assessment-details\"]);\r\n  }\r\n\r\n  // done() {\r\n  //   this.ls.setItem('ASSESSMENT_QA_DONE', true);\r\n  //  // this.accountService.refresh.next();\r\n  //   this.router.navigate([`/home/application/assessment/report/${this.accountId}`]);\r\n  // }\r\n  noOfApplicant(event){\r\n    console.log(event);\r\n\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n  <div fxFlex=\"100\">\r\n    <div class=\"propic text-center\">\r\n      <img src=\"assets/images/svg/undraw_Scrum_board_re_wk7v.svg\" alt=\"\" class=\"w-90\" />\r\n    </div>\r\n    <div class=\"profile-title text-center mt-8\">\r\n      <div class=\"main-title\"><b>Qualitative Scoreboard</b></div>\r\n    </div>\r\n  </div>\r\n  <form>\r\n    <div fxFlex=\"100\" class=\"mt-24\">\r\n      <!-- <h2 class=\"ml-16\">Qualitative Scoreboard <hr/></h2> -->\r\n      <div class=\"mt-24\"></div>\r\n      <mat-card>\r\n        <mat-card-title>\r\n           <div class=\"card-title-text\">Qualitative Scoreboard</div>\r\n            <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <h4><b>Scorecard ID</b></h4>\r\n          <h4>\r\n            <input matInput name=\"ScoreCardId\" onlyNumber placeholder=\"Enter ScoreCardId\" [formControl]=\"scoreCardId\"\r\n             />\r\n             <mat-error\r\n              *ngIf=\"scoreCardId.touched && scoreCardId.value == 0\">\r\n               Please Enter valid Scorecard ID\r\n              </mat-error>\r\n          </h4>\r\n          <h3 class=\"mt-32\">Description</h3>\r\n          <p>\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting\r\n            industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n            since the 1500s, when an unknown printer took a galley of type and\r\n            scrambled it to make a type specimen book.\r\n          </p>\r\n          <div class=\"mb-8\"  *ngFor='let sA of scoreboardQuestionsArray ; let ix = index'>\r\n            <div\r\n               class=\"ml-8\">Number of Applicant \r\n                <div>{{ sA.applicantId }}</div>\r\n            </div>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n  \r\n      <div class=\"mt-32\"></div>\r\n      <mat-accordion multi=\"true\">\r\n        <mat-expansion-panel class=\"mb-8\"  *ngFor='let sA of scoreboardQuestionsArray ; let ix = index' expanded=\"true\">\r\n          <mat-expansion-panel-header>\r\n          <mat-panel-title><mat-icon class=\"check-circle\">check_circle</mat-icon> <span class=\"ml-8\">Applicant {{ sA.applicantId }}</span></mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n            <mat-card class=\"full-width qdivcard\">\r\n              <mat-card-content class=\"full-width\">\r\n                    <div>\r\n                      <h3>Questions</h3>\r\n                    </div>\r\n                    <div fxLayout=\"column\">\r\n                    <!-- <div class=\"full-width\"> --><div fxLayout=\"row\" fxFlex=\"70%\" fxLayoutGap=\"35px\">\r\n                      <div fxLayout=\"row wrap\" class=\"full-width\" *ngFor=\"let sQ of sA.scoreCardDetails; let i=index;\">\r\n                        <div class=\"full-width\">\r\n                          <div class=\"qDiv\">\r\n                            <mat-hint>{{i + 1 }}.{{sQ.scorecardQuestion}}<span class=\"redC\" *ngIf=\"sQ.isRequired\"> *</span></mat-hint>\r\n                          </div>\r\n                          <div class=\"questions-tab\"  *ngIf=\"sQ.attributeType == 'textbox'\">\r\n                            <mat-form-field class=\"questions-tab\"  appearance=\"outline\">\r\n                              <input matInput\r\n                              [required]=\"sQ.isRequired\"\r\n                              [autocomplete]=\"off\"\r\n                              [maxlength]=\"sQ.validationName == 'Name'? 25 : 50\"\r\n                              name=\"{{ 'input' + i }}\"\r\n                              id=\"{{ 'input' + i }}\"\r\n                            \r\n                              [value]=\"scoreCardMappingArray[ix].scoreCardDetails[i].scorecardAnswer == undefined? '' : scoreCardMappingArray[ix].scoreCardDetails[i].scorecardAnswer\"\r\n                              (keyup)=\"validateInputValue($event.target.value,i,sQ.validationName);insertData(sQ.scoreCardQuestionId,$event.target.value,sQ.attributeType,sQ.scoreCardMappingId,i,sA.applicantId)\"\r\n                              (click)=\"validateInputValue($event.target.value,i,sQ.validationName)\"\r\n\r\n                              >\r\n                            </mat-form-field>\r\n                            <!-- [value]=\"sQ.scorecardAnswer\" -->\r\n                            <mat-error [style.visibility]=\"'hidden'\" id=\"{{ 'inputError' + i }}\">Enter {{sQ.validationName}}</mat-error>\r\n                          </div>\r\n                          <div class=\"full-width\" *ngIf=\"sQ.attributeType == 'drop-down' || sQ.attributeType == 'checkbox'\">\r\n                            <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n                              <mat-select disableOptionCentering\r\n                              [required]=\"sQ.isRequired\"\r\n                              [name]=\"sQ.attributeType == 'checkbox'?  'multiSelect' + i  :  'select' + i \"\r\n                              [id]=\"sQ.attributeType == 'checkbox'?  'multiSelect' + i  :  'select' + i \"\r\n                              [(value)]=\"sQ.attributeType == 'checkbox'? sbMultiSelectAnswer : scoreCardMappingArray[ix].scoreCardDetails[i].scorecardAnswer\"\r\n                              (click)=\"validateSelectValue($event.target.value,i)\"\r\n                              (selectionChange)=\"validateSelectValue($event.value,i);insertData(sQ.scoreCardQuestionId,$event.value,sQ.attributeType,sQ.scoreCardMappingId,i,sA.applicantId)\"  \r\n                              [multiple]=\"sQ.attributeType == 'checkbox'\" placeholder=\"Select\"\r\n                              >\r\n                              <mat-option>Select</mat-option>\r\n                                <mat-option *ngFor=\"let sA of sQ.scorecardAnswers\" [value]=\"sA\">\r\n                                  {{sA}}\r\n                                </mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-error [style.visibility]=\"'hidden'\" id=\"{{ 'selectError' + i }}\">Please select {{sQ.validationName}}</mat-error>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                     \r\n                      <div class=\"flex-grow-1\" fxFlex=\"50%\">\r\n                        <div class=\"qDiv\">\r\n                        <mat-hint>Score<span class=\"redC\" ></span></mat-hint>\r\n                       </div>\r\n                        <div class=\"full-width\">\r\n                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                          <input matInput name=\"ScoreId\" placeholder=\"Enter the Score\" [formControl]=\"ScoreId\" (keypress)=_keyPress($event) (input)=\"scoreCardValue($event)\"\r\n                          />\r\n                          <!-- <input matInput name=\"ScoreId\" onlyNumber placeholder=\"Enter the Score\" [formControl]=\"scoreId\"\r\n                          /> -->\r\n                          </mat-form-field>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </div>\r\n  </form>\r\n  <div fxFlex=\"100\" class=\"mt-16\">\r\n    <button mat-button rounded class=\"Backbtn\" (click)=\"goBack()\">Back</button>\r\n    <span fxFlex></span>\r\n    <button mat-raised-button color=\"primary\" class=\"Nextbtn\" [disabled]=\"disableDoneBtn || !numberOfApplicant.valid\" (click)=\"saveQualitativeScore()\" type=\"button\">Next</button>\r\n  </div>  \r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-offer-issue',\r\n  templateUrl: './offer-issue.component.html',\r\n  styleUrls: ['./offer-issue.component.scss']\r\n})\r\nexport class PostOfferIssueComponent implements OnInit {\r\n  OfferIssueForm:FormGroup;\r\n\r\n  constructor(private fb:FormBuilder,private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildformGroup();\r\n  }\r\n  buildformGroup(){\r\n    this.OfferIssueForm = this.fb.group({\r\n      id:[''],\r\n      applicant_name:[''],\r\n      instalment_frequency:[''],\r\n      offer_issue_date:[''],\r\n      account_type:[''],\r\n      principal:[''],\r\n      loan_amount:[''],\r\n      loan_tenure:[''],\r\n    })\r\n  }\r\n\r\n  Done(){\r\n    this.router.navigate([`/loan/account/offerstage/list`]);\r\n  }\r\n  \r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n      <div class=\"propic text-center\">\r\n        <img src=\"assets/images/svg/Group 673.svg\" alt=\"\" class=\"w-80\" />\r\n      </div>\r\n      <div class=\"profile-title text-center mt-8\">\r\n        <div class=\"main-title\"><b>Offer Issue Details</b></div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"100\">\r\n      <mat-card class=\"p-0\">\r\n        <mat-card-title class=\"\">\r\n          <div class=\"card-title-text\">Offer Issue Information</div>\r\n          <mat-divider></mat-divider>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form *ngIf=\"OfferIssueForm\" [formGroup]=\"OfferIssueForm\">\r\n\r\n                 <div fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"start center\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Applicant Name*</mat-label>\r\n                               \r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"Applicant Name\"\r\n                                  (keypress)=\"letterOnly($event)\"\r\n                                />\r\n                              </mat-form-field> \r\n                          \r\n                          </div>\r\n    \r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Loan Tenure*</mat-label>\r\n                               \r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"5 Years\"\r\n                                  (keypress)=\"_keyPress($event)\" maxlength=\"2\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Installment Frequency</mat-label>\r\n                               \r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"Monthly\" maxlength=\"8\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Approved Loan Amount</mat-label>\r\n                               \r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"$200,000\"\r\n                                  (keypress)=\"_keyPress($event)\" maxlength=\"12\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Installment Type</mat-label>\r\n                               \r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"EMI\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Principal</mat-label>\r\n                               \r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"$500,000\"\r\n                                  (keypress)=\"_keyPress($event)\" maxlength=\"8\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Installment Amount</mat-label>\r\n                               \r\n                                <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"$120,000\"\r\n                                  (keypress)=\"_keyPress($event)\" maxlength=\"8\"\r\n                                />\r\n                              </mat-form-field> \r\n                          </div>\r\n\r\n                          <div class=\"pb-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Offer Issue Date*</mat-label>\r\n                                <input matInput name=\"date\" readonly\r\n                                  placeholder=\"12/12/2020\" [matDatepicker]=\"appDatepicker1\"/>\r\n\r\n                                <mat-datepicker-toggle matSuffix [for]=\"appDatepicker1\"></mat-datepicker-toggle>\r\n                              \r\n                              </mat-form-field>\r\n                              <mat-datepicker #appDatepicker1></mat-datepicker>\r\n                           \r\n                          </div>\r\n    \r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            \r\n                            <div class=\"pb-1\">\r\n                              <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                <mat-label>Approved Loan Amount*</mat-label>\r\n                                 <input\r\n                                  matInput\r\n                                  name=\"a_sig\"\r\n                                  placeholder=\"$500,000\" \r\n                                  (keypress)=\"_keyPress($event)\" maxlength=\"12\"\r\n                                />\r\n                              </mat-form-field> \r\n                            </div>\r\n\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Installment Type</mat-label>\r\n                                   \r\n                                    <input\r\n                                      matInput\r\n                                      name=\"a_sig\"\r\n                                      placeholder=\"EMI\"\r\n                                    />\r\n                                  </mat-form-field> \r\n                              </div>\r\n      \r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Rate Of Interest(%)*</mat-label>\r\n                                   \r\n                                    <input\r\n                                      matInput\r\n                                      name=\"a_sig\"\r\n                                      placeholder=\"9.4\"\r\n                                      (keypress)=\"_keyPress($event)\" maxlength=\"2\"\r\n                                    />\r\n                                  </mat-form-field> \r\n                            </div>\r\n\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Loan Tenure*</mat-label>\r\n                                   \r\n                                    <input\r\n                                      matInput\r\n                                      name=\"a_sig\"\r\n                                      placeholder=\"5 Years\"\r\n                                      (keypress)=\"_keyPress($event)\" maxlength=\"2\"\r\n                                    />\r\n                                  </mat-form-field> \r\n                              </div>\r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <mat-label>Rate Of Interest(%)*</mat-label>\r\n                                   \r\n                                    <input\r\n                                      matInput\r\n                                      name=\"a_sig\"\r\n                                      placeholder=\"9.4\"\r\n                                      (keypress)=\"_keyPress($event)\" maxlength=\"2\"\r\n                                    />\r\n                                  </mat-form-field> \r\n                            </div>\r\n\r\n                            <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Interest*</mat-label>\r\n                                   <input\r\n                                    matInput\r\n                                    name=\"a_sig\"\r\n                                    placeholder=\"$147,677\"\r\n                                    (keypress)=\"_keyPress($event)\" maxlength=\"8\"\r\n                                  />\r\n                                </mat-form-field> \r\n                              </div>   \r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Charges*</mat-label>\r\n                                   <input\r\n                                    matInput\r\n                                    name=\"a_sig\"\r\n                                    placeholder=\"$100\"\r\n                                    (keypress)=\"_keyPress($event)\" maxlength=\"5\"\r\n                                  />\r\n                                </mat-form-field> \r\n                              </div>   \r\n\r\n                              <div class=\"pb-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                  <mat-label>Generate Offer*</mat-label>\r\n                                   <input\r\n                                    matInput\r\n                                    name=\"a_sig\"\r\n                                    placeholder=\"With Schedule\"\r\n                                  />\r\n                                </mat-form-field> \r\n                              </div>   \r\n                            \r\n                        </div>\r\n                </div>\r\n\r\n                \r\n                <div\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"space-between center\"\r\n                fxLayoutGap=\"16px\"\r\n                class=\"mt-32\"\r\n              >\r\n                <button mat-button rounded color=\"primary\">\r\n                  Back\r\n                </button>\r\n                <button\r\n                  mat-raised-button\r\n                  color=\"primary\" (click)=\"Done()\"\r\n                >\r\n                  Done\r\n                </button>\r\n              </div>\r\n         \r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n  \r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n@Component({\r\n  selector: 'app-account-service-summary',\r\n  templateUrl: './account-service-summary.component.html',\r\n  styleUrls: ['./account-service-summary.component.scss']\r\n})\r\nexport class AccountServiceSummaryComponent implements OnInit {\r\n  maturity: any;\r\n  revision: any;\r\n  holiday: any;\r\n  cascadeVarMaturity: boolean;\r\n  cascadeVarRevison: boolean;\r\n  cascadeVarHoliday: boolean;\r\n  ignoreHolidayVarMaturity: boolean;\r\n  ignoreHolidayVarRevison: boolean;\r\n  ignoreHolidayVarHoliday: boolean;\r\n  resp: any;\r\n  loanAccountId: any;\r\n  loanInfo: any;\r\n\r\n  constructor(public dialogRef: MatDialogRef<AccountServiceSummaryComponent>, private router: Router,private api:ApiService,private ls: LocalStoreService) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.loanAccountId = this.ls.getItem('loanAccountId');\r\n    this.loanInfo = this.ls.getItem('LOAN_ACC_ARRAY');\r\n    console.log(this.loanInfo);\r\n    if(this.loanInfo){\r\n      this.loanAccountId = this.loanInfo.loanAccountId;\r\n    }\r\n    setTimeout(() => {\r\n      this.api.AccountServicesFetchById(this.loanAccountId).subscribe(resp=>{\r\n        console.log(\"resp from backend \",resp)\r\n        if(resp){\r\n          this.resp=resp;\r\n        this.maturity= resp.serviceDetails.find(obj => obj.serviceName === 'Maturity')\r\n        this.revision= resp.serviceDetails.find(obj => obj.serviceName === 'Revision')\r\n        this.holiday=resp.serviceDetails.find(obj => obj.serviceName === 'Holiday Preference')\r\n        this.cascadeVarMaturity=  this.maturity.cascadeSchedules;\r\n        this.cascadeVarRevison=   this.revision.cascadeSchedules;\r\n        this.cascadeVarHoliday= this.holiday.cascadeSchedules; \r\n        this.ignoreHolidayVarMaturity=  this.maturity.cascadeSchedules;\r\n        this.ignoreHolidayVarRevison=   this.revision.cascadeSchedules;\r\n        this.ignoreHolidayVarHoliday= this.holiday.cascadeSchedules; \r\n      }\r\n  //       cascadeSchedules: true\r\n  // holidayCheck: \"Uncheck\"\r\n  // ignoreHolidays: true\r\n  // moveAcrossMonth: \"month 2\"\r\n            })\r\n    }, 10);\r\n   \r\n  }\r\n  goToClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  goToEdit() {\r\n    this.dialogRef.close();\r\n    // this.router.navigate([`/loan/account/list/underwritingStage/legalopinion`]);\r\n\r\n     this.router.navigate([`/loan/account/application-enrichment/account-services`]);\r\n  }\r\n}","<div class=\"full-width\" style=\"height:auto\">\r\n    <div fxLayout=\"row\" class=\"contain\">\r\n        <mat-icon class=\"backIcon\" (click)=\"goToClose()\">close</mat-icon>\r\n    </div>\r\n    <div class=\"spanDiv1\">\r\n        <span class=\"paraFont\">Account Services Summary\r\n    \r\n        </span>\r\n      </div>\r\n    <div class=\"fullcard\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex=\"100%\" *ngIf=\"resp\">\r\n                <h7 fxLayout=\"row\">Statement Preferences</h7>\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Statement Cycle</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.statementCycle}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Statement Type</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.statementType}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Start Date</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{resp.startDate}}\r\n                                            </mat-hint>\r\n                                        </div>\r\n                                       \r\n                                    </ng-container>\r\n                                </div>\r\n                                <div>\r\n                                    <span layout=\"row\">\r\n                                        <hr class=\"line\" flex />\r\n                                    </span>\r\n                                </div>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <h7 fxLayout=\"row\">Holiday Preferences</h7>\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Ignore Holidays ?</mat-hint>\r\n                                            <br>\r\n                                            <div class=\"toggle\">\r\n                                                <mat-slide-toggle [checked]=\"ignoreHolidayVarHoliday\">\r\n                                                </mat-slide-toggle>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Holiday Check</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{holiday.holidayCheck}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Move Across Month</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{holiday.moveAcrossMonth}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Cascade Schedules ?</mat-hint>\r\n                                            <br>\r\n                                            <div class=\"toggle\">\r\n                                                <mat-slide-toggle [checked]=\"cascadeVarHoliday\">\r\n                                                </mat-slide-toggle>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <h7 fxLayout=\"row\">Maturity Date</h7>\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Ignore Holidays ?</mat-hint>\r\n                                            <br>\r\n                                            <div class=\"toggle\">\r\n                                                <mat-slide-toggle [checked]=\"ignoreHolidayVarMaturity\">\r\n                                                </mat-slide-toggle>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Holiday Check</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{maturity.holidayCheck}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Move Across Month</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{maturity.moveAcrossMonth}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Cascade Schedules ?</mat-hint>\r\n                                            <br>\r\n                                            <div class=\"toggle\">\r\n                                                <mat-slide-toggle [checked]=\"cascadeVarMaturity\">\r\n                                                </mat-slide-toggle>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <h7 fxLayout=\"row\">Revision Schedules</h7>\r\n                <mat-card class=\"chequecard\">\r\n                    <mat-card-content>\r\n                        <div class=\"full-width\">\r\n                            <div fxLayout=\"column\" fxLayoutGap=\"2%\" fxLayoutAlign=\"space-between none\" class=\"colAlign\">\r\n                                <div fxLayout=\"row wrap\" class=\"flex-container stretch\">\r\n                                    <ng-container>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Ignore Holidays ?</mat-hint>\r\n                                            <br>\r\n                                            <div class=\"toggle\">\r\n                                                <mat-slide-toggle [checked]=\"ignoreHolidayVarRevison\">\r\n                                                </mat-slide-toggle>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Holiday Check</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{revision.holidayCheck}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Move Across Month</mat-hint>\r\n                                            <br>\r\n                                            <mat-hint class=\"valueText\">{{revision.moveAcrossMonth}}</mat-hint>\r\n                                        </div>\r\n                                        <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n                                            <mat-hint class=\"headingText\">Cascade Schedules ?</mat-hint>\r\n                                            <br>\r\n                                            <div class=\"toggle\">\r\n                                                <mat-slide-toggle [checked]=\"cascadeVarRevison\">\r\n                                                </mat-slide-toggle>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n                <p class=\"editButton\" (click)=\"goToEdit()\">Edit</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-loan-summary-details',\r\n  templateUrl: './loan-summary-details.component.html',\r\n  styleUrls: ['./loan-summary-details.component.scss']\r\n})\r\nexport class LoanSummaryDetailsComponent implements OnInit {\r\n\r\n  userRecommendation=['Recomended For Approval', 'Recommended For Reject'];\r\n  public loanSummaryForm: FormGroup;\r\n\r\n  constructor( private router:Router, private _location: Location, private fb: FormBuilder,) { }\r\n\r\n  ngOnInit(): void {\r\n   this.buildAssessmentForm()\r\n  }\r\n \r\n  buildAssessmentForm() {\r\n    this.loanSummaryForm = this.fb.group({\r\n      applicantName: [''],\r\n      accountType: [''],\r\n      accountBranch: [''],\r\n      productCode: [''],\r\n      productName: [''],\r\n      hostProductCode: [''],\r\n      hostProductDescription: [''],\r\n      loanAmount: [''],\r\n      loanTenure: [''],\r\n      interestRate: [''],\r\n      repaymentMethod: [''],\r\n      repaymentFrequency: [''],\r\n      applicationDate: [''],\r\n      assessmentApprovalMethod: [''],\r\n      offerApprovedDate: [''],\r\n      offerAcceptedDate: [''],\r\n      approverID: [''],\r\n      stage: [''],\r\n      date: [''],\r\n      offerIssueDate: [''],\r\n      userRecommendation: [''],\r\n      userAction: [''],\r\n\r\n    });  \r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  next(){\r\n    this.router.navigate([`/loan/account-approval/offer-acceptReject-details`]);\r\n  }\r\n  \r\n  goBack(){\r\n    this.router.navigate([`/loan/account-approval/list`]);\r\n  } \r\n}\r\n","\r\n<div fxLayout=\"row\">\r\n    <div fxFlex=\"100\">\r\n        <div class=\"propic text-center\">\r\n            <img src=\"assets/images/svg/undraw_personal_information_re_vw8a.svg\" alt=\"\" class=\"w-80\" />\r\n        </div>\r\n        <div class=\"profile-title text-center mt-8\">\r\n            <div class=\"main-title\"><b>Loan Summary Details</b></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\">\r\n        <mat-card class=\"p-0\">\r\n            <mat-card-title class=\"\">\r\n                <div class=\"card-title-text\">Loan Summary Details</div>\r\n                <mat-divider></mat-divider>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"loanSummaryForm\">\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Applicant Name</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput maxlength=\"10\" formControlName=\"applicantName\"\r\n                                        placeholder=\"Applicant Name\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Account Type</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                        formControlName=\"accountType\" placeholder=\"Account type\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Account Branch</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                        formControlName=\"accountBranch\" placeholder=\"Account Branch\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Product Code</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                        formControlName=\"productCode\" placeholder=\"Product Code\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Product Name</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                        formControlName=\"productName\" placeholder=\"Product Name\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Host Product Code</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                        formControlName=\"hostProductCode\" placeholder=\"Host Product Code\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                            <div class=\"pb-1\">\r\n                                <mat-label>Host Product Description</mat-label>\r\n                                <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                    <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                        formControlName=\"hostProductDescription\"\r\n                                        placeholder=\"Host Product Description\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <mat-card-title class=\"\">\r\n                        <div class=\"card-title-text\">Application Details</div>\r\n                        <mat-divider></mat-divider>\r\n\r\n                        <mat-card>\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Loan Amount</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"loanAmount\" placeholder=\"Loan Amount\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Loan Tenure</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"loanTenure\" placeholder=\"Loan Tenure\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Interest Rate(in %)</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"interestRate\" placeholder=\"Interest Rate\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Repayment Method</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"repaymentMethod\" placeholder=\"Repayment Method\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Repayment Frequency</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"repaymentFrequency\"\r\n                                                placeholder=\"Repayment Frequency\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <a> Repayment Schedule View</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </mat-card>\r\n                    </mat-card-title>\r\n\r\n                    <mat-card-title class=\"\">\r\n                        <div class=\"card-title-text\">Application Life Cycle Details</div>\r\n                        <mat-divider></mat-divider>\r\n\r\n                        <mat-card>\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Application Date</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"applicationDate\" placeholder=\"Application Date\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Assessment Approval Method</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"assessmentApprovalMethod\" placeholder=\"Assessment Approval Method\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Offer Approved Date</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"offerApprovedDate\" placeholder=\"Offer Approved Date\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Offer Accepted Date</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"offerAcceptedDate\" placeholder=\"Offer Accepted Date\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </mat-card>\r\n                    </mat-card-title>\r\n\r\n                    <mat-card-title class=\"\">\r\n                        <div class=\"card-title-text\">Approval Details</div>\r\n                        <mat-divider></mat-divider>\r\n\r\n                        <mat-card>\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Approver ID</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"approverID\" placeholder=\"Approver ID\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Stage</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"stage\" placeholder=\"Stage\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Date</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"date\" placeholder=\"Date\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>Offer Issue Date</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\"\r\n                                                formControlName=\"offerIssueDate\" placeholder=\"Offer Issue Date\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>User Recommendation</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <mat-label>User Recommendation</mat-label>\r\n                                            <mat-select name=\"prefix\" \r\n                                                formControlName=\"userRecommendation\">\r\n                                                <mat-option *ngFor=\"let i of userRecommendation\" [value]=\"i\">{{ i }}</mat-option>\r\n                                            </mat-select>\r\n        \r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n        \r\n        \r\n                                <div fxFlex=\"100\" fxFlex.gt-xs=\"50\" class=\"pr-1\">\r\n                                    <div class=\"pb-1\">\r\n                                        <mat-label>User Action</mat-label>\r\n                                        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n                                            <input matInput (keypress)=_keyPress($event) maxlength=\"10\" formControlName=\"userAction\" placeholder=\"User Action\" />\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n        \r\n        \r\n                            </div>\r\n\r\n                        </mat-card>\r\n                    </mat-card-title>\r\n\r\n                    <div class=\"button\">\r\n\r\n                        <button mat-button class=\"Back\" (click)=\"goBack()\">Back</button>\r\n                        <button mat-stroked-button class=\"Next\" (click)=\"next()\">Next</button>\r\n\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>"]}