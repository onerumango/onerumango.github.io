{"version":3,"sources":["./src/app/views/others/video-verification/calljoin/calljoin.component.ts","./src/app/views/others/video-verification/calljoin/calljoin.component.html","./src/app/views/others/video-verification/video-verification.component.ts","./src/app/views/others/video-verification/video-verification.component.html","./src/app/views/others/video-verification/video-verification.module.ts","./src/app/views/others/video-verification/only-number.directive.ts","./src/app/views/others/video-verification/video.directive.ts","./src/app/views/others/video-verification/schedule-appointment/schedule-appointment.component.ts","./src/app/views/others/video-verification/schedule-appointment/schedule-appointment.component.html","./src/app/views/others/video-verification/video-verification.routing.ts"],"names":[],"mappings":"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","file":"views-others-video-verification-video-verification-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {ThemePalette} from '@angular/material/core';\r\n@Component({\r\n  selector: 'app-calljoin',\r\n  templateUrl: './calljoin.component.html',\r\n  styleUrls: ['./calljoin.component.scss']\r\n})\r\nexport class CalljoinComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  color: ThemePalette = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"background\">\r\n    <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"30\"></div>\r\n\r\n\r\n        <div fxFlex=\"40\">\r\n\r\n            <h3 fxLayoutAlign=\"center stretch\" class=\"heading\">Choose your audio and video settings</h3>\r\n        </div>\r\n\r\n        <div fxFlex=\"30\"></div>\r\n\r\n    </div>\r\n<div fxLayout=\"row wrap\">\r\n<div fxFlex=\"100\">\r\n    <div fxFlex=\"20\"></div>\r\n<mat-card class=\"card\" >\r\n        <div fxLayoutAlign=\"center stretch\"><img src=\"assets/images/call.png\" ></div>\r\n        <br>\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\" fxLayoutAlign=\"center stretch\">\r\n                    <button mat-stroked-button class=\"Next\">Proceed</button>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\">\r\n                <div fxFlex=\"30\">\r\n                    \r\n                </div>\r\n                <div fxFlex=\"10\">\r\n                        <mat-icon>videocam_off</mat-icon>\r\n                </div>\r\n                <div fxFlex=\"10\">\r\n                        <mat-slide-toggle>\r\n\r\n                            </mat-slide-toggle>\r\n                    </div>\r\n                    <div fxFlex=\"10\">\r\n                            <mat-icon>mic_off</mat-icon>\r\n                        </div>\r\n                        <div fxFlex=\"10\">\r\n                                <mat-slide-toggle>\r\n\r\n                                    </mat-slide-toggle>\r\n                            </div>\r\n                <div fxFlex=\"30\"></div>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n</mat-card>\r\n<div fxFlex=\"20\"></div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n","import { Component, OnInit, ChangeDetectorRef, ViewChild, ElementRef, Renderer2 } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Router } from '@angular/router';\r\nimport { VideoService } from './video.service';\r\nimport { IcustCustomerVideoVerification } from './IcustCustomerVideoVerification';\r\nimport { AppointmentComponent } from './appointment/appointment.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { OtpModel } from '../kyc-basic-information/kyc-basic-information.component';\r\nimport { FingerprintAuthenticationComponent } from '../fingerprint-authentication/fingerprint-authentication.component';\r\nimport { empty } from 'rxjs';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport * as moment from 'moment';\r\nimport { DataService } from 'app/shared/services/data.service';\r\nimport { ApplicationEntryStageService } from 'app/shared/services/application-entry-stage.service';\r\nimport { MatCalendarCellClassFunction } from '@angular/material/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-video-verification',\r\n  templateUrl: './video-verification.component.html',\r\n  styleUrls: ['./video-verification.component.scss']\r\n})\r\nexport class VideoVerificationComponent implements OnInit {\r\n  // selectTime1=['10:00 am','10:30 am','11:00 am'];\r\n  // selectTime2=['11:30 am','12:00 pm','12:30 pm'];\r\n  // selectTime3=['01:00 pm','01:30 pm','02:00 pm'];\r\n  // selectTime4=['02:30 pm','03:00 pm','03:30 pm'];\r\n  // selectTime5=['04:00 pm','04:30 pm','05:00 pm'];\r\n  masterInfo: any = {};\r\n  addressInfo:any={};\r\n  tellerId = 1;\r\n  loggedInUser = 1;\r\n  basicInfoForm: FormGroup;\r\n  title: string[] = [\r\n    'Mr',\r\n    'Ms',\r\n    'Mrs',\r\n  ];\r\n  TimeSolts = [];\r\n  tomorrow = new Date();\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n\r\n  cifNumberForm = new FormControl()\r\n\r\n  selectedDate: any;\r\n\r\n  icustCustVideoVerifyDto: IcustCustomerVideoVerification;\r\n\r\n  dateCollection:any = [];\r\n  showNext: boolean;\r\n  dataFromBasicInfo: any;\r\n  count: any = 0;\r\n  availableSlots = [];\r\n  showSpinn: boolean;\r\n  kycTimeOption = false;\r\n  selectedIndex: number = 0;\r\n  sendingtime: any;\r\n  link: any;\r\n  cifNumber: any;\r\n  totalavailableSlots: any;\r\n  selectTime1: any;\r\n  bookedSlots: any;\r\n  tabIndex: Number;\r\n  tab2: boolean;\r\n  tab1: boolean;\r\n  loading: boolean;\r\n  otpmodel = new OtpModel();\r\n  mobVerify: any = \"Verify\";\r\n  emaillVerify: any = \"Verify\";\r\n  imageURL: any;\r\n  \r\n  profileId: any;\r\n\r\n  @ViewChild(\"profileFile\") profileFile: ElementRef;\r\n  profilePicture: any;\r\n  arrayPrefix: any[] = [];\r\n  prefixes: string;\r\n  prefixFlag: boolean = false;\r\n  index: string;\r\n  gender: string;\r\n  resi: string;\r\n  marr: string;\r\n  coun: string;\r\n  nation: string;\r\n  countrys: string[] = [];\r\n  genders: string[];\r\n  Residences: string[];\r\n  MarritialStatus: string[];\r\n  indexs: string[];\r\n  nationality: string[];\r\n  entityName: string;\r\n  arrayState: string[] = [];\r\n  arrayState1: string[];\r\n  arrayCity: string[];\r\n  kycVerificationForm: any;\r\n  arrayCity1: string[];\r\n  id: any;\r\n\r\n  timer: any;\r\n  listOfCustByCif: any = [];\r\n  image: any;\r\n  datewitmAmPm:string;\r\n  disabledsatsun:any[] = [];\r\n  cifFetch: any = false;\r\n\r\n  \r\n  constructor(private snack: MatSnackBar, private router: Router, private videoService: VideoService, private api: ApiService,\r\n    private dialogService: DialogService,\r\n    private shareDataService: DataService,\r\n    private renderer: Renderer2,\r\n    private dialog: MatDialog, private cdr: ChangeDetectorRef,\r\n\r\n    private fb: FormBuilder, private appApiService: ApplicationEntryStageService,) {\r\n    this.maxDate.setDate(this.maxDate.getDate() + 7);\r\n    //this.tomorrow.setDate(this.tomorrow.getDate())\r\n\r\n  }\r\n\r\n  permanentAddress: FormGroup = this.fb.group({\r\n    addressType: [\"Permanent\", [Validators.required]],\r\n    address1: [\"\", [Validators.required]],\r\n    address2: [\"\", [Validators.required]],\r\n    city: [\"\", [Validators.required]],\r\n    zipCode: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n    country: [\"\", [Validators.required]],\r\n    residenceType: [\"\", [Validators.required]],\r\n    state: [\"\", [Validators.required]],\r\n  });\r\n\r\n  ngOnInit() {\r\n  \r\n    this.getDoc();\r\n    this.calculateHolidays();\r\n    this.callingTimeslots();\r\n    this.api.getIndex().subscribe(resp => {\r\n      console.log(resp.index)\r\n      this.tabIndex = resp.index;\r\n\r\n      if (resp.index === 1) {\r\n        this.assignValuesForTab2(this.tabIndex);\r\n      }\r\n\r\n      \r\n      // TODO WITH MATTAB DISABLE CUSTOM LATER\r\n      // this.tabGroup._tabs[resp.index].disabled = true;\r\n    })\r\n    this.prefixFlag=true;\r\n    this.basicInfoForm = this.fb.group({\r\n      cifNumber: ['',],\r\n      prefix: ['', [Validators.required]],\r\n      firstName: ['', [Validators.required]],\r\n     // middleName: ['',],\r\n      lastName: ['', [Validators.required]],\r\n      \r\n      // primaryEmail: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n      // phoneNo: ['', [Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\r\n      scheduledDate: [''],\r\n      scheduledTime: ['null'],\r\n\r\n      primaryEmailAdress: [\"\", [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n      phoneNumber: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\r\n      middleName: [\"\"],\r\n      customer_id: [\"\"], //we need to add customerid dynamically based on Post and Put method --->added by jaya\r\n      isAddressSame: [\"\"],\r\n      gender: [\"\", [Validators.required]],\r\n      dateOfBirth: [\"\", [Validators.required]],\r\n      maritalStatus: [\"\", [Validators.required]],\r\n      nationality: [\"\", [Validators.required]],\r\n      profileImage: [\"\"],\r\n\r\n      communicationAddress: this.fb.group({\r\n        addressType: [\"Communication\", [Validators.required]],\r\n        address1: [\"\", [Validators.required]],\r\n        address2: [\"\", [Validators.required]],\r\n        city: [\"\", [Validators.required]],\r\n        zipCode: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n        country: [\"\", [Validators.required]],\r\n        residenceType: [\"\", [Validators.required]],\r\n        state: [\"\", [Validators.required]],\r\n      }),\r\n    });\r\n    this.imageURL = \"not_available\"\r\n    this.link = \"vide_link\";\r\n\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => { \r\n          console.log(res);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  getDoc() {\r\n    this.index = \"prefix\";\r\n  \r\n    this.gender = \"gender\";\r\n    this.resi = \"residence\";\r\n    this.marr = \"maritial_Status\";\r\n    this.coun = \"country\";\r\n    this.nation = \"nationality\";\r\n   \r\n    // this.api.getDropDownValues(this.coun).subscribe((responseData) => {\r\n    //   this.countrys = responseData;\r\n    //   console.log(\"this.countrys::\", this.countrys)\r\n    // });\r\n    this.api.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          this.countrys.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n    this.api.getDropDownValues(this.gender).subscribe((responseDatas) => {\r\n      this.genders = responseDatas;\r\n    });\r\n    this.api.getDropDownValues(this.resi).subscribe((responses) => {\r\n      this.Residences = responses;\r\n    });\r\n    this.api.getDropDownValues(this.marr).subscribe((respo) => {\r\n      this.MarritialStatus = respo;\r\n    });\r\n    this.api.getDropDownValues(this.index).subscribe((re) => {\r\n      this.indexs = re;\r\n    });\r\n    this.api.getDropDownValues(this.nation).subscribe((datas) => {\r\n      this.nationality = datas;\r\n    });\r\n  }\r\n\r\n  get sameAddress() {\r\n    return this.basicInfoForm.get(\"isAddressSame\").value;\r\n  }\r\n  \r\n  assignValuesForTab2(tabIndex) {\r\n    this.tab2 = true;\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  callingTimeslots() {\r\n    this.TimeSolts = [\r\n      {\r\n         \"time\":\"9:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"9:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"10:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"10:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"11:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"11:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"12:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"12:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"13:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"13:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"14:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"14:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"15:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"15:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"16:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"16:30\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      },\r\n      {\r\n         \"time\":\"17:00\",\r\n         \"available\":true,\r\n         \"selected\":false,\r\n         \"booked\":false\r\n      }\r\n   ];\r\n  }\r\n  backToKyc() {\r\n    this.dialogService.openKycVerificationMethod();\r\n    this.router.navigateByUrl('others/Service')\r\n  }\r\n\r\n  onNextOfVideoVerification(form: any) {\r\n    console.log(form.value);\r\n    this.basicInfoForm = form.value;\r\n\r\n    //  this.videoService.sendUserDetailsOFVideo(this.basicInfoForm);\r\n    this.router.navigateByUrl('/video/schedule-appointment')\r\n  }\r\n  onSelectTime1(time, i,event) {\r\n    this.showNext = true;\r\n\r\n    this.datewitmAmPm=event.target.innerText;\r\n    this.count++;\r\n    if (this.count > 1) {\r\n      this.dateCollection = [];\r\n      console.log(!this.TimeSolts[i].selected);\r\n      this.showNext =!this.TimeSolts[i].selected ;\r\n    }\r\n    console.log(\"Time\", time, i);\r\n\r\n    this.TimeSolts[i].selected = !this.TimeSolts[i].selected;\r\n    this.TimeSolts[i].available = !this.TimeSolts[i].available;\r\n    console.log(this.TimeSolts[i].selected);\r\n    const index = this.dateCollection.indexOf(time);\r\n    if (index > -1 && !this.TimeSolts[i].selected) {\r\n      this.dateCollection.splice(index, 1);\r\n    }\r\n    else if (index == -1 && this.TimeSolts[i].selected) {\r\n      this.dateCollection.push(time);\r\n      console.log(this.dateCollection);\r\n    }\r\n    \r\n  }\r\n  onNextOfSheduleAppointment() {\r\n\r\n    this.icustCustVideoVerifyDto = this.basicInfoForm.value;\r\n    this.icustCustVideoVerifyDto.scheduledDate = this.selectedDate;\r\n    this.icustCustVideoVerifyDto.scheduledTime = this.dateCollection;\r\n    this.icustCustVideoVerifyDto.tellerId = this.tellerId;\r\n    this.icustCustVideoVerifyDto.loggedInUser = this.loggedInUser;\r\n\r\n    \r\n\r\n    this.videoService.saveCustBasicInfoData(this.icustCustVideoVerifyDto).subscribe(data => {\r\n      console.log(\"data link\", data);\r\n      this.link = data;\r\n      const dialogRef = this.dialog.open(AppointmentComponent, {\r\n\r\n        data: { time:  this.datewitmAmPm, date: this.selectedDate, link: this.link, kycRef: this.kycRef }\r\n\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The dialog was closed');\r\n        // this.animal = result;\r\n      });\r\n      // this.previousStep(1);\r\n      this.basicInfoForm.reset();\r\n      this.selectedDate = null;\r\n      this.TimeSolts = [];\r\n      //  console.log(\"in video\",this.link);\r\n      this.cdr.markForCheck();\r\n\r\n    },\r\n      err => {\r\n        console.log(err.message);\r\n      })\r\n\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  bookSlot(bookedTime){\r\n    var now=new Date(); \r\n    var time = bookedTime;\r\n    var dt = (now.getMonth()+1) + \"/\" + now.getDate() + \"/\" + now.getFullYear() + \" \" + time;\r\n    //var now = new Date();\r\n    var userval = new Date(dt);\r\n    if (now > userval) {\r\n    return false;\r\n   }else{\r\n  return true;\r\n   }\r\n  }\r\n\r\n  onSelect(event) {\r\n    for(let i=0;i<this.TimeSolts.length;i++){\r\n      \r\n    var slot=  this.bookSlot(this.format24HrsTo12Hrs(this.TimeSolts[i].time));\r\n    this.TimeSolts[i].booked=slot;\r\n\r\n    }\r\n    \r\n    \r\n    //console.log(\"today\", moment(today).format('YYYY-MMM-DD HH:MM:SS'),moment(event).format('YYYY-MMM-DD') )\r\n    this.callingTimeslots();\r\n    this.showSpinn = true;\r\n    this.dateCollection = [];\r\n    console.log(event);\r\n    this.selectedDate = this.videoService.convertDate(event);\r\n    console.log(\"selectedDate\", this.selectedDate);\r\n    this.api.gettingAvailableSlotsTeller(this.selectedDate, this.tellerId).subscribe((availableSlotsResp: any) => {\r\n      console.log(\"Available Slots\", availableSlotsResp,);\r\n      // availableSlotsResp[0].availableSlots\r\n      if (availableSlotsResp) {\r\n        this.showSpinn = false;\r\n        this.kycTimeOption = true;\r\n        availableSlotsResp.bookedSlots.forEach(element => {\r\n          const index = this.TimeSolts.map(x => x.time).indexOf(element);\r\n          if (index > -1) {\r\n            this.TimeSolts[index].available = false;\r\n            this.TimeSolts[index].booked = true;\r\n          }\r\n        });\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  format24HrsTo12Hrs(time){\r\n    var formatted = moment(time, \"HH:mm\").format(\"LT\");\r\n    console.log(\"time\", time,formatted)\r\n    return formatted;\r\n  }\r\n\r\n  kycRef(kycReference: any) {\r\n    this.api.setKycRef({\r\n      kycReference: kycReference,\r\n    });\r\n  }\r\n\r\n  next() {\r\n    // this.kycVerificationForm.reset();\r\n    this.api.setIndex({\r\n      index: 1,\r\n    });\r\n    this.api.setFinishFlag({\r\n      finishFlag: false,\r\n    });\r\n    let customerId = localStorage.getItem('customer_id');\r\n    console.log(\"custId::\", localStorage.getItem('customer_id'))\r\n    localStorage.setItem('page_id', '1');\r\n    this.shareDataService.shareCustomerId(customerId);\r\n  }\r\n  onClickNext(tabIndex: number){\r\n    console.log('onClicknext');\r\n    \r\n    let phoneNumber =this.basicInfoForm.value.phoneNumber;\r\n      if(!this.cifFetch){\r\n        this.api.fetchCustomerDetails(phoneNumber).subscribe((res: any) => {\r\n          if(res!=null){\r\n            this.dialogService.phoneNumberDetailsDialogue(res).subscribe((response) => {\r\n              if(response == \"Yes\"){\r\n                this.nextStep(tabIndex);\r\n              } \r\n            });\r\n          } else {\r\n            this.nextStep(tabIndex);\r\n          }\r\n         \r\n        });\r\n      } else {  \r\n        this.nextStep(tabIndex);\r\n      }\r\n  }\r\n  nextStep(tabIndex: number) {\r\n    console.log(tabIndex);\r\n    if (this.selectedIndex < 2) {\r\n      this.selectedIndex = tabIndex + 1;\r\n    }\r\n\r\n    let userAddress: any[] = [];\r\n    userAddress.push(this.basicInfoForm.value.communicationAddress);\r\n    if (this.basicInfoForm.value.permanentAddress) {\r\n      userAddress.push(this.basicInfoForm.value.permanentAddress);\r\n    }\r\n\r\n    let payload = {\r\n      cifNumber: this.basicInfoForm.value.cifNumber,\r\n      prefix: this.basicInfoForm.value.prefix,\r\n      primaryEmailAdress: this.basicInfoForm.value.primaryEmailAdress,\r\n      phoneNumber: this.basicInfoForm.value.phoneNumber,\r\n      firstName: this.basicInfoForm.value.firstName,\r\n      lastName: this.basicInfoForm.value.lastName,\r\n      middleName: this.basicInfoForm.value.middleName,\r\n      customer_id: this.basicInfoForm.value.customer_id,\r\n      gender: this.basicInfoForm.value.gender,\r\n      maritalStatus: this.basicInfoForm.value.maritalStatus,\r\n      nationality: this.basicInfoForm.value.nationality,\r\n      // dateOfBirth:this.basicInfoForm.value.dateOfBirth,\r\n      userAddress: userAddress,\r\n      verificationType: 'KYC',\r\n      kycSubmit: false\r\n    };\r\n    console.log(payload, \" :: Payload\");\r\n    console.log(this.profilePicture);\r\n\r\n    this.api.kycScreenBasicinfo(payload).subscribe((resp) => {\r\n      console.log(resp, \"Next response\");\r\n      console.log(\"resp after saving \", resp)\r\n      this.id = resp.cifNumber\r\n\r\n      \r\n      this.snack.open(\"Basic Information Data Saved! \", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n       \r\n     // this.disableDays(this.disabledsatsun);\r\n      sessionStorage.setItem('customer_id', resp.customerId);\r\n      localStorage.setItem('customer_id', resp.customerId);\r\n      sessionStorage.setItem('kyc_reference', resp.kycReference);\r\n      this.kycRef(resp.kycReference);\r\n\r\n\r\n\r\n      console.log(\"resp.customerId::\", resp.customerId)\r\n      console.log(\"(this.profilePicture::\", this.profilePicture)\r\n      if (this.profilePicture) {\r\n        // console.log(this.profilePicture)\r\n        let profileUpload: any = {};\r\n        profileUpload.documentName = \"Profile\";\r\n        profileUpload.documentType = 1;\r\n        profileUpload.fileType = this.profilePicture.type;\r\n        profileUpload.fileName = this.profilePicture.name;\r\n        profileUpload.customerId = resp.customerId;\r\n        console.log(profileUpload);\r\n        const uploadData = new FormData();\r\n        uploadData.append('data', JSON.stringify(profileUpload));\r\n        uploadData.append('file', this.profilePicture);\r\n        this.api.uploadDocument(uploadData).subscribe((response) => {\r\n          console.log(response);\r\n          this.next();\r\n        }, err => {\r\n          console.log(\"error\", err)\r\n        }\r\n        );\r\n      }\r\n      \r\n      this.next();\r\n\r\n\r\n    });\r\n  }\r\n  resetData(){\r\n    this.basicInfoForm.reset();\r\n    this.imageURL = \"not_available\";\r\n  }\r\n\r\n\r\n  previousStep(tabIndex: number) {\r\n    console.log(tabIndex);\r\n    if (this.selectedIndex > 0) {\r\n      this.selectedIndex = tabIndex - 2;\r\n    }\r\n  }\r\n  autofillDetails() {\r\n    // this.basicInfoForm.reset();\r\n    this.cifNumber = this.basicInfoForm.controls.cifNumber.value;\r\n    if (this.cifNumber) {\r\n      this.cifFetch = true;\r\n      this.getallCustomerDetails();\r\n    }\r\n  }\r\n  getOtp(email) {\r\n    this.otpmodel.source = \"customer\";\r\n    this.otpmodel.source_key = \"email\";\r\n    this.otpmodel.source_value = email.primaryEmailAdress;\r\n\r\n    this.api.getOtp(this.otpmodel).subscribe((resp) => { });\r\n    this.openDialogEmail(email.primaryEmailAdress);\r\n  }\r\n\r\n  openDialogEmail(email) {\r\n    const dialogRef = this.dialog.open(FingerprintAuthenticationComponent, {\r\n      data: { number: email, type: \"email id\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => { });\r\n    this.emailsverify();\r\n  }\r\n\r\n  getallCustomerDetails() {\r\n    this.loading = true;\r\n    console.log(\"CIF video verification ---- :: \", event);\r\n    this.api.gettingCustomerDetails(this.cifNumber).subscribe((allCustomerResp: any) => {\r\n      this.loading = false;\r\n      console.log(\"All Customer Details\", allCustomerResp);\r\n      if (allCustomerResp === null) {\r\n        this.snack.open(\"Invalid CIF number!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.basicInfoForm.controls.prefix.setValue('');\r\n        this.basicInfoForm.controls.firstName.setValue('');\r\n        this.basicInfoForm.controls.middleName.setValue('');\r\n        this.basicInfoForm.controls.lastName.setValue('');\r\n        this.basicInfoForm.controls.primaryEmailAdress.setValue('');\r\n        this.basicInfoForm.controls.phoneNo.setValue('');\r\n      }\r\n      this.image = allCustomerResp.customerInfoList[0];\r\n      this.imageURL = this.image.profileImage;\r\n      this.masterInfo = allCustomerResp.customerInfoList;\r\n      this.addressInfo=allCustomerResp.customerInfoList[0].userAddress;\r\n      if (this.masterInfo) {\r\n        this.setCustValues();\r\n      }\r\n      if (this.addressInfo) {\r\n        this.setCustValues2();\r\n      }\r\n      this.mobileverify();\r\n      this.emailsverify();\r\n    });\r\n  }\r\n\r\n  setCustValues() {\r\n    this.basicInfoForm.controls.prefix.setValue(this.masterInfo[0].prefix);\r\n    this.basicInfoForm.controls.firstName.setValue(this.masterInfo[0].firstName);\r\n    this.basicInfoForm.controls.middleName.setValue(this.masterInfo[0].middleName);\r\n    this.basicInfoForm.controls.lastName.setValue(this.masterInfo[0].lastName);\r\n    this.basicInfoForm.controls.primaryEmailAdress.setValue(this.masterInfo[0].primaryEmailAdress);\r\n    this.basicInfoForm.controls.phoneNumber.setValue(this.masterInfo[0].phoneNumber);\r\n    this.basicInfoForm.controls.dateOfBirth.setValue(this.masterInfo[0].dateOfBirth);\r\n    this.basicInfoForm.controls.maritalStatus.setValue(this.masterInfo[0].maritalStatus);\r\n    this.basicInfoForm.controls.gender.setValue(this.masterInfo[0].gender);\r\n    this.basicInfoForm.controls.nationality.setValue(this.masterInfo[0].nationality);\r\n  }\r\n  setCustValues2() {\r\n    this.basicInfoForm.get('communicationAddress.address1').setValue(this.addressInfo[0].address1);\r\n    this.basicInfoForm.get('communicationAddress.address2').setValue(this.addressInfo[0].address2);\r\n    this.basicInfoForm.get('communicationAddress.residenceType').setValue(this.addressInfo[0].residenceType);\r\n    this.basicInfoForm.get('communicationAddress.country').setValue(this.addressInfo[0].country);\r\n    this.basicInfoForm.get('communicationAddress.state').setValue(this.addressInfo[0].state);\r\n    this.getStateName(this.addressInfo[0].country, this.addressInfo[0].address1);\r\n    this.basicInfoForm.get('communicationAddress.city').setValue(this.addressInfo[0].city);\r\n    this.getCityName(this.addressInfo[0].state, this.addressInfo[0].address1);\r\n    this.basicInfoForm.get('communicationAddress.zipCode').setValue(this.addressInfo[0].zipCode);\r\n  }\r\n\r\n  getOtpMobile(email) {\r\n    this.otpmodel.source = \"customer\";\r\n    this.otpmodel.source_key = \"mobile\";\r\n    this.otpmodel.source_value = email.phoneNo;\r\n\r\n    this.api.getOtp(this.otpmodel).subscribe((resp) => { });\r\n    this.openDialog1(email.phoneNo);\r\n  }\r\n\r\n  openDialog1(phoneNUmber) {\r\n    const dialogRef = this.dialog.open(FingerprintAuthenticationComponent, {\r\n      data: { number: phoneNUmber, type: \"Mobile Number\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => { });\r\n    this.mobileverify();\r\n  }\r\n\r\n  mobileverify() {\r\n    this.api.getverify().subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.mobVerify = resp.verify;\r\n      }\r\n    }, (err) => {\r\n      this.mobVerify = \"Verify\"\r\n\r\n    })\r\n  }\r\n\r\n  emailsverify() {\r\n    this.api.getverify1().subscribe(resp => {\r\n      console.log(resp);\r\n      if (resp) {\r\n        this.emaillVerify = resp.verify;\r\n      }\r\n    }, (err) => {\r\n      this.emaillVerify = \"Verify\"\r\n\r\n    })\r\n  }\r\n\r\n  deleteProfileImg() {\r\n    this.dialogService.doConfirmDialog('').subscribe((response) => {\r\n      if (response == \"Yes\") {\r\n        this.imageURL = \"not_available\";\r\n        this.profileFile.nativeElement.value = '';\r\n        let customerId = localStorage.getItem('customerId');\r\n        this.api.deleteCustomerDoc(customerId, this.profileId).subscribe((data) => {\r\n          this.snack.open('Profile Image Deleted Successfully', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getProfileImage(customerId: any, document_type: number) {\r\n    this.api.getCustomerDocuments(customerId, document_type).subscribe((data) => {\r\n      console.log(\"data ::\", data);\r\n      if (data.length > 0) {\r\n        this.profileId = data[0].id;\r\n        this.imageURL = data[0].fileUrl;\r\n      }\r\n    });\r\n  }\r\n\r\n  public onFileChanged(event) {\r\n    this.profilePicture = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (event2) => {\r\n      // this.imgUrl = reader.result;\r\n      //this.fun(event.target.files[0], this.profilePicture);\r\n      //  this.image = reader.result;\r\n      this.imageURL = reader.result;\r\n      console.log(\"file \", reader);\r\n    };\r\n    // console.log(this.profilePicture);\r\n  }\r\n\r\n  array = [\r\n    {\r\n      id: 1,\r\n      checked: true,\r\n      name: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      checked: false,\r\n      name: \"No\",\r\n    },\r\n  ];\r\n\r\n  onChange(control, e): void {\r\n    if (\r\n      e.value == \"No\" &&\r\n      !this.basicInfoForm.contains(\"permanentAddress\")\r\n    ) {\r\n      this.basicInfoForm.addControl(\r\n        \"permanentAddress\",\r\n        this.permanentAddress\r\n      );\r\n    } else {\r\n      this.basicInfoForm.removeControl(\"permanentAddress\");\r\n    }\r\n  }\r\n\r\n  onChangeGender(event){\r\n    let prefix = this.basicInfoForm.value.prefix;\r\n    if ((prefix == \"Mr\" && event.value == \"Male\") || ((prefix==\"Ms\" || prefix==\"Mrs\") && event.value==\"Female\")) {\r\n      this.prefixFlag=true;\r\n    }  else {\r\n      this.prefixFlag=false;\r\n      this.snack.open(\"Prefix and Gender does not match!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  getStateName(country, address) {\r\n    this.entityName = \"state\";\r\n    console.log(\"State -- \", country)\r\n    // this.api.getDropDownForStateCity(this.entityName, country).subscribe((data) => {\r\n    //   this.arrayState = data;\r\n    this.api.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){       \r\n        if(data[i].countryName === country){\r\n          this.api.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n            for(let i=0; i<resp.length;i++){\r\n              if(resp[i].authStatus==='A'){\r\n                this.arrayState.push(resp[i].stateName);\r\n              }\r\n            }\r\n          })\r\n          break;   \r\n        }\r\n      }\r\n\r\n      console.log(\"-->\", this.arrayState)\r\n      if (address.length > 0) {\r\n        for (const key in address) {\r\n          if (Object.prototype.hasOwnProperty.call(address, key)) {\r\n            const element = address[key];\r\n            for (const state in this.arrayState) {\r\n              if (Object.prototype.hasOwnProperty.call(this.arrayState, state)) {\r\n                const elementState = this.arrayState[state];\r\n                if (elementState.trim() === element.trim()) {\r\n                  console.log('elementState', elementState)\r\n                  this.getCityName(elementState.trim(),address);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getPerStateName(country) {\r\n    this.entityName = \"state\";\r\n    console.log(\"State -- \", country)\r\n    this.api.getDropDownForStateCity(this.entityName, country).subscribe((data) => {\r\n      this.arrayState1 = data;\r\n      console.log(\"-->\", this.arrayState)\r\n    });\r\n  }\r\n\r\n  getCityName(state: any,address) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.api.getDropDownForStateCity(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n      if (address.length > 0) {\r\n        for (const key in address) {\r\n          if (Object.prototype.hasOwnProperty.call(address, key)) {\r\n            const element = address[key];\r\n            for (const City in this.arrayCity) {\r\n              if (Object.prototype.hasOwnProperty.call(this.arrayCity, City)) {\r\n                const elementCity = this.arrayCity[City];\r\n                if (elementCity.trim() === element.trim()) {\r\n                  console.log('elementCity', elementCity)\r\n                  this.kycVerificationForm.get('communicationAddress.city').setValue(elementCity);\r\n                  this.cdr.detectChanges();\r\n                  this.cdr.markForCheck();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getPerCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    console.log(state)\r\n    this.api.getDropDownForStateCity(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity1 = data;\r\n      console.log(\"-->\", this.arrayCity)\r\n\r\n    });\r\n  }\r\n\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/^[a-zA-Z0-9_@]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  calculateHolidays(){\r\n    this.api.getBranchHolidayInfo().subscribe((data: any) => {\r\n      for(let i=0; i<data.length; i++){\r\n        if(data[i].authStatus == \"A\")\r\n          this.disabledsatsun.push(moment(data[i].calenderDate).format('MMMM D, YYYY'));\r\n        \r\n      }\r\n      });\r\n      \r\n          var d = new Date();\r\n          var pred = new Date(d.getFullYear(),d.getMonth()+1,0).getDate();\r\n          \r\n          var nowd;\r\n          var sat_array = \"\";\r\n          \r\n          for (let i=1;i<=pred;i++) {\r\n              nowd = new Date(d.getFullYear()+ \"-\" + (d.getMonth()+1) + \"-\" + i);\r\n              var weekday=moment(nowd).format('dddd');\r\n          \r\n              if (weekday == 'Sunday' || weekday== 'Saturday')\r\n              {\r\n                this.disabledsatsun.push(moment(nowd).format('MMMM D, YYYY'));\r\n                  sat_array = sat_array + \",\" + i;\r\n              }\r\n          \r\n          }\r\n  }\r\n  disableDays(days: string[]) {\r\n    const dayElements = document.querySelectorAll(\r\n      'mat-calendar .mat-calendar-table .mat-calendar-body-cell'\r\n    );\r\n\r\n    Array.from(dayElements).forEach((element) => {\r\n      const matchingDay = days.find((d) => d === element.getAttribute('aria-label')) !== undefined;\r\n\r\n      if (matchingDay) \r\n        this.renderer.setAttribute(element, 'disabled', '');\r\n        else \r\n        this.renderer.removeAttribute(element, 'disabled');\r\n    });\r\n  }\r\n  dateClass: MatCalendarCellClassFunction<Date> = (cellDate, view) => {\r\n \r\n    if (view === 'month') {\r\n      \r\n      const highlightDate = this.disabledsatsun\r\n      .map((strDate) => new Date(strDate))\r\n      .some(\r\n        (d) =>\r\n          d.getDate() === cellDate.getDate() &&\r\n          d.getMonth() === cellDate.getMonth() &&\r\n          d.getFullYear() === cellDate.getFullYear()\r\n      );\r\n           return highlightDate ? 'custom-date-class' : '';\r\n    }\r\n      return '';  \r\n    }\r\n  \r\n\r\n\r\n  \r\n}\r\n","<div class=\"head mt-32\">\r\n    <br>\r\n    <h4 class=\"headerMapping\">Home > KYC Screening </h4>\r\n    <h1 class=\"main-head\" style=\"padding-left: 5.1%;\">KYC Screening | Video Verification</h1>\r\n    <div class=\"basic-container\">\r\n        <mat-tab-group mat-align-tabs=\"start\" #tabgroup [selectedIndex]=\"selectedIndex\"  style=\"background-color: #F5F5F5\">\r\n            <mat-tab label=\"Basic Information\" [disabled]='!tab1' style=\"height: 100%;\">\r\n             <div class=\"outerDiv\">\r\n                <mat-card class=\"marginTopKyc\">\r\n                    <form *ngIf=\"basicInfoForm\" [formGroup]=\"basicInfoForm\">\r\n                        <h3 class=\"verificationHead\">Basic Information</h3>\r\n                        <hr class=\"line\" />\r\n\r\n                        <div class=\"formSectionContainer\">\r\n                            <div class=\"formLeft\">\r\n                                <div>\r\n                                    <button \r\n                                        mat-icon-button \r\n                                        style=\"float: right; padding-top: 8px; padding-left: 30px;cursor: pointer;\">\r\n                                        <input type=\"file\" #profileFile input type=\"file\"\r\n                                            (change)=\"onFileChanged($event)\"\r\n                                            accept=\"image/png, image/gif, image/jpg, image/jpeg\" class=\"changeInput\"\r\n                                        >\r\n                                        <mat-icon color=\"primary\">edit</mat-icon>\r\n                                    </button>\r\n                                </div>\r\n                                <div *ngIf=\"imageURL == 'not_available'; else showAvatar\">\r\n                                    <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"\">\r\n                                </div>\r\n                                <ng-template #showAvatar>\r\n                                    <img class=\"formImg\" [src]=\"imageURL\" alt=\"\">\r\n                                </ng-template>\r\n\r\n                                <div>\r\n                                    <mat-icon style=\"color: red; margin-left: 94%; cursor: pointer;\"\r\n                                        (click)=\" deleteProfileImg()\">delete\r\n                                    </mat-icon>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div>\r\n                                    <div class=\"form\" id=\"formfetch\">\r\n                                        <div class=\"flex-grow-1\" id=\"fech\">\r\n                                            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                                                <div>\r\n                                                    <mat-hint>CIF Number</mat-hint>\r\n                                                    <mat-card type=\"input\" class=\"widthCard inputMatcard\">\r\n                                                        <input matInput formControlName=\"cifNumber\" class=\"alignment\"\r\n                                                            type=\"number\" min=\"0\" oninput=\"validity.valid ||(value='');\"\r\n                                                            (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\" name=\"cifNumber\" value=\"cifNumber\">\r\n                                                    </mat-card><div>\r\n                                                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                                                            <mat-option *ngFor=\"let option of listOfCustByCif\" [value]=\"option.customerId\">\r\n                                                                <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                                                                    <div fxFlex=\" 100\">\r\n                                                                        <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\" class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                                                                            <h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n                                                                                {{option?.firstName | slice:0:1 | uppercase}}{{option?.lastName | slice:0:1 | uppercase}}\r\n                                                                            </h3>\r\n                                                                        </div>\r\n                                                                        <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar fxFlex=\"10\">\r\n                                                                            <img matListAvatar\r\n                                                                                style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 100%;margin-bottom: 50px;\"\r\n                                                                                align=\"center\" [src]=\"option?.profileImage\" alt=\"...\">\r\n                                                                        </div>\r\n                                                                        <div fxFlex=\"80\">\r\n                                                                            <h5 style=\"margin-bottom: 0px;\">\r\n                                                                                {{option?.firstName | uppercase}}\r\n                                                                                {{option?.middleName | uppercase}}\r\n                                                                                {{option?.lastName | uppercase}}\r\n                                                                            </h5>\r\n                                                                            <h6 style=\"margin-top: 0px;\">#{{option?.cifNumber}}</h6>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </mat-option>\r\n                                                        </mat-autocomplete>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div class=\"flex-grow-1\" class=\"fechButtonDiv\">\r\n                                                <p class=\"fetchButton\" *ngIf=\"!loading\" (click)=\"autofillDetails()\">\r\n                                                    Fetch</p>\r\n                                                <mat-spinner *ngIf=\"loading\" [diameter]=\"40\" class=\"fetchButton\">\r\n                                                </mat-spinner>\r\n                                            </div>\r\n                                            \r\n\r\n                                        </div>\r\n                                        <div  class=\"fechButtonDiv\">\r\n                                            <p [hidden]=\"!basicInfoForm.get('cifNumber')?.value\" class=\"fetchButton\" (click)=\"resetData()\">Reset</p>\r\n                                          </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form\" id=\"formfetch\">\r\n                                    <div class=\"flex-grow-1\" id=\"fech\">\r\n                                        <div class=\"flex-grow-2\" style=\"margin-left: -1px;\">\r\n                                            <mat-hint>Prefix*</mat-hint>\r\n                                            <mat-card class=\"widthCard inputMatcard\"\r\n                                                [ngClass]=\"{'errbd': !basicInfoForm.get('prefix').valid && basicInfoForm.get('prefix').touched}\">\r\n                                                <mat-select formControlName=\"prefix\">\r\n                                                    <mat-option value=\"\">Select</mat-option>\r\n                                                    <mat-option *ngFor=\"let i of indexs \" [value]=\"i\">{{ i }}</mat-option>\r\n                                                </mat-select>\r\n                                            </mat-card>\r\n                                            <mat-error *ngIf=\"!basicInfoForm.get('prefix').valid && basicInfoForm.get('prefix').touched\">\r\n                                                Please Select Prefix\r\n                                            </mat-error>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>First Name*</mat-hint>\r\n                                        <mat-card class=\"inputMatName\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('firstName').valid && basicInfoForm.get('firstName').touched}\">\r\n\r\n                                            <input matInput formControlName=\"firstName\" class=\"alignment\" type=\"text\"\r\n                                                name=\"lastName\" (keypress)=\"letterOnly($event)\"\r\n                                                value=\"updateUserInfo.firstName\" />\r\n\r\n                                        </mat-card>\r\n                                        <mat-error *ngIf=\"!basicInfoForm.get('firstName').valid && basicInfoForm.get('firstName').touched\">\r\n                                            Please Enter First Name\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Middle Name</mat-hint>\r\n                                        <mat-card class=\"inputMatNew\">\r\n\r\n                                            <input matInput formControlName=\"middleName\" (keypress)=\"letterOnly($event)\"\r\n                                                class=\"alignment\" type=\"text\" name=\"middleName\" />\r\n\r\n                                        </mat-card>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Last Name*</mat-hint>\r\n                                        <mat-card class=\"inputMatLastName\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('lastName').valid && basicInfoForm.get('lastName').touched}\">\r\n\r\n                                            <input matInput formControlName=\"lastName\" class=\"alignment\" type=\"text\"\r\n                                                name=\"lastName\" (keypress)=\"letterOnly($event)\"\r\n                                                value=\"updateUserInfo.lastName\" />\r\n\r\n                                        </mat-card>\r\n                                        <mat-error *ngIf=\" !basicInfoForm.get('lastName').valid && basicInfoForm.get('lastName').touched\">\r\n                                            Please Enter Last Name\r\n                                        </mat-error>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form\">\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Date of Birth*</mat-hint>\r\n                                        <mat-card class=\"inputMatLastName\" style=\"height:48px;\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('dateOfBirth').valid && basicInfoForm.get('dateOfBirth').touched}\">\r\n                                            <input matInput formControlName=\"dateOfBirth\" id=\"dob\" class=\"alignment\"\r\n                                                name=\"dateOfBirth\" readonly [matDatepicker]=\"picker\" [max]=\"tomorrow\" [max]=\"maxDate\"\r\n                                                value=\"dateOfBirth\">\r\n                                            <div fxFlex=\"8%\" id=\"toggle\">\r\n                                                <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                                                </mat-datepicker-toggle>\r\n\r\n                                                <mat-datepicker #picker>\r\n                                                </mat-datepicker>\r\n                                            </div>\r\n\r\n                                        </mat-card>\r\n\r\n                                        <mat-error *ngIf=\"\r\n                                    !basicInfoForm.get('dateOfBirth').valid &&\r\n                                    basicInfoForm.get('dateOfBirth').touched\r\n                                  \">\r\n                                            Please Select Date Of Birth\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Marital Status*</mat-hint>\r\n                                        <mat-card class=\"inputMatcardMarritial\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('maritalStatus').valid && basicInfoForm.get('maritalStatus').touched}\">\r\n\r\n                                            <mat-select formControlName=\"maritalStatus\">\r\n                                                <mat-option value=\"\">Select</mat-option>\r\n                                                <mat-option *ngFor=\"let status of MarritialStatus\" [value]=\"status\">{{\r\n                                                    status }}\r\n                                                </mat-option>\r\n                                            </mat-select>\r\n\r\n                                        </mat-card>\r\n                                        <mat-error *ngIf=\"!basicInfoForm.get('maritalStatus').valid && basicInfoForm.get('maritalStatus').touched\">\r\n                                            Please Select Marital Status\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Gender*</mat-hint>\r\n                                        <mat-card class=\"inputGender\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('gender').valid && basicInfoForm.get('gender').touched}\">\r\n\r\n                                            <mat-select formControlName=\"gender\"\r\n                                                (selectionChange)=\"onChangeGender($event)\">\r\n                                                <mat-option value=\"\">Select</mat-option>\r\n                                                <mat-option *ngFor=\"let gender of genders\" [value]=\"gender\">{{\r\n                                                    gender\r\n                                                    }}</mat-option>\r\n                                            </mat-select>\r\n\r\n                                        </mat-card>\r\n                                        <mat-error class=\"help-block\" *ngIf=\"\r\n                                !basicInfoForm.get('gender').valid &&\r\n                                basicInfoForm.get('gender').touched\r\n                              \">\r\n                                            Please Select Gender\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\" !prefixFlag\">\r\n                                            &nbsp; Prefix and Gender does not match!\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"form\">\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Nationality*</mat-hint>\r\n                                        <mat-card class=\"inputGender\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('nationality').valid && basicInfoForm.get('nationality').touched}\">\r\n\r\n                                            <mat-select formControlName=\"nationality\">\r\n                                                <mat-option value=\"\">Select</mat-option>\r\n                                                <mat-option *ngFor=\"let nation of nationality\" [value]=\"nation\">{{\r\n                                                    nation }}</mat-option>\r\n                                            </mat-select>\r\n\r\n                                        </mat-card>\r\n                                        <mat-error *ngIf=\"\r\n                                !basicInfoForm.get('nationality').valid &&\r\n                                basicInfoForm.get('nationality').touched\r\n                              \">\r\n                                            Please Select Nationality\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Primary Email*</mat-hint>\r\n                                        <mat-card class=\"inputMatcardMail\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('primaryEmailAdress').valid && basicInfoForm.get('primaryEmailAdress').touched}\">\r\n\r\n                                            <input matInput formControlName=\"primaryEmailAdress\" type=\"text\"\r\n                                                name=\"primaryEmailAdress\" />\r\n                                            <mat-hint class=\"verification\" (click)=\"getOtp(basicInfoForm.value)\"\r\n                                                *ngIf=\"basicInfoForm.get('primaryEmailAdress').valid\">\r\n                                                {{emailVerify}}</mat-hint>\r\n                                        </mat-card>\r\n                                        <mat-error\r\n                                            *ngIf=\"basicInfoForm.get('primaryEmailAdress').hasError('required') && basicInfoForm.get('primaryEmailAdress').touched\">\r\n                                            Please Enter Primary Email\r\n                                        </mat-error>\r\n                                        <mat-error\r\n                                            *ngIf=\"basicInfoForm.get('primaryEmailAdress').hasError('pattern')\">\r\n                                            Please Enter valid email address!\r\n                                        </mat-error>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex-grow-1\">\r\n                                        <mat-hint>Mobile Number*</mat-hint>\r\n                                        <mat-card class=\"inputMatcard\"\r\n                                            [ngClass]=\"{'errbd': !basicInfoForm.get('phoneNumber').valid && basicInfoForm.get('phoneNumber').touched}\">\r\n                                            <input matInput name=\"phoneNumber\" maxLength=\"10\"\r\n                                                formControlName=\"phoneNumber\" required (keypress)=_keyPress($event) />\r\n                                            <mat-hint class=\"verification\"\r\n                                                (click)=\"getOtpMobile(basicInfoForm.value)\"\r\n                                                *ngIf=\"basicInfoForm.get('phoneNumber').valid\">{{verify}}\r\n                                            </mat-hint>\r\n                                        </mat-card>\r\n                                        <mat-error\r\n                                            *ngIf=\"basicInfoForm.get('phoneNumber').hasError('required') && basicInfoForm.get('phoneNumber').touched\">\r\n                                            Please Enter Mobile Number\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\"basicInfoForm.get('phoneNumber').hasError('pattern')\">\r\n                                            Mobile number must be 10 digits.\r\n                                        </mat-error>\r\n                                        <mat-error\r\n                                                                        *ngIf=\"basicInfoForm.controls['phoneNumber'].value == '0000000000'\">\r\n                                                                        &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n                                                                    </mat-error>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                         <div fxLayout=\"row\">\r\n                            <div fxFlex=\"100\">\r\n                                <div id=\"bill\">\r\n                                    <div class=\"billName\">\r\n                                        Is your Permanent Address same as Communication Address?\r\n                                    </div>\r\n\r\n                                    <mat-radio-group formControlName=\"isAddressSame\">\r\n                                        <mat-radio-button *ngFor=\"let option of array; let i = index\" class=\"ml-8\"\r\n                                            color=\"primary\" [checked]=\"option.checked\" [value]=\"option.name\" \r\n                                            (change)=\"onChange( basicInfoForm.controls.permanentAddress,$event)\">{{ option.name }}\r\n                                        </mat-radio-button>\r\n                                    </mat-radio-group>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                       <div fxLayoutGap=\"10px\" fxLayout=\"row wrap\" class=\"mt-32  communicationForm\">\r\n                            <div fxFlex class=\"addressGrid\" id=\"communicationBlockForm\">\r\n                                <div class=\"spanDiv\">\r\n                                    <span class=\"span\">Communication Address </span>\r\n                                    <mat-divider class=\"divider\"></mat-divider>\r\n                                </div>\r\n                                <div formGroupName=\"communicationAddress\">\r\n\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Address Line 1*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.address1').valid && \r\n                                                basicInfoForm.get('communicationAddress.address1').touched}\">\r\n\r\n                                                    <input matInput formControlName=\"address1\" class=\"full-width\"\r\n                                                    (keypress)=\"keyPressAlphanumeric($event)\" maxlength=\"50\" name=\"address1\"/>\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                                !basicInfoForm.get('communicationAddress.address1').valid &&\r\n                                                basicInfoForm.get('communicationAddress.address1').touched\">\r\n                                                    Please Enter Address Line 1</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Address Line 2*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.address2').valid && \r\n                                                basicInfoForm.get('communicationAddress.address2').touched}\">\r\n\r\n\r\n                                                    <input matInput formControlName=\"address2\" class=\"full-width\"\r\n                                                    (keypress)=\"keyPressAlphanumeric($event)\"   maxlength=\"50\" name=\"address2\"/>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                  !basicInfoForm.get('communicationAddress.address2').valid &&\r\n                                  basicInfoForm.get('communicationAddress.address2').touched\r\n                                \">\r\n                                                    Please Enter Address Line 2</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Residence Type*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.residenceType').valid && \r\n                                                basicInfoForm.get('communicationAddress.residenceType').touched}\">\r\n\r\n                                                    <mat-select formControlName=\"residenceType\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let Resi of Residences\" [value]=\"Resi\">{{\r\n                                                            Resi }}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                  !basicInfoForm.get('communicationAddress.residenceType').valid &&\r\n                                  basicInfoForm.get('communicationAddress.residenceType').touched\r\n                                \">\r\n                                                    Please Select Residence Type</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Country*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.country').valid && \r\n                                                basicInfoForm.get('communicationAddress.country').touched}\">\r\n\r\n                                                    <mat-select formControlName=\"country\"\r\n                                                        (selectionChange)=\"getStateName($event.value)\"\r\n                                                        (selectionChange)=\"getCityName($event.value)\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let country of countrys\" [value]=\"country\">\r\n                                                            {{ country }}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                        !basicInfoForm.get('communicationAddress.country').valid &&\r\n                                        basicInfoForm.get('communicationAddress.country').touched\r\n                                      \">\r\n                                                    Please Select Country</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>State*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.state').valid && \r\n                                                basicInfoForm.get('communicationAddress.state').touched}\">\r\n                                                    <mat-select name=\"state\" formControlName=\"state\"\r\n                                                        (selectionChange)=\"getCityName($event.value)\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let state of arrayState\" [value]=\"state\">\r\n                                                            {{state}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                        !basicInfoForm.get('communicationAddress.state').valid &&\r\n                                        basicInfoForm.get('communicationAddress.state').touched\">\r\n                                                    Please Select State</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>City*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.city').valid && \r\n                                                basicInfoForm.get('communicationAddress.city').touched}\">\r\n                                                    <mat-select name=\"city\" formControlName=\"city\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city\">\r\n                                                            {{city}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                        !basicInfoForm.get('communicationAddress.city').valid &&\r\n                                        basicInfoForm.get('communicationAddress.city').touched\">\r\n                                                    Please Select City</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Zip Code*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('communicationAddress.zipCode').valid && \r\n                                                basicInfoForm.get('communicationAddress.zipCode').touched}\">\r\n\r\n                                                    <input matInput formControlName=\"zipCode\" onlyNumber type=\"text\"\r\n                                                        matInput minLength=\"5\" maxLength=\"10\"\r\n                                                        (keyup)=\"isAllSameDigit($event,0)\" name=\"zipCode\" />\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                          (!basicInfoForm.get('communicationAddress.zipCode').valid &&\r\n                                          basicInfoForm.get('communicationAddress.zipCode').touched ||\r\n                                          basicInfoForm.get('communicationAddress.zipCode').required && \r\n                                          basicInfoForm.get('permanentAddress.zipCode').minLength) \">\r\n                                                    Please enter vaild Zip Code!(5-10 digits)\r\n                                                </mat-error>\r\n                                                <h5 *ngIf=\"isAllSameDigitVal && 0==zipIndex\" style=\"color: #E74C3C;\">\r\n                                                    Please enter valid Zip Code!(5-10 digits)\r\n                                                </h5>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div fxFlex class=\"addressGrid\" *ngIf=\"sameAddress == 'No'\" id=\"communicationBlockForm\">\r\n                                <div class=\"spanDiv\">\r\n                                    <span class=\"span\"> Permanent Address</span>\r\n                                    <mat-divider class=\"divider\"></mat-divider>\r\n                                </div>\r\n                                <div formGroupName=\"permanentAddress\">\r\n\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Address Line 1*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.address1').valid && \r\n                                                basicInfoForm.get('permanentAddress.address1').touched}\">\r\n\r\n\r\n                                                    <textarea matInput formControlName=\"address1\" class=\"full-width\"\r\n                                                        maxlength=\"50\" name=\"address1\"></textarea>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                        !basicInfoForm.get('permanentAddress.address1').valid &&\r\n                                        basicInfoForm.get('permanentAddress.address1').touched\r\n                                      \">\r\n                                                    Please Enter Address Line 1</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                      \r\n                                        <div fxFlex=\"50\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Address Line 2*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.address2').valid && \r\n                                                basicInfoForm.get('permanentAddress.address2').touched}\">\r\n\r\n\r\n                                                    <textarea matInput formControlName=\"address2\" class=\"full-width\"\r\n                                                        maxlength=\"50\" name=\"address2\"></textarea>\r\n\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                        !basicInfoForm.get('permanentAddress.address2').valid &&\r\n                                        basicInfoForm.get('permanentAddress.address2').touched\r\n                                      \">\r\n                                                    Please Enter Address Line 2</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Residence Type*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.residenceType').valid && \r\n                                                basicInfoForm.get('permanentAddress.residenceType').touched}\">\r\n\r\n                                                    <mat-select formControlName=\"residenceType\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let Resi of Residences\" [value]=\"Resi\">{{\r\n                                                            Resi }}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                          !basicInfoForm.get('permanentAddress.residenceType').valid &&\r\n                                          basicInfoForm.get('permanentAddress.residenceType').touched\r\n                                        \">\r\n                                                    Please Select Residence Type</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Country*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.country').valid && \r\n                                                basicInfoForm.get('permanentAddress.country').touched}\">\r\n\r\n                                                    <mat-select formControlName=\"country\"\r\n                                                        (selectionChange)=\"getPerStateName($event.value)\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let country of countrys\" [value]=\"country\">\r\n                                                            {{ country }}</mat-option>\r\n                                                    </mat-select>\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                          !basicInfoForm.get('permanentAddress.country').valid &&\r\n                                          basicInfoForm.get('permanentAddress.country').touched\r\n                                        \">\r\n                                                    Please Select Country</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>State*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.state').valid && \r\n                                                basicInfoForm.get('permanentAddress.state').touched}\">\r\n                                                    <mat-select name=\"state\" formControlName=\"state\"\r\n                                                        (selectionChange)=\"getPerCityName($event.value)\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let state of arrayState1\" [value]=\"state\">\r\n                                                            {{state}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                          !basicInfoForm.get('permanentAddress.state').valid &&\r\n                                          basicInfoForm.get('permanentAddress.state').touched\">\r\n                                                    Please Select State</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>City*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.city').valid && \r\n                                                basicInfoForm.get('permanentAddress.city').touched}\">\r\n                                                    <mat-select name=\"city\" formControlName=\"city\">\r\n                                                        <mat-option value=\"\">Select</mat-option>\r\n                                                        <mat-option *ngFor=\"let city of arrayCity1\" [value]=\"city\">\r\n                                                            {{city}}</mat-option>\r\n\r\n                                                    </mat-select>\r\n\r\n                                                </mat-card>\r\n                                                <mat-error *ngIf=\"\r\n                                          !basicInfoForm.get('permanentAddress.city').valid &&\r\n                                          basicInfoForm.get('permanentAddress.city').touched\">\r\n                                                    Please Select City</mat-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div fxFlex=\"50%\">\r\n                                            <div class=\"pb-1\">\r\n                                                <mat-hint>Zip Code*</mat-hint>\r\n                                                <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !basicInfoForm.get('permanentAddress.zipCode').valid && \r\n                                                basicInfoForm.get('permanentAddress.zipCode').touched}\">\r\n\r\n                                                    <input matInput formControlName=\"zipCode\" onlyNumber type=\"text\"\r\n                                                        matInput minLength=\"5\" maxLength=\"10\" name=\"zipCode\"\r\n                                                        (keyup)=\"isAllSameDigit($event,1)\" />\r\n                                                </mat-card>\r\n\r\n                                                <mat-error *ngIf=\"\r\n                                          !basicInfoForm.get('permanentAddress.zipCode').valid &&\r\n                                          basicInfoForm.get('permanentAddress.zipCode').touched  ||\r\n                                          basicInfoForm.get('permanentAddress.zipCode').required && \r\n                                          basicInfoForm.get('permanentAddress.zipCode').minLength \">\r\n                                                    Please enter vaild Zip Code!(5-10 digits)\r\n                                                </mat-error>\r\n\r\n                                                <h5 *ngIf=\"isAllSameDigitVal && 1==zipIndex\" style=\"color: #E74C3C;\">\r\n                                                    Please enter valid Zip Code!(5-10 digits)\r\n                                                </h5>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                </mat-card>\r\n              </div>  \r\n\r\n\r\n                \r\n                <div class=\"button\">\r\n                    <span class=\"Back1\" (click)=\"backToKyc()\" >Back</span>\r\n                    <!-- <p> {{disableNext}} </p> -->\r\n                    <button mat-stroked-button [ngClass]=\"{'Next12':basicInfoForm.invalid, \r\n                    'Next':!basicInfoForm.invalid}\" \r\n                    class=\"Next\" [disabled]=\"basicInfoForm.invalid\" (click)=\"onClickNext(tabgroup.selectedIndex)\"><span style=\"color: white\">Next</span></button>\r\n                </div>\r\n            </mat-tab>\r\n\r\n\r\n            <mat-tab label=\"Schedule Appointment\" [disabled]='!tab2'>\r\n                <mat-card class=\"matCard\" style=\" margin-right: 55px;\r\n                margin-left: 27px;\">\r\n                    <h3 class=\"basicInformation\">Schedule Appointment</h3>\r\n                    <hr class=\"line\">\r\n                    <br>\r\n                    <div fxLayout=\"column wrap\">\r\n                        <div fxFlex=\"100\">\r\n                            <div fxFlex=\"35\">\r\n                                <span class=\"textFont\">Select Date</span>\r\n                                <br>\r\n                                <mat-card class=\"demo-inline-calendar-card\">\r\n                                    <mat-calendar [selected]=\"selectedDate\" \r\n                                    [dateClass]=\"dateClass\"  (selectedChange)=\"onSelect($event)\"\r\n                                        [maxDate]=\"maxDate\" [minDate]=\"minDate\"></mat-calendar>\r\n                                </mat-card>\r\n                            </div>\r\n\r\n                            <div fxFlex=\"60\">\r\n                                <span class=\"textFont\">Select Time</span>\r\n                                <p class=\"paraFont\">Pick the date and then choose the available time slots.</p>\r\n                                <mat-spinner class=\"spinner\" [diameter]=\"80\" *ngIf=\"showSpinn\"></mat-spinner>\r\n                                <div fxLayout=\"row wrap\" *ngIf=\"kycTimeOption\">\r\n                                    <div fxFlex=\"100\">\r\n                                        <div *ngFor=\"let time of TimeSolts; let i = index\" class=\"timeboxes\">\r\n                                            <mat-card (click)=\"onSelectTime1(time.time,i,$event)\" [name]=time [ngClass]=\"{'bookedSlot': time.booked, 'availableSlot' : time.available,\r\n                                                   'selectedClass': dateCollection.indexOf(time.time)!=-1}\"><span\r\n                                                    fxLayoutAlign=\"center stretch\"\r\n                                                    class=\"matContent\">{{format24HrsTo12Hrs(time.time)}}</span>\r\n                                            </mat-card>\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n            \r\n                <div class=\"button\">\r\n                    <span class=\"back\" (click)=\"previousStep(tabgroup.selectedIndex)\">Back</span>\r\n                    <!-- <p> {{disableNext}} </p> -->\r\n                    <button mat-stroked-button [ngClass]=\"{'finish':!showNext, \r\n                    'finish1':showNext}\" \r\n                    id=\"n\" [disabled]=\"!showNext\"\r\n                    (click)=\"onNextOfSheduleAppointment()\"><span style=\"color: white\">Finish</span></button>\r\n                </div>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n    </div>\r\n</div>","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { MatNativeDateModule } from \"@angular/material/core\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatGridListModule } from \"@angular/material/grid-list\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { MatSliderModule } from \"@angular/material/slider\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { ChartModule } from \"angular-highcharts\";\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nimport { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\r\nimport { ScheduleAppointmentComponent } from \"./schedule-appointment/schedule-appointment.component\";\r\nimport { VideoRoutes } from \"./video-verification.routing\";\r\nimport { VideoVerificationComponent } from \"./video-verification.component\";\r\nimport { VideoDirective } from './video.directive';\r\nimport { AppointmentComponent } from './appointment/appointment.component';\r\nimport { CalljoinComponent } from './calljoin/calljoin.component';\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { OnlyNumberDirective } from './only-number.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        FlexLayoutModule,\r\n        PerfectScrollbarModule,\r\n        MatAutocompleteModule,\r\n        ReactiveFormsModule,\r\n        MatListModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatMenuModule,\r\n        MatSliderModule,\r\n        MatProgressSpinnerModule,\r\n        MatSelectModule,\r\n        MatSlideToggleModule,\r\n        MatGridListModule,\r\n        MatDatepickerModule,\r\n        MatChipsModule,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatInputModule,\r\n        MatProgressBarModule,\r\n        FlexLayoutModule,\r\n        \r\n        ChartModule,\r\n        \r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatNativeDateModule,\r\n        RouterModule.forChild(VideoRoutes)\r\n    ],\r\n    declarations: [\r\n        ScheduleAppointmentComponent,\r\n        VideoVerificationComponent,\r\n        VideoDirective,\r\n        AppointmentComponent,\r\n        CalljoinComponent,\r\n        OnlyNumberDirective,\r\n    \r\n    ],\r\n    entryComponents: []\r\n})\r\nexport class VideoVerificationModule { }","import { Directive, ElementRef, forwardRef, HostListener, Renderer2, StaticProvider } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nexport const CUSTOM_INPUT_DATE_PICKER_CONTROL_VALUE_ACCESSOR: StaticProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => OnlyNumberDirective),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: '[onlyNumber]',\r\n    providers: [CUSTOM_INPUT_DATE_PICKER_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class OnlyNumberDirective implements ControlValueAccessor {\r\n    private onChange: (val: string) => void;\r\n    private onTouched: () => void;\r\n    private value: string;\r\n\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        private renderer: Renderer2\r\n    ) {\r\n    }\r\n\r\n    @HostListener('input', ['$event.target.value'])\r\n    onInputChange(value: string) {\r\n        const filteredValue: string = filterValue(value);\r\n        this.updateTextInput(filteredValue, this.value !== filteredValue);\r\n    }\r\n\r\n    @HostListener('blur')\r\n    onBlur() {\r\n        this.onTouched();\r\n    }\r\n\r\n    private updateTextInput(value: string, propagateChange: boolean) {\r\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', value);\r\n        if (propagateChange) {\r\n            this.onChange(value);\r\n        }\r\n        this.value = value;\r\n    }\r\n\r\n    // ControlValueAccessor Interface\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        value = value ? String(value) : '';\r\n        this.updateTextInput(value, false);\r\n    }\r\n}\r\n\r\nfunction filterValue(value): string {\r\n    return value.replace(/[^0-9]*/g, '');\r\n}\r\n","import { Directive, Renderer2, HostListener, OnInit, ElementRef, HostBinding } from '@angular/core';\r\nimport { ClickType } from '@swimlane/ngx-datatable';\r\nimport { Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appVideo]'\r\n})\r\nexport class VideoDirective implements OnInit{\r\n  @Input() name: string;\r\n  constructor(private render:Renderer2,private el:ElementRef) { }\r\n \r\n  @HostBinding('style.backgroundColor') backgroundColor:string=\"transparent\";\r\n  @HostBinding('style.color') clr:string=\"white\";\r\n  ngOnInit()\r\n  {\r\n    console.log(this.name);\r\n  }\r\n  @HostListener('click') ClickType()\r\n    {\r\n      console.log(\"clcick\");\r\n        this.backgroundColor=\"#FE6700\";\r\n        this.clr=\"white\";\r\n    }\r\n    \r\n   \r\n\r\n}\r\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, DoCheck, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Router } from '@angular/router';\r\nimport {ThemePalette} from '@angular/material/core';\r\nimport { EventSettingsModel } from '@syncfusion/ej2-schedule';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport {\r\n \r\n  ChangeDetectorRef,\r\n \r\n  Inject,\r\n \r\n} from '@angular/core';\r\nimport {MatCalendar} from '@angular/material/datepicker';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\r\n\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport { AppointmentComponent } from '../appointment/appointment.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-schedule-appointment',\r\n  templateUrl: './schedule-appointment.component.html',\r\n  styleUrls: ['./schedule-appointment.component.scss'],\r\n \r\n})\r\nexport class ScheduleAppointmentComponent implements OnInit,DoCheck{\r\n  dateCollection= [];\r\n  toggle = true;\r\n  status = 'Enable'; \r\n  \r\n  showNext: boolean=false;\r\n  count=0;\r\n  dataFromBasicInfo: any;\r\n  kycRef: string;\r\n\r\n  constructor(private router:Router,  public api: ApiService,\r\n    private cdr:ChangeDetectorRef,private dialog:MatDialog,private el:ElementRef){}\r\n     \r\n  selectTime1=['10:00 am','10:30 am','11:00 am'];\r\n  selectTime2=['11:30 am','12:00 pm','12:30 pm'];\r\n  selectTime3=['01:00 pm','01:30 pm','02:00 pm'];\r\n  selectTime4=['02:30 pm','03:00 pm','03:30 pm'];\r\n  selectTime5=['04:00 pm','04:30 pm','05:00 pm'];\r\n  completeTimeSolte=['10:00 am','10:30 am','11:00 am','11:30 am','12:00 pm','12:30 pm',\r\n  '01:00 pm','01:30 pm','02:00 pm','02:30 pm','03:00 pm','03:30 pm','04:00 pm','04:30 pm','05:00 pm']\r\n  selectedDate: any;\r\n  subscription: Subscription;\r\n \r\n\r\n  ngOnInit() {\r\n    date: new FormControl({value: null, disabled: true}) \r\n\r\n    this.api.getKycRef().subscribe(resp => {\r\n      this.assignKyc(resp.kycReference);\r\n      console.log(resp.kycReference)\r\n    })\r\n    // this.subscription = this.videoService.getUserDetailsOfVideo().subscribe(message => {\r\n    //   console.log(\"video msg\",message);\r\n\r\n\r\n      \r\n    //   this.dataFromBasicInfo=Object.assign(message);\r\n    //   console.log(\"this info\",this.dataFromBasicInfo);\r\n    //  console.log(\"firstName\", this.dataFromBasicInfo.text.firstName);\r\n    //   this.cdr.markForCheck();\r\n      \r\n    //   // if (message) {\r\n    //   //   this.messages.push(message);\r\n    //   // } else {\r\n    //   //   // clear messages when empty message received\r\n    //   //   this.messages = [];\r\n    //   // }\r\n    // });\r\n    console.log(this.el);\r\n  }\r\n  \r\n  assignKyc(kycReference) {\r\n    this.kycRef = kycReference;\r\n  }\r\n  \r\n  onSelectTime1(time,i,event)\r\n  {\r\n  \r\n    console.log(time,i,event);\r\n    // this.IcustCutomerVideoVerification.scheduledTime=time;\r\n   \r\n    this.dateCollection.push(time);\r\n    console.log(this.dateCollection);\r\n    this.showNext=true;\r\n    \r\n    this.count++;\r\n    // if(this.count>1)\r\n    // {\r\n      \r\n    //   console.log(\"inside if\",this.count);\r\n      // document.getElementById('example').style.backgroundColor=\"white\";\r\n\r\n    // }\r\n   \r\n  }\r\n  \r\n \r\n  onNextOfSheduleAppointment() {\r\n   \r\n    console.log(this.dataFromBasicInfo);\r\n      \r\n    \r\n  \r\n   this.cdr.markForCheck();\r\n    // this.videoService.saveCustBasicInfoData(this.IcustCutomerVideoVerification).subscribe(data=>\r\n    //   {\r\n    //     console.log(data);\r\n    //   })\r\n   document.getElementById('n').style.backgroundColor='rgb(66,106,245)';\r\n    const dialogRef = this.dialog.open(AppointmentComponent, {\r\n      // width: '250px',\r\n      // data: {time:this.dateCollection}\r\n      data: {time: this.dateCollection, date: this.selectedDate, kycRef: this.kycRef},\r\n      \r\n      \r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      // this.animal = result;\r\n    });\r\n    // this.IcustCutomerVideoVerification.firstName=this.dataFromBasicInfo.text.firstName;\r\n    // this.IcustCutomerVideoVerification.lastName=this.dataFromBasicInfo.text.elastName;\r\n    // this.IcustCutomerVideoVerification.prefix=this.dataFromBasicInfo.text.prefix;\r\n    // this.IcustCutomerVideoVerification.primaryEmail=this.dataFromBasicInfo.text.primaryEmail;\r\n    // this.IcustCutomerVideoVerification.phoneNo=this.dataFromBasicInfo.text.phoneNo;\r\n  \r\n  }\r\n  onChangeTab(event: MatTabChangeEvent) {\r\n    const tab = event.tab.textLabel;\r\n    console.log(tab);\r\n    if(tab===\"Schedule Appointment\")\r\n    {\r\n      this.router.navigateByUrl('/video/schedule-appointment');\r\n    }\r\n    if(tab===\"Basic Information\") {\r\n      this.router.navigateByUrl('/video/verification');\r\n    }\r\n  }\r\n  onSelect(event){\r\n    console.log(event);\r\n    this.selectedDate= event._d;\r\n    console.log(this.selectedDate);\r\n    // this.IcustCutomerVideoVerification.scheduledDate=this.selectedDate;\r\n   \r\n  }\r\n  ngDoCheck()\r\n  {\r\n    // this.completeTimeSolte.forEach(data=>\r\n    //   {\r\n    //     console.log(data);\r\n    //     this.dateCollection.includes(data)\r\n    //   })\r\n\r\n  }\r\n \r\n\r\n\r\n}\r\n","<div class=\"head\">\r\n    <h3 class=\"main-head\">KYC Screening | Video Verification</h3>\r\n    <div class=\"basic-container\">\r\n        <mat-tab-group mat-align-tabs=\"start\" [selectedIndex]=\"1\" (selectedTabChange)=\"onChangeTab($event)\">\r\n            <mat-tab label=\"Basic Information\"></mat-tab>\r\n            <mat-tab label=\"Schedule Appointment\"></mat-tab>\r\n        </mat-tab-group>\r\n    </div>\r\n</div>\r\n<mat-card class=\"matCard\" >\r\n        <h3 class=\"basicInformation\">Basic Information</h3>\r\n        <hr class=\"line\">\r\n        <br>\r\n    <div fxLayout=\"column wrap\">\r\n        <div fxFlex=\"100\">\r\n            <div fxFlex=\"40\">\r\n                <span>Select Date</span>\r\n                <mat-card class=\"demo-inline-calendar-card\">\r\n                        <mat-calendar\r\n                        [selected]=\"selectedDate\"\r\n                        (selectedChange)=\"onSelect($event)\"></mat-calendar>\r\n                    </mat-card>\r\n            </div>\r\n\r\n            <div fxFlex=\"60\" #btn>\r\n                <span>Select Time</span>\r\n                <div>\r\n                       \r\n                        <div fxLayout=\"row wrap\">\r\n                            <div fxFlex=\"100\">\r\n                                <div fxFlex=\"30\" *ngFor=\"let time of selectTime1\">\r\n    \r\n                                  <mat-card appVideo (click)=\"onSelectTime1(time,i)\"\r\n                                  id=\"example\"  [name]=time>\r\n                                  <span fxLayoutAlign=\"center stretch\"\r\n                                            class=\"matContent\">{{time}}</span></mat-card> \r\n                                          \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div fxLayout=\"row wrap\">\r\n                                <div fxFlex=\"100\">\r\n                                    <div fxFlex=\"30\" *ngFor=\"let time2 of selectTime2;let i=index\">\r\n        \r\n                                        <mat-card appVideo (click)=\"onSelectTime1(time2,i,$event)\" \r\n                                        id=\"example\"  ><span fxLayoutAlign=\"center stretch\"\r\n                                                class=\"matContent\" >{{time2}}</span></mat-card>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div fxLayout=\"row wrap\">\r\n                                    <div fxFlex=\"100\">\r\n                                        <div fxFlex=\"30\" *ngFor=\"let time3 of selectTime3;let i=index\">\r\n            \r\n                                            <mat-card appVideo (click)=\"onSelectTime1(time3,i,$event)\"  \r\n                                            id=\"example\"   ><span fxLayoutAlign=\"center stretch\"\r\n                                                    class=\"matContent\" >{{time3}}</span></mat-card>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div fxLayout=\"row wrap\">\r\n                                        <div fxFlex=\"100\">\r\n                                            <div fxFlex=\"30\" *ngFor=\"let time4 of selectTime4;let i=index\">\r\n                \r\n                                                <mat-card appVideo (click)=\"onSelectTime1(time4,i,$event)\" \r\n                                                id=\"example\" ><span fxLayoutAlign=\"center stretch\"\r\n                                                        class=\"matContent\" >{{time4}}</span></mat-card>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div fxLayout=\"row wrap\">\r\n                                            <div fxFlex=\"100\">\r\n                                                <div fxFlex=\"30\" *ngFor=\"let time5 of selectTime5;let i=index\">\r\n                    \r\n                                                    <mat-card appVideo (click)=\"onSelectTime1(time5,i,$event)\" \r\n                                                    id=\"example\"  ><span fxLayoutAlign=\"center stretch\"\r\n                                                            class=\"matContent\" >{{time5}}</span></mat-card>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                    </div> \r\n           \r\n           \r\n         \r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</mat-card>\r\n<div class=\"button1\">\r\n    <button mat-button class=\"Back\">Back</button>\r\n    <button mat-stroked-button class=\"Next\" id=\"n\" (click)=\"onNextOfSheduleAppointment()\">Next</button>\r\n    <!-- [disabled]=\"!showNext\"  -->\r\n</div>\r\n\r\n\r\n","import { Routes } from \"@angular/router\";\r\nimport { ScheduleAppointmentComponent } from \"./schedule-appointment/schedule-appointment.component\";\r\nimport { VideoVerificationComponent } from \"./video-verification.component\";\r\nimport { CalljoinComponent } from \"./calljoin/calljoin.component\";\r\n\r\nexport const VideoRoutes: Routes = [\r\n    {\r\n        path: 'verification',\r\n        component: VideoVerificationComponent,//video-verification/verification-->to navigatte\r\n       \r\n       \r\n    },\r\n    {\r\n        path:'schedule-appointment',\r\n        component:ScheduleAppointmentComponent\r\n    },\r\n    {\r\n        path:'calljoin',\r\n        component:CalljoinComponent\r\n    }\r\n];"],"sourceRoot":"webpack:///"}