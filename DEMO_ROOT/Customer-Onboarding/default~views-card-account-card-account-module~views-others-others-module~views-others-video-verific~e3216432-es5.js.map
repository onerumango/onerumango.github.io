{"version":3,"sources":["webpack:///src/app/views/others/fingerprint-authentication/fingerprint-authentication.component.ts","webpack:///src/app/views/others/fingerprint-authentication/fingerprint-authentication.component.html","webpack:///node_modules/tesseract.js/src/utils/getId.js","webpack:///src/app/views/others/kyc-verification/kyc-verification.component.html","webpack:///src/app/views/others/kyc-verification/kyc-verification.component.ts","webpack:///node_modules/tesseract.js/src/utils/circularize.js","webpack:///node_modules/tesseract.js/src/constants/PSM.js","webpack:///node_modules/tesseract.js/src/worker/browser/loadImage.js","webpack:///node_modules/tesseract.js/src/createScheduler.js","webpack:///node_modules/tesseract.js/src/worker/browser/defaultOptions.js","webpack:///node_modules/resolve-url/resolve-url.js","webpack:///node_modules/tesseract.js/src/utils/resolvePaths.js","webpack:///node_modules/tesseract.js/src/worker/browser/send.js","webpack:///node_modules/tesseract.js/src/constants/defaultOptions.js","webpack:///node_modules/is-electron/index.js","webpack:///node_modules/tesseract.js/src/createWorker.js","webpack:///node_modules/tesseract.js/src/worker/browser/terminateWorker.js","webpack:///node_modules/tesseract.js/src/createJob.js","webpack:///src/app/views/others/kyc-basic-information/kyc-basic-information.component.ts","webpack:///src/app/views/others/kyc-basic-information/kyc-basic-information.component.html","webpack:///node_modules/tesseract.js/src/worker/browser/index.js","webpack:///node_modules/tesseract.js/src/worker/browser/onMessage.js","webpack:///node_modules/tesseract.js/src/utils/getEnvironment.js","webpack:///node_modules/tesseract.js/src/utils/log.js","webpack:///node_modules/regenerator-runtime/runtime.js","webpack:///node_modules/tesseract.js/src/constants/config.js","webpack:///node_modules/tesseract.js/src/worker/browser/spawnWorker.js","webpack:///src/app/views/others/verification-completed/verification-completed.component.ts","webpack:///src/app/views/others/verification-completed/verification-completed.component.html","webpack:///node_modules/tesseract.js/src/Tesseract.js","webpack:///node_modules/tesseract.js/src/constants/OEM.js","webpack:///node_modules/tesseract.js/src/index.js"],"names":["FingerprintAuthenticationComponent","dialogRef","snack","api","fb","data","update","otpmodel","OtpModel1","number","type","dob","id","name","address","errormsg","basicInformationForm","group","otp","required","console","log","close","form","sourceKey","sourceValue","getOtpValidating","subscribe","resp","closeClick","setVerify","verify","setVerify1","error","responseMessage","fire","icon","text","width","confirmButtonText","confirmButtonColor","source_key","source","source_value","getOtp","open","duration","verticalPosition","horizontalPosition","selector","templateUrl","styleUrls","OtpModel","module","exports","prefix","cnt","Math","random","toString","slice","KycVerificationComponent","loader","ls","http","dialog","router","fingerPrintService","sanitizer","cdr","shareDataService","dialogService","locationStrategy","appApiService","cifNumberForm","maxDate","Date","settingallCustInfo","editFile","removeUpload","docData","billing","basicInfoSavedAlready","isCifValid","radioFlag","arrayState","isAllSameDigitVal","prefixFlag","uploadDone","listOfCustByCif","countrys","uplaod","Upload","cifFetch","array","checked","array1","permanentAddress","addressType","address1","pattern","address2","city","zipCode","minLength","maxLength","country","residenceType","state","aadharParser","str","adharNumber","nameLineIndex","asciiStr","replace","trim","lines","split","i","length","count","startIndex","j","substr","some","docString","dobIndex","indexOf","pop","dobArray","kycVerificationForm","controls","dateOfBirth","setValue","names","filter","x","join","fullName","editKycScreen","localStorage","getItem","kycVerificationForm1","documentsList","createItem","preventBackButton","emailVerify","getverify1","assignVerify","getverify","cifNumber","documentName","primaryEmailAdress","phoneNumber","firstName","lastName","middleName","customer_id","isAddressSame","gender","maritalStatus","nationality","profileImage","communicationAddress","imageURL","getDoc","get","patchValue","autofillDetails","history","pushState","location","href","onPopState","docNum","value","getStateName","getPerStateName","getCityName","reset","fileNameFront","fileNameBack","event","charCode","keyCode","disableButton","openKycVerificationMethod","entityName","getAllCountries","countryName","getStateByCountryId","authStatus","push","stateName","key","Object","prototype","hasOwnProperty","call","element","elementState","getDropDownForStateCity","arrayState1","arrayCity","City","elementCity","detectChanges","markForCheck","arrayCity1","customerId","document_type","getCustomerDocuments","profileId","fileUrl","doConfirmDialog","response","profileFile","nativeElement","deleteCustomerDoc","KycForm","index","side","kyc","selectedFiles","target","files","fileNameCheckBack","fileExtBack","toLowerCase","fun2","documentType","fileNameCheck","fileExt","fun1","fileName","reader","FileReader","readAsDataURL","readAsText","onload","event2","result","img","docName","worker","load","loadLanguage","initialize","recognize","terminate","aadharDetails","namePancard","panNumber","pancard","imageOCR","url","filenameFrontSide","extension","resultFrontSide","dataFront","refreshCustomerId","fileType","verificationType","documentSide","idNumber","filenameBackSide","resultBackSide","imageOCRBack","urlback","dataBack","undefined","splitFunction","docType","cId","uploadData","FormData","urlB","doOCR","urlF","text1","countryAadhar","residency","pinCode","includes","fileData1","fileData2","indexs","dropVariableDoc","bioName","bioType","resi","marr","coun","nation","getDropDownValues","Documents","DocumentsName","biometrics_Name","responseData","biometrics_Type","responseDatas","genders","responses","Residences","respo","MaritalStatus","re","datas","control","e","contains","addControl","removeControl","inputChar","String","fromCharCode","test","preventDefault","clearTimeout","timer","setTimeout","fetchByCif","res","customerInfoList","editCif","getAllCustomerDetails","userAddress","getPerCityName","email","openDialog1","phoneNUmber","disableClose","afterClosed","submit","profilePicture","append","JSON","stringify","upload","tab","textLabel","navigateByUrl","fetchCustomerDetails","phoneNumberDetailsDialogue","nextEnableFunction","setOCR","dateSendingToServer","transform","invalid","payload","kycSubmit","kycScreenBasicinfo","uploadFrontSide","uploadBackSide","setItem","setName","sessionStorage","kycReference","kycRef","profileUpload","uploadDocument","next","err","body","status","backSideUploaded","frontSideUploaded","setKycRef","inp","setIndex","setFinishFlag","finishFlag","shareCustomerId","removeItem","loading","image","imgUrl","gettingCustomerDetails","sendKycDataFetchedInfo","customerInformation","customerAdditionalInfo","kycStatus","getProfileImage","verificationInfo","custStatus","ngOnInit","setCustVerificationValues","date","format","openDialogEmail","document","getElementById","click","zipIndex","previousStep","resetForm","onNext","DocData","page","blocks","paragraphs","words","symbols","forEach","block","paragraph","line","word","sym","OSD_ONLY","AUTO_OSD","AUTO_ONLY","AUTO","SINGLE_COLUMN","SINGLE_BLOCK_VERT_TEXT","SINGLE_BLOCK","SINGLE_LINE","SINGLE_WORD","CIRCLE_WORD","SINGLE_CHAR","SPARSE_TEXT","SPARSE_TEXT_OSD","resolveURL","readFromBlobOrFile","blob","Promise","resolve","reject","fileReader","onerror","code","Error","readAsArrayBuffer","loadImage","atob","map","c","charCodeAt","fetch","arrayBuffer","HTMLElement","tagName","src","poster","toBlob","File","Blob","Uint8Array","createJob","getId","schedulerCounter","workers","runningWorkers","jobQueue","getQueueLen","getNumWorkers","keys","dequeue","wIds","queue","action","job","w","shift","apply","addWorker","addJob","wid","version","dependencies","defaultOptions","workerPath","process","env","TESS_ENV","corePath","substring","WebAssembly","root","factory","resolveUrl","numUrls","arguments","base","createElement","head","getElementsByTagName","insertBefore","firstChild","a","resolved","removeChild","isBrowser","s","options","opts","packet","postMessage","langPath","workerBlobURL","logger","isElectron","window","versions","electron","navigator","userAgent","resolvePaths","circularize","defaultOEM","spawnWorker","terminateWorker","onMessage","send","workerCounter","_options","errorHandler","resolves","rejects","setResolve","setReject","rej","startJob","jobId","workerId","writeText","path","method","args","readText","encoding","removeFile","FS","langs","oem","setParameters","params","getPDF","title","textonly","detect","d","Array","from","jobCounter","_id","KycBasicInformationComponent","imageUrl","additionalDocs","enableButton","selectedOptions2","disableAddAndDelete","disableFinish","biometricData","diaplayBioCard","irisScan","eScan","biometricScan","dataFetched","disableNext","isDocumentOptionDisabled2","getKycRef","assignKyc","getNewUserInfo","info","updateUserInfo","getKycDataFetchedInfo","biometricList","valueChanges","createBioItem","dataFetchedValue","arrayForm","rows","initGroup","getCustomerId","getAdditionalDocuments","bioDocumentType","changes","emit","imageURLBioScan","imageURLIrish","imageURLFace","faceScan","bioFetchDataBuild","addBioDocsData","report","removeAt","splice","deleteRecord","validindex","findIndex","valid","bioData","isScanned","val","fun","file","fileToUpload","item","doc","CallingSGIFPGetData","capFingerPrint","ErrorCode","createBioItemData","addBioDocs","previous","el","OtpModelUpdate","handler","onmessage","importScripts","logging","setLogging","_logging","runtime","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","constructor","displayName","defineIteratorMethods","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","record","then","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","async","iter","done","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","object","reverse","iterable","iteratorMethod","isNaN","skipTempReset","prev","charAt","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","OEM","DEFAULT","URL","Worker","createObjectURL","VerificationCompletedComponent","kyc_reference","accountType","reference","customer_Id","customerStatus","assign","updateKycStatus","navigate","updateKycStatusByCustId","kycData","createWorker","TESSERACT_ONLY","LSTM_ONLY","TESSERACT_LSTM_COMBINED","createScheduler","Tesseract","PSM"],"mappings":"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","file":"default~views-card-account-card-account-module~views-others-others-module~views-others-video-verific~e3216432-es5.js","sourcesContent":["import { Component, Inject, Input, OnInit } from '@angular/core';\r\n// import { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n// import { ApiService } from 'app/api.service';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { DialogData, KycScreeningComponent } from '../kyc-screening/kyc-screening.component';\r\nimport { OtpModelUpdate } from '../kyc-basic-information/kyc-basic-information.component';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport Swal from 'sweetalert2';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-fingerprint-authentication',\r\n  templateUrl: './fingerprint-authentication.component.html',\r\n  styleUrls: ['./fingerprint-authentication.component.scss']\r\n})\r\nexport class FingerprintAuthenticationComponent implements OnInit {\r\n public number;\r\n  public type;\r\n  update=new OtpModelUpdate();\r\n  errormsg : string;\r\n  basicInformationForm: FormGroup;\r\n  otpmodel = new OtpModel1();\r\n  dob: any;\r\n  id: any;\r\n  name: any;\r\n  address: any;\r\n  constructor(private dialogRef: MatDialogRef<FingerprintAuthenticationComponent>,\r\n    private snack: MatSnackBar,private api:ApiService,private fb: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) private data: any\r\n  ) {\r\n    this.number =data.number;\r\n    this.type=data.type;\r\n    this.dob=data.dob,\r\n    this. id=data.id,\r\n    this.name=data.name,\r\n    this.address=data.address\r\n  }\r\n  ngOnInit() {\r\n    if(this.type !== \"OCR function\"){\r\n    this.errormsg = \"An OTP has been sent to your \" + this.type;\r\n    this.basicInformationForm = this.fb.group({\r\n      otp: ['',[Validators.required]],\r\n    \r\n    })\r\n  }\r\n  }\r\n  buttonClick(){\r\n     \r\n  }\r\n\r\n  closeClick(){\r\n    console.log(\"reached here\")\r\n    // [routerLink]=\"['/others/kyc']\"\r\n    \r\n    this.dialogRef.close();\r\n    // this.router.navigateByUrl('/others/kyc');\r\n    \r\n    \r\n    \r\n    \r\n    \r\n     \r\n  }\r\n  verify(form)\r\n  {\r\n    if(this.type==\"email id\"){\r\n     this.update.sourceKey=\"email\"\r\n    }\r\n    if(this.type==\"Mobile Number\"){\r\n      this.update.sourceKey=\"mobile\"\r\n     }\r\n\r\n  this.update.sourceValue=this.number,\r\n  this.update.otp=form.otp,\r\n  this.update.type=\"\"\r\n \r\n  this.api.getOtpValidating(this.update).subscribe(resp=>{\r\n    console.log(\"response from backend\",resp)\r\n    if(resp){\r\n    if(resp && this.type==\"Mobile Number\"){\r\n      this.closeClick();\r\n      this.api.setVerify({\r\n        verify:'verified',\r\n        type:this.update.sourceKey\r\n        \r\n       });\r\n     \r\n    }\r\n    else if(resp && this.type==\"email id\"){\r\n      this.closeClick();\r\n      this.api.setVerify1({\r\n        verify:'verified',\r\n        type:this.update.sourceKey\r\n        \r\n       }); \r\n    \r\n\r\n    }\r\n   \r\n  }\r\n  }, error => {\r\n    console.log('error : ',error.responseMessage, error);\r\n\r\n   if(error.error){\r\n      \r\n      Swal.fire({\r\n            icon: 'error',\r\n           text:\"Error message : \"+error.error,\r\n            width:500,\r\n            confirmButtonText: \"OK\",\r\n            confirmButtonColor:'#456EFE'\r\n          })\r\n          // return false;\r\n          \r\n    }\r\n  if(error && this.type==\"Mobile Number\"){\r\n      this.closeClick();\r\n      this.api.setVerify({\r\n        verify:'verify',\r\n        type:this.update.sourceKey\r\n        \r\n       }); \r\n      \r\n        \r\n      }\r\n    else{\r\n      console.log(\"in else eerrrr email\");\r\n      this.api.setVerify1({\r\n        verify:'verify',\r\n        type:this.update.sourceKey\r\n      });\r\n      this.errormsg = \"Error in OTP\";\r\n   \r\n    }\r\n    this.closeClick();\r\n  })\r\n  }\r\n  getOtp()\r\n\r\n  {\r\n   \r\n  if(this.type==\"email id\"){\r\n    this.otpmodel.source_key=\"email\"\r\n    this.otpmodel.source='customer';\r\n    this.otpmodel.source_value=this.number;\r\n  }\r\n   if(this.type==\"Mobile Number\"){\r\n     this.otpmodel.source_key=\"mobile\"\r\n     this.otpmodel.source='customer';\r\n     this.otpmodel.source_value=this.number;\r\n\r\n    }\r\n\r\n    this.api.getOtp(this.otpmodel).subscribe(resp=>{\r\n    console.log(resp)  \r\n     if(resp !== null){\r\n      this.snack.open('OTP has been sent again', 'OK', {\r\n        duration: 4000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      });\r\n     }\r\n  \r\n    })\r\n  \r\n  }\r\n  \r\n}\r\n\r\n export class OtpModel {\r\n\tprivate source_key:string;\r\n\tprivate source_value;\r\n\tprivate source;\r\n}\r\nexport class OtpModel1 {\r\n  source_key:string;\r\n  source_value;\r\n  source;\r\n }\r\n\r\n \r\n","\r\n\r\n\r\n  <button mat-button id=\"close\" mat-dialog-close (click)=\"closeClick()\">\r\n    <mat-icon class=\"closeicon\">close</mat-icon>\r\n  </button>\r\n \r\n\r\n<form  *ngIf=\"type != 'OCR function'\" [formGroup]=\"basicInformationForm\">\r\n\r\n<div fxLayout=\"row\">\r\n \r\n  <div class=\"pd-2\" id=\"box\">\r\n    \r\n    <span class=\"verification\">{{errormsg}}</span> \r\n  <span class=\"phoneNumber\">{{this.number}}</span>\r\n  <span class=\"verify\">Please enter the OTP  to verify</span>\r\n  <div class=\"flex-grow-1\">\r\n \r\n    <mat-card type=\"input\" class=\"inputMatcard\">\r\n        <input matInput  id=\"otp\" \r\n        class=\"alignment\"  \r\n        type=\"number\"  \r\n        maxlength=\"6\" \r\n        oninput=\"this.value = this.value.slice(0, this.maxLength);\" \r\n        formControlName=\"otp\">\r\n    </mat-card>\r\n    \r\n   \r\n</div>\r\n<span class=\"verify1\">Not Recieved?<span id=\"resend\" (click)=\"getOtp()\">Resend</span></span>\r\n\r\n</div>\r\n \r\n</div>\r\n\r\n  <button class=\"button\" mat-stroked-button [disabled]=\"!basicInformationForm.valid\"\r\n   (click)=\"verify(basicInformationForm.value)\">Proceed</button>\r\n</form>\r\n<div fxLayout=\"row\" class=\"ocrDiv\">\r\n \r\n  <div class=\"pd-2\" id=\"box\">\r\n    <!-- <span class=\"ocrDetailsSpan\">Aadhar Details</span>  -->\r\n<mat-card class=\"pd-2\"  *ngIf=\"type == 'OCR function'\">\r\n \r\n  <div >\r\n      <tr>\r\n          <td>Name:{{name}}</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Id Number:{{id}}</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Dob: {{dob}}</td>\r\n      </tr>\r\n      <tr *ngIf=\"address\">\r\n          <td>Address: {{address}}</td>\r\n      </tr>\r\n      <!-- <tr *ngIf=\"dateOfIssue === 'undefined' && documentForm.controls.documentName.value=='Passport'\">\r\n          <td>Date Of Issue: {{dateOfIssue}}</td>\r\n      </tr>\r\n      <tr *ngIf=\"dateOfExpiry === 'undefined' && documentForm.controls.documentName.value=='Passport'\">\r\n          <td>Date Of Expiry: {{dateOfExpiry}}</td>\r\n      </tr> -->\r\n  </div>\r\n</mat-card> \r\n  </div></div>","module.exports = (prefix, cnt) => (\n  `${prefix}-${cnt}-${Math.random().toString(16).slice(3, 8)}`\n);\n","<form [formGroup]=\"kycVerificationForm1\">\r\n  <mat-card-content formArrayName=\"documentsList\" class=\"parentMatCardContent\"\r\n    *ngFor=\"let item of kycVerificationForm1.get('documentsList')['controls']; let i = index;\">\r\n    <div fxLayout=\"row\" [formGroupName]=\"i\" fxLayoutGap=\"25px\" class=\"aadharForm\">\r\n      <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"mainAadhar\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"5px\">\r\n          <div  class=\"pb-1\">\r\n        <mat-button-toggle-group class=\"toggleGroup1\">\r\n          <mat-button-toggle *ngFor=\"let option of array1; let i = index\" color=\"primary\" class=\"toggleGroup\"\r\n            [checked]=\"option.checked\" [ngStyle]=\"{'background-color':this.radioFlag === option.name?'#C0C0C0':''}\"\r\n            [value]=\"option.name\" (click)=\"radioEvent($event)\">{{\r\n            option.name }}\r\n          </mat-button-toggle>\r\n        </mat-button-toggle-group>\r\n      </div>\r\n    </div>\r\n\r\n     <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\">\r\n        <div class=\"pb-1\" class=\"aadharDoc\">\r\n          <!-- <mat-form-field id=\"check\">\r\n            <mat-label class=\"padding paddingButton\">Document Name</mat-label>\r\n            <mat-select formControlName=\"documentName\" (valueChange)=\"changeValue2($event)\">\r\n              <mat-option value=\"Aadhar card\">Aadhar card</mat-option>\r\n            </mat-select>\r\n            \r\n          </mat-form-field> -->\r\n          <mat-hint>Document Name</mat-hint>\r\n          <mat-card class=\"widthCard inputMatcard width\"\r\n          [ngClass]=\"{'errbd': !kycVerificationForm.get('documentName').valid && kycVerificationForm.get('documentName').touched}\">\r\n          <mat-select formControlName=\"documentName\" (valueChange)=\"changeValue2($event)\">\r\n            <mat-option value=\"\">Select</mat-option>\r\n            <mat-option value=\"Aadhar card\">Aadhar card</mat-option>\r\n\r\n          </mat-select>\r\n          </mat-card>\r\n        </div>\r\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\" *ngIf=\"radioFlag=='Auto'\">\r\n          <div class=\"pb-1\">\r\n            \r\n            <!-- <mat-form-field id=\"check\">\r\n              <mat-label class=\"padding paddingButton\">Document Number</mat-label>\r\n              \r\n              <input matInput formControlName=\"docNum\" type=\"number\" name=\"Document Number\" placeholder=\"Document Number\"  />\r\n              \r\n            </mat-form-field> -->\r\n            <div class=\"aadharDoc\">\r\n            <mat-hint>Document Number</mat-hint>\r\n            <mat-card  class=\" inputMatcard\"\r\n            [ngClass]=\"{'errbd': !kycVerificationForm.get('documentName').valid && kycVerificationForm.get('documentName').touched}\">\r\n            <input matInput formControlName=\"docNum\" type=\"number\"  name=\"Document Number\" maxLength=\"12\" class=\"width\" placeholder=\"Document Number\">\r\n            <!-- <input matInput name=\"phoneNumber\" autocomplete=\"off\" maxLength=\"10\" formControlName=\"phoneNumber\" required\r\n                  (keypress)=_keyPress($event) /> -->\r\n\r\n            </mat-card>\r\n          </div>\r\n\r\n            \r\n            \r\n            <div fxFlex=\"50%\" fxFlex.xs=\"50%\"  class=\"aadharDocNum\" *ngIf=\"radioFlag=='Auto'\">\r\n              <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"aadharFetchDiv\">\r\n\r\n\r\n                <a *ngIf=\"radioFlag=='Auto'\" class=\"aadharFetch\" (click)=\"manualUpload()\" [routerLink]=\"\">Fetch</a> &nbsp;&nbsp;&nbsp;\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"aadharUpload\" *ngIf=\"radioFlag=='Manual'\">\r\n          <div>\r\n            <button mat-raised-button (click)=\"fileData1.click()\" [disabled]=\"!disableButton\">\r\n              <input class=\"aadharInput\" type=\"file\" name=\"fileData1\" #fileData1 formControlName=\"fileData1\"\r\n                (change)=\"onUpload1($event,kycVerificationForm1.value,i,'frontSide')\">Front Side</button>\r\n            <p class=\"aadharInput1\">{{resultFrontSide}}</p>\r\n          </div>\r\n          <mat-icon *ngIf=\"frontSideUploaded\" class=\"aadharCheck\">check_circle</mat-icon>\r\n          <div>\r\n            <button mat-raised-button (click)=\"fileData2.click()\" [disabled]=\"!disableButton\">\r\n\r\n              <input class=\"aadharInput\" type=\"file\" name=\"fileData2\" #fileData2 formControlName=\"fileData2\"\r\n                (change)=\"onUpload1($event,kycVerificationForm1.value,i,'backSide')\">Back Side</button>\r\n            <p class=\"aadharInput1\">{{resultBackSide}}</p>\r\n          </div>\r\n          <mat-icon *ngIf=\"backSideUploaded\" class=\"aadharCheck\">check_circle</mat-icon>\r\n\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n\r\n\r\n     <!-- <mat-button-toggle-group class=\"toggleGroup1\">\r\n        <mat-button-toggle *ngFor=\"let option of array1; let i = index\" color=\"primary\" class=\"toggleGroup\"\r\n          [checked]=\"option.checked\" [ngStyle]=\"{'background-color':this.radioFlag === option.name?'#C0C0C0':''}\"\r\n          [value]=\"option.name\" (click)=\"radioEvent($event)\">{{\r\n          option.name }}\r\n        </mat-button-toggle>\r\n      </mat-button-toggle-group> -->\r\n    </div>\r\n\r\n  </mat-card-content>\r\n</form>\r\n<div class=\"m-333\" style=\"padding-left: 3.9%; padding-right: 3.2%;\">\r\n  <mat-card class=\"marginTopKyc\">\r\n    <form *ngIf=\"kycVerificationForm\" [formGroup]=\"kycVerificationForm\">\r\n      <h3 class=\"verificationHead\">Basic Information</h3>\r\n      <hr class=\"line\" />\r\n\r\n      <div class=\"formSectionContainer\">\r\n        <div class=\"formLeft\">\r\n          <div>\r\n            <button mat-icon-button style=\"float: right; padding-top: 8px;\r\n               padding-left: 30px;cursor: pointer;\">\r\n              <input type=\"file\" #profileFile input type=\"file\" (change)=\"onFileChanged($event)\"\r\n                accept=\"image/png, image/gif, image/jpg, image/jpeg\" class=\"changeInput\">\r\n              <mat-icon color=\"primary\">edit</mat-icon>\r\n            </button>\r\n          </div>\r\n          <div *ngIf=\"imageURL == 'not_available'; else showAvatar\">\r\n            <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"\">\r\n          </div>\r\n          <ng-template #showAvatar>\r\n            <img class=\"formImg\" [src]=\"imageURL\" alt=\"\">\r\n          </ng-template>\r\n          <!-- <ng-container *ngIf=\"kycVerificationForm.get('profileImage').value == 'not_available'; else showAvatar\">\r\n              <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"\"> \r\n            </ng-container>\r\n            <ng-template #showAvatar>\r\n              <img class=\"formImg\" [src]=\"kycVerificationForm.get('profileImage').value\" alt=\"\">\r\n            </ng-template> -->\r\n          <div>\r\n            <mat-icon style=\"color: red; margin-left: 94%; cursor: pointer;\" (click)=\" deleteProfileImg()\">delete\r\n            </mat-icon>\r\n          </div>\r\n\r\n          <!-- <div class=\"change changeDiv\">Change<input type=\"file\" input type=\"file\"\r\n                    (change)=\"onFileChanged($event)\" accept=\" image/png, image/gif , image/jpg, image/jpeg \" class=\"changeInput\">\r\n            </div> -->\r\n          <!-- <button type=\"submit\" class=\"btn btn-danger btn-lg btn-block\" (click)=\"uploadFile($event)\">Upload Image</button> -->\r\n        </div>\r\n  \r\n\r\n        <div>\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start center\">\r\n                  <div>\r\n                    <mat-hint>CIF Number</mat-hint>\r\n                    <mat-card type=\"input\" class=\"widthCard inputMatcard\">\r\n                      <input matInput formControlName=\"cifNumber\" class=\"alignment\" type=\"number\" min=\"0\"\r\n                        (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\" oninput=\"validity.valid||(value='');\" name=\"cifNumber\" value=\"cifNumber\">\r\n                      </mat-card>\r\n                      <div>\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                          <mat-option *ngFor=\"let option of listOfCustByCif\" [value]=\"option.customerId\">\r\n                            <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                              <div fxFlex=\" 100\">\r\n                                <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\" class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                                  <h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n                                    {{option?.firstName | slice:0:1 | uppercase}}{{option?.lastName | slice:0:1 | uppercase}}\r\n                                  </h3>\r\n                                </div>\r\n                                <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar fxFlex=\"10\">\r\n                                  <img matListAvatar style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 90%;margin-bottom: 50px;\"\r\n                                    align=\"center\" [src]=\"option?.profileImage\" alt=\"...\">\r\n                                </div>\r\n                                <div fxFlex=\"80\">\r\n                                  <h5 style=\"margin-bottom: 0px;\">\r\n                                    {{option?.firstName | uppercase}}\r\n                                    {{option?.middleName | uppercase}}\r\n                                    {{option?.lastName | uppercase}}\r\n                                  </h5>\r\n                                  <h6 style=\"margin-top: 0px;\">#{{option?.cifNumber}}</h6>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </mat-option>\r\n                        </mat-autocomplete>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"fechButtonDiv\">\r\n                    <p class=\"fetchButton\" *ngIf=\"!loading\" (click)=\"autofillDetails()\">Fetch</p>\r\n                    <mat-spinner *ngIf=\"loading\" [diameter]=\"40\" class=\"fetchButton\"></mat-spinner>\r\n                  </div>\r\n                  <div [hidden]=\"!kycVerificationForm.get('cifNumber')?.value\" class=\"fechButtonDiv\">\r\n                    <p class=\"fetchButton\" (click)=\"resetData()\">Reset</p>\r\n                  </div>\r\n                </div>\r\n                <!-- <div fxLayoutAlign=\"center\">\r\n                  <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n               </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form\" id=\"formfetch\">\r\n            <div class=\"flex-grow-1\" id=\"fech\">\r\n              <div class=\"flex-grow-2\" style=\"margin-left: -1px;\" >\r\n\r\n                <mat-hint>Prefix*</mat-hint>\r\n                <mat-card class=\"widthCard inputMatcard\"\r\n                  [ngClass]=\"{'errbd': !kycVerificationForm.get('prefix').valid && kycVerificationForm.get('prefix').touched}\">\r\n  \r\n                  <mat-select formControlName=\"prefix\">\r\n                    <mat-option value=\"\">Select</mat-option>\r\n                    <mat-option *ngFor=\"let i of index\" [value]=\"i\">{{\r\n                      i\r\n                      }}</mat-option>\r\n                  </mat-select>\r\n  \r\n  \r\n                </mat-card>\r\n                <mat-error *ngIf=\"\r\n                  !kycVerificationForm.get('prefix').valid &&\r\n                  kycVerificationForm.get('prefix').touched\r\n                \">\r\n                  Please Select Prefix</mat-error>\r\n              </div>\r\n              \r\n              <!-- <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <div>\r\n                  <mat-hint>CIF Number</mat-hint>\r\n                  <mat-card type=\"input\" class=\"widthCard inputMatcard\">\r\n                    <input matInput formControlName=\"cifNumber\" class=\"alignment\" type=\"number\" min=\"0\"\r\n                      oninput=\"validity.valid||(value='');\" name=\"cifNumber\" value=\"cifNumber\">\r\n                  </mat-card>\r\n                </div>\r\n\r\n              </div> -->\r\n              <!-- <div class=\"flex-grow-1\" class=\"fechButtonDiv\">\r\n                <p class=\"fetchButton\" *ngIf=\"!loading\" (click)=\"autofillDetails()\">Fetch</p>\r\n                <mat-spinner *ngIf=\"loading\" [diameter]=\"40\" class=\"fetchButton\"></mat-spinner>\r\n              </div> -->\r\n              <!-- <div fxLayoutAlign=\"center\">\r\n                <mat-spinner *ngIf=\"loading\"></mat-spinner>\r\n             </div> -->\r\n            </div>\r\n\r\n            <!-- <div class=\"flex-grow-2\">\r\n\r\n              <mat-hint>Prefix*</mat-hint>\r\n              <mat-card class=\"widthCard inputMatcard\"\r\n                [ngClass]=\"{'errbd': !kycVerificationForm.get('prefix').valid && kycVerificationForm.get('prefix').touched}\">\r\n\r\n                <mat-select formControlName=\"prefix\">\r\n                  <mat-option value=\"\">Select</mat-option>\r\n                  <mat-option *ngFor=\"let i of index\" [value]=\"i\">{{\r\n                    i\r\n                    }}</mat-option>\r\n                </mat-select>\r\n\r\n\r\n              </mat-card>\r\n              <mat-error *ngIf=\"\r\n                !kycVerificationForm.get('prefix').valid &&\r\n                kycVerificationForm.get('prefix').touched\r\n              \">\r\n                Please Select Prefix</mat-error>\r\n            </div> -->\r\n             <div class=\"flex-grow-1\">\r\n              <mat-hint>First Name*</mat-hint>\r\n              <mat-card class=\"inputMatName\"\r\n                [ngClass]=\"{'errbd': !kycVerificationForm.get('firstName').valid && kycVerificationForm.get('firstName').touched}\">\r\n\r\n                <input matInput formControlName=\"firstName\" autocomplete=\"off\" class=\"alignment\" type=\"text\" name=\"lastName\"\r\n                  (keypress)=\"letterOnly($event)\" value=\"updateUserInfo.firstName\" />\r\n\r\n              </mat-card>\r\n              <mat-error *ngIf=\"\r\n                !kycVerificationForm.get('firstName').valid &&\r\n                kycVerificationForm.get('firstName').touched\r\n              \">\r\n                Please Enter First Name</mat-error>\r\n            </div> \r\n            <div class=\"flex-grow-1\">\r\n              <mat-hint>Middle Name</mat-hint>\r\n              <mat-card class=\"inputMatNew\">\r\n\r\n                <input matInput formControlName=\"middleName\" (keypress)=\"letterOnly($event)\" class=\"alignment\"\r\n                  type=\"text\" name=\"middleName\" />\r\n\r\n              </mat-card>\r\n            </div> \r\n\r\n            <div class=\"flex-grow-1\">\r\n              <mat-hint>Last Name*</mat-hint>\r\n              <mat-card class=\"inputMatLastName\"\r\n                [ngClass]=\"{'errbd': !kycVerificationForm.get('lastName').valid && kycVerificationForm.get('lastName').touched}\">\r\n\r\n                <input matInput formControlName=\"lastName\" autocomplete=\"off\" class=\"alignment\" type=\"text\" name=\"lastName\"\r\n                  (keypress)=\"letterOnly($event)\" value=\"updateUserInfo.lastName\" />\r\n\r\n              </mat-card>\r\n              <mat-error *ngIf=\"\r\n                !kycVerificationForm.get('lastName').valid &&\r\n                kycVerificationForm.get('lastName').touched\r\n              \">\r\n                Please Enter Last Name\r\n              </mat-error>\r\n            </div>\r\n          </div>\r\n          <div class=\"form\">\r\n            <!-- <div class=\"flex-grow-1\">\r\n              <mat-hint>Middle Name</mat-hint>\r\n              <mat-card class=\"inputMatNew\">\r\n\r\n                <input matInput formControlName=\"middleName\" (keypress)=\"letterOnly($event)\" class=\"alignment\"\r\n                  type=\"text\" name=\"middleName\" />\r\n\r\n              </mat-card>\r\n            </div> -->\r\n            <div class=\"flex-grow-1\">\r\n              <mat-hint>Date of Birth*</mat-hint>\r\n              <mat-card class=\"inputMatLastName\" style=\"height:48px;\"\r\n                [ngClass]=\"{'errbd': !kycVerificationForm.get('dateOfBirth').valid && kycVerificationForm.get('dateOfBirth').touched}\">\r\n                <input matInput formControlName=\"dateOfBirth\" id=\"dob\" class=\"alignment\" name=\"dateOfBirth\" readonly\r\n                  [matDatepicker]=\"picker\" [max]=\"maxDate\" value=\"dateOfBirth\">\r\n                <div fxFlex=\"8%\" id=\"toggle\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                  </mat-datepicker-toggle>\r\n\r\n                  <mat-datepicker #picker>\r\n                  </mat-datepicker>\r\n                </div>\r\n\r\n              </mat-card>\r\n\r\n              <mat-error *ngIf=\"\r\n                    !kycVerificationForm.get('dateOfBirth').valid &&\r\n                    kycVerificationForm.get('dateOfBirth').touched\r\n                  \">\r\n                Please Select Date Of Birth\r\n              </mat-error>\r\n            </div>\r\n            <div class=\"flex-grow-1\">\r\n              <mat-hint>Marital Status*</mat-hint>\r\n              <mat-card class=\"inputMatcardMarritial\"\r\n                [ngClass]=\"{'errbd': !kycVerificationForm.get('maritalStatus').valid && kycVerificationForm.get('maritalStatus').touched}\">\r\n\r\n                <mat-select formControlName=\"maritalStatus\">\r\n                  <mat-option value=\"\">Select</mat-option>\r\n                  <mat-option *ngFor=\"let status of MaritalStatus\" [value]=\"status\">{{ status }}\r\n                  </mat-option>\r\n                </mat-select>\r\n\r\n              </mat-card>\r\n              <mat-error *ngIf=\"\r\n                !kycVerificationForm.get('maritalStatus').valid &&\r\n                kycVerificationForm.get('maritalStatus').touched\r\n              \">\r\n                Please Select Marital Status\r\n              </mat-error>\r\n            </div>\r\n            <div class=\"flex-grow-1\">\r\n              <mat-hint>Gender*</mat-hint>\r\n              <mat-card class=\"inputGender\"\r\n                [ngClass]=\"{'errbd': !kycVerificationForm.get('gender').valid && kycVerificationForm.get('gender').touched}\">\r\n\r\n                <mat-select formControlName=\"gender\" (selectionChange)=\"onChangeGender($event)\">\r\n                  <mat-option value=\"\">Select</mat-option>\r\n                  <mat-option *ngFor=\"let gender of genders\" [value]=\"gender\">{{\r\n                    gender\r\n                    }}</mat-option>\r\n                </mat-select>\r\n\r\n              </mat-card>\r\n              <mat-error class=\"help-block\" *ngIf=\"\r\n                !kycVerificationForm.get('gender').valid &&\r\n                kycVerificationForm.get('gender').touched\r\n              \">\r\n                Please Select Gender\r\n              </mat-error>\r\n              <mat-error *ngIf=\" !prefixFlag\">\r\n                &nbsp; Prefix and Gender does not match!\r\n             </mat-error>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"form\">\r\n            <!-- <div class=\"flex-grow-1\">\r\n              <mat-hint>Gender*</mat-hint>\r\n              <mat-card class=\"inputGender\"\r\n                [ngClass]=\"{'errbd': !kycVerificationForm.get('gender').valid && kycVerificationForm.get('gender').touched}\">\r\n\r\n                <mat-select formControlName=\"gender\" (selectionChange)=\"onChangeGender($event)\">\r\n                  <mat-option value=\"\">Select</mat-option>\r\n                  <mat-option *ngFor=\"let gender of genders\" [value]=\"gender\">{{\r\n                    gender\r\n                    }}</mat-option>\r\n                </mat-select>\r\n\r\n              </mat-card>\r\n              <mat-error class=\"help-block\" *ngIf=\"\r\n                !kycVerificationForm.get('gender').valid &&\r\n                kycVerificationForm.get('gender').touched\r\n              \">\r\n                Please Select Gender\r\n              </mat-error>\r\n              <mat-error *ngIf=\" !prefixFlag\">\r\n                &nbsp; Prefix and Gender does not match!\r\n             </mat-error>\r\n            </div> -->\r\n            <div class=\"flex-grow-1\">\r\n              <mat-hint>Nationality*</mat-hint>\r\n              <mat-card class=\"inputGender\"\r\n                [ngClass]=\"{'errbd': !kycVerificationForm.get('nationality').valid && kycVerificationForm.get('nationality').touched}\">\r\n\r\n                <mat-select formControlName=\"nationality\">\r\n                  <mat-option value=\"\">Select</mat-option>\r\n                  <mat-option *ngFor=\"let nation of nationality\" [value]=\"nation\">{{ nation }}</mat-option>\r\n                </mat-select>\r\n\r\n              </mat-card>\r\n              <mat-error *ngIf=\"\r\n                !kycVerificationForm.get('nationality').valid &&\r\n                kycVerificationForm.get('nationality').touched\r\n              \">\r\n                Please Select Nationality\r\n              </mat-error>\r\n            </div>\r\n            <div class=\"flex-grow-1\">\r\n              <mat-hint>Primary Email*</mat-hint>\r\n              <mat-card class=\"inputMatcardMail\" fxLayout=\"row\"\r\n                [ngClass]=\"{'errbd': !kycVerificationForm.get('primaryEmailAdress').valid && kycVerificationForm.get('primaryEmailAdress').touched}\">\r\n\r\n                <input matInput formControlName=\"primaryEmailAdress\" autocomplete=\"off\" type=\"text\" name=\"primaryEmailAdress\" />\r\n                <mat-hint class=\"verification\" (click)=\"getOtp(kycVerificationForm.value)\"\r\n                  *ngIf=\"kycVerificationForm.get('primaryEmailAdress').valid\">{{emailVerify}}</mat-hint>\r\n              </mat-card>\r\n              <mat-error\r\n                *ngIf=\"kycVerificationForm.get('primaryEmailAdress').hasError('required') && kycVerificationForm.get('primaryEmailAdress').touched\">\r\n                Please Enter Primary Email\r\n              </mat-error>\r\n              <mat-error *ngIf=\"kycVerificationForm.get('primaryEmailAdress').hasError('pattern')\">\r\n                Please Enter valid email address!\r\n              </mat-error>\r\n            </div>\r\n            <!-- <div fxFlex=\"5\" fxFlexAlign=\"center\">\r\n              <p class=\"fetchButton\" (click)=\"getOtp(kycVerificationForm.value)\">\r\n                verify\r\n              </p>\r\n            </div> -->\r\n            <div class=\"flex-grow-1\">\r\n              <mat-hint>Mobile Number*</mat-hint>\r\n              <mat-card class=\"inputMatcard\" fxLayout=\"row\"\r\n                [ngClass]=\"{'errbd': !kycVerificationForm.get('phoneNumber').valid && kycVerificationForm.get('phoneNumber').touched}\">\r\n                <input matInput name=\"phoneNumber\" autocomplete=\"off\" maxLength=\"10\" formControlName=\"phoneNumber\" \r\n                  (keypress)=_keyPress($event) />\r\n                <mat-hint class=\"verification\" (click)=\"getOtpMobile(kycVerificationForm.value)\"\r\n                  *ngIf=\"kycVerificationForm.get('phoneNumber').valid\">{{verify}}</mat-hint>\r\n              </mat-card>\r\n              <mat-error\r\n                *ngIf=\"kycVerificationForm.get('phoneNumber').hasError('required') && kycVerificationForm.get('phoneNumber').touched\">\r\n                Please Enter Mobile Number\r\n              </mat-error>\r\n              <mat-error *ngIf=\"kycVerificationForm.get('phoneNumber').hasError('pattern')\">\r\n                Mobile number must be 10 digits.\r\n              </mat-error>\r\n              <mat-error\r\n              *ngIf=\"kycVerificationForm.controls['phoneNumber'].value == '0000000000'\">\r\n              &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n          </mat-error>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n      <div fxLayout=\"row\">\r\n        <div fxFlex=\"100\">\r\n          <div id=\"bill\">\r\n            <div class=\"billName\">\r\n              Is your Permanent Address same as Communication Address?\r\n            </div>\r\n\r\n            <mat-radio-group formControlName=\"isAddressSame\">\r\n              <mat-radio-button *ngFor=\"let option of array; let i = index\" class=\"ml-8\" color=\"primary\"\r\n                [checked]=\"option.checked\" [value]=\"option.name\" (change)=\"\r\n                        onChange(\r\n                          kycVerificationForm.controls.permanentAddress,\r\n                          $event\r\n                        )\r\n                      \">{{ option.name }}\r\n              </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div fxLayoutGap=\"10px\" fxLayout=\"row wrap\" class=\"mt-32  communicationForm\">\r\n        <div fxFlex class=\"addressGrid\" id=\"communicationBlockForm\">\r\n          <div class=\"spanDiv\">\r\n            <span class=\"span\">Communication Address </span>\r\n            <mat-divider class=\"divider\"></mat-divider>\r\n          </div>\r\n          <div formGroupName=\"communicationAddress\">\r\n            <!-- <div fxLayout=\"row\">\r\n                    <div fxFlex=\"100\">-->\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>Address Line 1*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.address1').valid && \r\n                      kycVerificationForm.get('communicationAddress.address1').touched}\">\r\n\r\n                    <!-- <input matInput formControlName=\"address1\" class=\"full-width\" maxlength=\"50\" type=\"text\" name=\"address1\" /> -->\r\n                    <textarea matInput formControlName=\"address1\" autocomplete=\"off\" class=\"full-width\" maxlength=\"50\" name=\"address1\" (keypress)=\"keyPressAlphanumeric($event)\" ></textarea>\r\n\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"(!kycVerificationForm.get('communicationAddress.address1').valid && kycVerificationForm.get('communicationAddress.address1').touched) || ( kycVerificationForm.get('communicationAddress.address1').touched &&  kycVerificationForm.get('communicationAddress.address1').hasError('pattern'))\">\r\n                    Please Enter Valid Address Line 1\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n              <!--<div fxLayout=\"row\">\r\n                    <div fxFlex=\"100\">-->\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>Address Line 2*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.address2').valid && \r\n                      kycVerificationForm.get('communicationAddress.address2').touched}\">\r\n\r\n                    <!-- <input matInput formControlName=\"address2\" maxlength=\"25\" type=\"text\" name=\"address2\" /> -->\r\n                    <textarea matInput formControlName=\"address2\" autocomplete=\"off\" class=\"full-width\" maxlength=\"50\" name=\"address2\" (keypress)=\"keyPressAlphanumeric($event)\" ></textarea>\r\n\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"(!kycVerificationForm.get('communicationAddress.address2').valid && kycVerificationForm.get('communicationAddress.address2').touched) || ( kycVerificationForm.get('communicationAddress.address2').touched &&  kycVerificationForm.get('communicationAddress.address2').hasError('pattern'))\">\r\n                    Please Enter Valid Address Line 2\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>Residence Type*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.residenceType').valid && \r\n                      kycVerificationForm.get('communicationAddress.residenceType').touched}\">\r\n\r\n                    <mat-select formControlName=\"residenceType\">\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let Resi of Residences\" [value]=\"Resi\">{{ Resi }}</mat-option>\r\n                    </mat-select>\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"\r\n                  !kycVerificationForm.get('communicationAddress.residenceType').valid &&\r\n                  kycVerificationForm.get('communicationAddress.residenceType').touched\r\n                \">\r\n                    Please Select Residence Type</mat-error>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>Country*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.country').valid && \r\n                      kycVerificationForm.get('communicationAddress.country').touched}\">\r\n\r\n                    <mat-select formControlName=\"country\" (selectionChange)=\"getStateName($event.value)\"\r\n                      (selectionChange)=\"getCityName($event.value)\">\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let country of countrys\" [value]=\"country\">{{ country }}</mat-option>\r\n                    </mat-select>\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"\r\n                        !kycVerificationForm.get('communicationAddress.country').valid &&\r\n                        kycVerificationForm.get('communicationAddress.country').touched\r\n                      \">\r\n                    Please Select Country</mat-error>\r\n                </div>\r\n              </div>\r\n              <!-- <div fxFlex=\"50%\">\r\n                      <div class=\"pb-1\">\r\n                        <mat-hint>City*</mat-hint>\r\n                        <mat-card class=\"address-card inputMatcard3\"\r\n                        [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.city').valid && \r\n                      kycVerificationForm.get('communicationAddress.city').touched}\">\r\n                       \r\n                          <input matInput formControlName=\"city\" type=\"text\" name=\"city\" (keypress)=\"letterOnly($event)\" />\r\n                        </mat-card>\r\n                        <mat-error *ngIf=\"\r\n                        !kycVerificationForm.get('communicationAddress.city').valid &&\r\n                        kycVerificationForm.get('communicationAddress.city').touched\"  >\r\n                        Please enter city</mat-error>\r\n                      </div>\r\n                    </div> -->\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <!-- state -->\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>State*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.state').valid && \r\n                      kycVerificationForm.get('communicationAddress.state').touched}\">\r\n                    <mat-select name=\"state\" formControlName=\"state\" (selectionChange)=\"getCityName($event.value)\">\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let state of arrayState\" [value]=\"state\">{{state}}</mat-option>\r\n\r\n                    </mat-select>\r\n                    <!-- <input matInput formControlName=\"state\" type=\"text\" name=\"city\" (keypress)=\"letterOnly($event)\" /> -->\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"\r\n                        !kycVerificationForm.get('communicationAddress.state').valid &&\r\n                        kycVerificationForm.get('communicationAddress.state').touched\">\r\n                    Please Select State</mat-error>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>City*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.city').valid && \r\n                      kycVerificationForm.get('communicationAddress.city').touched}\">\r\n                    <mat-select name=\"city\" formControlName=\"city\">\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city\">{{city}}</mat-option>\r\n\r\n                    </mat-select>\r\n                    <!-- <input matInput formControlName=\"city\" type=\"text\" name=\"city\" (keypress)=\"letterOnly($event)\" /> -->\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"\r\n                        !kycVerificationForm.get('communicationAddress.city').valid &&\r\n                        kycVerificationForm.get('communicationAddress.city').touched\">\r\n                    Please Select City</mat-error>\r\n                </div>\r\n              </div>\r\n              <!-- <div fxFlex=\"50%\">\r\n                      <div class=\"pb-1\">\r\n                        <mat-hint>Country*</mat-hint>\r\n                        <mat-card class=\"address-card inputMatcard3\"\r\n                        [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.country').valid && \r\n                      kycVerificationForm.get('communicationAddress.country').touched}\">\r\n                         \r\n                          <mat-select formControlName=\"country\">\r\n                            <mat-option value=\"\">Select</mat-option>\r\n                            <mat-option *ngFor=\"let country of countrys\" [value]=\"country\">{{ country }}</mat-option>\r\n                          </mat-select>\r\n                        </mat-card>\r\n                        <mat-error *ngIf=\"\r\n                        !kycVerificationForm.get('communicationAddress.country').valid &&\r\n                        kycVerificationForm.get('communicationAddress.country').touched\r\n                      \">\r\n                        Please select country</mat-error>\r\n                      </div>\r\n                    </div> -->\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>Zip Code*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.zipCode').valid && \r\n                                  kycVerificationForm.get('communicationAddress.zipCode').touched}\">\r\n\r\n                    <input matInput formControlName=\"zipCode\" autocomplete=\"off\" onlyNumber type=\"text\" matInput minLength=\"5\" maxLength=\"10\"\r\n                      (keyup)=\"isAllSameDigit($event,0)\" name=\"zipCode\" />\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"\r\n                          (!kycVerificationForm.get('communicationAddress.zipCode').valid &&\r\n                          kycVerificationForm.get('communicationAddress.zipCode').touched ||\r\n                          kycVerificationForm.get('communicationAddress.zipCode').required && \r\n                          kycVerificationForm.get('permanentAddress.zipCode').minLength) \">\r\n                          Please enter vaild Zip Code!(5-10 digits)\r\n                  </mat-error>\r\n                  <h5 *ngIf=\"isAllSameDigitVal && 0==zipIndex\" style=\"color: #E74C3C;\">Please enter valid Zip Code!\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div fxFlex class=\"addressGrid\" *ngIf=\"sameAddress == 'No'\" id=\"communicationBlockForm\">\r\n          <div class=\"spanDiv\">\r\n            <span class=\"span\"> Permanent Address</span>\r\n            <mat-divider class=\"divider\"></mat-divider>\r\n          </div>\r\n          <div formGroupName=\"permanentAddress\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>Address Line 1*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('permanentAddress.address1').valid && \r\n                      kycVerificationForm.get('permanentAddress.address1').touched}\">\r\n\r\n                    <!-- <input matInput formControlName=\"address1\" maxlength=\"25\" type=\"text\" name=\"address1\" /> -->\r\n                    <textarea matInput formControlName=\"address1\" class=\"full-width\" maxlength=\"50\" name=\"address1\" (keypress)=\"keyPressAlphanumeric($event)\" ></textarea>\r\n\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"(!kycVerificationForm.get('permanentAddress.address1').valid && kycVerificationForm.get('permanentAddress.address1').touched) || ( kycVerificationForm.get('permanentAddress.address1').touched &&  kycVerificationForm.get('permanentAddress.address1').hasError('pattern'))\">\r\n                    Please Enter Valid Address Line 1\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- <div fxLayout=\"row\"> -->\r\n              <div fxFlex=\"50\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>Address Line 2*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('permanentAddress.address2').valid && \r\n                      kycVerificationForm.get('permanentAddress.address2').touched}\">\r\n\r\n                    <!-- <input matInput formControlName=\"address2\" maxlength=\"25\" type=\"text\" name=\"address2\" /> -->\r\n                    <textarea matInput formControlName=\"address2\" class=\"full-width\" maxlength=\"50\" name=\"address2\" (keypress)=\"keyPressAlphanumeric($event)\" ></textarea>\r\n\r\n\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"(!kycVerificationForm.get('permanentAddress.address2').valid && kycVerificationForm.get('permanentAddress.address2').touched) || ( kycVerificationForm.get('permanentAddress.address2').touched &&  kycVerificationForm.get('permanentAddress.address2').hasError('pattern'))\">\r\n                    Please Enter Valid Address Line 2\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n              <!-- </div> -->\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>Residence Type*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('permanentAddress.residenceType').valid && \r\n                      kycVerificationForm.get('permanentAddress.residenceType').touched}\">\r\n\r\n                    <mat-select formControlName=\"residenceType\">\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let Resi of Residences\" [value]=\"Resi\">{{ Resi }}</mat-option>\r\n                    </mat-select>\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"\r\n                          !kycVerificationForm.get('permanentAddress.residenceType').valid &&\r\n                          kycVerificationForm.get('permanentAddress.residenceType').touched\r\n                        \">\r\n                    Please Select Residence Type</mat-error>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>Country*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('permanentAddress.country').valid && \r\n                          kycVerificationForm.get('permanentAddress.country').touched}\">\r\n\r\n                    <mat-select formControlName=\"country\" (selectionChange)=\"getPerStateName($event.value)\">\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let country of countrys\" [value]=\"country\">{{ country }}</mat-option>\r\n                    </mat-select>\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"\r\n                          !kycVerificationForm.get('permanentAddress.country').valid &&\r\n                          kycVerificationForm.get('permanentAddress.country').touched\r\n                        \">\r\n                    Please Select Country</mat-error>\r\n                </div>\r\n              </div>\r\n              <!-- <div fxFlex=\"50%\">\r\n                        <div class=\"pb-1\">\r\n                          <mat-hint>City*</mat-hint>\r\n                          <mat-card class=\"address-card inputMatcard3\"\r\n                          [ngClass]=\"{'errbd': !kycVerificationForm.get('permanentAddress.city').valid && \r\n                          kycVerificationForm.get('permanentAddress.city').touched}\">\r\n                         \r\n                            <input matInput formControlName=\"city\" type=\"text\" name=\"city\" (keypress)=\"letterOnly($event)\"/>\r\n                          </mat-card>\r\n                          <mat-error *ngIf=\"\r\n                          !kycVerificationForm.get('permanentAddress.city').valid &&\r\n                          kycVerificationForm.get('permanentAddress.city').touched\r\n                        \">\r\n                          Please enter city</mat-error>\r\n                        </div>\r\n                      </div> -->\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>State*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('permanentAddress.state').valid && \r\n                        kycVerificationForm.get('permanentAddress.state').touched}\">\r\n                    <mat-select name=\"state\" formControlName=\"state\" (selectionChange)=\"getPerCityName($event.value)\">\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let state of arrayState1\" [value]=\"state\">{{state}}</mat-option>\r\n\r\n                    </mat-select>\r\n                    <!-- <input matInput formControlName=\"state\" type=\"text\" name=\"city\" (keypress)=\"letterOnly($event)\" /> -->\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"\r\n                          !kycVerificationForm.get('permanentAddress.state').valid &&\r\n                          kycVerificationForm.get('permanentAddress.state').touched\">\r\n                    Please Select State</mat-error>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>City*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('permanentAddress.city').valid && \r\n                        kycVerificationForm.get('permanentAddress.city').touched}\">\r\n                    <mat-select name=\"city\" formControlName=\"city\">\r\n                      <mat-option value=\"\">Select</mat-option>\r\n                      <mat-option *ngFor=\"let city of arrayCity1\" [value]=\"city\">{{city}}</mat-option>\r\n\r\n                    </mat-select>\r\n                    <!-- <input matInput formControlName=\"city\" type=\"text\" name=\"city\" (keypress)=\"letterOnly($event)\" /> -->\r\n                  </mat-card>\r\n                  <mat-error *ngIf=\"\r\n                          !kycVerificationForm.get('permanentAddress.city').valid &&\r\n                          kycVerificationForm.get('permanentAddress.city').touched\">\r\n                    Please Select City</mat-error>\r\n                </div>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-hint>Zip Code*</mat-hint>\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('permanentAddress.zipCode').valid && \r\n                          kycVerificationForm.get('permanentAddress.zipCode').touched}\">\r\n\r\n                    <input matInput formControlName=\"zipCode\" onlyNumber type=\"text\" matInput minLength=\"6\" maxLength=\"10\"\r\n                      name=\"zipCode\" (keyup)=\"isAllSameDigit($event,1)\"/>\r\n                  </mat-card>\r\n\r\n                  <mat-error *ngIf=\"\r\n                          !kycVerificationForm.get('permanentAddress.zipCode').valid &&\r\n                          kycVerificationForm.get('permanentAddress.zipCode').touched  ||\r\n                          kycVerificationForm.get('permanentAddress.zipCode').required && \r\n                          kycVerificationForm.get('permanentAddress.zipCode').minLength \">\r\n                          Please enter vaild Zip Code!\r\n                  </mat-error>\r\n\r\n                  <h5 *ngIf=\"isAllSameDigitVal && 1==zipIndex\" style=\"color: #E74C3C;\">Please enter valid Zip Code!\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--</div>-->\r\n    </form>\r\n  </mat-card>\r\n  <!-- </mat-card> -->\r\n\r\n  <!-- <div class=\"button\">\r\n      <button mat-stroked-button class=\"Next1\"  (click)=\"previousStep()\">Back</button>\r\n      <button (click)=\"resetForm()\" class='hide' #kychide id='kychide'>-</button> <!--added dummy element to clear the form from other component-->\r\n  <!-- <button mat-stroked-button [disabled]=\"kycVerificationForm.invalid\" \r\n        (click)=\"onNext()\" class=\"Next\">\r\n        Next\r\n      </button> -->\r\n  <!-- </div> -->\r\n  \r\n  \r\n</div>\r\n<div class=\"button1\">\r\n  <span class=\"BackButton\" (click)=\"previousStep()\" >Back</span>\r\n  <button (click)=\"resetForm()\" class='hide' #kychide id='kychide'>-</button>\r\n  <button mat-stroked-button [ngClass]=\"{'next12':!(kycVerificationForm.invalid || !prefixFlag), \r\n  'next':kycVerificationForm.invalid || !prefixFlag}\"  id=\"n\" (click)=\"onNext()\"\r\n  [disabled]=\"kycVerificationForm.invalid || !prefixFlag\" >Next</button>\r\n   \r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { createWorker, Worker } from \"tesseract.js\";\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatTabChangeEvent } from \"@angular/material/tabs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\n\r\nimport { CutomerFingerPrintComponent } from \"../cutomer-finger-print/cutomer-finger-print.component\";\r\nimport { FingerprintAuthenticationComponent } from \"../fingerprint-authentication/fingerprint-authentication.component\";\r\nimport { IrisScan2Component } from \"../iris-scan2/iris-scan2.component\";\r\nimport { OtpModel } from \"../kyc-basic-information/kyc-basic-information.component\";\r\nimport { KycEsignComponent } from \"../kyc-esign/kyc-esign.component\";\r\nimport { KycIrisScanComponent } from \"../kyc-iris-scan/kyc-iris-scan.component\";\r\nimport { KycVerificationMethodComponent } from \"../kyc-verification-method/kyc-verification-method.component\";\r\nimport { VerificationCompletedComponent } from \"../verification-completed/verification-completed.component\";\r\nimport * as moment from \"moment\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { FingerPrintCaptureService } from \"app/shared/services/finger-print-capture.service\";\r\nimport { DatePipe, LocationStrategy } from \"@angular/common\";\r\nimport { empty } from \"rxjs\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { DialogService } from \"app/shared/services/dialogs/dialog.service\";\r\nimport Swal from 'sweetalert2';\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { ApplicationEntryStageService } from \"app/shared/services/application-entry-stage.service\";\r\n@Component({\r\n  selector: \"app-kyc-verification\",\r\n  templateUrl: \"./kyc-verification.component.html\",\r\n  styleUrls: [\"./kyc-verification.component.scss\"],\r\n})\r\nexport class KycVerificationComponent implements OnInit {\r\n  cifNumberForm = new FormControl()\r\n  verificationInfo: any;\r\n\r\n  maxDate = new Date();\r\n  @Output() settingallCustInfo: EventEmitter<object> = new EventEmitter();\r\n\r\n  @ViewChild(\"profileFile\") profileFile: ElementRef;\r\n  // imageUrl: any = \"https://i.ibb.co/fDWsn3G/buck.jpg\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n\r\n  selectedFiles: any;\r\n  fileToUpload: any;\r\n  docData: Array<DocData> = [];\r\n\r\n  kycVerificationForm: FormGroup;\r\n  adressForm: FormGroup;\r\n  billingForm: FormGroup;\r\n  arrayForm: FormGroup;\r\n\r\n  otpmodel = new OtpModel();\r\n\r\n  url: string | ArrayBuffer;\r\n  imgUrl: string | ArrayBuffer;\r\n  fileUrl: string | ArrayBuffer;\r\n  dropVariableDoc: string;\r\n  updateUserInfo: any;\r\n  billing: boolean = true;\r\n  docName: string;\r\n  bioName: string;\r\n  bioType: string;\r\n  coun: string;\r\n  gender: string;\r\n  resi: string;\r\n  marr: string;\r\n  indexs: string;\r\n  nation: string;\r\n  basicInfoSavedAlready: boolean = false;\r\n  cifNumber: any;\r\n  profilePicture: any;\r\n  image: Object;\r\n  name: string;\r\n  verify: string;\r\n  emailVerify: string;\r\n  customerInformation: any;\r\n  ocrFlag: boolean;\r\n  loading: boolean;\r\n  pinCode: any;\r\n  residency: string;\r\n  countryAadhar: string;\r\n  side: any;\r\n\r\n  isCifValid: boolean = false;\r\n\r\n  radioFlag: any = \"Auto\";\r\n  frontSideUploaded: boolean;\r\n  backSideUploaded: boolean;\r\n  fileName: any;\r\n  fileNameFront: any;\r\n  refreshCustomerId: any;\r\n  namePancard: any;\r\n  dob: any;\r\n  panNumber: any;\r\n  pancard: boolean;\r\n  imageOCR: string | ArrayBuffer;\r\n  urlback: any;\r\n  imageOCRBack: any;\r\n  address: string;\r\n  currentFileUpload: any;\r\n  fileNameBack: any;\r\n  disableButton: boolean;\r\n  entityName: string;\r\n  arrayState: string[] = [];\r\n  arrayCity: string[];\r\n  arrayState1: string[];\r\n  arrayCity1: string[];\r\n  resultFrontSide: string;\r\n  resultBackSide: string;\r\n  dataFront: {\r\n    customerId: any; documentName: any; documentType: string; fileType: any; fileName: any; verificationType: string; documentSide: string; idNumber: any\r\n  };\r\n  dataBack: {\r\n    customerId: any; documentName: any; documentType: string; fileType: any; fileName: any; verificationType: string; documentSide: string; idNumber: any\r\n  };\r\n  urlB: any;\r\n  urlF: any;\r\n  id: any;\r\n  filenameFrontSide: any;\r\n  filenameBackSide: any;\r\n\r\n  profileId: any;\r\n  imageURL: any;\r\n  isAllSameDigitVal: boolean = false;\r\n fileNameCheck: any;\r\n  fileNameCheckBack: any;\r\n  zipIndex: number;\r\n  prefixFlag: boolean=false;\r\n  editKycScreen: string;\r\n  uploadDone: boolean=true;\r\n\r\n  timer: any;\r\n  listOfCustByCif: any = [];\r\n\r\n  constructor(\r\n    private loader: AppLoaderService,\r\n    private ls: LocalStoreService,\r\n    private http: HttpClient,\r\n    private api: ApiService,\r\n    private snack: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private fingerPrintService: FingerPrintCaptureService,\r\n    private sanitizer: DomSanitizer,\r\n\r\n    private cdr: ChangeDetectorRef,\r\n\r\n    private shareDataService: DataService,\r\n    private dialogService: DialogService,\r\n    private locationStrategy: LocationStrategy,\r\n    private appApiService: ApplicationEntryStageService,\r\n  ) { }\r\n  kycVerificationForm1: FormGroup;\r\n  index: string[];\r\n  biometrics_Name: string[];\r\n  biometrics_Type: string[];\r\n  genders: string[];\r\n  nationality: string[];\r\n  countrys: string[] = [];\r\n  Residences: string[];\r\n  Documents: string[];\r\n  DocumentsName: string[];\r\n  MaritalStatus: string[];\r\n  uplaod = new Upload();\r\n  customerId: string;\r\n  cifFetch: boolean = false;\r\n\r\n  array = [\r\n    {\r\n      id: 1,\r\n      checked: true,\r\n      name: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      checked: false,\r\n      name: \"No\",\r\n    },\r\n  ];\r\n  array1 = [\r\n    {\r\n      id: 1,\r\n      checked: true,\r\n      name: \"Auto\",\r\n    },\r\n    {\r\n      id: 2,\r\n      checked: false,\r\n      name: \"Manual\",\r\n    },\r\n  ];\r\n\r\n  permanentAddress: FormGroup = this.fb.group({\r\n    addressType: [\"Permanent\", [Validators.required]],\r\n    address1: [\"\", [Validators.required,Validators.pattern('.*[a-zA-Z].*')]],\r\n    address2: [\"\", [Validators.required,Validators.pattern('.*[a-zA-Z].*')]],\r\n    city: [\"\", [Validators.required]],\r\n    zipCode: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n    country: [\"\", [Validators.required]],\r\n    residenceType: [\"\", [Validators.required]],\r\n    state: [\"\", [Validators.required]],\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.editKycScreen = localStorage.getItem('EDIT-CIFNUMBER');\r\n    console.log(this.editKycScreen,\"Edit kyc details\");\r\n    this.kycVerificationForm1 = this.fb.group({\r\n      documentsList: this.fb.array([this.createItem()]),\r\n      // documentName:[\"\"]\r\n\r\n    });\r\n    this.preventBackButton();\r\n    this.verify = 'verify';\r\n    this.emailVerify = 'verify'\r\n    this.api.getverify1().subscribe(resp => {\r\n      if (resp.verify == 'verified') {\r\n        this.assignVerify(resp)\r\n      }\r\n    })\r\n\r\n    this.api.getverify().subscribe(resp => {\r\n      if (resp.verify == 'verified') {\r\n        this.assignVerify(resp)\r\n      }\r\n    })\r\n\r\n\r\n\r\n\r\n    this.prefixFlag=true;\r\n    this.kycVerificationForm = this.fb.group({\r\n      cifNumber: [\"\"],\r\n      prefix: [\"\", [Validators.required]],\r\n      documentName: [\"\"],\r\n      // firstName: ['',[Validators.required]],\r\n      primaryEmailAdress: [\"\", [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n      phoneNumber: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\r\n      firstName: [\"\", [Validators.required]],\r\n      lastName: [\"\", [Validators.required]],\r\n      middleName: [\"\"],\r\n      customer_id: [\"\"], //we need to add customerid dynamically based on Post and Put method --->added by jaya\r\n      isAddressSame: [\"\"],\r\n      gender: [\"\", [Validators.required]],\r\n      dateOfBirth: [\"\", [Validators.required]],\r\n      maritalStatus: [\"\", [Validators.required]],\r\n      nationality: [\"\", [Validators.required]],\r\n      profileImage: [\"\"],\r\n\r\n      communicationAddress: this.fb.group({\r\n        addressType: [\"Communication\", [Validators.required]],\r\n        address1: [\"\", [Validators.required,Validators.pattern('.*[a-zA-Z].*')]],\r\n        address2: [\"\", [Validators.required,Validators.pattern('.*[a-zA-Z].*')]],\r\n        city: [\"\", [Validators.required]],\r\n        zipCode: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n        country: [\"\", [Validators.required]],\r\n        residenceType: [\"\", [Validators.required]],\r\n        state: [\"\", [Validators.required]],\r\n      }),\r\n\r\n    });\r\n    this.imageURL = \"not_available\"\r\n    // this.initGroup();\r\n    console.log('clear');\r\n    // this.kycVerificationForm.reset();\r\n    this.getDoc();\r\n    // console.log(\"after getDoc\");\r\n    this.kycVerificationForm\r\n      .get(\"isAddressSame\")\r\n      .patchValue(this.array[0].name);\r\n    // console.log(\"after patchValue\")\r\n\r\n    // localStorage.getItem('customer_id')? this.getAllCustomerDetails(localStorage.getItem('customer_id')) : '';\r\n   console.log(this.ls.getItem('EDIT-CIFNUMBER'));\r\n    if (this.ls.getItem('EDIT-CIFNUMBER')) {\r\n      console.log(\"KYC Id reference inside\");\r\n      this.autofillDetails(this.editKycScreen);\r\n      this.cifFetch = false;\r\n    }\r\n  }\r\n\r\n  preventBackButton() {\r\n    history.pushState(null, null, location.href);\r\n    this.locationStrategy.onPopState(() => {\r\n      history.pushState(null, null, location.href);\r\n    })\r\n  }\r\n  manualUpload(){\r\n    let docNum:number;\r\n    docNum=this.kycVerificationForm1.value.documentsList[0].docNum;\r\n    if(docNum.toString().length !== 12){\r\n    Swal.fire({\r\n      text: \" Aadhar Number Should be 12 digits!\",\r\n      width: 500,\r\n      confirmButtonText: \"OK\",\r\n      confirmButtonColor: '#456EFE',\r\n      icon:'info'\r\n    })\r\n  }\r\n  else{\r\n    this.kycVerificationForm.get(\"communicationAddress.zipCode\").patchValue(\"670645\");\r\n    this.kycVerificationForm.get(\"communicationAddress.residenceType\").patchValue('Citizen');\r\n    this.kycVerificationForm.get(\"communicationAddress.country\").patchValue('India');\r\n    this.getStateName('India', '');\r\n    this.getPerStateName('India');\r\n    this.getCityName('Kerala','');\r\n    this.kycVerificationForm.get(\"communicationAddress.address1\").patchValue('Pollayaote');\r\n    this.kycVerificationForm.get(\"communicationAddress.address2\").patchValue('Payote Kalam');\r\n    this.kycVerificationForm.get(\"communicationAddress.state\").patchValue('Kerala');\r\n    this.kycVerificationForm.get(\"prefix\").patchValue('Ms');\r\n    this.kycVerificationForm.get(\"phoneNumber\").patchValue('9656849771');\r\n    this.kycVerificationForm.get(\"firstName\").patchValue('Jayalakshmi');\r\n    this.kycVerificationForm.get(\"lastName\").patchValue('PM');\r\n    this.kycVerificationForm.get(\"middleName\").patchValue('');\r\n    this.kycVerificationForm.get(\"gender\").patchValue('Female');\r\n    this.kycVerificationForm.get(\"dateOfBirth\").patchValue('2022-04-08');\r\n    this.kycVerificationForm.get(\"nationality\").patchValue('Indian');\r\n    this.kycVerificationForm.get(\"communicationAddress.city\").patchValue('Wayanad');\r\n  }\r\n}\r\n  resetForm() {\r\n    this.kycVerificationForm.reset();\r\n    this.kycVerificationForm1.reset();\r\n    this.imageURL=\"\";\r\n    this.fileNameFront = '';\r\n    this.fileNameBack = '';\r\n    this.radioFlag = 'Auto';\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  changeValue2(event) {\r\n    if (event === \"Aadhar card\") {\r\n      this.disableButton = true;\r\n    }\r\n  }\r\n  previousStep() {\r\n    this.dialogService.openKycVerificationMethod();\r\n  }\r\n  getStateName(country, address) {\r\n    this.entityName = \"state\";\r\n    // console.log(\"State -- \", country)\r\n    // this.api.getDropDownForStateCity(this.entityName, country).subscribe((data) => {\r\n    //   this.arrayState = data;\r\n      this.api.getAllCountries().subscribe((data: any) => {\r\n        for(let i=0; i<data.length;i++){       \r\n          if(data[i].countryName === country){\r\n            this.api.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n              for(let i=0; i<resp.length;i++){\r\n                if(resp[i].authStatus==='A'){\r\n                  this.arrayState.push(resp[i].stateName);\r\n                }\r\n              }\r\n            })\r\n            break;   \r\n          }\r\n        }\r\n      // console.log(\"-->\", this.arrayState)\r\n      if (address.length > 0) {\r\n        for (const key in address) {\r\n          if (Object.prototype.hasOwnProperty.call(address, key)) {\r\n            const element = address[key];\r\n            for (const state in this.arrayState) {\r\n              if (Object.prototype.hasOwnProperty.call(this.arrayState, state)) {\r\n                const elementState = this.arrayState[state];\r\n                if (elementState.trim() === element.trim()) {\r\n                  // console.log('elementState', elementState)\r\n                  this.getCityName(elementState.trim(),address);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getPerStateName(country) {\r\n    this.entityName = \"state\";\r\n    // console.log(\"State -- \", country)\r\n    this.api.getDropDownForStateCity(this.entityName, country).subscribe((data) => {\r\n      this.arrayState1 = data;\r\n      // console.log(\"-->\", this.arrayState)\r\n    });\r\n  }\r\n\r\n  getCityName(state: any,address) {\r\n    this.entityName = \"city\";\r\n    // console.log(state)\r\n    this.api.getDropDownForStateCity(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity = data;\r\n      // console.log(\"-->\", this.arrayCity)\r\n      if (address.length > 0) {\r\n        for (const key in address) {\r\n          if (Object.prototype.hasOwnProperty.call(address, key)) {\r\n            const element = address[key];\r\n            for (const City in this.arrayCity) {\r\n              if (Object.prototype.hasOwnProperty.call(this.arrayCity, City)) {\r\n                const elementCity = this.arrayCity[City];\r\n                if (elementCity.trim() === element.trim()) {\r\n                  // console.log('elementCity', elementCity)\r\n                  this.kycVerificationForm.get('communicationAddress.city').setValue(elementCity);\r\n                  this.cdr.detectChanges();\r\n                  this.cdr.markForCheck();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getPerCityName(state: any) {\r\n    this.entityName = \"city\";\r\n    // console.log(state)\r\n    this.api.getDropDownForStateCity(this.entityName, state).subscribe((data) => {\r\n      this.arrayCity1 = data;\r\n      // console.log(\"-->\", this.arrayCity)\r\n\r\n    });\r\n  }\r\n\r\n  getProfileImage(customerId: any, document_type: number) {\r\n    this.api.getCustomerDocuments(customerId, document_type).subscribe((data) => {\r\n      // console.log(\"data ::\", data);\r\n      if (data.length > 0) {\r\n        this.profileId = data[0].id;\r\n        this.imageURL = data[0].fileUrl;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteProfileImg() {\r\n    this.dialogService.doConfirmDialog('').subscribe((response) => {\r\n      if (response == \"Yes\") {\r\n        this.imageURL = \"not_available\";\r\n        this.profileFile.nativeElement.value = '';\r\n        let customerId = localStorage.getItem('customerId');\r\n        this.api.deleteCustomerDoc(customerId, this.profileId).subscribe((data) => {\r\n          this.snack.open('Profile Image Deleted Successfully', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public onUpload1(event, KycForm, index, side) {\r\n    var kyc = KycForm.documentsList[index].documentName;\r\n    this.selectedFiles = event.target.files[0];\r\n    if (side === 'backSide') {\r\n      this.fileNameCheckBack = this.selectedFiles.name;\r\n      var fileExtBack = this.fileNameCheckBack.split('.').pop();\r\n      if(fileExtBack.toLowerCase()  === \"jpeg\" ||fileExtBack.toLowerCase() === \"jpg\" ||fileExtBack.toLowerCase() === \"png\"){\r\n      this.fun2(event, this.selectedFiles, kyc, KycForm.documentType, side);\r\n    }\r\n    else{\r\n      this.snack.open(\"Please Upload Valid Aadhar Card!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      return;\r\n    }\r\n    }\r\n    if (side === 'frontSide') {\r\n      this.fileNameCheck = this.selectedFiles.name;\r\n      var fileExt = this.fileNameCheck.split('.').pop();\r\n      if(fileExt.toLowerCase()  === \"jpeg\" ||fileExt.toLowerCase() === \"jpg\" ||fileExt.toLowerCase() === \"png\"){\r\n      this.fun1(event, this.selectedFiles, kyc, KycForm.documentType, side);\r\n      }\r\n    else{\r\n        this.snack.open(\"Please Upload Valid Aadhar Card!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    // this.fun2(event, this.selectedFiles, kyc, KycForm.documentType, side);\r\n    this.fileName = this.selectedFiles.name;\r\n    KycForm.documentsList[index].documentType = this.fileName;\r\n    this.kycVerificationForm1.controls.documentsList[\"controls\"][\r\n      index\r\n    ].controls.documentType.setValue(this.fileName);\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    \r\n    reader.readAsText(this.selectedFiles);\r\n\r\n    reader.onload = (event2) => {\r\n      this.fileUrl = reader.result;\r\n    };\r\n  }\r\n\r\n  async doOCR(img, side, docName, event) {\r\n    const worker = createWorker({\r\n      //logger: m => console.log(m)\r\n    });\r\n\r\n    (async () => {\r\n      // console.log(\"before open\");\r\n      this.loader.open();\r\n      // console.log(\"after open\");\r\n      \r\n      await worker.load();\r\n      await worker.loadLanguage('eng');\r\n      await worker.initialize('eng');\r\n      const { data: { text } } = await worker.recognize(img);\r\n      // console.log(text);\r\n      \r\n      await worker.terminate();\r\n      this.loader.close();\r\n      const aadharDetails = this.aadharParser(text);\r\n      // console.log(\"this.passportDetails\", aadharDetails, aadharDetails.fullName.toLowerCase());\r\n\r\n      if (side === 'frontSide') {\r\n        this.namePancard = aadharDetails.fullName.toLowerCase();\r\n        this.dob = aadharDetails.dob;\r\n        this.panNumber = aadharDetails.adharNumber;\r\n        this.pancard = true;\r\n        this.imageOCR = this.url;\r\n        this.fileNameFront = this.selectedFiles.name;\r\n        var split = this.fileNameFront.split('.');\r\n        var filenameFrontSide = split[0];\r\n        var extension = split[1];\r\n        // if (filenameFrontSide.length > 11) {\r\n        //   this.snack.open(\"File name exceeds 11 characters.Trimming to 11 characters\", \"OK\", {\r\n        //     duration: 4000,\r\n        //     verticalPosition: \"top\",\r\n        //     horizontalPosition: \"right\",\r\n        //   });\r\n        //   filenameFrontSide = filenameFrontSide.substring(0, 11);\r\n        // }\r\n        this.filenameFrontSide = filenameFrontSide;\r\n        this.resultFrontSide = filenameFrontSide + '.' + extension;\r\n        // console.log(\"resultFrontSide\", this.resultFrontSide)\r\n        this.dataFront = {\r\n          customerId: this.refreshCustomerId,\r\n          documentName: docName,\r\n          documentType: \"6\",\r\n          fileType: event.type,\r\n          fileName: this.filenameFrontSide,\r\n          verificationType: \"KYC verification\",\r\n          documentSide: '1',\r\n          idNumber: this.panNumber,\r\n        };\r\n        // console.log(this.dataFront);\r\n      }\r\n      if (side === 'backSide') {\r\n\r\n        let address = text.split(\",\");\r\n        this.address = address[2] + \",\" + address[5] + \",\" + address[6] + \",\" + address[7];\r\n        this.fileNameBack = this.selectedFiles.name;\r\n        var split = this.fileNameBack.split('.');\r\n        var filenameBackSide = split[0];\r\n        var extension = split[1];\r\n        // if (filenameBackSide.length > 11) {\r\n        //   this.snack.open(\"File name exceeds 11 characters.Trimming to 11 characters\", \"OK\", {\r\n        //     duration: 4000,\r\n        //     verticalPosition: \"top\",\r\n        //     horizontalPosition: \"right\",\r\n        //   });\r\n        //   filenameBackSide = filenameBackSide.substring(0, 11);\r\n        // }\r\n        this.resultBackSide = filenameBackSide + '.' + extension;\r\n        this.filenameBackSide = filenameBackSide;\r\n        // console.log(\"resultFrontSide\", this.resultFrontSide)\r\n\r\n\r\n        this.imageOCRBack = this.urlback;\r\n        this.dataBack = {\r\n          customerId: this.refreshCustomerId,\r\n          documentName: docName,\r\n          documentType: \"6\",\r\n          fileType: event.type,\r\n          fileName: this.filenameBackSide,\r\n          verificationType: \"KYC verification\",\r\n          documentSide: '2',\r\n          idNumber: this.panNumber,\r\n        };\r\n      }\r\n      // console.log(\"this.namePancard ,this.dob ,this.panNumber ,this.url \", this.namePancard, this.dob, this.panNumber)\r\n      if (aadharDetails.adharNumber != null || aadharDetails.adharNumber != undefined) {\r\n        this.splitFunction(text, side);\r\n\r\n      }\r\n      else {\r\n        // console.log(\"wrong addhar to\");\r\n        this.snack.open(\"Please Upload Valid Aadhar Card!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.resultBackSide = null;\r\n        this.resultFrontSide = null;\r\n      }\r\n\r\n    })();\r\n  }\r\n  aadharParser = (str) => {\r\n    try {\r\n      let adharNumber,\r\n        dob,\r\n        name,\r\n        nameLineIndex = 2;\r\n      const asciiStr = str.replace(/[^\\x00-\\x7F]/g, \"\").trim();\r\n      const lines = asciiStr.split(\"\\n\");\r\n\r\n      for (let i = lines.length - 1; i >= 0; i--) {\r\n        let count = 0,\r\n          startIndex = -1;\r\n        for (let j = 0; j < lines[i].length; j++) {\r\n          if (lines[i][j] >= \"0\" && lines[i][j] <= \"9\") {\r\n            count++;\r\n            if (startIndex === -1) startIndex = j;\r\n          }\r\n        }\r\n        if (count >= 12) {\r\n          adharNumber = lines[i].substr(startIndex, startIndex + 14);\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < lines.length; i++) {\r\n        [\"DOB\", \"Year of Birth\"].some((docString) => {\r\n          const dobIndex = lines[i].indexOf(docString);\r\n          if (dobIndex !== -1) {\r\n            dob = lines[i]\r\n              .trim()\r\n              .slice(dobIndex, lines[i].length)\r\n              .split(\" \")\r\n              .pop();\r\n            nameLineIndex = i - 1;\r\n            // console.log(dob);\r\n            let dobArray = dob.split(\"/\")\r\n            if (dobArray.length == 3) {\r\n              this.kycVerificationForm.controls.dateOfBirth.setValue(new Date(dob));\r\n            }\r\n            else {\r\n              Swal.fire({\r\n                text: \" Date of birth format of Uploaded document and application are different. Please select Date of birth manually!\",\r\n                width: 500,\r\n                confirmButtonText: \"OK\",\r\n                confirmButtonColor: '#456EFE'\r\n              })\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      const names = lines[nameLineIndex]\r\n        .split(\" \")\r\n        .filter((x) => x.length > 1)\r\n        .join(\" \");\r\n      // console.log(names);\r\n      return {\r\n        dob,\r\n        adharNumber,\r\n        fullName: names,\r\n      };\r\n    } catch (error) {\r\n      // console.log(error);\r\n      console.error(\"Unable to parse aadhar\");\r\n    }\r\n  };\r\n\r\n  onChangeGender(event){\r\n    let prefix = this.kycVerificationForm.value.prefix;\r\n    if ((prefix == \"Mr\" && event.value == \"Male\") || ((prefix==\"Ms\" || prefix==\"Mrs\") && event.value==\"Female\")) {\r\n      this.prefixFlag=true;\r\n    }  else {\r\n      this.prefixFlag=false;\r\n      this.snack.open(\"Prefix and Gender does not match!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n  fun2(event, url, docName, docType, side) {\r\n    // this.image = event.target.result;\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    this.urlB = url;\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        this.urlback = event.target.result;\r\n        this.doOCR(this.urlback, side, docName, event);\r\n      };\r\n    }\r\n\r\n  }\r\n  fun1(event, url, docName, docType, side) {\r\n    // console.log(event);\r\n    // this.image = event.target.result;\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    this.urlF = url;\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        this.url = event.target.result;\r\n        this.doOCR(this.url, side, docName, event);\r\n      };\r\n    }\r\n\r\n  }\r\n  radioEvent(event) {\r\n    // console.log(\"radio button event\");\r\n    this.radioFlag = event.target.value;\r\n  }\r\n  splitFunction(text, side) {\r\n\r\n    let text1 = text.replace(/[^\\x00-\\x7F]/g, \"\");\r\n    text.split(\":\");\r\n    // console.log(text.split(\":\")[2]);\r\n    let address = text.split(\",\");\r\n    // console.log(address);\r\n    // console.log(address.length);\r\n    this.countryAadhar = \"India\";\r\n    this.getStateName(this.countryAadhar, address);\r\n    this.residency = \"Citizen\";\r\n    if (side == \"backSide\") {\r\n      this.pinCode = address[address.length - 1].trim().split(\" \")[0];\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.zipCode\")\r\n        .patchValue(this.pinCode);\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.residenceType\")\r\n        .patchValue(this.residency);\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.country\")\r\n        .patchValue(this.countryAadhar);\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.address1\")\r\n        .patchValue(address[2] + address[5]);\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.address2\")\r\n        .patchValue(address[6]);\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.state\")\r\n        .patchValue(address[7].trim());\r\n\r\n    }\r\n    if (side == \"frontSide\") {\r\n      const asciiStr = text.replace(/[^\\x00-\\x7F]/g, \"\").trim();\r\n      const lines = asciiStr.split(\"\\n\");\r\n      let nameLineIndex = 2;\r\n      const names = lines[nameLineIndex]\r\n        .split(\" \")\r\n        .filter((x) => x.length > 1)\r\n        .join(\" \");\r\n      // console.log(names);\r\n      if (\r\n        text.includes(\"Female\") ||\r\n        text.includes(\"female\")\r\n      ) {\r\n        this.kycVerificationForm.get(\"gender\").patchValue(\"Female\");\r\n        this.kycVerificationForm.get(\"prefix\").patchValue(\"Ms\");\r\n      }\r\n      else if (\r\n        text.includes(\"Male\") ||\r\n        text.includes(\"male\")\r\n      ) {\r\n        this.kycVerificationForm.get(\"gender\").patchValue(\"Male\");\r\n        this.kycVerificationForm.get(\"prefix\").patchValue(\"Mr\");\r\n      }\r\n      this.kycVerificationForm.get(\"nationality\").patchValue(\"Indian\");\r\n      // console.log(names)\r\n\r\n      let x = names.split(\" \");\r\n      // console.log(x[0], x[1]);\r\n      this.kycVerificationForm.get(\"firstName\").patchValue(x[0]);\r\n      this.kycVerificationForm.get(\"lastName\").patchValue(x[1]);\r\n    }\r\n  }\r\n  createItem() {\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n      documentName: [\"\"],\r\n      documentType: [\"\"],\r\n      fileData1: [\"\"],\r\n      docNum:[\"\"],\r\n      fileData2: [\"\"],\r\n    });\r\n    // this.changeValue2(this.kycVerificationForm.controls.documentsList['controls'][0].controls.documentName.,0)\r\n  }\r\n  getDoc() {\r\n    this.indexs = \"prefix\";\r\n    this.dropVariableDoc = \"document_type\";\r\n    this.docName = \"document_name\";\r\n    this.bioName = \"biometrics_Name\";\r\n    this.bioType = \"biometrics_Type\";\r\n    this.gender = \"gender\";\r\n    this.resi = \"residence\";\r\n    this.marr = \"maritial_Status\";\r\n    this.coun = \"country\";\r\n    this.nation = \"nationality\";\r\n    this.api.getDropDownValues(this.dropVariableDoc).subscribe((data) => {\r\n      this.Documents = data;\r\n    });\r\n    // this.api.getDropDownValues(this.docName).subscribe((resp) => {\r\n    //   this.DocumentsName = resp;\r\n    // });\r\n    this.DocumentsName = [\"Aadhar card\"];\r\n    this.api.getDropDownValues(this.bioName).subscribe((response) => {\r\n      this.biometrics_Name = response;\r\n    });\r\n    this.api.getDropDownValues(this.bioType).subscribe((responseData) => {\r\n      this.biometrics_Type = responseData;\r\n    });\r\n    // this.api.getDropDownValues(this.coun).subscribe((responseData) => {\r\n    //   this.countrys = responseData;\r\n    //   // console.log(\"this.countrys::\", this.countrys)\r\n    // });\r\n    this.api.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          console.log(data[i])\r\n          this.countrys.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n    this.api.getDropDownValues(this.gender).subscribe((responseDatas) => {\r\n      this.genders = responseDatas;\r\n    });\r\n    this.api.getDropDownValues(this.resi).subscribe((responses) => {\r\n      this.Residences = responses;\r\n    });\r\n    this.api.getDropDownValues(this.marr).subscribe((respo) => {\r\n      this.MaritalStatus = respo;\r\n    });\r\n    this.api.getDropDownValues(this.indexs).subscribe((re) => {\r\n      this.index = re;\r\n    });\r\n    this.api.getDropDownValues(this.nation).subscribe((datas) => {\r\n      this.nationality = datas;\r\n    });\r\n  }\r\n  get kyc() {\r\n    return this.kycVerificationForm.controls;\r\n  }\r\n  get comAddress() {\r\n    return this.kyc.communicationAddress as FormArray;\r\n  }\r\n  get permAddress() {\r\n    return this.kyc.permanentAddress as FormArray;\r\n  }\r\n  get sameAddress() {\r\n    return this.kycVerificationForm.get(\"isAddressSame\").value;\r\n  }\r\n\r\n  onChange(control, e): void {\r\n    if (\r\n      e.value == \"No\" &&\r\n      !this.kycVerificationForm.contains(\"permanentAddress\")\r\n    ) {\r\n      this.kycVerificationForm.addControl(\r\n        \"permanentAddress\",\r\n        this.permanentAddress\r\n      );\r\n    } else {\r\n      this.kycVerificationForm.removeControl(\"permanentAddress\");\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => { \r\n          console.log(res);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  autofillDetails(editCif?) {\r\n    console.log(editCif);\r\n    this.cifNumber = this.kycVerificationForm.controls.cifNumber.value;\r\n    console.log(this.cifNumber)\r\n\r\n    if(editCif){\r\n      console.log(\"1st if\");\r\n      this.getAllCustomerDetails(editCif);\r\n    }\r\n\r\n    if (this.cifNumber) {\r\n      this.cifFetch = true;\r\n      console.log(\"2nd if\");\r\n      this.getAllCustomerDetails();\r\n    }\r\n  }\r\n\r\n  setCustVerificationValues(data) {\r\n    this.kycVerificationForm.patchValue(data.customerInfoList[0]);\r\n    if (data.customerInfoList[0].userAddress.length == 2) {\r\n      this.kycVerificationForm.addControl(\"permanentAddress\", this.permanentAddress);\r\n      this.kycVerificationForm.get(\"isAddressSame\").patchValue(this.array[1].name);\r\n      for (let i = 0; i < data.customerInfoList[0].userAddress.length; i++) {\r\n        if (data.customerInfoList[0].userAddress[i].addressType == \"Communication\") {\r\n          this.getStateName(data.customerInfoList[0].userAddress[i].country, '');\r\n          this.getPerStateName(data.customerInfoList[0].userAddress[i].country);\r\n          this.getCityName(data.customerInfoList[0].userAddress[i].state,'');\r\n          this.kycVerificationForm.get(\"communicationAddress\").patchValue(data.customerInfoList[0].userAddress[i]);\r\n        }\r\n        if (data.customerInfoList[0].userAddress[i].addressType == \"Permanent\") {\r\n\r\n          this.getPerStateName(data.customerInfoList[0].userAddress[i].country);\r\n          this.getPerCityName(data.customerInfoList[0].userAddress[i].state);\r\n          this.kycVerificationForm.get(\"permanentAddress\").patchValue(data.customerInfoList[0].userAddress[i]);\r\n        }\r\n      }\r\n    } else {\r\n      this.getStateName(data.customerInfoList[0].userAddress[0].country, '');\r\n      this.getCityName(data.customerInfoList[0].userAddress[0].state,'');\r\n      console.log(\"inside communication::\", data.customerInfoList[0].userAddress[0].state)\r\n      this.kycVerificationForm.get(\"isAddressSame\").patchValue(this.array[0].name);\r\n      this.kycVerificationForm.get(\"communicationAddress\").patchValue(data.customerInfoList[0].userAddress[0]);\r\n    }\r\n  }\r\n\r\n\r\n  getOtpMobile(email) {\r\n    this.otpmodel.source = \"customer\";\r\n    this.otpmodel.source_key = \"mobile\";\r\n    this.otpmodel.source_value = email.phoneNumber;\r\n  \r\n    this.api.getOtp(this.otpmodel).subscribe((resp) => { });\r\n    this.openDialog1(email.phoneNumber);\r\n  }\r\n\r\n  openDialog1(phoneNUmber) {\r\n    const dialogRef = this.dialog.open(FingerprintAuthenticationComponent, {\r\n      data: { number: phoneNUmber, type: \"Mobile Number\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => { });\r\n  }\r\n  // public onFileChanged(event) {\r\n  //   this.selectedFiles = event.target.files[0];\r\n  //   let reader = new FileReader();\r\n  //   reader.readAsDataURL(event.target.files[0]);\r\n\r\n  //   reader.onload = (event2) => {\r\n  //     this.imgUrl = reader.result;\r\n\r\n  //     this.fun(event.target.files[0], this.selectedFiles);\r\n  //   };\r\n  // }\r\n  public onFileChanged(event) {\r\n    this.profilePicture = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (event2) => {\r\n      // this.imgUrl = reader.result;\r\n      //this.fun(event.target.files[0], this.profilePicture);\r\n      //  this.image = reader.result;\r\n      this.imageURL = reader.result;\r\n      // console.log(\"file \", reader);\r\n    };\r\n    // console.log(this.profilePicture);\r\n  }\r\n\r\n  fun(event, url) {\r\n    const uploadData = new FormData();\r\n    const data = {\r\n      customerId: this.customerId,\r\n      documentName: \"Profile Image\",\r\n      documentType: \"1\",\r\n      fileType: event.type,\r\n      fileName: event.name,\r\n      verificationType: \"KYC verification\",\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n    this.api.upload(uploadData).subscribe((res) => {\r\n      // console.log(res);\r\n    });\r\n  }\r\n\r\n  tabClick(event: MatTabChangeEvent) {\r\n    const tab = event.tab.textLabel;\r\n\r\n    if (tab === \"Documents Upload\") {\r\n      this.router.navigateByUrl(\"/others/documents\");\r\n    }\r\n    if (tab === \"verification\") {\r\n      this.router.navigateByUrl(\"/others/verification\");\r\n    }\r\n    if (tab === \"Basic Information\") {\r\n      this.router.navigateByUrl(\"/others/kyc\");\r\n    }\r\n  }\r\n\r\n  onNext() {\r\n    let phoneNumber =this.kycVerificationForm.value.phoneNumber;\r\n    if(!this.cifFetch){\r\n      this.api.fetchCustomerDetails(phoneNumber).subscribe((res: any) => {\r\n        if(res!=null){\r\n          this.dialogService.phoneNumberDetailsDialogue(res).subscribe((response) => {\r\n            if(response == \"Yes\"){\r\n              this.nextEnableFunction();\r\n            } \r\n          });\r\n        } else {\r\n          this.nextEnableFunction();\r\n        }\r\n       \r\n      });\r\n    } else {  \r\n      this.nextEnableFunction();\r\n    }\r\n  }\r\n  nextEnableFunction() {\r\n\r\n    // console.log(this.dataBack)\r\n    // console.log(this.urlB)\r\n    this.api.setOCR({\r\n      namePancard: this.namePancard,\r\n      dob: this.dob,\r\n      panNumber: this.panNumber,\r\n      imageOCR: this.url,\r\n      imageOCRBack: this.urlback,\r\n      address: this.address\r\n\r\n    })\r\n    // console.log(\"Next button\");\r\n    const dateSendingToServer = new DatePipe('en-US').transform(this.kycVerificationForm.value.dateOfBirth, 'yyyy-MMM-dd')\r\n\r\n    if (this.kycVerificationForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let userAddress: any[] = [];\r\n    userAddress.push(this.kycVerificationForm.value.communicationAddress);\r\n    if (this.kycVerificationForm.value.permanentAddress) {\r\n      userAddress.push(this.kycVerificationForm.value.permanentAddress);\r\n    }\r\n\r\n    let payload = {\r\n      cifNumber: this.kycVerificationForm.value.cifNumber,\r\n      prefix: this.kycVerificationForm.value.prefix,\r\n      primaryEmailAdress: this.kycVerificationForm.value.primaryEmailAdress,\r\n      phoneNumber: this.kycVerificationForm.value.phoneNumber,\r\n      firstName: this.kycVerificationForm.value.firstName,\r\n      lastName: this.kycVerificationForm.value.lastName,\r\n      middleName: this.kycVerificationForm.value.middleName,\r\n      customer_id: this.kycVerificationForm.value.customer_id,\r\n      gender: this.kycVerificationForm.value.gender,\r\n      dateOfBirth: dateSendingToServer,\r\n      maritalStatus: this.kycVerificationForm.value.maritalStatus,\r\n      nationality: this.kycVerificationForm.value.nationality,\r\n      userAddress: userAddress,\r\n      verificationType: 'KYC',\r\n      kycSubmit: false\r\n\r\n    };\r\n    console.log(payload, \" :: Payload\");\r\n    console.log(this.profilePicture);\r\n    this.api.kycScreenBasicinfo(payload).subscribe((resp) => {\r\n      console.log(resp, \"Next response\");\r\n      console.log(\"resp after saving \", resp)\r\n      this.id = resp.cifNumber\r\n      if(this.uploadDone){\r\n        if (this.dataFront != undefined) {\r\n          this.uploadFrontSide(this.id);\r\n          this.uploadDone=false;\r\n        }\r\n        if (this.dataBack != undefined) {\r\n          this.uploadBackSide(this.id);\r\n          this.uploadDone=false;\r\n        }\r\n      }\r\n      \r\n      this.ls.setItem(\"cardCustomer\",resp.firstName +' ' +resp.lastName );\r\n        \r\n      console.log(resp.firstName, '', resp.lastName);\r\n      this.name = resp.firstName + ' ' + resp.lastName;\r\n      console.log(this.name)\r\n      \r\n      this.api.setName({\r\n        name: this.name,\r\n        customerId:resp.customerId,\r\n        cifNumber:resp.cifNumber\r\n      });\r\n      this.snack.open(\"Basic Information Details Saved!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.basicInfoSavedAlready = true;\r\n      // this.kycVerificationForm.reset();\r\n      // \r\n     \r\n      sessionStorage.setItem('customer_id', resp.customerId);\r\n      localStorage.setItem('customer_id', resp.customerId);\r\n      sessionStorage.setItem('kyc_reference', resp.kycReference);\r\n      this.kycRef(resp.kycReference);\r\n\r\n\r\n\r\n      console.log(\"resp.customerId::\", resp.customerId)\r\n      console.log(\"(this.profilePicture::\", this.profilePicture)\r\n      if (this.profilePicture) {\r\n        // console.log(this.profilePicture)\r\n        let profileUpload: any = {};\r\n        profileUpload.documentName = \"Profile\";\r\n        profileUpload.documentType = 1;\r\n        profileUpload.fileType = this.profilePicture.type;\r\n        profileUpload.fileName = this.profilePicture.name;\r\n        profileUpload.customerId = resp.customerId;\r\n        console.log(profileUpload);\r\n        const uploadData = new FormData();\r\n        uploadData.append('data', JSON.stringify(profileUpload));\r\n        uploadData.append('file', this.profilePicture);\r\n        this.api.uploadDocument(uploadData).subscribe((response) => {\r\n          console.log(response);\r\n          this.next();\r\n        }, err => {\r\n          console.log(\"error\", err)\r\n        }\r\n        );\r\n      }\r\n      \r\n      this.next();\r\n\r\n\r\n    });\r\n  \r\n  }\r\n  uploadBackSide(id) {\r\n\r\n    if (this.dataBack.documentName != undefined) {\r\n      this.dataBack.customerId = id;\r\n      console.log(this.dataBack)\r\n      console.log(this.urlB)\r\n      const uploadData = new FormData();\r\n      uploadData.append(\"data\", JSON.stringify(this.dataBack));\r\n      uploadData.append(\"file\", this.urlB);\r\n      this.api.upload(uploadData).subscribe(\r\n        (res: any) => {\r\n\r\n          console.log(\"resp after uploading file\", res)\r\n          // this.kycVerificationForm1.get(\"upload\").patchValue(true);\r\n          if (res.body) {\r\n            this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          if (error.status == 201) {\r\n            console.log(\"in err\");\r\n\r\n            this.backSideUploaded = true;\r\n\r\n\r\n          }\r\n          this.kycVerificationForm1.get(\"upload\").patchValue(true);\r\n          this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n  uploadFrontSide(id) {\r\n    console.log(this.dataFront)\r\n    if (this.dataFront.documentName != undefined) {\r\n      this.dataFront.customerId = id;\r\n      console.log(this.dataFront)\r\n      console.log(this.urlF)\r\n      const uploadData = new FormData();\r\n      uploadData.append(\"data\", JSON.stringify(this.dataFront));\r\n      uploadData.append(\"file\", this.urlF);\r\n      this.api.upload(uploadData).subscribe(\r\n        (res: any) => {\r\n\r\n          console.log(\"resp after uploading file\", res)\r\n          // this.kycVerificationForm1.get(\"upload\").patchValue(true);\r\n          if (res.body) {\r\n            this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          if (error.status == 201) {\r\n            console.log(\"in err\");\r\n\r\n            this.frontSideUploaded = true;\r\n\r\n\r\n          }\r\n          this.kycVerificationForm1.get(\"upload\").patchValue(true);\r\n          this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n  kycRef(kycReference: any) {\r\n    this.api.setKycRef({\r\n      kycReference: kycReference,\r\n    });\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/^[a-zA-Z0-9_ ]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  next() {\r\n    // this.kycVerificationForm.reset();\r\n    this.api.setIndex({\r\n      index: 1,\r\n    });\r\n    this.api.setFinishFlag({\r\n      finishFlag: false,\r\n    });\r\n    let customerId = localStorage.getItem('customer_id');\r\n    console.log(\"custId::\", localStorage.getItem('customer_id'))\r\n    localStorage.setItem('page_id', '1');\r\n    this.shareDataService.shareCustomerId(customerId);\r\n  }\r\n\r\n  resetData(){\r\n    localStorage.removeItem('customer_id');\r\n    localStorage.removeItem('currentKycTabIndex');\r\n    this.kycVerificationForm.reset();\r\n    this.imageURL = \"not_available\";\r\n  }\r\n\r\n\r\n  getAllCustomerDetails(cifNumber?) {\r\n    cifNumber? this.cifNumber = cifNumber : '';\r\n    this.loading = true;\r\n    this.image = \"\",\r\n      this.imgUrl = \"\"\r\n    console.log(\"CIF---------\", event);\r\n    // let cifNumber = this.kycVerificationForm.value.cifNumber;\r\n    // console.log(\"CIF\",cifNumber);\r\n    this.api.gettingCustomerDetails(this.cifNumber).subscribe((resp: any) => {\r\n      this.loading = false;\r\n      console.log(\"All Customer Details\", resp);\r\n\r\n\r\n      this.api.sendKycDataFetchedInfo('DATA FETCH');\r\n      if (resp != null || resp != undefined) {\r\n        this.customerInformation = resp.customerInfoList[0];\r\n\r\n        if (resp.customerInfoList[0].middleName === undefined || resp.customerInfoList[0].middleName === null) {\r\n          resp.customerInfoList[0].middleName = null;\r\n        }\r\n        resp.customerInfoList[0].dateOfBirth = new Date(resp.customerInfoList[0].dateOfBirth);\r\n        console.log(resp.customerInfoList[0].customerId);\r\n        localStorage.setItem(\"customerId\", resp.customerInfoList[0].customerId);\r\n        sessionStorage.setItem('cust_status', resp.customerInfoList[0].customerAdditionalInfo.kycStatus);\r\n        // localStorage.setItem(\"customerStatus\", resp.customerInfoList[0].customerAdditionalInfo.kycStatus);\r\n        // this.api.getImage(resp.customerInfoList[0].customerId).subscribe((data: any) => {\r\n        //   console.log(\"data:\", data);\r\n        //   let profileImage = data.profileImage;\r\n        //   this.cdr.markForCheck();\r\n        //   if (profileImage) {\r\n        //     this.profileImageExist = true;\r\n        //   }\r\n        //   let objectURL = 'data:image/jpeg;base64,' + profileImage.fileData;\r\n\r\n        //   this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL)\r\n        //   this.cdr.markForCheck();\r\n\r\n        // })\r\n        this.getProfileImage(resp.customerInfoList[0].customerId, 1);\r\n      }\r\n      else {\r\n        this.snack.open('Invalid CIF Number', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        // this.accountForm.get('cifNumber').patchValue(\"\");\r\n        return;\r\n      }\r\n      this.verificationInfo = resp;\r\n\r\n      if (resp.customerInfoList[0].custStatus == \"REJECTED\") {\r\n        this.snack.open(\"Data is rejected for this CIF Number :\" + this.cifNumber, \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.kycVerificationForm.reset();\r\n        this.ngOnInit();\r\n        console.log(\"err:\", resp)\r\n        return;\r\n      }\r\n\r\n      if (resp == null) {\r\n        this.snack.open(\"Data is not found for CIF Number :\" + this.cifNumber, \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.kycVerificationForm.reset();\r\n        this.ngOnInit();\r\n        console.log(\"err:\", resp)\r\n        return;\r\n      }\r\n      if (resp && resp[0]) {\r\n        console.log(\"All Customer Details\", resp.customerInfoList[0].customerId);\r\n        sessionStorage.setItem('customer_id', resp[0].customerId);\r\n        \r\n      }\r\n      if(resp){\r\n        console.log(\"Remove\");\r\n        this.ls.removeItem('EDIT-CIFNUMBER');\r\n      }\r\n\r\n      this.setCustVerificationValues(resp);\r\n\r\n    }, err => {\r\n    });\r\n    // this.ls.removeItem('EDIT-CIFNUMBER');\r\n  }\r\n\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format(\"YYYY-MM-DD\"); // ISO 8601 format\r\n    // let date = moment(value).format('YYYY-MMM-DD');\r\n\r\n    if (date) return date;\r\n  }\r\n\r\n  getOtp(email) {\r\n    this.otpmodel.source = \"customer\";\r\n    this.otpmodel.source_key = \"email\";\r\n    this.otpmodel.source_value = email.primaryEmailAdress;\r\n\r\n    this.api.getOtp(this.otpmodel).subscribe((resp) => { });\r\n    this.openDialogEmail(email.primaryEmailAdress);\r\n  }\r\n  _keyPress(event: any) {\r\n    // console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n\r\n    }\r\n  }\r\n\r\n  openDialogEmail(email) {\r\n    const dialogRef = this.dialog.open(FingerprintAuthenticationComponent, {\r\n      data: { number: email, type: \"email id\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => { });\r\n  }\r\n\r\n  toMakeButton() {\r\n    document.getElementById(\"fileId\").click();\r\n  }\r\n\r\n\r\n  assignVerify(resp: any) {\r\n    if (resp.type == 'mobile') {\r\n      this.verify = 'verified'\r\n    }\r\n    if (resp.type == 'email') {\r\n      this.emailVerify = 'verified'\r\n    }\r\n  }\r\n\r\n  isAllSameDigit(event,zipIndex) {\r\n   this.zipIndex=zipIndex;\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    }else{\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n}\r\nexport class DocData {\r\n  documentName: string;\r\n  documentType: string;\r\n}\r\nexport class Upload {\r\n  data: {\r\n    customerId: string;\r\n    documentName: string;\r\n    documentType: string;\r\n    fileType: string;\r\n    fileName: string;\r\n    verificationType: string;\r\n\r\n  };\r\n\r\n  file: String;\r\n}","/**\n * In the recognition result of tesseract, there\n * is a deep JSON object for details, it has around\n *\n * The result of dump.js is a big JSON tree\n * which can be easily serialized (for instance\n * to be sent from a webworker to the main app\n * or through Node's IPC), but we want\n * a (circular) DOM-like interface for walking\n * through the data.\n *\n * @fileoverview DOM-like interface for walking through data\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\n\nmodule.exports = (page) => {\n  const blocks = [];\n  const paragraphs = [];\n  const lines = [];\n  const words = [];\n  const symbols = [];\n\n  page.blocks.forEach((block) => {\n    block.paragraphs.forEach((paragraph) => {\n      paragraph.lines.forEach((line) => {\n        line.words.forEach((word) => {\n          word.symbols.forEach((sym) => {\n            symbols.push({\n              ...sym, page, block, paragraph, line, word,\n            });\n          });\n          words.push({\n            ...word, page, block, paragraph, line,\n          });\n        });\n        lines.push({\n          ...line, page, block, paragraph,\n        });\n      });\n      paragraphs.push({\n        ...paragraph, page, block,\n      });\n    });\n    blocks.push({\n      ...block, page,\n    });\n  });\n\n  return {\n    ...page, blocks, paragraphs, lines, words, symbols,\n  };\n};\n","/*\n * PSM = Page Segmentation Mode\n */\nmodule.exports = {\n  OSD_ONLY: '0',\n  AUTO_OSD: '1',\n  AUTO_ONLY: '2',\n  AUTO: '3',\n  SINGLE_COLUMN: '4',\n  SINGLE_BLOCK_VERT_TEXT: '5',\n  SINGLE_BLOCK: '6',\n  SINGLE_LINE: '7',\n  SINGLE_WORD: '8',\n  CIRCLE_WORD: '9',\n  SINGLE_CHAR: '10',\n  SPARSE_TEXT: '11',\n  SPARSE_TEXT_OSD: '12',\n};\n","const resolveURL = require('resolve-url');\n\n/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n */\nconst readFromBlobOrFile = blob => (\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = ({ target: { error: { code } } }) => {\n      reject(Error(`File could not be read! Code=${code}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  })\n);\n\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n */\nconst loadImage = async (image) => {\n  let data = image;\n  if (typeof image === 'undefined') {\n    return 'undefined';\n  }\n\n  if (typeof image === 'string') {\n    // Base64 Image\n    if (/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\n      data = atob(image.split(',')[1])\n        .split('')\n        .map(c => c.charCodeAt(0));\n    } else {\n      const resp = await fetch(resolveURL(image));\n      data = await resp.arrayBuffer();\n    }\n  } else if (image instanceof HTMLElement) {\n    if (image.tagName === 'IMG') {\n      data = await loadImage(image.src);\n    }\n    if (image.tagName === 'VIDEO') {\n      data = await loadImage(image.poster);\n    }\n    if (image.tagName === 'CANVAS') {\n      await new Promise((resolve) => {\n        image.toBlob(async (blob) => {\n          data = await readFromBlobOrFile(blob);\n          resolve();\n        });\n      });\n    }\n  } else if (image instanceof File || image instanceof Blob) {\n    data = await readFromBlobOrFile(image);\n  }\n\n  return new Uint8Array(data);\n};\n\nmodule.exports = loadImage;\n","const createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\n\nlet schedulerCounter = 0;\n\nmodule.exports = () => {\n  const id = getId('Scheduler', schedulerCounter);\n  const workers = {};\n  const runningWorkers = {};\n  let jobQueue = [];\n\n  schedulerCounter += 1;\n\n  const getQueueLen = () => jobQueue.length;\n  const getNumWorkers = () => Object.keys(workers).length;\n\n  const dequeue = () => {\n    if (jobQueue.length !== 0) {\n      const wIds = Object.keys(workers);\n      for (let i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n\n  const queue = (action, payload) => (\n    new Promise((resolve, reject) => {\n      const job = createJob({ action, payload });\n      jobQueue.push(async (w) => {\n        jobQueue.shift();\n        runningWorkers[w.id] = job;\n        try {\n          resolve(await w[action].apply(this, [...payload, job.id]));\n        } catch (err) {\n          reject(err);\n        } finally {\n          delete runningWorkers[w.id];\n          dequeue();\n        }\n      });\n      log(`[${id}]: Add ${job.id} to JobQueue`);\n      log(`[${id}]: JobQueue length=${jobQueue.length}`);\n      dequeue();\n    })\n  );\n\n  const addWorker = (w) => {\n    workers[w.id] = w;\n    log(`[${id}]: Add ${w.id}`);\n    log(`[${id}]: Number of workers=${getNumWorkers()}`);\n    dequeue();\n    return w.id;\n  };\n\n  const addJob = async (action, ...payload) => {\n    if (getNumWorkers() === 0) {\n      throw Error(`[${id}]: You need to have at least one worker before adding jobs`);\n    }\n    return queue(action, payload);\n  };\n\n  const terminate = async () => {\n    Object.keys(workers).forEach(async (wid) => {\n      await workers[wid].terminate();\n    });\n    jobQueue = [];\n  };\n\n  return {\n    addWorker,\n    addJob,\n    terminate,\n    getQueueLen,\n    getNumWorkers,\n  };\n};\n","const resolveURL = require('resolve-url');\nconst { version, dependencies } = require('../../../package.json');\nconst defaultOptions = require('../../constants/defaultOptions');\n\n/*\n * Default options for browser worker\n */\nmodule.exports = {\n  ...defaultOptions,\n  workerPath: (typeof process !== 'undefined' && process.env.TESS_ENV === 'development')\n    ? resolveURL(`/dist/worker.dev.js?nocache=${Math.random().toString(36).slice(3)}`)\n    : `https://unpkg.com/tesseract.js@v${version}/dist/worker.min.js`,\n  /*\n   * If browser doesn't support WebAssembly,\n   * load ASM version instead\n   */\n  corePath: `https://unpkg.com/tesseract.js-core@v${dependencies['tesseract.js-core'].substring(1)}/tesseract-core.${typeof WebAssembly === 'object' ? 'wasm' : 'asm'}.js`,\n};\n","// Copyright 2014 Simon Lydell\r\n// X11 (“MIT”) Licensed. (See LICENSE.)\r\n\r\nvoid (function(root, factory) {\r\n  if (typeof define === \"function\" && define.amd) {\r\n    define(factory)\r\n  } else if (typeof exports === \"object\") {\r\n    module.exports = factory()\r\n  } else {\r\n    root.resolveUrl = factory()\r\n  }\r\n}(this, function() {\r\n\r\n  function resolveUrl(/* ...urls */) {\r\n    var numUrls = arguments.length\r\n\r\n    if (numUrls === 0) {\r\n      throw new Error(\"resolveUrl requires at least one argument; got none.\")\r\n    }\r\n\r\n    var base = document.createElement(\"base\")\r\n    base.href = arguments[0]\r\n\r\n    if (numUrls === 1) {\r\n      return base.href\r\n    }\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0]\r\n    head.insertBefore(base, head.firstChild)\r\n\r\n    var a = document.createElement(\"a\")\r\n    var resolved\r\n\r\n    for (var index = 1; index < numUrls; index++) {\r\n      a.href = arguments[index]\r\n      resolved = a.href\r\n      base.href = resolved\r\n    }\r\n\r\n    head.removeChild(base)\r\n\r\n    return resolved\r\n  }\r\n\r\n  return resolveUrl\r\n\r\n}));\r\n","const isBrowser = require('./getEnvironment')('type') === 'browser';\nconst resolveURL = isBrowser ? require('resolve-url') : s => s; // eslint-disable-line\n\nmodule.exports = (options) => {\n  const opts = { ...options };\n  ['corePath', 'workerPath', 'langPath'].forEach((key) => {\n    if (typeof options[key] !== 'undefined') {\n      opts[key] = resolveURL(opts[key]);\n    }\n  });\n  return opts;\n};\n","/**\n * send\n *\n * @name send\n * @function send packet to worker and create a job\n * @access public\n */\nmodule.exports = async (worker, packet) => {\n  worker.postMessage(packet);\n};\n","module.exports = {\n  /*\n   * default path for downloading *.traineddata\n   */\n  langPath: 'https://tessdata.projectnaptha.com/4.0.0',\n  /*\n   * Use BlobURL for worker script by default\n   * TODO: remove this option\n   *\n   */\n  workerBlobURL: true,\n  logger: () => {},\n};\n","// https://github.com/electron/electron/issues/2288\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to true\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nmodule.exports = isElectron;\n","const resolvePaths = require('./utils/resolvePaths');\nconst circularize = require('./utils/circularize');\nconst createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\nconst { defaultOEM } = require('./constants/config');\nconst {\n  defaultOptions,\n  spawnWorker,\n  terminateWorker,\n  onMessage,\n  loadImage,\n  send,\n} = require('./worker/node');\n\nlet workerCounter = 0;\n\nmodule.exports = (_options = {}) => {\n  const id = getId('Worker', workerCounter);\n  const {\n    logger,\n    errorHandler,\n    ...options\n  } = resolvePaths({\n    ...defaultOptions,\n    ..._options,\n  });\n  const resolves = {};\n  const rejects = {};\n  let worker = spawnWorker(options);\n\n  workerCounter += 1;\n\n  const setResolve = (action, res) => {\n    resolves[action] = res;\n  };\n\n  const setReject = (action, rej) => {\n    rejects[action] = rej;\n  };\n\n  const startJob = ({ id: jobId, action, payload }) => (\n    new Promise((resolve, reject) => {\n      log(`[${id}]: Start ${jobId}, action=${action}`);\n      setResolve(action, resolve);\n      setReject(action, reject);\n      send(worker, {\n        workerId: id,\n        jobId,\n        action,\n        payload,\n      });\n    })\n  );\n\n  const load = jobId => (\n    startJob(createJob({\n      id: jobId, action: 'load', payload: { options },\n    }))\n  );\n\n  const writeText = (path, text, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'writeFile', args: [path, text] },\n    }))\n  );\n\n  const readText = (path, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'readFile', args: [path, { encoding: 'utf8' }] },\n    }))\n  );\n\n  const removeFile = (path, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'unlink', args: [path] },\n    }))\n  );\n\n  const FS = (method, args, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method, args },\n    }))\n  );\n\n  const loadLanguage = (langs = 'eng', jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'loadLanguage',\n      payload: { langs, options },\n    }))\n  );\n\n  const initialize = (langs = 'eng', oem = defaultOEM, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'initialize',\n      payload: { langs, oem },\n    }))\n  );\n\n  const setParameters = (params = {}, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'setParameters',\n      payload: { params },\n    }))\n  );\n\n  const recognize = async (image, opts = {}, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'recognize',\n      payload: { image: await loadImage(image), options: opts },\n    }))\n  );\n\n  const getPDF = (title = 'Tesseract OCR Result', textonly = false, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'getPDF',\n      payload: { title, textonly },\n    }))\n  );\n\n  const detect = async (image, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'detect',\n      payload: { image: await loadImage(image) },\n    }))\n  );\n\n  const terminate = async () => {\n    if (worker !== null) {\n      /*\n      await startJob(createJob({\n        id: jobId,\n        action: 'terminate',\n      }));\n      */\n      terminateWorker(worker);\n      worker = null;\n    }\n    return Promise.resolve();\n  };\n\n  onMessage(worker, ({\n    workerId, jobId, status, action, data,\n  }) => {\n    if (status === 'resolve') {\n      log(`[${workerId}]: Complete ${jobId}`);\n      let d = data;\n      if (action === 'recognize') {\n        d = circularize(data);\n      } else if (action === 'getPDF') {\n        d = Array.from({ ...data, length: Object.keys(data).length });\n      }\n      resolves[action]({ jobId, data: d });\n    } else if (status === 'reject') {\n      rejects[action](data);\n      if (errorHandler) {\n        errorHandler(data);\n      } else {\n        throw Error(data);\n      }\n    } else if (status === 'progress') {\n      logger(data);\n    }\n  });\n\n  return {\n    id,\n    worker,\n    setResolve,\n    setReject,\n    load,\n    writeText,\n    readText,\n    removeFile,\n    FS,\n    loadLanguage,\n    initialize,\n    setParameters,\n    recognize,\n    getPDF,\n    detect,\n    terminate,\n  };\n};\n","/**\n * terminateWorker\n *\n * @name terminateWorker\n * @function terminate worker\n * @access public\n */\nmodule.exports = (worker) => {\n  worker.terminate();\n};\n","const getId = require('./utils/getId');\n\nlet jobCounter = 0;\n\nmodule.exports = ({\n  id: _id,\n  action,\n  payload = {},\n}) => {\n  let id = _id;\n  if (typeof id === 'undefined') {\n    id = getId('Job', jobCounter);\n    jobCounter += 1;\n  }\n\n  return {\n    id,\n    action,\n    payload,\n  };\n};\n","import { HttpClient } from \"@angular/common/http\";\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatTabChangeEvent } from \"@angular/material/tabs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\n\r\nimport { CutomerFingerPrintComponent } from \"../cutomer-finger-print/cutomer-finger-print.component\";\r\n\r\nimport { IrisScan2Component } from \"../iris-scan2/iris-scan2.component\";\r\n\r\nimport { KycEsignComponent } from \"../kyc-esign/kyc-esign.component\";\r\nimport { KycIrisScanComponent } from \"../kyc-iris-scan/kyc-iris-scan.component\";\r\nimport { KycFaceScanComponent } from \"../kyc-face-scan/kyc-face-scan.component\";\r\nimport { KycVerificationMethodComponent } from \"../kyc-verification-method/kyc-verification-method.component\";\r\nimport { VerificationCompletedComponent } from \"../verification-completed/verification-completed.component\";\r\n\r\n// import { ApiService } from 'app/api.service';\r\nimport { Observable } from \"rxjs\";\r\nimport { FingerprintAuthenticationComponent } from \"../fingerprint-authentication/fingerprint-authentication.component\";\r\nimport {\r\n  DocData,\r\n  Upload,\r\n} from \"../kyc-verification/kyc-verification.component\";\r\nimport { API_URL, FingerPrintCaptureService } from \"app/shared/services/finger-print-capture.service\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\n\r\n@Component({\r\n  selector: \"app-kyc-basic-information\",\r\n  templateUrl: \"./kyc-basic-information.component.html\",\r\n  styleUrls: [\"./kyc-basic-information.component.scss\"],\r\n})\r\nexport class KycBasicInformationComponent implements OnInit, OnChanges {\r\n  @Input() verificationInfo: any;\r\n  @Output() settingallCustInfo: EventEmitter<object> = new EventEmitter();\r\n\r\n  @ViewChild(\"fileInput\") el: ElementRef;\r\n  imageUrl: any = \"https://i.ibb.co/fDWsn3G/buck.jpg\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  a: any;\r\n  selectedFiles: any;\r\n  fileToUpload: any;\r\n  docData: Array<DocData> = [];\r\n  // imageUrl: any;\r\n  kycVerificationForm: FormGroup;\r\n  adressForm: FormGroup;\r\n  billingForm: FormGroup;\r\n  arrayForm: FormGroup;\r\n  firstName = \"jaya\";\r\n  b: any;\r\n  otpmodel = new OtpModel();\r\n\r\n  url: string | ArrayBuffer;\r\n  imgUrl: string | ArrayBuffer;\r\n  fileUrl: string | ArrayBuffer;\r\n  dropVariableDoc: string;\r\n  updateUserInfo: any;\r\n  billing: boolean = true;\r\n  docName: string;\r\n  bioName: string;\r\n  bioType: string;\r\n  coun: string;\r\n  gender: string;\r\n  resi: string;\r\n  marr: string;\r\n  indexs: string;\r\n  nation: string;\r\n  kycRef: string;\r\n  fileName: any;\r\n  document_type: string[] = [\"4\", \"5\", \"11\", \"12\"];\r\n  additionalDocs: any = [];\r\n  enableButton: boolean = false;\r\n  // Refresh customer id issue\r\n  refreshCustomerId: any;\r\n  documentsList: any;\r\n  selectedOptions2: any[] = [];\r\n  biometricList: any;\r\n  disableAddAndDelete: boolean = false;\r\n  disableFinish: boolean = false;\r\n  biometricData: any[] = [];\r\n  diaplayBioCard: boolean = false;\r\n  irisScan: boolean = false;\r\n  eScan: boolean = false;\r\n  faceScan: boolean;\r\n  biometricScan: boolean = false;\r\n  imageURLIrish: any;\r\n  imageURLBioScan: any;\r\n  imageURLFace: any;\r\n  dataFetched: boolean=false;\r\n  dataFetchedValue: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private api: ApiService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private fingerPrintService: FingerPrintCaptureService,\r\n    private shareDataService: DataService,\r\n    private ls: LocalStoreService\r\n  ) { }\r\n  index: string[];\r\n  biometrics_Name: string[];\r\n  biometrics_Type: string[];\r\n  genders: string[];\r\n  nationality: string[];\r\n  countrys: string[];\r\n  Residences: string[];\r\n  Documents: string[];\r\n  DocumentsName: string[];\r\n  MarritialStatus: string[];\r\n  uplaod = new Upload();\r\n  customerId: string = null;\r\n  disableNext: boolean = true;\r\n\r\n\r\n  ngOnInit(): void {\r\n    // this.kycRef = sessionStorage.getItem(\"kyc_reference\");\r\n    this.api.getKycRef().subscribe(resp => {\r\n      this.assignKyc(resp.kycReference);\r\n    })\r\n    this.api.getNewUserInfo().subscribe((info) => {\r\n      this.updateUserInfo = info;\r\n    });\r\n    this.api.getKycDataFetchedInfo()\r\n      .subscribe(data => {\r\n        console.log('data fetch resp :: ',data);\r\n        this.kycVerificationForm = this.fb.group({\r\n         // documentsList: this.fb.array([this.createItem()]),\r\n          // biometricList: (data=== 'DATA FETCH')?this.fb.array([]):this.fb.array([this.createBioItem()]),\r\n          biometricList: this.fb.array([]),\r\n          id: [\"\"],\r\n        //  upload: [\"\", [Validators.required]],\r\n        });\r\n\r\n        this.kycVerificationForm.valueChanges.subscribe(data => {\r\n          if(data=== 'DATA FETCH'){\r\n            this.kycVerificationForm.get('biometricList').setValue(this.fb.array([]));\r\n          }\r\n          else{\r\n            if(data.biometricList.length < 1){\r\n              this.kycVerificationForm.get('biometricList').setValue(this.fb.array([this.createBioItem()]));\r\n            }\r\n          }\r\n        });\r\n\r\n        if(data === 'DATA FETCH'){\r\n          this.dataFetched=true;\r\n          this.dataFetchedValue=data;\r\n        }else{\r\n          this.dataFetched=false;\r\n          // this.loadBioDefault(1);\r\n        }\r\n      }\r\n\r\n      )\r\n      console.log(this.kycVerificationForm);    \r\n    this.arrayForm = this.fb.group({\r\n      rows: this.fb.array([]),\r\n    });\r\n    this.initGroup();\r\n    this.getDoc();\r\n    this.disableNext = true;\r\n    this.disableFinish = true;\r\n\r\n    this.shareDataService.getCustomerId.subscribe(cId => {\r\n      if (cId != null) {\r\n        this.refreshCustomerId = cId;\r\n        this.getAdditionalDocuments(cId);\r\n      }\r\n    })\r\n    this.customerId = this.ls.getItem('customer_id');\r\n    this.kycVerificationForm.valueChanges.subscribe(data => {\r\n      console.log('value change data:: ', data)\r\n\r\n      if (data.biometricList.length > 0) {\r\n        this.disableFinish = true;\r\n        this.selectedOptions2 = [];\r\n        data.biometricList.forEach((element, index) => {\r\n          console.log('index :: ', index);\r\n          // if(element.id === '' || element.id === \"\"){\r\n          //   data.biometricList.splice(0,1);\r\n          // }\r\n          this.selectedOptions2.push(element.bioDocumentType);\r\n        });\r\n      }\r\n      if (data.biometricList.length == 3) {\r\n        this.disableAddAndDelete = true;\r\n      } else {\r\n        this.disableAddAndDelete = false;\r\n      }\r\n    })\r\n    // this.loadBioDefault(1);\r\n\r\n    console.log('this.kycVerificationForm :: ', this.kycVerificationForm)\r\n    localStorage.getItem('customer_id')? this.getAdditionalDocuments(localStorage.getItem('customer_id')) : '';\r\n\r\n  }\r\n\r\n  assignKyc(kycReference) {\r\n    this.kycRef = kycReference;\r\n  }\r\n\r\n  createItem() {\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n      documentName: [\"\", Validators.required],\r\n      documentType: [\"\", Validators.required],\r\n\r\n    });\r\n    // this.changeValue2(this.kycVerificationForm.controls.documentsList['controls'][0].controls.documentName.,0)\r\n\r\n  }\r\n\r\n  createBioItem() {\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n      bioDocumentType: [\"\", Validators.required],\r\n      fileUrl: [\"\"]\r\n    });\r\n\r\n  }\r\n\r\n  createBioItemData(data: any, type: any, fileUrl): any {\r\n    console.log('on load create bio data :: ', data, type)\r\n    return this.fb.group({\r\n      id: data,\r\n      bioDocumentType: type,\r\n      fileUrl: fileUrl\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n  autofillDetails() {\r\n\r\n    this.settingallCustInfo.emit({\r\n      cifNumber: this.kycVerificationForm.controls.cifNumber.value,\r\n    });\r\n  }\r\n  getAdditionalDocuments(customerId: string) {\r\n    customerId? this.customerId = customerId : '';\r\n    for (const key in this.document_type) {\r\n      var bioName;\r\n      if (Object.prototype.hasOwnProperty.call(this.document_type, key)) {\r\n        const element = this.document_type[key];\r\n        console.log('bio doc :: ', element, key, customerId)\r\n        this.api.getCustomerDocuments(customerId, element).subscribe((data) => {\r\n\r\n          if (data != null) {\r\n            this.disableFinish=false;\r\n            console.log(\"data:: \", data)\r\n            if (data[0].documentType == 4 || data[0].documentType == 5) {\r\n              bioName = 'Fingerprint Scan';\r\n              this.imageURLBioScan = data[0].fileUrl;\r\n              this.biometricScan = true;\r\n            }\r\n            if (data[0].documentType == 11) {\r\n              bioName = 'Irish Scan';\r\n              this.imageURLIrish = data[0].fileUrl;\r\n              this.irisScan = true;\r\n            }\r\n\r\n            if (data[0].documentType == 12) {\r\n              bioName = 'Face Scan';\r\n              this.imageURLFace = data[0].fileUrl;\r\n              this.faceScan = true;\r\n            }\r\n            if (bioName != null && bioName != undefined) {\r\n              this.bioFetchDataBuild(data[0], bioName);\r\n              console.log('kyc :: ', this.kycVerificationForm);\r\n            }\r\n\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n  bioFetchDataBuild(data: any, bioName: any) {\r\n    console.log('in build data')\r\n    this.addBioDocsData(data.id, bioName, data.fileUrl);\r\n    console.log('kyc :: ', this.kycVerificationForm);\r\n  }\r\n\r\n  deleteAdditionalDoc(report, index) {\r\n    this.additionalDocs = this.kycVerificationForm.get('documentsList') as FormArray;\r\n    console.log(this.additionalDocs)\r\n    this.additionalDocs.removeAt(index);\r\n    this.selectedOptions2.forEach((element, index) => {\r\n      if (element == report.documentType) {\r\n        this.selectedOptions2.splice(index, 1);\r\n      }\r\n    });\r\n    if (report.id != null && report.id != '') {\r\n\r\n      console.log(\"report.id::\" + report.id)\r\n      this.api.deleteCustomerDoc(this.customerId, report.id).subscribe((data) => {\r\n      });\r\n    }\r\n    this.snack.open('Document Deleted Successfully', 'OK', {\r\n      duration: 4000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n    console.log(this.kycVerificationForm.get('documentsList') as FormArray);\r\n    console.log(this.kycVerificationForm.controls);\r\n    if (this.documentsList.controls.length) {\r\n      this.enableButton = true;\r\n    }\r\n    else {\r\n      this.enableButton = false;\r\n    }\r\n  }\r\n\r\n  deleteBioMetric(report, index) {\r\n    const deleteRecord = this.kycVerificationForm.get('biometricList') as FormArray;\r\n    console.log(report, deleteRecord, index);\r\n    deleteRecord.removeAt(index);\r\n    this.imageURLIrish = '';\r\n    this.imageURLFace = '';\r\n    this.imageURLBioScan = '';\r\n    this.api.deleteCustomerDoc(this.refreshCustomerId, report.id).subscribe((data) => {\r\n      console.log(\"data after delete\", this.refreshCustomerId);\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    console.log('view');\r\n  }\r\n\r\n\r\n  bioTypeChanged(value) {\r\n    console.log('form', value);\r\n    console.log('form', this.kycVerificationForm.get('biometricList')['controls']);\r\n    let data = this.kycVerificationForm.get('biometricList')['controls'];\r\n    let validindex = data.findIndex(i => i.valid == false);\r\n    if (validindex == -1) {\r\n      this.disableFinish = false;\r\n    }\r\n    console.log('ind', validindex);\r\n  }\r\n  openDialogForType(data) {\r\n    // this.irisScan = false;\r\n    // this.faceScan = false;\r\n    // this.biometricScan=false;\r\n    \r\n    if (data.bioDocumentType == \"Fingerprint Scan\") {\r\n      const dialogRef = this.dialog.open(CutomerFingerPrintComponent, {\r\n        data: { bioData: this.biometricData,\r\n        customerId:this.refreshCustomerId },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n        console.log('submit :: ', submit);\r\n        this.biometricData = submit.data;\r\n        if (this.biometricData.length > 0) {\r\n          this.diaplayBioCard = true;\r\n          this.biometricScan = false;\r\n        } else {\r\n          if (submit.isScanned) {\r\n            this.biometricScan = true;\r\n            this.imageURLBioScan = this.ls.getItem('imageURLBio');\r\n            this.diaplayBioCard = false;\r\n          }\r\n\r\n        }\r\n        this.disableFinish = false;\r\n      });\r\n    }\r\n    if (data.bioDocumentType == \"Irish Scan\") {\r\n      // IrisScan2Component\r\n      const dialogRef = this.dialog.open(KycIrisScanComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\",customerId:this.refreshCustomerId  },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n        console.log('submit :: ', submit);\r\n        if (submit.isScanned) {\r\n          this.irisScan = true;\r\n          this.imageURLIrish = `${API_URL}/rest/upload/downloadDocs/?fileName=iris_biometric.jpg`;\r\n\r\n        } else {\r\n          this.irisScan = false;\r\n          this.imageURLIrish = '';\r\n        }\r\n        this.disableFinish = false;\r\n      });\r\n    }\r\n    if (data.bioDocumentType == \"Face Scan\") {\r\n\r\n      const dialogRef = this.dialog.open(KycFaceScanComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\" ,customerId:this.refreshCustomerId  },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n        console.log('submit :: ', submit);\r\n        if (submit.isScanned) {\r\n          this.faceScan = true;\r\n          this.imageURLFace = `${API_URL}/rest/upload/downloadDocs/?fileName=face_biometric.jpg`;\r\n        } else {\r\n          this.imageURLFace = '';\r\n          this.faceScan = false;\r\n        }\r\n        this.disableFinish = false;\r\n      });\r\n    }\r\n    if (data.bioDocumentType == \"E-Sign\") {\r\n      const dialogRef = this.dialog.open(KycEsignComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n        console.log('submit :: ', submit);\r\n        if (submit.action == 'closed') {\r\n          this.eScan = true;\r\n        } else {\r\n          this.eScan = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  tabClick(event: MatTabChangeEvent) {\r\n    const tab = event.tab.textLabel;\r\n\r\n    if (tab === \"Documents Upload\") {\r\n      this.router.navigateByUrl(\"/others/documents\");\r\n    }\r\n    if (tab === \"verification\") {\r\n      this.router.navigateByUrl(\"/others/verification\");\r\n    }\r\n    if (tab === \"Basic Information\") {\r\n      this.router.navigateByUrl(\"/others/kyc\");\r\n    }\r\n  }\r\n  onNext(kycVerificationForm, arrayForm) {\r\n    // location.reload();\r\n    this.kycVerificationForm.reset();\r\n    this.api.setIndex({\r\n      index: 0,\r\n    });\r\n    this.api.setFinishFlag({\r\n      finishFlag: true,\r\n    });\r\n\r\n    this.kycVerificationForm.reset();\r\n    //this.disableFinish = false;\r\n    console.log(this.kycVerificationForm);\r\n    const dialogRef = this.dialog.open(VerificationCompletedComponent, {\r\n      data: { kycRef: this.kycRef },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => { });\r\n  }\r\n  previous() {\r\n    this.api.setIndex({\r\n      index: 1,\r\n    });\r\n    let customerId = localStorage.getItem('customer_id');\r\n    console.log(\"custId::\", localStorage.getItem('customer_id'))\r\n    this.shareDataService.shareCustomerId(customerId);\r\n  }\r\n  changeValue2(value: any, index) {\r\n\r\n    console.log('value :: ', value, ' index:: ', index);\r\n    if (this.DocumentsName[index]) {\r\n      this.selectedOptions2 = this.selectedOptions2.filter(val => val !== this.DocumentsName[index])\r\n    }\r\n    // this.DocumentsName[index] = value;\r\n    this.selectedOptions2.push(value);\r\n    // this.kycVerificationForm.controls.documentType.setValue('');\r\n    // this.arrayDocumentType = this.arrayDocumentType.filter(document => document !== value);\r\n  }\r\n\r\n  isDocumentOptionDisabled2 = (value) => {\r\n    // console.log('selectedOptions2:: ', this.selectedOptions2);\r\n    return this.selectedOptions2.includes(value);\r\n  }\r\n  public onFileChanged(event) {\r\n    this.selectedFiles = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (event2) => {\r\n      this.imgUrl = reader.result;\r\n      this.fun(event.target.files[0], this.selectedFiles);\r\n    };\r\n  }\r\n  fun(event, url) {\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    const data = {\r\n      customerId: this.customerId,\r\n      documentName: \"Profile Image\",\r\n      documentType: \"1\",\r\n      fileType: event.type,\r\n      fileName: event.name,\r\n      verificationType: \"KYC verification\",\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n    this.api.upload(uploadData).subscribe((res) => { });\r\n  }\r\n  fun1(event, url, docName, docType) {\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    console.log(\"this.customerId::\", this.customerId)\r\n    const data = {\r\n      customerId: this.refreshCustomerId,\r\n      documentName: this.kycVerificationForm.value.documentName,\r\n      documentType: \"2\",\r\n      fileType: event.type,\r\n      fileName: event.name,\r\n      verificationType: \"KYC verification\",\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n\r\n    this.api.upload(uploadData).subscribe(\r\n      (res) => { },\r\n      (error) => {\r\n        if (error.status == 201) {\r\n          this.kycVerificationForm.get(\"upload\").patchValue(true);\r\n          this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n  fun2(event, url, docName, docType) {\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    console.log(\"this.customerId::\", this.customerId)\r\n    const data = {\r\n      customerId: this.refreshCustomerId,\r\n      documentName: docName,\r\n      documentType: \"2\",\r\n      fileType: event.type,\r\n      fileName: event.name,\r\n      verificationType: \"KYC verification\",\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n\r\n    this.api.upload(uploadData).subscribe(\r\n      (res) => {\r\n        console.log(\"res\", res);\r\n      },\r\n      (error) => {\r\n        if (error.status == 201) {\r\n          this.kycVerificationForm.get(\"upload\").patchValue(true);\r\n          this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public onUpload(event, KycForm) {\r\n    this.selectedFiles = event.target.files[0];\r\n    console.log(this.selectedFiles);\r\n    this.fileName = this.selectedFiles.name\r\n    console.log(this.fileName);\r\n    this.kycVerificationForm.controls.documentType.patchValue(this.fileName);\r\n    console.log(\"doo\", this.kycVerificationForm.controls.documentType.patchValue(this.fileName))\r\n    console.log(this.fileName)\r\n    this.fun1(event.target.files[0], this.selectedFiles, KycForm.documentName, KycForm.documentType);\r\n    // Below part is used to display the selected image\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.readAsText(this.selectedFiles);\r\n\r\n    reader.onload = (event2) => {\r\n      this.fileUrl = reader.result;\r\n    };\r\n  }\r\n\r\n  public onUpload1(event, KycForm, index) {\r\n    var kyc = KycForm.documentsList[index].documentName;\r\n    this.selectedFiles = event.target.files[0];\r\n    this.fun2(event.target.files[0], this.selectedFiles, kyc, KycForm.documentType);\r\n    this.fileName = this.selectedFiles.name;\r\n    KycForm.documentsList[index].documentType = this.fileName;\r\n    console.log(this.fileName);\r\n    this.kycVerificationForm.controls.documentsList['controls'][index].controls.documentType.setValue(this.fileName)\r\n\r\n    // for(let i=0;i<KycForm.documentsList.length;i++)\r\n    // {console.log(\"in loop\",i);\r\n    //   console.log(this.kycVerificationForm.controls.documentsList['controls'][i].controls.documentType.setValue(this.fileName));\r\n    // }\r\n    // this.kycVerificationForm.get('documentsList').patchValue([{\r\n    //   documentType:this.fileName\r\n    // }]);\r\n    console.log(\"this\", this.kycVerificationForm.get('documentsList').value);\r\n\r\n\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.readAsText(this.selectedFiles);\r\n\r\n    reader.onload = (event2) => {\r\n      this.fileUrl = reader.result;\r\n    };\r\n  }\r\n\r\n  toMakeButton() {\r\n    document.getElementById(\"fileId\").click();\r\n  }\r\n\r\n  openDialog() {\r\n    this.a = this.kycVerificationForm.get(\"bioDocumentName\").value;\r\n\r\n    if (this.a == \"Finger Print\") {\r\n      const dialogRef = this.dialog.open(KycVerificationMethodComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => { });\r\n    }\r\n    if (this.a == \"Iris Scan\") {\r\n      const dialogRef = this.dialog.open(KycIrisScanComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => { });\r\n    }\r\n    if (this.a == \"E-Sign\") {\r\n      const dialogRef = this.dialog.open(KycEsignComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => { });\r\n    }\r\n  }\r\n\r\n  handleFileInput(file: FileList) {\r\n    this.fileToUpload = file.item(0);\r\n\r\n    //Show image preview\r\n    let reader = new FileReader();\r\n    reader.onload = (event: any) => {\r\n      this.imageUrl = event.target.result;\r\n    };\r\n    reader.readAsDataURL(this.fileToUpload);\r\n  }\r\n\r\n  uploadFile(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    reader.onload = () => {\r\n      this.fileUrl = reader.result;\r\n\r\n      this.kycVerificationForm.patchValue({\r\n        file: reader.result,\r\n      });\r\n\r\n      this.editFile = false;\r\n      // this.removeUpload = true;\r\n    };\r\n    // ChangeDetectorRef since file is loading outside the zone\r\n  }\r\n\r\n  // Function to remove uploaded file\r\n  removeUploadedFile() { }\r\n  addAccClass() {\r\n    let doc = new DocData();\r\n    this.docData.push(doc);\r\n  }\r\n  removeRow(index) {\r\n    console.log(index);\r\n    (<FormArray>this.kycVerificationForm.get(\"documentsList\")).removeAt(index);\r\n  }\r\n\r\n  initGroup() {\r\n    let rows = this.arrayForm.get(\"rows\") as FormArray;\r\n    rows.push(\r\n      this.fb.group({\r\n        id: [\"\"],\r\n        documentName: [\"\", [Validators.required]],\r\n        documentType: [\"\", [Validators.required]],\r\n      })\r\n    );\r\n  }\r\n  getDoc() {\r\n    this.dropVariableDoc = \"document_type\";\r\n    this.docName = \"document_name\";\r\n    this.bioName = \"biometrics_Name\";\r\n    this.bioType = \"biometrics_Type\";\r\n\r\n    this.api.getDropDownValues(this.dropVariableDoc).subscribe((data) => {\r\n      this.Documents = data;\r\n    });\r\n    this.api.getDropDownValues(this.docName).subscribe((resp) => {\r\n      this.DocumentsName = resp;\r\n\r\n    });\r\n    this.api.getDropDownValues(this.bioName).subscribe((response) => {\r\n      this.biometrics_Name = response;\r\n    });\r\n    this.api.getDropDownValues(this.bioType).subscribe((responseData) => {\r\n      this.biometrics_Type = responseData;\r\n    });\r\n  }\r\n  check(docData) { }\r\n  radioChange(event) {\r\n    if (event.value == 1) {\r\n      this.billing = true;\r\n    }\r\n    if (event.value == 2) {\r\n      this.billing = false;\r\n    }\r\n  }\r\n\r\n  onScan() {\r\n    this.fingerPrintService\r\n      .CallingSGIFPGetData()\r\n      .subscribe((capFingerPrint) => { });\r\n  }\r\n  SuccessFunc(result) {\r\n    if (result.ErrorCode == 0) {\r\n      /* \tDisplay BMP data in image tag\r\n          BMP data is in base 64 format \r\n      */\r\n      // if (result != null && result.BMPBase64.length > 0) {\r\n      //   document.getElementById(\"FPImage1\").src = \"data:image/bmp;base64,\" + result.BMPBase64;\r\n      // }\r\n    }\r\n  }\r\n  addDocs() {\r\n    this.documentsList = this.kycVerificationForm.get('documentsList') as FormArray;\r\n    this.documentsList.push(this.createItem());\r\n  }\r\n  loadBioDefault(count) {\r\n    this.biometricList = this.kycVerificationForm.get('biometricList') as FormArray;\r\n    for (let index = 0; index < count; index++) {\r\n      this.biometricList.push(this.createBioItem());\r\n    }\r\n  }\r\n\r\n  addBioDocs() {\r\n    this.biometricList = this.kycVerificationForm.get('biometricList') as FormArray;\r\n    this.biometricList.push(this.createBioItem());\r\n  }\r\n  addBioDocsData(data, type, fileUrl) {\r\n    console.log('in add bio docs :: ', data, type);\r\n    if (data != '') {\r\n      this.biometricList = this.kycVerificationForm.get('biometricList') as FormArray;\r\n      this.biometricList.push(this.createBioItemData(data, type, fileUrl));\r\n      console.log('this.biometricList :: ', this.biometricList)\r\n      // this.kycVerificationForm.get('biometricList').patchValue(this.createBioItemData(data, type));\r\n      // console.log('this.kycVerificationForm :: ', this.kycVerificationForm)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.shareDataService.shareCustomerId(null);\r\n  }\r\n  patchData() {\r\n\r\n  }\r\n\r\n  changeValue(event:any)\r\n  {\r\n    this.disableFinish=true;\r\n  }\r\n\r\n}\r\n\r\nexport interface DialogData {\r\n  animal: \"\";\r\n}\r\n\r\nexport class OtpModel {\r\n  source_key: any;\r\n  source_value: any;\r\n  source: any;\r\n}\r\nexport class OtpModelUpdate {\r\n  sourceKey: any;\r\n  sourceValue: any;\r\n  otp: any;\r\n  type: any;\r\n}\r\n","<div class=\"m-333\" style=\"padding-left: 4.5%; padding-right: 4.5%;\">\r\n    <mat-card class=\"matCard\">\r\n        <form [formGroup]=\"kycVerificationForm\">\r\n            <h2 class=\"verificationHead\">Verification</h2>\r\n            <hr class=\"line\">\r\n            <!-- <div class=\"spanDiv\">\r\n                <span class=\"span\">Additional Documents\r\n    \r\n                </span>\r\n                <mat-divider class=\"divider\"></mat-divider>\r\n            </div>\r\n             -->\r\n            <!-- <div class=\"spanDiv\" id=\"docMainDivider\">\r\n                <div id=\"dividerInside\">\r\n                    <span class=\"span\">Additional Documents\r\n                    </span>\r\n                    <mat-divider class=\"divider\"></mat-divider>\r\n                </div>\r\n                <div id=\"dividerInside\">\r\n                    <span class=\"span\">\r\n                        Biometric Verification\r\n                    </span>\r\n                    <mat-divider class=\"divider\"></mat-divider>\r\n                </div>\r\n            </div> -->\r\n    \r\n            <!-- ******************************************* -->\r\n            <!-- <div class=\"flex flex-wrap gap-20\"> -->\r\n    \r\n            <!--Document Section-->\r\n            <!--   \r\n                <div class=\"flex flex-grow-1 flex-wrap flex-column gap-20\" id=\"DocumentForm\">\r\n                    <span class=\"span\">Additional Documents\r\n                        <mat-divider class=\"divider\"></mat-divider>\r\n                    </span>\r\n                -->\r\n            <!-- Document Name -->\r\n            <!-- <div class=\"flex wrap justify-between\">\r\n                        <div class=\"m-8\">\r\n                            <mat-hint>Document Type*</mat-hint>\r\n                            <mat-card class=\"inputMatcardDoc\"\r\n                            [ngClass]=\"{'errbd': !kycVerificationForm.get('documentName').valid && \r\n                            kycVerificationForm.get('documentName').touched}\">\r\n                                <mat-select formControlName=\"documentName\" id=\"docName\">\r\n                                    <mat-option value=\"\">Select</mat-option>\r\n                                    <mat-option *ngFor=\"let Doc of DocumentsName\" [value]=\"Doc\">{{Doc}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n    \r\n                            <mat-error *ngIf=\"!kycVerificationForm.get('documentName').valid &&\r\n                                              kycVerificationForm.get('documentName').touched\">\r\n                            Please Select Document Name</mat-error>\r\n    \r\n                        </div>\r\n    \r\n                        <div class=\"flex justify-between\">\r\n                            <div class=\"m-8\">\r\n                                <mat-hint>Document Name*</mat-hint>\r\n                                <mat-card  style=\"height:40px;\"\r\n                                [ngClass]=\"{'errbd': !kycVerificationForm.get('documentType').valid && \r\n                            kycVerificationForm.get('documentType').touched}\">\r\n    \r\n                                    <input  matInput id=\"docType\" formControlName=\"documentType\"> \r\n                                    <mat-select formControlName=\"documentType\" id=\"docType\">\r\n                                        \r\n                   <mat-option *ngFor=\"let Document of Documents\" [value]=\"Document\">{{Document}}\r\n                                        </mat-option>\r\n                                    </mat-select> \r\n                                </mat-card>\r\n    \r\n                                <mat-error *ngIf=\"!kycVerificationForm.get('documentType').valid &&\r\n                                kycVerificationForm.get('documentType').touched\">\r\n                                Please Select Document Type</mat-error>\r\n    \r\n                            </div>\r\n                          <button class=\"height-auto align-self-flex-end\">Upload</button> -\r\n                            <div class=\"Upload changeDiv\">\r\n                                Upload<input type=\"file\" input type=\"file\" class=\"changeInput\"\r\n    \r\n                                    (click)=\"check(kycVerificationForm.value)\">\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n            <!-- (change)=\"onUpload($event,kycVerificationForm.value)\" -->\r\n    \r\n            <!--Dynamic row here-->\r\n    \r\n    \r\n            <!-- dnamc row vidya issue -->\r\n            <!--\r\n                    <div fxLayout=\"row wrap\"  formArrayName=\"documentsList\" \r\n                    *ngFor=\"let item of kycVerificationForm.get('documentsList')['controls']; let i = index;\">\r\n                        <div fxFlex=\"100\"  [formGroupName]=\"i\">\r\n                            <div fxFlex=\"20\">\r\n                                    <mat-hint>Document Name*</mat-hint>\r\n                                    <mat-card class=\"inputMatcardDoc\">\r\n                                        <mat-select formControlName=\"documentName\" id=\"docName\"\r\n                                        (optionSelected)=\"changeValue2($event, i)\"\r\n                                         (valueChange)=\"changeValue2($event, i)\">\r\n                                            <mat-option *ngFor=\"let Doc of DocumentsName\"  \r\n                                             [value]=\"Doc\"\r\n                                             [disabled] = isDocumentOptionDisabled2(Doc)>{{Doc}}</mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.controls.documentName.touched && !item.controls.documentName.valid\">\r\n                                        Please Select Document Type\r\n                                      </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"65\">\r\n                                <mat-hint>Document Type*</mat-hint>\r\n                                <mat-card  style=\"height:40px; width: 90%;\" title=\" {{item.controls.documentType.value}}\">\r\n                                    <input  matInput id=\"docType\" formControlName=\"documentType\"> \r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.controls.documentType.touched && !item.controls.documentType.valid\">\r\n                                            Please Select Document Name\r\n                                    </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"10%\" fxFlex.xs=\"100%\">\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding: 3rem 2rem;\">\r\n                                    <input style=\"display: none;\"\r\n                                        type=\"file\" name=\"fileData\"\r\n                                        #fileData\r\n                                        formControlName=\"fileData\"\r\n                                        (change)=\"onUpload1($event,kycVerificationForm.value,i)\">\r\n                                    <a style=\"text-decoration: underline; color:#456EFE;\"\r\n                                        (click)=\"fileData.click()\"\r\n                                        [routerLink]=\"\">Upload</a> &nbsp;&nbsp;&nbsp;\r\n                                        <mat-icon (click)=\"deleteAdditionalDoc(item.value,i)\" class=\"backIcon\">delete</mat-icon>\r\n                                        \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                <div id=\"row\" (click)=\"addDocs()\">\r\n    \r\n                        ADD NEW\r\n                    </div> -->\r\n            <!--  <div id=\"row\" (click)=\"addDocs()\" >\r\n                        <button mat-raised-button color=\"primary\">\r\n                        <mat-icon>add</mat-icon> ADD NEW\r\n                    </button>\r\n                    </div>  -->\r\n    \r\n            <!-- </div> -->\r\n    \r\n            <br>\r\n            \r\n            <mat-hint>Biometric Verification*</mat-hint>\r\n    \r\n            <table formArrayName=\"biometricList\"\r\n                *ngFor=\"let item of kycVerificationForm.get('biometricList')['controls']; let i = index;\">\r\n                <tbody [formGroupName]=\"i\">\r\n                    <tr fxLayoutGap=\"10px\">\r\n                      <td style=\"width: 300px;\">\r\n                            <mat-card class=\"inputMatcardDoc\">\r\n                                <mat-select formControlName=\"bioDocumentType\" id=\"bioName\">\r\n                                    <mat-option value=\"\">Select</mat-option>\r\n                                    <mat-option *ngFor=\"let biometric of biometrics_Type\" [value]=\"biometric\"\r\n                                     [disabled]=isDocumentOptionDisabled2(biometric) (click)=\"changeValue($event)\" > {{biometric}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"item.controls.bioDocumentType.touched && !item.controls.bioDocumentType.valid\">\r\n                                Please Select Biometric Type\r\n                            </mat-error>\r\n                        </td>\r\n                        <td style=\"width: 300px; margin: 20px; padding: 30px;\">\r\n                            <button mat-raised-button (click)=\"openDialogForType(item.value)\"\r\n                                style=\"color: cornflowerblue;\">Scan</button>&nbsp;&nbsp;\r\n    \r\n                            <button mat-raised-button (click)=\"deleteBioMetric(item.value,i)\">\r\n                                <mat-icon class=\"backIcon\">delete</mat-icon>\r\n                            </button>\r\n    \r\n                        </td>\r\n                        <td style=\"width: 300px;\">\r\n                            <div *ngIf=\"biometricData.length >0 && diaplayBioCard && item.controls.bioDocumentType.value=='Fingerprint Scan' \">\r\n                                <mat-card fxFlex=\"30%\" id=\"clr\" *ngFor=\"let item of biometricData ; let i = index;\"\r\n                                    style=\"margin: 0px; padding: 0px; margin-right: 10px;\">\r\n                                    <p   style=\"margin:00px; padding: 0px; text-align: center;\">{{item.fingerName}}</p>\r\n                                    <img [src]=\"'data:image/jpg;base64,'+item.image\" />\r\n                                </mat-card>\r\n                            </div>\r\n    \r\n                            <div *ngIf=\"biometricScan && item.controls.bioDocumentType.value=='Fingerprint Scan' \">\r\n                                <div *ngIf=\"imageURLBioScan == 'not_available'; else showAvatar\">\r\n                                    <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"\">\r\n                                </div>\r\n                                <ng-template #showAvatar>\r\n                                    <img class=\"formImg\" [src]=\"imageURLBioScan\" alt=\"\">\r\n                                </ng-template>\r\n                            </div>\r\n                            <div *ngIf=\"irisScan  && item.controls.bioDocumentType.value=='Irish Scan'\">\r\n                                 <!-- <mat-card fxFlex=\"30%\" id=\"clr\" style=\"margin: 5px; padding: 5px;\">  -->\r\n                                    <div *ngIf=\"imageURLIrish == 'not_available' || imageURLIrish == null ; else showAvatar\">\r\n                                        <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"\">\r\n                                    </div>\r\n                                    <ng-template #showAvatar>\r\n                                        <img class=\"formImg\" [src]=\"imageURLIrish\" alt=\"\">\r\n                                    </ng-template>\r\n                                 <!-- </mat-card>  -->\r\n                            </div>\r\n    \r\n                            <div *ngIf=\"faceScan  && item.controls.bioDocumentType.value=='Face Scan'\">\r\n                                <!-- <mat-card fxFlex=\"30%\" id=\"clr\" style=\"margin: 5px; padding: 5px;\"> -->\r\n                                    <div *ngIf=\"imageURLFace == 'not_available' || imageURLFace == null; else showAvatar\">\r\n                                        <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"\">\r\n                                    </div>\r\n                                    <ng-template #showAvatar>\r\n                                        <img class=\"formImg\" [src]=\"imageURLFace\" alt=\"\">\r\n                                    </ng-template>\r\n                                <!-- </mat-card> -->\r\n                            </div>\r\n    \r\n                            <div *ngIf=\"eScan  && item.controls.bioDocumentType.value=='E-Sign'\">\r\n                                <mat-card fxFlex=\"30%\" id=\"clr\" style=\"margin: 0px; padding: 0px;\">\r\n                                    <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"\">\r\n                                </mat-card>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n    \r\n    \r\n            </table>\r\n    \r\n            <table>\r\n                <tr>\r\n                    <td>\r\n                        <button mat-raised-button (click)=\"addBioDocs()\" [disabled]=\"disableAddAndDelete\">\r\n    \r\n    \r\n                        <mat-icon color=\"primary\">add</mat-icon>\r\n    \r\n    \r\n                        </button>\r\n                        \r\n                    </td>\r\n                </tr>\r\n            </table>\r\n    \r\n    \r\n        </form>\r\n    </mat-card>\r\n    \r\n    <!-- <div class=\"button\">\r\n    \r\n        <button mat-button class=\"Back\" (click)=\"previous()\">Back</button>\r\n        <button mat-stroked-button class=\"Next\" (click)=\"onNext(kycVerificationForm.value,arrayForm.value)\"\r\n            [disabled]=\"!kycVerificationForm.valid || !kycVerificationForm.get('biometricList').valid || disableFinish\">Finish</button> \r\n        <!-- <button mat-stroked-button class=\"Next\" (click)=\"onNext(kycVerificationForm.value,arrayForm.value)\"\r\n            [disabled]=\"!kycVerificationForm.valid || !kycVerificationForm.get('biometricList').valid || disableFinish\r\n            || !arrayForm.valid || disableAddAndDelete\">Finish</button>   \r\n            <!-- [disabled]=\"!kycVerificationForm.valid || kycVerificationForm.get('biometricList').invalid\" \r\n    </div> -->\r\n    \r\n</div>\r\n\r\n<div class=\"button\">\r\n    <span class=\"Back\" (click)=\"previous()\">Back</span>\r\n    <!-- <p> {{disableNext}} </p> -->\r\n    <button mat-stroked-button [ngClass]=\"{'Next':(!kycVerificationForm.valid || !kycVerificationForm.get('biometricList').valid || disableFinish), \r\n    'Next1':!(!kycVerificationForm.valid || !kycVerificationForm.get('biometricList').valid || disableFinish)}\" \r\n    (click)=\"onNext(kycVerificationForm.value,arrayForm.value)\"\r\n    [disabled]=\"!kycVerificationForm.valid || !kycVerificationForm.get('biometricList').valid || disableFinish\"><span style=\"color: white\">Finish</span></button>\r\n</div>","/**\n *\n * Tesseract Worker adapter for browser\n *\n * @fileoverview Tesseract Worker adapter for browser\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nconst defaultOptions = require('./defaultOptions');\nconst spawnWorker = require('./spawnWorker');\nconst terminateWorker = require('./terminateWorker');\nconst onMessage = require('./onMessage');\nconst send = require('./send');\nconst loadImage = require('./loadImage');\n\nmodule.exports = {\n  defaultOptions,\n  spawnWorker,\n  terminateWorker,\n  onMessage,\n  send,\n  loadImage,\n};\n","module.exports = (worker, handler) => {\n  worker.onmessage = ({ data }) => { // eslint-disable-line\n    handler(data);\n  };\n};\n","const isElectron = require('is-electron');\n\nmodule.exports = (key) => {\n  const env = {};\n\n  if (isElectron()) {\n    env.type = 'electron';\n  } else if (typeof window === 'object') {\n    env.type = 'browser';\n  } else if (typeof importScripts === 'function') {\n    env.type = 'webworker';\n  } else if (typeof process === 'object' && typeof require === 'function') {\n    env.type = 'node';\n  }\n\n  if (typeof key === 'undefined') {\n    return env;\n  }\n\n  return env[key];\n};\n","let logging = false;\n\nexports.logging = logging;\n\nexports.setLogging = (_logging) => {\n  logging = _logging;\n};\n\nexports.log = (...args) => (logging ? console.log.apply(this, args) : null);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","const OEM = require('./OEM');\n\nmodule.exports = {\n  defaultOEM: OEM.DEFAULT,\n};\n","/**\n * spawnWorker\n *\n * @name spawnWorker\n * @function create a new Worker in browser\n * @access public\n */\nmodule.exports = ({ workerPath, workerBlobURL }) => {\n  let worker;\n  if (Blob && URL && workerBlobURL) {\n    const blob = new Blob([`importScripts(\"${workerPath}\");`], {\n      type: 'application/javascript',\n    });\n    worker = new Worker(URL.createObjectURL(blob));\n  } else {\n    worker = new Worker(workerPath);\n  }\n\n  return worker;\n};\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport { DialogService } from 'app/shared/services/dialogs/dialog.service';\r\nimport { LocalStoreService } from 'app/shared/services/local-store.service';\r\n\r\n@Component({\r\n  selector: 'app-verification-completed',\r\n  templateUrl: './verification-completed.component.html',\r\n  styleUrls: ['./verification-completed.component.scss']\r\n})\r\nexport class VerificationCompletedComponent implements OnInit {\r\n  customerId: any;\r\n  reference: any;\r\n  kyc_reference: string;\r\n  customer_Id: string;\r\n  customerStatus: any;\r\n  accountType: any;\r\n  kycData: any;\r\n  constructor\r\n    (\r\n      public api: ApiService,\r\n      public router: Router,private ls: LocalStoreService,\r\n      public dialogRef: MatDialogRef<VerificationCompletedComponent>,\r\n      private dialogService: DialogService, @Inject(MAT_DIALOG_DATA) private data: any\r\n    ) {\r\n    this.kyc_reference = data.kycRef;\r\n  }\r\n  closeClick() {\r\n    console.log(\"close click\")\r\n    // [routerLink]=\"['/others/kyc']\" \r\n    this.dialogRef.close();\r\n    // this.router.navigateByUrl('/others/kyc'); \r\n  }\r\n  ngOnInit(): void {\r\n    this.accountType=this.ls.getItem(\"accountType\");\r\n    this.reference = sessionStorage.getItem('kyc_reference');\r\n   this.customer_Id= sessionStorage.getItem('customer_id');\r\n   this.customerStatus= sessionStorage.getItem('cust_status');\r\n   console.log(this.customerStatus)\r\n    this.api.getId().subscribe(info => {\r\n\r\n      console.log(\"info from other component\", this.customerId)\r\n      this.assign(info.id)\r\n\r\n    })\r\n    setTimeout(() => {\r\n      document.getElementById('kychide').click();\r\n     }, 500);\r\n    setTimeout(() => {\r\n      this.updateKycStatus();\r\n     }, 3000);\r\n\r\n    \r\n\r\n   \r\n\r\n\r\n  }\r\n\r\n  assign(id) {\r\n    this.customerId = id;\r\n\r\n  }\r\n  done() {\r\n  \r\n  \r\n    console.log(this.accountType);\r\n    if(this.accountType=='cardOrigination'){\r\n      this.dialogRef.close();\r\n      this.ls.setItem(\"kycReference\", this.reference);\r\n      this.ls.setItem(\"KycStatus\", this.customerStatus);\r\n      this.ls.setItem(\"kycForCard\",true);\r\n\r\n      this.router.navigate([`/cardaccount/applicationEntryStage/list/cardInitiation`]);\r\n      console.log(\"calling if\")\r\n      \r\n     \r\n    }\r\n    else{\r\n      console.log(\"calling else\")\r\n      // this.router.navigateByUrl('/others/kyc-method');\r\n      this.dialogService.openKycVerificationMethod();\r\n      this.dialogRef.close();\r\n      this.router.navigateByUrl(\"/others/Service\");\r\n    }\r\n    sessionStorage.removeItem('customer_id');\r\n    localStorage.removeItem('customer_id');\r\n    sessionStorage.removeItem('kyc_reference');\r\n  \r\n   \r\n  }\r\n\r\n\r\n  updateKycStatus() {\r\n    console.log('customerId :: ', this.customer_Id);\r\n    console.log(this.customerStatus)\r\n    if(this.customerStatus===\"APPROVED\"){\r\n      this.customerStatus=\"APPROVED\";\r\n    }else{\r\n      this.customerStatus=\"INITIATED\";\r\n    }\r\n    this.api.updateKycStatusByCustId(this.customer_Id, this.customerStatus,\"\")\r\n      .subscribe(data => {\r\n        this.kycData=data;\r\n       \r\n        console.log('update response :: ', data)\r\n      })\r\n  }\r\n}\r\n","<div class=\"main\" fxLayout=\"column wrap\">\r\n    <div fxFlex=\"100\" fxLayoutAlign=\"end stretch\">\r\n      <mat-icon id=\"close\" class=\"mat-18\" (click)=\"closeClick()\">close</mat-icon>\r\n    </div>\r\n    <div fxFlex=\"100\" fxLayoutAlign=\"center stretch\" fxLayoutGap=\"space-around\" id=\"scanDiv\">\r\n      <mat-label id=\"scan\">KYC Verification is completed!</mat-label>\r\n    </div>\r\n    <div fxFlex=\"50\" fxLayoutAlign=\"center stretch\" id=\"proceedDiv\">\r\n      <mat-label id=\"hold\">KYC Reference Number: <span class='KYCtxt'>{{this.kyc_reference}}</span></mat-label>\r\n    </div>\r\n  \r\n    <div fxFlex=\"50\" fxLayoutAlign=\"center stretch\">\r\n  \r\n        </div>\r\n        <div fxFlex=\"25\" fxLayoutAlign=\"center stretch\">\r\n        \r\n        \r\n            <!-- <span id=\"fingerprintSpan\"  fxLayoutAlign=\"center\">{{fingerName}}</span>\r\n            <hr class=\"line\"> -->\r\n            <img class=\"coImg\" src=\"assets/images/completed.PNG\">\r\n            <!-- <span class=\"fingeralgn material-icons\" fxLayoutAlign=\"center stretch\" id=\"fClr\">fingerprint</span> -->\r\n         \r\n            \r\n            </div>\r\n    <div fxFlex=\"50\" class=\"divButton\" fxLayoutAlign=\"center stretch\">\r\n      <button mat-raised-button class=\"btn\" (click)=\"done()\">Done</button>\r\n  \r\n    </div>\r\n    </div>\r\n\r\n \r\n\r\n","const createWorker = require('./createWorker');\n\nconst recognize = async (image, langs, options) => {\n  const worker = createWorker(options);\n  await worker.load();\n  await worker.loadLanguage(langs);\n  await worker.initialize(langs);\n  return worker.recognize(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nconst detect = async (image, options) => {\n  const worker = createWorker(options);\n  await worker.load();\n  await worker.loadLanguage('osd');\n  await worker.initialize('osd');\n  return worker.detect(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nmodule.exports = {\n  recognize,\n  detect,\n};\n","/*\n * OEM = OCR Engine Mode, and there are 4 possible modes.\n *\n * By default tesseract.js uses LSTM_ONLY mode.\n *\n */\nmodule.exports = {\n  TESSERACT_ONLY: 0,\n  LSTM_ONLY: 1,\n  TESSERACT_LSTM_COMBINED: 2,\n  DEFAULT: 3,\n};\n","/**\n *\n * Entry point for tesseract.js, should be the entry when bundling.\n *\n * @fileoverview entry point for tesseract.js\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nrequire('regenerator-runtime/runtime');\nconst createScheduler = require('./createScheduler');\nconst createWorker = require('./createWorker');\nconst Tesseract = require('./Tesseract');\nconst OEM = require('./constants/OEM');\nconst PSM = require('./constants/PSM');\nconst { setLogging } = require('./utils/log');\n\nmodule.exports = {\n  OEM,\n  PSM,\n  createScheduler,\n  createWorker,\n  setLogging,\n  ...Tesseract,\n};\n"]}