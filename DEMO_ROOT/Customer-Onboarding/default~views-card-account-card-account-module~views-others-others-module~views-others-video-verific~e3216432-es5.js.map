{"version":3,"sources":["webpack:///src/app/views/others/fingerprint-authentication/fingerprint-authentication.component.ts","webpack:///src/app/views/others/fingerprint-authentication/fingerprint-authentication.component.html","webpack:///src/app/views/others/kyc-verification/kyc-verification.component.html","webpack:///src/app/views/others/kyc-verification/kyc-verification.component.ts","webpack:///src/app/views/others/kyc-basic-information/kyc-basic-information.component.ts","webpack:///src/app/views/others/kyc-basic-information/kyc-basic-information.component.html"],"names":["FingerprintAuthenticationComponent","dialogRef","snack","api","fb","data","update","otpmodel","OtpModel1","numberOfClick","isGreater","number","type","dob","id","name","address","errormsg","basicInformationForm","group","otp","required","pattern","console","log","close","form","otpValidate","localStorage","getItem","sourceKey","sourceValue","getOtpValidating","subscribe","resp","closeClick","setVerify","verify","setVerify1","open","duration","verticalPosition","horizontalPosition","error","responseMessage","fire","icon","text","width","confirmButtonText","confirmButtonColor","source_key","source","source_value","getOtp","selector","templateUrl","styleUrls","OtpModel","kycVerificationForm","value","KycVerificationComponent","loader","ls","http","dialog","router","fingerPrintService","sanitizer","cdr","shareDataService","dialogService","locationStrategy","appApiService","subscriptions","cifNumberForm","maxDate","Date","settingallCustInfo","editFile","removeUpload","docData","billing","basicInfoSavedAlready","emailVerify","isSkip","isCifValid","radioFlag","arrayState","arrayCity","isAllSameDigitVal","prefixFlag","uploadDone","listOfCustByCif","flexValue","countrys","uplaod","Upload","cifFetch","array","checked","array1","permanentAddress","addressType","address1","address2","city","zipCode","minLength","maxLength","country","residenceType","state","onChange","onTouched","aadharParser","str","adharNumber","nameLineIndex","asciiStr","replace","trim","lines","split","i","length","count","startIndex","j","substr","some","docString","dobIndex","indexOf","slice","pop","dobArray","controls","dateOfBirth","setValue","names","filter","x","join","fullName","getScreenTitle","screenTitle","editKycScreen","kycVerificationForm1","documentsList","createItem","preventBackButton","getverify1","assignVerify","getverify","cifNumber","prefix","documentName","primaryEmailAdress","phoneNumber","firstName","lastName","middleName","customer_id","isAddressSame","gender","maritalStatus","nationality","profileImage","communicationAddress","imageURL","getDoc","get","patchValue","autofillDetails","openVerificationPopup","openVideoVerificationPopup","patchDataOnReload","push","valueChanges","forEach","s","unsubscribe","reset","_","valid","profile","fn","rekyc","auto","setTimeout","disableClose","panelClass","backdropClass","afterClosed","res","dataForForm","urlF","urlB","dataFront","dataBack","patchValueInForm","isEdit","verficationDialog","popupClose","done","customerId","kycreference","getPrimaryInfo","setCustVerificationValues","history","pushState","location","href","onPopState","docNum","toString","getStateName","getPerStateName","fileNameFront","fileNameBack","event","charCode","keyCode","disableButton","openKycVerificationMethod","isAdd","entityName","getAllCountries","countryName","getStateByCountryId","authStatus","stateName","key","Object","prototype","hasOwnProperty","call","element","elementState","getDropDownForStateCity","arrayState1","getAuthorizedCityInfo","map","r","cityName","addType","document_type","getCustomerDocuments","profileId","fileUrl","doConfirmDialog","response","profileFile","nativeElement","deleteCustomerDoc","KycForm","index","side","kyc","selectedFiles","target","files","fileNameCheckBack","fileExtBack","toLowerCase","fun2","documentType","fileNameCheck","fileExt","fun1","fileName","reader","FileReader","readAsDataURL","readAsText","onload","event2","result","img","docName","worker","load","loadLanguage","initialize","recognize","terminate","aadharDetails","namePancard","panNumber","pancard","imageOCR","url","filenameFrontSide","extension","resultFrontSide","refreshCustomerId","fileType","verificationType","documentSide","idNumber","filenameBackSide","resultBackSide","imageOCRBack","urlback","undefined","splitFunction","docType","cId","uploadData","FormData","doOCR","text1","countryAadhar","residency","pinCode","includes","fileData1","fileData2","indexs","dropVariableDoc","bioName","bioType","resi","marr","coun","nation","getDropDownValues","Documents","DocumentsName","biometrics_Name","responseData","biometrics_Type","getAllAuthCities","responseDatas","genders","responses","Residences","respo","MaritalStatus","re","datas","control","e","contains","addControl","removeControl","resetData","inputChar","String","fromCharCode","test","preventDefault","clearTimeout","timer","fetchByCif","customerInfoList","editCif","getAllCustomerDetails","userAddress","email","openDialog1","mobileVerified","phoneNUmber","submit","profilePicture","append","JSON","stringify","upload","tab","textLabel","navigateByUrl","fetchCustomerDetails","phoneNumberDetailsDialogue","nextEnableFunction","setOCR","dateSendingToServer","transform","invalid","payload","kycSubmit","kycScreenBasicinfo","uploadFrontSide","uploadBackSide","setItem","setName","sessionStorage","kycReference","kycRef","profileUpload","uploadDocument","next","err","body","status","backSideUploaded","frontSideUploaded","setKycRef","inp","setIndex","setFinishFlag","finishFlag","shareCustomerId","removeItem","loading","image","imgUrl","gettingCustomerDetails","sendKycDataFetchedInfo","customerInformation","customerAdditionalInfo","kycStatus","getProfileImage","verificationInfo","custStatus","ngOnInit","date","format","openDialogEmail","emailVerified","document","getElementById","click","zipIndex","zipcode","fetchStateCityByZipcode","provide","useExisting","multi","providers","changeDetection","OnPush","DocData","KycBasicInformationComponent","apiService","imageUrl","additionalDocs","enableButton","selectedOptions2","disableAddAndDelete","disableFinish","diaplayBioCard","irisScan","eScan","biometricScan","imageURLIrish","imageURLBioScan","imageURLFace","dataFetched","disableNext","isDocumentOptionDisabled2","getKycRef","assignKyc","getNewUserInfo","info","updateUserInfo","getKycDataFetchedInfo","biometricList","createBioItem","dataFetchedValue","arrayForm","rows","initGroup","getCustomerId","getAdditionalDocuments","bioDocumentType","changes","emit","fingerPrintId","irisId","faceScan","faceId","bioFetchDataBuild","addBioDocsData","report","removeAt","splice","validindex","findIndex","bioData","biometricData","isScanned","BMPBase64","file","DataURIToBlob","saveOrUpdateBio","irisData","dataURI","splitDataURI","byteString","atob","decodeURI","mimeString","ia","Uint8Array","charCodeAt","Blob","val","fun","a","fileToUpload","item","doc","CallingSGIFPGetData","capFingerPrint","ErrorCode","createBioItemData","deleteBioMetric","previous","onNext","el","OtpModelUpdate"],"mappings":"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","file":"default~views-card-account-card-account-module~views-others-others-module~views-others-video-verific~e3216432-es5.js","sourcesContent":["import { Component, Inject, Input, OnInit } from '@angular/core';\r\n// import { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n// import { ApiService } from 'app/api.service';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { DialogData, KycScreeningComponent } from '../kyc-screening/kyc-screening.component';\r\nimport { OtpModelUpdate } from '../kyc-basic-information/kyc-basic-information.component';\r\nimport { ApiService } from 'app/shared/services/api.service';\r\nimport Swal from 'sweetalert2';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-fingerprint-authentication',\r\n  templateUrl: './fingerprint-authentication.component.html',\r\n  styleUrls: ['./fingerprint-authentication.component.scss']\r\n})\r\nexport class FingerprintAuthenticationComponent implements OnInit {\r\n  public number;\r\n  public type;\r\n  update = new OtpModelUpdate();\r\n  errormsg: string;\r\n  basicInformationForm: FormGroup;\r\n  otpmodel = new OtpModel1();\r\n  dob: any;\r\n  id: any;\r\n  name: any;\r\n  address: any;\r\n  otpValidate: string;\r\n  numberOfClick:number =0;\r\n  isGreater:boolean = false;\r\n  constructor(private dialogRef: MatDialogRef<FingerprintAuthenticationComponent>,\r\n    private snack: MatSnackBar, private api: ApiService, private fb: FormBuilder,\r\n    @Inject(MAT_DIALOG_DATA) private data: any\r\n  ) {\r\n    this.number = data.number;\r\n    this.type = data.type;\r\n    this.dob = data.dob,\r\n      this.id = data.id,\r\n      this.name = data.name,\r\n      this.address = data.address\r\n  }\r\n  ngOnInit() {\r\n    if (this.type !== \"OCR function\") {\r\n      this.errormsg = \"An OTP has been sent to your \" + this.type + \" !\";\r\n      this.basicInformationForm = this.fb.group({\r\n        otp: ['', [Validators.required,Validators.pattern(\"[0-9]{6}$\")]],\r\n\r\n      })\r\n    }\r\n  }\r\n  buttonClick() {\r\n\r\n  }\r\n\r\n  closeClick() {\r\n    console.log(\"reached here\")\r\n    // [routerLink]=\"['/others/kyc']\"\r\n\r\n    this.dialogRef.close();\r\n    // this.router.navigateByUrl('/others/kyc');\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  verify(form) {\r\n    console.log(form);\r\n    this.otpValidate = localStorage.getItem('otpValidate')\r\n    if (this.type == \"email id\") {\r\n      this.update.sourceKey = \"email\"\r\n    }\r\n    if (this.type == \"Mobile Number\") {\r\n      this.update.sourceKey = \"mobile\"\r\n    }\r\n\r\n    this.update.sourceValue = this.number,\r\n      console.log(this.update.sourceValue);\r\n\r\n    this.update.otp = form.otp,\r\n      console.log(this.update.otp);\r\n\r\n    this.update.type = \"\"\r\n\r\n      this.api.getOtpValidating(this.update).subscribe(resp => {\r\n        console.log(\"response from backend\", resp)\r\n        if (resp.data != null) {\r\n          if (resp && this.type == \"Mobile Number\") {\r\n            this.closeClick();\r\n            this.api.setVerify({\r\n              verify: 'verified',\r\n              type: this.update.sourceKey\r\n\r\n            });\r\n            \r\n          }\r\n          else if (resp && this.type == \"email id\") {\r\n            this.closeClick();\r\n            this.api.setVerify1({\r\n              verify: 'verified',\r\n              type: this.update.sourceKey\r\n\r\n            });\r\n\r\n\r\n          }\r\n\r\n        }\r\n        else{\r\n          this.snack.open('Entered Invalid OTP', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        }\r\n      }, error => {\r\n        console.log('error : ', error.responseMessage, error);\r\n\r\n        if (error.error) {\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: \"Error message : \" + error.error,\r\n            width: 500,\r\n            confirmButtonText: \"OK\",\r\n            confirmButtonColor: '#456EFE'\r\n          })\r\n          // return false;\r\n\r\n        }\r\n        if (error && this.type == \"Mobile Number\") {\r\n          this.closeClick();\r\n          this.api.setVerify({\r\n            verify: 'verify',\r\n            type: this.update.sourceKey\r\n\r\n          });\r\n\r\n\r\n        }\r\n        else {\r\n          console.log(\"in else eerrrr email\");\r\n          this.api.setVerify1({\r\n            verify: 'verify',\r\n            type: this.update.sourceKey\r\n          });\r\n          this.errormsg = \"Error in OTP\";\r\n\r\n        }\r\n        this.closeClick();\r\n      })\r\n    \r\n    \r\n  }\r\n  getOtp() {    \r\n    if(this.numberOfClick == 3){\r\n      this.snack.open('Maximum Attempt Reached','Ok',{\r\n        horizontalPosition:'right',\r\n        verticalPosition:'top',\r\n        duration:3000\r\n      })\r\n      return;\r\n    }\r\n    this.numberOfClick = this.numberOfClick + 1;\r\n    if (this.type == \"email id\") {\r\n      this.otpmodel.source_key = \"email\"\r\n      this.otpmodel.source = 'customer';\r\n      this.otpmodel.source_value = this.number;\r\n    }\r\n    if (this.type == \"Mobile Number\") {\r\n      this.otpmodel.source_key = \"mobile\"\r\n      this.otpmodel.source = 'customer';\r\n      this.otpmodel.source_value = this.number;\r\n\r\n    }\r\n\r\n    this.api.getOtp(this.otpmodel).subscribe(resp => {\r\n      console.log(resp)\r\n      if (resp !== null) {        \r\n       \r\n        this.snack.open('OTP has been sent again', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n      }\r\n\r\n    })  \r\n\r\n  }\r\n\r\n}\r\n\r\nexport class OtpModel {\r\n  private source_key: string;\r\n  private source_value;\r\n  private source;\r\n}\r\nexport class OtpModel1 {\r\n  source_key: string;\r\n  source_value;\r\n  source;\r\n}\r\n\r\n\r\n","\r\n\r\n\r\n  <button mat-button id=\"close\" mat-dialog-close (click)=\"closeClick()\">\r\n    <mat-icon class=\"closeicon\">close</mat-icon>\r\n  </button>\r\n \r\n\r\n<form  *ngIf=\"type != 'OCR function'\" [formGroup]=\"basicInformationForm\">\r\n\r\n<div fxLayout=\"row\">\r\n \r\n  <div class=\"pd-2\" id=\"box\">\r\n    \r\n    <span class=\"verification\">{{errormsg}}</span> \r\n  <span class=\"phoneNumber\">Code has been sent to {{this.number}}</span>\r\n  <!-- <span class=\"verify\">Please enter the OTP  to verify</span> -->\r\n  <div class=\"propic text-center\">\r\n    <img src=\"assets/images/svg/otp_image.svg\" alt=\"\" class=\"w-70\" />\r\n  </div>\r\n  <div class=\"flex-grow-1\">\r\n \r\n    <mat-card type=\"input\" class=\"inputMatcard\">\r\n        <input matInput  id=\"otp\" \r\n        class=\"alignment\"  placeholder=\"ENTER OTP\"\r\n        type=\"number\"  \r\n        maxlength=\"6\" \r\n        oninput=\"this.value = this.value.slice(0, this.maxLength);\" \r\n        formControlName=\"otp\">\r\n    </mat-card>\r\n    \r\n   \r\n</div><br/>\r\n<span class=\"verify1\"><span id=\"resend\" [ngStyle]=\"{'color':(numberOfClick==3)&&'gray'}\"(click)=\"getOtp()\">Resend</span></span>\r\n\r\n</div>\r\n \r\n</div>\r\n\r\n  <button [ngClass]=\" basicInformationForm.valid == true ? 'buttonName' : 'buttonData'\" mat-raised-button [disabled]=\"!basicInformationForm.valid\"\r\n   (click)=\"verify(basicInformationForm.value)\">Proceed</button>\r\n\r\n</form>\r\n<div fxLayout=\"row\" class=\"ocrDiv\">\r\n \r\n  <div class=\"pd-2\" id=\"box\">\r\n    <!-- <span class=\"ocrDetailsSpan\">Aadhar Details</span>  -->\r\n<mat-card class=\"pd-2\"  *ngIf=\"type == 'OCR function'\">\r\n \r\n  <div >\r\n      <tr>\r\n          <td>Name:{{name}}</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Id Number:{{id}}</td>\r\n      </tr>\r\n      <tr>\r\n          <td>Dob: {{dob}}</td>\r\n      </tr>\r\n      <tr *ngIf=\"address\">\r\n          <td>Address: {{address}}</td>\r\n      </tr>\r\n      <!-- <tr *ngIf=\"dateOfIssue === 'undefined' && documentForm.controls.documentName.value=='Passport'\">\r\n          <td>Date Of Issue: {{dateOfIssue}}</td>\r\n      </tr>\r\n      <tr *ngIf=\"dateOfExpiry === 'undefined' && documentForm.controls.documentName.value=='Passport'\">\r\n          <td>Date Of Expiry: {{dateOfExpiry}}</td>\r\n      </tr> -->\r\n  </div>\r\n</mat-card> \r\n  </div></div>","<!-- <form [formGroup]=\"kycVerificationForm1\">\r\n  <mat-card-content formArrayName=\"documentsList\" class=\"parentMatCardContent\"\r\n    *ngFor=\"let item of kycVerificationForm1.get('documentsList')['controls']; let i = index;\">\r\n    <div fxLayout=\"row\" [formGroupName]=\"i\" fxLayoutGap=\"25px\" class=\"aadharForm\">\r\n      <div fxFlex=\"30%\" fxFlex.xs=\"100%\" class=\"mainAadhar\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"5px\">\r\n          <div class=\"pb-1\">\r\n            <mat-button-toggle-group class=\"toggleGroup1\">\r\n              <mat-button-toggle *ngFor=\"let option of array1; let i = index\" color=\"primary\" class=\"toggleGroup\"\r\n                [checked]=\"option.checked\" [ngStyle]=\"{'background-color':this.radioFlag === option.name?'#C0C0C0':''}\"\r\n                [value]=\"option.name\" (click)=\"radioEvent($event)\">{{\r\n                option.name }}\r\n              </mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n          </div>\r\n        </div>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\">\r\n          <div class=\"pb-1\" class=\"aadharDoc\">\r\n            <mat-hint>Document Name</mat-hint>\r\n            <mat-card class=\"widthCard inputMatcard width\"\r\n              [ngClass]=\"{'errbd': !kycVerificationForm.get('documentName').valid && kycVerificationForm.get('documentName').touched}\">\r\n              <mat-select formControlName=\"documentName\" (valueChange)=\"changeValue2($event)\">\r\n                <mat-option value=\"\">Select</mat-option>\r\n                <mat-option value=\"Aadhar card\">Aadhar card</mat-option>\r\n              </mat-select>\r\n            </mat-card>\r\n          </div>\r\n          <div fxFlex=\"50%\" fxFlex.xs=\"100%\" *ngIf=\"radioFlag=='Auto'\">\r\n            <div class=\"pb-1\">\r\n              <div class=\"aadharDoc\">\r\n                <mat-hint>Document Number</mat-hint>\r\n                <mat-card class=\" inputMatcard\"\r\n                  [ngClass]=\"{'errbd': !kycVerificationForm.get('documentName').valid && kycVerificationForm.get('documentName').touched}\">\r\n                  <input matInput formControlName=\"docNum\" type=\"number\" name=\"Document Number\" maxLength=\"12\"\r\n                    class=\"width alignment\" placeholder=\"Document Number\">\r\n                </mat-card>\r\n              </div>\r\n\r\n              <div fxFlex=\"50%\" fxFlex.xs=\"50%\" class=\"aadharDocNum\" *ngIf=\"radioFlag=='Auto'\">\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"aadharFetchDiv\">\r\n                  <a *ngIf=\"radioFlag=='Auto'\" class=\"aadharFetch\" (click)=\"manualUpload()\" [routerLink]=\"\">Fetch</a>\r\n                  &nbsp;&nbsp;&nbsp;\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"aadharUpload\" *ngIf=\"radioFlag=='Manual'\">\r\n            <div>\r\n              <button mat-raised-button (click)=\"fileData1.click()\" [disabled]=\"!disableButton\">\r\n                <input class=\"aadharInput\" type=\"file\" name=\"fileData1\" #fileData1 formControlName=\"fileData1\"\r\n                  (change)=\"onUpload1($event,kycVerificationForm1.value,i,'frontSide')\">Front Side</button>\r\n              <p class=\"aadharInput1\">{{resultFrontSide}}</p>\r\n            </div>\r\n            <mat-icon *ngIf=\"frontSideUploaded\" class=\"aadharCheck\">check_circle</mat-icon>\r\n            <div>\r\n              <button mat-raised-button (click)=\"fileData2.click()\" [disabled]=\"!disableButton\">\r\n\r\n                <input class=\"aadharInput\" type=\"file\" name=\"fileData2\" #fileData2 formControlName=\"fileData2\"\r\n                  (change)=\"onUpload1($event,kycVerificationForm1.value,i,'backSide')\">Back Side</button>\r\n              <p class=\"aadharInput1\">{{resultBackSide}}</p>\r\n            </div>\r\n            <mat-icon *ngIf=\"backSideUploaded\" class=\"aadharCheck\">check_circle</mat-icon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</form> -->\r\n<div class=\"m-333\" style=\"padding-left: 3.9%; padding-right: 3.2%;\">\r\n  <mat-card class=\"marginTopKyc\">\r\n    <form *ngIf=\"kycVerificationForm\" [formGroup]=\"kycVerificationForm\">\r\n      <!-- <h3 class=\"verificationHead\">Basic Information</h3>\r\n      <hr class=\"line\" /> -->\r\n      <div class=\"formSectionContainer\">\r\n        <div class=\"formLeft imageContainer\">\r\n        \r\n          <mat-card>\r\n            <span *ngIf=\"imageURL == 'not_available'; else showAvatar\">\r\n              <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"\">\r\n            </span>\r\n            <ng-template #showAvatar>\r\n              <img class=\"formImg\" [src]=\"imageURL\" alt=\"\">\r\n            </ng-template>\r\n          </mat-card>\r\n          \r\n          <div>\r\n            <button mat-icon-button style=\"float: right; padding-top: 8px;padding-right: 15px;\r\n              cursor: pointer;\">\r\n              <input type=\"file\" #profileFile input type=\"file\" (change)=\"onFileChanged($event)\"\r\n                accept=\"image/png, image/gif, image/jpg, image/jpeg\" class=\"changeInput\">\r\n              <mat-icon style=\"color: #004C97\">edit</mat-icon>\r\n            </button>\r\n            <span>\r\n              <mat-icon style=\"color: #B20000; cursor: pointer; padding-top: 15px;\" (click)=\" deleteProfileImg()\">delete\r\n              </mat-icon>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start center\">\r\n                  <div>\r\n                    <!-- <mat-card fxLayout=\"row\" type=\"input\" class=\"widthCard inputMatcard\">\r\n                      <input matInput placeholder=\"CIF Number\" formControlName=\"cifNumber\" class=\"alignment\" type=\"number\" min=\"0\"\r\n                        (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\"\r\n                        oninput=\"validity.valid||(value='');\" name=\"cifNumber\" value=\"cifNumber\">\r\n                        <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n                    </mat-card> -->\r\n                    <mat-form-field appearance=\"outline\" class=\"fieldinput\" fxFlex=\"110\">\r\n                      <mat-label>CIF Number</mat-label>\r\n                      <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                        <input fxFlex=\"85\" matInput placeholder=\"CIF Number\" formControlName=\"cifNumber\" class=\"alignment\" type=\"number\" min=\"0\"\r\n                        (keyup)=\"onKeyPress($event)\" [formControl]=\"cifNumberForm\" [matAutocomplete]=\"auto\"\r\n                        oninput=\"validity.valid||(value='');\" name=\"cifNumber\" value=\"cifNumber\" (change)=\"onChangeCif($event.target.value)\">\r\n                        <mat-icon fxFlex=\"15\">search</mat-icon>\r\n                      </div>\r\n                      \r\n                    \r\n                    </mat-form-field>\r\n                    <!-- <mat-form-field appearance=\"outline\" class=\"fieldinput\" type=\"input\" class=\"full-width widthCard search_field\" >\r\n                      <mat-label>Search Records</mat-label>\r\n                      <div fxLayoutAlign=\"center\" >\r\n                        <input matInput  placeholder=\"Search ID or Name\">\r\n                        <mat-spinner *ngIf=\"loading\" [diameter]=\"15\"></mat-spinner>\r\n                     </div>\r\n                      <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n                      <button mat-button  matSuffix mat-icon-button >\r\n                        <mat-icon>close</mat-icon>\r\n                      </button>\r\n                      <mat-hint>Search ID or Name</mat-hint>\r\n                    </mat-form-field> -->\r\n                    <div>\r\n                      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"autofillDetails()\">\r\n                        <mat-option *ngFor=\"let option of listOfCustByCif\" [value]=\"option.cifNumber\">\r\n                          <div fxLayout=\"row wrap\" style=\"margin-top: 20px;\">\r\n                            <div fxFlex=\" 100\">\r\n                              <div mat-card-avatar *ngIf=\"option?.profileImage =='not_available'\"\r\n                                class=\"example-header-image-dropdown\" fxFlex=\"10\">\r\n                                <h3 align=\"center\" style=\"margin-top: 5px;font-size: large;\">\r\n                                  {{option?.firstName | slice:0:1 | uppercase}}{{option?.lastName | slice:0:1 |\r\n                                  uppercase}}\r\n                                </h3>\r\n                              </div>\r\n                              <div *ngIf=\"option?.profileImage !='not_available'\" mat-card-avatar fxFlex=\"10\">\r\n                                <img matListAvatar\r\n                                  style=\"border-radius: 50%;height: 85%;margin-right: 20px;width: 90%;margin-bottom: 50px;\"\r\n                                  align=\"center\" [src]=\"option?.profileImage\" alt=\"...\">\r\n                              </div>\r\n                              <div fxFlex=\"80\">\r\n                                <h5 style=\"margin-bottom: 0px;\">\r\n                                  {{option?.firstName | uppercase}}\r\n                                  {{option?.middleName | uppercase}}\r\n                                  {{option?.lastName | uppercase}}\r\n                                </h5>\r\n                                <h6 style=\"margin-top: 0px;\">#{{option?.cifNumber}}</h6>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </mat-option>\r\n                      </mat-autocomplete>\r\n                    </div>\r\n                  </div>\r\n                  <!-- <div class=\"fechButtonDiv\">\r\n                    <p class=\"fetchButton\" *ngIf=\"!loading\" (click)=\"autofillDetails()\">Fetch</p>\r\n                    <mat-spinner *ngIf=\"loading\" [diameter]=\"40\" class=\"fetchButton\"></mat-spinner>\r\n                  </div> -->\r\n                  <!-- <div [hidden]=\"!kycVerificationForm.get('cifNumber')?.value\" class=\"fechButtonDiv\">\r\n                    <p class=\"fetchButton\" (click)=\"resetData()\">Reset</p>\r\n                  </div> -->\r\n                  <!-- <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"5px\" style=\"float: right;\"> -->\r\n                    <div class=\"pb-1 ml-48\" *ngIf=\"isSkip && this.screenTitle != 'video verification'\">\r\n                      <mat-button-toggle-group class=\"toggleGroup1\">\r\n                        <mat-button-toggle *ngFor=\"let option of array1; let i = index\" color=\"primary\" class=\"toggleGroup\"\r\n                          [checked]=\"option.checked\" [ngStyle]=\"{'background-color':this.radioFlag === option.name?'#004C97':''}\"\r\n                          [value]=\"option.name\" (click)=\"radioEvent($event)\">{{\r\n                          option.name }}\r\n                        </mat-button-toggle>\r\n                      </mat-button-toggle-group>\r\n                    </div>\r\n                    <div class=\"pb-1 ml-48\" *ngIf=\"isSkip && this.screenTitle == 'video verification'\">\r\n                      <mat-button-toggle-group class=\"toggleGroup1\">\r\n                        <mat-button-toggle  color=\"primary\" class=\"toggleGroup\"\r\n                          [checked]=\"!isSkip\" [ngStyle]=\"{'background-color':!isSkip?'#004C97':''}\"\r\n                          [value]=\"manual\" (click)=\"openVideoVerificationPopup()\">\r\n                          Manual\r\n                        </mat-button-toggle>\r\n                      </mat-button-toggle-group>\r\n                    </div>\r\n                  <!-- </div> -->\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form\" id=\"formfetch\">\r\n            <div class=\"flex-grow-1\" id=\"fech\">\r\n              <div class=\"flex-grow-2\" style=\"margin-left: -1px;\">\r\n                <mat-form-field appearance=\"outline\" class=\"fieldinput\" >\r\n                  <mat-label>Prefix*</mat-label>\r\n                  <mat-select formControlName=\"prefix\" (selectionChange)=\"onChangePrefix($event)\">\r\n                    <mat-option *ngFor=\"let i of index\" [value]=\"i\">{{\r\n                      i\r\n                      }}</mat-option>\r\n                  </mat-select>\r\n                <mat-error *ngIf=\"\r\n                  !kycVerificationForm.get('prefix').valid &&\r\n                  kycVerificationForm.get('prefix').touched\r\n                \">\r\n                  Please Select Prefix</mat-error>\r\n                <mat-error *ngIf=\" !prefixFlag\">\r\n                  &nbsp; Prefix and Gender does not match!\r\n                </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"flex-grow-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"fieldinput\">\r\n                <mat-label>First Name*</mat-label>\r\n                <input matInput placeholder=\"First Name*\" formControlName=\"firstName\" autocomplete=\"off\" class=\"alignment\" type=\"text\"\r\n                  name=\"lastName\" (keypress)=\"letterOnly($event)\" value=\"updateUserInfo.firstName\" />\r\n              <mat-error *ngIf=\"\r\n                !kycVerificationForm.get('firstName').valid &&\r\n                kycVerificationForm.get('firstName').touched\r\n              \">\r\n                Please Enter First Name</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            \r\n            <div class=\"flex-grow-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"fieldinput\">\r\n                <mat-label>Middle Name</mat-label>\r\n                <input matInput placeholder=\"Middle Name\" formControlName=\"middleName\" (keypress)=\"letterOnly($event)\" class=\"alignment\"\r\n                  type=\"text\" name=\"middleName\" />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"flex-grow-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"fieldinput\">\r\n                <mat-label>Last Name*</mat-label>\r\n                <input matInput placeholder=\"Last Name*\" formControlName=\"lastName\" autocomplete=\"off\" class=\"alignment\" type=\"text\"\r\n                  name=\"lastName\" (keypress)=\"letterOnly($event)\" value=\"updateUserInfo.lastName\" />\r\n              <mat-error *ngIf=\"\r\n                !kycVerificationForm.get('lastName').valid &&\r\n                kycVerificationForm.get('lastName').touched\r\n              \">\r\n                Please Enter Last Name\r\n              </mat-error>\r\n            </mat-form-field>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div class=\"form\" id=\"formfetch1\">\r\n            <div class=\"flex-grow-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"fieldinput\">\r\n                <mat-label>Date of Birth*</mat-label>\r\n                <input matInput placeholder=\"Date of Birth*\" formControlName=\"dateOfBirth\" id=\"dob\" class=\"alignment\" name=\"dateOfBirth\" readonly\r\n                  [matDatepicker]=\"picker\" [max]=\"maxDate\" value=\"dateOfBirth\">\r\n                <div fxFlex=\"8%\" id=\"toggle\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\">\r\n                  </mat-datepicker-toggle>\r\n\r\n                  <mat-datepicker #picker>\r\n                  </mat-datepicker>\r\n                </div>\r\n              <mat-error *ngIf=\"\r\n                    !kycVerificationForm.get('dateOfBirth').valid &&\r\n                    kycVerificationForm.get('dateOfBirth').touched\r\n                  \">\r\n                Please Select Date Of Birth\r\n              </mat-error>\r\n            </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"flex-grow-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"fieldinput\">\r\n                <mat-label>Marital Status*</mat-label>\r\n                <mat-select formControlName=\"maritalStatus\">\r\n                  <mat-option *ngFor=\"let status of MaritalStatus\" [value]=\"status\">{{ status }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              <mat-error *ngIf=\"\r\n                !kycVerificationForm.get('maritalStatus').valid &&\r\n                kycVerificationForm.get('maritalStatus').touched\r\n              \">\r\n                Please Select Marital Status\r\n              </mat-error>\r\n            </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"flex-grow-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"fieldinput\">\r\n                <mat-label>Gender*</mat-label>\r\n                <mat-select formControlName=\"gender\" (selectionChange)=\"onChangeGender($event)\">\r\n                  <mat-option *ngFor=\"let gender of genders\" [value]=\"gender\">{{\r\n                    gender\r\n                    }}</mat-option>\r\n                </mat-select>\r\n              <mat-error class=\"help-block\" *ngIf=\"\r\n                !kycVerificationForm.get('gender').valid &&\r\n                kycVerificationForm.get('gender').touched\r\n              \">\r\n                Please Select Gender\r\n              </mat-error>\r\n              <mat-error *ngIf=\" !prefixFlag\">\r\n                &nbsp; Prefix and Gender does not match!\r\n              </mat-error>\r\n            </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"flex-grow-1\">\r\n              <mat-form-field appearance=\"outline\" class=\"fieldinput\">\r\n                <mat-label>Nationality*</mat-label>\r\n                <mat-select formControlName=\"nationality\">\r\n                  <mat-option *ngFor=\"let nation of nationality\" [value]=\"nation\">{{ nation }}</mat-option>\r\n                </mat-select>\r\n              <mat-error *ngIf=\"\r\n                !kycVerificationForm.get('nationality').valid &&\r\n                kycVerificationForm.get('nationality').touched\r\n              \">\r\n                Please Select Nationality\r\n              </mat-error>\r\n            </mat-form-field>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div class=\"form\" id=\"formfetch2\">\r\n            <div class=\"flex-grow-1\" style=\"margin-top:20px\">\r\n              <mat-card class=\"inputMatcardMail\" fxLayout=\"row\">\r\n                <input matInput placeholder=\"Primary Email*\" formControlName=\"primaryEmailAdress\" class=\"alignment\" (keypress)=_keyPress1($event)\r\n                  autocomplete=\"off\" type=\"text\" name=\"primaryEmailAdress\" />\r\n                <button class=\"verificationDisable\"\r\n                  *ngIf=\"kycVerificationForm.get('primaryEmailAdress').invalid\">{{emailVerify}}</button>\r\n                  <mat-icon *ngIf=\"kycVerificationForm.get('primaryEmailAdress').valid && emailVerify == 'verified'\" style=\"color: green;\">check_circle</mat-icon>\r\n                <button class=\"verification\" (click)=\"getOtp(kycVerificationForm.value)\"\r\n                  *ngIf=\"kycVerificationForm.get('primaryEmailAdress').valid && emailVerify != 'verified'\">{{emailVerify}}</button>  \r\n              </mat-card>\r\n              <mat-error\r\n                *ngIf=\"kycVerificationForm.get('primaryEmailAdress').hasError('required') && kycVerificationForm.get('primaryEmailAdress').touched\">\r\n                Please Enter Primary Email\r\n              </mat-error>\r\n              <mat-error *ngIf=\"kycVerificationForm.get('primaryEmailAdress').hasError('pattern')\">\r\n                Please Enter valid email address!\r\n              </mat-error>\r\n            \r\n            </div>\r\n\r\n            <div class=\"flex-grow-1\" style=\"margin-top:20px\">\r\n              <mat-card class=\"inputMatcard\" fxLayout=\"row\">\r\n                <input matInput placeholder=\"Mobile Number*\" name=\"phoneNumber\" class=\"alignment\" autocomplete=\"off\" maxLength=\"10\"\r\n                  formControlName=\"phoneNumber\" (keypress)=_keyPress($event) />\r\n                <button class=\"verificationDisable\"\r\n                  *ngIf=\"kycVerificationForm.get('phoneNumber').invalid\">{{verify}}</button>\r\n                <button class=\"verification\" (click)=\"getOtpMobile(kycVerificationForm.value)\"\r\n                  *ngIf=\"kycVerificationForm.get('phoneNumber').valid && verify != 'verified'\">{{verify}}</button>\r\n                  <mat-icon *ngIf=\"kycVerificationForm.get('phoneNumber').valid && verify == 'verified'\" style=\"color: green;\">check_circle</mat-icon>\r\n              </mat-card>    \r\n              <mat-error\r\n                *ngIf=\"kycVerificationForm.get('phoneNumber').hasError('required') && kycVerificationForm.get('phoneNumber').touched\">\r\n                Please Enter Mobile Number\r\n              </mat-error>\r\n              <mat-error *ngIf=\"kycVerificationForm.get('phoneNumber').hasError('pattern')\">\r\n                Mobile number must be 10 digits.\r\n              </mat-error>\r\n              <mat-error *ngIf=\"kycVerificationForm.controls['phoneNumber'].value == '0000000000'\">\r\n                &nbsp; &nbsp; Please Enter Correct Mobile Number\r\n              </mat-error>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxLayout=\"row\">\r\n        <div fxFlex=\"100\">\r\n          <div id=\"bill\">\r\n            <div class=\"billName\">\r\n              Is your Permanent Address same as Communication Address?\r\n            </div>\r\n\r\n            <mat-radio-group formControlName=\"isAddressSame\">\r\n              <mat-radio-button *ngFor=\"let option of array; let i = index\" class=\"ml-8\"\r\n                [checked]=\"option.checked\" [value]=\"option.name\" (change)=\"\r\n                        onChangeAddress(\r\n                          kycVerificationForm.controls.permanentAddress,\r\n                          $event\r\n                        )\r\n                      \">{{ option.name }}\r\n              </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <mat-card class=\"matCard\">\r\n        <div   class=\"mt-32  communicationForm\" fxLayout=\"row\" fxLayoutGap=\"12px\">\r\n        <div fxFlex={{flexValue}} class=\"addressGrid\">\r\n          <div class=\"spanDiv\">\r\n            <span class=\"span\">Communication Address </span>\r\n          </div>\r\n          \r\n          <div formGroupName=\"communicationAddress\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.address1').valid && \r\n                      kycVerificationForm.get('communicationAddress.address1').touched}\">\r\n                    <textarea matInput placeholder=\"Address Line 1*\" formControlName=\"address1\" autocomplete=\"off\" class=\"full-width\" maxlength=\"50\"\r\n                      name=\"address1\" (keypress)=\"keyPressAlphanumeric($event)\" rows=1></textarea>\r\n                  </mat-card>\r\n                  <mat-error\r\n                    *ngIf=\"(!kycVerificationForm.get('communicationAddress.address1').valid && kycVerificationForm.get('communicationAddress.address1').touched) || ( kycVerificationForm.get('communicationAddress.address1').touched &&  kycVerificationForm.get('communicationAddress.address1').hasError('pattern'))\">\r\n                    Please Enter Valid Address Line 1\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('communicationAddress.address2').valid && \r\n                      kycVerificationForm.get('communicationAddress.address2').touched}\">\r\n                    <textarea matInput placeholder=\"Address Line 2*\" formControlName=\"address2\" autocomplete=\"off\" class=\"full-width\" maxlength=\"50\"\r\n                      name=\"address2\" (keypress)=\"keyPressAlphanumeric($event)\" rows=1></textarea>\r\n                  </mat-card>\r\n                  <mat-error\r\n                    *ngIf=\"(!kycVerificationForm.get('communicationAddress.address2').valid && kycVerificationForm.get('communicationAddress.address2').touched) || ( kycVerificationForm.get('communicationAddress.address2').touched &&  kycVerificationForm.get('communicationAddress.address2').hasError('pattern'))\">\r\n                    Please Enter Valid Address Line 2\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field class=\"full-width fieldinput\" appearance=\"outline\">\r\n                    <mat-label>Residence Type*</mat-label>\r\n                    <mat-select formControlName=\"residenceType\">\r\n                      <mat-option *ngFor=\"let Resi of Residences\" [value]=\"Resi\">{{ Resi }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"\r\n                      !kycVerificationForm.get('communicationAddress.residenceType').valid &&\r\n                      kycVerificationForm.get('communicationAddress.residenceType').touched\r\n                    \">\r\n                      Please Select Residence Type\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field class=\"full-width fieldinput\" appearance=\"outline\">\r\n                    <mat-label>Country*</mat-label>\r\n                    <mat-select formControlName=\"country\" (selectionChange)=\"getStateName($event.value,true)\" placeholder=\"Country\">\r\n                      <mat-option *ngFor=\"let country of countrys\" [value]=\"country\">{{ country }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"\r\n                      !kycVerificationForm.get('communicationAddress.country').valid &&\r\n                      kycVerificationForm.get('communicationAddress.country').touched\r\n                    \">\r\n                      Please Select Country\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <div fxFlex=\"32.5%\">\r\n                <div class=\"pb-1\">\r\n                  <!-- <mat-form-field fxLayout=\"row\" class=\"zipCode\" appearance=\"outline\">\r\n                    <mat-label>ZipCode*</mat-label>\r\n                    <input matInput formControlName=\"zipCode\" autocomplete=\"off\" onlyNumber type=\"text\" matInput\r\n                      minLength=\"5\" placeholder=\"Zip Code*\" maxLength=\"10\" (keyup)=\"isAllSameDigit($event,0)\"\r\n                      (change)=\"getCityandStateByZipcode(kycVerificationForm.get('communicationAddress.country').value,$event.target.value, 'communication')\"\r\n                      name=\"zipCode\" />\r\n                      <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n                    <mat-error *ngIf=\"\r\n                      (!kycVerificationForm.get('communicationAddress.zipCode').valid &&\r\n                      kycVerificationForm.get('communicationAddress.zipCode').touched ||\r\n                      kycVerificationForm.get('communicationAddress.zipCode').required && \r\n                      kycVerificationForm.get('permanentAddress.zipCode').minLength) \">\r\n                      Please enter vaild Zip Code!(5-10 digits)\r\n                    </mat-error>\r\n                    <h5 *ngIf=\"isAllSameDigitVal && 0==zipIndex\" style=\"color: #E74C3C;\">Please enter valid Zip Code!\r\n                    </h5>\r\n                  </mat-form-field>   -->\r\n                  <mat-form-field appearance=\"outline\" class=\"fieldinput\" fxFlex=\"100\">\r\n                    <mat-label>Zip Code*</mat-label>\r\n                    <input matInput formControlName=\"zipCode\" autocomplete=\"off\" onlyNumber type=\"text\" matInput\r\n                      minLength=\"5\" placeholder=\"Zip Code*\" maxLength=\"10\" (keyup)=\"isAllSameDigit($event,0)\"\r\n                      (change)=\"getCityandStateByZipcode(kycVerificationForm.get('communicationAddress.country').value,$event.target.value, 'communication')\"\r\n                      name=\"zipCode\" />\r\n                      <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n                    <mat-error *ngIf=\"\r\n                      (!kycVerificationForm.get('communicationAddress.zipCode').valid &&\r\n                      kycVerificationForm.get('communicationAddress.zipCode').touched ||\r\n                      kycVerificationForm.get('communicationAddress.zipCode').required && \r\n                      kycVerificationForm.get('permanentAddress.zipCode').minLength) \">\r\n                      Please enter vaild Zip Code!(5-10 digits)\r\n                    </mat-error>\r\n                    <h5 *ngIf=\"isAllSameDigitVal && 0==zipIndex\" style=\"color: #E74C3C;\">Please enter valid Zip Code!\r\n                    </h5>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"32.5%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field class=\"full-width fieldinput\" appearance=\"outline\">\r\n                    <mat-label>State*</mat-label>\r\n                    <mat-select name=\"state\" formControlName=\"state\" (selectionChange)=\"onStateChange('communication')\">\r\n                      <mat-option *ngFor=\"let state of arrayState\" [value]=\"state\">{{state}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"\r\n                      !kycVerificationForm.get('communicationAddress.state').valid &&\r\n                      kycVerificationForm.get('communicationAddress.state').touched\">\r\n                      Please Select State\r\n                    </mat-error>\r\n                  </mat-form-field>  \r\n                </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"32.5%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field class=\"full-width fieldinput\" appearance=\"outline\">\r\n                    <mat-label>City*</mat-label>\r\n                    <mat-select name=\"city\" formControlName=\"city\" (selectionChange)=\"onCityChange('communication')\">\r\n                      <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city\">{{city}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"\r\n                      !kycVerificationForm.get('communicationAddress.city').valid &&\r\n                      kycVerificationForm.get('communicationAddress.city').touched\">\r\n                      Please Select City\r\n                    </mat-error>\r\n                  </mat-form-field>  \r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div fxFlex=\"50%\" class=\"addressGrid\" *ngIf=\"sameAddress == 'No'\" id=\"communicationBlockForm\">\r\n          <div class=\"spanDiv\">\r\n            <span class=\"span\"> Permanent Address</span>\r\n            <!-- <mat-divider class=\"divider\"></mat-divider> -->\r\n          </div>\r\n          <div formGroupName=\"permanentAddress\">\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('permanentAddress.address1').valid && \r\n                      kycVerificationForm.get('permanentAddress.address1').touched}\">\r\n                    <textarea matInput placeholder=\"Address Line 1*\" formControlName=\"address1\" class=\"full-width\" maxlength=\"50\" name=\"address1\"\r\n                      (keypress)=\"keyPressAlphanumeric($event)\" rows=\"1\"></textarea>\r\n                  </mat-card>\r\n                  <mat-error\r\n                    *ngIf=\"(!kycVerificationForm.get('permanentAddress.address1').valid && kycVerificationForm.get('permanentAddress.address1').touched) || ( kycVerificationForm.get('permanentAddress.address1').touched &&  kycVerificationForm.get('permanentAddress.address1').hasError('pattern'))\">\r\n                    Please Enter Valid Address Line 1\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"50\">\r\n                <div class=\"pb-1\">\r\n                  <mat-card class=\"address-card inputMatcard3\" [ngClass]=\"{'errbd': !kycVerificationForm.get('permanentAddress.address2').valid && \r\n                      kycVerificationForm.get('permanentAddress.address2').touched}\">\r\n                    <textarea matInput placeholder=\"Address Line 2*\" formControlName=\"address2\" class=\"full-width\" maxlength=\"50\" name=\"address2\"\r\n                      (keypress)=\"keyPressAlphanumeric($event)\" rows=\"1\"></textarea>\r\n                  </mat-card>\r\n                  <mat-error\r\n                    *ngIf=\"(!kycVerificationForm.get('permanentAddress.address2').valid && kycVerificationForm.get('permanentAddress.address2').touched) || ( kycVerificationForm.get('permanentAddress.address2').touched &&  kycVerificationForm.get('permanentAddress.address2').hasError('pattern'))\">\r\n                    Please Enter Valid Address Line 2\r\n                  </mat-error>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field class=\"full-width fieldinput\" appearance=\"outline\">\r\n                    <mat-label>Residance Type*</mat-label>\r\n                    <mat-select formControlName=\"residenceType\">\r\n                      <mat-option *ngFor=\"let Resi of Residences\" [value]=\"Resi\">{{ Resi }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"\r\n                      !kycVerificationForm.get('permanentAddress.residenceType').valid &&\r\n                      kycVerificationForm.get('permanentAddress.residenceType').touched\">\r\n                      Please Select Residence Type\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"50%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field class=\"full-width fieldinput\" appearance=\"outline\">\r\n                    <mat-label>Country*</mat-label>\r\n                    <mat-select formControlName=\"country\" (selectionChange)=\"getPerStateName($event.value,true)\">\r\n                      <mat-option *ngFor=\"let country of countrys\" [value]=\"country\">{{ country }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"\r\n                      !kycVerificationForm.get('permanentAddress.country').valid &&\r\n                      kycVerificationForm.get('permanentAddress.country').touched\">\r\n                      Please Select Country\r\n                    </mat-error>\r\n                  </mat-form-field>  \r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"space-between center\">\r\n              <div fxFlex=\"32%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field fxLayout=\"row\" class=\"full-width fieldinput\" appearance=\"outline\">\r\n                    <mat-label>ZipCode*</mat-label>\r\n                    <input matInput placeholder=\"Zip Code*\" formControlName=\"zipCode\" onlyNumber type=\"text\" matInput minLength=\"6\"\r\n                      maxLength=\"10\" class=\"alignment1\" name=\"zipCode\" (keyup)=\"isAllSameDigit($event,1)\"\r\n                      (change)=\"getCityandStateByZipcode(kycVerificationForm.get('permanentAddress.country').value,$event.target.value)\" />\r\n                      <mat-icon matPrefix class=\"my-icon\">search</mat-icon>\r\n                    <mat-error *ngIf=\"\r\n                      !kycVerificationForm.get('permanentAddress.zipCode').valid &&\r\n                      kycVerificationForm.get('permanentAddress.zipCode').touched  ||\r\n                      kycVerificationForm.get('permanentAddress.zipCode').required && \r\n                      kycVerificationForm.get('permanentAddress.zipCode').minLength \">\r\n                      Please enter vaild Zip Code!\r\n                    </mat-error>\r\n                    <h5 *ngIf=\"isAllSameDigitVal && 1==zipIndex\" style=\"color: #E74C3C;\">Please enter valid Zip Code!\r\n                    </h5>\r\n                  </mat-form-field>  \r\n                </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"32%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field class=\"full-width fieldinput\" appearance=\"outline\">\r\n                    <mat-label>State*</mat-label>\r\n                    <mat-select name=\"state\" formControlName=\"state\" (selectionChange)=\"onStateChange('permanent')\">\r\n                      <mat-option *ngFor=\"let state of arrayState1\" [value]=\"state\">{{state}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"\r\n                      !kycVerificationForm.get('permanentAddress.state').valid &&\r\n                      kycVerificationForm.get('permanentAddress.state').touched\">\r\n                      Please Select State\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <div fxFlex=\"32%\">\r\n                <div class=\"pb-1\">\r\n                  <mat-form-field class=\"full-width fieldinput\" appearance=\"outline\">\r\n                    <mat-label>City*</mat-label>\r\n                    <mat-select name=\"city\" formControlName=\"city\" (selectionChange)=\"onCityChange('permanent')\">\r\n                      <mat-option *ngFor=\"let city of arrayCity\" [value]=\"city\">{{city}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"\r\n                      !kycVerificationForm.get('permanentAddress.city').valid &&\r\n                      kycVerificationForm.get('permanentAddress.city').touched\">\r\n                      Please Select City\r\n                    </mat-error>\r\n                  </mat-form-field>  \r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n        <div fxlayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"button1\" *ngIf=\"screenTitle!='video verification'\">\r\n          <span class=\"BackButton\" >Back</span>\r\n          <button (click)=\"resetForm()\" class='hide' #kychide id='kychide'>-</button>\r\n          <button mat-stroked-button [ngClass]=\"{'next12':!(kycVerificationForm.invalid || !prefixFlag), \r\n            'next':kycVerificationForm.invalid || !prefixFlag}\" id=\"n\" (click)=\"onNext()\"\r\n            [disabled]=\"kycVerificationForm.invalid || !prefixFlag\">Next</button>\r\n        </div> \r\n      </mat-card>\r\n\r\n    </form>\r\n  </mat-card>\r\n\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { createWorker, Worker } from \"tesseract.js\";\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatTabChangeEvent } from \"@angular/material/tabs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\n\r\nimport { CutomerFingerPrintComponent } from \"../cutomer-finger-print/cutomer-finger-print.component\";\r\nimport { FingerprintAuthenticationComponent } from \"../fingerprint-authentication/fingerprint-authentication.component\";\r\nimport { IrisScan2Component } from \"../iris-scan2/iris-scan2.component\";\r\nimport { OtpModel } from \"../kyc-basic-information/kyc-basic-information.component\";\r\nimport { KycEsignComponent } from \"../kyc-esign/kyc-esign.component\";\r\nimport { KycIrisScanComponent } from \"../kyc-iris-scan/kyc-iris-scan.component\";\r\nimport { KycVerificationMethodComponent } from \"../kyc-verification-method/kyc-verification-method.component\";\r\nimport { VerificationCompletedComponent } from \"../verification-completed/verification-completed.component\";\r\nimport * as moment from \"moment\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { FingerPrintCaptureService } from \"app/shared/services/finger-print-capture.service\";\r\nimport { DatePipe, LocationStrategy } from \"@angular/common\";\r\nimport { empty, Subscription } from \"rxjs\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { DialogService } from \"app/shared/services/dialogs/dialog.service\";\r\nimport Swal from 'sweetalert2';\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { ApplicationEntryStageService } from \"app/shared/services/application-entry-stage.service\";\r\nimport { KycScreeningNewcustomerComponent } from \"../kyc-screening/kyc-screening-newcustomer/kyc-screening-newcustomer.component\";\r\nimport { VideoVerificationPopupComponent } from \"../kyc-screening/video-verification-popup/video-verification-popup.component\";\r\n@Component({\r\n  selector: \"app-kyc-verification\",\r\n  templateUrl: \"./kyc-verification.component.html\",\r\n  styleUrls: [\"./kyc-verification.component.scss\"],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => KycVerificationComponent),\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => KycVerificationComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n\r\n})\r\nexport class KycVerificationComponent implements OnInit {\r\n  subscriptions: Subscription[] = [];\r\n  screenTitle: String;\r\n\r\n  get value(): any {\r\n    return this.kycVerificationForm.value;\r\n  }\r\n\r\n  set value(value: any) {\r\n    this.kycVerificationForm.setValue(value);\r\n    this.onChange(value);\r\n    this.onTouched();\r\n  }\r\n  cifNumberForm = new FormControl();\r\n  verificationInfo: any;\r\n\r\n  maxDate = new Date();\r\n  @Output() settingallCustInfo: EventEmitter<object> = new EventEmitter();\r\n\r\n  @ViewChild(\"profileFile\") profileFile: ElementRef;\r\n  // imageUrl: any = \"https://i.ibb.co/fDWsn3G/buck.jpg\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n\r\n  selectedFiles: any;\r\n  fileToUpload: any;\r\n  docData: Array<DocData> = [];\r\n\r\n  kycVerificationForm: FormGroup;\r\n  adressForm: FormGroup;\r\n  billingForm: FormGroup;\r\n  arrayForm: FormGroup;\r\n\r\n  otpmodel = new OtpModel();\r\n\r\n  url: string | ArrayBuffer;\r\n  imgUrl: string | ArrayBuffer;\r\n  fileUrl: string | ArrayBuffer;\r\n  dropVariableDoc: string;\r\n  updateUserInfo: any;\r\n  billing: boolean = true;\r\n  docName: string;\r\n  bioName: string;\r\n  bioType: string;\r\n  coun: string;\r\n  gender: string;\r\n  resi: string;\r\n  marr: string;\r\n  indexs: string;\r\n  nation: string;\r\n  basicInfoSavedAlready: boolean = false;\r\n  cifNumber: any;\r\n  profilePicture: any;\r\n  image: Object;\r\n  name: string;\r\n  verify: any = \"verify\";\r\n  emailVerify: any = \"verify\";\r\n  isSkip: boolean = true;\r\n  customerInformation: any;\r\n  ocrFlag: boolean;\r\n  loading: boolean;\r\n  pinCode: any;\r\n  residency: string;\r\n  countryAadhar: string;\r\n  side: any;\r\n\r\n  isCifValid: boolean = false;\r\n\r\n  radioFlag: any = \"Auto\";\r\n  frontSideUploaded: boolean;\r\n  backSideUploaded: boolean;\r\n  fileName: any;\r\n  fileNameFront: any;\r\n  refreshCustomerId: any;\r\n  namePancard: any;\r\n  dob: any;\r\n  panNumber: any;\r\n  pancard: boolean;\r\n  imageOCR: string | ArrayBuffer;\r\n  urlback: any;\r\n  imageOCRBack: any;\r\n  address: string;\r\n  currentFileUpload: any;\r\n  fileNameBack: any;\r\n  disableButton: boolean;\r\n  entityName: string;\r\n  arrayState: string[] = [];\r\n  arrayCity: string[] =[];\r\n  arrayState1: string[];\r\n  arrayCity1: string[];\r\n  resultFrontSide: string;\r\n  resultBackSide: string;\r\n  dataFront: {\r\n    customerId: any; documentName: any; documentType: string; fileType: any; fileName: any; verificationType: string; documentSide: string; idNumber: any\r\n  };\r\n  dataBack: {\r\n    customerId: any; documentName: any; documentType: string; fileType: any; fileName: any; verificationType: string; documentSide: string; idNumber: any\r\n  };\r\n  urlB: any;\r\n  urlF: any;\r\n  id: any;\r\n  filenameFrontSide: any;\r\n  filenameBackSide: any;\r\n\r\n  profileId: any;\r\n  imageURL: any;\r\n  isAllSameDigitVal: boolean = false;\r\n fileNameCheck: any;\r\n  fileNameCheckBack: any;\r\n  zipIndex: number;\r\n  prefixFlag: boolean=false;\r\n  editKycScreen: string;\r\n  uploadDone: boolean=true;\r\n\r\n  timer: any;\r\n  listOfCustByCif: any = [];\r\n  otpValidate: any;\r\n  emailVerified: any;\r\n  mobileVerified: any;\r\n  flexValue:string = '100';\r\n\r\n  constructor(\r\n    private loader: AppLoaderService,\r\n    private ls: LocalStoreService,\r\n    private http: HttpClient,\r\n    private api: ApiService,\r\n    private snack: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private fingerPrintService: FingerPrintCaptureService,\r\n    private sanitizer: DomSanitizer,\r\n\r\n    private cdr: ChangeDetectorRef,\r\n\r\n    private shareDataService: DataService,\r\n    private dialogService: DialogService,\r\n    private locationStrategy: LocationStrategy,\r\n    private appApiService: ApplicationEntryStageService,\r\n  ) { }\r\n  kycVerificationForm1: FormGroup;\r\n  index: string[];\r\n  biometrics_Name: string[];\r\n  biometrics_Type: string[];\r\n  genders: string[];\r\n  nationality: string[];\r\n  countrys: string[] = [];\r\n  Residences: string[];\r\n  Documents: string[];\r\n  DocumentsName: string[];\r\n  MaritalStatus: string[];\r\n  uplaod = new Upload();\r\n  customerId: string;\r\n  cifFetch: boolean = false;\r\n\r\n  array = [\r\n    {\r\n      id: 1,\r\n      checked: true,\r\n      name: \"Yes\",\r\n    },\r\n    {\r\n      id: 2,\r\n      checked: false,\r\n      name: \"No\",\r\n    },\r\n  ];\r\n  array1 = [\r\n    {\r\n      id: 1,\r\n      checked: true,\r\n      name: \"Auto\",\r\n    },\r\n    {\r\n      id: 2,\r\n      checked: false,\r\n      name: \"Manual\",\r\n    },\r\n  ];\r\n\r\n  permanentAddress: FormGroup = this.fb.group({\r\n    addressType: [\"Permanent\", [Validators.required]],\r\n    address1: [\"\", [Validators.required,Validators.pattern('.*[a-zA-Z].*')]],\r\n    address2: [\"\", [Validators.required,Validators.pattern('.*[a-zA-Z].*')]],\r\n    city: [\"\", [Validators.required]],\r\n    zipCode: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n    country: [\"\", [Validators.required]],\r\n    residenceType: [\"\", [Validators.required]],\r\n    state: [\"\", [Validators.required]],\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.api.getScreenTitle().subscribe(resp=>{\r\n      this.screenTitle=resp.screenTitle;\r\n    })\r\n    this.editKycScreen = localStorage.getItem('EDIT-CIFNUMBER');\r\n    console.log(this.editKycScreen,\"Edit kyc details\");\r\n    this.kycVerificationForm1 = this.fb.group({\r\n      documentsList: this.fb.array([this.createItem()]),\r\n      // documentName:[\"\"]\r\n\r\n    });\r\n    this.preventBackButton();\r\n   \r\n    this.api.getverify1().subscribe(resp => {\r\n      if (resp.verify == 'verified') {\r\n        this.assignVerify(resp)\r\n      }\r\n    })\r\n\r\n    this.api.getverify().subscribe(resp => {\r\n      if (resp.verify == 'verified') {\r\n        this.assignVerify(resp)\r\n      }\r\n    })\r\n\r\n\r\n\r\n\r\n    this.prefixFlag=true;\r\n    this.kycVerificationForm = this.fb.group({\r\n      cifNumber: [\"\"],\r\n      prefix: [\"\", [Validators.required]],\r\n      documentName: [\"\"],\r\n      // firstName: ['',[Validators.required]],\r\n      primaryEmailAdress: [\"\", [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$')]],\r\n      phoneNumber: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\r\n      firstName: [\"\", [Validators.required]],\r\n      lastName: [\"\", [Validators.required]],\r\n      middleName: [\"\"],\r\n      customer_id: [\"\"], //we need to add customerid dynamically based on Post and Put method --->added by jaya\r\n      isAddressSame: [\"\"],\r\n      gender: [\"\", [Validators.required]],\r\n      dateOfBirth: [\"\", [Validators.required]],\r\n      maritalStatus: [\"\", [Validators.required]],\r\n      nationality: [\"\", [Validators.required]],\r\n      profileImage: [\"\"],\r\n\r\n      communicationAddress: this.fb.group({\r\n        addressType: [\"Communication\", [Validators.required]],\r\n        address1: [\"\", [Validators.required,Validators.pattern('.*[a-zA-Z].*')]],\r\n        address2: [\"\", [Validators.required,Validators.pattern('.*[a-zA-Z].*')]],\r\n        city: [\"\", [Validators.required]],\r\n        zipCode: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\r\n        country: [\"\", [Validators.required]],\r\n        residenceType: [\"\", [Validators.required]],\r\n        state: [\"\", [Validators.required]],\r\n      }),\r\n\r\n    });\r\n    this.imageURL = \"not_available\"\r\n    // this.initGroup();\r\n    console.log('clear');\r\n    // this.kycVerificationForm.reset();\r\n    this.getDoc();\r\n    // console.log(\"after getDoc\");\r\n    this.kycVerificationForm\r\n      .get(\"isAddressSame\")\r\n      .patchValue(this.array[0].name);\r\n    // console.log(\"after patchValue\")\r\n\r\n    // localStorage.getItem('customer_id')? this.getAllCustomerDetails(localStorage.getItem('customer_id')) : '';\r\n   console.log(this.ls.getItem('EDIT-CIFNUMBER'));\r\n    if (this.ls.getItem('EDIT-CIFNUMBER')) {\r\n      console.log(\"KYC Id reference inside\");\r\n      this.autofillDetails(this.editKycScreen);\r\n      this.cifFetch = false;\r\n    }\r\n    if(!localStorage.getItem('customer_id')){\r\n      if(this.screenTitle != 'video verification'){\r\n        this.openVerificationPopup(false,true);\r\n      }\r\n      else{\r\n        this.openVideoVerificationPopup();\r\n      }\r\n    }\r\n    else{\r\n      if(localStorage.getItem('kyc_reference')){\r\n        this.patchDataOnReload(localStorage.getItem('kyc_reference'));\r\n      }\r\n    }\r\n     this.subscriptions.push(\r\n      this.kycVerificationForm.valueChanges.subscribe((value) => {\r\n        this.onChange(value);\r\n        this.onTouched();\r\n      })\r\n    );\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\n  writeValue(value) { if (value) { this.value = value; } if (value === null) { this.kycVerificationForm.reset(); } }\r\n  validate(_: FormControl) {\r\n    return this.kycVerificationForm.valid ? null : { profile: { valid: false } };\r\n  }\r\n  onChange: any = () => {};\r\n  onTouched: any = () => {};\r\n\r\n  registerOnChange(fn) {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  openVerificationPopup(rekyc,auto){\r\n    console.log(this.kycVerificationForm);\r\n    setTimeout(() => {\r\n        const dialogRef = this.dialog.open(KycScreeningNewcustomerComponent, { \r\n          data:{rekyc:rekyc,auto:auto},\r\n          width: '720px', \r\n          disableClose: true, \r\n          panelClass: \"popup-dialog-class\", \r\n          backdropClass:'bdrop'\r\n        }); \r\n          dialogRef.afterClosed().subscribe(res => {\r\n            console.log(res);\r\n            if(res == 'skip'){\r\n              this.isSkip = true;\r\n              return;\r\n            }\r\n            this.isSkip = false;\r\n            if(res.dataForForm){\r\n              this.urlF = res.dataForForm[2];\r\n              this.urlB = res.dataForForm[5];\r\n              this.dataFront  = res.dataForForm[1];\r\n              this.dataBack = res.dataForForm[4]\r\n              this.patchValueInForm(res.dataForForm)\r\n            }\r\n            if(res != 'skip' && !res?.isEdit){\r\n              const verficationDialog = this.dialog.open(VerificationCompletedComponent,{\r\n                data:{rekyc:res.rekyc,popupClose:true},\r\n                disableClose: true,\r\n                width:'40%'\r\n              })\r\n              verficationDialog.afterClosed().subscribe(done => {\r\n              })\r\n            }\r\n            if(res.customerId && res.isEdit){\r\n              this.autofillDetails(res.customerId)\r\n            }\r\n          })\r\n    }, 500); \r\n  }\r\n  openVideoVerificationPopup(){\r\n    setTimeout(() => {\r\n      const dialogRef = this.dialog.open(VideoVerificationPopupComponent, { \r\n        data:{},\r\n        width: '720px', \r\n        disableClose: true, \r\n        panelClass: \"popup-dialog-class\", \r\n        backdropClass:'bdrop'\r\n      }); \r\n        dialogRef.afterClosed().subscribe(res => {\r\n          if(res == 'skip'){\r\n            this.isSkip = true;\r\n            return;\r\n          }\r\n          this.isSkip = false;\r\n          if(res.dataForForm){\r\n            this.patchValueInForm(res.dataForForm)\r\n          }\r\n          if(res != 'skip'){\r\n            const verficationDialog = this.dialog.open(VerificationCompletedComponent,{\r\n              data:{rekyc:false,popupClose:true},\r\n              disableClose: true,\r\n              width:'40%'\r\n            })\r\n          }\r\n        })\r\n  }, 500); \r\n  }\r\n  patchValueInForm(data){\r\n    console.log(data);\r\n    console.log(data[0].fullName.split(\" \")[0]);\r\n    console.log(data[0].fullName.split(\" \")[1]);\r\n    this.kycVerificationForm.get(\"firstName\").patchValue(data[0].fullName.split(\" \")[0]);\r\n    this.kycVerificationForm.get(\"lastName\").patchValue(data[0].fullName.split(\" \")[1]);\r\n    if (\r\n      data[0].gender == \"Female\"\r\n    ) {\r\n      this.kycVerificationForm.get(\"gender\").patchValue(\"Female\");\r\n      this.kycVerificationForm.get(\"prefix\").patchValue(\"Ms\");\r\n    }\r\n    else if (\r\n      data[0].gender == \"Male\"\r\n    ) {\r\n      this.kycVerificationForm.get(\"gender\").patchValue(\"Male\");\r\n      this.kycVerificationForm.get(\"prefix\").patchValue(\"Mr\");\r\n    }\r\n    this.kycVerificationForm.get(\"nationality\").patchValue(\"Indian\");\r\n    console.log(data[2].split(\",\").length);\r\n    console.log(data[2].split(\",\")[1]);\r\n    console.log(data[2].split(\",\")[2]);\r\n    this.kycVerificationForm\r\n    .get(\"communicationAddress.address1\")\r\n    .patchValue(data[2].split(\",\")[0] + data[2].split(\",\")[1]);\r\n  this.kycVerificationForm\r\n    .get(\"communicationAddress.address2\")\r\n    .patchValue(data[2].split(\",\")[3]);\r\n  this.kycVerificationForm\r\n    .get(\"communicationAddress.state\")\r\n    .patchValue(data[2].split(\",\")[data[2].split(\",\").length]);\r\n  }\r\n  patchDataOnReload(kycreference){\r\n    this.api.getPrimaryInfo(kycreference.slice(4)).subscribe(res => {\r\n      this.setCustVerificationValues(res);\r\n    })\r\n  }\r\n  preventBackButton() {\r\n    history.pushState(null, null, location.href);\r\n    this.locationStrategy.onPopState(() => {\r\n      history.pushState(null, null, location.href);\r\n    })\r\n  }\r\n  manualUpload(){\r\n    let docNum:number;\r\n    docNum=this.kycVerificationForm1.value.documentsList[0].docNum;\r\n    if(docNum.toString().length !== 12){\r\n    Swal.fire({\r\n      text: \" Aadhar Number Should be 12 digits!\",\r\n      width: 500,\r\n      confirmButtonText: \"OK\",\r\n      confirmButtonColor: '#456EFE',\r\n      icon:'info'\r\n    })\r\n  }\r\n  else{\r\n    this.kycVerificationForm.get(\"communicationAddress.zipCode\").patchValue(\"670645\");\r\n    this.kycVerificationForm.get(\"communicationAddress.residenceType\").patchValue('Citizen');\r\n    this.kycVerificationForm.get(\"communicationAddress.country\").patchValue('India');\r\n    this.getStateName('India', '');\r\n    this.getPerStateName('India');\r\n    // this.getCityName('Kerala','');\r\n    this.kycVerificationForm.get(\"communicationAddress.address1\").patchValue('Pollayaote');\r\n    this.kycVerificationForm.get(\"communicationAddress.address2\").patchValue('Payote Kalam');\r\n    this.kycVerificationForm.get(\"communicationAddress.state\").patchValue('Kerala');\r\n    this.kycVerificationForm.get(\"prefix\").patchValue('Ms');\r\n    this.kycVerificationForm.get(\"phoneNumber\").patchValue('9656849771');\r\n    this.kycVerificationForm.get(\"firstName\").patchValue('Jayalakshmi');\r\n    this.kycVerificationForm.get(\"lastName\").patchValue('PM');\r\n    this.kycVerificationForm.get(\"middleName\").patchValue('');\r\n    this.kycVerificationForm.get(\"gender\").patchValue('Female');\r\n    this.kycVerificationForm.get(\"dateOfBirth\").patchValue('2022-04-08');\r\n    this.kycVerificationForm.get(\"nationality\").patchValue('Indian');\r\n    this.kycVerificationForm.get(\"communicationAddress.city\").patchValue('Wayanad');\r\n  }\r\n}\r\n  resetForm() {\r\n    this.kycVerificationForm.reset();\r\n    this.kycVerificationForm1.reset();\r\n    this.imageURL=\"\";\r\n    this.fileNameFront = '';\r\n    this.fileNameBack = '';\r\n    this.radioFlag = 'Auto';\r\n  }\r\n\r\n  letterOnly(event) {\r\n    var charCode = event.keyCode;\r\n    if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || charCode == 8)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  changeValue2(event) {\r\n    if (event === \"Aadhar card\") {\r\n      this.disableButton = true;\r\n    }\r\n  }\r\n  previousStep() {\r\n    this.dialogService.openKycVerificationMethod();\r\n  }\r\n  getStateName(country, address, isAdd?) {\r\n    if(isAdd){\r\n          this.kycVerificationForm.get('communicationAddress.zipCode').setValue('');\r\n          this.kycVerificationForm.get('communicationAddress.state').setValue('');\r\n          this.kycVerificationForm.get('communicationAddress.city').setValue('');\r\n}\r\nthis.arrayState = [];\r\n    this.entityName = \"state\";\r\n    // console.log(\"State -- \", country)\r\n    // this.api.getDropDownForStateCity(this.entityName, country).subscribe((data) => {\r\n    //   this.arrayState = data;\r\n      this.api.getAllCountries().subscribe((data: any) => {\r\n        for(let i=0; i<data.length;i++){       \r\n          if(data[i].countryName === country){\r\n            this.api.getStateByCountryId(data[i].id).subscribe((resp: any) => {\r\n              for(let i=0; i<resp.length;i++){\r\n                if(resp[i].authStatus==='A'){\r\n                  this.arrayState.push(resp[i].stateName);\r\n                }\r\n              }\r\n            })\r\n            break;   \r\n          }\r\n        }\r\n      // console.log(\"-->\", this.arrayState)\r\n      if (address.length > 0) {\r\n        for (const key in address) {\r\n          if (Object.prototype.hasOwnProperty.call(address, key)) {\r\n            const element = address[key];\r\n            for (const state in this.arrayState) {\r\n              if (Object.prototype.hasOwnProperty.call(this.arrayState, state)) {\r\n                const elementState = this.arrayState[state];\r\n                if (elementState.trim() === element.trim()) {\r\n                  // console.log('elementState', elementState)\r\n                  // this.getCityName(elementState.trim(),address);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getPerStateName(country, isAdd?) {\r\n    if(isAdd){\r\n      this.kycVerificationForm.get('permanentAddress.zipCode').setValue('');\r\n      this.kycVerificationForm.get('permanentAddress.state').setValue('');\r\n      this.kycVerificationForm.get('permanentAddress.city').setValue('');\r\n}\r\n    this.entityName = \"state\";\r\n    // console.log(\"State -- \", country)\r\n    this.api.getDropDownForStateCity(this.entityName, country).subscribe((data) => {\r\n      this.arrayState1 = data;\r\n      // console.log(\"-->\", this.arrayState)\r\n    });\r\n  }\r\n\r\n  // getCityName(state: any,address) {\r\n  //   this.entityName = \"city\";\r\n  //   // console.log(state)\r\n  //   this.api.getDropDownForStateCity(this.entityName, state).subscribe((data) => {\r\n  //     this.arrayCity = data;\r\n  //     // console.log(\"-->\", this.arrayCity)\r\n  //     if (address.length > 0) {\r\n  //       for (const key in address) {\r\n  //         if (Object.prototype.hasOwnProperty.call(address, key)) {\r\n  //           const element = address[key];\r\n  //           for (const City in this.arrayCity) {\r\n  //             if (Object.prototype.hasOwnProperty.call(this.arrayCity, City)) {\r\n  //               const elementCity = this.arrayCity[City];\r\n  //               if (elementCity.trim() === element.trim()) {\r\n  //                 // console.log('elementCity', elementCity)\r\n  //                 this.kycVerificationForm.get('communicationAddress.city').setValue(elementCity);\r\n  //                 this.cdr.detectChanges();\r\n  //                 this.cdr.markForCheck();\r\n  //               }\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   });\r\n  // }\r\n  // getPerCityName(state: any) {\r\n  //   this.entityName = \"city\";\r\n  //   // console.log(state)\r\n  //   this.api.getDropDownForStateCity(this.entityName, state).subscribe((data) => {\r\n  //     this.arrayCity1 = data;\r\n  //     // console.log(\"-->\", this.arrayCity)\r\n\r\n  //   });\r\n  // }\r\n  getAllAuthCities(){\r\n    this.api.getAuthorizedCityInfo().subscribe(res => res.map(r => this.arrayCity.push(r.cityName)))\r\n    console.log(this.arrayCity);\r\n    \r\n  }\r\n  onStateChange(addType){\r\n    if(addType && addType == 'communication'){\r\n      this.kycVerificationForm.get('communicationAddress.zipCode').setValue('');\r\n      this.kycVerificationForm.get('communicationAddress.city').setValue('');\r\n}\r\n    if( addType == 'permanent'){\r\n      this.kycVerificationForm.get('permanentAddress.zipCode').setValue('');\r\n      this.kycVerificationForm.get('permanentAddress.city').setValue('');\r\n}\r\n  }\r\n  onCityChange(addType){\r\n    if(addType && addType == 'communication'){\r\n      this.kycVerificationForm.get('communicationAddress.zipCode').setValue('');\r\n}\r\n    else if(addType && addType == 'permanent'){\r\n      this.kycVerificationForm.get('permanentAddress.zipCode').setValue('');\r\n}  }\r\n  getProfileImage(customerId: any, document_type: number) {\r\n    this.api.getCustomerDocuments(customerId, document_type).subscribe((data) => {\r\n      // console.log(\"data ::\", data);\r\n      if (data.length > 0) {\r\n        this.profileId = data[0].id;\r\n        this.imageURL = data[0].fileUrl;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteProfileImg() {\r\n    this.dialogService.doConfirmDialog('').subscribe((response) => {\r\n      if (response == \"Yes\") {\r\n        this.imageURL = \"not_available\";\r\n        this.profileFile.nativeElement.value = '';\r\n        let customerId = localStorage.getItem('customerId');\r\n        this.api.deleteCustomerDoc(customerId, this.profileId).subscribe((data) => {\r\n          this.snack.open('Profile Image Deleted Successfully', 'OK', {\r\n            duration: 4000,\r\n            verticalPosition: 'top',\r\n            horizontalPosition: 'right'\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public onUpload1(event, KycForm, index, side) {\r\n    var kyc = KycForm.documentsList[index].documentName;\r\n    this.selectedFiles = event.target.files[0];\r\n    if (side === 'backSide') {\r\n      this.fileNameCheckBack = this.selectedFiles.name;\r\n      var fileExtBack = this.fileNameCheckBack.split('.').pop();\r\n      if(fileExtBack.toLowerCase()  === \"jpeg\" ||fileExtBack.toLowerCase() === \"jpg\" ||fileExtBack.toLowerCase() === \"png\"){\r\n      this.fun2(event, this.selectedFiles, kyc, KycForm.documentType, side);\r\n    }\r\n    else{\r\n      this.snack.open(\"Please Upload Valid Aadhar Card!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      return;\r\n    }\r\n    }\r\n    if (side === 'frontSide') {\r\n      this.fileNameCheck = this.selectedFiles.name;\r\n      var fileExt = this.fileNameCheck.split('.').pop();\r\n      if(fileExt.toLowerCase()  === \"jpeg\" ||fileExt.toLowerCase() === \"jpg\" ||fileExt.toLowerCase() === \"png\"){\r\n      this.fun1(event, this.selectedFiles, kyc, KycForm.documentType, side);\r\n      }\r\n    else{\r\n        this.snack.open(\"Please Upload Valid Aadhar Card!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    // this.fun2(event, this.selectedFiles, kyc, KycForm.documentType, side);\r\n    this.fileName = this.selectedFiles.name;\r\n    KycForm.documentsList[index].documentType = this.fileName;\r\n    this.kycVerificationForm1.controls.documentsList[\"controls\"][\r\n      index\r\n    ].controls.documentType.setValue(this.fileName);\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    \r\n    reader.readAsText(this.selectedFiles);\r\n\r\n    reader.onload = (event2) => {\r\n      this.fileUrl = reader.result;\r\n    };\r\n  }\r\n\r\n  async doOCR(img, side, docName, event) {\r\n    const worker = createWorker({\r\n      //logger: m => console.log(m)\r\n    });\r\n\r\n    (async () => {\r\n      // console.log(\"before open\");\r\n      this.loader.open();\r\n      // console.log(\"after open\");\r\n      \r\n      await worker.load();\r\n      await worker.loadLanguage('eng');\r\n      await worker.initialize('eng');\r\n      const { data: { text } } = await worker.recognize(img);\r\n      // console.log(text);\r\n      \r\n      await worker.terminate();\r\n      this.loader.close();\r\n      const aadharDetails = this.aadharParser(text);\r\n      // console.log(\"this.passportDetails\", aadharDetails, aadharDetails.fullName.toLowerCase());\r\n\r\n      if (side === 'frontSide') {\r\n        this.namePancard = aadharDetails.fullName.toLowerCase();\r\n        this.dob = aadharDetails.dob;\r\n        this.panNumber = aadharDetails.adharNumber;\r\n        this.pancard = true;\r\n        this.imageOCR = this.url;\r\n        this.fileNameFront = this.selectedFiles.name;\r\n        var split = this.fileNameFront.split('.');\r\n        var filenameFrontSide = split[0];\r\n        var extension = split[1];\r\n        // if (filenameFrontSide.length > 11) {\r\n        //   this.snack.open(\"File name exceeds 11 characters.Trimming to 11 characters\", \"OK\", {\r\n        //     duration: 4000,\r\n        //     verticalPosition: \"top\",\r\n        //     horizontalPosition: \"right\",\r\n        //   });\r\n        //   filenameFrontSide = filenameFrontSide.substring(0, 11);\r\n        // }\r\n        this.filenameFrontSide = filenameFrontSide;\r\n        this.resultFrontSide = filenameFrontSide + '.' + extension;\r\n        // console.log(\"resultFrontSide\", this.resultFrontSide)\r\n        this.dataFront = {\r\n          customerId: this.refreshCustomerId,\r\n          documentName: docName,\r\n          documentType: \"6\",\r\n          fileType: event.type,\r\n          fileName: this.filenameFrontSide,\r\n          verificationType: \"KYC verification\",\r\n          documentSide: '1',\r\n          idNumber: this.panNumber,\r\n        };\r\n        // console.log(this.dataFront);\r\n      }\r\n      if (side === 'backSide') {\r\n\r\n        let address = text.split(\",\");\r\n        this.address = address[2] + \",\" + address[5] + \",\" + address[6] + \",\" + address[7];\r\n        this.fileNameBack = this.selectedFiles.name;\r\n        var split = this.fileNameBack.split('.');\r\n        var filenameBackSide = split[0];\r\n        var extension = split[1];\r\n        // if (filenameBackSide.length > 11) {\r\n        //   this.snack.open(\"File name exceeds 11 characters.Trimming to 11 characters\", \"OK\", {\r\n        //     duration: 4000,\r\n        //     verticalPosition: \"top\",\r\n        //     horizontalPosition: \"right\",\r\n        //   });\r\n        //   filenameBackSide = filenameBackSide.substring(0, 11);\r\n        // }\r\n        this.resultBackSide = filenameBackSide + '.' + extension;\r\n        this.filenameBackSide = filenameBackSide;\r\n        // console.log(\"resultFrontSide\", this.resultFrontSide)\r\n\r\n\r\n        this.imageOCRBack = this.urlback;\r\n        this.dataBack = {\r\n          customerId: this.refreshCustomerId,\r\n          documentName: docName,\r\n          documentType: \"6\",\r\n          fileType: event.type,\r\n          fileName: this.filenameBackSide,\r\n          verificationType: \"KYC verification\",\r\n          documentSide: '2',\r\n          idNumber: this.panNumber,\r\n        };\r\n      }\r\n      // console.log(\"this.namePancard ,this.dob ,this.panNumber ,this.url \", this.namePancard, this.dob, this.panNumber)\r\n      if (aadharDetails.adharNumber != null || aadharDetails.adharNumber != undefined) {\r\n        this.splitFunction(text, side);\r\n\r\n      }\r\n      else {\r\n        // console.log(\"wrong addhar to\");\r\n        this.snack.open(\"Please Upload Valid Aadhar Card!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n        this.resultBackSide = null;\r\n        this.resultFrontSide = null;\r\n      }\r\n\r\n    })();\r\n  }\r\n  aadharParser = (str) => {\r\n    try {\r\n      let adharNumber,\r\n        dob,\r\n        name,\r\n        nameLineIndex = 2;\r\n      const asciiStr = str.replace(/[^\\x00-\\x7F]/g, \"\").trim();\r\n      const lines = asciiStr.split(\"\\n\");\r\n\r\n      for (let i = lines.length - 1; i >= 0; i--) {\r\n        let count = 0,\r\n          startIndex = -1;\r\n        for (let j = 0; j < lines[i].length; j++) {\r\n          if (lines[i][j] >= \"0\" && lines[i][j] <= \"9\") {\r\n            count++;\r\n            if (startIndex === -1) startIndex = j;\r\n          }\r\n        }\r\n        if (count >= 12) {\r\n          adharNumber = lines[i].substr(startIndex, startIndex + 14);\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < lines.length; i++) {\r\n        [\"DOB\", \"Year of Birth\"].some((docString) => {\r\n          const dobIndex = lines[i].indexOf(docString);\r\n          if (dobIndex !== -1) {\r\n            dob = lines[i]\r\n              .trim()\r\n              .slice(dobIndex, lines[i].length)\r\n              .split(\" \")\r\n              .pop();\r\n            nameLineIndex = i - 1;\r\n            // console.log(dob);\r\n            let dobArray = dob.split(\"/\")\r\n            if (dobArray.length == 3) {\r\n              this.kycVerificationForm.controls.dateOfBirth.setValue(new Date(dob));\r\n            }\r\n            else {\r\n              Swal.fire({\r\n                text: \" Date of birth format of Uploaded document and application are different. Please select Date of birth manually!\",\r\n                width: 500,\r\n                confirmButtonText: \"OK\",\r\n                confirmButtonColor: '#456EFE'\r\n              })\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      const names = lines[nameLineIndex]\r\n        .split(\" \")\r\n        .filter((x) => x.length > 1)\r\n        .join(\" \");\r\n      // console.log(names);\r\n      return {\r\n        dob,\r\n        adharNumber,\r\n        fullName: names,\r\n      };\r\n    } catch (error) {\r\n      // console.log(error);\r\n      console.error(\"Unable to parse aadhar\");\r\n    }\r\n  };\r\n\r\n  onChangeGender(event){\r\n    let prefix = this.kycVerificationForm.value.prefix;\r\n    if ((prefix == \"Mr\" && event.value == \"Male\") || (prefix==\"Ms\" && event.value==\"Female\") || (prefix == \"Mrs\") && (event.value == \"Male\" || event.value == \"Female\") ) {\r\n      this.prefixFlag=true;\r\n    }  else {\r\n      this.prefixFlag=false;\r\n      this.snack.open(\"Prefix and Gender does not match!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangePrefix(event){\r\n    let prefix = this.kycVerificationForm.value.gender;\r\n    if(prefix!=''){\r\n     if ((event.value == \"Mr\" && prefix == \"Male\") || ((event.value == \"Ms\" || event.value == \"Mrs\") && prefix == \"Female\")) {\r\n        this.prefixFlag = true;\r\n      } else {\r\n        this.prefixFlag = false;\r\n        this.snack.open(\"Prefix and Gender does not match!\", \"OK\", {\r\n          duration: 4000,\r\n          verticalPosition: \"top\",\r\n          horizontalPosition: \"right\",\r\n        });\r\n      }\r\n  }\r\n  }\r\n\r\n  fun2(event, url, docName, docType, side) {\r\n    // this.image = event.target.result;\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    this.urlB = url;\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        this.urlback = event.target.result;\r\n        this.doOCR(this.urlback, side, docName, event);\r\n      };\r\n    }\r\n\r\n  }\r\n  fun1(event, url, docName, docType, side) {\r\n    // console.log(event);\r\n    // this.image = event.target.result;\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    this.urlF = url;\r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (event: any) => {\r\n        this.url = event.target.result;\r\n        this.doOCR(this.url, side, docName, event);\r\n      };\r\n    }\r\n\r\n  }\r\n  radioEvent(event) {\r\n    // console.log(\"radio button event\");\r\n    this.radioFlag = event.target.value;\r\n    this.openVerificationPopup(false,this.radioFlag == 'Auto'?true:false);\r\n  }\r\n  splitFunction(text, side) {\r\n\r\n    let text1 = text.replace(/[^\\x00-\\x7F]/g, \"\");\r\n    text.split(\":\");\r\n    // console.log(text.split(\":\")[2]);\r\n    let address = text.split(\",\");\r\n    // console.log(address);\r\n    // console.log(address.length);\r\n    this.countryAadhar = \"India\";\r\n    this.getStateName(this.countryAadhar, address);\r\n    this.residency = \"Citizen\";\r\n    if (side == \"backSide\") {\r\n      this.pinCode = address[address.length - 1].trim().split(\" \")[0];\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.zipCode\")\r\n        .patchValue(this.pinCode);\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.residenceType\")\r\n        .patchValue(this.residency);\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.country\")\r\n        .patchValue(this.countryAadhar);\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.address1\")\r\n        .patchValue(address[2] + address[5]);\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.address2\")\r\n        .patchValue(address[6]);\r\n      this.kycVerificationForm\r\n        .get(\"communicationAddress.state\")\r\n        .patchValue(address[7].trim());\r\n\r\n    }\r\n    if (side == \"frontSide\") {\r\n      const asciiStr = text.replace(/[^\\x00-\\x7F]/g, \"\").trim();\r\n      const lines = asciiStr.split(\"\\n\");\r\n      let nameLineIndex = 2;\r\n      const names = lines[nameLineIndex]\r\n        .split(\" \")\r\n        .filter((x) => x.length > 1)\r\n        .join(\" \");\r\n      // console.log(names);\r\n      if (\r\n        text.includes(\"Female\") ||\r\n        text.includes(\"female\")\r\n      ) {\r\n        this.kycVerificationForm.get(\"gender\").patchValue(\"Female\");\r\n        this.kycVerificationForm.get(\"prefix\").patchValue(\"Ms\");\r\n      }\r\n      else if (\r\n        text.includes(\"Male\") ||\r\n        text.includes(\"male\")\r\n      ) {\r\n        this.kycVerificationForm.get(\"gender\").patchValue(\"Male\");\r\n        this.kycVerificationForm.get(\"prefix\").patchValue(\"Mr\");\r\n      }\r\n      this.kycVerificationForm.get(\"nationality\").patchValue(\"Indian\");\r\n      // console.log(names)\r\n\r\n      let x = names.split(\" \");\r\n      // console.log(x[0], x[1]);\r\n      this.kycVerificationForm.get(\"firstName\").patchValue(x[0]);\r\n      this.kycVerificationForm.get(\"lastName\").patchValue(x[1]);\r\n    }\r\n  }\r\n  createItem() {\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n      documentName: [\"\"],\r\n      documentType: [\"\"],\r\n      fileData1: [\"\"],\r\n      docNum:[\"\"],\r\n      fileData2: [\"\"],\r\n    });\r\n    // this.changeValue2(this.kycVerificationForm.controls.documentsList['controls'][0].controls.documentName.,0)\r\n  }\r\n  getDoc() {\r\n    this.indexs = \"prefix\";\r\n    this.dropVariableDoc = \"document_type\";\r\n    this.docName = \"document_name\";\r\n    this.bioName = \"biometrics_Name\";\r\n    this.bioType = \"biometrics_Type\";\r\n    this.gender = \"gender\";\r\n    this.resi = \"residence\";\r\n    this.marr = \"maritial_Status\";\r\n    this.coun = \"country\";\r\n    this.nation = \"nationality\";\r\n    this.api.getDropDownValues(this.dropVariableDoc).subscribe((data) => {\r\n      this.Documents = data;\r\n    });\r\n    // this.api.getDropDownValues(this.docName).subscribe((resp) => {\r\n    //   this.DocumentsName = resp;\r\n    // });\r\n    this.DocumentsName = [\"Aadhar card\"];\r\n    this.api.getDropDownValues(this.bioName).subscribe((response) => {\r\n      this.biometrics_Name = response;\r\n    });\r\n    this.api.getDropDownValues(this.bioType).subscribe((responseData) => {\r\n      this.biometrics_Type = responseData;\r\n    });\r\n    // this.api.getDropDownValues(this.coun).subscribe((responseData) => {\r\n    //   this.countrys = responseData;\r\n    //   // console.log(\"this.countrys::\", this.countrys)\r\n    // });\r\n    this.api.getAllCountries().subscribe((data: any) => {\r\n      for(let i=0; i<data.length;i++){\r\n        if(data[i].authStatus==='A'){\r\n          console.log(data[i])\r\n          this.countrys.push(data[i].countryName);\r\n        }\r\n      }\r\n    });\r\n    this.getAllAuthCities();\r\n    this.api.getDropDownValues(this.gender).subscribe((responseDatas) => {\r\n      this.genders = responseDatas;\r\n    });\r\n    this.api.getDropDownValues(this.resi).subscribe((responses) => {\r\n      this.Residences = responses;\r\n    });\r\n    this.api.getDropDownValues(this.marr).subscribe((respo) => {\r\n      this.MaritalStatus = respo;\r\n    });\r\n    this.api.getDropDownValues(this.indexs).subscribe((re) => {\r\n      this.index = re;\r\n    });\r\n    this.api.getDropDownValues(this.nation).subscribe((datas) => {\r\n      this.nationality = datas;\r\n    });\r\n  }\r\n  get kyc() {\r\n    return this.kycVerificationForm.controls;\r\n  }\r\n  get comAddress() {\r\n    return this.kyc.communicationAddress as FormArray;\r\n  }\r\n  get permAddress() {\r\n    return this.kyc.permanentAddress as FormArray;\r\n  }\r\n  get sameAddress() {\r\n    return this.kycVerificationForm.get(\"isAddressSame\").value;\r\n  }\r\n\r\n  onChangeAddress(control, e): void {\r\n    if (\r\n      e.value == \"No\" &&\r\n      !this.kycVerificationForm.contains(\"permanentAddress\")\r\n    ) {\r\n      this.kycVerificationForm.addControl(\r\n        \"permanentAddress\",\r\n        this.permanentAddress\r\n      );\r\n      this.flexValue = '50';\r\n    } else {\r\n      this.kycVerificationForm.removeControl(\"permanentAddress\");\r\n      this.flexValue = '100';\r\n    }\r\n  }\r\n  onChangeCif(event){\r\n    if(event == ''){\r\n      this.resetData();\r\n    }\r\n    else{\r\n      this.autofillDetails()\r\n    }\r\n  }\r\n  onKeyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n    console.log(event.target.value);\r\n    clearTimeout(this.timer)\r\n    if (!event.target.value) {\r\n      this.listOfCustByCif = []\r\n    } else {\r\n      this.timer = setTimeout(() => {\r\n        this.appApiService.fetchByCif(event.target.value).subscribe((res: any) => { \r\n          console.log(res);\r\n          if (res) {\r\n            this.listOfCustByCif = res.customerInfoList\r\n          }\r\n        })\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  autofillDetails(editCif?) {\r\n    console.log(editCif);\r\n    this.cifNumber = this.kycVerificationForm.controls.cifNumber.value;\r\n    console.log(this.cifNumber)\r\n\r\n    if(editCif){\r\n      console.log(\"1st if\");\r\n      this.getAllCustomerDetails(editCif);\r\n    }\r\n\r\n    if (this.cifNumber) {\r\n      this.cifFetch = true;\r\n      console.log(\"2nd if\");\r\n      this.getAllCustomerDetails();\r\n    }\r\n  }\r\n\r\n  setCustVerificationValues(data) {\r\n    this.kycVerificationForm.patchValue(data.customerInfoList[0]);\r\n    if (data.customerInfoList[0].userAddress.length == 2) {\r\n      this.kycVerificationForm.addControl(\"permanentAddress\", this.permanentAddress);\r\n      this.kycVerificationForm.get(\"isAddressSame\").patchValue(this.array[1].name);\r\n      for (let i = 0; i < data.customerInfoList[0].userAddress.length; i++) {\r\n        if (data.customerInfoList[0].userAddress[i].addressType == \"Communication\") {\r\n          this.getStateName(data.customerInfoList[0].userAddress[i].country, '');\r\n          this.getPerStateName(data.customerInfoList[0].userAddress[i].country);\r\n          // this.getCityName(data.customerInfoList[0].userAddress[i].state,'');\r\n          this.kycVerificationForm.get(\"communicationAddress\").patchValue(data.customerInfoList[0].userAddress[i]);\r\n        }\r\n        if (data.customerInfoList[0].userAddress[i].addressType == \"Permanent\") {\r\n\r\n          this.getPerStateName(data.customerInfoList[0].userAddress[i].country);\r\n          // this.getPerCityName(data.customerInfoList[0].userAddress[i].state);\r\n          this.kycVerificationForm.get(\"permanentAddress\").patchValue(data.customerInfoList[0].userAddress[i]);\r\n        }\r\n      }\r\n    } else {\r\n      this.getStateName(data.customerInfoList[0].userAddress[0].country, '');\r\n      // this.getCityName(data.customerInfoList[0].userAddress[0].state,'');\r\n      console.log(\"inside communication::\", data.customerInfoList[0].userAddress[0].state)\r\n      this.kycVerificationForm.get(\"isAddressSame\").patchValue(this.array[0].name);\r\n      this.kycVerificationForm.get(\"communicationAddress\").patchValue(data.customerInfoList[0].userAddress[0]);\r\n    }\r\n  }\r\n\r\n\r\n  getOtpMobile(email) {\r\n    this.otpmodel.source = \"customer\";\r\n    this.otpmodel.source_key = \"mobile\";\r\n    this.otpmodel.source_value = email.phoneNumber;\r\n\r\n    if(this.verify == 'verify'){ \r\n      this.api.getOtp(this.otpmodel).subscribe((resp) => {\r\n        // this.otpValidate = resp.data.otpVal.sourceValue;\r\n        // console.log(this.otpValidate);\r\n        // localStorage.setItem(this.otpValidate,'otpValidate')\r\n      });\r\n      this.openDialog1(email.phoneNumber);\r\n      this.mobileVerified = email.phoneNumber;\r\n    }\r\n  }\r\n\r\n  openDialog1(phoneNUmber) {\r\n    \r\n    const dialogRef = this.dialog.open(FingerprintAuthenticationComponent, {\r\n      data: { number: phoneNUmber, type: \"Mobile Number\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => {\r\n      console.log(submit);\r\n      \r\n     });\r\n    \r\n  }\r\n  // public onFileChanged(event) {\r\n  //   this.selectedFiles = event.target.files[0];\r\n  //   let reader = new FileReader();\r\n  //   reader.readAsDataURL(event.target.files[0]);\r\n\r\n  //   reader.onload = (event2) => {\r\n  //     this.imgUrl = reader.result;\r\n\r\n  //     this.fun(event.target.files[0], this.selectedFiles);\r\n  //   };\r\n  // }\r\n  public onFileChanged(event) {\r\n    this.profilePicture = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (event2) => {\r\n      // this.imgUrl = reader.result;\r\n      //this.fun(event.target.files[0], this.profilePicture);\r\n      //  this.image = reader.result;\r\n      this.imageURL = reader.result;\r\n      // console.log(\"file \", reader);\r\n    };\r\n    // console.log(this.profilePicture);\r\n  }\r\n\r\n  fun(event, url) {\r\n    const uploadData = new FormData();\r\n    const data = {\r\n      customerId: this.customerId,\r\n      documentName: \"Profile Image\",\r\n      documentType: \"1\",\r\n      fileType: event.type,\r\n      fileName: event.name,\r\n      verificationType: \"KYC verification\",\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n    this.api.upload(uploadData).subscribe((res) => {\r\n      // console.log(res);\r\n    });\r\n  }\r\n\r\n  tabClick(event: MatTabChangeEvent) {\r\n    const tab = event.tab.textLabel;\r\n\r\n    if (tab === \"Documents Upload\") {\r\n      this.router.navigateByUrl(\"/others/documents\");\r\n    }\r\n    if (tab === \"verification\") {\r\n      this.router.navigateByUrl(\"/others/verification\");\r\n    }\r\n    if (tab === \"Basic Information\") {\r\n      this.router.navigateByUrl(\"/others/kyc\");\r\n    }\r\n  }\r\n\r\n  onNext() {\r\n    let phoneNumber =this.kycVerificationForm.value.phoneNumber;\r\n    if(!this.cifFetch){\r\n      this.api.fetchCustomerDetails(phoneNumber).subscribe((res: any) => {\r\n        if(res!=null){\r\n          this.dialogService.phoneNumberDetailsDialogue(res).subscribe((response) => {\r\n            if(response == \"Yes\"){\r\n              this.nextEnableFunction();\r\n            } \r\n          });\r\n        } else {\r\n          this.nextEnableFunction();\r\n        }\r\n       \r\n      });\r\n    } else {  \r\n      this.nextEnableFunction();\r\n    }\r\n  }\r\n  nextEnableFunction() {\r\n\r\n    // console.log(this.dataBack)\r\n    // console.log(this.urlB)\r\n    this.api.setOCR({\r\n      namePancard: this.namePancard,\r\n      dob: this.dob,\r\n      panNumber: this.panNumber,\r\n      imageOCR: this.url,\r\n      imageOCRBack: this.urlback,\r\n      address: this.address\r\n\r\n    })\r\n    // console.log(\"Next button\");\r\n    const dateSendingToServer = new DatePipe('en-US').transform(this.kycVerificationForm.value.dateOfBirth, 'yyyy-MMM-dd')\r\n\r\n    if (this.kycVerificationForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let userAddress: any[] = [];\r\n    userAddress.push(this.kycVerificationForm.value.communicationAddress);\r\n    if (this.kycVerificationForm.value.permanentAddress) {\r\n      userAddress.push(this.kycVerificationForm.value.permanentAddress);\r\n    }\r\n\r\n    let payload = {\r\n      cifNumber: this.kycVerificationForm.value.cifNumber,\r\n      prefix: this.kycVerificationForm.value.prefix,\r\n      primaryEmailAdress: this.kycVerificationForm.value.primaryEmailAdress,\r\n      phoneNumber: this.kycVerificationForm.value.phoneNumber,\r\n      firstName: this.kycVerificationForm.value.firstName,\r\n      lastName: this.kycVerificationForm.value.lastName,\r\n      middleName: this.kycVerificationForm.value.middleName,\r\n      customer_id: this.kycVerificationForm.value.customer_id,\r\n      gender: this.kycVerificationForm.value.gender,\r\n      dateOfBirth: dateSendingToServer,\r\n      maritalStatus: this.kycVerificationForm.value.maritalStatus,\r\n      nationality: this.kycVerificationForm.value.nationality,\r\n      userAddress: userAddress,\r\n      verificationType: 'KYC',\r\n      kycSubmit: false\r\n\r\n    };\r\n    console.log(payload, \" :: Payload\");\r\n    console.log(this.profilePicture);\r\n    this.api.kycScreenBasicinfo(payload).subscribe((resp) => {\r\n      console.log(resp, \"Next response\");\r\n      console.log(\"resp after saving \", resp)\r\n      this.id = resp.customerId\r\n      if(this.uploadDone){\r\n        if (this.dataFront != undefined) {\r\n          this.uploadFrontSide(this.id);\r\n          this.uploadDone=false;\r\n        }\r\n        if (this.dataBack != undefined) {\r\n          this.uploadBackSide(this.id);\r\n          this.uploadDone=false;\r\n        }\r\n      }\r\n      \r\n      this.ls.setItem(\"cardCustomer\",resp.firstName +' ' +resp.lastName );\r\n        \r\n      console.log(resp.firstName, '', resp.lastName);\r\n      this.name = resp.firstName + ' ' + resp.lastName;\r\n      console.log(this.name)\r\n      \r\n      this.api.setName({\r\n        name: this.name,\r\n        customerId:resp.customerId,\r\n        cifNumber:resp.cifNumber\r\n      });\r\n      this.snack.open(\"Basic Information Details Saved!\", \"OK\", {\r\n        duration: 4000,\r\n        verticalPosition: \"top\",\r\n        horizontalPosition: \"right\",\r\n      });\r\n      this.basicInfoSavedAlready = true;\r\n      // this.kycVerificationForm.reset();\r\n      // \r\n     \r\n      sessionStorage.setItem('customer_id', resp.customerId);\r\n      localStorage.setItem('customer_id', resp.customerId);\r\n      sessionStorage.setItem('kyc_reference', resp.kycReference);\r\n      localStorage.setItem('kyc_reference', resp.kycReference);\r\n      this.kycRef(resp.kycReference);\r\n\r\n\r\n\r\n      console.log(\"resp.customerId::\", resp.customerId)\r\n      console.log(\"(this.profilePicture::\", this.profilePicture)\r\n      if (this.profilePicture) {\r\n        // console.log(this.profilePicture)\r\n        let profileUpload: any = {};\r\n        profileUpload.documentName = \"Profile\";\r\n        profileUpload.documentType = 1;\r\n        profileUpload.fileType = this.profilePicture.type;\r\n        profileUpload.fileName = this.profilePicture.name;\r\n        profileUpload.customerId = resp.customerId;\r\n        console.log(profileUpload);\r\n        const uploadData = new FormData();\r\n        uploadData.append('data', JSON.stringify(profileUpload));\r\n        uploadData.append('file', this.profilePicture);\r\n        this.api.uploadDocument(uploadData).subscribe((response) => {\r\n          console.log(response);\r\n          this.next();\r\n        }, err => {\r\n          console.log(\"error\", err)\r\n        }\r\n        );\r\n      }\r\n      \r\n      this.next();\r\n\r\n\r\n    });\r\n  \r\n  }\r\n  uploadBackSide(id) {\r\n\r\n    if (this.dataBack.documentName != undefined) {\r\n      this.dataBack.customerId = id;\r\n      console.log(this.dataBack)\r\n      console.log(this.urlB)\r\n      const uploadData = new FormData();\r\n      uploadData.append(\"data\", JSON.stringify(this.dataBack));\r\n      uploadData.append(\"file\", this.urlB);\r\n      this.api.upload(uploadData).subscribe(\r\n        (res: any) => {\r\n\r\n          console.log(\"resp after uploading file\", res)\r\n          // this.kycVerificationForm1.get(\"upload\").patchValue(true);\r\n          if (res.body) {\r\n            this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          if (error.status == 201) {\r\n            console.log(\"in err\");\r\n\r\n            this.backSideUploaded = true;\r\n\r\n\r\n          }\r\n          this.kycVerificationForm1.get(\"upload\").patchValue(true);\r\n          this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n  uploadFrontSide(id) {\r\n    console.log(this.dataFront)\r\n    if (this.dataFront.documentName != undefined) {\r\n      this.dataFront.customerId = id;\r\n      console.log(this.dataFront)\r\n      console.log(this.urlF)\r\n      const uploadData = new FormData();\r\n      uploadData.append(\"data\", JSON.stringify(this.dataFront));\r\n      uploadData.append(\"file\", this.urlF);\r\n      this.api.upload(uploadData).subscribe(\r\n        (res: any) => {\r\n\r\n          console.log(\"resp after uploading file\", res)\r\n          // this.kycVerificationForm1.get(\"upload\").patchValue(true);\r\n          if (res.body) {\r\n            this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n              duration: 4000,\r\n              verticalPosition: \"top\",\r\n              horizontalPosition: \"right\",\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          if (error.status == 201) {\r\n            console.log(\"in err\");\r\n\r\n            this.frontSideUploaded = true;\r\n\r\n\r\n          }\r\n          this.kycVerificationForm1.get(\"upload\").patchValue(true);\r\n          this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n  kycRef(kycReference: any) {\r\n    this.api.setKycRef({\r\n      kycReference: kycReference,\r\n    });\r\n  }\r\n  keyPressAlphanumeric(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/^[a-zA-Z0-9_ ]*$/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  next() {\r\n    // this.kycVerificationForm.reset();\r\n    this.api.setIndex({\r\n      index: 1,\r\n    });\r\n    this.api.setFinishFlag({\r\n      finishFlag: false,\r\n    });\r\n    let customerId = localStorage.getItem('customer_id');\r\n    console.log(\"custId::\", localStorage.getItem('customer_id'))\r\n    localStorage.setItem('page_id', '1');\r\n    this.shareDataService.shareCustomerId(customerId);\r\n  }\r\n\r\n  resetData(){\r\n    localStorage.removeItem('customer_id');\r\n    localStorage.removeItem('currentKycTabIndex');\r\n    this.kycVerificationForm.reset();\r\n    this.imageURL = \"not_available\";\r\n  }\r\n\r\n\r\n  getAllCustomerDetails(cifNumber?) {\r\n    cifNumber? this.cifNumber = cifNumber : '';\r\n    this.loading = true;\r\n    this.image = \"\",\r\n      this.imgUrl = \"\"\r\n    console.log(\"CIF---------\", event);\r\n    // let cifNumber = this.kycVerificationForm.value.cifNumber;\r\n    // console.log(\"CIF\",cifNumber);\r\n    this.api.gettingCustomerDetails(this.cifNumber).subscribe((resp: any) => {\r\n      this.loading = false;\r\n      console.log(\"All Customer Details\", resp);\r\n\r\n\r\n      this.api.sendKycDataFetchedInfo('DATA FETCH');\r\n      if (resp != null || resp != undefined) {\r\n        this.customerInformation = resp.customerInfoList[0];\r\n\r\n        if (resp.customerInfoList[0].middleName === undefined || resp.customerInfoList[0].middleName === null) {\r\n          resp.customerInfoList[0].middleName = null;\r\n        }\r\n        resp.customerInfoList[0].dateOfBirth = new Date(resp.customerInfoList[0].dateOfBirth);\r\n        console.log(resp.customerInfoList[0].customerId);\r\n        localStorage.setItem(\"customerId\", resp.customerInfoList[0].customerId);\r\n        sessionStorage.setItem('cust_status', resp.customerInfoList[0].customerAdditionalInfo.kycStatus);\r\n        // localStorage.setItem(\"customerStatus\", resp.customerInfoList[0].customerAdditionalInfo.kycStatus);\r\n        // this.api.getImage(resp.customerInfoList[0].customerId).subscribe((data: any) => {\r\n        //   console.log(\"data:\", data);\r\n        //   let profileImage = data.profileImage;\r\n        //   this.cdr.markForCheck();\r\n        //   if (profileImage) {\r\n        //     this.profileImageExist = true;\r\n        //   }\r\n        //   let objectURL = 'data:image/jpeg;base64,' + profileImage.fileData;\r\n\r\n        //   this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL)\r\n        //   this.cdr.markForCheck();\r\n\r\n        // })\r\n        this.getProfileImage(resp.customerInfoList[0].customerId, 1);\r\n      }\r\n      else {\r\n        this.snack.open('Invalid CIF Number', 'OK', {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.resetData();\r\n        // this.accountForm.get('cifNumber').patchValue(\"\");\r\n        return;\r\n      }\r\n      this.verificationInfo = resp;\r\n\r\n      if (resp.customerInfoList[0].custStatus == \"REJECTED\") {\r\n        this.snack.open(\"Data is rejected for this CIF Number :\" + this.cifNumber, \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.kycVerificationForm.reset();\r\n        this.ngOnInit();\r\n        console.log(\"err:\", resp)\r\n        return;\r\n      }\r\n\r\n      if (resp == null) {\r\n        this.snack.open(\"Data is not found for CIF Number :\" + this.cifNumber, \"\", {\r\n          duration: 4000,\r\n          verticalPosition: 'top',\r\n          horizontalPosition: 'right'\r\n        });\r\n        this.kycVerificationForm.reset();\r\n        this.ngOnInit();\r\n        console.log(\"err:\", resp)\r\n        return;\r\n      }\r\n      if (resp && resp[0]) {\r\n        console.log(\"All Customer Details\", resp.customerInfoList[0].customerId);\r\n        sessionStorage.setItem('customer_id', resp[0].customerId);\r\n        \r\n      }\r\n      if(resp){\r\n        console.log(\"Remove\");\r\n        this.ls.removeItem('EDIT-CIFNUMBER');\r\n      }\r\n\r\n      this.setCustVerificationValues(resp);\r\n\r\n    }, err => {\r\n    });\r\n    // this.ls.removeItem('EDIT-CIFNUMBER');\r\n  }\r\n\r\n\r\n  convertDate(value) {\r\n    let date = moment(value).format(\"YYYY-MM-DD\"); // ISO 8601 format\r\n    // let date = moment(value).format('YYYY-MMM-DD');\r\n\r\n    if (date) return date;\r\n  }\r\n\r\n  getOtp(email) {\r\n    this.otpmodel.source = \"customer\";\r\n    this.otpmodel.source_key = \"email\";\r\n    this.otpmodel.source_value = email.primaryEmailAdress;\r\n    console.log(this.otpmodel.source_value);\r\n  \r\n    if(this.emailVerify == 'verify'){\r\n    this.api.getOtp(this.otpmodel).subscribe((resp) => { });\r\n    this.openDialogEmail(email.primaryEmailAdress);\r\n    this.emailVerified = email.primaryEmailAdress;\r\n    }\r\n  }\r\n  _keyPress(event: any) {\r\n    console.log(\"key\",event);\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    console.log(inputChar);\r\n    \r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if(this.verify == 'verified'){\r\n      if(event != this.mobileVerified){\r\n        this.verify = 'verify';\r\n      }\r\n      else{\r\n        this.verify = 'verified';\r\n      }\r\n    }\r\n  }\r\n\r\n  _keyPress1(event: any) {\r\n    if(this.emailVerify == 'verified'){\r\n      if(event != this.emailVerified){\r\n        this.emailVerify = 'verify';\r\n      }\r\n      else{\r\n        this.emailVerify = 'verified';\r\n      }\r\n    }\r\n  }\r\n\r\n  openDialogEmail(email) {\r\n    const dialogRef = this.dialog.open(FingerprintAuthenticationComponent, {\r\n      data: { number: email, type: \"email id\" },\r\n      disableClose: true,\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => { \r\n      console.log(submit);\r\n      \r\n    });\r\n  }\r\n\r\n  toMakeButton() {\r\n    document.getElementById(\"fileId\").click();\r\n  }\r\n\r\n  assignVerify(resp: any) {\r\n    if (resp.type == 'mobile') {\r\n      this.verify = 'verified'\r\n    }\r\n    if (resp.type == 'email') {\r\n      this.emailVerify = 'verified'\r\n    }\r\n  }\r\n\r\n  isAllSameDigit(event,zipIndex) {\r\n   this.zipIndex=zipIndex;\r\n    let count = 0, number = event.target.value;\r\n    if (number != '') {\r\n      for (var i = 0; i < number.length; i++) {\r\n        if (0 == number[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == number.length) {\r\n        console.log('if loop')\r\n        this.isAllSameDigitVal = true;\r\n      }\r\n      else {\r\n        this.isAllSameDigitVal = false;\r\n      }\r\n    }else{\r\n      this.isAllSameDigitVal = false;\r\n    }\r\n  }\r\n\r\n  getCityandStateByZipcode(countryName, zipcode,addType?) {\r\n    if(!countryName){\r\n      this.snack.open('Please Select Country','Ok',{\r\n        duration:1000,\r\n        horizontalPosition:\"right\",\r\n        verticalPosition:'top'\r\n      })\r\n      if(addType == 'communication'){\r\n        this.kycVerificationForm.get('communicationAddress.zipCode').setValue('');\r\n        }\r\n        else{\r\n          this.kycVerificationForm.get('permanentAddress.zipCode').setValue('');\r\n        }      \r\n        return;\r\n    }\r\n    if (zipcode.length >= 6) {\r\n      this.api.fetchStateCityByZipcode(countryName, zipcode).subscribe((res: any) => {\r\n        if(res){\r\n          if(addType == 'communication'){\r\n          this.kycVerificationForm.get('communicationAddress.state').setValue(res.stateName);\r\n          this.kycVerificationForm.get('communicationAddress.city').setValue(res.cityName);\r\n          }else{\r\n            this.kycVerificationForm.get('permanentAddress.state').setValue(res.stateName);\r\n            this.kycVerificationForm.get('permanentAddress.city').setValue(res.cityName);\r\n          }\r\n        }\r\n        else{\r\n          this.snack.open(\"Entered Zipcode does not exists\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\nexport class DocData {\r\n  documentName: string;\r\n  documentType: string;\r\n}\r\nexport class Upload {\r\n  data: {\r\n    customerId: string;\r\n    documentName: string;\r\n    documentType: string;\r\n    fileType: string;\r\n    fileName: string;\r\n    verificationType: string;\r\n\r\n  };\r\n\r\n  file: String;\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatTabChangeEvent } from \"@angular/material/tabs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ApiService } from \"app/shared/services/api.service\";\r\n\r\nimport { CutomerFingerPrintComponent } from \"../cutomer-finger-print/cutomer-finger-print.component\";\r\n\r\nimport { IrisScan2Component } from \"../iris-scan2/iris-scan2.component\";\r\n\r\nimport { KycEsignComponent } from \"../kyc-esign/kyc-esign.component\";\r\nimport { KycIrisScanComponent } from \"../kyc-iris-scan/kyc-iris-scan.component\";\r\nimport { KycFaceScanComponent } from \"../kyc-face-scan/kyc-face-scan.component\";\r\nimport { KycVerificationMethodComponent } from \"../kyc-verification-method/kyc-verification-method.component\";\r\nimport { VerificationCompletedComponent } from \"../verification-completed/verification-completed.component\";\r\n\r\n// import { ApiService } from 'app/api.service';\r\nimport { Observable } from \"rxjs\";\r\nimport { FingerprintAuthenticationComponent } from \"../fingerprint-authentication/fingerprint-authentication.component\";\r\nimport {\r\n  DocData,\r\n  Upload,\r\n} from \"../kyc-verification/kyc-verification.component\";\r\nimport { API_URL, FingerPrintCaptureService } from \"app/shared/services/finger-print-capture.service\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { DataService } from \"app/shared/services/data.service\";\r\nimport { LocalStoreService } from \"app/shared/services/local-store.service\";\r\nimport { duration } from \"moment\";\r\n\r\n@Component({\r\n  selector: \"app-kyc-basic-information\",\r\n  templateUrl: \"./kyc-basic-information.component.html\",\r\n  styleUrls: [\"./kyc-basic-information.component.scss\"],\r\n})\r\nexport class KycBasicInformationComponent implements OnInit, OnChanges {\r\n  @Input() verificationInfo: any;\r\n  @Output() settingallCustInfo: EventEmitter<object> = new EventEmitter();\r\n\r\n  @ViewChild(\"fileInput\") el: ElementRef;\r\n  imageUrl: any = \"https://i.ibb.co/fDWsn3G/buck.jpg\";\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = false;\r\n  a: any;\r\n  selectedFiles: any;\r\n  fileToUpload: any;\r\n  docData: Array<DocData> = [];\r\n  // imageUrl: any;\r\n  kycVerificationForm: FormGroup;\r\n  adressForm: FormGroup;\r\n  billingForm: FormGroup;\r\n  arrayForm: FormGroup;\r\n  firstName = \"jaya\";\r\n  b: any;\r\n  otpmodel = new OtpModel();\r\n\r\n  url: string | ArrayBuffer;\r\n  imgUrl: string | ArrayBuffer;\r\n  fileUrl: string | ArrayBuffer;\r\n  dropVariableDoc: string;\r\n  updateUserInfo: any;\r\n  billing: boolean = true;\r\n  docName: string;\r\n  bioName: string;\r\n  bioType: string;\r\n  coun: string;\r\n  gender: string;\r\n  resi: string;\r\n  marr: string;\r\n  indexs: string;\r\n  nation: string;\r\n  kycRef: string;\r\n  fileName: any;\r\n  document_type: string[] = [\"4\", \"5\", \"11\", \"12\"];\r\n  additionalDocs: any = [];\r\n  enableButton: boolean = false;\r\n  // Refresh customer id issue\r\n  refreshCustomerId: any;\r\n  documentsList: any;\r\n  selectedOptions2: any[] = [];\r\n  biometricList: any;\r\n  disableAddAndDelete: boolean = false;\r\n  disableFinish: boolean = false;\r\n  biometricData: any;\r\n  diaplayBioCard: boolean = false;\r\n  irisScan: boolean = false;\r\n  eScan: boolean = false;\r\n  faceScan: boolean;\r\n  biometricScan: boolean = false;\r\n  imageURLIrish: any = 'not_available';\r\n  imageURLBioScan: any = 'not_available';\r\n  imageURLFace: any = 'not_available';\r\n  dataFetched: boolean=false;\r\n  dataFetchedValue: string;\r\n  count: number;\r\n  fingerprintData: any;\r\n  irisData: any;\r\n  faceData: any;\r\n  fingerPrintId: any;\r\n  irisId: any;\r\n  faceId: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private api: ApiService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private snack: MatSnackBar,\r\n    private fb: FormBuilder,\r\n    private fingerPrintService: FingerPrintCaptureService,\r\n    private shareDataService: DataService,\r\n    private ls: LocalStoreService,\r\n    private apiService: ApiService\r\n  ) { }\r\n  index: string[];\r\n  biometrics_Name: string[];\r\n  biometrics_Type: string[];\r\n  genders: string[];\r\n  nationality: string[];\r\n  countrys: string[];\r\n  Residences: string[];\r\n  Documents: string[];\r\n  DocumentsName: string[];\r\n  MarritialStatus: string[];\r\n  uplaod = new Upload();\r\n  customerId: string = null;\r\n  disableNext: boolean = true;\r\n\r\n\r\n  ngOnInit(): void {\r\n    // this.kycRef = sessionStorage.getItem(\"kyc_reference\");\r\n    this.api.getKycRef().subscribe(resp => {\r\n      this.assignKyc(resp.kycReference);\r\n    })\r\n    this.api.getNewUserInfo().subscribe((info) => {\r\n      this.updateUserInfo = info;\r\n    });\r\n    this.api.getKycDataFetchedInfo()\r\n      .subscribe(data => {\r\n        console.log('data fetch resp :: ',data);\r\n        this.kycVerificationForm = this.fb.group({\r\n         // documentsList: this.fb.array([this.createItem()]),\r\n          // biometricList: (data=== 'DATA FETCH')?this.fb.array([]):this.fb.array([this.createBioItem()]),\r\n          biometricList: this.fb.array([]),\r\n          id: [\"\"],\r\n        //  upload: [\"\", [Validators.required]],\r\n        });\r\n\r\n        this.kycVerificationForm.valueChanges.subscribe(data => {\r\n          if(data=== 'DATA FETCH'){\r\n            this.kycVerificationForm.get('biometricList').setValue(this.fb.array([]));\r\n          }\r\n          else{\r\n            if(data.biometricList.length < 1){\r\n              this.kycVerificationForm.get('biometricList').setValue(this.fb.array([this.createBioItem()]));\r\n            }\r\n          }\r\n        });\r\n\r\n        if(data === 'DATA FETCH'){\r\n          this.dataFetched=true;\r\n          this.dataFetchedValue=data;\r\n        }else{\r\n          this.dataFetched=false;\r\n          // this.loadBioDefault(1);\r\n        }\r\n      }\r\n\r\n      )\r\n      console.log(this.kycVerificationForm);    \r\n    this.arrayForm = this.fb.group({\r\n      rows: this.fb.array([]),\r\n    });\r\n    this.initGroup();\r\n    this.getDoc();\r\n    this.disableNext = true;\r\n    this.disableFinish = true;\r\n\r\n    this.shareDataService.getCustomerId.subscribe(cId => {\r\n      if (cId != null) {\r\n        this.refreshCustomerId = cId;\r\n        this.getAdditionalDocuments(cId);\r\n      }\r\n    })\r\n    this.customerId = this.ls.getItem('customer_id');\r\n    this.kycVerificationForm.valueChanges.subscribe(data => {\r\n      console.log('value change data:: ', data)\r\n\r\n      if (data.biometricList.length > 0) {\r\n        this.disableFinish = true;\r\n        this.selectedOptions2 = [];\r\n        data.biometricList.forEach((element, index) => {\r\n          console.log('index :: ', index);\r\n          // if(element.id === '' || element.id === \"\"){\r\n          //   data.biometricList.splice(0,1);\r\n          // }\r\n          this.selectedOptions2.push(element.bioDocumentType);\r\n          if (index == 2) {\r\n            this.disableAddAndDelete = true;\r\n          } else {\r\n            this.disableAddAndDelete = false;\r\n          }\r\n        });\r\n      }\r\n     \r\n    })\r\n    // this.loadBioDefault(1);\r\n\r\n    console.log('this.kycVerificationForm :: ', this.kycVerificationForm)\r\n    localStorage.getItem('customer_id')? this.getAdditionalDocuments(localStorage.getItem('customer_id')) : '';\r\n\r\n  }\r\n\r\n  assignKyc(kycReference) {\r\n    this.kycRef = kycReference;\r\n  }\r\n\r\n  createItem() {\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n      documentName: [\"\", Validators.required],\r\n      documentType: [\"\", Validators.required],\r\n\r\n    });\r\n    // this.changeValue2(this.kycVerificationForm.controls.documentsList['controls'][0].controls.documentName.,0)\r\n\r\n  }\r\n\r\n  createBioItem() {\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n      bioDocumentType: [\"\", Validators.required],\r\n      fileUrl: [\"\"]\r\n    });\r\n\r\n  }\r\n\r\n  createBioItemData(data: any, type: any, fileUrl): any {\r\n    console.log('on load create bio data :: ', data, type)\r\n    return this.fb.group({\r\n      id: data,\r\n      bioDocumentType: type,\r\n      fileUrl: fileUrl\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) { }\r\n  autofillDetails() {\r\n\r\n    this.settingallCustInfo.emit({\r\n      cifNumber: this.kycVerificationForm.controls.cifNumber.value,\r\n    });\r\n  }\r\n  getAdditionalDocuments(customerId: string) {\r\n    customerId? this.customerId = customerId : '';\r\n    for (const key in this.document_type) {\r\n      var bioName;\r\n      if (Object.prototype.hasOwnProperty.call(this.document_type, key)) {\r\n        const element = this.document_type[key];\r\n        console.log('bio doc :: ', element, key, customerId)\r\n        this.api.getCustomerDocuments(customerId, element).subscribe((data) => {\r\n\r\n          if (data != null) {\r\n            this.disableFinish=false;\r\n            console.log(\"data:: \", data)\r\n            if (data[0].documentType == 4) {\r\n              bioName = 'Fingerprint Scan';\r\n              this.imageURLBioScan = data[0].fileUrl;\r\n              this.biometricScan = true;\r\n              this.fingerPrintId = data[0].id;\r\n            }\r\n            if (data[0].documentType == 11) {\r\n              bioName = 'Irish Scan';\r\n              this.imageURLIrish = data[0].fileUrl;\r\n              this.irisScan = true;\r\n              this.irisId = data[0].id;              \r\n            }\r\n\r\n            if (data[0].documentType == 12) {\r\n              bioName = 'Face Scan';\r\n              this.imageURLFace = data[0].fileUrl;\r\n              this.faceScan = true;\r\n              this.faceId = data[0].id;\r\n            }\r\n            if (bioName != null && bioName != undefined) {\r\n              this.bioFetchDataBuild(data[0], bioName);\r\n              console.log('kyc :: ', this.kycVerificationForm);\r\n            }\r\n\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n  bioFetchDataBuild(data: any, bioName: any) {\r\n    console.log('in build data')\r\n    this.addBioDocsData(data.id, bioName, data.fileUrl);\r\n    console.log('kyc :: ', this.kycVerificationForm);\r\n  }\r\n\r\n  deleteAdditionalDoc(report, index) {\r\n    this.additionalDocs = this.kycVerificationForm.get('documentsList') as FormArray;\r\n    console.log(this.additionalDocs)\r\n    this.additionalDocs.removeAt(index);\r\n    this.selectedOptions2.forEach((element, index) => {\r\n      if (element == report.documentType) {\r\n        this.selectedOptions2.splice(index, 1);\r\n      }\r\n    });\r\n    if (report.id != null && report.id != '') {\r\n\r\n      console.log(\"report.id::\" + report.id)\r\n      this.api.deleteCustomerDoc(this.customerId, report.id).subscribe((data) => {\r\n      });\r\n    }\r\n    this.snack.open('Document Deleted Successfully', 'OK', {\r\n      duration: 4000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    });\r\n    console.log(this.kycVerificationForm.get('documentsList') as FormArray);\r\n    console.log(this.kycVerificationForm.controls);\r\n    if (this.documentsList.controls.length) {\r\n      this.enableButton = true;\r\n    }\r\n    else {\r\n      this.enableButton = false;\r\n    }\r\n  }\r\n\r\n  // deleteBioMetric(report, index) {\r\n  //   const deleteRecord = this.kycVerificationForm.get('biometricList') as FormArray;\r\n  //   console.log(report, deleteRecord, index);\r\n  //   deleteRecord.removeAt(index);\r\n  //   // this.imageURLIrish = '';\r\n  //   // this.imageURLFace = '';\r\n  //   // this.imageURLBioScan = '';\r\n  //   this.api.deleteCustomerDoc(this.refreshCustomerId, report.id).subscribe((data) => {\r\n  //     console.log(\"data after delete\", this.refreshCustomerId);\r\n  //     console.log(\"data\", data);\r\n  //   });\r\n  // }\r\n  deleteBioMetric(verificationType){\r\n    if(verificationType == 'fingerprint' && this.imageURLBioScan != 'not_available'){\r\n      this.api.deleteCustomerDoc(this.customerId, this.fingerPrintId).subscribe((res) => {\r\n      this.imageURLBioScan = 'not_available',\r\n      this.fingerPrintId = '';\r\n      this.snack.open('Fingerprint Deleted Successfully!','Ok',{\r\n        duration:3000,\r\n        verticalPosition:'top',\r\n        horizontalPosition:\"right\"\r\n      })\r\n        },err => {\r\n          console.log(err);\r\n          \r\n          this.snack.open('Unable to delete Fingerprint!','Ok',{\r\n            duration:3000,\r\n            horizontalPosition:\"right\",\r\n            verticalPosition:\"top\"\r\n          })\r\n        });\r\n      }\r\n    else if(verificationType == 'iris'&& this.imageURLBioScan != 'not_available'){\r\n      this.api.deleteCustomerDoc(this.customerId, this.irisId).subscribe((res) => {\r\n        this.imageURLIrish = 'not_available'\r\n        this.irisId = ''\r\n        this.snack.open('Iris Deleted Successfully!','Ok',{\r\n          duration:3000,\r\n          verticalPosition:'top',\r\n          horizontalPosition:\"right\"\r\n        })\r\n      },err => {\r\n        this.snack.open('Unable to delete Iris!','Ok',{\r\n          duration:3000,\r\n          horizontalPosition:\"right\",\r\n          verticalPosition:\"top\"\r\n        })\r\n      });\r\n    }\r\n      else{\r\n        if(this.imageURLFace == 'not_available'){\r\n             return;\r\n        }\r\n        this.api.deleteCustomerDoc(this.customerId, this.faceId).subscribe((res) => {\r\n          this.imageURLFace = 'not_available';\r\n          this.faceId = '';\r\n          this.snack.open('Face Deleted Successfully!','Ok',{\r\n            duration:3000,\r\n            verticalPosition:'top',\r\n            horizontalPosition:\"right\"\r\n          })\r\n        },err => {\r\n          this.snack.open('Unable to delete Face!','Ok',{\r\n            duration:3000,\r\n            horizontalPosition:\"right\",\r\n            verticalPosition:\"top\"\r\n          })\r\n        });\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    console.log('view');\r\n  }\r\n\r\n\r\n  bioTypeChanged(value) {\r\n    console.log('form', value);\r\n    console.log('form', this.kycVerificationForm.get('biometricList')['controls']);\r\n    let data = this.kycVerificationForm.get('biometricList')['controls'];\r\n    let validindex = data.findIndex(i => i.valid == false);\r\n    if (validindex == -1) {\r\n      this.disableFinish = false;\r\n    }\r\n    console.log('ind', validindex);\r\n  }\r\n  // openDialogForType(data) {\r\n  //   // this.irisScan = false;\r\n  //   // this.faceScan = false;\r\n  //   // this.biometricScan=false;\r\n    \r\n  //   if (data.bioDocumentType == \"Fingerprint Scan\") {\r\n  //     const dialogRef = this.dialog.open(CutomerFingerPrintComponent, {\r\n  //       data: { bioData: this.biometricData,\r\n  //       customerId:this.refreshCustomerId },\r\n  //       disableClose: true,\r\n  //     });\r\n  //     dialogRef.afterClosed().subscribe((submit) => {\r\n  //       console.log('submit :: ', submit);\r\n  //       this.biometricData = submit.data;\r\n  //       if (this.biometricData.length > 0) {\r\n  //         this.diaplayBioCard = true;\r\n  //         this.biometricScan = false;\r\n  //       } else {\r\n  //         if (submit.isScanned) {\r\n  //           this.biometricScan = true;\r\n  //           this.imageURLBioScan = this.ls.getItem('imageURLBio');\r\n  //           this.diaplayBioCard = false;\r\n  //         }\r\n\r\n  //       }\r\n  //       this.disableFinish = false;\r\n  //     });\r\n  //   }\r\n  //   if (data.bioDocumentType == \"Irish Scan\") {\r\n  //     // IrisScan2Component\r\n  //     const dialogRef = this.dialog.open(KycIrisScanComponent, {\r\n  //       data: { number: \"9656849771\", type: \"Mobile Number\",customerId:this.refreshCustomerId  },\r\n  //       disableClose: true,\r\n  //     });\r\n  //     dialogRef.afterClosed().subscribe((submit) => {\r\n  //       console.log('submit :: ', submit);\r\n  //       if (submit.isScanned) {\r\n  //         this.irisScan = true;\r\n  //         this.imageURLIrish = `${API_URL}/rest/upload/downloadDocs/?fileName=iris_biometric.jpg`;\r\n\r\n  //       } else {\r\n  //         this.irisScan = false;\r\n  //         this.imageURLIrish = '';\r\n  //       }\r\n  //       this.disableFinish = false;\r\n  //     });\r\n  //   }\r\n  //   if (data.bioDocumentType == \"Face Scan\") {\r\n\r\n  //     const dialogRef = this.dialog.open(KycFaceScanComponent, {\r\n  //       data: { number: \"9656849771\", type: \"Mobile Number\" ,customerId:this.refreshCustomerId  },\r\n  //       disableClose: true,\r\n  //     });\r\n  //     dialogRef.afterClosed().subscribe((submit) => {\r\n  //       console.log('submit :: ', submit);\r\n  //       if (submit.isScanned) {\r\n  //         this.faceScan = true;\r\n  //         this.imageURLFace = `${API_URL}/rest/upload/downloadDocs/?fileName=face_biometric.jpg`;\r\n  //       } else {\r\n  //         this.imageURLFace = '';\r\n  //         this.faceScan = false;\r\n  //       }\r\n  //       this.disableFinish = false;\r\n  //     });\r\n  //   }\r\n  //   if (data.bioDocumentType == \"E-Sign\") {\r\n  //     const dialogRef = this.dialog.open(KycEsignComponent, {\r\n  //       data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n  //       disableClose: true,\r\n  //     });\r\n  //     dialogRef.afterClosed().subscribe((submit) => {\r\n  //       console.log('submit :: ', submit);\r\n  //       if (submit.action == 'closed') {\r\n  //         this.eScan = true;\r\n  //       } else {\r\n  //         this.eScan = false;\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  openDialogForType1(e){\r\n    // if (data.bioDocumentType == \"Fingerprint Scan\") {\r\n      const dialogRef = this.dialog.open(CutomerFingerPrintComponent, {\r\n        data: { bioData: this.biometricData,\r\n        customerId:this.refreshCustomerId, verificationType:'kyc' },\r\n        disableClose: true,\r\n        width:'40%'\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n        console.log('submit :: ', submit);\r\n        this.biometricData = submit.data;\r\n        // if (this.biometricData.length > 0) {\r\n        //   this.diaplayBioCard = true;\r\n        //   this.biometricScan = false;\r\n        // } else {\r\n          if (submit.isScanned) {\r\n            this.biometricScan = true;            \r\n            this.imageURLBioScan = 'data:image/bmp;base64,'+this.biometricData.BMPBase64            \r\n            this.diaplayBioCard = false;\r\n            const uploadData = new FormData();\r\n            const file = this.DataURIToBlob(this.imageURLBioScan)\r\n            uploadData.append('file', file, 'image.jpg')\r\n            uploadData.append(\"figName\", \"FINGERPRINT\");\r\n            uploadData.append(\"customerId\", this.customerId);\r\n            uploadData.append(\"verify\", \"kyc-verification\");\r\n            this.apiService.saveOrUpdateBio(uploadData).subscribe((res: any) => {\r\n                this.fingerPrintId = res.id\r\n                this.snack.open('Fingerprint Saved Successfully!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n            });\r\n          }\r\n\r\n        // }\r\n        this.disableFinish = false;\r\n      });\r\n    // }  \r\n  }\r\n\r\n  openDialogForType2(){\r\n    // if (data.bioDocumentType == \"Irish Scan\") {\r\n      // IrisScan2Component\r\n      const dialogRef = this.dialog.open(KycIrisScanComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\",customerId:this.customerId  },\r\n        disableClose: true,\r\n        width:'40%'\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n        console.log('submit :: ', submit);\r\n        if (submit.isScanned) {\r\n          this.irisScan = true;\r\n          this.irisData = submit.data;\r\n          this.imageURLIrish = this.irisData.fileUrl\r\n          const uploadData = new FormData();\r\n          const file = this.DataURIToBlob(this.imageURLIrish)\r\n          uploadData.append('file', file, 'image.jpg')\r\n          uploadData.append(\"figName\", \"IRIS\");\r\n          uploadData.append(\"customerId\", this.customerId);\r\n          uploadData.append(\"verify\", \"kyc-verification\");\r\n          this.apiService.saveOrUpdateBio(uploadData).subscribe((res: any) => {\r\n            if (res && res.fileUrl) {\r\n              this.irisId = res.id\r\n              this.snack.open('IRIS Saved Successfully!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n            }\r\n          });          \r\n          \r\n          // this.imageURLIrish = this.ls.getItem('imageURLIrish')\r\n        } else {\r\n          this.irisScan = false;\r\n          this.imageURLIrish = 'not_available';\r\n        }\r\n        this.disableFinish = false;\r\n      });\r\n    // }\r\n  }\r\n\r\n  openDialogForType3(e){\r\n    // if (data.bioDocumentType == \"Face Scan\") {\r\n      const dialogRef = this.dialog.open(KycFaceScanComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\" ,customerId:this.customerId  },\r\n        disableClose: true,\r\n        width:'40%'\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => {\r\n        if(submit == 'close'){\r\n          return;\r\n        }\r\n        console.log('submit :: ', submit);\r\n        if (submit.isScanned) {\r\n          this.faceScan = true;\r\n          this.imageURLFace = submit.image;\r\n          const uploadData = new FormData();\r\n          const file = this.DataURIToBlob(this.imageURLFace)\r\n          uploadData.append('file', file, 'image.jpg')\r\n          uploadData.append(\"figName\", \"FACE\");\r\n          uploadData.append(\"customerId\", this.customerId);\r\n          uploadData.append(\"verify\", \"kyc-verification\");\r\n          this.apiService.saveOrUpdateBio(uploadData).subscribe((res: any) => {\r\n            if (res && res.fileUrl) {\r\n              this.faceId = res.id\r\n              this.snack.open('Face Saved Successfully!', 'OK', { duration: 4000, verticalPosition: 'top', horizontalPosition: 'right' });\r\n            }\r\n          });\r\n        } else {\r\n          this.imageURLFace = 'not_available';\r\n          this.faceScan = false;\r\n        }\r\n        this.disableFinish = false;\r\n      });\r\n    // }\r\n  }\r\n\r\n\r\n  tabClick(event: MatTabChangeEvent) {\r\n    const tab = event.tab.textLabel;\r\n\r\n    if (tab === \"Documents Upload\") {\r\n      this.router.navigateByUrl(\"/others/documents\");\r\n    }\r\n    if (tab === \"verification\") {\r\n      this.router.navigateByUrl(\"/others/verification\");\r\n    }\r\n    if (tab === \"Basic Information\") {\r\n      this.router.navigateByUrl(\"/others/kyc\");\r\n    }\r\n  }\r\n   DataURIToBlob(dataURI: string) {\r\n    const splitDataURI = dataURI.split(',')\r\n    const byteString = splitDataURI[0].indexOf('base64') >= 0 ? atob(splitDataURI[1]) : decodeURI(splitDataURI[1])\r\n    const mimeString = splitDataURI[0].split(':')[1].split(';')[0]\r\n\r\n    const ia = new Uint8Array(byteString.length)\r\n    for (let i = 0; i < byteString.length; i++)\r\n        ia[i] = byteString.charCodeAt(i)\r\n\r\n    return new Blob([ia], { type: mimeString })\r\n  }\r\n  onNext(kycVerificationForm, arrayForm) {\r\n    // location.reload();\r\n    if(this.imageURLIrish == 'not_available' && this.imageURLBioScan == 'not_available' && this.imageURLFace == 'not_available'){\r\n      return;\r\n    }\r\n    this.kycVerificationForm.reset();\r\n    this.api.setIndex({\r\n      index: 0,\r\n    });\r\n    this.api.setFinishFlag({\r\n      finishFlag: true,\r\n    });\r\n\r\n    this.kycVerificationForm.reset();\r\n    //this.disableFinish = false;\r\n    console.log(this.kycVerificationForm);\r\n    const dialogRef = this.dialog.open(VerificationCompletedComponent, {\r\n      data: { kycRef: this.kycRef,rekyc:false },\r\n      disableClose: true,\r\n      width:'45%'\r\n    });\r\n    dialogRef.afterClosed().subscribe((submit) => { });\r\n  }\r\n  previous() {\r\n    this.api.setIndex({\r\n      index: 1,\r\n    });\r\n    let customerId = localStorage.getItem('customer_id');\r\n    console.log(\"custId::\", localStorage.getItem('customer_id'))\r\n    this.shareDataService.shareCustomerId(customerId);\r\n  }\r\n  changeValue2(value: any, index) {\r\n\r\n    console.log('value :: ', value, ' index:: ', index);\r\n    if (this.DocumentsName[index]) {\r\n      this.selectedOptions2 = this.selectedOptions2.filter(val => val !== this.DocumentsName[index])\r\n    }\r\n    // this.DocumentsName[index] = value;\r\n    this.selectedOptions2.push(value);\r\n    // this.kycVerificationForm.controls.documentType.setValue('');\r\n    // this.arrayDocumentType = this.arrayDocumentType.filter(document => document !== value);\r\n  }\r\n\r\n  isDocumentOptionDisabled2 = (value) => {\r\n    // console.log('selectedOptions2:: ', this.selectedOptions2);\r\n    return this.selectedOptions2.includes(value);\r\n  }\r\n  public onFileChanged(event) {\r\n    this.selectedFiles = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onload = (event2) => {\r\n      this.imgUrl = reader.result;\r\n      this.fun(event.target.files[0], this.selectedFiles);\r\n    };\r\n  }\r\n  fun(event, url) {\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    const data = {\r\n      customerId: this.customerId,\r\n      documentName: \"Profile Image\",\r\n      documentType: \"1\",\r\n      fileType: event.type,\r\n      fileName: event.name,\r\n      verificationType: \"KYC verification\",\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n    this.api.upload(uploadData).subscribe((res) => { });\r\n  }\r\n  fun1(event, url, docName, docType) {\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    console.log(\"this.customerId::\", this.customerId)\r\n    const data = {\r\n      customerId: this.refreshCustomerId,\r\n      documentName: this.kycVerificationForm.value.documentName,\r\n      documentType: \"2\",\r\n      fileType: event.type,\r\n      fileName: event.name,\r\n      verificationType: \"KYC verification\",\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n\r\n    this.api.upload(uploadData).subscribe(\r\n      (res) => { },\r\n      (error) => {\r\n        if (error.status == 201) {\r\n          this.kycVerificationForm.get(\"upload\").patchValue(true);\r\n          this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n  fun2(event, url, docName, docType) {\r\n    const cId: string = this.customerId;\r\n    const uploadData = new FormData();\r\n    console.log(\"this.customerId::\", this.customerId)\r\n    const data = {\r\n      customerId: this.refreshCustomerId,\r\n      documentName: docName,\r\n      documentType: \"2\",\r\n      fileType: event.type,\r\n      fileName: event.name,\r\n      verificationType: \"KYC verification\",\r\n    };\r\n    uploadData.append(\"data\", JSON.stringify(data));\r\n    uploadData.append(\"file\", url);\r\n\r\n    this.api.upload(uploadData).subscribe(\r\n      (res) => {\r\n        console.log(\"res\", res);\r\n      },\r\n      (error) => {\r\n        if (error.status == 201) {\r\n          this.kycVerificationForm.get(\"upload\").patchValue(true);\r\n          this.snack.open(\"Document Uploaded!\", \"OK\", {\r\n            duration: 4000,\r\n            verticalPosition: \"top\",\r\n            horizontalPosition: \"right\",\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public onUpload(event, KycForm) {\r\n    this.selectedFiles = event.target.files[0];\r\n    console.log(this.selectedFiles);\r\n    this.fileName = this.selectedFiles.name\r\n    console.log(this.fileName);\r\n    this.kycVerificationForm.controls.documentType.patchValue(this.fileName);\r\n    console.log(\"doo\", this.kycVerificationForm.controls.documentType.patchValue(this.fileName))\r\n    console.log(this.fileName)\r\n    this.fun1(event.target.files[0], this.selectedFiles, KycForm.documentName, KycForm.documentType);\r\n    // Below part is used to display the selected image\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.readAsText(this.selectedFiles);\r\n\r\n    reader.onload = (event2) => {\r\n      this.fileUrl = reader.result;\r\n    };\r\n  }\r\n\r\n  public onUpload1(event, KycForm, index) {\r\n    var kyc = KycForm.documentsList[index].documentName;\r\n    this.selectedFiles = event.target.files[0];\r\n    this.fun2(event.target.files[0], this.selectedFiles, kyc, KycForm.documentType);\r\n    this.fileName = this.selectedFiles.name;\r\n    KycForm.documentsList[index].documentType = this.fileName;\r\n    console.log(this.fileName);\r\n    this.kycVerificationForm.controls.documentsList['controls'][index].controls.documentType.setValue(this.fileName)\r\n\r\n    // for(let i=0;i<KycForm.documentsList.length;i++)\r\n    // {console.log(\"in loop\",i);\r\n    //   console.log(this.kycVerificationForm.controls.documentsList['controls'][i].controls.documentType.setValue(this.fileName));\r\n    // }\r\n    // this.kycVerificationForm.get('documentsList').patchValue([{\r\n    //   documentType:this.fileName\r\n    // }]);\r\n    console.log(\"this\", this.kycVerificationForm.get('documentsList').value);\r\n\r\n\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.readAsText(this.selectedFiles);\r\n\r\n    reader.onload = (event2) => {\r\n      this.fileUrl = reader.result;\r\n    };\r\n  }\r\n\r\n  toMakeButton() {\r\n    document.getElementById(\"fileId\").click();\r\n  }\r\n\r\n  openDialog() {\r\n    this.a = this.kycVerificationForm.get(\"bioDocumentName\").value;\r\n\r\n    if (this.a == \"Finger Print\") {\r\n      const dialogRef = this.dialog.open(KycVerificationMethodComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => { });\r\n    }\r\n    if (this.a == \"Iris Scan\") {\r\n      const dialogRef = this.dialog.open(KycIrisScanComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => { });\r\n    }\r\n    if (this.a == \"E-Sign\") {\r\n      const dialogRef = this.dialog.open(KycEsignComponent, {\r\n        data: { number: \"9656849771\", type: \"Mobile Number\" },\r\n        disableClose: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe((submit) => { });\r\n    }\r\n  }\r\n\r\n  handleFileInput(file: FileList) {\r\n    this.fileToUpload = file.item(0);\r\n\r\n    //Show image preview\r\n    let reader = new FileReader();\r\n    reader.onload = (event: any) => {\r\n      this.imageUrl = event.target.result;\r\n    };\r\n    reader.readAsDataURL(this.fileToUpload);\r\n  }\r\n\r\n  uploadFile(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    reader.onload = () => {\r\n      this.fileUrl = reader.result;\r\n\r\n      this.kycVerificationForm.patchValue({\r\n        file: reader.result,\r\n      });\r\n\r\n      this.editFile = false;\r\n      // this.removeUpload = true;\r\n    };\r\n    // ChangeDetectorRef since file is loading outside the zone\r\n  }\r\n\r\n  // Function to remove uploaded file\r\n  removeUploadedFile() { }\r\n  addAccClass() {\r\n    let doc = new DocData();\r\n    this.docData.push(doc);\r\n  }\r\n  removeRow(index) {\r\n    console.log(index);\r\n    (<FormArray>this.kycVerificationForm.get(\"documentsList\")).removeAt(index);\r\n  }\r\n\r\n  initGroup() {\r\n    let rows = this.arrayForm.get(\"rows\") as FormArray;\r\n    rows.push(\r\n      this.fb.group({\r\n        id: [\"\"],\r\n        documentName: [\"\", [Validators.required]],\r\n        documentType: [\"\", [Validators.required]],\r\n      })\r\n    );\r\n  }\r\n  getDoc() {\r\n    this.dropVariableDoc = \"document_type\";\r\n    this.docName = \"document_name\";\r\n    this.bioName = \"biometrics_Name\";\r\n    this.bioType = \"biometrics_Type\";\r\n\r\n    this.api.getDropDownValues(this.dropVariableDoc).subscribe((data) => {\r\n      this.Documents = data;\r\n    });\r\n    this.api.getDropDownValues(this.docName).subscribe((resp) => {\r\n      this.DocumentsName = resp;\r\n\r\n    });\r\n    this.api.getDropDownValues(this.bioName).subscribe((response) => {\r\n      this.biometrics_Name = response;\r\n    });\r\n    this.api.getDropDownValues(this.bioType).subscribe((responseData) => {\r\n      this.biometrics_Type = responseData;\r\n    });\r\n  }\r\n  check(docData) { }\r\n  radioChange(event) {\r\n    if (event.value == 1) {\r\n      this.billing = true;\r\n    }\r\n    if (event.value == 2) {\r\n      this.billing = false;\r\n    }\r\n  }\r\n\r\n  onScan() {\r\n    this.fingerPrintService\r\n      .CallingSGIFPGetData()\r\n      .subscribe((capFingerPrint) => { });\r\n  }\r\n  SuccessFunc(result) {\r\n    if (result.ErrorCode == 0) {\r\n      /* \tDisplay BMP data in image tag\r\n          BMP data is in base 64 format \r\n      */\r\n      // if (result != null && result.BMPBase64.length > 0) {\r\n      //   document.getElementById(\"FPImage1\").src = \"data:image/bmp;base64,\" + result.BMPBase64;\r\n      // }\r\n    }\r\n  }\r\n  addDocs() {\r\n    this.documentsList = this.kycVerificationForm.get('documentsList') as FormArray;\r\n    this.documentsList.push(this.createItem());\r\n  }\r\n  loadBioDefault(count) {\r\n    this.biometricList = this.kycVerificationForm.get('biometricList') as FormArray;\r\n    for (let index = 0; index < count; index++) {\r\n      this.biometricList.push(this.createBioItem());\r\n    }\r\n  }\r\n\r\n  addBioDocs() {\r\n    this.biometricList = this.kycVerificationForm.get('biometricList') as FormArray;\r\n    this.biometricList.push(this.createBioItem());\r\n  }\r\n  addBioDocsData(data, type, fileUrl) {\r\n    console.log('in add bio docs :: ', data, type);\r\n    if (data != '') {\r\n      this.biometricList = this.kycVerificationForm.get('biometricList') as FormArray;\r\n      this.biometricList.push(this.createBioItemData(data, type, fileUrl));\r\n      console.log('this.biometricList :: ', this.biometricList)\r\n      // this.kycVerificationForm.get('biometricList').patchValue(this.createBioItemData(data, type));\r\n      // console.log('this.kycVerificationForm :: ', this.kycVerificationForm)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.shareDataService.shareCustomerId(null);\r\n  }\r\n  patchData() {\r\n\r\n  }\r\n\r\n  changeValue(event:any)\r\n  {\r\n    this.disableFinish=true;\r\n  }\r\n\r\n}\r\n\r\nexport interface DialogData {\r\n  animal: \"\";\r\n}\r\n\r\nexport class OtpModel {\r\n  source_key: any;\r\n  source_value: any;\r\n  source: any;\r\n}\r\nexport class OtpModelUpdate {\r\n  sourceKey: any;\r\n  sourceValue: any;\r\n  otp: any;\r\n  type: any;\r\n}\r\n","<div class=\"m-333\" style=\"padding-left: 4.5%; padding-right: 4.5%;\">\r\n    <mat-card class=\"matCard\">\r\n        <!-- <form [formGroup]=\"kycVerificationForm\"> -->\r\n            <!-- <h2 class=\"verificationHead\">Verification</h2>\r\n            <hr class=\"line\"> -->\r\n            <!-- <div class=\"spanDiv\">\r\n                <span class=\"span\">Additional Documents\r\n    \r\n                </span>\r\n                <mat-divider class=\"divider\"></mat-divider>\r\n            </div>\r\n             -->\r\n            <!-- <div class=\"spanDiv\" id=\"docMainDivider\">\r\n                <div id=\"dividerInside\">\r\n                    <span class=\"span\">Additional Documents\r\n                    </span>\r\n                    <mat-divider class=\"divider\"></mat-divider>\r\n                </div>\r\n                <div id=\"dividerInside\">\r\n                    <span class=\"span\">\r\n                        Biometric Verification\r\n                    </span>\r\n                    <mat-divider class=\"divider\"></mat-divider>\r\n                </div>\r\n            </div> -->\r\n    \r\n            <!-- ******************************************* -->\r\n            <!-- <div class=\"flex flex-wrap gap-20\"> -->\r\n    \r\n            <!--Document Section-->\r\n            <!--   \r\n                <div class=\"flex flex-grow-1 flex-wrap flex-column gap-20\" id=\"DocumentForm\">\r\n                    <span class=\"span\">Additional Documents\r\n                        <mat-divider class=\"divider\"></mat-divider>\r\n                    </span>\r\n                -->\r\n            <!-- Document Name -->\r\n            <!-- <div class=\"flex wrap justify-between\">\r\n                        <div class=\"m-8\">\r\n                            <mat-hint>Document Type*</mat-hint>\r\n                            <mat-card class=\"inputMatcardDoc\"\r\n                            [ngClass]=\"{'errbd': !kycVerificationForm.get('documentName').valid && \r\n                            kycVerificationForm.get('documentName').touched}\">\r\n                                <mat-select formControlName=\"documentName\" id=\"docName\">\r\n                                    <mat-option value=\"\">Select</mat-option>\r\n                                    <mat-option *ngFor=\"let Doc of DocumentsName\" [value]=\"Doc\">{{Doc}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n    \r\n                            <mat-error *ngIf=\"!kycVerificationForm.get('documentName').valid &&\r\n                                              kycVerificationForm.get('documentName').touched\">\r\n                            Please Select Document Name</mat-error>\r\n    \r\n                        </div>\r\n    \r\n                        <div class=\"flex justify-between\">\r\n                            <div class=\"m-8\">\r\n                                <mat-hint>Document Name*</mat-hint>\r\n                                <mat-card  style=\"height:40px;\"\r\n                                [ngClass]=\"{'errbd': !kycVerificationForm.get('documentType').valid && \r\n                            kycVerificationForm.get('documentType').touched}\">\r\n    \r\n                                    <input  matInput id=\"docType\" formControlName=\"documentType\"> \r\n                                    <mat-select formControlName=\"documentType\" id=\"docType\">\r\n                                        \r\n                   <mat-option *ngFor=\"let Document of Documents\" [value]=\"Document\">{{Document}}\r\n                                        </mat-option>\r\n                                    </mat-select> \r\n                                </mat-card>\r\n    \r\n                                <mat-error *ngIf=\"!kycVerificationForm.get('documentType').valid &&\r\n                                kycVerificationForm.get('documentType').touched\">\r\n                                Please Select Document Type</mat-error>\r\n    \r\n                            </div>\r\n                          <button class=\"height-auto align-self-flex-end\">Upload</button> -\r\n                            <div class=\"Upload changeDiv\">\r\n                                Upload<input type=\"file\" input type=\"file\" class=\"changeInput\"\r\n    \r\n                                    (click)=\"check(kycVerificationForm.value)\">\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n            <!-- (change)=\"onUpload($event,kycVerificationForm.value)\" -->\r\n    \r\n            <!--Dynamic row here-->\r\n    \r\n    \r\n            <!-- dnamc row vidya issue -->\r\n            <!--\r\n                    <div fxLayout=\"row wrap\"  formArrayName=\"documentsList\" \r\n                    *ngFor=\"let item of kycVerificationForm.get('documentsList')['controls']; let i = index;\">\r\n                        <div fxFlex=\"100\"  [formGroupName]=\"i\">\r\n                            <div fxFlex=\"20\">\r\n                                    <mat-hint>Document Name*</mat-hint>\r\n                                    <mat-card class=\"inputMatcardDoc\">\r\n                                        <mat-select formControlName=\"documentName\" id=\"docName\"\r\n                                        (optionSelected)=\"changeValue2($event, i)\"\r\n                                         (valueChange)=\"changeValue2($event, i)\">\r\n                                            <mat-option *ngFor=\"let Doc of DocumentsName\"  \r\n                                             [value]=\"Doc\"\r\n                                             [disabled] = isDocumentOptionDisabled2(Doc)>{{Doc}}</mat-option>\r\n                                        </mat-select>\r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.controls.documentName.touched && !item.controls.documentName.valid\">\r\n                                        Please Select Document Type\r\n                                      </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"65\">\r\n                                <mat-hint>Document Type*</mat-hint>\r\n                                <mat-card  style=\"height:40px; width: 90%;\" title=\" {{item.controls.documentType.value}}\">\r\n                                    <input  matInput id=\"docType\" formControlName=\"documentType\"> \r\n                                    </mat-card>\r\n                                    <mat-error *ngIf=\"item.controls.documentType.touched && !item.controls.documentType.valid\">\r\n                                            Please Select Document Name\r\n                                    </mat-error>\r\n                            </div>\r\n                            <div fxFlex=\"10%\" fxFlex.xs=\"100%\">\r\n                                <div fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding: 3rem 2rem;\">\r\n                                    <input style=\"display: none;\"\r\n                                        type=\"file\" name=\"fileData\"\r\n                                        #fileData\r\n                                        formControlName=\"fileData\"\r\n                                        (change)=\"onUpload1($event,kycVerificationForm.value,i)\">\r\n                                    <a style=\"text-decoration: underline; color:#456EFE;\"\r\n                                        (click)=\"fileData.click()\"\r\n                                        [routerLink]=\"\">Upload</a> &nbsp;&nbsp;&nbsp;\r\n                                        <mat-icon (click)=\"deleteAdditionalDoc(item.value,i)\" class=\"backIcon\">delete</mat-icon>\r\n                                        \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                <div id=\"row\" (click)=\"addDocs()\">\r\n    \r\n                        ADD NEW\r\n                    </div> -->\r\n            <!--  <div id=\"row\" (click)=\"addDocs()\" >\r\n                        <button mat-raised-button color=\"primary\">\r\n                        <mat-icon>add</mat-icon> ADD NEW\r\n                    </button>\r\n                    </div>  -->\r\n    \r\n            <!-- </div> -->\r\n    \r\n            <br>\r\n            \r\n            <!-- <mat-hint>Biometric Verification*</mat-hint> -->\r\n    \r\n            <table>\r\n                <tbody>\r\n                    <tr fxLayout=\"row\" fxLayoutGap=\"20px\">\r\n                      <!-- <td style=\"width: 300px;\">\r\n                            <mat-card class=\"inputMatcardDoc\">\r\n                                <mat-select formControlName=\"bioDocumentType\" id=\"bioName\">\r\n                                    <mat-option value=\"\">Select</mat-option>\r\n                                    <mat-option *ngFor=\"let biometric of biometrics_Type\" [value]=\"biometric\"\r\n                                     [disabled]=isDocumentOptionDisabled2(biometric) (click)=\"changeValue($event)\" > {{biometric}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-card>\r\n                            <mat-error\r\n                                *ngIf=\"item.controls.bioDocumentType.touched && !item.controls.bioDocumentType.valid\">\r\n                                Please Select Biometric Type\r\n                            </mat-error>\r\n                        </td> -->\r\n                        <td>\r\n                            <mat-card class=\"flex-grow-2 mat-card-doc\" fxLayout=\"column\">\r\n                            <mat-card class=\"inner-mat-card\">\r\n                                <div fxLayout=\"row\" [fxLayoutAlign]=\"imageURLBioScan != 'not_available' ? 'space-between center' : 'end center'\">\r\n                                    <ng-container *ngIf=\"imageURLBioScan != 'not_available'\"\r\n                                        >\r\n                                        <mat-icon style=\"color:green; cursor: pointer; padding-left: 5px;\">check_circle\r\n                                        </mat-icon>\r\n                                    </ng-container>\r\n                                        \r\n                                        <div class=\"deleteDiv\" fxLayoutAlign=\"center center\">\r\n                                            <mat-icon\r\n                                            [ngClass]=\"imageURLBioScan == 'not_available' ? 'deleteBtnDisabled':'deleteBtn'\"\r\n                                            (click)=\"deleteBioMetric('fingerprint')\">\r\n                                            delete\r\n                                        </mat-icon>\r\n                                        </div>\r\n                                            \r\n                                        \r\n                                \r\n                                        <!-- <mat-icon\r\n                                            style=\"margin-left: 85%;color: red; cursor: pointer;\"\r\n                                            (click)=\"deleteBioMetric(item.value,i)\">\r\n                                            delete\r\n                                        </mat-icon> -->\r\n                                </div>\r\n                                <div class=\"insertDriveImg\" fxLayoutAlign=\"center center\">\r\n                                    <div\r\n                                    *ngIf=\"imageURLBioScan == 'not_available' || imageURLBioScan == null; else showAvatar\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\r\n                                        <img class=\"finger-print-icon\" [src]=\"'assets/images/svg/fingerPrint.svg'\" alt=\"\" >\r\n                                    </div>\r\n                                    <ng-template #showAvatar>\r\n                                        <img [src]=\"imageURLBioScan\" alt=\"\" style=\"max-width:60%;\">\r\n                                    </ng-template>\r\n                                </div>\r\n                                <div class=\"dived\">\r\n                                    <mat-label style=\"margin-left: 20%; color: gray; font-family: Manrope;\">Fingerprint Scan\r\n                                    </mat-label>\r\n                                    <br>\r\n                                </div>\r\n                            </mat-card>\r\n                            \r\n                            <div style=\"display: flex; height: 30px; padding: 10px;\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\r\n                                <span class=\"scanButton\" *ngIf=\"imageURLBioScan == 'not_available'; else reScanbtn\"  \r\n                                    (click)=\"openDialogForType1($event)\">Scan\r\n                            </span>\r\n                            <ng-template #reScanbtn>\r\n                                <span class=\"scanButton\"  \r\n                                    (click)=\"openDialogForType1($event)\">Re-Scan\r\n                            </span>\r\n                            </ng-template>\r\n                            </div>\r\n                            \r\n                            </mat-card>\r\n                        </td>\r\n                        <td>\r\n                            <mat-card class=\"flex-grow-2 mat-card-doc\"fxLayout=\"column\"\r\n                            >\r\n                            <mat-card class=\"inner-mat-card\">\r\n                                <div fxLayout=\"row\" [fxLayoutAlign]=\"imageURLIrish != 'not_available' ? 'space-between center' : 'end center'\">\r\n                                    <ng-container *ngIf=\"imageURLIrish != 'not_available'\"\r\n                                        >\r\n                                        <mat-icon style=\"color:green; cursor: pointer; padding-left: 5px;\">check_circle\r\n                                        </mat-icon>\r\n                                    </ng-container>\r\n                                    <div class=\"deleteDiv\" fxLayoutAlign=\"center center\">\r\n                                        <mat-icon\r\n                                            [ngClass]=\"imageURLIrish == 'not_available' ? 'deleteBtnDisabled':'deleteBtn'\"\r\n                                            (click)=\"deleteBioMetric('iris')\">\r\n                                            delete\r\n                                        </mat-icon>\r\n                                    </div>\r\n                                    <!-- <ng-container\r\n                                        >\r\n                                        <mat-icon\r\n                                            style=\"margin-left: 85%;color: red; cursor: pointer;\"\r\n                                            (click)=\"deleteBioMetric(item.value,i)\">\r\n                                            delete\r\n                                        </mat-icon>\r\n                                    </ng-container> -->\r\n                                </div>\r\n                                <div class=\"insertDriveImg\" fxLayoutAlign=\"center center\">\r\n                                    <div *ngIf=\"imageURLIrish == 'not_available'; else showIris\"  fxLayoutAlign=\"center center\">\r\n                                        <img [src]=\"'assets/images/svg/irish.svg'\" alt=\"\" class=\"finger-print-icon\">\r\n                                    </div>\r\n                                    <ng-template #showIris>\r\n                                        <img [src]=\"imageURLIrish\" alt=\"\" style=\"max-width:80%;\">\r\n                                    </ng-template>\r\n                                </div>\r\n                                <div class=\"dived\">\r\n                                    <mat-label style=\"margin-left: 35%; color: gray; font-family: Manrope;\">Irish Scan\r\n                                    </mat-label>\r\n                                    <br>\r\n                                </div>\r\n                            </mat-card>\r\n                            \r\n                            <div style=\"display: flex; height: 30px; padding: 10px;\" fxFlex=\"100\" fxLayoutAlign=\"center center\" >\r\n                                <span class=\"scanButton\" *ngIf=\"imageURLIrish == 'not_available' ; else reScanIris\" \r\n                                    (click)=\"openDialogForType2()\">Scan\r\n                            </span>\r\n                            <ng-template #reScanIris>\r\n                                <span class=\"scanButton\" \r\n                                (click)=\"openDialogForType2()\"> Re-Scan\r\n                        </span>\r\n                            </ng-template>\r\n                            </div>\r\n                            \r\n                        </mat-card>\r\n                        </td>    \r\n                        <td>\r\n                            <mat-card class=\"flex-grow-2 mat-card-doc\" fxLayout=\"column\"\r\n                            >\r\n                            \r\n                            <mat-card class=\"inner-mat-card\">\r\n                                <div fxLayout=\"row\" [fxLayoutAlign]=\"imageURLFace != 'not_available' ? 'space-between center' : 'end center'\">\r\n                                    <ng-container *ngIf=\"imageURLFace != 'not_available'\"\r\n                                        >\r\n                                        <mat-icon style=\"color:green; cursor: pointer; padding-left: 5px;\">check_circle\r\n                                        </mat-icon>\r\n                                    </ng-container>\r\n                                    <div class=\"deleteDiv\" fxLayoutAlign=\"center center\"\r\n                                        >\r\n                                        <mat-icon\r\n                                        [ngClass]=\"imageURLFace == 'not_available' ? 'deleteBtnDisabled':'deleteBtn'\"\r\n                                            (click)=\"deleteBioMetric('face')\">\r\n                                            delete\r\n                                        </mat-icon>\r\n                                    </div>\r\n                                    <!-- <ng-container\r\n                                        >\r\n                                            <mat-icon\r\n                                            style=\"margin-left: 85%;color: red; cursor: pointer;\"\r\n                                            (click)=\"deleteBioMetric(item.value,i)\">\r\n                                            delete\r\n                                        </mat-icon>                                        \r\n                                    </ng-container> -->\r\n                                </div>\r\n                                <div class=\"insertDriveImg\"  fxLayoutAlign=\"center center\">\r\n                                    <div *ngIf=\"imageURLFace == 'not_available'; else showFace\"  fxLayoutAlign=\"center center\">\r\n                                        <img [src]=\"'assets/images/svg/face.svg'\" alt=\"\">\r\n                                    </div>\r\n                                    <ng-template #showFace>\r\n                                        <img [src]=\"imageURLFace\" alt=\"\" style=\"max-width:80%;\">\r\n                                    </ng-template>\r\n                                </div>\r\n                                <div class=\"dived\">\r\n                                    <mat-label style=\"margin-left: 35%; color: gray; font-family: Manrope;\">Face Scan\r\n                                    </mat-label>\r\n                                    <br>\r\n                                </div>\r\n                            </mat-card>\r\n                            \r\n                            <div style=\"display: flex; height: 30px; padding: 10px;\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\r\n                                <span class=\"scanButton\" *ngIf=\"imageURLFace == 'not_available'; else reScanFace\"  \r\n                                    (click)=\"openDialogForType3()\">Scan\r\n                            </span>\r\n                            <ng-template #reScanFace>\r\n                                <span class=\"scanButton\"  \r\n                                (click)=\"openDialogForType3()\">Re-Scan\r\n                        </span>\r\n                            </ng-template>\r\n                                \r\n                            </div>\r\n                            \r\n                        </mat-card>\r\n                        </td>\r\n                        <!-- <td style=\"width: 300px; margin: 20px; padding: 30px;\">\r\n                            <button mat-raised-button (click)=\"openDialogForType(item.value)\"\r\n                                style=\"color: cornflowerblue;\">Scan</button>&nbsp;&nbsp;\r\n    \r\n                            <button mat-raised-button (click)=\"deleteBioMetric(item.value,i)\">\r\n                                <mat-icon class=\"backIcon\">delete</mat-icon>\r\n                            </button>\r\n    \r\n                        </td> -->\r\n                        <!-- <td style=\"width: 300px;\">\r\n                            <div *ngIf=\"biometricData.length >0 && diaplayBioCard && item.controls.bioDocumentType.value=='Fingerprint Scan' \">\r\n                                <mat-card fxFlex=\"30%\" id=\"clr\" *ngFor=\"let item of biometricData ; let i = index;\"\r\n                                    style=\"margin: 0px; padding: 0px; margin-right: 10px;\">\r\n                                    <p   style=\"margin:00px; padding: 0px; text-align: center;\">{{item.fingerName}}</p>\r\n                                    <img [src]=\"'data:image/jpg;base64,'+item.image\" />\r\n                                </mat-card>\r\n                            </div>\r\n    \r\n                            <div *ngIf=\"biometricScan && item.controls.bioDocumentType.value=='Fingerprint Scan' \">\r\n                                <div *ngIf=\"imageURLBioScan == 'not_available'; else showAvatar\">\r\n                                    <img class=\"formImg\" [src]=\"'assets/images/svg/fingerprint.svg'\" alt=\"\">\r\n                                </div>\r\n                                <ng-template #showAvatar>\r\n                                    <img class=\"formImg\" [src]=\"imageURLBioScan\" alt=\"\">\r\n                                </ng-template>\r\n                            </div>\r\n                            <div *ngIf=\"irisScan  && item.controls.bioDocumentType.value=='Irish Scan'\">\r\n                                 \r\n                                    <div *ngIf=\"imageURLIrish == 'not_available' || imageURLIrish == null ; else showAvatar\">\r\n                                        <img class=\"formImg\" [src]=\"'assets/images/svg/irish.svg'\" alt=\"\">\r\n                                    </div>\r\n                                    <ng-template #showAvatar>\r\n                                        <img class=\"formImg\" [src]=\"imageURLIrish\" alt=\"\">\r\n                                    </ng-template>\r\n                                 \r\n                            </div>\r\n    \r\n                            <div *ngIf=\"faceScan  && item.controls.bioDocumentType.value=='Face Scan'\">\r\n                                \r\n                                    <div *ngIf=\"imageURLFace == 'not_available' || imageURLFace == null; else showAvatar\">\r\n                                        <img class=\"formImg\" [src]=\"'assets/images/svg/face.svg'\" alt=\"\">\r\n                                    </div>\r\n                                    <ng-template #showAvatar>\r\n                                        <img class=\"formImg\" [src]=\"imageURLFace\" alt=\"\">\r\n                                    </ng-template>\r\n                                \r\n                            </div>\r\n    \r\n                            <div *ngIf=\"eScan  && item.controls.bioDocumentType.value=='E-Sign'\">\r\n                                <mat-card fxFlex=\"30%\" id=\"clr\" style=\"margin: 0px; padding: 0px;\">\r\n                                    <img class=\"formImg\" [src]=\"'assets/images/no-image.jpg'\" alt=\"\">\r\n                                </mat-card>\r\n                            </div>\r\n                        </td> -->\r\n                    </tr>\r\n                </tbody>\r\n    \r\n    \r\n            </table>\r\n    \r\n            <!-- <table>\r\n                <tr>\r\n                    <td>\r\n                        <button mat-raised-button (click)=\"addBioDocs()\" [disabled]=\"disableAddAndDelete\">\r\n    \r\n    \r\n                        <mat-icon color=\"primary\">add</mat-icon>\r\n    \r\n    \r\n                        </button>\r\n                        \r\n                    </td>\r\n                </tr>\r\n            </table> -->\r\n    \r\n    \r\n        <!-- </form> -->\r\n    </mat-card>\r\n    \r\n    <!-- <div class=\"button\">\r\n    \r\n        <button mat-button class=\"Back\" (click)=\"previous()\">Back</button>\r\n        <button mat-stroked-button class=\"Next\" (click)=\"onNext(kycVerificationForm.value,arrayForm.value)\"\r\n            [disabled]=\"!kycVerificationForm.valid || !kycVerificationForm.get('biometricList').valid || disableFinish\">Finish</button> \r\n        <!-- <button mat-stroked-button class=\"Next\" (click)=\"onNext(kycVerificationForm.value,arrayForm.value)\"\r\n            [disabled]=\"!kycVerificationForm.valid || !kycVerificationForm.get('biometricList').valid || disableFinish\r\n            || !arrayForm.valid || disableAddAndDelete\">Finish</button>   \r\n            <!-- [disabled]=\"!kycVerificationForm.valid || kycVerificationForm.get('biometricList').invalid\" \r\n    </div> -->\r\n    \r\n</div>\r\n\r\n<div class=\"button\">\r\n    <span class=\"Back\"  (click)=\"previous()\">Back</span>\r\n    <!-- <p> {{disableNext}} </p> -->\r\n    <!-- <button mat-stroked-button [ngClass]=\"{'Next':(!kycVerificationForm.valid || !kycVerificationForm.get('biometricList').valid || disableFinish), \r\n    'Next1':!(!kycVerificationForm.valid || !kycVerificationForm.get('biometricList').valid || disableFinish)}\" \r\n    (click)=\"onNext(kycVerificationForm.value,arrayForm.value)\"\r\n    ><span style=\"color: white\">Finish</span></button> -->\r\n    <button mat-stroked-button [ngClass]=\"imageURLIrish == 'not_available' && imageURLBioScan == 'not_available' && imageURLFace == 'not_available' ? 'Next' : 'Next1'\" \r\n    (click)=\"onNext(kycVerificationForm.value,arrayForm.value)\"\r\n    ><span style=\"color: white\">Finish</span></button>\r\n</div>"]}